

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 14:56:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	text87,local,class=CODE,merge=1,delta=2
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110     0000                     
   111                           ; Generated 07/09/2023 GMT
   112                           ; 
   113                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F1618 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     0111                     	;# 
   202     0112                     	;# 
   203     0113                     	;# 
   204     0114                     	;# 
   205     0115                     	;# 
   206     0116                     	;# 
   207     0117                     	;# 
   208     0118                     	;# 
   209     0119                     	;# 
   210     011C                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     018E                     	;# 
   214     0191                     	;# 
   215     0191                     	;# 
   216     0192                     	;# 
   217     0193                     	;# 
   218     0193                     	;# 
   219     0194                     	;# 
   220     0195                     	;# 
   221     0196                     	;# 
   222     0197                     	;# 
   223     0199                     	;# 
   224     0199                     	;# 
   225     0199                     	;# 
   226     019A                     	;# 
   227     019A                     	;# 
   228     019A                     	;# 
   229     019B                     	;# 
   230     019B                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019B                     	;# 
   234     019C                     	;# 
   235     019C                     	;# 
   236     019C                     	;# 
   237     019D                     	;# 
   238     019D                     	;# 
   239     019D                     	;# 
   240     019E                     	;# 
   241     019E                     	;# 
   242     019E                     	;# 
   243     019F                     	;# 
   244     019F                     	;# 
   245     019F                     	;# 
   246     019F                     	;# 
   247     019F                     	;# 
   248     020C                     	;# 
   249     020D                     	;# 
   250     020E                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0215                     	;# 
   263     0216                     	;# 
   264     0216                     	;# 
   265     0217                     	;# 
   266     0217                     	;# 
   267     028C                     	;# 
   268     028D                     	;# 
   269     028E                     	;# 
   270     0291                     	;# 
   271     0291                     	;# 
   272     0292                     	;# 
   273     0293                     	;# 
   274     0294                     	;# 
   275     0298                     	;# 
   276     0298                     	;# 
   277     0299                     	;# 
   278     029A                     	;# 
   279     029B                     	;# 
   280     029E                     	;# 
   281     030C                     	;# 
   282     030D                     	;# 
   283     030E                     	;# 
   284     038C                     	;# 
   285     038D                     	;# 
   286     038E                     	;# 
   287     0391                     	;# 
   288     0392                     	;# 
   289     0393                     	;# 
   290     0394                     	;# 
   291     0395                     	;# 
   292     0396                     	;# 
   293     0397                     	;# 
   294     0398                     	;# 
   295     0399                     	;# 
   296     040E                     	;# 
   297     0413                     	;# 
   298     0413                     	;# 
   299     0414                     	;# 
   300     0414                     	;# 
   301     0415                     	;# 
   302     0416                     	;# 
   303     0417                     	;# 
   304     0418                     	;# 
   305     041A                     	;# 
   306     041A                     	;# 
   307     041B                     	;# 
   308     041B                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     041F                     	;# 
   313     0493                     	;# 
   314     0494                     	;# 
   315     0495                     	;# 
   316     0496                     	;# 
   317     049A                     	;# 
   318     049B                     	;# 
   319     049C                     	;# 
   320     049D                     	;# 
   321     058C                     	;# 
   322     058C                     	;# 
   323     058D                     	;# 
   324     058E                     	;# 
   325     058E                     	;# 
   326     058F                     	;# 
   327     0590                     	;# 
   328     0590                     	;# 
   329     0591                     	;# 
   330     0592                     	;# 
   331     0592                     	;# 
   332     0593                     	;# 
   333     0594                     	;# 
   334     0594                     	;# 
   335     0595                     	;# 
   336     0596                     	;# 
   337     0596                     	;# 
   338     0597                     	;# 
   339     0598                     	;# 
   340     0599                     	;# 
   341     059A                     	;# 
   342     059B                     	;# 
   343     059B                     	;# 
   344     059C                     	;# 
   345     059D                     	;# 
   346     060C                     	;# 
   347     060C                     	;# 
   348     060D                     	;# 
   349     060E                     	;# 
   350     060F                     	;# 
   351     060F                     	;# 
   352     0610                     	;# 
   353     0611                     	;# 
   354     0612                     	;# 
   355     0613                     	;# 
   356     0614                     	;# 
   357     0617                     	;# 
   358     0617                     	;# 
   359     0618                     	;# 
   360     0619                     	;# 
   361     061A                     	;# 
   362     061A                     	;# 
   363     061B                     	;# 
   364     061C                     	;# 
   365     0691                     	;# 
   366     0692                     	;# 
   367     0693                     	;# 
   368     0694                     	;# 
   369     0695                     	;# 
   370     0696                     	;# 
   371     0697                     	;# 
   372     0699                     	;# 
   373     069A                     	;# 
   374     0711                     	;# 
   375     0712                     	;# 
   376     0713                     	;# 
   377     0714                     	;# 
   378     0715                     	;# 
   379     0718                     	;# 
   380     0718                     	;# 
   381     0719                     	;# 
   382     071A                     	;# 
   383     071A                     	;# 
   384     071B                     	;# 
   385     071C                     	;# 
   386     071D                     	;# 
   387     0791                     	;# 
   388     0791                     	;# 
   389     0792                     	;# 
   390     0793                     	;# 
   391     0793                     	;# 
   392     0794                     	;# 
   393     0795                     	;# 
   394     0795                     	;# 
   395     0796                     	;# 
   396     0797                     	;# 
   397     0797                     	;# 
   398     0798                     	;# 
   399     0799                     	;# 
   400     079A                     	;# 
   401     080C                     	;# 
   402     080C                     	;# 
   403     080D                     	;# 
   404     080E                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0810                     	;# 
   409     0811                     	;# 
   410     0812                     	;# 
   411     0812                     	;# 
   412     0813                     	;# 
   413     0814                     	;# 
   414     0815                     	;# 
   415     0816                     	;# 
   416     0817                     	;# 
   417     0818                     	;# 
   418     0819                     	;# 
   419     081A                     	;# 
   420     081A                     	;# 
   421     081B                     	;# 
   422     081C                     	;# 
   423     081C                     	;# 
   424     081D                     	;# 
   425     088C                     	;# 
   426     088D                     	;# 
   427     088E                     	;# 
   428     088F                     	;# 
   429     088F                     	;# 
   430     0890                     	;# 
   431     0891                     	;# 
   432     0892                     	;# 
   433     0893                     	;# 
   434     0893                     	;# 
   435     0894                     	;# 
   436     0895                     	;# 
   437     0896                     	;# 
   438     0897                     	;# 
   439     0897                     	;# 
   440     0898                     	;# 
   441     0899                     	;# 
   442     0D8C                     	;# 
   443     0D8C                     	;# 
   444     0D8D                     	;# 
   445     0D8E                     	;# 
   446     0D8F                     	;# 
   447     0D8F                     	;# 
   448     0D90                     	;# 
   449     0D91                     	;# 
   450     0D92                     	;# 
   451     0D92                     	;# 
   452     0D93                     	;# 
   453     0D94                     	;# 
   454     0D95                     	;# 
   455     0D95                     	;# 
   456     0D96                     	;# 
   457     0D97                     	;# 
   458     0D98                     	;# 
   459     0D99                     	;# 
   460     0D9A                     	;# 
   461     0D9B                     	;# 
   462     0D9C                     	;# 
   463     0D9D                     	;# 
   464     0D9E                     	;# 
   465     0D9E                     	;# 
   466     0D9F                     	;# 
   467     0DA0                     	;# 
   468     0DA1                     	;# 
   469     0DA1                     	;# 
   470     0DA2                     	;# 
   471     0DA3                     	;# 
   472     0DA4                     	;# 
   473     0DA4                     	;# 
   474     0DA5                     	;# 
   475     0DA6                     	;# 
   476     0DA7                     	;# 
   477     0DA7                     	;# 
   478     0DA8                     	;# 
   479     0DA9                     	;# 
   480     0DAA                     	;# 
   481     0DAB                     	;# 
   482     0DAC                     	;# 
   483     0DAD                     	;# 
   484     0DAE                     	;# 
   485     0DAF                     	;# 
   486     0E0F                     	;# 
   487     0E10                     	;# 
   488     0E11                     	;# 
   489     0E12                     	;# 
   490     0E13                     	;# 
   491     0E14                     	;# 
   492     0E15                     	;# 
   493     0E16                     	;# 
   494     0E17                     	;# 
   495     0E17                     	;# 
   496     0E18                     	;# 
   497     0E18                     	;# 
   498     0E19                     	;# 
   499     0E1A                     	;# 
   500     0E1B                     	;# 
   501     0E1B                     	;# 
   502     0E1C                     	;# 
   503     0E1D                     	;# 
   504     0E1E                     	;# 
   505     0E1E                     	;# 
   506     0E1F                     	;# 
   507     0E20                     	;# 
   508     0E21                     	;# 
   509     0E22                     	;# 
   510     0E23                     	;# 
   511     0E24                     	;# 
   512     0E25                     	;# 
   513     0E26                     	;# 
   514     0E27                     	;# 
   515     0E28                     	;# 
   516     0E29                     	;# 
   517     0E2A                     	;# 
   518     0E2B                     	;# 
   519     0E2C                     	;# 
   520     0E2D                     	;# 
   521     0E2E                     	;# 
   522     0E90                     	;# 
   523     0E91                     	;# 
   524     0E92                     	;# 
   525     0E94                     	;# 
   526     0E95                     	;# 
   527     0E9C                     	;# 
   528     0E9D                     	;# 
   529     0E9E                     	;# 
   530     0E9F                     	;# 
   531     0EA0                     	;# 
   532     0EA1                     	;# 
   533     0EA2                     	;# 
   534     0EA3                     	;# 
   535     0EA4                     	;# 
   536     0EA5                     	;# 
   537     0EA6                     	;# 
   538     0EA7                     	;# 
   539     0F0F                     	;# 
   540     0F10                     	;# 
   541     0F11                     	;# 
   542     0F12                     	;# 
   543     0F13                     	;# 
   544     0F14                     	;# 
   545     0F15                     	;# 
   546     0F16                     	;# 
   547     0F17                     	;# 
   548     0F18                     	;# 
   549     0F19                     	;# 
   550     0F1A                     	;# 
   551     0F1B                     	;# 
   552     0F1C                     	;# 
   553     0F1D                     	;# 
   554     0F1E                     	;# 
   555     0F1F                     	;# 
   556     0F20                     	;# 
   557     0F21                     	;# 
   558     0F22                     	;# 
   559     0F23                     	;# 
   560     0FE4                     	;# 
   561     0FE5                     	;# 
   562     0FE6                     	;# 
   563     0FE7                     	;# 
   564     0FE8                     	;# 
   565     0FE9                     	;# 
   566     0FEA                     	;# 
   567     0FEB                     	;# 
   568     0FED                     	;# 
   569     0FEE                     	;# 
   570     0FEF                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000D                     	;# 
   585     000E                     	;# 
   586     0010                     	;# 
   587     0011                     	;# 
   588     0012                     	;# 
   589     0013                     	;# 
   590     0014                     	;# 
   591     0015                     	;# 
   592     0016                     	;# 
   593     0016                     	;# 
   594     0017                     	;# 
   595     0018                     	;# 
   596     0019                     	;# 
   597     001A                     	;# 
   598     001A                     	;# 
   599     001B                     	;# 
   600     001B                     	;# 
   601     001C                     	;# 
   602     001D                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     008E                     	;# 
   608     0090                     	;# 
   609     0091                     	;# 
   610     0092                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0098                     	;# 
   616     0099                     	;# 
   617     009A                     	;# 
   618     009B                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     009F                     	;# 
   624     010C                     	;# 
   625     010D                     	;# 
   626     010E                     	;# 
   627     0111                     	;# 
   628     0112                     	;# 
   629     0113                     	;# 
   630     0114                     	;# 
   631     0115                     	;# 
   632     0116                     	;# 
   633     0117                     	;# 
   634     0118                     	;# 
   635     0119                     	;# 
   636     011C                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     018E                     	;# 
   640     0191                     	;# 
   641     0191                     	;# 
   642     0192                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0197                     	;# 
   649     0199                     	;# 
   650     0199                     	;# 
   651     0199                     	;# 
   652     019A                     	;# 
   653     019A                     	;# 
   654     019A                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019B                     	;# 
   659     019B                     	;# 
   660     019C                     	;# 
   661     019C                     	;# 
   662     019C                     	;# 
   663     019D                     	;# 
   664     019D                     	;# 
   665     019D                     	;# 
   666     019E                     	;# 
   667     019E                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     019F                     	;# 
   671     019F                     	;# 
   672     019F                     	;# 
   673     019F                     	;# 
   674     020C                     	;# 
   675     020D                     	;# 
   676     020E                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0216                     	;# 
   690     0216                     	;# 
   691     0217                     	;# 
   692     0217                     	;# 
   693     028C                     	;# 
   694     028D                     	;# 
   695     028E                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0298                     	;# 
   702     0298                     	;# 
   703     0299                     	;# 
   704     029A                     	;# 
   705     029B                     	;# 
   706     029E                     	;# 
   707     030C                     	;# 
   708     030D                     	;# 
   709     030E                     	;# 
   710     038C                     	;# 
   711     038D                     	;# 
   712     038E                     	;# 
   713     0391                     	;# 
   714     0392                     	;# 
   715     0393                     	;# 
   716     0394                     	;# 
   717     0395                     	;# 
   718     0396                     	;# 
   719     0397                     	;# 
   720     0398                     	;# 
   721     0399                     	;# 
   722     040E                     	;# 
   723     0413                     	;# 
   724     0413                     	;# 
   725     0414                     	;# 
   726     0414                     	;# 
   727     0415                     	;# 
   728     0416                     	;# 
   729     0417                     	;# 
   730     0418                     	;# 
   731     041A                     	;# 
   732     041A                     	;# 
   733     041B                     	;# 
   734     041B                     	;# 
   735     041C                     	;# 
   736     041D                     	;# 
   737     041E                     	;# 
   738     041F                     	;# 
   739     0493                     	;# 
   740     0494                     	;# 
   741     0495                     	;# 
   742     0496                     	;# 
   743     049A                     	;# 
   744     049B                     	;# 
   745     049C                     	;# 
   746     049D                     	;# 
   747     058C                     	;# 
   748     058C                     	;# 
   749     058D                     	;# 
   750     058E                     	;# 
   751     058E                     	;# 
   752     058F                     	;# 
   753     0590                     	;# 
   754     0590                     	;# 
   755     0591                     	;# 
   756     0592                     	;# 
   757     0592                     	;# 
   758     0593                     	;# 
   759     0594                     	;# 
   760     0594                     	;# 
   761     0595                     	;# 
   762     0596                     	;# 
   763     0596                     	;# 
   764     0597                     	;# 
   765     0598                     	;# 
   766     0599                     	;# 
   767     059A                     	;# 
   768     059B                     	;# 
   769     059B                     	;# 
   770     059C                     	;# 
   771     059D                     	;# 
   772     060C                     	;# 
   773     060C                     	;# 
   774     060D                     	;# 
   775     060E                     	;# 
   776     060F                     	;# 
   777     060F                     	;# 
   778     0610                     	;# 
   779     0611                     	;# 
   780     0612                     	;# 
   781     0613                     	;# 
   782     0614                     	;# 
   783     0617                     	;# 
   784     0617                     	;# 
   785     0618                     	;# 
   786     0619                     	;# 
   787     061A                     	;# 
   788     061A                     	;# 
   789     061B                     	;# 
   790     061C                     	;# 
   791     0691                     	;# 
   792     0692                     	;# 
   793     0693                     	;# 
   794     0694                     	;# 
   795     0695                     	;# 
   796     0696                     	;# 
   797     0697                     	;# 
   798     0699                     	;# 
   799     069A                     	;# 
   800     0711                     	;# 
   801     0712                     	;# 
   802     0713                     	;# 
   803     0714                     	;# 
   804     0715                     	;# 
   805     0718                     	;# 
   806     0718                     	;# 
   807     0719                     	;# 
   808     071A                     	;# 
   809     071A                     	;# 
   810     071B                     	;# 
   811     071C                     	;# 
   812     071D                     	;# 
   813     0791                     	;# 
   814     0791                     	;# 
   815     0792                     	;# 
   816     0793                     	;# 
   817     0793                     	;# 
   818     0794                     	;# 
   819     0795                     	;# 
   820     0795                     	;# 
   821     0796                     	;# 
   822     0797                     	;# 
   823     0797                     	;# 
   824     0798                     	;# 
   825     0799                     	;# 
   826     079A                     	;# 
   827     080C                     	;# 
   828     080C                     	;# 
   829     080D                     	;# 
   830     080E                     	;# 
   831     080E                     	;# 
   832     080F                     	;# 
   833     0810                     	;# 
   834     0810                     	;# 
   835     0811                     	;# 
   836     0812                     	;# 
   837     0812                     	;# 
   838     0813                     	;# 
   839     0814                     	;# 
   840     0815                     	;# 
   841     0816                     	;# 
   842     0817                     	;# 
   843     0818                     	;# 
   844     0819                     	;# 
   845     081A                     	;# 
   846     081A                     	;# 
   847     081B                     	;# 
   848     081C                     	;# 
   849     081C                     	;# 
   850     081D                     	;# 
   851     088C                     	;# 
   852     088D                     	;# 
   853     088E                     	;# 
   854     088F                     	;# 
   855     088F                     	;# 
   856     0890                     	;# 
   857     0891                     	;# 
   858     0892                     	;# 
   859     0893                     	;# 
   860     0893                     	;# 
   861     0894                     	;# 
   862     0895                     	;# 
   863     0896                     	;# 
   864     0897                     	;# 
   865     0897                     	;# 
   866     0898                     	;# 
   867     0899                     	;# 
   868     0D8C                     	;# 
   869     0D8C                     	;# 
   870     0D8D                     	;# 
   871     0D8E                     	;# 
   872     0D8F                     	;# 
   873     0D8F                     	;# 
   874     0D90                     	;# 
   875     0D91                     	;# 
   876     0D92                     	;# 
   877     0D92                     	;# 
   878     0D93                     	;# 
   879     0D94                     	;# 
   880     0D95                     	;# 
   881     0D95                     	;# 
   882     0D96                     	;# 
   883     0D97                     	;# 
   884     0D98                     	;# 
   885     0D99                     	;# 
   886     0D9A                     	;# 
   887     0D9B                     	;# 
   888     0D9C                     	;# 
   889     0D9D                     	;# 
   890     0D9E                     	;# 
   891     0D9E                     	;# 
   892     0D9F                     	;# 
   893     0DA0                     	;# 
   894     0DA1                     	;# 
   895     0DA1                     	;# 
   896     0DA2                     	;# 
   897     0DA3                     	;# 
   898     0DA4                     	;# 
   899     0DA4                     	;# 
   900     0DA5                     	;# 
   901     0DA6                     	;# 
   902     0DA7                     	;# 
   903     0DA7                     	;# 
   904     0DA8                     	;# 
   905     0DA9                     	;# 
   906     0DAA                     	;# 
   907     0DAB                     	;# 
   908     0DAC                     	;# 
   909     0DAD                     	;# 
   910     0DAE                     	;# 
   911     0DAF                     	;# 
   912     0E0F                     	;# 
   913     0E10                     	;# 
   914     0E11                     	;# 
   915     0E12                     	;# 
   916     0E13                     	;# 
   917     0E14                     	;# 
   918     0E15                     	;# 
   919     0E16                     	;# 
   920     0E17                     	;# 
   921     0E17                     	;# 
   922     0E18                     	;# 
   923     0E18                     	;# 
   924     0E19                     	;# 
   925     0E1A                     	;# 
   926     0E1B                     	;# 
   927     0E1B                     	;# 
   928     0E1C                     	;# 
   929     0E1D                     	;# 
   930     0E1E                     	;# 
   931     0E1E                     	;# 
   932     0E1F                     	;# 
   933     0E20                     	;# 
   934     0E21                     	;# 
   935     0E22                     	;# 
   936     0E23                     	;# 
   937     0E24                     	;# 
   938     0E25                     	;# 
   939     0E26                     	;# 
   940     0E27                     	;# 
   941     0E28                     	;# 
   942     0E29                     	;# 
   943     0E2A                     	;# 
   944     0E2B                     	;# 
   945     0E2C                     	;# 
   946     0E2D                     	;# 
   947     0E2E                     	;# 
   948     0E90                     	;# 
   949     0E91                     	;# 
   950     0E92                     	;# 
   951     0E94                     	;# 
   952     0E95                     	;# 
   953     0E9C                     	;# 
   954     0E9D                     	;# 
   955     0E9E                     	;# 
   956     0E9F                     	;# 
   957     0EA0                     	;# 
   958     0EA1                     	;# 
   959     0EA2                     	;# 
   960     0EA3                     	;# 
   961     0EA4                     	;# 
   962     0EA5                     	;# 
   963     0EA6                     	;# 
   964     0EA7                     	;# 
   965     0F0F                     	;# 
   966     0F10                     	;# 
   967     0F11                     	;# 
   968     0F12                     	;# 
   969     0F13                     	;# 
   970     0F14                     	;# 
   971     0F15                     	;# 
   972     0F16                     	;# 
   973     0F17                     	;# 
   974     0F18                     	;# 
   975     0F19                     	;# 
   976     0F1A                     	;# 
   977     0F1B                     	;# 
   978     0F1C                     	;# 
   979     0F1D                     	;# 
   980     0F1E                     	;# 
   981     0F1F                     	;# 
   982     0F20                     	;# 
   983     0F21                     	;# 
   984     0F22                     	;# 
   985     0F23                     	;# 
   986     0FE4                     	;# 
   987     0FE5                     	;# 
   988     0FE6                     	;# 
   989     0FE7                     	;# 
   990     0FE8                     	;# 
   991     0FE9                     	;# 
   992     0FEA                     	;# 
   993     0FEB                     	;# 
   994     0FED                     	;# 
   995     0FEE                     	;# 
   996     0FEF                     	;# 
   997     0000                     	;# 
   998     0001                     	;# 
   999     0002                     	;# 
  1000     0003                     	;# 
  1001     0004                     	;# 
  1002     0005                     	;# 
  1003     0006                     	;# 
  1004     0007                     	;# 
  1005     0008                     	;# 
  1006     0009                     	;# 
  1007     000A                     	;# 
  1008     000B                     	;# 
  1009     000C                     	;# 
  1010     000D                     	;# 
  1011     000E                     	;# 
  1012     0010                     	;# 
  1013     0011                     	;# 
  1014     0012                     	;# 
  1015     0013                     	;# 
  1016     0014                     	;# 
  1017     0015                     	;# 
  1018     0016                     	;# 
  1019     0016                     	;# 
  1020     0017                     	;# 
  1021     0018                     	;# 
  1022     0019                     	;# 
  1023     001A                     	;# 
  1024     001A                     	;# 
  1025     001B                     	;# 
  1026     001B                     	;# 
  1027     001C                     	;# 
  1028     001D                     	;# 
  1029     001E                     	;# 
  1030     001F                     	;# 
  1031     008C                     	;# 
  1032     008D                     	;# 
  1033     008E                     	;# 
  1034     0090                     	;# 
  1035     0091                     	;# 
  1036     0092                     	;# 
  1037     0093                     	;# 
  1038     0094                     	;# 
  1039     0095                     	;# 
  1040     0096                     	;# 
  1041     0098                     	;# 
  1042     0099                     	;# 
  1043     009A                     	;# 
  1044     009B                     	;# 
  1045     009B                     	;# 
  1046     009C                     	;# 
  1047     009D                     	;# 
  1048     009E                     	;# 
  1049     009F                     	;# 
  1050     010C                     	;# 
  1051     010D                     	;# 
  1052     010E                     	;# 
  1053     0111                     	;# 
  1054     0112                     	;# 
  1055     0113                     	;# 
  1056     0114                     	;# 
  1057     0115                     	;# 
  1058     0116                     	;# 
  1059     0117                     	;# 
  1060     0118                     	;# 
  1061     0119                     	;# 
  1062     011C                     	;# 
  1063     018C                     	;# 
  1064     018D                     	;# 
  1065     018E                     	;# 
  1066     0191                     	;# 
  1067     0191                     	;# 
  1068     0192                     	;# 
  1069     0193                     	;# 
  1070     0193                     	;# 
  1071     0194                     	;# 
  1072     0195                     	;# 
  1073     0196                     	;# 
  1074     0197                     	;# 
  1075     0199                     	;# 
  1076     0199                     	;# 
  1077     0199                     	;# 
  1078     019A                     	;# 
  1079     019A                     	;# 
  1080     019A                     	;# 
  1081     019B                     	;# 
  1082     019B                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019B                     	;# 
  1086     019C                     	;# 
  1087     019C                     	;# 
  1088     019C                     	;# 
  1089     019D                     	;# 
  1090     019D                     	;# 
  1091     019D                     	;# 
  1092     019E                     	;# 
  1093     019E                     	;# 
  1094     019E                     	;# 
  1095     019F                     	;# 
  1096     019F                     	;# 
  1097     019F                     	;# 
  1098     019F                     	;# 
  1099     019F                     	;# 
  1100     020C                     	;# 
  1101     020D                     	;# 
  1102     020E                     	;# 
  1103     0211                     	;# 
  1104     0211                     	;# 
  1105     0212                     	;# 
  1106     0212                     	;# 
  1107     0213                     	;# 
  1108     0213                     	;# 
  1109     0214                     	;# 
  1110     0214                     	;# 
  1111     0215                     	;# 
  1112     0215                     	;# 
  1113     0215                     	;# 
  1114     0215                     	;# 
  1115     0216                     	;# 
  1116     0216                     	;# 
  1117     0217                     	;# 
  1118     0217                     	;# 
  1119     028C                     	;# 
  1120     028D                     	;# 
  1121     028E                     	;# 
  1122     0291                     	;# 
  1123     0291                     	;# 
  1124     0292                     	;# 
  1125     0293                     	;# 
  1126     0294                     	;# 
  1127     0298                     	;# 
  1128     0298                     	;# 
  1129     0299                     	;# 
  1130     029A                     	;# 
  1131     029B                     	;# 
  1132     029E                     	;# 
  1133     030C                     	;# 
  1134     030D                     	;# 
  1135     030E                     	;# 
  1136     038C                     	;# 
  1137     038D                     	;# 
  1138     038E                     	;# 
  1139     0391                     	;# 
  1140     0392                     	;# 
  1141     0393                     	;# 
  1142     0394                     	;# 
  1143     0395                     	;# 
  1144     0396                     	;# 
  1145     0397                     	;# 
  1146     0398                     	;# 
  1147     0399                     	;# 
  1148     040E                     	;# 
  1149     0413                     	;# 
  1150     0413                     	;# 
  1151     0414                     	;# 
  1152     0414                     	;# 
  1153     0415                     	;# 
  1154     0416                     	;# 
  1155     0417                     	;# 
  1156     0418                     	;# 
  1157     041A                     	;# 
  1158     041A                     	;# 
  1159     041B                     	;# 
  1160     041B                     	;# 
  1161     041C                     	;# 
  1162     041D                     	;# 
  1163     041E                     	;# 
  1164     041F                     	;# 
  1165     0493                     	;# 
  1166     0494                     	;# 
  1167     0495                     	;# 
  1168     0496                     	;# 
  1169     049A                     	;# 
  1170     049B                     	;# 
  1171     049C                     	;# 
  1172     049D                     	;# 
  1173     058C                     	;# 
  1174     058C                     	;# 
  1175     058D                     	;# 
  1176     058E                     	;# 
  1177     058E                     	;# 
  1178     058F                     	;# 
  1179     0590                     	;# 
  1180     0590                     	;# 
  1181     0591                     	;# 
  1182     0592                     	;# 
  1183     0592                     	;# 
  1184     0593                     	;# 
  1185     0594                     	;# 
  1186     0594                     	;# 
  1187     0595                     	;# 
  1188     0596                     	;# 
  1189     0596                     	;# 
  1190     0597                     	;# 
  1191     0598                     	;# 
  1192     0599                     	;# 
  1193     059A                     	;# 
  1194     059B                     	;# 
  1195     059B                     	;# 
  1196     059C                     	;# 
  1197     059D                     	;# 
  1198     060C                     	;# 
  1199     060C                     	;# 
  1200     060D                     	;# 
  1201     060E                     	;# 
  1202     060F                     	;# 
  1203     060F                     	;# 
  1204     0610                     	;# 
  1205     0611                     	;# 
  1206     0612                     	;# 
  1207     0613                     	;# 
  1208     0614                     	;# 
  1209     0617                     	;# 
  1210     0617                     	;# 
  1211     0618                     	;# 
  1212     0619                     	;# 
  1213     061A                     	;# 
  1214     061A                     	;# 
  1215     061B                     	;# 
  1216     061C                     	;# 
  1217     0691                     	;# 
  1218     0692                     	;# 
  1219     0693                     	;# 
  1220     0694                     	;# 
  1221     0695                     	;# 
  1222     0696                     	;# 
  1223     0697                     	;# 
  1224     0699                     	;# 
  1225     069A                     	;# 
  1226     0711                     	;# 
  1227     0712                     	;# 
  1228     0713                     	;# 
  1229     0714                     	;# 
  1230     0715                     	;# 
  1231     0718                     	;# 
  1232     0718                     	;# 
  1233     0719                     	;# 
  1234     071A                     	;# 
  1235     071A                     	;# 
  1236     071B                     	;# 
  1237     071C                     	;# 
  1238     071D                     	;# 
  1239     0791                     	;# 
  1240     0791                     	;# 
  1241     0792                     	;# 
  1242     0793                     	;# 
  1243     0793                     	;# 
  1244     0794                     	;# 
  1245     0795                     	;# 
  1246     0795                     	;# 
  1247     0796                     	;# 
  1248     0797                     	;# 
  1249     0797                     	;# 
  1250     0798                     	;# 
  1251     0799                     	;# 
  1252     079A                     	;# 
  1253     080C                     	;# 
  1254     080C                     	;# 
  1255     080D                     	;# 
  1256     080E                     	;# 
  1257     080E                     	;# 
  1258     080F                     	;# 
  1259     0810                     	;# 
  1260     0810                     	;# 
  1261     0811                     	;# 
  1262     0812                     	;# 
  1263     0812                     	;# 
  1264     0813                     	;# 
  1265     0814                     	;# 
  1266     0815                     	;# 
  1267     0816                     	;# 
  1268     0817                     	;# 
  1269     0818                     	;# 
  1270     0819                     	;# 
  1271     081A                     	;# 
  1272     081A                     	;# 
  1273     081B                     	;# 
  1274     081C                     	;# 
  1275     081C                     	;# 
  1276     081D                     	;# 
  1277     088C                     	;# 
  1278     088D                     	;# 
  1279     088E                     	;# 
  1280     088F                     	;# 
  1281     088F                     	;# 
  1282     0890                     	;# 
  1283     0891                     	;# 
  1284     0892                     	;# 
  1285     0893                     	;# 
  1286     0893                     	;# 
  1287     0894                     	;# 
  1288     0895                     	;# 
  1289     0896                     	;# 
  1290     0897                     	;# 
  1291     0897                     	;# 
  1292     0898                     	;# 
  1293     0899                     	;# 
  1294     0D8C                     	;# 
  1295     0D8C                     	;# 
  1296     0D8D                     	;# 
  1297     0D8E                     	;# 
  1298     0D8F                     	;# 
  1299     0D8F                     	;# 
  1300     0D90                     	;# 
  1301     0D91                     	;# 
  1302     0D92                     	;# 
  1303     0D92                     	;# 
  1304     0D93                     	;# 
  1305     0D94                     	;# 
  1306     0D95                     	;# 
  1307     0D95                     	;# 
  1308     0D96                     	;# 
  1309     0D97                     	;# 
  1310     0D98                     	;# 
  1311     0D99                     	;# 
  1312     0D9A                     	;# 
  1313     0D9B                     	;# 
  1314     0D9C                     	;# 
  1315     0D9D                     	;# 
  1316     0D9E                     	;# 
  1317     0D9E                     	;# 
  1318     0D9F                     	;# 
  1319     0DA0                     	;# 
  1320     0DA1                     	;# 
  1321     0DA1                     	;# 
  1322     0DA2                     	;# 
  1323     0DA3                     	;# 
  1324     0DA4                     	;# 
  1325     0DA4                     	;# 
  1326     0DA5                     	;# 
  1327     0DA6                     	;# 
  1328     0DA7                     	;# 
  1329     0DA7                     	;# 
  1330     0DA8                     	;# 
  1331     0DA9                     	;# 
  1332     0DAA                     	;# 
  1333     0DAB                     	;# 
  1334     0DAC                     	;# 
  1335     0DAD                     	;# 
  1336     0DAE                     	;# 
  1337     0DAF                     	;# 
  1338     0E0F                     	;# 
  1339     0E10                     	;# 
  1340     0E11                     	;# 
  1341     0E12                     	;# 
  1342     0E13                     	;# 
  1343     0E14                     	;# 
  1344     0E15                     	;# 
  1345     0E16                     	;# 
  1346     0E17                     	;# 
  1347     0E17                     	;# 
  1348     0E18                     	;# 
  1349     0E18                     	;# 
  1350     0E19                     	;# 
  1351     0E1A                     	;# 
  1352     0E1B                     	;# 
  1353     0E1B                     	;# 
  1354     0E1C                     	;# 
  1355     0E1D                     	;# 
  1356     0E1E                     	;# 
  1357     0E1E                     	;# 
  1358     0E1F                     	;# 
  1359     0E20                     	;# 
  1360     0E21                     	;# 
  1361     0E22                     	;# 
  1362     0E23                     	;# 
  1363     0E24                     	;# 
  1364     0E25                     	;# 
  1365     0E26                     	;# 
  1366     0E27                     	;# 
  1367     0E28                     	;# 
  1368     0E29                     	;# 
  1369     0E2A                     	;# 
  1370     0E2B                     	;# 
  1371     0E2C                     	;# 
  1372     0E2D                     	;# 
  1373     0E2E                     	;# 
  1374     0E90                     	;# 
  1375     0E91                     	;# 
  1376     0E92                     	;# 
  1377     0E94                     	;# 
  1378     0E95                     	;# 
  1379     0E9C                     	;# 
  1380     0E9D                     	;# 
  1381     0E9E                     	;# 
  1382     0E9F                     	;# 
  1383     0EA0                     	;# 
  1384     0EA1                     	;# 
  1385     0EA2                     	;# 
  1386     0EA3                     	;# 
  1387     0EA4                     	;# 
  1388     0EA5                     	;# 
  1389     0EA6                     	;# 
  1390     0EA7                     	;# 
  1391     0F0F                     	;# 
  1392     0F10                     	;# 
  1393     0F11                     	;# 
  1394     0F12                     	;# 
  1395     0F13                     	;# 
  1396     0F14                     	;# 
  1397     0F15                     	;# 
  1398     0F16                     	;# 
  1399     0F17                     	;# 
  1400     0F18                     	;# 
  1401     0F19                     	;# 
  1402     0F1A                     	;# 
  1403     0F1B                     	;# 
  1404     0F1C                     	;# 
  1405     0F1D                     	;# 
  1406     0F1E                     	;# 
  1407     0F1F                     	;# 
  1408     0F20                     	;# 
  1409     0F21                     	;# 
  1410     0F22                     	;# 
  1411     0F23                     	;# 
  1412     0FE4                     	;# 
  1413     0FE5                     	;# 
  1414     0FE6                     	;# 
  1415     0FE7                     	;# 
  1416     0FE8                     	;# 
  1417     0FE9                     	;# 
  1418     0FEA                     	;# 
  1419     0FEB                     	;# 
  1420     0FED                     	;# 
  1421     0FEE                     	;# 
  1422     0FEF                     	;# 
  1423     0000                     	;# 
  1424     0001                     	;# 
  1425     0002                     	;# 
  1426     0003                     	;# 
  1427     0004                     	;# 
  1428     0005                     	;# 
  1429     0006                     	;# 
  1430     0007                     	;# 
  1431     0008                     	;# 
  1432     0009                     	;# 
  1433     000A                     	;# 
  1434     000B                     	;# 
  1435     000C                     	;# 
  1436     000D                     	;# 
  1437     000E                     	;# 
  1438     0010                     	;# 
  1439     0011                     	;# 
  1440     0012                     	;# 
  1441     0013                     	;# 
  1442     0014                     	;# 
  1443     0015                     	;# 
  1444     0016                     	;# 
  1445     0016                     	;# 
  1446     0017                     	;# 
  1447     0018                     	;# 
  1448     0019                     	;# 
  1449     001A                     	;# 
  1450     001A                     	;# 
  1451     001B                     	;# 
  1452     001B                     	;# 
  1453     001C                     	;# 
  1454     001D                     	;# 
  1455     001E                     	;# 
  1456     001F                     	;# 
  1457     008C                     	;# 
  1458     008D                     	;# 
  1459     008E                     	;# 
  1460     0090                     	;# 
  1461     0091                     	;# 
  1462     0092                     	;# 
  1463     0093                     	;# 
  1464     0094                     	;# 
  1465     0095                     	;# 
  1466     0096                     	;# 
  1467     0098                     	;# 
  1468     0099                     	;# 
  1469     009A                     	;# 
  1470     009B                     	;# 
  1471     009B                     	;# 
  1472     009C                     	;# 
  1473     009D                     	;# 
  1474     009E                     	;# 
  1475     009F                     	;# 
  1476     010C                     	;# 
  1477     010D                     	;# 
  1478     010E                     	;# 
  1479     0111                     	;# 
  1480     0112                     	;# 
  1481     0113                     	;# 
  1482     0114                     	;# 
  1483     0115                     	;# 
  1484     0116                     	;# 
  1485     0117                     	;# 
  1486     0118                     	;# 
  1487     0119                     	;# 
  1488     011C                     	;# 
  1489     018C                     	;# 
  1490     018D                     	;# 
  1491     018E                     	;# 
  1492     0191                     	;# 
  1493     0191                     	;# 
  1494     0192                     	;# 
  1495     0193                     	;# 
  1496     0193                     	;# 
  1497     0194                     	;# 
  1498     0195                     	;# 
  1499     0196                     	;# 
  1500     0197                     	;# 
  1501     0199                     	;# 
  1502     0199                     	;# 
  1503     0199                     	;# 
  1504     019A                     	;# 
  1505     019A                     	;# 
  1506     019A                     	;# 
  1507     019B                     	;# 
  1508     019B                     	;# 
  1509     019B                     	;# 
  1510     019B                     	;# 
  1511     019B                     	;# 
  1512     019C                     	;# 
  1513     019C                     	;# 
  1514     019C                     	;# 
  1515     019D                     	;# 
  1516     019D                     	;# 
  1517     019D                     	;# 
  1518     019E                     	;# 
  1519     019E                     	;# 
  1520     019E                     	;# 
  1521     019F                     	;# 
  1522     019F                     	;# 
  1523     019F                     	;# 
  1524     019F                     	;# 
  1525     019F                     	;# 
  1526     020C                     	;# 
  1527     020D                     	;# 
  1528     020E                     	;# 
  1529     0211                     	;# 
  1530     0211                     	;# 
  1531     0212                     	;# 
  1532     0212                     	;# 
  1533     0213                     	;# 
  1534     0213                     	;# 
  1535     0214                     	;# 
  1536     0214                     	;# 
  1537     0215                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0215                     	;# 
  1541     0216                     	;# 
  1542     0216                     	;# 
  1543     0217                     	;# 
  1544     0217                     	;# 
  1545     028C                     	;# 
  1546     028D                     	;# 
  1547     028E                     	;# 
  1548     0291                     	;# 
  1549     0291                     	;# 
  1550     0292                     	;# 
  1551     0293                     	;# 
  1552     0294                     	;# 
  1553     0298                     	;# 
  1554     0298                     	;# 
  1555     0299                     	;# 
  1556     029A                     	;# 
  1557     029B                     	;# 
  1558     029E                     	;# 
  1559     030C                     	;# 
  1560     030D                     	;# 
  1561     030E                     	;# 
  1562     038C                     	;# 
  1563     038D                     	;# 
  1564     038E                     	;# 
  1565     0391                     	;# 
  1566     0392                     	;# 
  1567     0393                     	;# 
  1568     0394                     	;# 
  1569     0395                     	;# 
  1570     0396                     	;# 
  1571     0397                     	;# 
  1572     0398                     	;# 
  1573     0399                     	;# 
  1574     040E                     	;# 
  1575     0413                     	;# 
  1576     0413                     	;# 
  1577     0414                     	;# 
  1578     0414                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     0418                     	;# 
  1583     041A                     	;# 
  1584     041A                     	;# 
  1585     041B                     	;# 
  1586     041B                     	;# 
  1587     041C                     	;# 
  1588     041D                     	;# 
  1589     041E                     	;# 
  1590     041F                     	;# 
  1591     0493                     	;# 
  1592     0494                     	;# 
  1593     0495                     	;# 
  1594     0496                     	;# 
  1595     049A                     	;# 
  1596     049B                     	;# 
  1597     049C                     	;# 
  1598     049D                     	;# 
  1599     058C                     	;# 
  1600     058C                     	;# 
  1601     058D                     	;# 
  1602     058E                     	;# 
  1603     058E                     	;# 
  1604     058F                     	;# 
  1605     0590                     	;# 
  1606     0590                     	;# 
  1607     0591                     	;# 
  1608     0592                     	;# 
  1609     0592                     	;# 
  1610     0593                     	;# 
  1611     0594                     	;# 
  1612     0594                     	;# 
  1613     0595                     	;# 
  1614     0596                     	;# 
  1615     0596                     	;# 
  1616     0597                     	;# 
  1617     0598                     	;# 
  1618     0599                     	;# 
  1619     059A                     	;# 
  1620     059B                     	;# 
  1621     059B                     	;# 
  1622     059C                     	;# 
  1623     059D                     	;# 
  1624     060C                     	;# 
  1625     060C                     	;# 
  1626     060D                     	;# 
  1627     060E                     	;# 
  1628     060F                     	;# 
  1629     060F                     	;# 
  1630     0610                     	;# 
  1631     0611                     	;# 
  1632     0612                     	;# 
  1633     0613                     	;# 
  1634     0614                     	;# 
  1635     0617                     	;# 
  1636     0617                     	;# 
  1637     0618                     	;# 
  1638     0619                     	;# 
  1639     061A                     	;# 
  1640     061A                     	;# 
  1641     061B                     	;# 
  1642     061C                     	;# 
  1643     0691                     	;# 
  1644     0692                     	;# 
  1645     0693                     	;# 
  1646     0694                     	;# 
  1647     0695                     	;# 
  1648     0696                     	;# 
  1649     0697                     	;# 
  1650     0699                     	;# 
  1651     069A                     	;# 
  1652     0711                     	;# 
  1653     0712                     	;# 
  1654     0713                     	;# 
  1655     0714                     	;# 
  1656     0715                     	;# 
  1657     0718                     	;# 
  1658     0718                     	;# 
  1659     0719                     	;# 
  1660     071A                     	;# 
  1661     071A                     	;# 
  1662     071B                     	;# 
  1663     071C                     	;# 
  1664     071D                     	;# 
  1665     0791                     	;# 
  1666     0791                     	;# 
  1667     0792                     	;# 
  1668     0793                     	;# 
  1669     0793                     	;# 
  1670     0794                     	;# 
  1671     0795                     	;# 
  1672     0795                     	;# 
  1673     0796                     	;# 
  1674     0797                     	;# 
  1675     0797                     	;# 
  1676     0798                     	;# 
  1677     0799                     	;# 
  1678     079A                     	;# 
  1679     080C                     	;# 
  1680     080C                     	;# 
  1681     080D                     	;# 
  1682     080E                     	;# 
  1683     080E                     	;# 
  1684     080F                     	;# 
  1685     0810                     	;# 
  1686     0810                     	;# 
  1687     0811                     	;# 
  1688     0812                     	;# 
  1689     0812                     	;# 
  1690     0813                     	;# 
  1691     0814                     	;# 
  1692     0815                     	;# 
  1693     0816                     	;# 
  1694     0817                     	;# 
  1695     0818                     	;# 
  1696     0819                     	;# 
  1697     081A                     	;# 
  1698     081A                     	;# 
  1699     081B                     	;# 
  1700     081C                     	;# 
  1701     081C                     	;# 
  1702     081D                     	;# 
  1703     088C                     	;# 
  1704     088D                     	;# 
  1705     088E                     	;# 
  1706     088F                     	;# 
  1707     088F                     	;# 
  1708     0890                     	;# 
  1709     0891                     	;# 
  1710     0892                     	;# 
  1711     0893                     	;# 
  1712     0893                     	;# 
  1713     0894                     	;# 
  1714     0895                     	;# 
  1715     0896                     	;# 
  1716     0897                     	;# 
  1717     0897                     	;# 
  1718     0898                     	;# 
  1719     0899                     	;# 
  1720     0D8C                     	;# 
  1721     0D8C                     	;# 
  1722     0D8D                     	;# 
  1723     0D8E                     	;# 
  1724     0D8F                     	;# 
  1725     0D8F                     	;# 
  1726     0D90                     	;# 
  1727     0D91                     	;# 
  1728     0D92                     	;# 
  1729     0D92                     	;# 
  1730     0D93                     	;# 
  1731     0D94                     	;# 
  1732     0D95                     	;# 
  1733     0D95                     	;# 
  1734     0D96                     	;# 
  1735     0D97                     	;# 
  1736     0D98                     	;# 
  1737     0D99                     	;# 
  1738     0D9A                     	;# 
  1739     0D9B                     	;# 
  1740     0D9C                     	;# 
  1741     0D9D                     	;# 
  1742     0D9E                     	;# 
  1743     0D9E                     	;# 
  1744     0D9F                     	;# 
  1745     0DA0                     	;# 
  1746     0DA1                     	;# 
  1747     0DA1                     	;# 
  1748     0DA2                     	;# 
  1749     0DA3                     	;# 
  1750     0DA4                     	;# 
  1751     0DA4                     	;# 
  1752     0DA5                     	;# 
  1753     0DA6                     	;# 
  1754     0DA7                     	;# 
  1755     0DA7                     	;# 
  1756     0DA8                     	;# 
  1757     0DA9                     	;# 
  1758     0DAA                     	;# 
  1759     0DAB                     	;# 
  1760     0DAC                     	;# 
  1761     0DAD                     	;# 
  1762     0DAE                     	;# 
  1763     0DAF                     	;# 
  1764     0E0F                     	;# 
  1765     0E10                     	;# 
  1766     0E11                     	;# 
  1767     0E12                     	;# 
  1768     0E13                     	;# 
  1769     0E14                     	;# 
  1770     0E15                     	;# 
  1771     0E16                     	;# 
  1772     0E17                     	;# 
  1773     0E17                     	;# 
  1774     0E18                     	;# 
  1775     0E18                     	;# 
  1776     0E19                     	;# 
  1777     0E1A                     	;# 
  1778     0E1B                     	;# 
  1779     0E1B                     	;# 
  1780     0E1C                     	;# 
  1781     0E1D                     	;# 
  1782     0E1E                     	;# 
  1783     0E1E                     	;# 
  1784     0E1F                     	;# 
  1785     0E20                     	;# 
  1786     0E21                     	;# 
  1787     0E22                     	;# 
  1788     0E23                     	;# 
  1789     0E24                     	;# 
  1790     0E25                     	;# 
  1791     0E26                     	;# 
  1792     0E27                     	;# 
  1793     0E28                     	;# 
  1794     0E29                     	;# 
  1795     0E2A                     	;# 
  1796     0E2B                     	;# 
  1797     0E2C                     	;# 
  1798     0E2D                     	;# 
  1799     0E2E                     	;# 
  1800     0E90                     	;# 
  1801     0E91                     	;# 
  1802     0E92                     	;# 
  1803     0E94                     	;# 
  1804     0E95                     	;# 
  1805     0E9C                     	;# 
  1806     0E9D                     	;# 
  1807     0E9E                     	;# 
  1808     0E9F                     	;# 
  1809     0EA0                     	;# 
  1810     0EA1                     	;# 
  1811     0EA2                     	;# 
  1812     0EA3                     	;# 
  1813     0EA4                     	;# 
  1814     0EA5                     	;# 
  1815     0EA6                     	;# 
  1816     0EA7                     	;# 
  1817     0F0F                     	;# 
  1818     0F10                     	;# 
  1819     0F11                     	;# 
  1820     0F12                     	;# 
  1821     0F13                     	;# 
  1822     0F14                     	;# 
  1823     0F15                     	;# 
  1824     0F16                     	;# 
  1825     0F17                     	;# 
  1826     0F18                     	;# 
  1827     0F19                     	;# 
  1828     0F1A                     	;# 
  1829     0F1B                     	;# 
  1830     0F1C                     	;# 
  1831     0F1D                     	;# 
  1832     0F1E                     	;# 
  1833     0F1F                     	;# 
  1834     0F20                     	;# 
  1835     0F21                     	;# 
  1836     0F22                     	;# 
  1837     0F23                     	;# 
  1838     0FE4                     	;# 
  1839     0FE5                     	;# 
  1840     0FE6                     	;# 
  1841     0FE7                     	;# 
  1842     0FE8                     	;# 
  1843     0FE9                     	;# 
  1844     0FEA                     	;# 
  1845     0FEB                     	;# 
  1846     0FED                     	;# 
  1847     0FEE                     	;# 
  1848     0FEF                     	;# 
  1849     0000                     	;# 
  1850     0001                     	;# 
  1851     0002                     	;# 
  1852     0003                     	;# 
  1853     0004                     	;# 
  1854     0005                     	;# 
  1855     0006                     	;# 
  1856     0007                     	;# 
  1857     0008                     	;# 
  1858     0009                     	;# 
  1859     000A                     	;# 
  1860     000B                     	;# 
  1861     000C                     	;# 
  1862     000D                     	;# 
  1863     000E                     	;# 
  1864     0010                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001A                     	;# 
  1877     001B                     	;# 
  1878     001B                     	;# 
  1879     001C                     	;# 
  1880     001D                     	;# 
  1881     001E                     	;# 
  1882     001F                     	;# 
  1883     008C                     	;# 
  1884     008D                     	;# 
  1885     008E                     	;# 
  1886     0090                     	;# 
  1887     0091                     	;# 
  1888     0092                     	;# 
  1889     0093                     	;# 
  1890     0094                     	;# 
  1891     0095                     	;# 
  1892     0096                     	;# 
  1893     0098                     	;# 
  1894     0099                     	;# 
  1895     009A                     	;# 
  1896     009B                     	;# 
  1897     009B                     	;# 
  1898     009C                     	;# 
  1899     009D                     	;# 
  1900     009E                     	;# 
  1901     009F                     	;# 
  1902     010C                     	;# 
  1903     010D                     	;# 
  1904     010E                     	;# 
  1905     0111                     	;# 
  1906     0112                     	;# 
  1907     0113                     	;# 
  1908     0114                     	;# 
  1909     0115                     	;# 
  1910     0116                     	;# 
  1911     0117                     	;# 
  1912     0118                     	;# 
  1913     0119                     	;# 
  1914     011C                     	;# 
  1915     018C                     	;# 
  1916     018D                     	;# 
  1917     018E                     	;# 
  1918     0191                     	;# 
  1919     0191                     	;# 
  1920     0192                     	;# 
  1921     0193                     	;# 
  1922     0193                     	;# 
  1923     0194                     	;# 
  1924     0195                     	;# 
  1925     0196                     	;# 
  1926     0197                     	;# 
  1927     0199                     	;# 
  1928     0199                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019A                     	;# 
  1932     019A                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019B                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019C                     	;# 
  1941     019D                     	;# 
  1942     019D                     	;# 
  1943     019D                     	;# 
  1944     019E                     	;# 
  1945     019E                     	;# 
  1946     019E                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     019F                     	;# 
  1952     020C                     	;# 
  1953     020D                     	;# 
  1954     020E                     	;# 
  1955     0211                     	;# 
  1956     0211                     	;# 
  1957     0212                     	;# 
  1958     0212                     	;# 
  1959     0213                     	;# 
  1960     0213                     	;# 
  1961     0214                     	;# 
  1962     0214                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0215                     	;# 
  1967     0216                     	;# 
  1968     0216                     	;# 
  1969     0217                     	;# 
  1970     0217                     	;# 
  1971     028C                     	;# 
  1972     028D                     	;# 
  1973     028E                     	;# 
  1974     0291                     	;# 
  1975     0291                     	;# 
  1976     0292                     	;# 
  1977     0293                     	;# 
  1978     0294                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     029A                     	;# 
  1983     029B                     	;# 
  1984     029E                     	;# 
  1985     030C                     	;# 
  1986     030D                     	;# 
  1987     030E                     	;# 
  1988     038C                     	;# 
  1989     038D                     	;# 
  1990     038E                     	;# 
  1991     0391                     	;# 
  1992     0392                     	;# 
  1993     0393                     	;# 
  1994     0394                     	;# 
  1995     0395                     	;# 
  1996     0396                     	;# 
  1997     0397                     	;# 
  1998     0398                     	;# 
  1999     0399                     	;# 
  2000     040E                     	;# 
  2001     0413                     	;# 
  2002     0413                     	;# 
  2003     0414                     	;# 
  2004     0414                     	;# 
  2005     0415                     	;# 
  2006     0416                     	;# 
  2007     0417                     	;# 
  2008     0418                     	;# 
  2009     041A                     	;# 
  2010     041A                     	;# 
  2011     041B                     	;# 
  2012     041B                     	;# 
  2013     041C                     	;# 
  2014     041D                     	;# 
  2015     041E                     	;# 
  2016     041F                     	;# 
  2017     0493                     	;# 
  2018     0494                     	;# 
  2019     0495                     	;# 
  2020     0496                     	;# 
  2021     049A                     	;# 
  2022     049B                     	;# 
  2023     049C                     	;# 
  2024     049D                     	;# 
  2025     058C                     	;# 
  2026     058C                     	;# 
  2027     058D                     	;# 
  2028     058E                     	;# 
  2029     058E                     	;# 
  2030     058F                     	;# 
  2031     0590                     	;# 
  2032     0590                     	;# 
  2033     0591                     	;# 
  2034     0592                     	;# 
  2035     0592                     	;# 
  2036     0593                     	;# 
  2037     0594                     	;# 
  2038     0594                     	;# 
  2039     0595                     	;# 
  2040     0596                     	;# 
  2041     0596                     	;# 
  2042     0597                     	;# 
  2043     0598                     	;# 
  2044     0599                     	;# 
  2045     059A                     	;# 
  2046     059B                     	;# 
  2047     059B                     	;# 
  2048     059C                     	;# 
  2049     059D                     	;# 
  2050     060C                     	;# 
  2051     060C                     	;# 
  2052     060D                     	;# 
  2053     060E                     	;# 
  2054     060F                     	;# 
  2055     060F                     	;# 
  2056     0610                     	;# 
  2057     0611                     	;# 
  2058     0612                     	;# 
  2059     0613                     	;# 
  2060     0614                     	;# 
  2061     0617                     	;# 
  2062     0617                     	;# 
  2063     0618                     	;# 
  2064     0619                     	;# 
  2065     061A                     	;# 
  2066     061A                     	;# 
  2067     061B                     	;# 
  2068     061C                     	;# 
  2069     0691                     	;# 
  2070     0692                     	;# 
  2071     0693                     	;# 
  2072     0694                     	;# 
  2073     0695                     	;# 
  2074     0696                     	;# 
  2075     0697                     	;# 
  2076     0699                     	;# 
  2077     069A                     	;# 
  2078     0711                     	;# 
  2079     0712                     	;# 
  2080     0713                     	;# 
  2081     0714                     	;# 
  2082     0715                     	;# 
  2083     0718                     	;# 
  2084     0718                     	;# 
  2085     0719                     	;# 
  2086     071A                     	;# 
  2087     071A                     	;# 
  2088     071B                     	;# 
  2089     071C                     	;# 
  2090     071D                     	;# 
  2091     0791                     	;# 
  2092     0791                     	;# 
  2093     0792                     	;# 
  2094     0793                     	;# 
  2095     0793                     	;# 
  2096     0794                     	;# 
  2097     0795                     	;# 
  2098     0795                     	;# 
  2099     0796                     	;# 
  2100     0797                     	;# 
  2101     0797                     	;# 
  2102     0798                     	;# 
  2103     0799                     	;# 
  2104     079A                     	;# 
  2105     080C                     	;# 
  2106     080C                     	;# 
  2107     080D                     	;# 
  2108     080E                     	;# 
  2109     080E                     	;# 
  2110     080F                     	;# 
  2111     0810                     	;# 
  2112     0810                     	;# 
  2113     0811                     	;# 
  2114     0812                     	;# 
  2115     0812                     	;# 
  2116     0813                     	;# 
  2117     0814                     	;# 
  2118     0815                     	;# 
  2119     0816                     	;# 
  2120     0817                     	;# 
  2121     0818                     	;# 
  2122     0819                     	;# 
  2123     081A                     	;# 
  2124     081A                     	;# 
  2125     081B                     	;# 
  2126     081C                     	;# 
  2127     081C                     	;# 
  2128     081D                     	;# 
  2129     088C                     	;# 
  2130     088D                     	;# 
  2131     088E                     	;# 
  2132     088F                     	;# 
  2133     088F                     	;# 
  2134     0890                     	;# 
  2135     0891                     	;# 
  2136     0892                     	;# 
  2137     0893                     	;# 
  2138     0893                     	;# 
  2139     0894                     	;# 
  2140     0895                     	;# 
  2141     0896                     	;# 
  2142     0897                     	;# 
  2143     0897                     	;# 
  2144     0898                     	;# 
  2145     0899                     	;# 
  2146     0D8C                     	;# 
  2147     0D8C                     	;# 
  2148     0D8D                     	;# 
  2149     0D8E                     	;# 
  2150     0D8F                     	;# 
  2151     0D8F                     	;# 
  2152     0D90                     	;# 
  2153     0D91                     	;# 
  2154     0D92                     	;# 
  2155     0D92                     	;# 
  2156     0D93                     	;# 
  2157     0D94                     	;# 
  2158     0D95                     	;# 
  2159     0D95                     	;# 
  2160     0D96                     	;# 
  2161     0D97                     	;# 
  2162     0D98                     	;# 
  2163     0D99                     	;# 
  2164     0D9A                     	;# 
  2165     0D9B                     	;# 
  2166     0D9C                     	;# 
  2167     0D9D                     	;# 
  2168     0D9E                     	;# 
  2169     0D9E                     	;# 
  2170     0D9F                     	;# 
  2171     0DA0                     	;# 
  2172     0DA1                     	;# 
  2173     0DA1                     	;# 
  2174     0DA2                     	;# 
  2175     0DA3                     	;# 
  2176     0DA4                     	;# 
  2177     0DA4                     	;# 
  2178     0DA5                     	;# 
  2179     0DA6                     	;# 
  2180     0DA7                     	;# 
  2181     0DA7                     	;# 
  2182     0DA8                     	;# 
  2183     0DA9                     	;# 
  2184     0DAA                     	;# 
  2185     0DAB                     	;# 
  2186     0DAC                     	;# 
  2187     0DAD                     	;# 
  2188     0DAE                     	;# 
  2189     0DAF                     	;# 
  2190     0E0F                     	;# 
  2191     0E10                     	;# 
  2192     0E11                     	;# 
  2193     0E12                     	;# 
  2194     0E13                     	;# 
  2195     0E14                     	;# 
  2196     0E15                     	;# 
  2197     0E16                     	;# 
  2198     0E17                     	;# 
  2199     0E17                     	;# 
  2200     0E18                     	;# 
  2201     0E18                     	;# 
  2202     0E19                     	;# 
  2203     0E1A                     	;# 
  2204     0E1B                     	;# 
  2205     0E1B                     	;# 
  2206     0E1C                     	;# 
  2207     0E1D                     	;# 
  2208     0E1E                     	;# 
  2209     0E1E                     	;# 
  2210     0E1F                     	;# 
  2211     0E20                     	;# 
  2212     0E21                     	;# 
  2213     0E22                     	;# 
  2214     0E23                     	;# 
  2215     0E24                     	;# 
  2216     0E25                     	;# 
  2217     0E26                     	;# 
  2218     0E27                     	;# 
  2219     0E28                     	;# 
  2220     0E29                     	;# 
  2221     0E2A                     	;# 
  2222     0E2B                     	;# 
  2223     0E2C                     	;# 
  2224     0E2D                     	;# 
  2225     0E2E                     	;# 
  2226     0E90                     	;# 
  2227     0E91                     	;# 
  2228     0E92                     	;# 
  2229     0E94                     	;# 
  2230     0E95                     	;# 
  2231     0E9C                     	;# 
  2232     0E9D                     	;# 
  2233     0E9E                     	;# 
  2234     0E9F                     	;# 
  2235     0EA0                     	;# 
  2236     0EA1                     	;# 
  2237     0EA2                     	;# 
  2238     0EA3                     	;# 
  2239     0EA4                     	;# 
  2240     0EA5                     	;# 
  2241     0EA6                     	;# 
  2242     0EA7                     	;# 
  2243     0F0F                     	;# 
  2244     0F10                     	;# 
  2245     0F11                     	;# 
  2246     0F12                     	;# 
  2247     0F13                     	;# 
  2248     0F14                     	;# 
  2249     0F15                     	;# 
  2250     0F16                     	;# 
  2251     0F17                     	;# 
  2252     0F18                     	;# 
  2253     0F19                     	;# 
  2254     0F1A                     	;# 
  2255     0F1B                     	;# 
  2256     0F1C                     	;# 
  2257     0F1D                     	;# 
  2258     0F1E                     	;# 
  2259     0F1F                     	;# 
  2260     0F20                     	;# 
  2261     0F21                     	;# 
  2262     0F22                     	;# 
  2263     0F23                     	;# 
  2264     0FE4                     	;# 
  2265     0FE5                     	;# 
  2266     0FE6                     	;# 
  2267     0FE7                     	;# 
  2268     0FE8                     	;# 
  2269     0FE9                     	;# 
  2270     0FEA                     	;# 
  2271     0FEB                     	;# 
  2272     0FED                     	;# 
  2273     0FEE                     	;# 
  2274     0FEF                     	;# 
  2275     0000                     	;# 
  2276     0001                     	;# 
  2277     0002                     	;# 
  2278     0003                     	;# 
  2279     0004                     	;# 
  2280     0005                     	;# 
  2281     0006                     	;# 
  2282     0007                     	;# 
  2283     0008                     	;# 
  2284     0009                     	;# 
  2285     000A                     	;# 
  2286     000B                     	;# 
  2287     000C                     	;# 
  2288     000D                     	;# 
  2289     000E                     	;# 
  2290     0010                     	;# 
  2291     0011                     	;# 
  2292     0012                     	;# 
  2293     0013                     	;# 
  2294     0014                     	;# 
  2295     0015                     	;# 
  2296     0016                     	;# 
  2297     0016                     	;# 
  2298     0017                     	;# 
  2299     0018                     	;# 
  2300     0019                     	;# 
  2301     001A                     	;# 
  2302     001A                     	;# 
  2303     001B                     	;# 
  2304     001B                     	;# 
  2305     001C                     	;# 
  2306     001D                     	;# 
  2307     001E                     	;# 
  2308     001F                     	;# 
  2309     008C                     	;# 
  2310     008D                     	;# 
  2311     008E                     	;# 
  2312     0090                     	;# 
  2313     0091                     	;# 
  2314     0092                     	;# 
  2315     0093                     	;# 
  2316     0094                     	;# 
  2317     0095                     	;# 
  2318     0096                     	;# 
  2319     0098                     	;# 
  2320     0099                     	;# 
  2321     009A                     	;# 
  2322     009B                     	;# 
  2323     009B                     	;# 
  2324     009C                     	;# 
  2325     009D                     	;# 
  2326     009E                     	;# 
  2327     009F                     	;# 
  2328     010C                     	;# 
  2329     010D                     	;# 
  2330     010E                     	;# 
  2331     0111                     	;# 
  2332     0112                     	;# 
  2333     0113                     	;# 
  2334     0114                     	;# 
  2335     0115                     	;# 
  2336     0116                     	;# 
  2337     0117                     	;# 
  2338     0118                     	;# 
  2339     0119                     	;# 
  2340     011C                     	;# 
  2341     018C                     	;# 
  2342     018D                     	;# 
  2343     018E                     	;# 
  2344     0191                     	;# 
  2345     0191                     	;# 
  2346     0192                     	;# 
  2347     0193                     	;# 
  2348     0193                     	;# 
  2349     0194                     	;# 
  2350     0195                     	;# 
  2351     0196                     	;# 
  2352     0197                     	;# 
  2353     0199                     	;# 
  2354     0199                     	;# 
  2355     0199                     	;# 
  2356     019A                     	;# 
  2357     019A                     	;# 
  2358     019A                     	;# 
  2359     019B                     	;# 
  2360     019B                     	;# 
  2361     019B                     	;# 
  2362     019B                     	;# 
  2363     019B                     	;# 
  2364     019C                     	;# 
  2365     019C                     	;# 
  2366     019C                     	;# 
  2367     019D                     	;# 
  2368     019D                     	;# 
  2369     019D                     	;# 
  2370     019E                     	;# 
  2371     019E                     	;# 
  2372     019E                     	;# 
  2373     019F                     	;# 
  2374     019F                     	;# 
  2375     019F                     	;# 
  2376     019F                     	;# 
  2377     019F                     	;# 
  2378     020C                     	;# 
  2379     020D                     	;# 
  2380     020E                     	;# 
  2381     0211                     	;# 
  2382     0211                     	;# 
  2383     0212                     	;# 
  2384     0212                     	;# 
  2385     0213                     	;# 
  2386     0213                     	;# 
  2387     0214                     	;# 
  2388     0214                     	;# 
  2389     0215                     	;# 
  2390     0215                     	;# 
  2391     0215                     	;# 
  2392     0215                     	;# 
  2393     0216                     	;# 
  2394     0216                     	;# 
  2395     0217                     	;# 
  2396     0217                     	;# 
  2397     028C                     	;# 
  2398     028D                     	;# 
  2399     028E                     	;# 
  2400     0291                     	;# 
  2401     0291                     	;# 
  2402     0292                     	;# 
  2403     0293                     	;# 
  2404     0294                     	;# 
  2405     0298                     	;# 
  2406     0298                     	;# 
  2407     0299                     	;# 
  2408     029A                     	;# 
  2409     029B                     	;# 
  2410     029E                     	;# 
  2411     030C                     	;# 
  2412     030D                     	;# 
  2413     030E                     	;# 
  2414     038C                     	;# 
  2415     038D                     	;# 
  2416     038E                     	;# 
  2417     0391                     	;# 
  2418     0392                     	;# 
  2419     0393                     	;# 
  2420     0394                     	;# 
  2421     0395                     	;# 
  2422     0396                     	;# 
  2423     0397                     	;# 
  2424     0398                     	;# 
  2425     0399                     	;# 
  2426     040E                     	;# 
  2427     0413                     	;# 
  2428     0413                     	;# 
  2429     0414                     	;# 
  2430     0414                     	;# 
  2431     0415                     	;# 
  2432     0416                     	;# 
  2433     0417                     	;# 
  2434     0418                     	;# 
  2435     041A                     	;# 
  2436     041A                     	;# 
  2437     041B                     	;# 
  2438     041B                     	;# 
  2439     041C                     	;# 
  2440     041D                     	;# 
  2441     041E                     	;# 
  2442     041F                     	;# 
  2443     0493                     	;# 
  2444     0494                     	;# 
  2445     0495                     	;# 
  2446     0496                     	;# 
  2447     049A                     	;# 
  2448     049B                     	;# 
  2449     049C                     	;# 
  2450     049D                     	;# 
  2451     058C                     	;# 
  2452     058C                     	;# 
  2453     058D                     	;# 
  2454     058E                     	;# 
  2455     058E                     	;# 
  2456     058F                     	;# 
  2457     0590                     	;# 
  2458     0590                     	;# 
  2459     0591                     	;# 
  2460     0592                     	;# 
  2461     0592                     	;# 
  2462     0593                     	;# 
  2463     0594                     	;# 
  2464     0594                     	;# 
  2465     0595                     	;# 
  2466     0596                     	;# 
  2467     0596                     	;# 
  2468     0597                     	;# 
  2469     0598                     	;# 
  2470     0599                     	;# 
  2471     059A                     	;# 
  2472     059B                     	;# 
  2473     059B                     	;# 
  2474     059C                     	;# 
  2475     059D                     	;# 
  2476     060C                     	;# 
  2477     060C                     	;# 
  2478     060D                     	;# 
  2479     060E                     	;# 
  2480     060F                     	;# 
  2481     060F                     	;# 
  2482     0610                     	;# 
  2483     0611                     	;# 
  2484     0612                     	;# 
  2485     0613                     	;# 
  2486     0614                     	;# 
  2487     0617                     	;# 
  2488     0617                     	;# 
  2489     0618                     	;# 
  2490     0619                     	;# 
  2491     061A                     	;# 
  2492     061A                     	;# 
  2493     061B                     	;# 
  2494     061C                     	;# 
  2495     0691                     	;# 
  2496     0692                     	;# 
  2497     0693                     	;# 
  2498     0694                     	;# 
  2499     0695                     	;# 
  2500     0696                     	;# 
  2501     0697                     	;# 
  2502     0699                     	;# 
  2503     069A                     	;# 
  2504     0711                     	;# 
  2505     0712                     	;# 
  2506     0713                     	;# 
  2507     0714                     	;# 
  2508     0715                     	;# 
  2509     0718                     	;# 
  2510     0718                     	;# 
  2511     0719                     	;# 
  2512     071A                     	;# 
  2513     071A                     	;# 
  2514     071B                     	;# 
  2515     071C                     	;# 
  2516     071D                     	;# 
  2517     0791                     	;# 
  2518     0791                     	;# 
  2519     0792                     	;# 
  2520     0793                     	;# 
  2521     0793                     	;# 
  2522     0794                     	;# 
  2523     0795                     	;# 
  2524     0795                     	;# 
  2525     0796                     	;# 
  2526     0797                     	;# 
  2527     0797                     	;# 
  2528     0798                     	;# 
  2529     0799                     	;# 
  2530     079A                     	;# 
  2531     080C                     	;# 
  2532     080C                     	;# 
  2533     080D                     	;# 
  2534     080E                     	;# 
  2535     080E                     	;# 
  2536     080F                     	;# 
  2537     0810                     	;# 
  2538     0810                     	;# 
  2539     0811                     	;# 
  2540     0812                     	;# 
  2541     0812                     	;# 
  2542     0813                     	;# 
  2543     0814                     	;# 
  2544     0815                     	;# 
  2545     0816                     	;# 
  2546     0817                     	;# 
  2547     0818                     	;# 
  2548     0819                     	;# 
  2549     081A                     	;# 
  2550     081A                     	;# 
  2551     081B                     	;# 
  2552     081C                     	;# 
  2553     081C                     	;# 
  2554     081D                     	;# 
  2555     088C                     	;# 
  2556     088D                     	;# 
  2557     088E                     	;# 
  2558     088F                     	;# 
  2559     088F                     	;# 
  2560     0890                     	;# 
  2561     0891                     	;# 
  2562     0892                     	;# 
  2563     0893                     	;# 
  2564     0893                     	;# 
  2565     0894                     	;# 
  2566     0895                     	;# 
  2567     0896                     	;# 
  2568     0897                     	;# 
  2569     0897                     	;# 
  2570     0898                     	;# 
  2571     0899                     	;# 
  2572     0D8C                     	;# 
  2573     0D8C                     	;# 
  2574     0D8D                     	;# 
  2575     0D8E                     	;# 
  2576     0D8F                     	;# 
  2577     0D8F                     	;# 
  2578     0D90                     	;# 
  2579     0D91                     	;# 
  2580     0D92                     	;# 
  2581     0D92                     	;# 
  2582     0D93                     	;# 
  2583     0D94                     	;# 
  2584     0D95                     	;# 
  2585     0D95                     	;# 
  2586     0D96                     	;# 
  2587     0D97                     	;# 
  2588     0D98                     	;# 
  2589     0D99                     	;# 
  2590     0D9A                     	;# 
  2591     0D9B                     	;# 
  2592     0D9C                     	;# 
  2593     0D9D                     	;# 
  2594     0D9E                     	;# 
  2595     0D9E                     	;# 
  2596     0D9F                     	;# 
  2597     0DA0                     	;# 
  2598     0DA1                     	;# 
  2599     0DA1                     	;# 
  2600     0DA2                     	;# 
  2601     0DA3                     	;# 
  2602     0DA4                     	;# 
  2603     0DA4                     	;# 
  2604     0DA5                     	;# 
  2605     0DA6                     	;# 
  2606     0DA7                     	;# 
  2607     0DA7                     	;# 
  2608     0DA8                     	;# 
  2609     0DA9                     	;# 
  2610     0DAA                     	;# 
  2611     0DAB                     	;# 
  2612     0DAC                     	;# 
  2613     0DAD                     	;# 
  2614     0DAE                     	;# 
  2615     0DAF                     	;# 
  2616     0E0F                     	;# 
  2617     0E10                     	;# 
  2618     0E11                     	;# 
  2619     0E12                     	;# 
  2620     0E13                     	;# 
  2621     0E14                     	;# 
  2622     0E15                     	;# 
  2623     0E16                     	;# 
  2624     0E17                     	;# 
  2625     0E17                     	;# 
  2626     0E18                     	;# 
  2627     0E18                     	;# 
  2628     0E19                     	;# 
  2629     0E1A                     	;# 
  2630     0E1B                     	;# 
  2631     0E1B                     	;# 
  2632     0E1C                     	;# 
  2633     0E1D                     	;# 
  2634     0E1E                     	;# 
  2635     0E1E                     	;# 
  2636     0E1F                     	;# 
  2637     0E20                     	;# 
  2638     0E21                     	;# 
  2639     0E22                     	;# 
  2640     0E23                     	;# 
  2641     0E24                     	;# 
  2642     0E25                     	;# 
  2643     0E26                     	;# 
  2644     0E27                     	;# 
  2645     0E28                     	;# 
  2646     0E29                     	;# 
  2647     0E2A                     	;# 
  2648     0E2B                     	;# 
  2649     0E2C                     	;# 
  2650     0E2D                     	;# 
  2651     0E2E                     	;# 
  2652     0E90                     	;# 
  2653     0E91                     	;# 
  2654     0E92                     	;# 
  2655     0E94                     	;# 
  2656     0E95                     	;# 
  2657     0E9C                     	;# 
  2658     0E9D                     	;# 
  2659     0E9E                     	;# 
  2660     0E9F                     	;# 
  2661     0EA0                     	;# 
  2662     0EA1                     	;# 
  2663     0EA2                     	;# 
  2664     0EA3                     	;# 
  2665     0EA4                     	;# 
  2666     0EA5                     	;# 
  2667     0EA6                     	;# 
  2668     0EA7                     	;# 
  2669     0F0F                     	;# 
  2670     0F10                     	;# 
  2671     0F11                     	;# 
  2672     0F12                     	;# 
  2673     0F13                     	;# 
  2674     0F14                     	;# 
  2675     0F15                     	;# 
  2676     0F16                     	;# 
  2677     0F17                     	;# 
  2678     0F18                     	;# 
  2679     0F19                     	;# 
  2680     0F1A                     	;# 
  2681     0F1B                     	;# 
  2682     0F1C                     	;# 
  2683     0F1D                     	;# 
  2684     0F1E                     	;# 
  2685     0F1F                     	;# 
  2686     0F20                     	;# 
  2687     0F21                     	;# 
  2688     0F22                     	;# 
  2689     0F23                     	;# 
  2690     0FE4                     	;# 
  2691     0FE5                     	;# 
  2692     0FE6                     	;# 
  2693     0FE7                     	;# 
  2694     0FE8                     	;# 
  2695     0FE9                     	;# 
  2696     0FEA                     	;# 
  2697     0FEB                     	;# 
  2698     0FED                     	;# 
  2699     0FEE                     	;# 
  2700     0FEF                     	;# 
  2701     0000                     	;# 
  2702     0001                     	;# 
  2703     0002                     	;# 
  2704     0003                     	;# 
  2705     0004                     	;# 
  2706     0005                     	;# 
  2707     0006                     	;# 
  2708     0007                     	;# 
  2709     0008                     	;# 
  2710     0009                     	;# 
  2711     000A                     	;# 
  2712     000B                     	;# 
  2713     000C                     	;# 
  2714     000D                     	;# 
  2715     000E                     	;# 
  2716     0010                     	;# 
  2717     0011                     	;# 
  2718     0012                     	;# 
  2719     0013                     	;# 
  2720     0014                     	;# 
  2721     0015                     	;# 
  2722     0016                     	;# 
  2723     0016                     	;# 
  2724     0017                     	;# 
  2725     0018                     	;# 
  2726     0019                     	;# 
  2727     001A                     	;# 
  2728     001A                     	;# 
  2729     001B                     	;# 
  2730     001B                     	;# 
  2731     001C                     	;# 
  2732     001D                     	;# 
  2733     001E                     	;# 
  2734     001F                     	;# 
  2735     008C                     	;# 
  2736     008D                     	;# 
  2737     008E                     	;# 
  2738     0090                     	;# 
  2739     0091                     	;# 
  2740     0092                     	;# 
  2741     0093                     	;# 
  2742     0094                     	;# 
  2743     0095                     	;# 
  2744     0096                     	;# 
  2745     0098                     	;# 
  2746     0099                     	;# 
  2747     009A                     	;# 
  2748     009B                     	;# 
  2749     009B                     	;# 
  2750     009C                     	;# 
  2751     009D                     	;# 
  2752     009E                     	;# 
  2753     009F                     	;# 
  2754     010C                     	;# 
  2755     010D                     	;# 
  2756     010E                     	;# 
  2757     0111                     	;# 
  2758     0112                     	;# 
  2759     0113                     	;# 
  2760     0114                     	;# 
  2761     0115                     	;# 
  2762     0116                     	;# 
  2763     0117                     	;# 
  2764     0118                     	;# 
  2765     0119                     	;# 
  2766     011C                     	;# 
  2767     018C                     	;# 
  2768     018D                     	;# 
  2769     018E                     	;# 
  2770     0191                     	;# 
  2771     0191                     	;# 
  2772     0192                     	;# 
  2773     0193                     	;# 
  2774     0193                     	;# 
  2775     0194                     	;# 
  2776     0195                     	;# 
  2777     0196                     	;# 
  2778     0197                     	;# 
  2779     0199                     	;# 
  2780     0199                     	;# 
  2781     0199                     	;# 
  2782     019A                     	;# 
  2783     019A                     	;# 
  2784     019A                     	;# 
  2785     019B                     	;# 
  2786     019B                     	;# 
  2787     019B                     	;# 
  2788     019B                     	;# 
  2789     019B                     	;# 
  2790     019C                     	;# 
  2791     019C                     	;# 
  2792     019C                     	;# 
  2793     019D                     	;# 
  2794     019D                     	;# 
  2795     019D                     	;# 
  2796     019E                     	;# 
  2797     019E                     	;# 
  2798     019E                     	;# 
  2799     019F                     	;# 
  2800     019F                     	;# 
  2801     019F                     	;# 
  2802     019F                     	;# 
  2803     019F                     	;# 
  2804     020C                     	;# 
  2805     020D                     	;# 
  2806     020E                     	;# 
  2807     0211                     	;# 
  2808     0211                     	;# 
  2809     0212                     	;# 
  2810     0212                     	;# 
  2811     0213                     	;# 
  2812     0213                     	;# 
  2813     0214                     	;# 
  2814     0214                     	;# 
  2815     0215                     	;# 
  2816     0215                     	;# 
  2817     0215                     	;# 
  2818     0215                     	;# 
  2819     0216                     	;# 
  2820     0216                     	;# 
  2821     0217                     	;# 
  2822     0217                     	;# 
  2823     028C                     	;# 
  2824     028D                     	;# 
  2825     028E                     	;# 
  2826     0291                     	;# 
  2827     0291                     	;# 
  2828     0292                     	;# 
  2829     0293                     	;# 
  2830     0294                     	;# 
  2831     0298                     	;# 
  2832     0298                     	;# 
  2833     0299                     	;# 
  2834     029A                     	;# 
  2835     029B                     	;# 
  2836     029E                     	;# 
  2837     030C                     	;# 
  2838     030D                     	;# 
  2839     030E                     	;# 
  2840     038C                     	;# 
  2841     038D                     	;# 
  2842     038E                     	;# 
  2843     0391                     	;# 
  2844     0392                     	;# 
  2845     0393                     	;# 
  2846     0394                     	;# 
  2847     0395                     	;# 
  2848     0396                     	;# 
  2849     0397                     	;# 
  2850     0398                     	;# 
  2851     0399                     	;# 
  2852     040E                     	;# 
  2853     0413                     	;# 
  2854     0413                     	;# 
  2855     0414                     	;# 
  2856     0414                     	;# 
  2857     0415                     	;# 
  2858     0416                     	;# 
  2859     0417                     	;# 
  2860     0418                     	;# 
  2861     041A                     	;# 
  2862     041A                     	;# 
  2863     041B                     	;# 
  2864     041B                     	;# 
  2865     041C                     	;# 
  2866     041D                     	;# 
  2867     041E                     	;# 
  2868     041F                     	;# 
  2869     0493                     	;# 
  2870     0494                     	;# 
  2871     0495                     	;# 
  2872     0496                     	;# 
  2873     049A                     	;# 
  2874     049B                     	;# 
  2875     049C                     	;# 
  2876     049D                     	;# 
  2877     058C                     	;# 
  2878     058C                     	;# 
  2879     058D                     	;# 
  2880     058E                     	;# 
  2881     058E                     	;# 
  2882     058F                     	;# 
  2883     0590                     	;# 
  2884     0590                     	;# 
  2885     0591                     	;# 
  2886     0592                     	;# 
  2887     0592                     	;# 
  2888     0593                     	;# 
  2889     0594                     	;# 
  2890     0594                     	;# 
  2891     0595                     	;# 
  2892     0596                     	;# 
  2893     0596                     	;# 
  2894     0597                     	;# 
  2895     0598                     	;# 
  2896     0599                     	;# 
  2897     059A                     	;# 
  2898     059B                     	;# 
  2899     059B                     	;# 
  2900     059C                     	;# 
  2901     059D                     	;# 
  2902     060C                     	;# 
  2903     060C                     	;# 
  2904     060D                     	;# 
  2905     060E                     	;# 
  2906     060F                     	;# 
  2907     060F                     	;# 
  2908     0610                     	;# 
  2909     0611                     	;# 
  2910     0612                     	;# 
  2911     0613                     	;# 
  2912     0614                     	;# 
  2913     0617                     	;# 
  2914     0617                     	;# 
  2915     0618                     	;# 
  2916     0619                     	;# 
  2917     061A                     	;# 
  2918     061A                     	;# 
  2919     061B                     	;# 
  2920     061C                     	;# 
  2921     0691                     	;# 
  2922     0692                     	;# 
  2923     0693                     	;# 
  2924     0694                     	;# 
  2925     0695                     	;# 
  2926     0696                     	;# 
  2927     0697                     	;# 
  2928     0699                     	;# 
  2929     069A                     	;# 
  2930     0711                     	;# 
  2931     0712                     	;# 
  2932     0713                     	;# 
  2933     0714                     	;# 
  2934     0715                     	;# 
  2935     0718                     	;# 
  2936     0718                     	;# 
  2937     0719                     	;# 
  2938     071A                     	;# 
  2939     071A                     	;# 
  2940     071B                     	;# 
  2941     071C                     	;# 
  2942     071D                     	;# 
  2943     0791                     	;# 
  2944     0791                     	;# 
  2945     0792                     	;# 
  2946     0793                     	;# 
  2947     0793                     	;# 
  2948     0794                     	;# 
  2949     0795                     	;# 
  2950     0795                     	;# 
  2951     0796                     	;# 
  2952     0797                     	;# 
  2953     0797                     	;# 
  2954     0798                     	;# 
  2955     0799                     	;# 
  2956     079A                     	;# 
  2957     080C                     	;# 
  2958     080C                     	;# 
  2959     080D                     	;# 
  2960     080E                     	;# 
  2961     080E                     	;# 
  2962     080F                     	;# 
  2963     0810                     	;# 
  2964     0810                     	;# 
  2965     0811                     	;# 
  2966     0812                     	;# 
  2967     0812                     	;# 
  2968     0813                     	;# 
  2969     0814                     	;# 
  2970     0815                     	;# 
  2971     0816                     	;# 
  2972     0817                     	;# 
  2973     0818                     	;# 
  2974     0819                     	;# 
  2975     081A                     	;# 
  2976     081A                     	;# 
  2977     081B                     	;# 
  2978     081C                     	;# 
  2979     081C                     	;# 
  2980     081D                     	;# 
  2981     088C                     	;# 
  2982     088D                     	;# 
  2983     088E                     	;# 
  2984     088F                     	;# 
  2985     088F                     	;# 
  2986     0890                     	;# 
  2987     0891                     	;# 
  2988     0892                     	;# 
  2989     0893                     	;# 
  2990     0893                     	;# 
  2991     0894                     	;# 
  2992     0895                     	;# 
  2993     0896                     	;# 
  2994     0897                     	;# 
  2995     0897                     	;# 
  2996     0898                     	;# 
  2997     0899                     	;# 
  2998     0D8C                     	;# 
  2999     0D8C                     	;# 
  3000     0D8D                     	;# 
  3001     0D8E                     	;# 
  3002     0D8F                     	;# 
  3003     0D8F                     	;# 
  3004     0D90                     	;# 
  3005     0D91                     	;# 
  3006     0D92                     	;# 
  3007     0D92                     	;# 
  3008     0D93                     	;# 
  3009     0D94                     	;# 
  3010     0D95                     	;# 
  3011     0D95                     	;# 
  3012     0D96                     	;# 
  3013     0D97                     	;# 
  3014     0D98                     	;# 
  3015     0D99                     	;# 
  3016     0D9A                     	;# 
  3017     0D9B                     	;# 
  3018     0D9C                     	;# 
  3019     0D9D                     	;# 
  3020     0D9E                     	;# 
  3021     0D9E                     	;# 
  3022     0D9F                     	;# 
  3023     0DA0                     	;# 
  3024     0DA1                     	;# 
  3025     0DA1                     	;# 
  3026     0DA2                     	;# 
  3027     0DA3                     	;# 
  3028     0DA4                     	;# 
  3029     0DA4                     	;# 
  3030     0DA5                     	;# 
  3031     0DA6                     	;# 
  3032     0DA7                     	;# 
  3033     0DA7                     	;# 
  3034     0DA8                     	;# 
  3035     0DA9                     	;# 
  3036     0DAA                     	;# 
  3037     0DAB                     	;# 
  3038     0DAC                     	;# 
  3039     0DAD                     	;# 
  3040     0DAE                     	;# 
  3041     0DAF                     	;# 
  3042     0E0F                     	;# 
  3043     0E10                     	;# 
  3044     0E11                     	;# 
  3045     0E12                     	;# 
  3046     0E13                     	;# 
  3047     0E14                     	;# 
  3048     0E15                     	;# 
  3049     0E16                     	;# 
  3050     0E17                     	;# 
  3051     0E17                     	;# 
  3052     0E18                     	;# 
  3053     0E18                     	;# 
  3054     0E19                     	;# 
  3055     0E1A                     	;# 
  3056     0E1B                     	;# 
  3057     0E1B                     	;# 
  3058     0E1C                     	;# 
  3059     0E1D                     	;# 
  3060     0E1E                     	;# 
  3061     0E1E                     	;# 
  3062     0E1F                     	;# 
  3063     0E20                     	;# 
  3064     0E21                     	;# 
  3065     0E22                     	;# 
  3066     0E23                     	;# 
  3067     0E24                     	;# 
  3068     0E25                     	;# 
  3069     0E26                     	;# 
  3070     0E27                     	;# 
  3071     0E28                     	;# 
  3072     0E29                     	;# 
  3073     0E2A                     	;# 
  3074     0E2B                     	;# 
  3075     0E2C                     	;# 
  3076     0E2D                     	;# 
  3077     0E2E                     	;# 
  3078     0E90                     	;# 
  3079     0E91                     	;# 
  3080     0E92                     	;# 
  3081     0E94                     	;# 
  3082     0E95                     	;# 
  3083     0E9C                     	;# 
  3084     0E9D                     	;# 
  3085     0E9E                     	;# 
  3086     0E9F                     	;# 
  3087     0EA0                     	;# 
  3088     0EA1                     	;# 
  3089     0EA2                     	;# 
  3090     0EA3                     	;# 
  3091     0EA4                     	;# 
  3092     0EA5                     	;# 
  3093     0EA6                     	;# 
  3094     0EA7                     	;# 
  3095     0F0F                     	;# 
  3096     0F10                     	;# 
  3097     0F11                     	;# 
  3098     0F12                     	;# 
  3099     0F13                     	;# 
  3100     0F14                     	;# 
  3101     0F15                     	;# 
  3102     0F16                     	;# 
  3103     0F17                     	;# 
  3104     0F18                     	;# 
  3105     0F19                     	;# 
  3106     0F1A                     	;# 
  3107     0F1B                     	;# 
  3108     0F1C                     	;# 
  3109     0F1D                     	;# 
  3110     0F1E                     	;# 
  3111     0F1F                     	;# 
  3112     0F20                     	;# 
  3113     0F21                     	;# 
  3114     0F22                     	;# 
  3115     0F23                     	;# 
  3116     0FE4                     	;# 
  3117     0FE5                     	;# 
  3118     0FE6                     	;# 
  3119     0FE7                     	;# 
  3120     0FE8                     	;# 
  3121     0FE9                     	;# 
  3122     0FEA                     	;# 
  3123     0FEB                     	;# 
  3124     0FED                     	;# 
  3125     0FEE                     	;# 
  3126     0FEF                     	;# 
  3127     0000                     	;# 
  3128     0001                     	;# 
  3129     0002                     	;# 
  3130     0003                     	;# 
  3131     0004                     	;# 
  3132     0005                     	;# 
  3133     0006                     	;# 
  3134     0007                     	;# 
  3135     0008                     	;# 
  3136     0009                     	;# 
  3137     000A                     	;# 
  3138     000B                     	;# 
  3139     000C                     	;# 
  3140     000D                     	;# 
  3141     000E                     	;# 
  3142     0010                     	;# 
  3143     0011                     	;# 
  3144     0012                     	;# 
  3145     0013                     	;# 
  3146     0014                     	;# 
  3147     0015                     	;# 
  3148     0016                     	;# 
  3149     0016                     	;# 
  3150     0017                     	;# 
  3151     0018                     	;# 
  3152     0019                     	;# 
  3153     001A                     	;# 
  3154     001A                     	;# 
  3155     001B                     	;# 
  3156     001B                     	;# 
  3157     001C                     	;# 
  3158     001D                     	;# 
  3159     001E                     	;# 
  3160     001F                     	;# 
  3161     008C                     	;# 
  3162     008D                     	;# 
  3163     008E                     	;# 
  3164     0090                     	;# 
  3165     0091                     	;# 
  3166     0092                     	;# 
  3167     0093                     	;# 
  3168     0094                     	;# 
  3169     0095                     	;# 
  3170     0096                     	;# 
  3171     0098                     	;# 
  3172     0099                     	;# 
  3173     009A                     	;# 
  3174     009B                     	;# 
  3175     009B                     	;# 
  3176     009C                     	;# 
  3177     009D                     	;# 
  3178     009E                     	;# 
  3179     009F                     	;# 
  3180     010C                     	;# 
  3181     010D                     	;# 
  3182     010E                     	;# 
  3183     0111                     	;# 
  3184     0112                     	;# 
  3185     0113                     	;# 
  3186     0114                     	;# 
  3187     0115                     	;# 
  3188     0116                     	;# 
  3189     0117                     	;# 
  3190     0118                     	;# 
  3191     0119                     	;# 
  3192     011C                     	;# 
  3193     018C                     	;# 
  3194     018D                     	;# 
  3195     018E                     	;# 
  3196     0191                     	;# 
  3197     0191                     	;# 
  3198     0192                     	;# 
  3199     0193                     	;# 
  3200     0193                     	;# 
  3201     0194                     	;# 
  3202     0195                     	;# 
  3203     0196                     	;# 
  3204     0197                     	;# 
  3205     0199                     	;# 
  3206     0199                     	;# 
  3207     0199                     	;# 
  3208     019A                     	;# 
  3209     019A                     	;# 
  3210     019A                     	;# 
  3211     019B                     	;# 
  3212     019B                     	;# 
  3213     019B                     	;# 
  3214     019B                     	;# 
  3215     019B                     	;# 
  3216     019C                     	;# 
  3217     019C                     	;# 
  3218     019C                     	;# 
  3219     019D                     	;# 
  3220     019D                     	;# 
  3221     019D                     	;# 
  3222     019E                     	;# 
  3223     019E                     	;# 
  3224     019E                     	;# 
  3225     019F                     	;# 
  3226     019F                     	;# 
  3227     019F                     	;# 
  3228     019F                     	;# 
  3229     019F                     	;# 
  3230     020C                     	;# 
  3231     020D                     	;# 
  3232     020E                     	;# 
  3233     0211                     	;# 
  3234     0211                     	;# 
  3235     0212                     	;# 
  3236     0212                     	;# 
  3237     0213                     	;# 
  3238     0213                     	;# 
  3239     0214                     	;# 
  3240     0214                     	;# 
  3241     0215                     	;# 
  3242     0215                     	;# 
  3243     0215                     	;# 
  3244     0215                     	;# 
  3245     0216                     	;# 
  3246     0216                     	;# 
  3247     0217                     	;# 
  3248     0217                     	;# 
  3249     028C                     	;# 
  3250     028D                     	;# 
  3251     028E                     	;# 
  3252     0291                     	;# 
  3253     0291                     	;# 
  3254     0292                     	;# 
  3255     0293                     	;# 
  3256     0294                     	;# 
  3257     0298                     	;# 
  3258     0298                     	;# 
  3259     0299                     	;# 
  3260     029A                     	;# 
  3261     029B                     	;# 
  3262     029E                     	;# 
  3263     030C                     	;# 
  3264     030D                     	;# 
  3265     030E                     	;# 
  3266     038C                     	;# 
  3267     038D                     	;# 
  3268     038E                     	;# 
  3269     0391                     	;# 
  3270     0392                     	;# 
  3271     0393                     	;# 
  3272     0394                     	;# 
  3273     0395                     	;# 
  3274     0396                     	;# 
  3275     0397                     	;# 
  3276     0398                     	;# 
  3277     0399                     	;# 
  3278     040E                     	;# 
  3279     0413                     	;# 
  3280     0413                     	;# 
  3281     0414                     	;# 
  3282     0414                     	;# 
  3283     0415                     	;# 
  3284     0416                     	;# 
  3285     0417                     	;# 
  3286     0418                     	;# 
  3287     041A                     	;# 
  3288     041A                     	;# 
  3289     041B                     	;# 
  3290     041B                     	;# 
  3291     041C                     	;# 
  3292     041D                     	;# 
  3293     041E                     	;# 
  3294     041F                     	;# 
  3295     0493                     	;# 
  3296     0494                     	;# 
  3297     0495                     	;# 
  3298     0496                     	;# 
  3299     049A                     	;# 
  3300     049B                     	;# 
  3301     049C                     	;# 
  3302     049D                     	;# 
  3303     058C                     	;# 
  3304     058C                     	;# 
  3305     058D                     	;# 
  3306     058E                     	;# 
  3307     058E                     	;# 
  3308     058F                     	;# 
  3309     0590                     	;# 
  3310     0590                     	;# 
  3311     0591                     	;# 
  3312     0592                     	;# 
  3313     0592                     	;# 
  3314     0593                     	;# 
  3315     0594                     	;# 
  3316     0594                     	;# 
  3317     0595                     	;# 
  3318     0596                     	;# 
  3319     0596                     	;# 
  3320     0597                     	;# 
  3321     0598                     	;# 
  3322     0599                     	;# 
  3323     059A                     	;# 
  3324     059B                     	;# 
  3325     059B                     	;# 
  3326     059C                     	;# 
  3327     059D                     	;# 
  3328     060C                     	;# 
  3329     060C                     	;# 
  3330     060D                     	;# 
  3331     060E                     	;# 
  3332     060F                     	;# 
  3333     060F                     	;# 
  3334     0610                     	;# 
  3335     0611                     	;# 
  3336     0612                     	;# 
  3337     0613                     	;# 
  3338     0614                     	;# 
  3339     0617                     	;# 
  3340     0617                     	;# 
  3341     0618                     	;# 
  3342     0619                     	;# 
  3343     061A                     	;# 
  3344     061A                     	;# 
  3345     061B                     	;# 
  3346     061C                     	;# 
  3347     0691                     	;# 
  3348     0692                     	;# 
  3349     0693                     	;# 
  3350     0694                     	;# 
  3351     0695                     	;# 
  3352     0696                     	;# 
  3353     0697                     	;# 
  3354     0699                     	;# 
  3355     069A                     	;# 
  3356     0711                     	;# 
  3357     0712                     	;# 
  3358     0713                     	;# 
  3359     0714                     	;# 
  3360     0715                     	;# 
  3361     0718                     	;# 
  3362     0718                     	;# 
  3363     0719                     	;# 
  3364     071A                     	;# 
  3365     071A                     	;# 
  3366     071B                     	;# 
  3367     071C                     	;# 
  3368     071D                     	;# 
  3369     0791                     	;# 
  3370     0791                     	;# 
  3371     0792                     	;# 
  3372     0793                     	;# 
  3373     0793                     	;# 
  3374     0794                     	;# 
  3375     0795                     	;# 
  3376     0795                     	;# 
  3377     0796                     	;# 
  3378     0797                     	;# 
  3379     0797                     	;# 
  3380     0798                     	;# 
  3381     0799                     	;# 
  3382     079A                     	;# 
  3383     080C                     	;# 
  3384     080C                     	;# 
  3385     080D                     	;# 
  3386     080E                     	;# 
  3387     080E                     	;# 
  3388     080F                     	;# 
  3389     0810                     	;# 
  3390     0810                     	;# 
  3391     0811                     	;# 
  3392     0812                     	;# 
  3393     0812                     	;# 
  3394     0813                     	;# 
  3395     0814                     	;# 
  3396     0815                     	;# 
  3397     0816                     	;# 
  3398     0817                     	;# 
  3399     0818                     	;# 
  3400     0819                     	;# 
  3401     081A                     	;# 
  3402     081A                     	;# 
  3403     081B                     	;# 
  3404     081C                     	;# 
  3405     081C                     	;# 
  3406     081D                     	;# 
  3407     088C                     	;# 
  3408     088D                     	;# 
  3409     088E                     	;# 
  3410     088F                     	;# 
  3411     088F                     	;# 
  3412     0890                     	;# 
  3413     0891                     	;# 
  3414     0892                     	;# 
  3415     0893                     	;# 
  3416     0893                     	;# 
  3417     0894                     	;# 
  3418     0895                     	;# 
  3419     0896                     	;# 
  3420     0897                     	;# 
  3421     0897                     	;# 
  3422     0898                     	;# 
  3423     0899                     	;# 
  3424     0D8C                     	;# 
  3425     0D8C                     	;# 
  3426     0D8D                     	;# 
  3427     0D8E                     	;# 
  3428     0D8F                     	;# 
  3429     0D8F                     	;# 
  3430     0D90                     	;# 
  3431     0D91                     	;# 
  3432     0D92                     	;# 
  3433     0D92                     	;# 
  3434     0D93                     	;# 
  3435     0D94                     	;# 
  3436     0D95                     	;# 
  3437     0D95                     	;# 
  3438     0D96                     	;# 
  3439     0D97                     	;# 
  3440     0D98                     	;# 
  3441     0D99                     	;# 
  3442     0D9A                     	;# 
  3443     0D9B                     	;# 
  3444     0D9C                     	;# 
  3445     0D9D                     	;# 
  3446     0D9E                     	;# 
  3447     0D9E                     	;# 
  3448     0D9F                     	;# 
  3449     0DA0                     	;# 
  3450     0DA1                     	;# 
  3451     0DA1                     	;# 
  3452     0DA2                     	;# 
  3453     0DA3                     	;# 
  3454     0DA4                     	;# 
  3455     0DA4                     	;# 
  3456     0DA5                     	;# 
  3457     0DA6                     	;# 
  3458     0DA7                     	;# 
  3459     0DA7                     	;# 
  3460     0DA8                     	;# 
  3461     0DA9                     	;# 
  3462     0DAA                     	;# 
  3463     0DAB                     	;# 
  3464     0DAC                     	;# 
  3465     0DAD                     	;# 
  3466     0DAE                     	;# 
  3467     0DAF                     	;# 
  3468     0E0F                     	;# 
  3469     0E10                     	;# 
  3470     0E11                     	;# 
  3471     0E12                     	;# 
  3472     0E13                     	;# 
  3473     0E14                     	;# 
  3474     0E15                     	;# 
  3475     0E16                     	;# 
  3476     0E17                     	;# 
  3477     0E17                     	;# 
  3478     0E18                     	;# 
  3479     0E18                     	;# 
  3480     0E19                     	;# 
  3481     0E1A                     	;# 
  3482     0E1B                     	;# 
  3483     0E1B                     	;# 
  3484     0E1C                     	;# 
  3485     0E1D                     	;# 
  3486     0E1E                     	;# 
  3487     0E1E                     	;# 
  3488     0E1F                     	;# 
  3489     0E20                     	;# 
  3490     0E21                     	;# 
  3491     0E22                     	;# 
  3492     0E23                     	;# 
  3493     0E24                     	;# 
  3494     0E25                     	;# 
  3495     0E26                     	;# 
  3496     0E27                     	;# 
  3497     0E28                     	;# 
  3498     0E29                     	;# 
  3499     0E2A                     	;# 
  3500     0E2B                     	;# 
  3501     0E2C                     	;# 
  3502     0E2D                     	;# 
  3503     0E2E                     	;# 
  3504     0E90                     	;# 
  3505     0E91                     	;# 
  3506     0E92                     	;# 
  3507     0E94                     	;# 
  3508     0E95                     	;# 
  3509     0E9C                     	;# 
  3510     0E9D                     	;# 
  3511     0E9E                     	;# 
  3512     0E9F                     	;# 
  3513     0EA0                     	;# 
  3514     0EA1                     	;# 
  3515     0EA2                     	;# 
  3516     0EA3                     	;# 
  3517     0EA4                     	;# 
  3518     0EA5                     	;# 
  3519     0EA6                     	;# 
  3520     0EA7                     	;# 
  3521     0F0F                     	;# 
  3522     0F10                     	;# 
  3523     0F11                     	;# 
  3524     0F12                     	;# 
  3525     0F13                     	;# 
  3526     0F14                     	;# 
  3527     0F15                     	;# 
  3528     0F16                     	;# 
  3529     0F17                     	;# 
  3530     0F18                     	;# 
  3531     0F19                     	;# 
  3532     0F1A                     	;# 
  3533     0F1B                     	;# 
  3534     0F1C                     	;# 
  3535     0F1D                     	;# 
  3536     0F1E                     	;# 
  3537     0F1F                     	;# 
  3538     0F20                     	;# 
  3539     0F21                     	;# 
  3540     0F22                     	;# 
  3541     0F23                     	;# 
  3542     0FE4                     	;# 
  3543     0FE5                     	;# 
  3544     0FE6                     	;# 
  3545     0FE7                     	;# 
  3546     0FE8                     	;# 
  3547     0FE9                     	;# 
  3548     0FEA                     	;# 
  3549     0FEB                     	;# 
  3550     0FED                     	;# 
  3551     0FEE                     	;# 
  3552     0FEF                     	;# 
  3553     0000                     	;# 
  3554     0001                     	;# 
  3555     0002                     	;# 
  3556     0003                     	;# 
  3557     0004                     	;# 
  3558     0005                     	;# 
  3559     0006                     	;# 
  3560     0007                     	;# 
  3561     0008                     	;# 
  3562     0009                     	;# 
  3563     000A                     	;# 
  3564     000B                     	;# 
  3565     000C                     	;# 
  3566     000D                     	;# 
  3567     000E                     	;# 
  3568     0010                     	;# 
  3569     0011                     	;# 
  3570     0012                     	;# 
  3571     0013                     	;# 
  3572     0014                     	;# 
  3573     0015                     	;# 
  3574     0016                     	;# 
  3575     0016                     	;# 
  3576     0017                     	;# 
  3577     0018                     	;# 
  3578     0019                     	;# 
  3579     001A                     	;# 
  3580     001A                     	;# 
  3581     001B                     	;# 
  3582     001B                     	;# 
  3583     001C                     	;# 
  3584     001D                     	;# 
  3585     001E                     	;# 
  3586     001F                     	;# 
  3587     008C                     	;# 
  3588     008D                     	;# 
  3589     008E                     	;# 
  3590     0090                     	;# 
  3591     0091                     	;# 
  3592     0092                     	;# 
  3593     0093                     	;# 
  3594     0094                     	;# 
  3595     0095                     	;# 
  3596     0096                     	;# 
  3597     0098                     	;# 
  3598     0099                     	;# 
  3599     009A                     	;# 
  3600     009B                     	;# 
  3601     009B                     	;# 
  3602     009C                     	;# 
  3603     009D                     	;# 
  3604     009E                     	;# 
  3605     009F                     	;# 
  3606     010C                     	;# 
  3607     010D                     	;# 
  3608     010E                     	;# 
  3609     0111                     	;# 
  3610     0112                     	;# 
  3611     0113                     	;# 
  3612     0114                     	;# 
  3613     0115                     	;# 
  3614     0116                     	;# 
  3615     0117                     	;# 
  3616     0118                     	;# 
  3617     0119                     	;# 
  3618     011C                     	;# 
  3619     018C                     	;# 
  3620     018D                     	;# 
  3621     018E                     	;# 
  3622     0191                     	;# 
  3623     0191                     	;# 
  3624     0192                     	;# 
  3625     0193                     	;# 
  3626     0193                     	;# 
  3627     0194                     	;# 
  3628     0195                     	;# 
  3629     0196                     	;# 
  3630     0197                     	;# 
  3631     0199                     	;# 
  3632     0199                     	;# 
  3633     0199                     	;# 
  3634     019A                     	;# 
  3635     019A                     	;# 
  3636     019A                     	;# 
  3637     019B                     	;# 
  3638     019B                     	;# 
  3639     019B                     	;# 
  3640     019B                     	;# 
  3641     019B                     	;# 
  3642     019C                     	;# 
  3643     019C                     	;# 
  3644     019C                     	;# 
  3645     019D                     	;# 
  3646     019D                     	;# 
  3647     019D                     	;# 
  3648     019E                     	;# 
  3649     019E                     	;# 
  3650     019E                     	;# 
  3651     019F                     	;# 
  3652     019F                     	;# 
  3653     019F                     	;# 
  3654     019F                     	;# 
  3655     019F                     	;# 
  3656     020C                     	;# 
  3657     020D                     	;# 
  3658     020E                     	;# 
  3659     0211                     	;# 
  3660     0211                     	;# 
  3661     0212                     	;# 
  3662     0212                     	;# 
  3663     0213                     	;# 
  3664     0213                     	;# 
  3665     0214                     	;# 
  3666     0214                     	;# 
  3667     0215                     	;# 
  3668     0215                     	;# 
  3669     0215                     	;# 
  3670     0215                     	;# 
  3671     0216                     	;# 
  3672     0216                     	;# 
  3673     0217                     	;# 
  3674     0217                     	;# 
  3675     028C                     	;# 
  3676     028D                     	;# 
  3677     028E                     	;# 
  3678     0291                     	;# 
  3679     0291                     	;# 
  3680     0292                     	;# 
  3681     0293                     	;# 
  3682     0294                     	;# 
  3683     0298                     	;# 
  3684     0298                     	;# 
  3685     0299                     	;# 
  3686     029A                     	;# 
  3687     029B                     	;# 
  3688     029E                     	;# 
  3689     030C                     	;# 
  3690     030D                     	;# 
  3691     030E                     	;# 
  3692     038C                     	;# 
  3693     038D                     	;# 
  3694     038E                     	;# 
  3695     0391                     	;# 
  3696     0392                     	;# 
  3697     0393                     	;# 
  3698     0394                     	;# 
  3699     0395                     	;# 
  3700     0396                     	;# 
  3701     0397                     	;# 
  3702     0398                     	;# 
  3703     0399                     	;# 
  3704     040E                     	;# 
  3705     0413                     	;# 
  3706     0413                     	;# 
  3707     0414                     	;# 
  3708     0414                     	;# 
  3709     0415                     	;# 
  3710     0416                     	;# 
  3711     0417                     	;# 
  3712     0418                     	;# 
  3713     041A                     	;# 
  3714     041A                     	;# 
  3715     041B                     	;# 
  3716     041B                     	;# 
  3717     041C                     	;# 
  3718     041D                     	;# 
  3719     041E                     	;# 
  3720     041F                     	;# 
  3721     0493                     	;# 
  3722     0494                     	;# 
  3723     0495                     	;# 
  3724     0496                     	;# 
  3725     049A                     	;# 
  3726     049B                     	;# 
  3727     049C                     	;# 
  3728     049D                     	;# 
  3729     058C                     	;# 
  3730     058C                     	;# 
  3731     058D                     	;# 
  3732     058E                     	;# 
  3733     058E                     	;# 
  3734     058F                     	;# 
  3735     0590                     	;# 
  3736     0590                     	;# 
  3737     0591                     	;# 
  3738     0592                     	;# 
  3739     0592                     	;# 
  3740     0593                     	;# 
  3741     0594                     	;# 
  3742     0594                     	;# 
  3743     0595                     	;# 
  3744     0596                     	;# 
  3745     0596                     	;# 
  3746     0597                     	;# 
  3747     0598                     	;# 
  3748     0599                     	;# 
  3749     059A                     	;# 
  3750     059B                     	;# 
  3751     059B                     	;# 
  3752     059C                     	;# 
  3753     059D                     	;# 
  3754     060C                     	;# 
  3755     060C                     	;# 
  3756     060D                     	;# 
  3757     060E                     	;# 
  3758     060F                     	;# 
  3759     060F                     	;# 
  3760     0610                     	;# 
  3761     0611                     	;# 
  3762     0612                     	;# 
  3763     0613                     	;# 
  3764     0614                     	;# 
  3765     0617                     	;# 
  3766     0617                     	;# 
  3767     0618                     	;# 
  3768     0619                     	;# 
  3769     061A                     	;# 
  3770     061A                     	;# 
  3771     061B                     	;# 
  3772     061C                     	;# 
  3773     0691                     	;# 
  3774     0692                     	;# 
  3775     0693                     	;# 
  3776     0694                     	;# 
  3777     0695                     	;# 
  3778     0696                     	;# 
  3779     0697                     	;# 
  3780     0699                     	;# 
  3781     069A                     	;# 
  3782     0711                     	;# 
  3783     0712                     	;# 
  3784     0713                     	;# 
  3785     0714                     	;# 
  3786     0715                     	;# 
  3787     0718                     	;# 
  3788     0718                     	;# 
  3789     0719                     	;# 
  3790     071A                     	;# 
  3791     071A                     	;# 
  3792     071B                     	;# 
  3793     071C                     	;# 
  3794     071D                     	;# 
  3795     0791                     	;# 
  3796     0791                     	;# 
  3797     0792                     	;# 
  3798     0793                     	;# 
  3799     0793                     	;# 
  3800     0794                     	;# 
  3801     0795                     	;# 
  3802     0795                     	;# 
  3803     0796                     	;# 
  3804     0797                     	;# 
  3805     0797                     	;# 
  3806     0798                     	;# 
  3807     0799                     	;# 
  3808     079A                     	;# 
  3809     080C                     	;# 
  3810     080C                     	;# 
  3811     080D                     	;# 
  3812     080E                     	;# 
  3813     080E                     	;# 
  3814     080F                     	;# 
  3815     0810                     	;# 
  3816     0810                     	;# 
  3817     0811                     	;# 
  3818     0812                     	;# 
  3819     0812                     	;# 
  3820     0813                     	;# 
  3821     0814                     	;# 
  3822     0815                     	;# 
  3823     0816                     	;# 
  3824     0817                     	;# 
  3825     0818                     	;# 
  3826     0819                     	;# 
  3827     081A                     	;# 
  3828     081A                     	;# 
  3829     081B                     	;# 
  3830     081C                     	;# 
  3831     081C                     	;# 
  3832     081D                     	;# 
  3833     088C                     	;# 
  3834     088D                     	;# 
  3835     088E                     	;# 
  3836     088F                     	;# 
  3837     088F                     	;# 
  3838     0890                     	;# 
  3839     0891                     	;# 
  3840     0892                     	;# 
  3841     0893                     	;# 
  3842     0893                     	;# 
  3843     0894                     	;# 
  3844     0895                     	;# 
  3845     0896                     	;# 
  3846     0897                     	;# 
  3847     0897                     	;# 
  3848     0898                     	;# 
  3849     0899                     	;# 
  3850     0D8C                     	;# 
  3851     0D8C                     	;# 
  3852     0D8D                     	;# 
  3853     0D8E                     	;# 
  3854     0D8F                     	;# 
  3855     0D8F                     	;# 
  3856     0D90                     	;# 
  3857     0D91                     	;# 
  3858     0D92                     	;# 
  3859     0D92                     	;# 
  3860     0D93                     	;# 
  3861     0D94                     	;# 
  3862     0D95                     	;# 
  3863     0D95                     	;# 
  3864     0D96                     	;# 
  3865     0D97                     	;# 
  3866     0D98                     	;# 
  3867     0D99                     	;# 
  3868     0D9A                     	;# 
  3869     0D9B                     	;# 
  3870     0D9C                     	;# 
  3871     0D9D                     	;# 
  3872     0D9E                     	;# 
  3873     0D9E                     	;# 
  3874     0D9F                     	;# 
  3875     0DA0                     	;# 
  3876     0DA1                     	;# 
  3877     0DA1                     	;# 
  3878     0DA2                     	;# 
  3879     0DA3                     	;# 
  3880     0DA4                     	;# 
  3881     0DA4                     	;# 
  3882     0DA5                     	;# 
  3883     0DA6                     	;# 
  3884     0DA7                     	;# 
  3885     0DA7                     	;# 
  3886     0DA8                     	;# 
  3887     0DA9                     	;# 
  3888     0DAA                     	;# 
  3889     0DAB                     	;# 
  3890     0DAC                     	;# 
  3891     0DAD                     	;# 
  3892     0DAE                     	;# 
  3893     0DAF                     	;# 
  3894     0E0F                     	;# 
  3895     0E10                     	;# 
  3896     0E11                     	;# 
  3897     0E12                     	;# 
  3898     0E13                     	;# 
  3899     0E14                     	;# 
  3900     0E15                     	;# 
  3901     0E16                     	;# 
  3902     0E17                     	;# 
  3903     0E17                     	;# 
  3904     0E18                     	;# 
  3905     0E18                     	;# 
  3906     0E19                     	;# 
  3907     0E1A                     	;# 
  3908     0E1B                     	;# 
  3909     0E1B                     	;# 
  3910     0E1C                     	;# 
  3911     0E1D                     	;# 
  3912     0E1E                     	;# 
  3913     0E1E                     	;# 
  3914     0E1F                     	;# 
  3915     0E20                     	;# 
  3916     0E21                     	;# 
  3917     0E22                     	;# 
  3918     0E23                     	;# 
  3919     0E24                     	;# 
  3920     0E25                     	;# 
  3921     0E26                     	;# 
  3922     0E27                     	;# 
  3923     0E28                     	;# 
  3924     0E29                     	;# 
  3925     0E2A                     	;# 
  3926     0E2B                     	;# 
  3927     0E2C                     	;# 
  3928     0E2D                     	;# 
  3929     0E2E                     	;# 
  3930     0E90                     	;# 
  3931     0E91                     	;# 
  3932     0E92                     	;# 
  3933     0E94                     	;# 
  3934     0E95                     	;# 
  3935     0E9C                     	;# 
  3936     0E9D                     	;# 
  3937     0E9E                     	;# 
  3938     0E9F                     	;# 
  3939     0EA0                     	;# 
  3940     0EA1                     	;# 
  3941     0EA2                     	;# 
  3942     0EA3                     	;# 
  3943     0EA4                     	;# 
  3944     0EA5                     	;# 
  3945     0EA6                     	;# 
  3946     0EA7                     	;# 
  3947     0F0F                     	;# 
  3948     0F10                     	;# 
  3949     0F11                     	;# 
  3950     0F12                     	;# 
  3951     0F13                     	;# 
  3952     0F14                     	;# 
  3953     0F15                     	;# 
  3954     0F16                     	;# 
  3955     0F17                     	;# 
  3956     0F18                     	;# 
  3957     0F19                     	;# 
  3958     0F1A                     	;# 
  3959     0F1B                     	;# 
  3960     0F1C                     	;# 
  3961     0F1D                     	;# 
  3962     0F1E                     	;# 
  3963     0F1F                     	;# 
  3964     0F20                     	;# 
  3965     0F21                     	;# 
  3966     0F22                     	;# 
  3967     0F23                     	;# 
  3968     0FE4                     	;# 
  3969     0FE5                     	;# 
  3970     0FE6                     	;# 
  3971     0FE7                     	;# 
  3972     0FE8                     	;# 
  3973     0FE9                     	;# 
  3974     0FEA                     	;# 
  3975     0FEB                     	;# 
  3976     0FED                     	;# 
  3977     0FEE                     	;# 
  3978     0FEF                     	;# 
  3979     0000                     	;# 
  3980     0001                     	;# 
  3981     0002                     	;# 
  3982     0003                     	;# 
  3983     0004                     	;# 
  3984     0005                     	;# 
  3985     0006                     	;# 
  3986     0007                     	;# 
  3987     0008                     	;# 
  3988     0009                     	;# 
  3989     000A                     	;# 
  3990     000B                     	;# 
  3991     000C                     	;# 
  3992     000D                     	;# 
  3993     000E                     	;# 
  3994     0010                     	;# 
  3995     0011                     	;# 
  3996     0012                     	;# 
  3997     0013                     	;# 
  3998     0014                     	;# 
  3999     0015                     	;# 
  4000     0016                     	;# 
  4001     0016                     	;# 
  4002     0017                     	;# 
  4003     0018                     	;# 
  4004     0019                     	;# 
  4005     001A                     	;# 
  4006     001A                     	;# 
  4007     001B                     	;# 
  4008     001B                     	;# 
  4009     001C                     	;# 
  4010     001D                     	;# 
  4011     001E                     	;# 
  4012     001F                     	;# 
  4013     008C                     	;# 
  4014     008D                     	;# 
  4015     008E                     	;# 
  4016     0090                     	;# 
  4017     0091                     	;# 
  4018     0092                     	;# 
  4019     0093                     	;# 
  4020     0094                     	;# 
  4021     0095                     	;# 
  4022     0096                     	;# 
  4023     0098                     	;# 
  4024     0099                     	;# 
  4025     009A                     	;# 
  4026     009B                     	;# 
  4027     009B                     	;# 
  4028     009C                     	;# 
  4029     009D                     	;# 
  4030     009E                     	;# 
  4031     009F                     	;# 
  4032     010C                     	;# 
  4033     010D                     	;# 
  4034     010E                     	;# 
  4035     0111                     	;# 
  4036     0112                     	;# 
  4037     0113                     	;# 
  4038     0114                     	;# 
  4039     0115                     	;# 
  4040     0116                     	;# 
  4041     0117                     	;# 
  4042     0118                     	;# 
  4043     0119                     	;# 
  4044     011C                     	;# 
  4045     018C                     	;# 
  4046     018D                     	;# 
  4047     018E                     	;# 
  4048     0191                     	;# 
  4049     0191                     	;# 
  4050     0192                     	;# 
  4051     0193                     	;# 
  4052     0193                     	;# 
  4053     0194                     	;# 
  4054     0195                     	;# 
  4055     0196                     	;# 
  4056     0197                     	;# 
  4057     0199                     	;# 
  4058     0199                     	;# 
  4059     0199                     	;# 
  4060     019A                     	;# 
  4061     019A                     	;# 
  4062     019A                     	;# 
  4063     019B                     	;# 
  4064     019B                     	;# 
  4065     019B                     	;# 
  4066     019B                     	;# 
  4067     019B                     	;# 
  4068     019C                     	;# 
  4069     019C                     	;# 
  4070     019C                     	;# 
  4071     019D                     	;# 
  4072     019D                     	;# 
  4073     019D                     	;# 
  4074     019E                     	;# 
  4075     019E                     	;# 
  4076     019E                     	;# 
  4077     019F                     	;# 
  4078     019F                     	;# 
  4079     019F                     	;# 
  4080     019F                     	;# 
  4081     019F                     	;# 
  4082     020C                     	;# 
  4083     020D                     	;# 
  4084     020E                     	;# 
  4085     0211                     	;# 
  4086     0211                     	;# 
  4087     0212                     	;# 
  4088     0212                     	;# 
  4089     0213                     	;# 
  4090     0213                     	;# 
  4091     0214                     	;# 
  4092     0214                     	;# 
  4093     0215                     	;# 
  4094     0215                     	;# 
  4095     0215                     	;# 
  4096     0215                     	;# 
  4097     0216                     	;# 
  4098     0216                     	;# 
  4099     0217                     	;# 
  4100     0217                     	;# 
  4101     028C                     	;# 
  4102     028D                     	;# 
  4103     028E                     	;# 
  4104     0291                     	;# 
  4105     0291                     	;# 
  4106     0292                     	;# 
  4107     0293                     	;# 
  4108     0294                     	;# 
  4109     0298                     	;# 
  4110     0298                     	;# 
  4111     0299                     	;# 
  4112     029A                     	;# 
  4113     029B                     	;# 
  4114     029E                     	;# 
  4115     030C                     	;# 
  4116     030D                     	;# 
  4117     030E                     	;# 
  4118     038C                     	;# 
  4119     038D                     	;# 
  4120     038E                     	;# 
  4121     0391                     	;# 
  4122     0392                     	;# 
  4123     0393                     	;# 
  4124     0394                     	;# 
  4125     0395                     	;# 
  4126     0396                     	;# 
  4127     0397                     	;# 
  4128     0398                     	;# 
  4129     0399                     	;# 
  4130     040E                     	;# 
  4131     0413                     	;# 
  4132     0413                     	;# 
  4133     0414                     	;# 
  4134     0414                     	;# 
  4135     0415                     	;# 
  4136     0416                     	;# 
  4137     0417                     	;# 
  4138     0418                     	;# 
  4139     041A                     	;# 
  4140     041A                     	;# 
  4141     041B                     	;# 
  4142     041B                     	;# 
  4143     041C                     	;# 
  4144     041D                     	;# 
  4145     041E                     	;# 
  4146     041F                     	;# 
  4147     0493                     	;# 
  4148     0494                     	;# 
  4149     0495                     	;# 
  4150     0496                     	;# 
  4151     049A                     	;# 
  4152     049B                     	;# 
  4153     049C                     	;# 
  4154     049D                     	;# 
  4155     058C                     	;# 
  4156     058C                     	;# 
  4157     058D                     	;# 
  4158     058E                     	;# 
  4159     058E                     	;# 
  4160     058F                     	;# 
  4161     0590                     	;# 
  4162     0590                     	;# 
  4163     0591                     	;# 
  4164     0592                     	;# 
  4165     0592                     	;# 
  4166     0593                     	;# 
  4167     0594                     	;# 
  4168     0594                     	;# 
  4169     0595                     	;# 
  4170     0596                     	;# 
  4171     0596                     	;# 
  4172     0597                     	;# 
  4173     0598                     	;# 
  4174     0599                     	;# 
  4175     059A                     	;# 
  4176     059B                     	;# 
  4177     059B                     	;# 
  4178     059C                     	;# 
  4179     059D                     	;# 
  4180     060C                     	;# 
  4181     060C                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     060F                     	;# 
  4186     0610                     	;# 
  4187     0611                     	;# 
  4188     0612                     	;# 
  4189     0613                     	;# 
  4190     0614                     	;# 
  4191     0617                     	;# 
  4192     0617                     	;# 
  4193     0618                     	;# 
  4194     0619                     	;# 
  4195     061A                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     0691                     	;# 
  4200     0692                     	;# 
  4201     0693                     	;# 
  4202     0694                     	;# 
  4203     0695                     	;# 
  4204     0696                     	;# 
  4205     0697                     	;# 
  4206     0699                     	;# 
  4207     069A                     	;# 
  4208     0711                     	;# 
  4209     0712                     	;# 
  4210     0713                     	;# 
  4211     0714                     	;# 
  4212     0715                     	;# 
  4213     0718                     	;# 
  4214     0718                     	;# 
  4215     0719                     	;# 
  4216     071A                     	;# 
  4217     071A                     	;# 
  4218     071B                     	;# 
  4219     071C                     	;# 
  4220     071D                     	;# 
  4221     0791                     	;# 
  4222     0791                     	;# 
  4223     0792                     	;# 
  4224     0793                     	;# 
  4225     0793                     	;# 
  4226     0794                     	;# 
  4227     0795                     	;# 
  4228     0795                     	;# 
  4229     0796                     	;# 
  4230     0797                     	;# 
  4231     0797                     	;# 
  4232     0798                     	;# 
  4233     0799                     	;# 
  4234     079A                     	;# 
  4235     080C                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080E                     	;# 
  4240     080F                     	;# 
  4241     0810                     	;# 
  4242     0810                     	;# 
  4243     0811                     	;# 
  4244     0812                     	;# 
  4245     0812                     	;# 
  4246     0813                     	;# 
  4247     0814                     	;# 
  4248     0815                     	;# 
  4249     0816                     	;# 
  4250     0817                     	;# 
  4251     0818                     	;# 
  4252     0819                     	;# 
  4253     081A                     	;# 
  4254     081A                     	;# 
  4255     081B                     	;# 
  4256     081C                     	;# 
  4257     081C                     	;# 
  4258     081D                     	;# 
  4259     088C                     	;# 
  4260     088D                     	;# 
  4261     088E                     	;# 
  4262     088F                     	;# 
  4263     088F                     	;# 
  4264     0890                     	;# 
  4265     0891                     	;# 
  4266     0892                     	;# 
  4267     0893                     	;# 
  4268     0893                     	;# 
  4269     0894                     	;# 
  4270     0895                     	;# 
  4271     0896                     	;# 
  4272     0897                     	;# 
  4273     0897                     	;# 
  4274     0898                     	;# 
  4275     0899                     	;# 
  4276     0D8C                     	;# 
  4277     0D8C                     	;# 
  4278     0D8D                     	;# 
  4279     0D8E                     	;# 
  4280     0D8F                     	;# 
  4281     0D8F                     	;# 
  4282     0D90                     	;# 
  4283     0D91                     	;# 
  4284     0D92                     	;# 
  4285     0D92                     	;# 
  4286     0D93                     	;# 
  4287     0D94                     	;# 
  4288     0D95                     	;# 
  4289     0D95                     	;# 
  4290     0D96                     	;# 
  4291     0D97                     	;# 
  4292     0D98                     	;# 
  4293     0D99                     	;# 
  4294     0D9A                     	;# 
  4295     0D9B                     	;# 
  4296     0D9C                     	;# 
  4297     0D9D                     	;# 
  4298     0D9E                     	;# 
  4299     0D9E                     	;# 
  4300     0D9F                     	;# 
  4301     0DA0                     	;# 
  4302     0DA1                     	;# 
  4303     0DA1                     	;# 
  4304     0DA2                     	;# 
  4305     0DA3                     	;# 
  4306     0DA4                     	;# 
  4307     0DA4                     	;# 
  4308     0DA5                     	;# 
  4309     0DA6                     	;# 
  4310     0DA7                     	;# 
  4311     0DA7                     	;# 
  4312     0DA8                     	;# 
  4313     0DA9                     	;# 
  4314     0DAA                     	;# 
  4315     0DAB                     	;# 
  4316     0DAC                     	;# 
  4317     0DAD                     	;# 
  4318     0DAE                     	;# 
  4319     0DAF                     	;# 
  4320     0E0F                     	;# 
  4321     0E10                     	;# 
  4322     0E11                     	;# 
  4323     0E12                     	;# 
  4324     0E13                     	;# 
  4325     0E14                     	;# 
  4326     0E15                     	;# 
  4327     0E16                     	;# 
  4328     0E17                     	;# 
  4329     0E17                     	;# 
  4330     0E18                     	;# 
  4331     0E18                     	;# 
  4332     0E19                     	;# 
  4333     0E1A                     	;# 
  4334     0E1B                     	;# 
  4335     0E1B                     	;# 
  4336     0E1C                     	;# 
  4337     0E1D                     	;# 
  4338     0E1E                     	;# 
  4339     0E1E                     	;# 
  4340     0E1F                     	;# 
  4341     0E20                     	;# 
  4342     0E21                     	;# 
  4343     0E22                     	;# 
  4344     0E23                     	;# 
  4345     0E24                     	;# 
  4346     0E25                     	;# 
  4347     0E26                     	;# 
  4348     0E27                     	;# 
  4349     0E28                     	;# 
  4350     0E29                     	;# 
  4351     0E2A                     	;# 
  4352     0E2B                     	;# 
  4353     0E2C                     	;# 
  4354     0E2D                     	;# 
  4355     0E2E                     	;# 
  4356     0E90                     	;# 
  4357     0E91                     	;# 
  4358     0E92                     	;# 
  4359     0E94                     	;# 
  4360     0E95                     	;# 
  4361     0E9C                     	;# 
  4362     0E9D                     	;# 
  4363     0E9E                     	;# 
  4364     0E9F                     	;# 
  4365     0EA0                     	;# 
  4366     0EA1                     	;# 
  4367     0EA2                     	;# 
  4368     0EA3                     	;# 
  4369     0EA4                     	;# 
  4370     0EA5                     	;# 
  4371     0EA6                     	;# 
  4372     0EA7                     	;# 
  4373     0F0F                     	;# 
  4374     0F10                     	;# 
  4375     0F11                     	;# 
  4376     0F12                     	;# 
  4377     0F13                     	;# 
  4378     0F14                     	;# 
  4379     0F15                     	;# 
  4380     0F16                     	;# 
  4381     0F17                     	;# 
  4382     0F18                     	;# 
  4383     0F19                     	;# 
  4384     0F1A                     	;# 
  4385     0F1B                     	;# 
  4386     0F1C                     	;# 
  4387     0F1D                     	;# 
  4388     0F1E                     	;# 
  4389     0F1F                     	;# 
  4390     0F20                     	;# 
  4391     0F21                     	;# 
  4392     0F22                     	;# 
  4393     0F23                     	;# 
  4394     0FE4                     	;# 
  4395     0FE5                     	;# 
  4396     0FE6                     	;# 
  4397     0FE7                     	;# 
  4398     0FE8                     	;# 
  4399     0FE9                     	;# 
  4400     0FEA                     	;# 
  4401     0FEB                     	;# 
  4402     0FED                     	;# 
  4403     0FEE                     	;# 
  4404     0FEF                     	;# 
  4405     0000                     	;# 
  4406     0001                     	;# 
  4407     0002                     	;# 
  4408     0003                     	;# 
  4409     0004                     	;# 
  4410     0005                     	;# 
  4411     0006                     	;# 
  4412     0007                     	;# 
  4413     0008                     	;# 
  4414     0009                     	;# 
  4415     000A                     	;# 
  4416     000B                     	;# 
  4417     000C                     	;# 
  4418     000D                     	;# 
  4419     000E                     	;# 
  4420     0010                     	;# 
  4421     0011                     	;# 
  4422     0012                     	;# 
  4423     0013                     	;# 
  4424     0014                     	;# 
  4425     0015                     	;# 
  4426     0016                     	;# 
  4427     0016                     	;# 
  4428     0017                     	;# 
  4429     0018                     	;# 
  4430     0019                     	;# 
  4431     001A                     	;# 
  4432     001A                     	;# 
  4433     001B                     	;# 
  4434     001B                     	;# 
  4435     001C                     	;# 
  4436     001D                     	;# 
  4437     001E                     	;# 
  4438     001F                     	;# 
  4439     008C                     	;# 
  4440     008D                     	;# 
  4441     008E                     	;# 
  4442     0090                     	;# 
  4443     0091                     	;# 
  4444     0092                     	;# 
  4445     0093                     	;# 
  4446     0094                     	;# 
  4447     0095                     	;# 
  4448     0096                     	;# 
  4449     0098                     	;# 
  4450     0099                     	;# 
  4451     009A                     	;# 
  4452     009B                     	;# 
  4453     009B                     	;# 
  4454     009C                     	;# 
  4455     009D                     	;# 
  4456     009E                     	;# 
  4457     009F                     	;# 
  4458     010C                     	;# 
  4459     010D                     	;# 
  4460     010E                     	;# 
  4461     0111                     	;# 
  4462     0112                     	;# 
  4463     0113                     	;# 
  4464     0114                     	;# 
  4465     0115                     	;# 
  4466     0116                     	;# 
  4467     0117                     	;# 
  4468     0118                     	;# 
  4469     0119                     	;# 
  4470     011C                     	;# 
  4471     018C                     	;# 
  4472     018D                     	;# 
  4473     018E                     	;# 
  4474     0191                     	;# 
  4475     0191                     	;# 
  4476     0192                     	;# 
  4477     0193                     	;# 
  4478     0193                     	;# 
  4479     0194                     	;# 
  4480     0195                     	;# 
  4481     0196                     	;# 
  4482     0197                     	;# 
  4483     0199                     	;# 
  4484     0199                     	;# 
  4485     0199                     	;# 
  4486     019A                     	;# 
  4487     019A                     	;# 
  4488     019A                     	;# 
  4489     019B                     	;# 
  4490     019B                     	;# 
  4491     019B                     	;# 
  4492     019B                     	;# 
  4493     019B                     	;# 
  4494     019C                     	;# 
  4495     019C                     	;# 
  4496     019C                     	;# 
  4497     019D                     	;# 
  4498     019D                     	;# 
  4499     019D                     	;# 
  4500     019E                     	;# 
  4501     019E                     	;# 
  4502     019E                     	;# 
  4503     019F                     	;# 
  4504     019F                     	;# 
  4505     019F                     	;# 
  4506     019F                     	;# 
  4507     019F                     	;# 
  4508     020C                     	;# 
  4509     020D                     	;# 
  4510     020E                     	;# 
  4511     0211                     	;# 
  4512     0211                     	;# 
  4513     0212                     	;# 
  4514     0212                     	;# 
  4515     0213                     	;# 
  4516     0213                     	;# 
  4517     0214                     	;# 
  4518     0214                     	;# 
  4519     0215                     	;# 
  4520     0215                     	;# 
  4521     0215                     	;# 
  4522     0215                     	;# 
  4523     0216                     	;# 
  4524     0216                     	;# 
  4525     0217                     	;# 
  4526     0217                     	;# 
  4527     028C                     	;# 
  4528     028D                     	;# 
  4529     028E                     	;# 
  4530     0291                     	;# 
  4531     0291                     	;# 
  4532     0292                     	;# 
  4533     0293                     	;# 
  4534     0294                     	;# 
  4535     0298                     	;# 
  4536     0298                     	;# 
  4537     0299                     	;# 
  4538     029A                     	;# 
  4539     029B                     	;# 
  4540     029E                     	;# 
  4541     030C                     	;# 
  4542     030D                     	;# 
  4543     030E                     	;# 
  4544     038C                     	;# 
  4545     038D                     	;# 
  4546     038E                     	;# 
  4547     0391                     	;# 
  4548     0392                     	;# 
  4549     0393                     	;# 
  4550     0394                     	;# 
  4551     0395                     	;# 
  4552     0396                     	;# 
  4553     0397                     	;# 
  4554     0398                     	;# 
  4555     0399                     	;# 
  4556     040E                     	;# 
  4557     0413                     	;# 
  4558     0413                     	;# 
  4559     0414                     	;# 
  4560     0414                     	;# 
  4561     0415                     	;# 
  4562     0416                     	;# 
  4563     0417                     	;# 
  4564     0418                     	;# 
  4565     041A                     	;# 
  4566     041A                     	;# 
  4567     041B                     	;# 
  4568     041B                     	;# 
  4569     041C                     	;# 
  4570     041D                     	;# 
  4571     041E                     	;# 
  4572     041F                     	;# 
  4573     0493                     	;# 
  4574     0494                     	;# 
  4575     0495                     	;# 
  4576     0496                     	;# 
  4577     049A                     	;# 
  4578     049B                     	;# 
  4579     049C                     	;# 
  4580     049D                     	;# 
  4581     058C                     	;# 
  4582     058C                     	;# 
  4583     058D                     	;# 
  4584     058E                     	;# 
  4585     058E                     	;# 
  4586     058F                     	;# 
  4587     0590                     	;# 
  4588     0590                     	;# 
  4589     0591                     	;# 
  4590     0592                     	;# 
  4591     0592                     	;# 
  4592     0593                     	;# 
  4593     0594                     	;# 
  4594     0594                     	;# 
  4595     0595                     	;# 
  4596     0596                     	;# 
  4597     0596                     	;# 
  4598     0597                     	;# 
  4599     0598                     	;# 
  4600     0599                     	;# 
  4601     059A                     	;# 
  4602     059B                     	;# 
  4603     059B                     	;# 
  4604     059C                     	;# 
  4605     059D                     	;# 
  4606     060C                     	;# 
  4607     060C                     	;# 
  4608     060D                     	;# 
  4609     060E                     	;# 
  4610     060F                     	;# 
  4611     060F                     	;# 
  4612     0610                     	;# 
  4613     0611                     	;# 
  4614     0612                     	;# 
  4615     0613                     	;# 
  4616     0614                     	;# 
  4617     0617                     	;# 
  4618     0617                     	;# 
  4619     0618                     	;# 
  4620     0619                     	;# 
  4621     061A                     	;# 
  4622     061A                     	;# 
  4623     061B                     	;# 
  4624     061C                     	;# 
  4625     0691                     	;# 
  4626     0692                     	;# 
  4627     0693                     	;# 
  4628     0694                     	;# 
  4629     0695                     	;# 
  4630     0696                     	;# 
  4631     0697                     	;# 
  4632     0699                     	;# 
  4633     069A                     	;# 
  4634     0711                     	;# 
  4635     0712                     	;# 
  4636     0713                     	;# 
  4637     0714                     	;# 
  4638     0715                     	;# 
  4639     0718                     	;# 
  4640     0718                     	;# 
  4641     0719                     	;# 
  4642     071A                     	;# 
  4643     071A                     	;# 
  4644     071B                     	;# 
  4645     071C                     	;# 
  4646     071D                     	;# 
  4647     0791                     	;# 
  4648     0791                     	;# 
  4649     0792                     	;# 
  4650     0793                     	;# 
  4651     0793                     	;# 
  4652     0794                     	;# 
  4653     0795                     	;# 
  4654     0795                     	;# 
  4655     0796                     	;# 
  4656     0797                     	;# 
  4657     0797                     	;# 
  4658     0798                     	;# 
  4659     0799                     	;# 
  4660     079A                     	;# 
  4661     080C                     	;# 
  4662     080C                     	;# 
  4663     080D                     	;# 
  4664     080E                     	;# 
  4665     080E                     	;# 
  4666     080F                     	;# 
  4667     0810                     	;# 
  4668     0810                     	;# 
  4669     0811                     	;# 
  4670     0812                     	;# 
  4671     0812                     	;# 
  4672     0813                     	;# 
  4673     0814                     	;# 
  4674     0815                     	;# 
  4675     0816                     	;# 
  4676     0817                     	;# 
  4677     0818                     	;# 
  4678     0819                     	;# 
  4679     081A                     	;# 
  4680     081A                     	;# 
  4681     081B                     	;# 
  4682     081C                     	;# 
  4683     081C                     	;# 
  4684     081D                     	;# 
  4685     088C                     	;# 
  4686     088D                     	;# 
  4687     088E                     	;# 
  4688     088F                     	;# 
  4689     088F                     	;# 
  4690     0890                     	;# 
  4691     0891                     	;# 
  4692     0892                     	;# 
  4693     0893                     	;# 
  4694     0893                     	;# 
  4695     0894                     	;# 
  4696     0895                     	;# 
  4697     0896                     	;# 
  4698     0897                     	;# 
  4699     0897                     	;# 
  4700     0898                     	;# 
  4701     0899                     	;# 
  4702     0D8C                     	;# 
  4703     0D8C                     	;# 
  4704     0D8D                     	;# 
  4705     0D8E                     	;# 
  4706     0D8F                     	;# 
  4707     0D8F                     	;# 
  4708     0D90                     	;# 
  4709     0D91                     	;# 
  4710     0D92                     	;# 
  4711     0D92                     	;# 
  4712     0D93                     	;# 
  4713     0D94                     	;# 
  4714     0D95                     	;# 
  4715     0D95                     	;# 
  4716     0D96                     	;# 
  4717     0D97                     	;# 
  4718     0D98                     	;# 
  4719     0D99                     	;# 
  4720     0D9A                     	;# 
  4721     0D9B                     	;# 
  4722     0D9C                     	;# 
  4723     0D9D                     	;# 
  4724     0D9E                     	;# 
  4725     0D9E                     	;# 
  4726     0D9F                     	;# 
  4727     0DA0                     	;# 
  4728     0DA1                     	;# 
  4729     0DA1                     	;# 
  4730     0DA2                     	;# 
  4731     0DA3                     	;# 
  4732     0DA4                     	;# 
  4733     0DA4                     	;# 
  4734     0DA5                     	;# 
  4735     0DA6                     	;# 
  4736     0DA7                     	;# 
  4737     0DA7                     	;# 
  4738     0DA8                     	;# 
  4739     0DA9                     	;# 
  4740     0DAA                     	;# 
  4741     0DAB                     	;# 
  4742     0DAC                     	;# 
  4743     0DAD                     	;# 
  4744     0DAE                     	;# 
  4745     0DAF                     	;# 
  4746     0E0F                     	;# 
  4747     0E10                     	;# 
  4748     0E11                     	;# 
  4749     0E12                     	;# 
  4750     0E13                     	;# 
  4751     0E14                     	;# 
  4752     0E15                     	;# 
  4753     0E16                     	;# 
  4754     0E17                     	;# 
  4755     0E17                     	;# 
  4756     0E18                     	;# 
  4757     0E18                     	;# 
  4758     0E19                     	;# 
  4759     0E1A                     	;# 
  4760     0E1B                     	;# 
  4761     0E1B                     	;# 
  4762     0E1C                     	;# 
  4763     0E1D                     	;# 
  4764     0E1E                     	;# 
  4765     0E1E                     	;# 
  4766     0E1F                     	;# 
  4767     0E20                     	;# 
  4768     0E21                     	;# 
  4769     0E22                     	;# 
  4770     0E23                     	;# 
  4771     0E24                     	;# 
  4772     0E25                     	;# 
  4773     0E26                     	;# 
  4774     0E27                     	;# 
  4775     0E28                     	;# 
  4776     0E29                     	;# 
  4777     0E2A                     	;# 
  4778     0E2B                     	;# 
  4779     0E2C                     	;# 
  4780     0E2D                     	;# 
  4781     0E2E                     	;# 
  4782     0E90                     	;# 
  4783     0E91                     	;# 
  4784     0E92                     	;# 
  4785     0E94                     	;# 
  4786     0E95                     	;# 
  4787     0E9C                     	;# 
  4788     0E9D                     	;# 
  4789     0E9E                     	;# 
  4790     0E9F                     	;# 
  4791     0EA0                     	;# 
  4792     0EA1                     	;# 
  4793     0EA2                     	;# 
  4794     0EA3                     	;# 
  4795     0EA4                     	;# 
  4796     0EA5                     	;# 
  4797     0EA6                     	;# 
  4798     0EA7                     	;# 
  4799     0F0F                     	;# 
  4800     0F10                     	;# 
  4801     0F11                     	;# 
  4802     0F12                     	;# 
  4803     0F13                     	;# 
  4804     0F14                     	;# 
  4805     0F15                     	;# 
  4806     0F16                     	;# 
  4807     0F17                     	;# 
  4808     0F18                     	;# 
  4809     0F19                     	;# 
  4810     0F1A                     	;# 
  4811     0F1B                     	;# 
  4812     0F1C                     	;# 
  4813     0F1D                     	;# 
  4814     0F1E                     	;# 
  4815     0F1F                     	;# 
  4816     0F20                     	;# 
  4817     0F21                     	;# 
  4818     0F22                     	;# 
  4819     0F23                     	;# 
  4820     0FE4                     	;# 
  4821     0FE5                     	;# 
  4822     0FE6                     	;# 
  4823     0FE7                     	;# 
  4824     0FE8                     	;# 
  4825     0FE9                     	;# 
  4826     0FEA                     	;# 
  4827     0FEB                     	;# 
  4828     0FED                     	;# 
  4829     0FEE                     	;# 
  4830     0FEF                     	;# 
  4831                           
  4832 ;; Function _I2C1_Deinitialize is unused but had its address taken
  4833     0000                     
  4834 ;; Function _I2C1_WriteRead is unused but had its address taken
  4835     0000                     
  4836 ;; Function _I2C1_ErrorGet is unused but had its address taken
  4837     0000                     
  4838 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  4839     0000                     
  4840 ;; Function _EUSART_Deinitialize is unused but had its address taken
  4841     0000                     
  4842 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  4843     0000                     
  4844 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  4845     0000                     
  4846 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  4847     0000                     
  4848 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  4849     0000                     
  4850 ;; Function _EUSART_IsTxDone is unused but had its address taken
  4851     0000                     
  4852 ;; Function _EUSART_ErrorGet is unused but had its address taken
  4853     0000                     
  4854                           	psect	idataBANK0
  4855     0D71                     __pidataBANK0:
  4856                           
  4857                           ;initializer for _kaps
  4858     0D71  3451               	retlw	81
  4859     0D72  3400               	retlw	0
  4860     0D73  3400               	retlw	0
  4861     0D74  3400               	retlw	0
  4862     0D75  3400               	retlw	0
  4863     0D76  3400               	retlw	0
  4864     0D77  3400               	retlw	0
  4865                           
  4866                           	psect	idataBANK1
  4867     0E6F                     __pidataBANK1:
  4868                           
  4869                           ;initializer for _sspas
  4870     0E6F  3401               	retlw	1
  4871     0E70  3400               	retlw	0
  4872     0E71  3400               	retlw	0
  4873     0E72  3400               	retlw	0
  4874     0E73  3400               	retlw	0
  4875     0E74  3400               	retlw	0
  4876     0E75  3400               	retlw	0
  4877     0E76  3400               	retlw	0
  4878     0E77  3401               	retlw	1
  4879     0E78  3400               	retlw	0
  4880     0E79  3400               	retlw	0
  4881     0E7A  3400               	retlw	0
  4882     0E7B  3400               	retlw	0
  4883     0E7C  3400               	retlw	0
  4884     0E7D  3400               	retlw	0
  4885     0E7E  3400               	retlw	0
  4886     0E7F  3401               	retlw	1
  4887     0E80  3400               	retlw	0
  4888     0E81  3400               	retlw	0
  4889     0E82  3400               	retlw	0
  4890     0E83  3400               	retlw	0
  4891     0E84  3400               	retlw	0
  4892     0E85  3400               	retlw	0
  4893     0E86  3400               	retlw	0
  4894                           
  4895                           	psect	stringtext1
  4896     0793                     __pstringtext1:
  4897     0793                     _UART:
  4898     0793  3487               	retlw	low _EUSART_Initialize
  4899     0794  340E               	retlw	high _EUSART_Initialize
  4900     0795  3400               	retlw	0
  4901     0796  3400               	retlw	0
  4902     0797  347C               	retlw	low _EUSART_Read
  4903     0798  340F               	retlw	high _EUSART_Read
  4904     0799  3401               	retlw	low _EUSART_Write
  4905     079A  340D               	retlw	high _EUSART_Write
  4906     079B  3413               	retlw	low _EUSART_IsRxReady
  4907     079C  340D               	retlw	high _EUSART_IsRxReady
  4908     079D  34EF               	retlw	low _EUSART_IsTxReady
  4909     079E  340D               	retlw	high _EUSART_IsTxReady
  4910     079F  3400               	retlw	0
  4911     07A0  3400               	retlw	0
  4912     07A1  3400               	retlw	0
  4913     07A2  3400               	retlw	0
  4914     07A3  3400               	retlw	0
  4915     07A4  3400               	retlw	0
  4916     07A5  3400               	retlw	0
  4917     07A6  3400               	retlw	0
  4918     07A7  3400               	retlw	0
  4919     07A8  3400               	retlw	0
  4920     07A9  3400               	retlw	0
  4921     07AA  3400               	retlw	0
  4922     07AB  3400               	retlw	0
  4923     07AC  3400               	retlw	0
  4924     07AD  3400               	retlw	0
  4925     07AE  3400               	retlw	0
  4926     07AF  3400               	retlw	0
  4927     07B0  3400               	retlw	0
  4928     07B1  3400               	retlw	0
  4929     07B2  3400               	retlw	0
  4930     07B3  3400               	retlw	0
  4931     07B4  3400               	retlw	0
  4932     07B5  3400               	retlw	0
  4933     07B6  3400               	retlw	0
  4934     07B7  3400               	retlw	0
  4935     07B8  3400               	retlw	0
  4936     07B9  3400               	retlw	0
  4937     07BA  3400               	retlw	0
  4938     07BB  349B               	retlw	low _EUSART_FramingErrorCallbackRegister
  4939     07BC  340D               	retlw	high _EUSART_FramingErrorCallbackRegister
  4940     07BD  34C9               	retlw	low _EUSART_OverrunErrorCallbackRegister
  4941     07BE  340D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  4942     07BF  3400               	retlw	0
  4943     07C0  3400               	retlw	0
  4944     07C1  3400               	retlw	0
  4945     07C2  3400               	retlw	0
  4946     07C3                     __end_of_UART:
  4947                           
  4948                           	psect	stringtext2
  4949     07F1                     __pstringtext2:
  4950     07F1                     _I2C_Host:
  4951     07F1  3459               	retlw	low _I2C1_Initialize
  4952     07F2  340E               	retlw	high _I2C1_Initialize
  4953     07F3  3400               	retlw	0
  4954     07F4  3400               	retlw	0
  4955     07F5  34A4               	retlw	low _I2C1_Write
  4956     07F6  340E               	retlw	high _I2C1_Write
  4957     07F7  34E4               	retlw	low _I2C1_Read
  4958     07F8  340E               	retlw	high _I2C1_Read
  4959     07F9  3400               	retlw	0
  4960     07FA  3400               	retlw	0
  4961     07FB  3400               	retlw	0
  4962     07FC  3400               	retlw	0
  4963     07FD  3400               	retlw	0
  4964     07FE  3400               	retlw	0
  4965     07FF  34FE               	retlw	low _I2C1_IsBusy
  4966     0800  340D               	retlw	high _I2C1_IsBusy
  4967     0801  34D5               	retlw	low _I2C1_CallbackRegister
  4968     0802  340D               	retlw	high _I2C1_CallbackRegister
  4969     0803  3400               	retlw	0
  4970     0804  3400               	retlw	0
  4971     0805                     __end_of_I2C_Host:
  4972                           
  4973                           	psect	stringtext3
  4974     0805                     __pstringtext3:
  4975     0805                     _i2c1_eventTable:
  4976     0805  34F1               	retlw	low _I2C1_EVENT_IDLE
  4977     0806  340C               	retlw	high _I2C1_EVENT_IDLE
  4978     0807  3478               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  4979     0808  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  4980     0809  3447               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  4981     080A  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  4982     080B  34A6               	retlw	low _I2C1_EVENT_TX
  4983     080C  340F               	retlw	high _I2C1_EVENT_TX
  4984     080D  34F3               	retlw	low _I2C1_EVENT_RX
  4985     080E  3406               	retlw	high _I2C1_EVENT_RX
  4986     080F  341D               	retlw	low _I2C1_EVENT_NACK
  4987     0810  340D               	retlw	high _I2C1_EVENT_NACK
  4988     0811  3423               	retlw	low _I2C1_EVENT_ERROR
  4989     0812  340D               	retlw	high _I2C1_EVENT_ERROR
  4990     0813  3480               	retlw	low _I2C1_EVENT_STOP
  4991     0814  340D               	retlw	high _I2C1_EVENT_STOP
  4992     0815  344E               	retlw	low _I2C1_EVENT_RESET
  4993     0816  340D               	retlw	high _I2C1_EVENT_RESET
  4994     0817                     __end_of_i2c1_eventTable:
  4995                           
  4996                           	psect	nvBANK0
  4997     006B                     __pnvBANK0:
  4998     006B                     _ADC_InterruptHandler:
  4999     006B                     	ds	2
  5000     000B                     _INTCONbits	set	11
  5001     0011                     _PIR2bits	set	17
  5002     0010                     _PIR1bits	set	16
  5003     0095                     _OPTION_REGbits	set	149
  5004     008E                     _TRISC	set	142
  5005     008D                     _TRISB	set	141
  5006     008C                     _TRISA	set	140
  5007     0098                     _OSCTUNE	set	152
  5008     0099                     _OSCCON	set	153
  5009     0091                     _PIE2bits	set	145
  5010     009D                     _ADCON0bits	set	157
  5011     0090                     _PIE1bits	set	144
  5012     009D                     _ADCON0	set	157
  5013     009F                     _ADCON2	set	159
  5014     009C                     _ADRESH	set	156
  5015     009B                     _ADRESL	set	155
  5016     009E                     _ADCON1	set	158
  5017     010E                     _LATCbits	set	270
  5018     010E                     _LATC	set	270
  5019     010D                     _LATB	set	269
  5020     010C                     _LATA	set	268
  5021     0116                     _BORCON	set	278
  5022     019A                     _TX1REG	set	410
  5023     0199                     _RC1REG	set	409
  5024     019F                     _BAUD1CONbits	set	415
  5025     019E                     _TX1STAbits	set	414
  5026     019D                     _RC1STAbits	set	413
  5027     019C                     _SPBRGH	set	412
  5028     019B                     _SPBRGL	set	411
  5029     019E                     _TX1STA	set	414
  5030     019D                     _RC1STA	set	413
  5031     019F                     _BAUD1CON	set	415
  5032     018E                     _ANSELC	set	398
  5033     018D                     _ANSELB	set	397
  5034     018C                     _ANSELA	set	396
  5035     020E                     _WPUC	set	526
  5036     020D                     _WPUB	set	525
  5037     020C                     _WPUA	set	524
  5038     0216                     _SSP1CON2bits	set	534
  5039     0211                     _SSP1BUF	set	529
  5040     0214                     _SSP1STATbits	set	532
  5041     0215                     _SSP1CON1bits	set	533
  5042     0212                     _SSP1ADD	set	530
  5043     0217                     _SSP1CON3	set	535
  5044     0216                     _SSP1CON2	set	534
  5045     0215                     _SSP1CON1	set	533
  5046     0214                     _SSP1STAT	set	532
  5047     028E                     _ODCONC	set	654
  5048     028D                     _ODCONB	set	653
  5049     028C                     _ODCONA	set	652
  5050     030E                     _SLRCONC	set	782
  5051     030D                     _SLRCONB	set	781
  5052     030C                     _SLRCONA	set	780
  5053     0399                     _IOCCF	set	921
  5054     0398                     _IOCCN	set	920
  5055     0397                     _IOCCP	set	919
  5056     0396                     _IOCBF	set	918
  5057     0395                     _IOCBN	set	917
  5058     0394                     _IOCBP	set	916
  5059     0393                     _IOCAF	set	915
  5060     0392                     _IOCAN	set	914
  5061     0391                     _IOCAP	set	913
  5062     038E                     _INLVLC	set	910
  5063     038D                     _INLVLB	set	909
  5064     038C                     _INLVLA	set	908
  5065     0E21                     _SSPDATPPS	set	3617
  5066     0E20                     _SSPCLKPPS	set	3616
  5067     0E24                     _RXPPS	set	3620
  5068     0E9D                     _RB5PPS	set	3741
  5069     0E9E                     _RB6PPS	set	3742
  5070     0EA2                     _RC2PPS	set	3746
  5071                           
  5072                           	psect	cinit
  5073     0038                     start_initialization:	
  5074                           ; #config settings
  5075                           
  5076     0038                     __initialization:
  5077                           
  5078                           ; Initialize objects allocated to BANK0
  5079     0038  3071               	movlw	low __pidataBANK0
  5080     0039  0084               	movwf	4
  5081     003A  308D               	movlw	(high __pidataBANK0)| (0+128)
  5082     003B  0085               	movwf	5
  5083     003C  3064               	movlw	low __pdataBANK0
  5084     003D  0086               	movwf	6
  5085     003E  3000               	movlw	high __pdataBANK0
  5086     003F  0087               	movwf	7
  5087     0040  3007               	movlw	7
  5088     0041  318D  2541  3180   	fcall	init_ram
  5089                           
  5090                           ; Initialize objects allocated to BANK1
  5091     0044  306F               	movlw	low __pidataBANK1
  5092     0045  0084               	movwf	4
  5093     0046  308E               	movlw	(high __pidataBANK1)| (0+128)
  5094     0047  0085               	movwf	5
  5095     0048  30A0               	movlw	low __pdataBANK1
  5096     0049  0086               	movwf	6
  5097     004A  3000               	movlw	high __pdataBANK1
  5098     004B  0087               	movwf	7
  5099     004C  3018               	movlw	24
  5100     004D  318D  2541  3180   	fcall	init_ram
  5101                           
  5102                           ; Clear objects allocated to COMMON
  5103     0050  01F6               	clrf	__pbssCOMMON& (0+127)
  5104     0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5105     0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5106     0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5107                           
  5108                           ; Clear objects allocated to BANK0
  5109     0054  3052               	movlw	low __pbssBANK0
  5110     0055  0084               	movwf	4
  5111     0056  3000               	movlw	high __pbssBANK0
  5112     0057  0085               	movwf	5
  5113     0058  3012               	movlw	18
  5114     0059  318D  253B  3180   	fcall	clear_ram0
  5115                           
  5116                           ; Clear objects allocated to BANK1
  5117     005C  30B8               	movlw	low __pbssBANK1
  5118     005D  0084               	movwf	4
  5119     005E  3000               	movlw	high __pbssBANK1
  5120     005F  0085               	movwf	5
  5121     0060  3017               	movlw	23
  5122     0061  318D  253B  3180   	fcall	clear_ram0
  5123     0064                     end_of_initialization:	
  5124                           ;End of C runtime variable initialization code
  5125                           
  5126     0064                     __end_of__initialization:
  5127     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5128     0065  0020               	movlb	0
  5129     0066  318F  2F54         	ljmp	_main	;jump to C main() function
  5130                           
  5131                           	psect	bssCOMMON
  5132     0076                     __pbssCOMMON:
  5133     0076                     _EUSART_FramingErrorHandler:
  5134     0076                     	ds	2
  5135     0078                     _INT_InterruptHandler:
  5136     0078                     	ds	2
  5137                           
  5138                           	psect	bssBANK0
  5139     0052                     __pbssBANK0:
  5140     0052                     _i2c1Status:
  5141     0052                     	ds	12
  5142     005E                     _EUSART_OverrunErrorHandler:
  5143     005E                     	ds	2
  5144     0060                     _eusartRxLastError:
  5145     0060                     	ds	2
  5146     0062                     _I2C1_Callback:
  5147     0062                     	ds	2
  5148                           
  5149                           	psect	dataBANK0
  5150     0064                     __pdataBANK0:
  5151     0064                     _kaps:
  5152     0064                     	ds	7
  5153                           
  5154                           	psect	bssBANK1
  5155     00B8                     __pbssBANK1:
  5156     00B8                     _parser:
  5157     00B8                     	ds	8
  5158     00C0                     KAPS_getPos@F9702:
  5159     00C0                     	ds	4
  5160     00C4                     ProcessMsg@payload:
  5161     00C4                     	ds	6
  5162     00CA                     _parserDataBuffer:
  5163     00CA                     	ds	5
  5164                           
  5165                           	psect	dataBANK1
  5166     00A0                     __pdataBANK1:
  5167     00A0                     _sspas:
  5168     00A0                     	ds	24
  5169                           
  5170                           	psect	inittext
  5171     0D41                     init_ram:
  5172     0D41  00FE               	movwf	btemp
  5173     0D42                     initloop:
  5174     0D42  0012               	moviw fsr0++
  5175     0D43  001E               	movwi fsr1++
  5176     0D44  0BFE               	decfsz	btemp,f
  5177     0D45  2D42               	goto	initloop
  5178     0D46  3400               	retlw	0
  5179                           
  5180                           	psect	clrtext
  5181     0D3B                     clear_ram0:	
  5182                           ;	Called with FSR0 containing the base address, and
  5183                           ;	WREG with the size to clear
  5184                           
  5185     0D3B  0064               	clrwdt	;clear the watchdog before getting into this loop
  5186     0D3C                     clrloop0:
  5187     0D3C  0180               	clrf	0	;clear RAM location pointed to by FSR
  5188     0D3D  3101               	addfsr 0,1
  5189     0D3E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5190     0D3F  2D3C               	goto	clrloop0	;have we reached the end yet?
  5191     0D40  3400               	retlw	0	;all done for this memory range, return
  5192                           
  5193                           	psect	cstackCOMMON
  5194     0070                     __pcstackCOMMON:
  5195     0070                     ?_ADC_DefaultInterruptHandler:
  5196     0070                     ??_ADC_DefaultInterruptHandler:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199     0070                     ?_I2C1_Initialize:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202     0070                     ?_I2C1_IsBusy:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205     0070                     ?_I2C1_EVENT_IDLE:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208     0070                     ??_I2C1_EVENT_IDLE:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220     0070                     ?_I2C1_EVENT_TX:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223     0070                     ?_I2C1_EVENT_RX:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226     0070                     ??_I2C1_EVENT_RX:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229     0070                     ?_I2C1_EVENT_NACK:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232     0070                     ??_I2C1_EVENT_NACK:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235     0070                     ?_I2C1_EVENT_ERROR:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238     0070                     ??_I2C1_EVENT_ERROR:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241     0070                     ?_I2C1_EVENT_STOP:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244     0070                     ??_I2C1_EVENT_STOP:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247     0070                     ?_I2C1_EVENT_RESET:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250     0070                     ??_I2C1_EVENT_RESET:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253     0070                     ?_I2C1_InterruptsEnable:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256     0070                     ?_I2C1_DefaultCallback:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259     0070                     ??_I2C1_DefaultCallback:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262     0070                     ?_I2C1_WriteStart:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265     0070                     ?_I2C1_ReadStart:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268     0070                     ?_I2C1_EventHandler:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271     0070                     ?_I2C1_ErrorEventHandler:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274     0070                     ?_I2C1_StartSend:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277     0070                     ?_I2C1_InterruptClear:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280     0070                     ??_I2C1_InterruptClear:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283     0070                     ?_I2C1_ErrorInterruptClear:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286     0070                     ??_I2C1_ErrorInterruptClear:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289     0070                     ?_I2C1_StatusFlagsClear:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292     0070                     ??_I2C1_StatusFlagsClear:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295     0070                     ?_I2C1_IsAddr:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298     0070                     ??_I2C1_IsAddr:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301     0070                     ?_I2C1_IsNack:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304     0070                     ??_I2C1_IsNack:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307     0070                     ?_I2C1_IsData:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310     0070                     ??_I2C1_IsData:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313     0070                     ?_I2C1_DataTransmit:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316     0070                     ??_I2C1_DataTransmit:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319     0070                     ?_I2C1_RestartEnable:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322     0070                     ??_I2C1_RestartEnable:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325     0070                     ?_I2C1_IsRxBufFull:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328     0070                     ??_I2C1_IsRxBufFull:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331     0070                     ?_I2C1_DataReceive:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334     0070                     ??_I2C1_DataReceive:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337     0070                     ?_I2C1_AckSend:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340     0070                     ??_I2C1_AckSend:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343     0070                     ?_I2C1_RestartDisable:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346     0070                     ??_I2C1_RestartDisable:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349     0070                     ?_I2C1_NackSend:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352     0070                     ??_I2C1_NackSend:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355     0070                     ?_I2C1_ReceiveEnable:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358     0070                     ??_I2C1_ReceiveEnable:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361     0070                     ?_I2C1_StopSend:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364     0070                     ??_I2C1_StopSend:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367     0070                     ?_I2C1_BusReset:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370     0070                     ??_I2C1_BusReset:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373     0070                     ?_EUSART_Initialize:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376     0070                     ?_EUSART_Read:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379     0070                     ?_EUSART_IsRxReady:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382     0070                     ?_EUSART_IsTxReady:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391     0070                     ?_SSPA_getTemp:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394     0070                     ?_SSPA_getPOut:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397     0070                     ?_KAPS_getStatus:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400     0070                     ?_KAPS_getPos:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403     0070                     ?_KAPS_getIndex:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406     0070                     ?_KAPS_GoToIdx:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409     0070                     ?_KAPS_setRelPos:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412     0070                     ?_Parse:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415     0070                     ?_ADC_Initialize:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418     0070                     ?_ADC_SelectChannel:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421     0070                     ?_ADC_StartConversion:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424     0070                     ?_ADC_IsConversionDone:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427     0070                     ?_ADC_ISR:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430     0070                     ??_ADC_ISR:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433     0070                     ?_I2C1_ISR:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436     0070                     ?_I2C1_ERROR_ISR:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439     0070                     ?_I2C1_Close:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442     0070                     ??_I2C1_Close:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445     0070                     ?_CLOCK_Initialize:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448     0070                     ?_PIN_MANAGER_Initialize:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451     0070                     ?_INTERRUPT_Initialize:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454     0070                     ?_INTERRUPT_InterruptManager:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457     0070                     ?_SYSTEM_Initialize:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460     0070                     ?_SendSync:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463     0070                     ?_SendNack:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466     0070                     ?_main:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469     0070                     I2C1_EVENT_NACK@retEventState:	
  5470                           ; 2 bytes @ 0x0
  5471                           
  5472     0070                     I2C1_EVENT_ERROR@retEventState:	
  5473                           ; 1 bytes @ 0x0
  5474                           
  5475     0070                     I2C1_DataTransmit@data:	
  5476                           ; 1 bytes @ 0x0
  5477                           
  5478                           
  5479                           ; 1 bytes @ 0x0
  5480     0070                     	ds	1
  5481     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  5482     0071                     ??_I2C1_EVENT_TX:	
  5483                           ; 1 bytes @ 0x1
  5484                           
  5485     0071                     I2C1_EVENT_TX@retEventState:	
  5486                           ; 1 bytes @ 0x1
  5487                           
  5488     0071                     I2C1_EVENT_RX@retEventState:	
  5489                           ; 1 bytes @ 0x1
  5490                           
  5491                           
  5492                           ; 1 bytes @ 0x1
  5493     0071                     	ds	1
  5494     0072                     ??_I2C1_EventHandler:
  5495     0072                     ??_I2C1_ErrorEventHandler:	
  5496                           ; 1 bytes @ 0x2
  5497                           
  5498                           
  5499                           ; 1 bytes @ 0x2
  5500     0072                     	ds	2
  5501     0074                     ?_ADC_SetInterruptHandler:
  5502     0074                     ??_I2C1_IsBusy:	
  5503                           ; 1 bytes @ 0x4
  5504                           
  5505     0074                     ?_I2C1_CallbackRegister:	
  5506                           ; 1 bytes @ 0x4
  5507                           
  5508     0074                     ??_I2C1_InterruptsEnable:	
  5509                           ; 1 bytes @ 0x4
  5510                           
  5511     0074                     ??_I2C1_WriteStart:	
  5512                           ; 1 bytes @ 0x4
  5513                           
  5514     0074                     ??_I2C1_ReadStart:	
  5515                           ; 1 bytes @ 0x4
  5516                           
  5517     0074                     ??_I2C1_StartSend:	
  5518                           ; 1 bytes @ 0x4
  5519                           
  5520     0074                     ?_INT_SetInterruptHandler:	
  5521                           ; 1 bytes @ 0x4
  5522                           
  5523     0074                     ??_EUSART_Read:	
  5524                           ; 1 bytes @ 0x4
  5525                           
  5526     0074                     ?_EUSART_Write:	
  5527                           ; 1 bytes @ 0x4
  5528                           
  5529     0074                     ??_EUSART_IsRxReady:	
  5530                           ; 1 bytes @ 0x4
  5531                           
  5532     0074                     ??_EUSART_IsTxReady:	
  5533                           ; 1 bytes @ 0x4
  5534                           
  5535     0074                     ?_EUSART_FramingErrorCallbackRegister:	
  5536                           ; 1 bytes @ 0x4
  5537                           
  5538     0074                     ?_EUSART_OverrunErrorCallbackRegister:	
  5539                           ; 1 bytes @ 0x4
  5540                           
  5541     0074                     ??_EUSART_DefaultFramingErrorCallback:	
  5542                           ; 1 bytes @ 0x4
  5543                           
  5544     0074                     ??_EUSART_DefaultOverrunErrorCallback:	
  5545                           ; 1 bytes @ 0x4
  5546                           
  5547     0074                     ??_unpackWord:	
  5548                           ; 1 bytes @ 0x4
  5549                           
  5550     0074                     ?_SSPA_setMute:	
  5551                           ; 1 bytes @ 0x4
  5552                           
  5553     0074                     ??_ADC_SelectChannel:	
  5554                           ; 1 bytes @ 0x4
  5555                           
  5556     0074                     ??_ADC_StartConversion:	
  5557                           ; 1 bytes @ 0x4
  5558                           
  5559     0074                     ??_ADC_IsConversionDone:	
  5560                           ; 1 bytes @ 0x4
  5561                           
  5562     0074                     ??_I2C1_ISR:	
  5563                           ; 1 bytes @ 0x4
  5564                           
  5565     0074                     ??_I2C1_ERROR_ISR:	
  5566                           ; 1 bytes @ 0x4
  5567                           
  5568     0074                     ??_CLOCK_Initialize:	
  5569                           ; 1 bytes @ 0x4
  5570                           
  5571     0074                     ??_PIN_MANAGER_Initialize:	
  5572                           ; 1 bytes @ 0x4
  5573                           
  5574     0074                     ??_INTERRUPT_InterruptManager:	
  5575                           ; 1 bytes @ 0x4
  5576                           
  5577     0074                     ??___lmul:	
  5578                           ; 1 bytes @ 0x4
  5579                           
  5580     0074                     ??___aldiv:	
  5581                           ; 1 bytes @ 0x4
  5582                           
  5583     0074                     ?_ADC_GetConversionResult:	
  5584                           ; 1 bytes @ 0x4
  5585                           
  5586     0074                     _I2C1_IsBusy$646:	
  5587                           ; 2 bytes @ 0x4
  5588                           
  5589     0074                     _EUSART_IsTxReady$1324:	
  5590                           ; 1 bytes @ 0x4
  5591                           
  5592     0074                     EUSART_Write@txData:	
  5593                           ; 1 bytes @ 0x4
  5594                           
  5595     0074                     SSPA_setMute@mute:	
  5596                           ; 1 bytes @ 0x4
  5597                           
  5598     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  5599                           ; 1 bytes @ 0x4
  5600                           
  5601     0074                     I2C1_CallbackRegister@callbackHandler:	
  5602                           ; 2 bytes @ 0x4
  5603                           
  5604     0074                     INT_SetInterruptHandler@InterruptHandler:	
  5605                           ; 2 bytes @ 0x4
  5606                           
  5607     0074                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  5608                           ; 2 bytes @ 0x4
  5609                           
  5610     0074                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  5611                           ; 2 bytes @ 0x4
  5612                           
  5613                           
  5614                           ; 2 bytes @ 0x4
  5615     0074                     	ds	1
  5616     0075                     ??_I2C1_Write:
  5617     0075                     ??_I2C1_Read:	
  5618                           ; 1 bytes @ 0x5
  5619                           
  5620     0075                     ??_EUSART_Write:	
  5621                           ; 1 bytes @ 0x5
  5622                           
  5623     0075                     ??_SendSync:	
  5624                           ; 1 bytes @ 0x5
  5625                           
  5626     0075                     ??_ADC2Amp:	
  5627                           ; 1 bytes @ 0x5
  5628                           
  5629     0075                     ??_ADC2dBm:	
  5630                           ; 1 bytes @ 0x5
  5631                           
  5632     0075                     ADC_SelectChannel@channel:	
  5633                           ; 1 bytes @ 0x5
  5634                           
  5635     0075                     I2C1_Read@retStatus:	
  5636                           ; 1 bytes @ 0x5
  5637                           
  5638     0075                     SendSync@data:	
  5639                           ; 1 bytes @ 0x5
  5640                           
  5641     0075                     SSPA_setMute@band:	
  5642                           ; 1 bytes @ 0x5
  5643                           
  5644                           
  5645                           ; 1 bytes @ 0x5
  5646     0075                     	ds	1
  5647     0076                     ??_ADC_SetInterruptHandler:
  5648     0076                     ??_I2C1_Initialize:	
  5649                           ; 1 bytes @ 0x6
  5650                           
  5651     0076                     ??_I2C1_CallbackRegister:	
  5652                           ; 1 bytes @ 0x6
  5653                           
  5654     0076                     ??_INT_SetInterruptHandler:	
  5655                           ; 1 bytes @ 0x6
  5656                           
  5657     0076                     ??_EUSART_Initialize:	
  5658                           ; 1 bytes @ 0x6
  5659                           
  5660     0076                     ??_EUSART_FramingErrorCallbackRegister:	
  5661                           ; 1 bytes @ 0x6
  5662                           
  5663     0076                     ??_EUSART_OverrunErrorCallbackRegister:	
  5664                           ; 1 bytes @ 0x6
  5665                           
  5666     0076                     ??_ADC_Initialize:	
  5667                           ; 1 bytes @ 0x6
  5668                           
  5669     0076                     ??_ADC_GetConversionResult:	
  5670                           ; 1 bytes @ 0x6
  5671                           
  5672     0076                     ??_INTERRUPT_Initialize:	
  5673                           ; 1 bytes @ 0x6
  5674                           
  5675     0076                     ??_SYSTEM_Initialize:	
  5676                           ; 1 bytes @ 0x6
  5677                           
  5678     0076                     ??_main:	
  5679                           ; 1 bytes @ 0x6
  5680                           
  5681     0076                     ??_SendNack:	
  5682                           ; 1 bytes @ 0x6
  5683                           
  5684                           
  5685                           	psect	cstackBANK0
  5686     0020                     __pcstackBANK0:	
  5687                           ; 1 bytes @ 0x6
  5688                           
  5689     0020                     ?_I2C1_Write:
  5690     0020                     ?_I2C1_Read:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693     0020                     ?_SendMsg:	
  5694                           ; 1 bytes @ 0x0
  5695                           
  5696     0020                     ?_unpackWord:	
  5697                           ; 1 bytes @ 0x0
  5698                           
  5699     0020                     ?_unpackLong:	
  5700                           ; 1 bytes @ 0x0
  5701                           
  5702     0020                     ??_SSPA_setMute:	
  5703                           ; 1 bytes @ 0x0
  5704                           
  5705     0020                     ?_getADCValue:	
  5706                           ; 1 bytes @ 0x0
  5707                           
  5708     0020                     ?_packLong:	
  5709                           ; 2 bytes @ 0x0
  5710                           
  5711     0020                     ?___lmul:	
  5712                           ; 4 bytes @ 0x0
  5713                           
  5714     0020                     SendMsg@data:	
  5715                           ; 4 bytes @ 0x0
  5716                           
  5717     0020                     I2C1_Write@address:	
  5718                           ; 1 bytes @ 0x0
  5719                           
  5720     0020                     I2C1_Read@address:	
  5721                           ; 2 bytes @ 0x0
  5722                           
  5723     0020                     unpackWord@value:	
  5724                           ; 2 bytes @ 0x0
  5725                           
  5726     0020                     unpackLong@value:	
  5727                           ; 2 bytes @ 0x0
  5728                           
  5729     0020                     ___lmul@multiplier:	
  5730                           ; 4 bytes @ 0x0
  5731                           
  5732                           
  5733                           ; 4 bytes @ 0x0
  5734     0020                     	ds	1
  5735     0021                     SendMsg@data_len:
  5736                           
  5737                           ; 1 bytes @ 0x1
  5738     0021                     	ds	1
  5739     0022                     ??_SendMsg:
  5740     0022                     ??_getADCValue:	
  5741                           ; 1 bytes @ 0x2
  5742                           
  5743     0022                     I2C1_Write@data:	
  5744                           ; 1 bytes @ 0x2
  5745                           
  5746     0022                     I2C1_Read@data:	
  5747                           ; 1 bytes @ 0x2
  5748                           
  5749     0022                     unpackWord@data:	
  5750                           ; 1 bytes @ 0x2
  5751                           
  5752                           
  5753                           ; 1 bytes @ 0x2
  5754     0022                     	ds	1
  5755     0023                     SendMsg@sum:
  5756     0023                     I2C1_Write@dataLength:	
  5757                           ; 1 bytes @ 0x3
  5758                           
  5759     0023                     I2C1_Read@dataLength:	
  5760                           ; 2 bytes @ 0x3
  5761                           
  5762                           
  5763                           ; 2 bytes @ 0x3
  5764     0023                     	ds	1
  5765     0024                     ??_packLong:
  5766     0024                     unpackLong@data:	
  5767                           ; 1 bytes @ 0x4
  5768                           
  5769     0024                     SendMsg@msg_id:	
  5770                           ; 1 bytes @ 0x4
  5771                           
  5772     0024                     getADCValue@channel:	
  5773                           ; 1 bytes @ 0x4
  5774                           
  5775     0024                     ___lmul@multiplicand:	
  5776                           ; 1 bytes @ 0x4
  5777                           
  5778                           
  5779                           ; 4 bytes @ 0x4
  5780     0024                     	ds	1
  5781     0025                     ??_unpackLong:
  5782     0025                     ??_KAPS_getStatus:	
  5783                           ; 1 bytes @ 0x5
  5784                           
  5785     0025                     ??_KAPS_getIndex:	
  5786                           ; 1 bytes @ 0x5
  5787                           
  5788     0025                     ??_KAPS_GoToIdx:	
  5789                           ; 1 bytes @ 0x5
  5790                           
  5791     0025                     ??_KAPS_setRelPos:	
  5792                           ; 1 bytes @ 0x5
  5793                           
  5794     0025                     SendNack@error:	
  5795                           ; 1 bytes @ 0x5
  5796                           
  5797     0025                     getADCValue@sample:	
  5798                           ; 1 bytes @ 0x5
  5799                           
  5800                           
  5801                           ; 2 bytes @ 0x5
  5802     0025                     	ds	1
  5803     0026                     ??_Parse:
  5804                           
  5805                           ; 1 bytes @ 0x6
  5806     0026                     	ds	1
  5807     0027                     KAPS_GoToIdx@idx:
  5808     0027                     KAPS_setRelPos@offset:	
  5809                           ; 1 bytes @ 0x7
  5810                           
  5811     0027                     KAPS_getStatus@reg:	
  5812                           ; 1 bytes @ 0x7
  5813                           
  5814     0027                     KAPS_getIndex@reg:	
  5815                           ; 1 bytes @ 0x7
  5816                           
  5817     0027                     getADCValue@sum:	
  5818                           ; 1 bytes @ 0x7
  5819                           
  5820                           
  5821                           ; 2 bytes @ 0x7
  5822     0027                     	ds	1
  5823     0028                     KAPS_GoToIdx@reg:
  5824     0028                     KAPS_setRelPos@reg:	
  5825                           ; 1 bytes @ 0x8
  5826                           
  5827     0028                     KAPS_getStatus@data:	
  5828                           ; 1 bytes @ 0x8
  5829                           
  5830     0028                     KAPS_getIndex@data:	
  5831                           ; 1 bytes @ 0x8
  5832                           
  5833     0028                     Parse@data:	
  5834                           ; 1 bytes @ 0x8
  5835                           
  5836     0028                     packLong@result:	
  5837                           ; 1 bytes @ 0x8
  5838                           
  5839     0028                     ___lmul@product:	
  5840                           ; 4 bytes @ 0x8
  5841                           
  5842                           
  5843                           ; 4 bytes @ 0x8
  5844     0028                     	ds	1
  5845     0029                     KAPS_setRelPos@value:
  5846     0029                     getADCValue@i:	
  5847                           ; 1 bytes @ 0x9
  5848                           
  5849                           
  5850                           ; 1 bytes @ 0x9
  5851     0029                     	ds	3
  5852     002C                     ?___aldiv:
  5853     002C                     packLong@data:	
  5854                           ; 4 bytes @ 0xC
  5855                           
  5856     002C                     ___aldiv@divisor:	
  5857                           ; 1 bytes @ 0xC
  5858                           
  5859                           
  5860                           ; 4 bytes @ 0xC
  5861     002C                     	ds	1
  5862     002D                     ??_KAPS_getPos:
  5863     002D                     ?_KAPS_setAbsPos:	
  5864                           ; 1 bytes @ 0xD
  5865                           
  5866     002D                     ?_KAPS_StorePos:	
  5867                           ; 1 bytes @ 0xD
  5868                           
  5869     002D                     KAPS_setAbsPos@pos:	
  5870                           ; 1 bytes @ 0xD
  5871                           
  5872     002D                     KAPS_StorePos@pos:	
  5873                           ; 4 bytes @ 0xD
  5874                           
  5875                           
  5876                           ; 4 bytes @ 0xD
  5877     002D                     	ds	2
  5878     002F                     KAPS_getPos@data:
  5879                           
  5880                           ; 4 bytes @ 0xF
  5881     002F                     	ds	1
  5882     0030                     ___aldiv@dividend:
  5883                           
  5884                           ; 4 bytes @ 0x10
  5885     0030                     	ds	1
  5886     0031                     ??_KAPS_setAbsPos:
  5887     0031                     ??_KAPS_StorePos:	
  5888                           ; 1 bytes @ 0x11
  5889                           
  5890                           
  5891                           ; 1 bytes @ 0x11
  5892     0031                     	ds	2
  5893     0033                     KAPS_getPos@reg:
  5894     0033                     KAPS_setAbsPos@data:	
  5895                           ; 1 bytes @ 0x13
  5896                           
  5897     0033                     KAPS_StorePos@data:	
  5898                           ; 4 bytes @ 0x13
  5899                           
  5900                           
  5901                           ; 4 bytes @ 0x13
  5902     0033                     	ds	1
  5903     0034                     ___aldiv@counter:
  5904                           
  5905                           ; 1 bytes @ 0x14
  5906     0034                     	ds	1
  5907     0035                     ___aldiv@sign:
  5908                           
  5909                           ; 1 bytes @ 0x15
  5910     0035                     	ds	1
  5911     0036                     ___aldiv@quotient:
  5912                           
  5913                           ; 4 bytes @ 0x16
  5914     0036                     	ds	1
  5915     0037                     KAPS_setAbsPos@reg:
  5916     0037                     KAPS_StorePos@reg:	
  5917                           ; 1 bytes @ 0x17
  5918                           
  5919                           
  5920                           ; 1 bytes @ 0x17
  5921     0037                     	ds	1
  5922     0038                     KAPS_StorePos@idx:
  5923                           
  5924                           ; 1 bytes @ 0x18
  5925     0038                     	ds	2
  5926     003A                     ?_ADC2dBm:
  5927     003A                     ?_ADC2Celsius:	
  5928                           ; 1 bytes @ 0x1A
  5929                           
  5930     003A                     ?_ADC2Amp:	
  5931                           ; 2 bytes @ 0x1A
  5932                           
  5933     003A                     ADC2Celsius@v:	
  5934                           ; 4 bytes @ 0x1A
  5935                           
  5936     003A                     ADC2Amp@v:	
  5937                           ; 2 bytes @ 0x1A
  5938                           
  5939     003A                     ADC2dBm@v:	
  5940                           ; 2 bytes @ 0x1A
  5941                           
  5942                           
  5943                           ; 2 bytes @ 0x1A
  5944     003A                     	ds	2
  5945     003C                     ??_ADC2Celsius:
  5946     003C                     ADC2dBm@value:	
  5947                           ; 1 bytes @ 0x1C
  5948                           
  5949                           
  5950                           ; 4 bytes @ 0x1C
  5951     003C                     	ds	2
  5952     003E                     ADC2Amp@value:
  5953                           
  5954                           ; 4 bytes @ 0x1E
  5955     003E                     	ds	2
  5956     0040                     ADC2Celsius@value:
  5957     0040                     ADC2dBm@result:	
  5958                           ; 4 bytes @ 0x20
  5959                           
  5960                           
  5961                           ; 4 bytes @ 0x20
  5962     0040                     	ds	2
  5963     0042                     ADC2Amp@result:
  5964                           
  5965                           ; 4 bytes @ 0x22
  5966     0042                     	ds	2
  5967     0044                     ADC2Celsius@result:
  5968                           
  5969                           ; 4 bytes @ 0x24
  5970     0044                     	ds	2
  5971     0046                     ??_SSPA_getPOut:
  5972                           
  5973                           ; 1 bytes @ 0x26
  5974     0046                     	ds	2
  5975     0048                     ??_SSPA_getTemp:
  5976     0048                     SSPA_getPOut@adc_value:	
  5977                           ; 1 bytes @ 0x28
  5978                           
  5979                           
  5980                           ; 2 bytes @ 0x28
  5981     0048                     	ds	2
  5982     004A                     SSPA_getPOut@band:
  5983     004A                     SSPA_getTemp@adc_value:	
  5984                           ; 1 bytes @ 0x2A
  5985                           
  5986                           
  5987                           ; 2 bytes @ 0x2A
  5988     004A                     	ds	2
  5989     004C                     SSPA_getTemp@channel:
  5990                           
  5991                           ; 1 bytes @ 0x2C
  5992     004C                     	ds	1
  5993     004D                     SSPA_getTemp@band:
  5994                           
  5995                           ; 1 bytes @ 0x2D
  5996     004D                     	ds	1
  5997     004E                     ?_ProcessMsg:
  5998     004E                     ProcessMsg@data:	
  5999                           ; 1 bytes @ 0x2E
  6000                           
  6001                           
  6002                           ; 1 bytes @ 0x2E
  6003     004E                     	ds	1
  6004     004F                     ??_ProcessMsg:
  6005                           
  6006                           ; 1 bytes @ 0x2F
  6007     004F                     	ds	1
  6008     0050                     ProcessMsg@msg_id:
  6009                           
  6010                           ; 1 bytes @ 0x30
  6011     0050                     	ds	1
  6012     0051                     main@data:
  6013                           
  6014                           ; 1 bytes @ 0x31
  6015     0051                     	ds	1
  6016                           
  6017                           	psect	maintext
  6018     0F54                     __pmaintext:	
  6019 ;;
  6020 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6021 ;;
  6022 ;; *************** function _main *****************
  6023 ;; Defined at:
  6024 ;;		line 115 in file "main.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  data            1   49[BANK0 ] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2  697[None  ] int 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : B1F/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6038 ;;      Params:         0       0       0       0       0       0       0       0
  6039 ;;      Locals:         0       1       0       0       0       0       0       0
  6040 ;;      Temps:          0       0       0       0       0       0       0       0
  6041 ;;      Totals:         0       1       0       0       0       0       0       0
  6042 ;;Total ram usage:        1 bytes
  6043 ;; Hardware stack levels required when called: 12
  6044 ;; This function calls:
  6045 ;;		_EUSART_IsRxReady
  6046 ;;		_EUSART_Read
  6047 ;;		_Parse
  6048 ;;		_ProcessMsg
  6049 ;;		_SYSTEM_Initialize
  6050 ;; This function is called by:
  6051 ;;		Startup code after reset
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055     0F54                     _main:	
  6056                           ;psect for function _main
  6057                           
  6058     0F54                     l4072:	
  6059                           ;incstack = 0
  6060                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6061                           
  6062                           
  6063                           ;main.c: 116:     SYSTEM_Initialize();
  6064     0F54  318E  2632  318F   	fcall	_SYSTEM_Initialize
  6065     0F57                     l4074:
  6066                           
  6067                           ;main.c: 118:     (INTCONbits.GIE = 1);
  6068     0F57  178B               	bsf	11,7	;volatile
  6069     0F58                     l4076:
  6070                           
  6071                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6072     0F58  170B               	bsf	11,6	;volatile
  6073     0F59                     l4078:
  6074     0F59                     l4080:
  6075                           
  6076                           ;main.c: 132:         if (EUSART_IsRxReady()) {
  6077     0F59  318D  2513  318F   	fcall	_EUSART_IsRxReady
  6078     0F5C  3A00               	xorlw	0
  6079     0F5D  1903               	skipnz
  6080     0F5E  2F60               	goto	u2061
  6081     0F5F  2F61               	goto	u2060
  6082     0F60                     u2061:
  6083     0F60  2F78               	goto	l699
  6084     0F61                     u2060:
  6085     0F61                     l4082:
  6086                           
  6087                           ;main.c: 133:             data = EUSART_Read();
  6088     0F61  318F  277C  318F   	fcall	_EUSART_Read
  6089     0F64  0020               	movlb	0	; select bank0
  6090     0F65  00D1               	movwf	main@data
  6091     0F66                     l4084:
  6092                           
  6093                           ;main.c: 135:             if (Parse(data))
  6094     0F66  0851               	movf	main@data,w
  6095     0F67  3181  21AC  318F   	fcall	_Parse
  6096     0F6A  3A00               	xorlw	0
  6097     0F6B  1903               	skipnz
  6098     0F6C  2F6E               	goto	u2071
  6099     0F6D  2F6F               	goto	u2070
  6100     0F6E                     u2071:
  6101     0F6E  2F59               	goto	l4080
  6102     0F6F                     u2070:
  6103     0F6F                     l4086:
  6104                           
  6105                           ;main.c: 136:                 ProcessMsg(parser.m_MsgID, parserDataBuffer);
  6106     0F6F  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
  6107     0F70  0020               	movlb	0	; select bank0
  6108     0F71  00CE               	movwf	ProcessMsg@data
  6109     0F72  0021               	movlb	1	; select bank1
  6110     0F73  0839               	movf	(_parser^(0+128)+1),w
  6111     0F74  3180  2068  318F   	fcall	_ProcessMsg
  6112     0F77  2F59               	goto	l4080
  6113     0F78                     l699:	
  6114                           ;main.c: 138:         else
  6115                           
  6116                           
  6117                           ;main.c: 139:             __nop();
  6118     0F78  0000               	nop
  6119     0F79  2F59               	goto	l4080
  6120     0F7A  3180  2836         	ljmp	start
  6121     0F7C                     __end_of_main:
  6122                           
  6123                           	psect	text1
  6124     0E32                     __ptext1:	
  6125 ;; *************** function _SYSTEM_Initialize *****************
  6126 ;; Defined at:
  6127 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0, pclath, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6141 ;;      Params:         0       0       0       0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 9
  6148 ;; This function calls:
  6149 ;;		_ADC_Initialize
  6150 ;;		_CLOCK_Initialize
  6151 ;;		_EUSART_Initialize
  6152 ;;		_I2C1_Initialize
  6153 ;;		_INTERRUPT_Initialize
  6154 ;;		_PIN_MANAGER_Initialize
  6155 ;; This function is called by:
  6156 ;;		_main
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160     0E32                     _SYSTEM_Initialize:	
  6161                           ;psect for function _SYSTEM_Initialize
  6162                           
  6163     0E32                     l3170:	
  6164                           ;incstack = 0
  6165                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6166                           
  6167                           
  6168                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  6169     0E32  318D  2588  318E   	fcall	_CLOCK_Initialize
  6170                           
  6171                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  6172     0E35  3184  2471  318E   	fcall	_PIN_MANAGER_Initialize
  6173                           
  6174                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  6175     0E38  318E  2645  318E   	fcall	_ADC_Initialize
  6176                           
  6177                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  6178     0E3B  318E  2687  318E   	fcall	_EUSART_Initialize
  6179                           
  6180                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  6181     0E3E  318E  2659  318E   	fcall	_I2C1_Initialize
  6182                           
  6183                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  6184     0E41  318D  25A6  318E   	fcall	_INTERRUPT_Initialize
  6185     0E44                     l483:
  6186     0E44  0008               	return
  6187     0E45                     __end_of_SYSTEM_Initialize:
  6188                           
  6189                           	psect	text2
  6190     0471                     __ptext2:	
  6191 ;; *************** function _PIN_MANAGER_Initialize *****************
  6192 ;; Defined at:
  6193 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6207 ;;      Params:         0       0       0       0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0
  6210 ;;      Totals:         0       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        0 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 7
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_SYSTEM_Initialize
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221     0471                     _PIN_MANAGER_Initialize:	
  6222                           ;psect for function _PIN_MANAGER_Initialize
  6223                           
  6224     0471                     l2954:	
  6225                           ;incstack = 0
  6226                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6227                           
  6228                           
  6229                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  6230     0471  0022               	movlb	2	; select bank2
  6231     0472  018C               	clrf	12	;volatile
  6232     0473                     l2956:
  6233                           
  6234                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  6235     0473  3060               	movlw	96
  6236     0474  008D               	movwf	13	;volatile
  6237     0475                     l2958:
  6238                           
  6239                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  6240     0475  018E               	clrf	14	;volatile
  6241                           
  6242                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  6243     0476  303F               	movlw	63
  6244     0477  0021               	movlb	1	; select bank1
  6245     0478  008C               	movwf	12	;volatile
  6246                           
  6247                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  6248     0479  30F0               	movlw	240
  6249     047A  008D               	movwf	13	;volatile
  6250                           
  6251                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  6252     047B  303B               	movlw	59
  6253     047C  008E               	movwf	14	;volatile
  6254                           
  6255                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  6256     047D  3017               	movlw	23
  6257     047E  0023               	movlb	3	; select bank3
  6258     047F  008C               	movwf	12	;volatile
  6259                           
  6260                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  6261     0480  3010               	movlw	16
  6262     0481  008D               	movwf	13	;volatile
  6263                           
  6264                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  6265     0482  300D               	movlw	13
  6266     0483  008E               	movwf	14	;volatile
  6267                           
  6268                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  6269     0484  302C               	movlw	44
  6270     0485  0024               	movlb	4	; select bank4
  6271     0486  008C               	movwf	12	;volatile
  6272                           
  6273                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  6274     0487  30E0               	movlw	224
  6275     0488  008D               	movwf	13	;volatile
  6276                           
  6277                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  6278     0489  30F7               	movlw	247
  6279     048A  008E               	movwf	14	;volatile
  6280     048B                     l2960:
  6281                           
  6282                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  6283     048B  0021               	movlb	1	; select bank1
  6284     048C  1395               	bcf	21,7	;volatile
  6285     048D                     l2962:
  6286                           
  6287                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  6288     048D  0025               	movlb	5	; select bank5
  6289     048E  018C               	clrf	12	;volatile
  6290     048F                     l2964:
  6291                           
  6292                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  6293     048F  018D               	clrf	13	;volatile
  6294     0490                     l2966:
  6295                           
  6296                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  6297     0490  018E               	clrf	14	;volatile
  6298     0491                     l2968:
  6299                           
  6300                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  6301     0491  3037               	movlw	55
  6302     0492  0026               	movlb	6	; select bank6
  6303     0493  008C               	movwf	12	;volatile
  6304     0494                     l2970:
  6305                           
  6306                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  6307     0494  30F0               	movlw	240
  6308     0495  008D               	movwf	13	;volatile
  6309     0496                     l2972:
  6310                           
  6311                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  6312     0496  30FF               	movlw	255
  6313     0497  008E               	movwf	14	;volatile
  6314     0498                     l2974:
  6315                           
  6316                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  6317     0498  303F               	movlw	63
  6318     0499  0027               	movlb	7	; select bank7
  6319     049A  008C               	movwf	12	;volatile
  6320     049B                     l2976:
  6321                           
  6322                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  6323     049B  30F0               	movlw	240
  6324     049C  008D               	movwf	13	;volatile
  6325     049D                     l2978:
  6326                           
  6327                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  6328     049D  30FF               	movlw	255
  6329     049E  008E               	movwf	14	;volatile
  6330     049F                     l2980:
  6331                           
  6332                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  6333     049F  3011               	movlw	17
  6334     04A0  003C               	movlb	28	; select bank28
  6335     04A1  00A4               	movwf	36	;volatile
  6336     04A2                     l2982:
  6337                           
  6338                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  6339     04A2  3006               	movlw	6
  6340     04A3  003D               	movlb	29	; select bank29
  6341     04A4  00A2               	movwf	34	;volatile
  6342     04A5                     l2984:
  6343                           
  6344                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  6345     04A5  300E               	movlw	14
  6346     04A6  003C               	movlb	28	; select bank28
  6347     04A7  00A0               	movwf	32	;volatile
  6348     04A8                     l2986:
  6349                           
  6350                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  6351     04A8  3010               	movlw	16
  6352     04A9  003D               	movlb	29	; select bank29
  6353     04AA  009E               	movwf	30	;volatile
  6354     04AB                     l2988:
  6355                           
  6356                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  6357     04AB  300D               	movlw	13
  6358     04AC  003C               	movlb	28	; select bank28
  6359     04AD  00A1               	movwf	33	;volatile
  6360     04AE                     l2990:
  6361                           
  6362                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  6363     04AE  3011               	movlw	17
  6364     04AF  003D               	movlb	29	; select bank29
  6365     04B0  009D               	movwf	29	;volatile
  6366     04B1                     l2992:
  6367                           
  6368                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  6369     04B1  0027               	movlb	7	; select bank7
  6370     04B2  0191               	clrf	17	;volatile
  6371     04B3                     l2994:
  6372                           
  6373                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  6374     04B3  0192               	clrf	18	;volatile
  6375     04B4                     l2996:
  6376                           
  6377                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  6378     04B4  0193               	clrf	19	;volatile
  6379     04B5                     l2998:
  6380                           
  6381                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  6382     04B5  0194               	clrf	20	;volatile
  6383     04B6                     l3000:
  6384                           
  6385                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  6386     04B6  0195               	clrf	21	;volatile
  6387     04B7                     l3002:
  6388                           
  6389                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  6390     04B7  0196               	clrf	22	;volatile
  6391     04B8                     l3004:
  6392                           
  6393                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  6394     04B8  0197               	clrf	23	;volatile
  6395     04B9                     l3006:
  6396                           
  6397                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  6398     04B9  0198               	clrf	24	;volatile
  6399     04BA                     l3008:
  6400                           
  6401                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  6402     04BA  0199               	clrf	25	;volatile
  6403     04BB                     l410:
  6404     04BB  0008               	return
  6405     04BC                     __end_of_PIN_MANAGER_Initialize:
  6406                           
  6407                           	psect	text3
  6408     0DA6                     __ptext3:	
  6409 ;; *************** function _INTERRUPT_Initialize *****************
  6410 ;; Defined at:
  6411 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, pclath, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6425 ;;      Params:         0       0       0       0       0       0       0       0
  6426 ;;      Locals:         0       0       0       0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0
  6428 ;;      Totals:         0       0       0       0       0       0       0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 8
  6432 ;; This function calls:
  6433 ;;		_INT_SetInterruptHandler
  6434 ;; This function is called by:
  6435 ;;		_SYSTEM_Initialize
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439     0DA6                     _INTERRUPT_Initialize:	
  6440                           ;psect for function _INTERRUPT_Initialize
  6441                           
  6442     0DA6                     l3010:	
  6443                           ;incstack = 0
  6444                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6445                           
  6446                           
  6447                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  6448     0DA6  108B               	bcf	11,1	;volatile
  6449                           
  6450                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  6451     0DA7  0021               	movlb	1	; select bank1
  6452     0DA8  1715               	bsf	21,6	;volatile
  6453     0DA9                     l3012:
  6454                           
  6455                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  6456     0DA9  3000               	movlw	0
  6457     0DAA  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  6458     0DAB  3000               	movlw	0
  6459     0DAC  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6460     0DAD  318D  2518  318D   	fcall	_INT_SetInterruptHandler
  6461     0DB0                     l442:
  6462     0DB0  0008               	return
  6463     0DB1                     __end_of_INTERRUPT_Initialize:
  6464                           
  6465                           	psect	text4
  6466     0D18                     __ptext4:	
  6467 ;; *************** function _INT_SetInterruptHandler *****************
  6468 ;; Defined at:
  6469 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6472 ;;		 -> INT_DefaultInterruptHandler(1), 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;		None
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      void 
  6477 ;; Registers used:
  6478 ;;		wreg
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6484 ;;      Params:         2       0       0       0       0       0       0       0
  6485 ;;      Locals:         0       0       0       0       0       0       0       0
  6486 ;;      Temps:          0       0       0       0       0       0       0       0
  6487 ;;      Totals:         2       0       0       0       0       0       0       0
  6488 ;;Total ram usage:        2 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 7
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_INTERRUPT_Initialize
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498     0D18                     _INT_SetInterruptHandler:	
  6499                           ;psect for function _INT_SetInterruptHandler
  6500                           
  6501     0D18                     l2790:	
  6502                           ;incstack = 0
  6503                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6504                           
  6505                           
  6506                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  6507     0D18  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6508     0D19  00F9               	movwf	_INT_InterruptHandler+1
  6509     0D1A  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6510     0D1B  00F8               	movwf	_INT_InterruptHandler
  6511     0D1C                     l465:
  6512     0D1C  0008               	return
  6513     0D1D                     __end_of_INT_SetInterruptHandler:
  6514                           
  6515                           	psect	text5
  6516     0E59                     __ptext5:	
  6517 ;; *************** function _I2C1_Initialize *****************
  6518 ;; Defined at:
  6519 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6533 ;;      Params:         0       0       0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; Hardware stack levels required when called: 8
  6540 ;; This function calls:
  6541 ;;		_I2C1_CallbackRegister
  6542 ;;		_I2C1_InterruptsEnable
  6543 ;; This function is called by:
  6544 ;;		_SYSTEM_Initialize
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548     0E59                     _I2C1_Initialize:	
  6549                           ;psect for function _I2C1_Initialize
  6550                           
  6551     0E59                     l2914:	
  6552                           ;incstack = 0
  6553                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6554                           
  6555                           
  6556                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  6557     0E59  3080               	movlw	128
  6558     0E5A  0024               	movlb	4	; select bank4
  6559     0E5B  0094               	movwf	20	;volatile
  6560                           
  6561                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  6562     0E5C  3008               	movlw	8
  6563     0E5D  0095               	movwf	21	;volatile
  6564     0E5E                     l2916:
  6565                           
  6566                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  6567     0E5E  0196               	clrf	22	;volatile
  6568     0E5F                     l2918:
  6569                           
  6570                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  6571     0E5F  0197               	clrf	23	;volatile
  6572                           
  6573                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  6574     0E60  3027               	movlw	39
  6575     0E61  0092               	movwf	18	;volatile
  6576     0E62                     l2920:
  6577                           
  6578                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  6579     0E62  318D  2505  318E   	fcall	_I2C1_InterruptsEnable
  6580                           
  6581                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  6582     0E65  30C1               	movlw	low _I2C1_DefaultCallback
  6583     0E66  00F4               	movwf	I2C1_CallbackRegister@callbackHandler
  6584     0E67  300C               	movlw	high _I2C1_DefaultCallback
  6585     0E68  00F5               	movwf	I2C1_CallbackRegister@callbackHandler+1
  6586     0E69  318D  25D5  318E   	fcall	_I2C1_CallbackRegister
  6587     0E6C                     l2922:
  6588                           
  6589                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  6590     0E6C  0024               	movlb	4	; select bank4
  6591     0E6D  1695               	bsf	21,5	;volatile
  6592     0E6E                     l177:
  6593     0E6E  0008               	return
  6594     0E6F                     __end_of_I2C1_Initialize:
  6595                           
  6596                           	psect	text6
  6597     0D05                     __ptext6:	
  6598 ;; *************** function _I2C1_InterruptsEnable *****************
  6599 ;; Defined at:
  6600 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      void 
  6607 ;; Registers used:
  6608 ;;		None
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6614 ;;      Params:         0       0       0       0       0       0       0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0       0
  6617 ;;      Totals:         0       0       0       0       0       0       0       0
  6618 ;;Total ram usage:        0 bytes
  6619 ;; Hardware stack levels used: 1
  6620 ;; Hardware stack levels required when called: 7
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_I2C1_Initialize
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628     0D05                     _I2C1_InterruptsEnable:	
  6629                           ;psect for function _I2C1_InterruptsEnable
  6630                           
  6631     0D05                     l2638:	
  6632                           ;incstack = 0
  6633                           ; Regs used in _I2C1_InterruptsEnable: []
  6634                           
  6635                           
  6636                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  6637     0D05  0021               	movlb	1	; select bank1
  6638     0D06  1590               	bsf	16,3	;volatile
  6639                           
  6640                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  6641     0D07  1591               	bsf	17,3	;volatile
  6642     0D08                     l312:
  6643     0D08  0008               	return
  6644     0D09                     __end_of_I2C1_InterruptsEnable:
  6645                           
  6646                           	psect	text7
  6647     0DD5                     __ptext7:	
  6648 ;; *************** function _I2C1_CallbackRegister *****************
  6649 ;; Defined at:
  6650 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6653 ;;		 -> I2C1_DefaultCallback(1), 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6665 ;;      Params:         2       0       0       0       0       0       0       0
  6666 ;;      Locals:         0       0       0       0       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0
  6668 ;;      Totals:         2       0       0       0       0       0       0       0
  6669 ;;Total ram usage:        2 bytes
  6670 ;; Hardware stack levels used: 1
  6671 ;; Hardware stack levels required when called: 7
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_I2C1_Initialize
  6676 ;;		_I2C1_Deinitialize
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680     0DD5                     _I2C1_CallbackRegister:	
  6681                           ;psect for function _I2C1_CallbackRegister
  6682                           
  6683     0DD5                     l2640:	
  6684                           ;incstack = 0
  6685                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  6686                           
  6687                           
  6688                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  6689     0DD5  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6690     0DD6  0475               	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  6691     0DD7  1903               	btfsc	3,2
  6692     0DD8  2DDA               	goto	u911
  6693     0DD9  2DDB               	goto	u910
  6694     0DDA                     u911:
  6695     0DDA  2DE0               	goto	l204
  6696     0DDB                     u910:
  6697     0DDB                     l2642:
  6698                           
  6699                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  6700     0DDB  0875               	movf	I2C1_CallbackRegister@callbackHandler+1,w
  6701     0DDC  0020               	movlb	0	; select bank0
  6702     0DDD  00E3               	movwf	_I2C1_Callback+1
  6703     0DDE  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6704     0DDF  00E2               	movwf	_I2C1_Callback
  6705     0DE0                     l204:
  6706     0DE0  0008               	return
  6707     0DE1                     __end_of_I2C1_CallbackRegister:
  6708                           
  6709                           	psect	text8
  6710     0E87                     __ptext8:	
  6711 ;; *************** function _EUSART_Initialize *****************
  6712 ;; Defined at:
  6713 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0, pclath, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6727 ;;      Params:         0       0       0       0       0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0
  6730 ;;      Totals:         0       0       0       0       0       0       0       0
  6731 ;;Total ram usage:        0 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 8
  6734 ;; This function calls:
  6735 ;;		_EUSART_FramingErrorCallbackRegister
  6736 ;;		_EUSART_OverrunErrorCallbackRegister
  6737 ;; This function is called by:
  6738 ;;		_SYSTEM_Initialize
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742     0E87                     _EUSART_Initialize:	
  6743                           ;psect for function _EUSART_Initialize
  6744                           
  6745     0E87                     l3014:	
  6746                           ;incstack = 0
  6747                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6748                           
  6749                           
  6750                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  6751     0E87  3048               	movlw	72
  6752     0E88  0023               	movlb	3	; select bank3
  6753     0E89  009F               	movwf	31	;volatile
  6754                           
  6755                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  6756     0E8A  3090               	movlw	144
  6757     0E8B  009D               	movwf	29	;volatile
  6758                           
  6759                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  6760     0E8C  3026               	movlw	38
  6761     0E8D  009E               	movwf	30	;volatile
  6762                           
  6763                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  6764     0E8E  30A0               	movlw	160
  6765     0E8F  009B               	movwf	27	;volatile
  6766                           
  6767                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  6768     0E90  3001               	movlw	1
  6769     0E91  009C               	movwf	28	;volatile
  6770     0E92                     l3016:
  6771                           
  6772                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  6773     0E92  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  6774     0E93  00F4               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  6775     0E94  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  6776     0E95  00F5               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  6777     0E96  318D  259B  318E   	fcall	_EUSART_FramingErrorCallbackRegister
  6778     0E99                     l3018:
  6779                           
  6780                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  6781     0E99  30FD               	movlw	low _EUSART_DefaultOverrunErrorCallback
  6782     0E9A  00F4               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  6783     0E9B  300C               	movlw	high _EUSART_DefaultOverrunErrorCallback
  6784     0E9C  00F5               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  6785     0E9D  318D  25C9  318E   	fcall	_EUSART_OverrunErrorCallbackRegister
  6786     0EA0                     l3020:
  6787                           
  6788                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  6789     0EA0  0020               	movlb	0	; select bank0
  6790     0EA1  01E0               	clrf	_eusartRxLastError	;volatile
  6791     0EA2  01E1               	clrf	_eusartRxLastError+1	;volatile
  6792     0EA3                     l548:
  6793     0EA3  0008               	return
  6794     0EA4                     __end_of_EUSART_Initialize:
  6795                           
  6796                           	psect	text9
  6797     0DC9                     __ptext9:	
  6798 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  6799 ;; Defined at:
  6800 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6803 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      void 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6815 ;;      Params:         2       0       0       0       0       0       0       0
  6816 ;;      Locals:         0       0       0       0       0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0
  6818 ;;      Totals:         2       0       0       0       0       0       0       0
  6819 ;;Total ram usage:        2 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; Hardware stack levels required when called: 7
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_EUSART_Initialize
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829     0DC9                     _EUSART_OverrunErrorCallbackRegister:	
  6830                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  6831                           
  6832     0DC9                     l2796:	
  6833                           ;incstack = 0
  6834                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  6835                           
  6836                           
  6837                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  6838     0DC9  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6839     0DCA  0475               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6840     0DCB  1903               	btfsc	3,2
  6841     0DCC  2DCE               	goto	u1001
  6842     0DCD  2DCF               	goto	u1000
  6843     0DCE                     u1001:
  6844     0DCE  2DD4               	goto	l627
  6845     0DCF                     u1000:
  6846     0DCF                     l2798:
  6847                           
  6848                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6849     0DCF  0875               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6850     0DD0  0020               	movlb	0	; select bank0
  6851     0DD1  00DF               	movwf	_EUSART_OverrunErrorHandler+1
  6852     0DD2  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6853     0DD3  00DE               	movwf	_EUSART_OverrunErrorHandler
  6854     0DD4                     l627:
  6855     0DD4  0008               	return
  6856     0DD5                     __end_of_EUSART_OverrunErrorCallbackRegister:
  6857                           
  6858                           	psect	text10
  6859     0D9B                     __ptext10:	
  6860 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6861 ;; Defined at:
  6862 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6865 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6877 ;;      Params:         2       0       0       0       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0
  6880 ;;      Totals:         2       0       0       0       0       0       0       0
  6881 ;;Total ram usage:        2 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; Hardware stack levels required when called: 7
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_EUSART_Initialize
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891     0D9B                     _EUSART_FramingErrorCallbackRegister:	
  6892                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6893                           
  6894     0D9B                     l2792:	
  6895                           ;incstack = 0
  6896                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6897                           
  6898                           
  6899                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6900     0D9B  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6901     0D9C  0475               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6902     0D9D  1903               	btfsc	3,2
  6903     0D9E  2DA0               	goto	u991
  6904     0D9F  2DA1               	goto	u990
  6905     0DA0                     u991:
  6906     0DA0  2DA5               	goto	l623
  6907     0DA1                     u990:
  6908     0DA1                     l2794:
  6909                           
  6910                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6911     0DA1  0875               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6912     0DA2  00F7               	movwf	_EUSART_FramingErrorHandler+1
  6913     0DA3  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6914     0DA4  00F6               	movwf	_EUSART_FramingErrorHandler
  6915     0DA5                     l623:
  6916     0DA5  0008               	return
  6917     0DA6                     __end_of_EUSART_FramingErrorCallbackRegister:
  6918                           
  6919                           	psect	text11
  6920     0D88                     __ptext11:	
  6921 ;; *************** function _CLOCK_Initialize *****************
  6922 ;; Defined at:
  6923 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6937 ;;      Params:         0       0       0       0       0       0       0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0
  6940 ;;      Totals:         0       0       0       0       0       0       0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 7
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_SYSTEM_Initialize
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951     0D88                     _CLOCK_Initialize:	
  6952                           ;psect for function _CLOCK_Initialize
  6953                           
  6954     0D88                     l2948:	
  6955                           ;incstack = 0
  6956                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6957                           
  6958                           
  6959                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6960     0D88  307A               	movlw	122
  6961     0D89  0021               	movlb	1	; select bank1
  6962     0D8A  0099               	movwf	25	;volatile
  6963     0D8B                     l2950:
  6964                           
  6965                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6966     0D8B  0022               	movlb	2	; select bank2
  6967     0D8C  0196               	clrf	22	;volatile
  6968     0D8D                     l2952:
  6969                           
  6970                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6971     0D8D  0021               	movlb	1	; select bank1
  6972     0D8E  0198               	clrf	24	;volatile
  6973     0D8F                     l333:
  6974     0D8F  0008               	return
  6975     0D90                     __end_of_CLOCK_Initialize:
  6976                           
  6977                           	psect	text12
  6978     0E45                     __ptext12:	
  6979 ;; *************** function _ADC_Initialize *****************
  6980 ;; Defined at:
  6981 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0, pclath, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6995 ;;      Params:         0       0       0       0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; Hardware stack levels required when called: 8
  7002 ;; This function calls:
  7003 ;;		_ADC_SetInterruptHandler
  7004 ;; This function is called by:
  7005 ;;		_SYSTEM_Initialize
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009     0E45                     _ADC_Initialize:	
  7010                           ;psect for function _ADC_Initialize
  7011                           
  7012     0E45                     l2898:	
  7013                           ;incstack = 0
  7014                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7015                           
  7016                           
  7017                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  7018     0E45  3060               	movlw	96
  7019     0E46  0021               	movlb	1	; select bank1
  7020     0E47  009E               	movwf	30	;volatile
  7021     0E48                     l2900:
  7022                           
  7023                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  7024     0E48  019B               	clrf	27	;volatile
  7025     0E49                     l2902:
  7026                           
  7027                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  7028     0E49  019C               	clrf	28	;volatile
  7029     0E4A                     l2904:
  7030                           
  7031                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  7032     0E4A  019F               	clrf	31	;volatile
  7033     0E4B                     l2906:
  7034                           
  7035                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  7036     0E4B  3001               	movlw	1
  7037     0E4C  009D               	movwf	29	;volatile
  7038     0E4D                     l2908:
  7039                           
  7040                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  7041     0E4D  0020               	movlb	0	; select bank0
  7042     0E4E  1310               	bcf	16,6	;volatile
  7043     0E4F                     l2910:
  7044                           
  7045                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  7046     0E4F  30C0               	movlw	low _ADC_DefaultInterruptHandler
  7047     0E50  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7048     0E51  300C               	movlw	high _ADC_DefaultInterruptHandler
  7049     0E52  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7050     0E53  318D  2535  318E   	fcall	_ADC_SetInterruptHandler
  7051     0E56                     l2912:
  7052                           
  7053                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  7054     0E56  0021               	movlb	1	; select bank1
  7055     0E57  1710               	bsf	16,6	;volatile
  7056     0E58                     l27:
  7057     0E58  0008               	return
  7058     0E59                     __end_of_ADC_Initialize:
  7059                           
  7060                           	psect	text13
  7061     0D35                     __ptext13:	
  7062 ;; *************** function _ADC_SetInterruptHandler *****************
  7063 ;; Defined at:
  7064 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7067 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7079 ;;      Params:         2       0       0       0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0
  7082 ;;      Totals:         2       0       0       0       0       0       0       0
  7083 ;;Total ram usage:        2 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 7
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_ADC_Initialize
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093     0D35                     _ADC_SetInterruptHandler:	
  7094                           ;psect for function _ADC_SetInterruptHandler
  7095                           
  7096     0D35                     l2636:	
  7097                           ;incstack = 0
  7098                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7099                           
  7100                           
  7101                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  7102     0D35  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7103     0D36  0020               	movlb	0	; select bank0
  7104     0D37  00EC               	movwf	_ADC_InterruptHandler+1
  7105     0D38  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7106     0D39  00EB               	movwf	_ADC_InterruptHandler
  7107     0D3A                     l55:
  7108     0D3A  0008               	return
  7109     0D3B                     __end_of_ADC_SetInterruptHandler:
  7110                           
  7111                           	psect	text14
  7112     0068                     __ptext14:	
  7113 ;; *************** function _ProcessMsg *****************
  7114 ;; Defined at:
  7115 ;;		line 47 in file "main.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  msg_id          1    wreg     unsigned char 
  7118 ;;  data            1   46[BANK0 ] PTR unsigned char 
  7119 ;;		 -> parserDataBuffer(5), 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  msg_id          1   48[BANK0 ] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      void 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7131 ;;      Params:         0       1       0       0       0       0       0       0
  7132 ;;      Locals:         0       1       0       0       0       0       0       0
  7133 ;;      Temps:          0       1       0       0       0       0       0       0
  7134 ;;      Totals:         0       3       0       0       0       0       0       0
  7135 ;;Total ram usage:        3 bytes
  7136 ;; Hardware stack levels used: 1
  7137 ;; Hardware stack levels required when called: 11
  7138 ;; This function calls:
  7139 ;;		_KAPS_GoToIdx
  7140 ;;		_KAPS_StorePos
  7141 ;;		_KAPS_getIndex
  7142 ;;		_KAPS_getPos
  7143 ;;		_KAPS_getStatus
  7144 ;;		_KAPS_setAbsPos
  7145 ;;		_KAPS_setRelPos
  7146 ;;		_SSPA_getPOut
  7147 ;;		_SSPA_getTemp
  7148 ;;		_SSPA_setMute
  7149 ;;		_SendMsg
  7150 ;;		_packLong
  7151 ;;		_unpackLong
  7152 ;;		_unpackWord
  7153 ;; This function is called by:
  7154 ;;		_main
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158     0068                     _ProcessMsg:	
  7159                           ;psect for function _ProcessMsg
  7160                           
  7161                           
  7162                           ;incstack = 0
  7163                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7164                           ;ProcessMsg@msg_id stored from wreg
  7165     0068  0020               	movlb	0	; select bank0
  7166     0069  00D0               	movwf	ProcessMsg@msg_id
  7167     006A                     l3920:
  7168                           
  7169                           ;main.c: 48:     static uint8_t payload[6];;main.c: 50:     switch (msg_id) {
  7170     006A  2988               	goto	l3972
  7171     006B                     l3922:
  7172                           
  7173                           ;main.c: 52:             payload[0] = data[0];
  7174     006B  084E               	movf	ProcessMsg@data,w
  7175     006C  0086               	movwf	6
  7176     006D  0187               	clrf	7
  7177     006E  0801               	movf	1,w
  7178     006F  0021               	movlb	1	; select bank1
  7179     0070  00C4               	movwf	ProcessMsg@payload^(0+128)
  7180     0071                     l3924:
  7181                           
  7182                           ;main.c: 53:             payload[1] = (uint8_t) sspas[data[0]].m_Mute;
  7183     0071  0020               	movlb	0	; select bank0
  7184     0072  084E               	movf	ProcessMsg@data,w
  7185     0073  0086               	movwf	6
  7186     0074  0187               	clrf	7
  7187     0075  0801               	movf	1,w
  7188     0076  00CF               	movwf	??_ProcessMsg
  7189     0077  3002               	movlw	2
  7190     0078                     u1975:
  7191     0078  35CF               	lslf	??_ProcessMsg,f
  7192     0079  3EFF               	addlw	-1
  7193     007A  1D03               	skipz
  7194     007B  2878               	goto	u1975
  7195     007C  354F               	lslf	??_ProcessMsg,w
  7196     007D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7197     007E  0086               	movwf	6
  7198     007F  0187               	clrf	7
  7199     0080  0801               	movf	1,w
  7200     0081  0021               	movlb	1	; select bank1
  7201     0082  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7202     0083                     l3926:
  7203                           
  7204                           ;main.c: 54:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  7205     0083  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7206     0084  0020               	movlb	0	; select bank0
  7207     0085  00A0               	movwf	SendMsg@data
  7208     0086  3002               	movlw	2
  7209     0087  00A1               	movwf	SendMsg@data_len
  7210     0088  300C               	movlw	12
  7211     0089  3186  267C  3180   	fcall	_SendMsg
  7212                           
  7213                           ;main.c: 55:             break;
  7214     008C  29AB               	goto	l693
  7215     008D                     l3928:
  7216                           
  7217                           ;main.c: 58:             SSPA_getTemp((antenna_band_t) data[0]);
  7218     008D  084E               	movf	ProcessMsg@data,w
  7219     008E  0086               	movwf	6
  7220     008F  0187               	clrf	7
  7221     0090  0801               	movf	1,w
  7222     0091  3186  2602  3180   	fcall	_SSPA_getTemp
  7223     0094                     l3930:
  7224                           
  7225                           ;main.c: 59:             payload[0] = data[0];
  7226     0094  0020               	movlb	0	; select bank0
  7227     0095  084E               	movf	ProcessMsg@data,w
  7228     0096  0086               	movwf	6
  7229     0097  0187               	clrf	7
  7230     0098  0801               	movf	1,w
  7231     0099  0021               	movlb	1	; select bank1
  7232     009A  00C4               	movwf	ProcessMsg@payload^(0+128)
  7233     009B                     l3932:
  7234                           
  7235                           ;main.c: 60:             unpackWord((uint16_t) sspas[data[0]].m_wTemp, &payload[1]);
  7236     009B  0020               	movlb	0	; select bank0
  7237     009C  084E               	movf	ProcessMsg@data,w
  7238     009D  0086               	movwf	6
  7239     009E  0187               	clrf	7
  7240     009F  0801               	movf	1,w
  7241     00A0  00CF               	movwf	??_ProcessMsg
  7242     00A1  3002               	movlw	2
  7243     00A2                     u1985:
  7244     00A2  35CF               	lslf	??_ProcessMsg,f
  7245     00A3  3EFF               	addlw	-1
  7246     00A4  1D03               	skipz
  7247     00A5  28A2               	goto	u1985
  7248     00A6  354F               	lslf	??_ProcessMsg,w
  7249     00A7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7250     00A8  0086               	movwf	6
  7251     00A9  0187               	clrf	7
  7252     00AA  3F40               	moviw [0]fsr1
  7253     00AB  00A0               	movwf	unpackWord@value
  7254     00AC  3F41               	moviw [1]fsr1
  7255     00AD  00A1               	movwf	unpackWord@value+1
  7256     00AE  30C5               	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7257     00AF  00A2               	movwf	unpackWord@data
  7258     00B0  318D  25BD  3180   	fcall	_unpackWord
  7259     00B3                     l3934:
  7260                           
  7261                           ;main.c: 61:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7262     00B3  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7263     00B4  0020               	movlb	0	; select bank0
  7264     00B5  00A0               	movwf	SendMsg@data
  7265     00B6  3003               	movlw	3
  7266     00B7  00A1               	movwf	SendMsg@data_len
  7267     00B8  300D               	movlw	13
  7268     00B9  3186  267C  3180   	fcall	_SendMsg
  7269                           
  7270                           ;main.c: 62:             break;
  7271     00BC  29AB               	goto	l693
  7272     00BD                     l3936:
  7273                           
  7274                           ;main.c: 65:             SSPA_getPOut((antenna_band_t) data[0]);
  7275     00BD  084E               	movf	ProcessMsg@data,w
  7276     00BE  0086               	movwf	6
  7277     00BF  0187               	clrf	7
  7278     00C0  0801               	movf	1,w
  7279     00C1  3182  22F4  3180   	fcall	_SSPA_getPOut
  7280     00C4                     l3938:
  7281                           
  7282                           ;main.c: 66:             payload[0] = data[0];
  7283     00C4  0020               	movlb	0	; select bank0
  7284     00C5  084E               	movf	ProcessMsg@data,w
  7285     00C6  0086               	movwf	6
  7286     00C7  0187               	clrf	7
  7287     00C8  0801               	movf	1,w
  7288     00C9  0021               	movlb	1	; select bank1
  7289     00CA  00C4               	movwf	ProcessMsg@payload^(0+128)
  7290     00CB                     l3940:
  7291                           
  7292                           ;main.c: 67:             payload[1] = sspas[data[0]].m_bPOut;
  7293     00CB  0020               	movlb	0	; select bank0
  7294     00CC  084E               	movf	ProcessMsg@data,w
  7295     00CD  0086               	movwf	6
  7296     00CE  0187               	clrf	7
  7297     00CF  0801               	movf	1,w
  7298     00D0  00CF               	movwf	??_ProcessMsg
  7299     00D1  3002               	movlw	2
  7300     00D2                     u1995:
  7301     00D2  35CF               	lslf	??_ProcessMsg,f
  7302     00D3  3EFF               	addlw	-1
  7303     00D4  1D03               	skipz
  7304     00D5  28D2               	goto	u1995
  7305     00D6  354F               	lslf	??_ProcessMsg,w
  7306     00D7  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  7307     00D8  0086               	movwf	6
  7308     00D9  0187               	clrf	7
  7309     00DA  0801               	movf	1,w
  7310     00DB  0021               	movlb	1	; select bank1
  7311     00DC  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7312     00DD                     l3942:
  7313                           
  7314                           ;main.c: 68:             unpackLong(sspas[data[0]].m_lCurrent, &payload[2]);
  7315     00DD  0020               	movlb	0	; select bank0
  7316     00DE  084E               	movf	ProcessMsg@data,w
  7317     00DF  0086               	movwf	6
  7318     00E0  0187               	clrf	7
  7319     00E1  0801               	movf	1,w
  7320     00E2  00CF               	movwf	??_ProcessMsg
  7321     00E3  3002               	movlw	2
  7322     00E4                     u2005:
  7323     00E4  35CF               	lslf	??_ProcessMsg,f
  7324     00E5  3EFF               	addlw	-1
  7325     00E6  1D03               	skipz
  7326     00E7  28E4               	goto	u2005
  7327     00E8  354F               	lslf	??_ProcessMsg,w
  7328     00E9  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  7329     00EA  0086               	movwf	6
  7330     00EB  0187               	clrf	7
  7331     00EC  3F40               	moviw [0]fsr1
  7332     00ED  00A0               	movwf	unpackLong@value
  7333     00EE  3F41               	moviw [1]fsr1
  7334     00EF  00A1               	movwf	unpackLong@value+1
  7335     00F0  3F42               	moviw [2]fsr1
  7336     00F1  00A2               	movwf	unpackLong@value+2
  7337     00F2  3F43               	moviw [3]fsr1
  7338     00F3  00A3               	movwf	unpackLong@value+3
  7339     00F4  30C6               	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7340     00F5  00A4               	movwf	unpackLong@data
  7341     00F6  3184  24BC  3180   	fcall	_unpackLong
  7342     00F9                     l3944:
  7343                           
  7344                           ;main.c: 69:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7345     00F9  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7346     00FA  0020               	movlb	0	; select bank0
  7347     00FB  00A0               	movwf	SendMsg@data
  7348     00FC  3006               	movlw	6
  7349     00FD  00A1               	movwf	SendMsg@data_len
  7350     00FE  300E               	movlw	14
  7351     00FF  3186  267C  3180   	fcall	_SendMsg
  7352                           
  7353                           ;main.c: 70:             break;
  7354     0102  29AB               	goto	l693
  7355     0103                     l3946:
  7356                           
  7357                           ;main.c: 73:             KAPS_getStatus();
  7358     0103  3187  27C3  3180   	fcall	_KAPS_getStatus
  7359     0106                     l3948:
  7360                           
  7361                           ;main.c: 74:             payload[0] = (uint8_t) kaps.m_Status;
  7362     0106  0020               	movlb	0	; select bank0
  7363     0107  0865               	movf	_kaps+1,w
  7364     0108  0021               	movlb	1	; select bank1
  7365     0109  00C4               	movwf	ProcessMsg@payload^(0+128)
  7366     010A                     l3950:
  7367                           
  7368                           ;main.c: 75:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7369     010A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7370     010B  0020               	movlb	0	; select bank0
  7371     010C  00A0               	movwf	SendMsg@data
  7372     010D  01A1               	clrf	SendMsg@data_len
  7373     010E  0AA1               	incf	SendMsg@data_len,f
  7374     010F  300F               	movlw	15
  7375     0110  3186  267C  3180   	fcall	_SendMsg
  7376                           
  7377                           ;main.c: 76:             break;
  7378     0113  29AB               	goto	l693
  7379     0114                     l3952:
  7380                           
  7381                           ;main.c: 79:             KAPS_getPos();
  7382     0114  3185  25C4  3180   	fcall	_KAPS_getPos
  7383                           
  7384                           ;main.c: 80:             unpackLong(kaps.m_lAbsPos, payload);
  7385     0117  3002               	movlw	2
  7386     0118  3E64               	addlw	(low (_kaps| 0))& (0+255)
  7387     0119  0086               	movwf	6
  7388     011A  0187               	clrf	7
  7389     011B  3F40               	moviw [0]fsr1
  7390     011C  0020               	movlb	0	; select bank0
  7391     011D  00A0               	movwf	unpackLong@value
  7392     011E  3F41               	moviw [1]fsr1
  7393     011F  00A1               	movwf	unpackLong@value+1
  7394     0120  3F42               	moviw [2]fsr1
  7395     0121  00A2               	movwf	unpackLong@value+2
  7396     0122  3F43               	moviw [3]fsr1
  7397     0123  00A3               	movwf	unpackLong@value+3
  7398     0124  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7399     0125  00A4               	movwf	unpackLong@data
  7400     0126  3184  24BC  3180   	fcall	_unpackLong
  7401                           
  7402                           ;main.c: 81:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7403     0129  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7404     012A  0020               	movlb	0	; select bank0
  7405     012B  00A0               	movwf	SendMsg@data
  7406     012C  3004               	movlw	4
  7407     012D  00A1               	movwf	SendMsg@data_len
  7408     012E  3010               	movlw	16
  7409     012F  3186  267C  3180   	fcall	_SendMsg
  7410                           
  7411                           ;main.c: 82:             break;
  7412     0132  29AB               	goto	l693
  7413     0133                     l3954:
  7414                           
  7415                           ;main.c: 85:             KAPS_getIndex();
  7416     0133  318F  27D2  3180   	fcall	_KAPS_getIndex
  7417     0136                     l3956:
  7418                           
  7419                           ;main.c: 86:             payload[0] = kaps.m_bIdxPos;
  7420     0136  0020               	movlb	0	; select bank0
  7421     0137  086A               	movf	_kaps+6,w
  7422     0138  0021               	movlb	1	; select bank1
  7423     0139  00C4               	movwf	ProcessMsg@payload^(0+128)
  7424     013A                     l3958:
  7425                           
  7426                           ;main.c: 87:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7427     013A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7428     013B  0020               	movlb	0	; select bank0
  7429     013C  00A0               	movwf	SendMsg@data
  7430     013D  01A1               	clrf	SendMsg@data_len
  7431     013E  0AA1               	incf	SendMsg@data_len,f
  7432     013F  3012               	movlw	18
  7433     0140  3186  267C  3180   	fcall	_SendMsg
  7434                           
  7435                           ;main.c: 88:             break;
  7436     0143  29AB               	goto	l693
  7437     0144                     l3960:
  7438                           
  7439                           ;main.c: 91:             SSPA_setMute((antenna_band_t) data[0], (mute_t) data[1]);
  7440     0144  084E               	movf	ProcessMsg@data,w
  7441     0145  0086               	movwf	6
  7442     0146  0187               	clrf	7
  7443     0147  3F41               	moviw [1]fsr1
  7444     0148  00F4               	movwf	SSPA_setMute@mute
  7445     0149  084E               	movf	ProcessMsg@data,w
  7446     014A  0086               	movwf	6
  7447     014B  0187               	clrf	7
  7448     014C  0801               	movf	1,w
  7449     014D  3186  26B8  3180   	fcall	_SSPA_setMute
  7450                           
  7451                           ;main.c: 92:             break;
  7452     0150  29AB               	goto	l693
  7453     0151                     l3962:
  7454                           
  7455                           ;main.c: 95:             KAPS_GoToIdx(data[0]);
  7456     0151  084E               	movf	ProcessMsg@data,w
  7457     0152  0086               	movwf	6
  7458     0153  0187               	clrf	7
  7459     0154  0801               	movf	1,w
  7460     0155  318F  2706  3180   	fcall	_KAPS_GoToIdx
  7461                           
  7462                           ;main.c: 96:             break;
  7463     0158  29AB               	goto	l693
  7464     0159                     l3964:
  7465                           
  7466                           ;main.c: 99:             KAPS_setAbsPos(packLong(data));
  7467     0159  084E               	movf	ProcessMsg@data,w
  7468     015A  3183  237E  3180   	fcall	_packLong
  7469     015D  0020               	movlb	0	; select bank0
  7470     015E  0823               	movf	?_packLong+3,w
  7471     015F  00B0               	movwf	KAPS_setAbsPos@pos+3
  7472     0160  0822               	movf	?_packLong+2,w
  7473     0161  00AF               	movwf	KAPS_setAbsPos@pos+2
  7474     0162  0821               	movf	?_packLong+1,w
  7475     0163  00AE               	movwf	KAPS_setAbsPos@pos+1
  7476     0164  0820               	movf	?_packLong,w
  7477     0165  00AD               	movwf	KAPS_setAbsPos@pos
  7478     0166  3187  2760  3180   	fcall	_KAPS_setAbsPos
  7479                           
  7480                           ;main.c: 100:             break;
  7481     0169  29AB               	goto	l693
  7482     016A                     l3966:
  7483                           
  7484                           ;main.c: 103:             KAPS_setRelPos((int8_t) data[0]);
  7485     016A  084E               	movf	ProcessMsg@data,w
  7486     016B  0086               	movwf	6
  7487     016C  0187               	clrf	7
  7488     016D  0801               	movf	1,w
  7489     016E  318F  272C  3180   	fcall	_KAPS_setRelPos
  7490                           
  7491                           ;main.c: 104:             break;
  7492     0171  29AB               	goto	l693
  7493     0172                     l3968:
  7494                           
  7495                           ;main.c: 107:             KAPS_StorePos(data[4], packLong(data));
  7496     0172  084E               	movf	ProcessMsg@data,w
  7497     0173  3183  237E  3180   	fcall	_packLong
  7498     0176  0020               	movlb	0	; select bank0
  7499     0177  0823               	movf	?_packLong+3,w
  7500     0178  00B0               	movwf	KAPS_StorePos@pos+3
  7501     0179  0822               	movf	?_packLong+2,w
  7502     017A  00AF               	movwf	KAPS_StorePos@pos+2
  7503     017B  0821               	movf	?_packLong+1,w
  7504     017C  00AE               	movwf	KAPS_StorePos@pos+1
  7505     017D  0820               	movf	?_packLong,w
  7506     017E  00AD               	movwf	KAPS_StorePos@pos
  7507     017F  084E               	movf	ProcessMsg@data,w
  7508     0180  3E04               	addlw	4
  7509     0181  0086               	movwf	6
  7510     0182  0187               	clrf	7
  7511     0183  0801               	movf	1,w
  7512     0184  3185  2584  3180   	fcall	_KAPS_StorePos
  7513                           
  7514                           ;main.c: 108:             break;
  7515     0187  29AB               	goto	l693
  7516     0188                     l3972:
  7517     0188  0850               	movf	ProcessMsg@msg_id,w
  7518                           
  7519                           ; Switch size 1, requested type "simple"
  7520                           ; Number of cases is 11, Range of values is 1 to 17
  7521                           ; switch strategies available:
  7522                           ; Name         Instructions Cycles
  7523                           ; simple_byte           34    18 (average)
  7524                           ; direct_byte           43     9 (fixed)
  7525                           ; jumptable            263     9 (fixed)
  7526                           ;	Chosen strategy is simple_byte
  7527     0189  3A01               	xorlw	1	; case 1
  7528     018A  1903               	skipnz
  7529     018B  2944               	goto	l3960
  7530     018C  3A03               	xorlw	3	; case 2
  7531     018D  1903               	skipnz
  7532     018E  286B               	goto	l3922
  7533     018F  3A01               	xorlw	1	; case 3
  7534     0190  1903               	skipnz
  7535     0191  288D               	goto	l3928
  7536     0192  3A07               	xorlw	7	; case 4
  7537     0193  1903               	skipnz
  7538     0194  28BD               	goto	l3936
  7539     0195  3A01               	xorlw	1	; case 5
  7540     0196  1903               	skipnz
  7541     0197  2903               	goto	l3946
  7542     0198  3A03               	xorlw	3	; case 6
  7543     0199  1903               	skipnz
  7544     019A  2914               	goto	l3952
  7545     019B  3A01               	xorlw	1	; case 7
  7546     019C  1903               	skipnz
  7547     019D  2951               	goto	l3962
  7548     019E  3A0F               	xorlw	15	; case 8
  7549     019F  1903               	skipnz
  7550     01A0  2959               	goto	l3964
  7551     01A1  3A01               	xorlw	1	; case 9
  7552     01A2  1903               	skipnz
  7553     01A3  296A               	goto	l3966
  7554     01A4  3A03               	xorlw	3	; case 10
  7555     01A5  1903               	skipnz
  7556     01A6  2972               	goto	l3968
  7557     01A7  3A1B               	xorlw	27	; case 17
  7558     01A8  1903               	skipnz
  7559     01A9  2933               	goto	l3954
  7560     01AA  29AB               	goto	l693
  7561     01AB                     l693:
  7562     01AB  0008               	return
  7563     01AC                     __end_of_ProcessMsg:
  7564                           
  7565                           	psect	text15
  7566     0DBD                     __ptext15:	
  7567 ;; *************** function _unpackWord *****************
  7568 ;; Defined at:
  7569 ;;		line 71 in file "utils.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  value           2    0[BANK0 ] unsigned short 
  7572 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7573 ;;		 -> ProcessMsg@payload(6), 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  1    wreg      void 
  7578 ;; Registers used:
  7579 ;;		wreg, fsr1l, fsr1h, status,2
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7585 ;;      Params:         0       3       0       0       0       0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0
  7588 ;;      Totals:         0       3       0       0       0       0       0       0
  7589 ;;Total ram usage:        3 bytes
  7590 ;; Hardware stack levels used: 1
  7591 ;; Hardware stack levels required when called: 7
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_ProcessMsg
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599     0DBD                     _unpackWord:	
  7600                           ;psect for function _unpackWord
  7601                           
  7602     0DBD                     l3804:	
  7603                           ;incstack = 0
  7604                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7605                           
  7606                           
  7607                           ;utils.c: 73:     data[0] = value & 0xFF;
  7608     0DBD  0020               	movlb	0	; select bank0
  7609     0DBE  0822               	movf	unpackWord@data,w
  7610     0DBF  0086               	movwf	6
  7611     0DC0  0187               	clrf	7
  7612     0DC1  0820               	movf	unpackWord@value,w
  7613     0DC2  0081               	movwf	1
  7614     0DC3                     l3806:
  7615                           
  7616                           ;utils.c: 74:     data[1] = (value >> 8) & 0xFF;
  7617     0DC3  0A22               	incf	unpackWord@data,w
  7618     0DC4  0086               	movwf	6
  7619     0DC5  0187               	clrf	7
  7620     0DC6  0821               	movf	unpackWord@value+1,w
  7621     0DC7  0081               	movwf	1
  7622     0DC8                     l751:
  7623     0DC8  0008               	return
  7624     0DC9                     __end_of_unpackWord:
  7625                           
  7626                           	psect	text16
  7627     06B8                     __ptext16:	
  7628 ;; *************** function _SSPA_setMute *****************
  7629 ;; Defined at:
  7630 ;;		line 91 in file "sspa.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  band            1    wreg     enum E40
  7633 ;;  mute            1    4[COMMON] enum E36
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  band            1    5[COMMON] enum E40
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7645 ;;      Params:         1       0       0       0       0       0       0       0
  7646 ;;      Locals:         1       0       0       0       0       0       0       0
  7647 ;;      Temps:          0       2       0       0       0       0       0       0
  7648 ;;      Totals:         2       2       0       0       0       0       0       0
  7649 ;;Total ram usage:        4 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; Hardware stack levels required when called: 7
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_ProcessMsg
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659     06B8                     _SSPA_setMute:	
  7660                           ;psect for function _SSPA_setMute
  7661                           
  7662                           
  7663                           ;incstack = 0
  7664                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7665                           ;SSPA_setMute@band stored from wreg
  7666     06B8  00F5               	movwf	SSPA_setMute@band
  7667     06B9                     l3868:
  7668                           
  7669                           ;sspa.c: 92:     switch (band) {
  7670     06B9  2ED0               	goto	l3876
  7671     06BA                     l3870:
  7672                           
  7673                           ;sspa.c: 94:             if (mute == UNMUTE)
  7674     06BA  0874               	movf	SSPA_setMute@mute,w
  7675     06BB  1D03               	btfss	3,2
  7676     06BC  2EBE               	goto	u1931
  7677     06BD  2EBF               	goto	u1930
  7678     06BE                     u1931:
  7679     06BE  2EC2               	goto	l852
  7680     06BF                     u1930:
  7681     06BF                     l849:	
  7682                           ;sspa.c: 95:                 do { LATCbits.LATC7 = 1; } while(0);
  7683                           
  7684     06BF  0022               	movlb	2	; select bank2
  7685     06C0  178E               	bsf	14,7	;volatile
  7686     06C1  2EE4               	goto	l3878
  7687     06C2                     l852:	
  7688                           ;sspa.c: 97:                 do { LATCbits.LATC7 = 0; } while(0);
  7689                           
  7690     06C2  0022               	movlb	2	; select bank2
  7691     06C3  138E               	bcf	14,7	;volatile
  7692     06C4  2EE4               	goto	l3878
  7693     06C5                     l3872:
  7694                           
  7695                           ;sspa.c: 101:             if (mute == UNMUTE)
  7696     06C5  0874               	movf	SSPA_setMute@mute,w
  7697     06C6  1D03               	btfss	3,2
  7698     06C7  2EC9               	goto	u1941
  7699     06C8  2ECA               	goto	u1940
  7700     06C9                     u1941:
  7701     06C9  2ECD               	goto	l860
  7702     06CA                     u1940:
  7703     06CA                     l857:	
  7704                           ;sspa.c: 102:                 do { LATCbits.LATC6 = 1; } while(0);
  7705                           
  7706     06CA  0022               	movlb	2	; select bank2
  7707     06CB  170E               	bsf	14,6	;volatile
  7708     06CC  2EE4               	goto	l3878
  7709     06CD                     l860:	
  7710                           ;sspa.c: 104:                 do { LATCbits.LATC6 = 0; } while(0);
  7711                           
  7712     06CD  0022               	movlb	2	; select bank2
  7713     06CE  130E               	bcf	14,6	;volatile
  7714     06CF  2EE4               	goto	l3878
  7715     06D0                     l3876:
  7716     06D0  0875               	movf	SSPA_setMute@band,w
  7717     06D1  0020               	movlb	0	; select bank0
  7718     06D2  00A0               	movwf	??_SSPA_setMute
  7719     06D3  01A1               	clrf	??_SSPA_setMute+1
  7720                           
  7721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7722                           ; Switch size 1, requested type "simple"
  7723                           ; Number of cases is 1, Range of values is 0 to 0
  7724                           ; switch strategies available:
  7725                           ; Name         Instructions Cycles
  7726                           ; simple_byte            4     3 (average)
  7727                           ; direct_byte            8     6 (fixed)
  7728                           ; jumptable            260     6 (fixed)
  7729                           ;	Chosen strategy is simple_byte
  7730     06D4  0821               	movf	??_SSPA_setMute+1,w
  7731     06D5  3A00               	xorlw	0	; case 0
  7732     06D6  1903               	skipnz
  7733     06D7  2ED9               	goto	l4222
  7734     06D8  2EE4               	goto	l3878
  7735     06D9                     l4222:
  7736                           
  7737                           ; Switch size 1, requested type "simple"
  7738                           ; Number of cases is 3, Range of values is 0 to 2
  7739                           ; switch strategies available:
  7740                           ; Name         Instructions Cycles
  7741                           ; simple_byte           10     6 (average)
  7742                           ; direct_byte           12     6 (fixed)
  7743                           ; jumptable            260     6 (fixed)
  7744                           ;	Chosen strategy is simple_byte
  7745     06D9  0820               	movf	??_SSPA_setMute,w
  7746     06DA  3A00               	xorlw	0	; case 0
  7747     06DB  1903               	skipnz
  7748     06DC  2EE4               	goto	l3878
  7749     06DD  3A01               	xorlw	1	; case 1
  7750     06DE  1903               	skipnz
  7751     06DF  2EBA               	goto	l3870
  7752     06E0  3A03               	xorlw	3	; case 2
  7753     06E1  1903               	skipnz
  7754     06E2  2EC5               	goto	l3872
  7755     06E3  2EE4               	goto	l3878
  7756     06E4                     l3878:
  7757                           
  7758                           ;sspa.c: 112:     sspas[band].m_Mute = mute;
  7759     06E4  0875               	movf	SSPA_setMute@band,w
  7760     06E5  0020               	movlb	0	; select bank0
  7761     06E6  00A0               	movwf	??_SSPA_setMute
  7762     06E7  3002               	movlw	2
  7763     06E8                     u1955:
  7764     06E8  35A0               	lslf	??_SSPA_setMute,f
  7765     06E9  3EFF               	addlw	-1
  7766     06EA  1D03               	skipz
  7767     06EB  2EE8               	goto	u1955
  7768     06EC  3520               	lslf	??_SSPA_setMute,w
  7769     06ED  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7770     06EE  0086               	movwf	6
  7771     06EF  0187               	clrf	7
  7772     06F0  0874               	movf	SSPA_setMute@mute,w
  7773     06F1  0081               	movwf	1
  7774     06F2                     l864:
  7775     06F2  0008               	return
  7776     06F3                     __end_of_SSPA_setMute:
  7777                           
  7778                           	psect	text17
  7779     0602                     __ptext17:	
  7780 ;; *************** function _SSPA_getTemp *****************
  7781 ;; Defined at:
  7782 ;;		line 119 in file "sspa.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  band            1    wreg     enum E40
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  band            1   45[BANK0 ] enum E40
  7787 ;;  adc_value       2   42[BANK0 ] unsigned short 
  7788 ;;  channel         1   44[BANK0 ] enum E9257
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7798 ;;      Params:         0       0       0       0       0       0       0       0
  7799 ;;      Locals:         0       4       0       0       0       0       0       0
  7800 ;;      Temps:          0       2       0       0       0       0       0       0
  7801 ;;      Totals:         0       6       0       0       0       0       0       0
  7802 ;;Total ram usage:        6 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 9
  7805 ;; This function calls:
  7806 ;;		_ADC2Celsius
  7807 ;;		_getADCValue
  7808 ;; This function is called by:
  7809 ;;		_ProcessMsg
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813     0602                     _SSPA_getTemp:	
  7814                           ;psect for function _SSPA_getTemp
  7815                           
  7816                           
  7817                           ;incstack = 0
  7818                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7819                           ;SSPA_getTemp@band stored from wreg
  7820     0602  0020               	movlb	0	; select bank0
  7821     0603  00CD               	movwf	SSPA_getTemp@band
  7822     0604                     l3784:
  7823                           
  7824                           ;sspa.c: 120:     adc_channel_t channel;;sspa.c: 121:     adc_result_t adc_value;;sspa.c
      +                          : 123:     switch (band) {
  7825     0604  2E0B               	goto	l3792
  7826     0605                     l3786:
  7827                           
  7828                           ;sspa.c: 125:             channel = TM_Ka;
  7829     0605  3003               	movlw	3
  7830     0606  00CC               	movwf	SSPA_getTemp@channel
  7831                           
  7832                           ;sspa.c: 126:             break;
  7833     0607  2E1E               	goto	l3794
  7834     0608                     l3788:
  7835                           
  7836                           ;sspa.c: 128:             channel = TM_X;
  7837     0608  3007               	movlw	7
  7838     0609  00CC               	movwf	SSPA_getTemp@channel
  7839                           
  7840                           ;sspa.c: 129:             break;
  7841     060A  2E1E               	goto	l3794
  7842     060B                     l3792:
  7843     060B  084D               	movf	SSPA_getTemp@band,w
  7844     060C  00C8               	movwf	??_SSPA_getTemp
  7845     060D  01C9               	clrf	??_SSPA_getTemp+1
  7846                           
  7847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7848                           ; Switch size 1, requested type "simple"
  7849                           ; Number of cases is 1, Range of values is 0 to 0
  7850                           ; switch strategies available:
  7851                           ; Name         Instructions Cycles
  7852                           ; simple_byte            4     3 (average)
  7853                           ; direct_byte            8     6 (fixed)
  7854                           ; jumptable            260     6 (fixed)
  7855                           ;	Chosen strategy is simple_byte
  7856     060E  0849               	movf	??_SSPA_getTemp+1,w
  7857     060F  3A00               	xorlw	0	; case 0
  7858     0610  1903               	skipnz
  7859     0611  2E13               	goto	l4224
  7860     0612  2E1E               	goto	l3794
  7861     0613                     l4224:
  7862                           
  7863                           ; Switch size 1, requested type "simple"
  7864                           ; Number of cases is 3, Range of values is 0 to 2
  7865                           ; switch strategies available:
  7866                           ; Name         Instructions Cycles
  7867                           ; simple_byte           10     6 (average)
  7868                           ; direct_byte           12     6 (fixed)
  7869                           ; jumptable            260     6 (fixed)
  7870                           ;	Chosen strategy is simple_byte
  7871     0613  0848               	movf	??_SSPA_getTemp,w
  7872     0614  3A00               	xorlw	0	; case 0
  7873     0615  1903               	skipnz
  7874     0616  2E1E               	goto	l3794
  7875     0617  3A01               	xorlw	1	; case 1
  7876     0618  1903               	skipnz
  7877     0619  2E05               	goto	l3786
  7878     061A  3A03               	xorlw	3	; case 2
  7879     061B  1903               	skipnz
  7880     061C  2E08               	goto	l3788
  7881     061D  2E1E               	goto	l3794
  7882     061E                     l3794:
  7883                           
  7884                           ;sspa.c: 136:     adc_value = getADCValue(channel);
  7885     061E  084C               	movf	SSPA_getTemp@channel,w
  7886     061F  3183  23D5  3186   	fcall	_getADCValue
  7887     0622  0020               	movlb	0	; select bank0
  7888     0623  0821               	movf	?_getADCValue+1,w
  7889     0624  00CB               	movwf	SSPA_getTemp@adc_value+1
  7890     0625  0820               	movf	?_getADCValue,w
  7891     0626  00CA               	movwf	SSPA_getTemp@adc_value
  7892     0627                     l3796:
  7893                           
  7894                           ;sspa.c: 138:     sspas[band].m_wTemp = ADC2Celsius(adc_value);
  7895     0627  084B               	movf	SSPA_getTemp@adc_value+1,w
  7896     0628  00BB               	movwf	ADC2Celsius@v+1
  7897     0629  084A               	movf	SSPA_getTemp@adc_value,w
  7898     062A  00BA               	movwf	ADC2Celsius@v
  7899     062B  3184  2425  3186   	fcall	_ADC2Celsius
  7900     062E  0020               	movlb	0	; select bank0
  7901     062F  084D               	movf	SSPA_getTemp@band,w
  7902     0630  00C8               	movwf	??_SSPA_getTemp
  7903     0631  3002               	movlw	2
  7904     0632                     u1855:
  7905     0632  35C8               	lslf	??_SSPA_getTemp,f
  7906     0633  3EFF               	addlw	-1
  7907     0634  1D03               	skipz
  7908     0635  2E32               	goto	u1855
  7909     0636  3548               	lslf	??_SSPA_getTemp,w
  7910     0637  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7911     0638  0086               	movwf	6
  7912     0639  0187               	clrf	7
  7913     063A  083A               	movf	?_ADC2Celsius,w
  7914     063B  3FC0               	movwi [0]fsr1
  7915     063C  083B               	movf	?_ADC2Celsius+1,w
  7916     063D  3FC1               	movwi [1]fsr1
  7917     063E                     l873:
  7918     063E  0008               	return
  7919     063F                     __end_of_SSPA_getTemp:
  7920                           
  7921                           	psect	text18
  7922     0425                     __ptext18:	
  7923 ;; *************** function _ADC2Celsius *****************
  7924 ;; Defined at:
  7925 ;;		line 65 in file "sspa.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  v               2   26[BANK0 ] unsigned short 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  result          4   36[BANK0 ] long 
  7930 ;;  value           4   32[BANK0 ] long 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  2   26[BANK0 ] short 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, pclath, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7940 ;;      Params:         0       2       0       0       0       0       0       0
  7941 ;;      Locals:         0       8       0       0       0       0       0       0
  7942 ;;      Temps:          0       4       0       0       0       0       0       0
  7943 ;;      Totals:         0      14       0       0       0       0       0       0
  7944 ;;Total ram usage:       14 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 8
  7947 ;; This function calls:
  7948 ;;		___aldiv
  7949 ;;		___lmul
  7950 ;; This function is called by:
  7951 ;;		_SSPA_getTemp
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955     0425                     _ADC2Celsius:	
  7956                           ;psect for function _ADC2Celsius
  7957                           
  7958     0425                     l3760:	
  7959                           ;incstack = 0
  7960                           ; Regs used in _ADC2Celsius: [wreg+status,2+status,0+pclath+cstack]
  7961                           
  7962                           
  7963                           ;sspa.c: 66:     int32_t value = (int32_t) v;
  7964     0425  0020               	movlb	0	; select bank0
  7965     0426  083A               	movf	ADC2Celsius@v,w
  7966     0427  00C0               	movwf	ADC2Celsius@value
  7967     0428  083B               	movf	ADC2Celsius@v+1,w
  7968     0429  00C1               	movwf	ADC2Celsius@value+1
  7969     042A  01C2               	clrf	ADC2Celsius@value+2
  7970     042B  01C3               	clrf	ADC2Celsius@value+3
  7971     042C                     l3762:
  7972                           
  7973                           ;sspa.c: 67:     int32_t result = (int32_t)(160) - (value * (int32_t)(428)) / (int32_t)(
      +                          1024);
  7974     042C  3000               	movlw	0
  7975     042D  00AF               	movwf	___aldiv@divisor+3
  7976     042E  3000               	movlw	0
  7977     042F  00AE               	movwf	___aldiv@divisor+2
  7978     0430  3004               	movlw	4
  7979     0431  00AD               	movwf	___aldiv@divisor+1
  7980     0432  3000               	movlw	0
  7981     0433  00AC               	movwf	___aldiv@divisor
  7982     0434  0843               	movf	ADC2Celsius@value+3,w
  7983     0435  00A3               	movwf	___lmul@multiplier+3
  7984     0436  0842               	movf	ADC2Celsius@value+2,w
  7985     0437  00A2               	movwf	___lmul@multiplier+2
  7986     0438  0841               	movf	ADC2Celsius@value+1,w
  7987     0439  00A1               	movwf	___lmul@multiplier+1
  7988     043A  0840               	movf	ADC2Celsius@value,w
  7989     043B  00A0               	movwf	___lmul@multiplier
  7990     043C  3000               	movlw	0
  7991     043D  00A7               	movwf	___lmul@multiplicand+3
  7992     043E  3000               	movlw	0
  7993     043F  00A6               	movwf	___lmul@multiplicand+2
  7994     0440  3001               	movlw	1
  7995     0441  00A5               	movwf	___lmul@multiplicand+1
  7996     0442  30AC               	movlw	172
  7997     0443  00A4               	movwf	___lmul@multiplicand
  7998     0444  3187  272C  3184   	fcall	___lmul
  7999     0447  0020               	movlb	0	; select bank0
  8000     0448  0823               	movf	?___lmul+3,w
  8001     0449  00B3               	movwf	___aldiv@dividend+3
  8002     044A  0822               	movf	?___lmul+2,w
  8003     044B  00B2               	movwf	___aldiv@dividend+2
  8004     044C  0821               	movf	?___lmul+1,w
  8005     044D  00B1               	movwf	___aldiv@dividend+1
  8006     044E  0820               	movf	?___lmul,w
  8007     044F  00B0               	movwf	___aldiv@dividend
  8008     0450  3182  2264  3184   	fcall	___aldiv
  8009     0453  30A0               	movlw	160
  8010     0454  0020               	movlb	0	; select bank0
  8011     0455  00BC               	movwf	??_ADC2Celsius
  8012     0456  3000               	movlw	0
  8013     0457  00BD               	movwf	??_ADC2Celsius+1
  8014     0458  3000               	movlw	0
  8015     0459  00BE               	movwf	??_ADC2Celsius+2
  8016     045A  3000               	movlw	0
  8017     045B  00BF               	movwf	??_ADC2Celsius+3
  8018     045C  082C               	movf	?___aldiv,w
  8019     045D  02BC               	subwf	??_ADC2Celsius,f
  8020     045E  082D               	movf	?___aldiv+1,w
  8021     045F  3BBD               	subwfb	??_ADC2Celsius+1,f
  8022     0460  082E               	movf	?___aldiv+2,w
  8023     0461  3BBE               	subwfb	??_ADC2Celsius+2,f
  8024     0462  082F               	movf	?___aldiv+3,w
  8025     0463  3BBF               	subwfb	??_ADC2Celsius+3,f
  8026     0464  083F               	movf	??_ADC2Celsius+3,w
  8027     0465  00C7               	movwf	ADC2Celsius@result+3
  8028     0466  083E               	movf	??_ADC2Celsius+2,w
  8029     0467  00C6               	movwf	ADC2Celsius@result+2
  8030     0468  083D               	movf	??_ADC2Celsius+1,w
  8031     0469  00C5               	movwf	ADC2Celsius@result+1
  8032     046A  083C               	movf	??_ADC2Celsius,w
  8033     046B  00C4               	movwf	ADC2Celsius@result
  8034     046C                     l3764:
  8035                           
  8036                           ;sspa.c: 69:     return (int16_t) result;
  8037     046C  0845               	movf	ADC2Celsius@result+1,w
  8038     046D  00BB               	movwf	?_ADC2Celsius+1
  8039     046E  0844               	movf	ADC2Celsius@result,w
  8040     046F  00BA               	movwf	?_ADC2Celsius
  8041     0470                     l837:
  8042     0470  0008               	return
  8043     0471                     __end_of_ADC2Celsius:
  8044                           
  8045                           	psect	text19
  8046     02F4                     __ptext19:	
  8047 ;; *************** function _SSPA_getPOut *****************
  8048 ;; Defined at:
  8049 ;;		line 145 in file "sspa.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  band            1    wreg     enum E40
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  band            1   42[BANK0 ] enum E40
  8054 ;;  adc_value       2   40[BANK0 ] unsigned short 
  8055 ;;  channel         1    0        enum E9257
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8065 ;;      Params:         0       0       0       0       0       0       0       0
  8066 ;;      Locals:         0       3       0       0       0       0       0       0
  8067 ;;      Temps:          0       2       0       0       0       0       0       0
  8068 ;;      Totals:         0       5       0       0       0       0       0       0
  8069 ;;Total ram usage:        5 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 9
  8072 ;; This function calls:
  8073 ;;		_ADC2Amp
  8074 ;;		_ADC2dBm
  8075 ;;		_getADCValue
  8076 ;; This function is called by:
  8077 ;;		_ProcessMsg
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081     02F4                     _SSPA_getPOut:	
  8082                           ;psect for function _SSPA_getPOut
  8083                           
  8084                           
  8085                           ;incstack = 0
  8086                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8087                           ;SSPA_getPOut@band stored from wreg
  8088     02F4  0020               	movlb	0	; select bank0
  8089     02F5  00CA               	movwf	SSPA_getPOut@band
  8090     02F6                     l3808:
  8091                           
  8092                           ;sspa.c: 146:     adc_channel_t channel;;sspa.c: 147:     adc_result_t adc_value;;sspa.c
      +                          : 149:     switch (band) {
  8093     02F6  2B6A               	goto	l3830
  8094     02F7                     l877:	
  8095                           ;sspa.c: 150:         case ANTENNABAND_KA:
  8096                           
  8097     02F7                     l3810:
  8098                           
  8099                           ;sspa.c: 152:             adc_value = getADCValue(channel);
  8100     02F7  3001               	movlw	1
  8101     02F8  3183  23D5  3182   	fcall	_getADCValue
  8102     02FB  0020               	movlb	0	; select bank0
  8103     02FC  0821               	movf	?_getADCValue+1,w
  8104     02FD  00C9               	movwf	SSPA_getPOut@adc_value+1
  8105     02FE  0820               	movf	?_getADCValue,w
  8106     02FF  00C8               	movwf	SSPA_getPOut@adc_value
  8107     0300                     l3812:
  8108                           
  8109                           ;sspa.c: 153:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8110     0300  0849               	movf	SSPA_getPOut@adc_value+1,w
  8111     0301  00BB               	movwf	ADC2Amp@v+1
  8112     0302  0848               	movf	SSPA_getPOut@adc_value,w
  8113     0303  00BA               	movwf	ADC2Amp@v
  8114     0304  3185  2544  3182   	fcall	_ADC2Amp
  8115     0307  0020               	movlb	0	; select bank0
  8116     0308  084A               	movf	SSPA_getPOut@band,w
  8117     0309  00C6               	movwf	??_SSPA_getPOut
  8118     030A  3002               	movlw	2
  8119     030B                     u1865:
  8120     030B  35C6               	lslf	??_SSPA_getPOut,f
  8121     030C  3EFF               	addlw	-1
  8122     030D  1D03               	skipz
  8123     030E  2B0B               	goto	u1865
  8124     030F  3546               	lslf	??_SSPA_getPOut,w
  8125     0310  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8126     0311  0086               	movwf	6
  8127     0312  0187               	clrf	7
  8128     0313  083A               	movf	?_ADC2Amp,w
  8129     0314  3FC0               	movwi [0]fsr1
  8130     0315  083B               	movf	?_ADC2Amp+1,w
  8131     0316  3FC1               	movwi [1]fsr1
  8132     0317  083C               	movf	?_ADC2Amp+2,w
  8133     0318  3FC2               	movwi [2]fsr1
  8134     0319  083D               	movf	?_ADC2Amp+3,w
  8135     031A  3FC3               	movwi [3]fsr1
  8136     031B                     l3814:
  8137                           
  8138                           ;sspa.c: 154:             sspas[band].m_bPOut = 0xFF;
  8139     031B  084A               	movf	SSPA_getPOut@band,w
  8140     031C  00C6               	movwf	??_SSPA_getPOut
  8141     031D  3002               	movlw	2
  8142     031E                     u1875:
  8143     031E  35C6               	lslf	??_SSPA_getPOut,f
  8144     031F  3EFF               	addlw	-1
  8145     0320  1D03               	skipz
  8146     0321  2B1E               	goto	u1875
  8147     0322  3546               	lslf	??_SSPA_getPOut,w
  8148     0323  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8149     0324  0086               	movwf	6
  8150     0325  0187               	clrf	7
  8151     0326  30FF               	movlw	255
  8152     0327  0081               	movwf	1
  8153                           
  8154                           ;sspa.c: 155:             break;
  8155     0328  2B7D               	goto	l882
  8156     0329                     l3816:
  8157     0329                     l3818:
  8158                           
  8159                           ;sspa.c: 159:             adc_value = getADCValue(channel);
  8160     0329  300A               	movlw	10
  8161     032A  3183  23D5  3182   	fcall	_getADCValue
  8162     032D  0020               	movlb	0	; select bank0
  8163     032E  0821               	movf	?_getADCValue+1,w
  8164     032F  00C9               	movwf	SSPA_getPOut@adc_value+1
  8165     0330  0820               	movf	?_getADCValue,w
  8166     0331  00C8               	movwf	SSPA_getPOut@adc_value
  8167     0332                     l3820:
  8168                           
  8169                           ;sspa.c: 160:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8170     0332  0849               	movf	SSPA_getPOut@adc_value+1,w
  8171     0333  00BB               	movwf	ADC2Amp@v+1
  8172     0334  0848               	movf	SSPA_getPOut@adc_value,w
  8173     0335  00BA               	movwf	ADC2Amp@v
  8174     0336  3185  2544  3182   	fcall	_ADC2Amp
  8175     0339  0020               	movlb	0	; select bank0
  8176     033A  084A               	movf	SSPA_getPOut@band,w
  8177     033B  00C6               	movwf	??_SSPA_getPOut
  8178     033C  3002               	movlw	2
  8179     033D                     u1885:
  8180     033D  35C6               	lslf	??_SSPA_getPOut,f
  8181     033E  3EFF               	addlw	-1
  8182     033F  1D03               	skipz
  8183     0340  2B3D               	goto	u1885
  8184     0341  3546               	lslf	??_SSPA_getPOut,w
  8185     0342  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8186     0343  0086               	movwf	6
  8187     0344  0187               	clrf	7
  8188     0345  083A               	movf	?_ADC2Amp,w
  8189     0346  3FC0               	movwi [0]fsr1
  8190     0347  083B               	movf	?_ADC2Amp+1,w
  8191     0348  3FC1               	movwi [1]fsr1
  8192     0349  083C               	movf	?_ADC2Amp+2,w
  8193     034A  3FC2               	movwi [2]fsr1
  8194     034B  083D               	movf	?_ADC2Amp+3,w
  8195     034C  3FC3               	movwi [3]fsr1
  8196     034D                     l3822:
  8197     034D                     l3824:
  8198                           
  8199                           ;sspa.c: 162:             adc_value = getADCValue(channel);
  8200     034D  3000               	movlw	0
  8201     034E  3183  23D5  3182   	fcall	_getADCValue
  8202     0351  0020               	movlb	0	; select bank0
  8203     0352  0821               	movf	?_getADCValue+1,w
  8204     0353  00C9               	movwf	SSPA_getPOut@adc_value+1
  8205     0354  0820               	movf	?_getADCValue,w
  8206     0355  00C8               	movwf	SSPA_getPOut@adc_value
  8207     0356                     l3826:
  8208                           
  8209                           ;sspa.c: 163:             sspas[band].m_bPOut = (uint8_t) ADC2dBm(adc_value);
  8210     0356  084A               	movf	SSPA_getPOut@band,w
  8211     0357  00C6               	movwf	??_SSPA_getPOut
  8212     0358  3002               	movlw	2
  8213     0359                     u1895:
  8214     0359  35C6               	lslf	??_SSPA_getPOut,f
  8215     035A  3EFF               	addlw	-1
  8216     035B  1D03               	skipz
  8217     035C  2B59               	goto	u1895
  8218     035D  3546               	lslf	??_SSPA_getPOut,w
  8219     035E  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8220     035F  0086               	movwf	6
  8221     0360  0187               	clrf	7
  8222     0361  0849               	movf	SSPA_getPOut@adc_value+1,w
  8223     0362  00BB               	movwf	ADC2dBm@v+1
  8224     0363  0848               	movf	SSPA_getPOut@adc_value,w
  8225     0364  00BA               	movwf	ADC2dBm@v
  8226     0365  3186  263F  3182   	fcall	_ADC2dBm
  8227     0368  0081               	movwf	1
  8228                           
  8229                           ;sspa.c: 164:             break;
  8230     0369  2B7D               	goto	l882
  8231     036A                     l3830:
  8232     036A  084A               	movf	SSPA_getPOut@band,w
  8233     036B  00C6               	movwf	??_SSPA_getPOut
  8234     036C  01C7               	clrf	??_SSPA_getPOut+1
  8235                           
  8236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8237                           ; Switch size 1, requested type "simple"
  8238                           ; Number of cases is 1, Range of values is 0 to 0
  8239                           ; switch strategies available:
  8240                           ; Name         Instructions Cycles
  8241                           ; simple_byte            4     3 (average)
  8242                           ; direct_byte            8     6 (fixed)
  8243                           ; jumptable            260     6 (fixed)
  8244                           ;	Chosen strategy is simple_byte
  8245     036D  0847               	movf	??_SSPA_getPOut+1,w
  8246     036E  3A00               	xorlw	0	; case 0
  8247     036F  1903               	skipnz
  8248     0370  2B72               	goto	l4226
  8249     0371  2B7D               	goto	l882
  8250     0372                     l4226:
  8251                           
  8252                           ; Switch size 1, requested type "simple"
  8253                           ; Number of cases is 3, Range of values is 0 to 2
  8254                           ; switch strategies available:
  8255                           ; Name         Instructions Cycles
  8256                           ; simple_byte           10     6 (average)
  8257                           ; direct_byte           12     6 (fixed)
  8258                           ; jumptable            260     6 (fixed)
  8259                           ;	Chosen strategy is simple_byte
  8260     0372  0846               	movf	??_SSPA_getPOut,w
  8261     0373  3A00               	xorlw	0	; case 0
  8262     0374  1903               	skipnz
  8263     0375  2B7D               	goto	l882
  8264     0376  3A01               	xorlw	1	; case 1
  8265     0377  1903               	skipnz
  8266     0378  2AF7               	goto	l877
  8267     0379  3A03               	xorlw	3	; case 2
  8268     037A  1903               	skipnz
  8269     037B  2B29               	goto	l3816
  8270     037C  2B7D               	goto	l882
  8271     037D                     l882:
  8272     037D  0008               	return
  8273     037E                     __end_of_SSPA_getPOut:
  8274                           
  8275                           	psect	text20
  8276     03D5                     __ptext20:	
  8277 ;; *************** function _getADCValue *****************
  8278 ;; Defined at:
  8279 ;;		line 38 in file "sspa.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  channel         1    wreg     enum E9257
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  channel         1    4[BANK0 ] enum E9257
  8284 ;;  sample          2    5[BANK0 ] unsigned short 
  8285 ;;  i               1    9[BANK0 ] unsigned char 
  8286 ;;  sum             2    7[BANK0 ] unsigned short 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  2    0[BANK0 ] unsigned short 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0, pclath, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8296 ;;      Params:         0       2       0       0       0       0       0       0
  8297 ;;      Locals:         0       6       0       0       0       0       0       0
  8298 ;;      Temps:          0       2       0       0       0       0       0       0
  8299 ;;      Totals:         0      10       0       0       0       0       0       0
  8300 ;;Total ram usage:       10 bytes
  8301 ;; Hardware stack levels used: 1
  8302 ;; Hardware stack levels required when called: 8
  8303 ;; This function calls:
  8304 ;;		_ADC_GetConversionResult
  8305 ;;		_ADC_IsConversionDone
  8306 ;;		_ADC_SelectChannel
  8307 ;;		_ADC_StartConversion
  8308 ;; This function is called by:
  8309 ;;		_SSPA_getTemp
  8310 ;;		_SSPA_getPOut
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314     03D5                     _getADCValue:	
  8315                           ;psect for function _getADCValue
  8316                           
  8317                           
  8318                           ;incstack = 0
  8319                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8320                           ;getADCValue@channel stored from wreg
  8321     03D5  0020               	movlb	0	; select bank0
  8322     03D6  00A4               	movwf	getADCValue@channel
  8323     03D7                     l3734:
  8324                           
  8325                           ;sspa.c: 39:     adc_result_t sum = 0;
  8326     03D7  01A7               	clrf	getADCValue@sum
  8327     03D8  01A8               	clrf	getADCValue@sum+1
  8328     03D9                     l3736:
  8329                           
  8330                           ;sspa.c: 41:     ADC_SelectChannel(channel);
  8331     03D9  0824               	movf	getADCValue@channel,w
  8332     03DA  318D  25B1  3183   	fcall	_ADC_SelectChannel
  8333     03DD                     l3738:
  8334                           
  8335                           ;sspa.c: 43:     ADC_StartConversion();
  8336     03DD  318C  24DA  3183   	fcall	_ADC_StartConversion
  8337     03E0                     l3740:
  8338                           
  8339                           ;sspa.c: 45:     _delay((unsigned long)((2)*(16000000/4000.0)));
  8340     03E0  300B               	movlw	11
  8341     03E1  0020               	movlb	0	; select bank0
  8342     03E2  00A2               	movwf	??_getADCValue
  8343     03E3  3062               	movlw	98
  8344     03E4                     u2107:
  8345     03E4  0B89               	decfsz	9,f
  8346     03E5  2BE4               	goto	u2107
  8347     03E6  0BA2               	decfsz	??_getADCValue,f
  8348     03E7  2BE4               	goto	u2107
  8349     03E8  0000               	nop
  8350                           
  8351                           ;sspa.c: 47:     for (uint8_t i = 0; i < 32; )
  8352     03E9  0020               	movlb	0	; select bank0
  8353     03EA  01A9               	clrf	getADCValue@i
  8354     03EB                     l3746:
  8355                           
  8356                           ;sspa.c: 48:     {;sspa.c: 49:         adc_result_t sample;;sspa.c: 51:         if (ADC_
      +                          IsConversionDone())
  8357     03EB  318D  256A  3183   	fcall	_ADC_IsConversionDone
  8358     03EE  3A00               	xorlw	0
  8359     03EF  1903               	skipnz
  8360     03F0  2BF2               	goto	u1821
  8361     03F1  2BF3               	goto	u1820
  8362     03F2                     u1821:
  8363     03F2  2C10               	goto	l833
  8364     03F3                     u1820:
  8365     03F3                     l3748:
  8366                           
  8367                           ;sspa.c: 52:         {;sspa.c: 53:             i++;
  8368     03F3  3001               	movlw	1
  8369     03F4  0020               	movlb	0	; select bank0
  8370     03F5  00A2               	movwf	??_getADCValue
  8371     03F6  0822               	movf	??_getADCValue,w
  8372     03F7  07A9               	addwf	getADCValue@i,f
  8373     03F8                     l3750:
  8374                           
  8375                           ;sspa.c: 54:             sample = ADC_GetConversionResult();
  8376     03F8  318D  252F  3183   	fcall	_ADC_GetConversionResult
  8377     03FB  0875               	movf	?_ADC_GetConversionResult+1,w
  8378     03FC  0020               	movlb	0	; select bank0
  8379     03FD  00A6               	movwf	getADCValue@sample+1
  8380     03FE  0874               	movf	?_ADC_GetConversionResult,w
  8381     03FF  00A5               	movwf	getADCValue@sample
  8382     0400                     l3752:
  8383                           
  8384                           ;sspa.c: 55:             sum += sample;
  8385     0400  0825               	movf	getADCValue@sample,w
  8386     0401  07A7               	addwf	getADCValue@sum,f
  8387     0402  0826               	movf	getADCValue@sample+1,w
  8388     0403  3DA8               	addwfc	getADCValue@sum+1,f
  8389     0404                     l3754:
  8390                           
  8391                           ;sspa.c: 56:             ADC_StartConversion();
  8392     0404  318C  24DA  3183   	fcall	_ADC_StartConversion
  8393                           
  8394                           ;sspa.c: 58:             _delay((unsigned long)((2)*(16000000/4000.0)));
  8395     0407  300B               	movlw	11
  8396     0408  0020               	movlb	0	; select bank0
  8397     0409  00A2               	movwf	??_getADCValue
  8398     040A  3062               	movlw	98
  8399     040B                     u2117:
  8400     040B  0B89               	decfsz	9,f
  8401     040C  2C0B               	goto	u2117
  8402     040D  0BA2               	decfsz	??_getADCValue,f
  8403     040E  2C0B               	goto	u2117
  8404     040F  0000               	nop
  8405     0410                     l833:	
  8406                           ;sspa.c: 59:         }
  8407                           
  8408                           
  8409                           ;sspa.c: 60:     }
  8410     0410  3020               	movlw	32
  8411     0411  0020               	movlb	0	; select bank0
  8412     0412  0229               	subwf	getADCValue@i,w
  8413     0413  1C03               	skipc
  8414     0414  2C16               	goto	u1831
  8415     0415  2C17               	goto	u1830
  8416     0416                     u1831:
  8417     0416  2BEB               	goto	l3746
  8418     0417                     u1830:
  8419     0417                     l3756:
  8420                           
  8421                           ;sspa.c: 62:     return sum >> 5;
  8422     0417  0828               	movf	getADCValue@sum+1,w
  8423     0418  00A3               	movwf	??_getADCValue+1
  8424     0419  0827               	movf	getADCValue@sum,w
  8425     041A  00A2               	movwf	??_getADCValue
  8426     041B  3005               	movlw	5
  8427     041C                     u1845:
  8428     041C  36A3               	lsrf	??_getADCValue+1,f
  8429     041D  0CA2               	rrf	??_getADCValue,f
  8430     041E  0B89               	decfsz	9,f
  8431     041F  2C1C               	goto	u1845
  8432     0420  0822               	movf	??_getADCValue,w
  8433     0421  00A0               	movwf	?_getADCValue
  8434     0422  0823               	movf	??_getADCValue+1,w
  8435     0423  00A1               	movwf	?_getADCValue+1
  8436     0424                     l834:
  8437     0424  0008               	return
  8438     0425                     __end_of_getADCValue:
  8439                           
  8440                           	psect	text21
  8441     0CDA                     __ptext21:	
  8442 ;; *************** function _ADC_StartConversion *****************
  8443 ;; Defined at:
  8444 ;;		line 88 in file "mcc_generated_files/adc/src/adc.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		None
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8458 ;;      Params:         0       0       0       0       0       0       0       0
  8459 ;;      Locals:         0       0       0       0       0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0
  8461 ;;      Totals:         0       0       0       0       0       0       0       0
  8462 ;;Total ram usage:        0 bytes
  8463 ;; Hardware stack levels used: 1
  8464 ;; Hardware stack levels required when called: 7
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_getADCValue
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472     0CDA                     _ADC_StartConversion:	
  8473                           ;psect for function _ADC_StartConversion
  8474                           
  8475     0CDA                     l3546:	
  8476                           ;incstack = 0
  8477                           ; Regs used in _ADC_StartConversion: []
  8478                           
  8479                           
  8480                           ;mcc_generated_files/adc/src/adc.c: 91:     ADCON0bits.GO_nDONE = 1;
  8481     0CDA  0021               	movlb	1	; select bank1
  8482     0CDB  149D               	bsf	29,1	;volatile
  8483     0CDC                     l33:
  8484     0CDC  0008               	return
  8485     0CDD                     __end_of_ADC_StartConversion:
  8486                           
  8487                           	psect	text22
  8488     0DB1                     __ptext22:	
  8489 ;; *************** function _ADC_SelectChannel *****************
  8490 ;; Defined at:
  8491 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  channel         1    wreg     enum E9234
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  channel         1    5[COMMON] enum E9234
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8505 ;;      Params:         0       0       0       0       0       0       0       0
  8506 ;;      Locals:         1       0       0       0       0       0       0       0
  8507 ;;      Temps:          1       0       0       0       0       0       0       0
  8508 ;;      Totals:         2       0       0       0       0       0       0       0
  8509 ;;Total ram usage:        2 bytes
  8510 ;; Hardware stack levels used: 1
  8511 ;; Hardware stack levels required when called: 7
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_getADCValue
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519     0DB1                     _ADC_SelectChannel:	
  8520                           ;psect for function _ADC_SelectChannel
  8521                           
  8522                           
  8523                           ;incstack = 0
  8524                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8525                           ;ADC_SelectChannel@channel stored from wreg
  8526     0DB1  00F5               	movwf	ADC_SelectChannel@channel
  8527     0DB2                     l3544:
  8528                           
  8529                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
  8530     0DB2  0875               	movf	ADC_SelectChannel@channel,w
  8531     0DB3  00F4               	movwf	??_ADC_SelectChannel
  8532     0DB4  0DF4               	rlf	??_ADC_SelectChannel,f
  8533     0DB5  0DF4               	rlf	??_ADC_SelectChannel,f
  8534     0DB6  0021               	movlb	1	; select bank1
  8535     0DB7  081D               	movf	29,w	;volatile
  8536     0DB8  0674               	xorwf	??_ADC_SelectChannel,w
  8537     0DB9  3983               	andlw	-125
  8538     0DBA  0674               	xorwf	??_ADC_SelectChannel,w
  8539     0DBB  009D               	movwf	29	;volatile
  8540     0DBC                     l30:
  8541     0DBC  0008               	return
  8542     0DBD                     __end_of_ADC_SelectChannel:
  8543                           
  8544                           	psect	text23
  8545     0D6A                     __ptext23:	
  8546 ;; *************** function _ADC_IsConversionDone *****************
  8547 ;; Defined at:
  8548 ;;		line 94 in file "mcc_generated_files/adc/src/adc.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      _Bool 
  8555 ;; Registers used:
  8556 ;;		wreg, status,0
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8562 ;;      Params:         0       0       0       0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used: 1
  8568 ;; Hardware stack levels required when called: 7
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_getADCValue
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576     0D6A                     _ADC_IsConversionDone:	
  8577                           ;psect for function _ADC_IsConversionDone
  8578                           
  8579     0D6A                     l3548:	
  8580                           ;incstack = 0
  8581                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  8582                           
  8583                           
  8584                           ;mcc_generated_files/adc/src/adc.c: 97:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8585     0D6A  1003               	clrc
  8586     0D6B  0021               	movlb	1	; select bank1
  8587     0D6C  1C9D               	btfss	29,1	;volatile
  8588     0D6D  1403               	setc
  8589     0D6E  3000               	movlw	0
  8590     0D6F  3D09               	addwfc	9,w
  8591     0D70                     l36:
  8592     0D70  0008               	return
  8593     0D71                     __end_of_ADC_IsConversionDone:
  8594                           
  8595                           	psect	text24
  8596     0D2F                     __ptext24:	
  8597 ;; *************** function _ADC_GetConversionResult *****************
  8598 ;; Defined at:
  8599 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;		None
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;		None
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  2    4[COMMON] unsigned short 
  8606 ;; Registers used:
  8607 ;;		wreg
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8613 ;;      Params:         2       0       0       0       0       0       0       0
  8614 ;;      Locals:         0       0       0       0       0       0       0       0
  8615 ;;      Temps:          0       0       0       0       0       0       0       0
  8616 ;;      Totals:         2       0       0       0       0       0       0       0
  8617 ;;Total ram usage:        2 bytes
  8618 ;; Hardware stack levels used: 1
  8619 ;; Hardware stack levels required when called: 7
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		_getADCValue
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627     0D2F                     _ADC_GetConversionResult:	
  8628                           ;psect for function _ADC_GetConversionResult
  8629                           
  8630     0D2F                     l3552:	
  8631                           ;incstack = 0
  8632                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8633                           
  8634                           
  8635                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
  8636     0D2F  0021               	movlb	1	; select bank1
  8637     0D30  081C               	movf	28,w	;volatile
  8638     0D31  00F5               	movwf	?_ADC_GetConversionResult+1
  8639     0D32  081B               	movf	27,w	;volatile
  8640     0D33  00F4               	movwf	?_ADC_GetConversionResult
  8641     0D34                     l39:
  8642     0D34  0008               	return
  8643     0D35                     __end_of_ADC_GetConversionResult:
  8644                           
  8645                           	psect	text25
  8646     063F                     __ptext25:	
  8647 ;; *************** function _ADC2dBm *****************
  8648 ;; Defined at:
  8649 ;;		line 79 in file "sspa.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  v               2   26[BANK0 ] unsigned short 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  result          4   32[BANK0 ] long 
  8654 ;;  value           4   28[BANK0 ] long 
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      unsigned char 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, pclath, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8664 ;;      Params:         0       2       0       0       0       0       0       0
  8665 ;;      Locals:         0       8       0       0       0       0       0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0
  8667 ;;      Totals:         0      10       0       0       0       0       0       0
  8668 ;;Total ram usage:       10 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 8
  8671 ;; This function calls:
  8672 ;;		___aldiv
  8673 ;;		___lmul
  8674 ;; This function is called by:
  8675 ;;		_SSPA_getPOut
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679     063F                     _ADC2dBm:	
  8680                           ;psect for function _ADC2dBm
  8681                           
  8682     063F                     l3776:	
  8683                           ;incstack = 0
  8684                           ; Regs used in _ADC2dBm: [wreg+status,2+status,0+pclath+cstack]
  8685                           
  8686                           
  8687                           ;sspa.c: 80:     int32_t value = (int32_t) v;
  8688     063F  0020               	movlb	0	; select bank0
  8689     0640  083A               	movf	ADC2dBm@v,w
  8690     0641  00BC               	movwf	ADC2dBm@value
  8691     0642  083B               	movf	ADC2dBm@v+1,w
  8692     0643  00BD               	movwf	ADC2dBm@value+1
  8693     0644  01BE               	clrf	ADC2dBm@value+2
  8694     0645  01BF               	clrf	ADC2dBm@value+3
  8695     0646                     l3778:
  8696                           
  8697                           ;sspa.c: 81:     int32_t result = (uint16_t)(34) + (value * (uint16_t)(16650)) / (uint16
      +                          _t)(1024000);
  8698     0646  3000               	movlw	0
  8699     0647  00AF               	movwf	___aldiv@divisor+3
  8700     0648  3000               	movlw	0
  8701     0649  00AE               	movwf	___aldiv@divisor+2
  8702     064A  30A0               	movlw	160
  8703     064B  00AD               	movwf	___aldiv@divisor+1
  8704     064C  3000               	movlw	0
  8705     064D  00AC               	movwf	___aldiv@divisor
  8706     064E  083F               	movf	ADC2dBm@value+3,w
  8707     064F  00A3               	movwf	___lmul@multiplier+3
  8708     0650  083E               	movf	ADC2dBm@value+2,w
  8709     0651  00A2               	movwf	___lmul@multiplier+2
  8710     0652  083D               	movf	ADC2dBm@value+1,w
  8711     0653  00A1               	movwf	___lmul@multiplier+1
  8712     0654  083C               	movf	ADC2dBm@value,w
  8713     0655  00A0               	movwf	___lmul@multiplier
  8714     0656  3000               	movlw	0
  8715     0657  00A7               	movwf	___lmul@multiplicand+3
  8716     0658  3000               	movlw	0
  8717     0659  00A6               	movwf	___lmul@multiplicand+2
  8718     065A  3041               	movlw	65
  8719     065B  00A5               	movwf	___lmul@multiplicand+1
  8720     065C  300A               	movlw	10
  8721     065D  00A4               	movwf	___lmul@multiplicand
  8722     065E  3187  272C  3186   	fcall	___lmul
  8723     0661  0020               	movlb	0	; select bank0
  8724     0662  0823               	movf	?___lmul+3,w
  8725     0663  00B3               	movwf	___aldiv@dividend+3
  8726     0664  0822               	movf	?___lmul+2,w
  8727     0665  00B2               	movwf	___aldiv@dividend+2
  8728     0666  0821               	movf	?___lmul+1,w
  8729     0667  00B1               	movwf	___aldiv@dividend+1
  8730     0668  0820               	movf	?___lmul,w
  8731     0669  00B0               	movwf	___aldiv@dividend
  8732     066A  3182  2264  3186   	fcall	___aldiv
  8733     066D  3022               	movlw	34
  8734     066E  0020               	movlb	0	; select bank0
  8735     066F  072C               	addwf	?___aldiv,w
  8736     0670  00C0               	movwf	ADC2dBm@result
  8737     0671  3000               	movlw	0
  8738     0672  3D2D               	addwfc	?___aldiv+1,w
  8739     0673  00C1               	movwf	ADC2dBm@result+1
  8740     0674  3000               	movlw	0
  8741     0675  3D2E               	addwfc	?___aldiv+2,w
  8742     0676  00C2               	movwf	ADC2dBm@result+2
  8743     0677  3000               	movlw	0
  8744     0678  3D2F               	addwfc	?___aldiv+3,w
  8745     0679  00C3               	movwf	ADC2dBm@result+3
  8746     067A                     l3780:
  8747                           
  8748                           ;sspa.c: 83:     return (uint8_t) result;
  8749     067A  0840               	movf	ADC2dBm@result,w
  8750     067B                     l843:
  8751     067B  0008               	return
  8752     067C                     __end_of_ADC2dBm:
  8753                           
  8754                           	psect	text26
  8755     0544                     __ptext26:	
  8756 ;; *************** function _ADC2Amp *****************
  8757 ;; Defined at:
  8758 ;;		line 72 in file "sspa.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  v               2   26[BANK0 ] unsigned short 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  result          4   34[BANK0 ] long 
  8763 ;;  value           4   30[BANK0 ] long 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  4   26[BANK0 ] unsigned long 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0, pclath, cstack
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8773 ;;      Params:         0       4       0       0       0       0       0       0
  8774 ;;      Locals:         0       8       0       0       0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0
  8776 ;;      Totals:         0      12       0       0       0       0       0       0
  8777 ;;Total ram usage:       12 bytes
  8778 ;; Hardware stack levels used: 1
  8779 ;; Hardware stack levels required when called: 8
  8780 ;; This function calls:
  8781 ;;		___aldiv
  8782 ;;		___lmul
  8783 ;; This function is called by:
  8784 ;;		_SSPA_getPOut
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788     0544                     _ADC2Amp:	
  8789                           ;psect for function _ADC2Amp
  8790                           
  8791     0544                     l3768:	
  8792                           ;incstack = 0
  8793                           ; Regs used in _ADC2Amp: [wreg+status,2+status,0+pclath+cstack]
  8794                           
  8795                           
  8796                           ;sspa.c: 73:     int32_t value = (int32_t) v;
  8797     0544  0020               	movlb	0	; select bank0
  8798     0545  083A               	movf	ADC2Amp@v,w
  8799     0546  00BE               	movwf	ADC2Amp@value
  8800     0547  083B               	movf	ADC2Amp@v+1,w
  8801     0548  00BF               	movwf	ADC2Amp@value+1
  8802     0549  01C0               	clrf	ADC2Amp@value+2
  8803     054A  01C1               	clrf	ADC2Amp@value+3
  8804     054B                     l3770:
  8805                           
  8806                           ;sspa.c: 74:     int32_t result = (uint16_t)(0) + (value * (uint16_t)(500)) / (uint16_t)
      +                          (10240);
  8807     054B  3000               	movlw	0
  8808     054C  00AF               	movwf	___aldiv@divisor+3
  8809     054D  3000               	movlw	0
  8810     054E  00AE               	movwf	___aldiv@divisor+2
  8811     054F  3028               	movlw	40
  8812     0550  00AD               	movwf	___aldiv@divisor+1
  8813     0551  3000               	movlw	0
  8814     0552  00AC               	movwf	___aldiv@divisor
  8815     0553  0841               	movf	ADC2Amp@value+3,w
  8816     0554  00A3               	movwf	___lmul@multiplier+3
  8817     0555  0840               	movf	ADC2Amp@value+2,w
  8818     0556  00A2               	movwf	___lmul@multiplier+2
  8819     0557  083F               	movf	ADC2Amp@value+1,w
  8820     0558  00A1               	movwf	___lmul@multiplier+1
  8821     0559  083E               	movf	ADC2Amp@value,w
  8822     055A  00A0               	movwf	___lmul@multiplier
  8823     055B  3000               	movlw	0
  8824     055C  00A7               	movwf	___lmul@multiplicand+3
  8825     055D  3000               	movlw	0
  8826     055E  00A6               	movwf	___lmul@multiplicand+2
  8827     055F  3001               	movlw	1
  8828     0560  00A5               	movwf	___lmul@multiplicand+1
  8829     0561  30F4               	movlw	244
  8830     0562  00A4               	movwf	___lmul@multiplicand
  8831     0563  3187  272C  3185   	fcall	___lmul
  8832     0566  0020               	movlb	0	; select bank0
  8833     0567  0823               	movf	?___lmul+3,w
  8834     0568  00B3               	movwf	___aldiv@dividend+3
  8835     0569  0822               	movf	?___lmul+2,w
  8836     056A  00B2               	movwf	___aldiv@dividend+2
  8837     056B  0821               	movf	?___lmul+1,w
  8838     056C  00B1               	movwf	___aldiv@dividend+1
  8839     056D  0820               	movf	?___lmul,w
  8840     056E  00B0               	movwf	___aldiv@dividend
  8841     056F  3182  2264  3185   	fcall	___aldiv
  8842     0572  0020               	movlb	0	; select bank0
  8843     0573  082F               	movf	?___aldiv+3,w
  8844     0574  00C5               	movwf	ADC2Amp@result+3
  8845     0575  082E               	movf	?___aldiv+2,w
  8846     0576  00C4               	movwf	ADC2Amp@result+2
  8847     0577  082D               	movf	?___aldiv+1,w
  8848     0578  00C3               	movwf	ADC2Amp@result+1
  8849     0579  082C               	movf	?___aldiv,w
  8850     057A  00C2               	movwf	ADC2Amp@result
  8851     057B                     l3772:
  8852                           
  8853                           ;sspa.c: 76:     return (uint32_t) result;
  8854     057B  0845               	movf	ADC2Amp@result+3,w
  8855     057C  00BD               	movwf	?_ADC2Amp+3
  8856     057D  0844               	movf	ADC2Amp@result+2,w
  8857     057E  00BC               	movwf	?_ADC2Amp+2
  8858     057F  0843               	movf	ADC2Amp@result+1,w
  8859     0580  00BB               	movwf	?_ADC2Amp+1
  8860     0581  0842               	movf	ADC2Amp@result,w
  8861     0582  00BA               	movwf	?_ADC2Amp
  8862     0583                     l840:
  8863     0583  0008               	return
  8864     0584                     __end_of_ADC2Amp:
  8865                           
  8866                           	psect	text27
  8867     072C                     __ptext27:	
  8868 ;; *************** function ___lmul *****************
  8869 ;; Defined at:
  8870 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8873 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  product         4    8[BANK0 ] unsigned long 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  4    0[BANK0 ] unsigned long 
  8878 ;; Registers used:
  8879 ;;		wreg, status,2, status,0
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8885 ;;      Params:         0       8       0       0       0       0       0       0
  8886 ;;      Locals:         0       4       0       0       0       0       0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0
  8888 ;;      Totals:         0      12       0       0       0       0       0       0
  8889 ;;Total ram usage:       12 bytes
  8890 ;; Hardware stack levels used: 1
  8891 ;; Hardware stack levels required when called: 7
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_ADC2Celsius
  8896 ;;		_ADC2Amp
  8897 ;;		_ADC2dBm
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901     072C                     ___lmul:	
  8902                           ;psect for function ___lmul
  8903                           
  8904     072C                     l3582:	
  8905                           ;incstack = 0
  8906                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8907                           
  8908     072C  3000               	movlw	0
  8909     072D  0020               	movlb	0	; select bank0
  8910     072E  00AB               	movwf	___lmul@product+3
  8911     072F  3000               	movlw	0
  8912     0730  00AA               	movwf	___lmul@product+2
  8913     0731  3000               	movlw	0
  8914     0732  00A9               	movwf	___lmul@product+1
  8915     0733  3000               	movlw	0
  8916     0734  00A8               	movwf	___lmul@product
  8917     0735                     l3584:
  8918     0735  1C20               	btfss	___lmul@multiplier,0
  8919     0736  2F38               	goto	u1581
  8920     0737  2F39               	goto	u1580
  8921     0738                     u1581:
  8922     0738  2F41               	goto	l3588
  8923     0739                     u1580:
  8924     0739                     l3586:
  8925     0739  0824               	movf	___lmul@multiplicand,w
  8926     073A  07A8               	addwf	___lmul@product,f
  8927     073B  0825               	movf	___lmul@multiplicand+1,w
  8928     073C  3DA9               	addwfc	___lmul@product+1,f
  8929     073D  0826               	movf	___lmul@multiplicand+2,w
  8930     073E  3DAA               	addwfc	___lmul@product+2,f
  8931     073F  0827               	movf	___lmul@multiplicand+3,w
  8932     0740  3DAB               	addwfc	___lmul@product+3,f
  8933     0741                     l3588:
  8934     0741  3001               	movlw	1
  8935     0742                     u1595:
  8936     0742  35A4               	lslf	___lmul@multiplicand,f
  8937     0743  0DA5               	rlf	___lmul@multiplicand+1,f
  8938     0744  0DA6               	rlf	___lmul@multiplicand+2,f
  8939     0745  0DA7               	rlf	___lmul@multiplicand+3,f
  8940     0746  0B89               	decfsz	9,f
  8941     0747  2F42               	goto	u1595
  8942     0748                     l3590:
  8943     0748  3001               	movlw	1
  8944     0749                     u1605:
  8945     0749  36A3               	lsrf	___lmul@multiplier+3,f
  8946     074A  0CA2               	rrf	___lmul@multiplier+2,f
  8947     074B  0CA1               	rrf	___lmul@multiplier+1,f
  8948     074C  0CA0               	rrf	___lmul@multiplier,f
  8949     074D  0B89               	decfsz	9,f
  8950     074E  2F49               	goto	u1605
  8951     074F  0823               	movf	___lmul@multiplier+3,w
  8952     0750  0422               	iorwf	___lmul@multiplier+2,w
  8953     0751  0421               	iorwf	___lmul@multiplier+1,w
  8954     0752  0420               	iorwf	___lmul@multiplier,w
  8955     0753  1D03               	skipz
  8956     0754  2F56               	goto	u1611
  8957     0755  2F57               	goto	u1610
  8958     0756                     u1611:
  8959     0756  2F35               	goto	l3584
  8960     0757                     u1610:
  8961     0757                     l3592:
  8962     0757  082B               	movf	___lmul@product+3,w
  8963     0758  00A3               	movwf	?___lmul+3
  8964     0759  082A               	movf	___lmul@product+2,w
  8965     075A  00A2               	movwf	?___lmul+2
  8966     075B  0829               	movf	___lmul@product+1,w
  8967     075C  00A1               	movwf	?___lmul+1
  8968     075D  0828               	movf	___lmul@product,w
  8969     075E  00A0               	movwf	?___lmul
  8970     075F                     l964:
  8971     075F  0008               	return
  8972     0760                     __end_of___lmul:
  8973                           
  8974                           	psect	text28
  8975     0264                     __ptext28:	
  8976 ;; *************** function ___aldiv *****************
  8977 ;; Defined at:
  8978 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  divisor         4   12[BANK0 ] long 
  8981 ;;  dividend        4   16[BANK0 ] long 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  quotient        4   22[BANK0 ] long 
  8984 ;;  sign            1   21[BANK0 ] unsigned char 
  8985 ;;  counter         1   20[BANK0 ] unsigned char 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  4   12[BANK0 ] long 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8995 ;;      Params:         0       8       0       0       0       0       0       0
  8996 ;;      Locals:         0       6       0       0       0       0       0       0
  8997 ;;      Temps:          1       0       0       0       0       0       0       0
  8998 ;;      Totals:         1      14       0       0       0       0       0       0
  8999 ;;Total ram usage:       15 bytes
  9000 ;; Hardware stack levels used: 1
  9001 ;; Hardware stack levels required when called: 7
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_ADC2Celsius
  9006 ;;		_ADC2Amp
  9007 ;;		_ADC2dBm
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011     0264                     ___aldiv:	
  9012                           ;psect for function ___aldiv
  9013                           
  9014     0264                     l3596:	
  9015                           ;incstack = 0
  9016                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9017                           
  9018     0264  0020               	movlb	0	; select bank0
  9019     0265  01B5               	clrf	___aldiv@sign
  9020     0266                     l3598:
  9021     0266  1FAF               	btfss	___aldiv@divisor+3,7
  9022     0267  2A69               	goto	u1621
  9023     0268  2A6A               	goto	u1620
  9024     0269                     u1621:
  9025     0269  2A77               	goto	l1015
  9026     026A                     u1620:
  9027     026A                     l3600:
  9028     026A  09AC               	comf	___aldiv@divisor,f
  9029     026B  09AD               	comf	___aldiv@divisor+1,f
  9030     026C  09AE               	comf	___aldiv@divisor+2,f
  9031     026D  09AF               	comf	___aldiv@divisor+3,f
  9032     026E  0AAC               	incf	___aldiv@divisor,f
  9033     026F  1903               	skipnz
  9034     0270  0AAD               	incf	___aldiv@divisor+1,f
  9035     0271  1903               	skipnz
  9036     0272  0AAE               	incf	___aldiv@divisor+2,f
  9037     0273  1903               	skipnz
  9038     0274  0AAF               	incf	___aldiv@divisor+3,f
  9039     0275  01B5               	clrf	___aldiv@sign
  9040     0276  0AB5               	incf	___aldiv@sign,f
  9041     0277                     l1015:
  9042     0277  1FB3               	btfss	___aldiv@dividend+3,7
  9043     0278  2A7A               	goto	u1631
  9044     0279  2A7B               	goto	u1630
  9045     027A                     u1631:
  9046     027A  2A8A               	goto	l3606
  9047     027B                     u1630:
  9048     027B                     l3602:
  9049     027B  09B0               	comf	___aldiv@dividend,f
  9050     027C  09B1               	comf	___aldiv@dividend+1,f
  9051     027D  09B2               	comf	___aldiv@dividend+2,f
  9052     027E  09B3               	comf	___aldiv@dividend+3,f
  9053     027F  0AB0               	incf	___aldiv@dividend,f
  9054     0280  1903               	skipnz
  9055     0281  0AB1               	incf	___aldiv@dividend+1,f
  9056     0282  1903               	skipnz
  9057     0283  0AB2               	incf	___aldiv@dividend+2,f
  9058     0284  1903               	skipnz
  9059     0285  0AB3               	incf	___aldiv@dividend+3,f
  9060     0286                     l3604:
  9061     0286  3001               	movlw	1
  9062     0287  00F4               	movwf	??___aldiv
  9063     0288  0874               	movf	??___aldiv,w
  9064     0289  06B5               	xorwf	___aldiv@sign,f
  9065     028A                     l3606:
  9066     028A  3000               	movlw	0
  9067     028B  00B9               	movwf	___aldiv@quotient+3
  9068     028C  3000               	movlw	0
  9069     028D  00B8               	movwf	___aldiv@quotient+2
  9070     028E  3000               	movlw	0
  9071     028F  00B7               	movwf	___aldiv@quotient+1
  9072     0290  3000               	movlw	0
  9073     0291  00B6               	movwf	___aldiv@quotient
  9074     0292                     l3608:
  9075     0292  082F               	movf	___aldiv@divisor+3,w
  9076     0293  042E               	iorwf	___aldiv@divisor+2,w
  9077     0294  042D               	iorwf	___aldiv@divisor+1,w
  9078     0295  042C               	iorwf	___aldiv@divisor,w
  9079     0296  1903               	skipnz
  9080     0297  2A99               	goto	u1641
  9081     0298  2A9A               	goto	u1640
  9082     0299                     u1641:
  9083     0299  2ADB               	goto	l3628
  9084     029A                     u1640:
  9085     029A                     l3610:
  9086     029A  01B4               	clrf	___aldiv@counter
  9087     029B  0AB4               	incf	___aldiv@counter,f
  9088     029C  2AA8               	goto	l3614
  9089     029D                     l3612:
  9090     029D  3001               	movlw	1
  9091     029E                     u1655:
  9092     029E  35AC               	lslf	___aldiv@divisor,f
  9093     029F  0DAD               	rlf	___aldiv@divisor+1,f
  9094     02A0  0DAE               	rlf	___aldiv@divisor+2,f
  9095     02A1  0DAF               	rlf	___aldiv@divisor+3,f
  9096     02A2  0B89               	decfsz	9,f
  9097     02A3  2A9E               	goto	u1655
  9098     02A4  3001               	movlw	1
  9099     02A5  00F4               	movwf	??___aldiv
  9100     02A6  0874               	movf	??___aldiv,w
  9101     02A7  07B4               	addwf	___aldiv@counter,f
  9102     02A8                     l3614:
  9103     02A8  1FAF               	btfss	___aldiv@divisor+3,7
  9104     02A9  2AAB               	goto	u1661
  9105     02AA  2AAC               	goto	u1660
  9106     02AB                     u1661:
  9107     02AB  2A9D               	goto	l3612
  9108     02AC                     u1660:
  9109     02AC                     l3616:
  9110     02AC  3001               	movlw	1
  9111     02AD                     u1675:
  9112     02AD  35B6               	lslf	___aldiv@quotient,f
  9113     02AE  0DB7               	rlf	___aldiv@quotient+1,f
  9114     02AF  0DB8               	rlf	___aldiv@quotient+2,f
  9115     02B0  0DB9               	rlf	___aldiv@quotient+3,f
  9116     02B1  0B89               	decfsz	9,f
  9117     02B2  2AAD               	goto	u1675
  9118     02B3                     l3618:
  9119     02B3  082F               	movf	___aldiv@divisor+3,w
  9120     02B4  0233               	subwf	___aldiv@dividend+3,w
  9121     02B5  1D03               	skipz
  9122     02B6  2AC1               	goto	u1685
  9123     02B7  082E               	movf	___aldiv@divisor+2,w
  9124     02B8  0232               	subwf	___aldiv@dividend+2,w
  9125     02B9  1D03               	skipz
  9126     02BA  2AC1               	goto	u1685
  9127     02BB  082D               	movf	___aldiv@divisor+1,w
  9128     02BC  0231               	subwf	___aldiv@dividend+1,w
  9129     02BD  1D03               	skipz
  9130     02BE  2AC1               	goto	u1685
  9131     02BF  082C               	movf	___aldiv@divisor,w
  9132     02C0  0230               	subwf	___aldiv@dividend,w
  9133     02C1                     u1685:
  9134     02C1  1C03               	skipc
  9135     02C2  2AC4               	goto	u1681
  9136     02C3  2AC5               	goto	u1680
  9137     02C4                     u1681:
  9138     02C4  2ACE               	goto	l3624
  9139     02C5                     u1680:
  9140     02C5                     l3620:
  9141     02C5  082C               	movf	___aldiv@divisor,w
  9142     02C6  02B0               	subwf	___aldiv@dividend,f
  9143     02C7  082D               	movf	___aldiv@divisor+1,w
  9144     02C8  3BB1               	subwfb	___aldiv@dividend+1,f
  9145     02C9  082E               	movf	___aldiv@divisor+2,w
  9146     02CA  3BB2               	subwfb	___aldiv@dividend+2,f
  9147     02CB  082F               	movf	___aldiv@divisor+3,w
  9148     02CC  3BB3               	subwfb	___aldiv@dividend+3,f
  9149     02CD                     l3622:
  9150     02CD  1436               	bsf	___aldiv@quotient,0
  9151     02CE                     l3624:
  9152     02CE  3001               	movlw	1
  9153     02CF                     u1695:
  9154     02CF  36AF               	lsrf	___aldiv@divisor+3,f
  9155     02D0  0CAE               	rrf	___aldiv@divisor+2,f
  9156     02D1  0CAD               	rrf	___aldiv@divisor+1,f
  9157     02D2  0CAC               	rrf	___aldiv@divisor,f
  9158     02D3  0B89               	decfsz	9,f
  9159     02D4  2ACF               	goto	u1695
  9160     02D5                     l3626:
  9161     02D5  3001               	movlw	1
  9162     02D6  02B4               	subwf	___aldiv@counter,f
  9163     02D7  1D03               	btfss	3,2
  9164     02D8  2ADA               	goto	u1701
  9165     02D9  2ADB               	goto	u1700
  9166     02DA                     u1701:
  9167     02DA  2AAC               	goto	l3616
  9168     02DB                     u1700:
  9169     02DB                     l3628:
  9170     02DB  0835               	movf	___aldiv@sign,w
  9171     02DC  1903               	btfsc	3,2
  9172     02DD  2ADF               	goto	u1711
  9173     02DE  2AE0               	goto	u1710
  9174     02DF                     u1711:
  9175     02DF  2AEB               	goto	l3632
  9176     02E0                     u1710:
  9177     02E0                     l3630:
  9178     02E0  09B6               	comf	___aldiv@quotient,f
  9179     02E1  09B7               	comf	___aldiv@quotient+1,f
  9180     02E2  09B8               	comf	___aldiv@quotient+2,f
  9181     02E3  09B9               	comf	___aldiv@quotient+3,f
  9182     02E4  0AB6               	incf	___aldiv@quotient,f
  9183     02E5  1903               	skipnz
  9184     02E6  0AB7               	incf	___aldiv@quotient+1,f
  9185     02E7  1903               	skipnz
  9186     02E8  0AB8               	incf	___aldiv@quotient+2,f
  9187     02E9  1903               	skipnz
  9188     02EA  0AB9               	incf	___aldiv@quotient+3,f
  9189     02EB                     l3632:
  9190     02EB  0839               	movf	___aldiv@quotient+3,w
  9191     02EC  00AF               	movwf	?___aldiv+3
  9192     02ED  0838               	movf	___aldiv@quotient+2,w
  9193     02EE  00AE               	movwf	?___aldiv+2
  9194     02EF  0837               	movf	___aldiv@quotient+1,w
  9195     02F0  00AD               	movwf	?___aldiv+1
  9196     02F1  0836               	movf	___aldiv@quotient,w
  9197     02F2  00AC               	movwf	?___aldiv
  9198     02F3                     l1025:
  9199     02F3  0008               	return
  9200     02F4                     __end_of___aldiv:
  9201                           
  9202                           	psect	text29
  9203     0F2C                     __ptext29:	
  9204 ;; *************** function _KAPS_setRelPos *****************
  9205 ;; Defined at:
  9206 ;;		line 51 in file "kaps.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  offset          1    wreg     char 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;  offset          1    7[BANK0 ] char 
  9211 ;;  value           1    9[BANK0 ] unsigned char 
  9212 ;;  reg             1    8[BANK0 ] unsigned char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		wreg, status,2, status,0, pclath, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9222 ;;      Params:         0       0       0       0       0       0       0       0
  9223 ;;      Locals:         0       3       0       0       0       0       0       0
  9224 ;;      Temps:          0       2       0       0       0       0       0       0
  9225 ;;      Totals:         0       5       0       0       0       0       0       0
  9226 ;;Total ram usage:        5 bytes
  9227 ;; Hardware stack levels used: 1
  9228 ;; Hardware stack levels required when called: 10
  9229 ;; This function calls:
  9230 ;;		_I2C1_Write
  9231 ;; This function is called by:
  9232 ;;		_ProcessMsg
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236     0F2C                     _KAPS_setRelPos:	
  9237                           ;psect for function _KAPS_setRelPos
  9238                           
  9239                           
  9240                           ;incstack = 0
  9241                           ; Regs used in _KAPS_setRelPos: [wreg+status,2+status,0+pclath+cstack]
  9242                           ;KAPS_setRelPos@offset stored from wreg
  9243     0F2C  0020               	movlb	0	; select bank0
  9244     0F2D  00A7               	movwf	KAPS_setRelPos@offset
  9245     0F2E                     l3900:
  9246                           
  9247                           ;kaps.c: 52:     uint8_t reg = 0x02;
  9248     0F2E  3002               	movlw	2
  9249     0F2F  00A8               	movwf	KAPS_setRelPos@reg
  9250                           
  9251                           ;kaps.c: 53:     uint8_t value = (uint8_t)offset;
  9252     0F30  0827               	movf	KAPS_setRelPos@offset,w
  9253     0F31  00A9               	movwf	KAPS_setRelPos@value
  9254     0F32                     l3902:
  9255                           
  9256                           ;kaps.c: 55:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9257     0F32  0864               	movf	_kaps,w
  9258     0F33  00A5               	movwf	??_KAPS_setRelPos
  9259     0F34  01A6               	clrf	??_KAPS_setRelPos+1
  9260     0F35  0825               	movf	??_KAPS_setRelPos,w
  9261     0F36  00A0               	movwf	I2C1_Write@address
  9262     0F37  0826               	movf	??_KAPS_setRelPos+1,w
  9263     0F38  00A1               	movwf	I2C1_Write@address+1
  9264     0F39  3028               	movlw	(low (KAPS_setRelPos@reg| 0))& (0+255)
  9265     0F3A  00A2               	movwf	I2C1_Write@data
  9266     0F3B  3001               	movlw	1
  9267     0F3C  00A3               	movwf	I2C1_Write@dataLength
  9268     0F3D  3000               	movlw	0
  9269     0F3E  00A4               	movwf	I2C1_Write@dataLength+1
  9270     0F3F  318E  26A4  318F   	fcall	_I2C1_Write
  9271     0F42                     l3904:
  9272                           
  9273                           ;kaps.c: 56:     I2C1_Write(kaps.m_bAddr, &value, 1);
  9274     0F42  0020               	movlb	0	; select bank0
  9275     0F43  0864               	movf	_kaps,w
  9276     0F44  00A5               	movwf	??_KAPS_setRelPos
  9277     0F45  01A6               	clrf	??_KAPS_setRelPos+1
  9278     0F46  0825               	movf	??_KAPS_setRelPos,w
  9279     0F47  00A0               	movwf	I2C1_Write@address
  9280     0F48  0826               	movf	??_KAPS_setRelPos+1,w
  9281     0F49  00A1               	movwf	I2C1_Write@address+1
  9282     0F4A  3029               	movlw	(low (KAPS_setRelPos@value| 0))& (0+255)
  9283     0F4B  00A2               	movwf	I2C1_Write@data
  9284     0F4C  3001               	movlw	1
  9285     0F4D  00A3               	movwf	I2C1_Write@dataLength
  9286     0F4E  3000               	movlw	0
  9287     0F4F  00A4               	movwf	I2C1_Write@dataLength+1
  9288     0F50  318E  26A4  318F   	fcall	_I2C1_Write
  9289     0F53                     l722:
  9290     0F53  0008               	return
  9291     0F54                     __end_of_KAPS_setRelPos:
  9292                           
  9293                           	psect	text30
  9294     0760                     __ptext30:	
  9295 ;; *************** function _KAPS_setAbsPos *****************
  9296 ;; Defined at:
  9297 ;;		line 36 in file "kaps.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  pos             4   13[BANK0 ] unsigned long 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;  data            4   19[BANK0 ] unsigned char [4]
  9302 ;;  reg             1   23[BANK0 ] unsigned char 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9312 ;;      Params:         0       4       0       0       0       0       0       0
  9313 ;;      Locals:         0       5       0       0       0       0       0       0
  9314 ;;      Temps:          0       2       0       0       0       0       0       0
  9315 ;;      Totals:         0      11       0       0       0       0       0       0
  9316 ;;Total ram usage:       11 bytes
  9317 ;; Hardware stack levels used: 1
  9318 ;; Hardware stack levels required when called: 10
  9319 ;; This function calls:
  9320 ;;		_I2C1_Write
  9321 ;;		_unpackLong
  9322 ;; This function is called by:
  9323 ;;		_ProcessMsg
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327     0760                     _KAPS_setAbsPos:	
  9328                           ;psect for function _KAPS_setAbsPos
  9329                           
  9330     0760                     l3892:	
  9331                           ;incstack = 0
  9332                           ; Regs used in _KAPS_setAbsPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9333                           
  9334                           
  9335                           ;kaps.c: 37:     uint8_t reg = 0x01;
  9336     0760  0020               	movlb	0	; select bank0
  9337     0761  01B7               	clrf	KAPS_setAbsPos@reg
  9338     0762  0AB7               	incf	KAPS_setAbsPos@reg,f
  9339     0763                     l3894:
  9340                           
  9341                           ;kaps.c: 38:     uint8_t data[4];;kaps.c: 40:     unpackLong(pos, data);
  9342     0763  0830               	movf	KAPS_setAbsPos@pos+3,w
  9343     0764  00A3               	movwf	unpackLong@value+3
  9344     0765  082F               	movf	KAPS_setAbsPos@pos+2,w
  9345     0766  00A2               	movwf	unpackLong@value+2
  9346     0767  082E               	movf	KAPS_setAbsPos@pos+1,w
  9347     0768  00A1               	movwf	unpackLong@value+1
  9348     0769  082D               	movf	KAPS_setAbsPos@pos,w
  9349     076A  00A0               	movwf	unpackLong@value
  9350     076B  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9351     076C  00A4               	movwf	unpackLong@data
  9352     076D  3184  24BC  3187   	fcall	_unpackLong
  9353     0770                     l3896:
  9354                           
  9355                           ;kaps.c: 42:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9356     0770  0020               	movlb	0	; select bank0
  9357     0771  0864               	movf	_kaps,w
  9358     0772  00B1               	movwf	??_KAPS_setAbsPos
  9359     0773  01B2               	clrf	??_KAPS_setAbsPos+1
  9360     0774  0831               	movf	??_KAPS_setAbsPos,w
  9361     0775  00A0               	movwf	I2C1_Write@address
  9362     0776  0832               	movf	??_KAPS_setAbsPos+1,w
  9363     0777  00A1               	movwf	I2C1_Write@address+1
  9364     0778  3037               	movlw	(low (KAPS_setAbsPos@reg| 0))& (0+255)
  9365     0779  00A2               	movwf	I2C1_Write@data
  9366     077A  3001               	movlw	1
  9367     077B  00A3               	movwf	I2C1_Write@dataLength
  9368     077C  3000               	movlw	0
  9369     077D  00A4               	movwf	I2C1_Write@dataLength+1
  9370     077E  318E  26A4  3187   	fcall	_I2C1_Write
  9371     0781                     l3898:
  9372                           
  9373                           ;kaps.c: 43:     I2C1_Write(kaps.m_bAddr, data, 4);
  9374     0781  0020               	movlb	0	; select bank0
  9375     0782  0864               	movf	_kaps,w
  9376     0783  00B1               	movwf	??_KAPS_setAbsPos
  9377     0784  01B2               	clrf	??_KAPS_setAbsPos+1
  9378     0785  0831               	movf	??_KAPS_setAbsPos,w
  9379     0786  00A0               	movwf	I2C1_Write@address
  9380     0787  0832               	movf	??_KAPS_setAbsPos+1,w
  9381     0788  00A1               	movwf	I2C1_Write@address+1
  9382     0789  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9383     078A  00A2               	movwf	I2C1_Write@data
  9384     078B  3004               	movlw	4
  9385     078C  00A3               	movwf	I2C1_Write@dataLength
  9386     078D  3000               	movlw	0
  9387     078E  00A4               	movwf	I2C1_Write@dataLength+1
  9388     078F  318E  26A4  3187   	fcall	_I2C1_Write
  9389     0792                     l719:
  9390     0792  0008               	return
  9391     0793                     __end_of_KAPS_setAbsPos:
  9392                           
  9393                           	psect	text31
  9394     07C3                     __ptext31:	
  9395 ;; *************** function _KAPS_getStatus *****************
  9396 ;; Defined at:
  9397 ;;		line 81 in file "kaps.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;		None
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  data            1    8[BANK0 ] unsigned char 
  9402 ;;  reg             1    7[BANK0 ] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, status,0, pclath, cstack
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9412 ;;      Params:         0       0       0       0       0       0       0       0
  9413 ;;      Locals:         0       2       0       0       0       0       0       0
  9414 ;;      Temps:          0       2       0       0       0       0       0       0
  9415 ;;      Totals:         0       4       0       0       0       0       0       0
  9416 ;;Total ram usage:        4 bytes
  9417 ;; Hardware stack levels used: 1
  9418 ;; Hardware stack levels required when called: 10
  9419 ;; This function calls:
  9420 ;;		_I2C1_Read
  9421 ;;		_I2C1_Write
  9422 ;; This function is called by:
  9423 ;;		_ProcessMsg
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427     07C3                     _KAPS_getStatus:	
  9428                           ;psect for function _KAPS_getStatus
  9429                           
  9430     07C3                     l3838:	
  9431                           ;incstack = 0
  9432                           ; Regs used in _KAPS_getStatus: [wreg+status,2+status,0+pclath+cstack]
  9433                           
  9434                           
  9435                           ;kaps.c: 82:     uint8_t reg = 0xFF;
  9436     07C3  30FF               	movlw	255
  9437     07C4  0020               	movlb	0	; select bank0
  9438     07C5  00A7               	movwf	KAPS_getStatus@reg
  9439     07C6                     l3840:
  9440                           
  9441                           ;kaps.c: 83:     uint8_t data = 0x00;
  9442     07C6  01A8               	clrf	KAPS_getStatus@data
  9443     07C7                     l3842:
  9444                           
  9445                           ;kaps.c: 85:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9446     07C7  0864               	movf	_kaps,w
  9447     07C8  00A5               	movwf	??_KAPS_getStatus
  9448     07C9  01A6               	clrf	??_KAPS_getStatus+1
  9449     07CA  0825               	movf	??_KAPS_getStatus,w
  9450     07CB  00A0               	movwf	I2C1_Write@address
  9451     07CC  0826               	movf	??_KAPS_getStatus+1,w
  9452     07CD  00A1               	movwf	I2C1_Write@address+1
  9453     07CE  3027               	movlw	(low (KAPS_getStatus@reg| 0))& (0+255)
  9454     07CF  00A2               	movwf	I2C1_Write@data
  9455     07D0  3001               	movlw	1
  9456     07D1  00A3               	movwf	I2C1_Write@dataLength
  9457     07D2  3000               	movlw	0
  9458     07D3  00A4               	movwf	I2C1_Write@dataLength+1
  9459     07D4  318E  26A4  3187   	fcall	_I2C1_Write
  9460     07D7                     l3844:
  9461                           
  9462                           ;kaps.c: 87:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9463     07D7  0020               	movlb	0	; select bank0
  9464     07D8  0864               	movf	_kaps,w
  9465     07D9  00A5               	movwf	??_KAPS_getStatus
  9466     07DA  01A6               	clrf	??_KAPS_getStatus+1
  9467     07DB  0825               	movf	??_KAPS_getStatus,w
  9468     07DC  00A0               	movwf	I2C1_Read@address
  9469     07DD  0826               	movf	??_KAPS_getStatus+1,w
  9470     07DE  00A1               	movwf	I2C1_Read@address+1
  9471     07DF  3028               	movlw	(low (KAPS_getStatus@data| 0))& (0+255)
  9472     07E0  00A2               	movwf	I2C1_Read@data
  9473     07E1  3001               	movlw	1
  9474     07E2  00A3               	movwf	I2C1_Read@dataLength
  9475     07E3  3000               	movlw	0
  9476     07E4  00A4               	movwf	I2C1_Read@dataLength+1
  9477     07E5  318E  26E4  3187   	fcall	_I2C1_Read
  9478     07E8  3A00               	xorlw	0
  9479     07E9  1903               	skipnz
  9480     07EA  2FEC               	goto	u1901
  9481     07EB  2FED               	goto	u1900
  9482     07EC                     u1901:
  9483     07EC  2FF0               	goto	l729
  9484     07ED                     u1900:
  9485     07ED                     l3846:
  9486                           
  9487                           ;kaps.c: 88:         kaps.m_Status = (kaps_status_t) data;
  9488     07ED  0020               	movlb	0	; select bank0
  9489     07EE  0828               	movf	KAPS_getStatus@data,w
  9490     07EF  00E5               	movwf	_kaps+1
  9491     07F0                     l729:
  9492     07F0  0008               	return
  9493     07F1                     __end_of_KAPS_getStatus:
  9494                           
  9495                           	psect	text32
  9496     05C4                     __ptext32:	
  9497 ;; *************** function _KAPS_getPos *****************
  9498 ;; Defined at:
  9499 ;;		line 107 in file "kaps.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  data            4   15[BANK0 ] unsigned char [4]
  9504 ;;  reg             1   19[BANK0 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9514 ;;      Params:         0       0       0       0       0       0       0       0
  9515 ;;      Locals:         0       5       0       0       0       0       0       0
  9516 ;;      Temps:          0       2       0       0       0       0       0       0
  9517 ;;      Totals:         0       7       0       0       0       0       0       0
  9518 ;;Total ram usage:        7 bytes
  9519 ;; Hardware stack levels used: 1
  9520 ;; Hardware stack levels required when called: 10
  9521 ;; This function calls:
  9522 ;;		_I2C1_Read
  9523 ;;		_I2C1_Write
  9524 ;;		_packLong
  9525 ;; This function is called by:
  9526 ;;		_ProcessMsg
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530     05C4                     _KAPS_getPos:	
  9531                           ;psect for function _KAPS_getPos
  9532                           
  9533     05C4                     l3848:	
  9534                           ;incstack = 0
  9535                           ; Regs used in _KAPS_getPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9536                           
  9537                           
  9538                           ;kaps.c: 108:     uint8_t reg = 0x00;
  9539     05C4  0020               	movlb	0	; select bank0
  9540     05C5  01B3               	clrf	KAPS_getPos@reg
  9541     05C6                     l3850:
  9542                           
  9543                           ;kaps.c: 109:     uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
  9544     05C6  3000               	movlw	0
  9545     05C7  00B2               	movwf	KAPS_getPos@data+3
  9546     05C8  3000               	movlw	0
  9547     05C9  00B1               	movwf	KAPS_getPos@data+2
  9548     05CA  3000               	movlw	0
  9549     05CB  00B0               	movwf	KAPS_getPos@data+1
  9550     05CC  3000               	movlw	0
  9551     05CD  00AF               	movwf	KAPS_getPos@data
  9552     05CE                     l3852:
  9553                           
  9554                           ;kaps.c: 111:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9555     05CE  0864               	movf	_kaps,w
  9556     05CF  00AD               	movwf	??_KAPS_getPos
  9557     05D0  01AE               	clrf	??_KAPS_getPos+1
  9558     05D1  082D               	movf	??_KAPS_getPos,w
  9559     05D2  00A0               	movwf	I2C1_Write@address
  9560     05D3  082E               	movf	??_KAPS_getPos+1,w
  9561     05D4  00A1               	movwf	I2C1_Write@address+1
  9562     05D5  3033               	movlw	(low (KAPS_getPos@reg| 0))& (0+255)
  9563     05D6  00A2               	movwf	I2C1_Write@data
  9564     05D7  3001               	movlw	1
  9565     05D8  00A3               	movwf	I2C1_Write@dataLength
  9566     05D9  3000               	movlw	0
  9567     05DA  00A4               	movwf	I2C1_Write@dataLength+1
  9568     05DB  318E  26A4  3185   	fcall	_I2C1_Write
  9569     05DE                     l3854:
  9570                           
  9571                           ;kaps.c: 113:     if (I2C1_Read(kaps.m_bAddr, data, 4))
  9572     05DE  0020               	movlb	0	; select bank0
  9573     05DF  0864               	movf	_kaps,w
  9574     05E0  00AD               	movwf	??_KAPS_getPos
  9575     05E1  01AE               	clrf	??_KAPS_getPos+1
  9576     05E2  082D               	movf	??_KAPS_getPos,w
  9577     05E3  00A0               	movwf	I2C1_Read@address
  9578     05E4  082E               	movf	??_KAPS_getPos+1,w
  9579     05E5  00A1               	movwf	I2C1_Read@address+1
  9580     05E6  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9581     05E7  00A2               	movwf	I2C1_Read@data
  9582     05E8  3004               	movlw	4
  9583     05E9  00A3               	movwf	I2C1_Read@dataLength
  9584     05EA  3000               	movlw	0
  9585     05EB  00A4               	movwf	I2C1_Read@dataLength+1
  9586     05EC  318E  26E4  3185   	fcall	_I2C1_Read
  9587     05EF  3A00               	xorlw	0
  9588     05F0  1903               	skipnz
  9589     05F1  2DF3               	goto	u1911
  9590     05F2  2DF4               	goto	u1910
  9591     05F3                     u1911:
  9592     05F3  2E01               	goto	l739
  9593     05F4                     u1910:
  9594     05F4                     l3856:
  9595                           
  9596                           ;kaps.c: 114:         kaps.m_lAbsPos = packLong(data);
  9597     05F4  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9598     05F5  3183  237E  3185   	fcall	_packLong
  9599     05F8  0020               	movlb	0	; select bank0
  9600     05F9  0823               	movf	?_packLong+3,w
  9601     05FA  00E9               	movwf	_kaps+5
  9602     05FB  0822               	movf	?_packLong+2,w
  9603     05FC  00E8               	movwf	_kaps+4
  9604     05FD  0821               	movf	?_packLong+1,w
  9605     05FE  00E7               	movwf	_kaps+3
  9606     05FF  0820               	movf	?_packLong,w
  9607     0600  00E6               	movwf	_kaps+2
  9608     0601                     l739:
  9609     0601  0008               	return
  9610     0602                     __end_of_KAPS_getPos:
  9611                           
  9612                           	psect	text33
  9613     037E                     __ptext33:	
  9614 ;; *************** function _packLong *****************
  9615 ;; Defined at:
  9616 ;;		line 20 in file "utils.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;  data            1    wreg     PTR unsigned char 
  9619 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  data            1   12[BANK0 ] PTR unsigned char 
  9622 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9623 ;;  result          4    8[BANK0 ] unsigned long 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  4    0[BANK0 ] unsigned long 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9633 ;;      Params:         0       4       0       0       0       0       0       0
  9634 ;;      Locals:         0       5       0       0       0       0       0       0
  9635 ;;      Temps:          0       4       0       0       0       0       0       0
  9636 ;;      Totals:         0      13       0       0       0       0       0       0
  9637 ;;Total ram usage:       13 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 7
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_ProcessMsg
  9644 ;;		_KAPS_getPos
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648     037E                     _packLong:	
  9649                           ;psect for function _packLong
  9650                           
  9651                           
  9652                           ;incstack = 0
  9653                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  9654                           ;packLong@data stored from wreg
  9655     037E  0020               	movlb	0	; select bank0
  9656     037F  00AC               	movwf	packLong@data
  9657     0380                     l3722:
  9658     0380                     l3724:
  9659                           
  9660                           ;utils.c: 26:     result = (uint32_t) data[0] << 24;
  9661     0380  082C               	movf	packLong@data,w
  9662     0381  0086               	movwf	6
  9663     0382  0187               	clrf	7
  9664     0383  0801               	movf	1,w
  9665     0384  00A4               	movwf	??_packLong
  9666     0385  01A5               	clrf	??_packLong+1
  9667     0386  01A6               	clrf	??_packLong+2
  9668     0387  01A7               	clrf	??_packLong+3
  9669     0388  3018               	movlw	24
  9670     0389                     u1795:
  9671     0389  35A4               	lslf	??_packLong,f
  9672     038A  0DA5               	rlf	??_packLong+1,f
  9673     038B  0DA6               	rlf	??_packLong+2,f
  9674     038C  0DA7               	rlf	??_packLong+3,f
  9675     038D                     u1790:
  9676     038D  0B89               	decfsz	9,f
  9677     038E  2B89               	goto	u1795
  9678     038F  0827               	movf	??_packLong+3,w
  9679     0390  00AB               	movwf	packLong@result+3
  9680     0391  0826               	movf	??_packLong+2,w
  9681     0392  00AA               	movwf	packLong@result+2
  9682     0393  0825               	movf	??_packLong+1,w
  9683     0394  00A9               	movwf	packLong@result+1
  9684     0395  0824               	movf	??_packLong,w
  9685     0396  00A8               	movwf	packLong@result
  9686     0397                     l3726:
  9687                           
  9688                           ;utils.c: 27:     result |= (uint32_t) data[1] << 16;
  9689     0397  0A2C               	incf	packLong@data,w
  9690     0398  0086               	movwf	6
  9691     0399  0187               	clrf	7
  9692     039A  0801               	movf	1,w
  9693     039B  00A4               	movwf	??_packLong
  9694     039C  01A5               	clrf	??_packLong+1
  9695     039D  01A6               	clrf	??_packLong+2
  9696     039E  01A7               	clrf	??_packLong+3
  9697     039F  3010               	movlw	16
  9698     03A0                     u1805:
  9699     03A0  35A4               	lslf	??_packLong,f
  9700     03A1  0DA5               	rlf	??_packLong+1,f
  9701     03A2  0DA6               	rlf	??_packLong+2,f
  9702     03A3  0DA7               	rlf	??_packLong+3,f
  9703     03A4                     u1800:
  9704     03A4  0B89               	decfsz	9,f
  9705     03A5  2BA0               	goto	u1805
  9706     03A6  0824               	movf	??_packLong,w
  9707     03A7  04A8               	iorwf	packLong@result,f
  9708     03A8  0825               	movf	??_packLong+1,w
  9709     03A9  04A9               	iorwf	packLong@result+1,f
  9710     03AA  0826               	movf	??_packLong+2,w
  9711     03AB  04AA               	iorwf	packLong@result+2,f
  9712     03AC  0827               	movf	??_packLong+3,w
  9713     03AD  04AB               	iorwf	packLong@result+3,f
  9714     03AE                     l3728:
  9715                           
  9716                           ;utils.c: 28:     result |= (uint32_t) data[2] << 8;
  9717     03AE  082C               	movf	packLong@data,w
  9718     03AF  3E02               	addlw	2
  9719     03B0  0086               	movwf	6
  9720     03B1  0187               	clrf	7
  9721     03B2  0801               	movf	1,w
  9722     03B3  00A4               	movwf	??_packLong
  9723     03B4  01A5               	clrf	??_packLong+1
  9724     03B5  01A6               	clrf	??_packLong+2
  9725     03B6  01A7               	clrf	??_packLong+3
  9726     03B7  3008               	movlw	8
  9727     03B8                     u1815:
  9728     03B8  35A4               	lslf	??_packLong,f
  9729     03B9  0DA5               	rlf	??_packLong+1,f
  9730     03BA  0DA6               	rlf	??_packLong+2,f
  9731     03BB  0DA7               	rlf	??_packLong+3,f
  9732     03BC                     u1810:
  9733     03BC  0B89               	decfsz	9,f
  9734     03BD  2BB8               	goto	u1815
  9735     03BE  0824               	movf	??_packLong,w
  9736     03BF  04A8               	iorwf	packLong@result,f
  9737     03C0  0825               	movf	??_packLong+1,w
  9738     03C1  04A9               	iorwf	packLong@result+1,f
  9739     03C2  0826               	movf	??_packLong+2,w
  9740     03C3  04AA               	iorwf	packLong@result+2,f
  9741     03C4  0827               	movf	??_packLong+3,w
  9742     03C5  04AB               	iorwf	packLong@result+3,f
  9743     03C6                     l3730:
  9744                           
  9745                           ;utils.c: 29:     result |= (uint32_t) data[3];
  9746     03C6  082C               	movf	packLong@data,w
  9747     03C7  3E03               	addlw	3
  9748     03C8  0086               	movwf	6
  9749     03C9  0187               	clrf	7
  9750     03CA  0801               	movf	1,w
  9751     03CB  04A8               	iorwf	packLong@result,f
  9752                           
  9753                           ;utils.c: 31:     return result;
  9754     03CC  082B               	movf	packLong@result+3,w
  9755     03CD  00A3               	movwf	?_packLong+3
  9756     03CE  082A               	movf	packLong@result+2,w
  9757     03CF  00A2               	movwf	?_packLong+2
  9758     03D0  0829               	movf	packLong@result+1,w
  9759     03D1  00A1               	movwf	?_packLong+1
  9760     03D2  0828               	movf	packLong@result,w
  9761     03D3  00A0               	movwf	?_packLong
  9762     03D4                     l742:
  9763     03D4  0008               	return
  9764     03D5                     __end_of_packLong:
  9765                           
  9766                           	psect	text34
  9767     0FD2                     __ptext34:	
  9768 ;; *************** function _KAPS_getIndex *****************
  9769 ;; Defined at:
  9770 ;;		line 94 in file "kaps.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;		None
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;  data            1    8[BANK0 ] unsigned char 
  9775 ;;  reg             1    7[BANK0 ] unsigned char 
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		wreg, status,2, status,0, pclath, cstack
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9785 ;;      Params:         0       0       0       0       0       0       0       0
  9786 ;;      Locals:         0       2       0       0       0       0       0       0
  9787 ;;      Temps:          0       2       0       0       0       0       0       0
  9788 ;;      Totals:         0       4       0       0       0       0       0       0
  9789 ;;Total ram usage:        4 bytes
  9790 ;; Hardware stack levels used: 1
  9791 ;; Hardware stack levels required when called: 10
  9792 ;; This function calls:
  9793 ;;		_I2C1_Read
  9794 ;;		_I2C1_Write
  9795 ;; This function is called by:
  9796 ;;		_ProcessMsg
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800     0FD2                     _KAPS_getIndex:	
  9801                           ;psect for function _KAPS_getIndex
  9802                           
  9803     0FD2                     l3858:	
  9804                           ;incstack = 0
  9805                           ; Regs used in _KAPS_getIndex: [wreg+status,2+status,0+pclath+cstack]
  9806                           
  9807                           
  9808                           ;kaps.c: 95:     uint8_t reg = 0xFE;
  9809     0FD2  30FE               	movlw	254
  9810     0FD3  0020               	movlb	0	; select bank0
  9811     0FD4  00A7               	movwf	KAPS_getIndex@reg
  9812     0FD5                     l3860:
  9813                           
  9814                           ;kaps.c: 96:     uint8_t data = 0x00;
  9815     0FD5  01A8               	clrf	KAPS_getIndex@data
  9816     0FD6                     l3862:
  9817                           
  9818                           ;kaps.c: 98:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9819     0FD6  0864               	movf	_kaps,w
  9820     0FD7  00A5               	movwf	??_KAPS_getIndex
  9821     0FD8  01A6               	clrf	??_KAPS_getIndex+1
  9822     0FD9  0825               	movf	??_KAPS_getIndex,w
  9823     0FDA  00A0               	movwf	I2C1_Write@address
  9824     0FDB  0826               	movf	??_KAPS_getIndex+1,w
  9825     0FDC  00A1               	movwf	I2C1_Write@address+1
  9826     0FDD  3027               	movlw	(low (KAPS_getIndex@reg| 0))& (0+255)
  9827     0FDE  00A2               	movwf	I2C1_Write@data
  9828     0FDF  3001               	movlw	1
  9829     0FE0  00A3               	movwf	I2C1_Write@dataLength
  9830     0FE1  3000               	movlw	0
  9831     0FE2  00A4               	movwf	I2C1_Write@dataLength+1
  9832     0FE3  318E  26A4  318F   	fcall	_I2C1_Write
  9833     0FE6                     l3864:
  9834                           
  9835                           ;kaps.c: 100:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9836     0FE6  0020               	movlb	0	; select bank0
  9837     0FE7  0864               	movf	_kaps,w
  9838     0FE8  00A5               	movwf	??_KAPS_getIndex
  9839     0FE9  01A6               	clrf	??_KAPS_getIndex+1
  9840     0FEA  0825               	movf	??_KAPS_getIndex,w
  9841     0FEB  00A0               	movwf	I2C1_Read@address
  9842     0FEC  0826               	movf	??_KAPS_getIndex+1,w
  9843     0FED  00A1               	movwf	I2C1_Read@address+1
  9844     0FEE  3028               	movlw	(low (KAPS_getIndex@data| 0))& (0+255)
  9845     0FEF  00A2               	movwf	I2C1_Read@data
  9846     0FF0  3001               	movlw	1
  9847     0FF1  00A3               	movwf	I2C1_Read@dataLength
  9848     0FF2  3000               	movlw	0
  9849     0FF3  00A4               	movwf	I2C1_Read@dataLength+1
  9850     0FF4  318E  26E4  318F   	fcall	_I2C1_Read
  9851     0FF7  3A00               	xorlw	0
  9852     0FF8  1903               	skipnz
  9853     0FF9  2FFB               	goto	u1921
  9854     0FFA  2FFC               	goto	u1920
  9855     0FFB                     u1921:
  9856     0FFB  2FFF               	goto	l733
  9857     0FFC                     u1920:
  9858     0FFC                     l3866:
  9859                           
  9860                           ;kaps.c: 101:         kaps.m_bIdxPos = data;
  9861     0FFC  0020               	movlb	0	; select bank0
  9862     0FFD  0828               	movf	KAPS_getIndex@data,w
  9863     0FFE  00EA               	movwf	_kaps+6
  9864     0FFF                     l733:
  9865     0FFF  0008               	return
  9866     1000                     __end_of_KAPS_getIndex:
  9867                           
  9868                           	psect	text35
  9869     0EE4                     __ptext35:	
  9870 ;; *************** function _I2C1_Read *****************
  9871 ;; Defined at:
  9872 ;;		line 161 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  address         2    0[BANK0 ] unsigned short 
  9875 ;;  data            1    2[BANK0 ] PTR unsigned char 
  9876 ;;		 -> KAPS_getPos@data(4), KAPS_getIndex@data(1), KAPS_getStatus@data(1), 
  9877 ;;  dataLength      2    3[BANK0 ] unsigned int 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;  retStatus       1    5[COMMON] _Bool 
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      _Bool 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0, pclath, cstack
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9889 ;;      Params:         0       5       0       0       0       0       0       0
  9890 ;;      Locals:         1       0       0       0       0       0       0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0
  9892 ;;      Totals:         1       5       0       0       0       0       0       0
  9893 ;;Total ram usage:        6 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; Hardware stack levels required when called: 9
  9896 ;; This function calls:
  9897 ;;		_I2C1_IsBusy
  9898 ;;		_I2C1_ReadStart
  9899 ;; This function is called by:
  9900 ;;		_KAPS_getStatus
  9901 ;;		_KAPS_getIndex
  9902 ;;		_KAPS_getPos
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906     0EE4                     _I2C1_Read:	
  9907                           ;psect for function _I2C1_Read
  9908                           
  9909     0EE4                     l3660:	
  9910                           ;incstack = 0
  9911                           ; Regs used in _I2C1_Read: [wreg+status,2+status,0+pclath+cstack]
  9912                           
  9913                           
  9914                           ;mcc_generated_files/i2c_host/src/mssp.c: 161: _Bool I2C1_Read(uint16_t address, uint8_t
      +                           *data, size_t dataLength);mcc_generated_files/i2c_host/src/mssp.c: 162: {;mcc_generated
      +                          _files/i2c_host/src/mssp.c: 163:     _Bool retStatus = 0;
  9915     0EE4  01F5               	clrf	I2C1_Read@retStatus
  9916     0EE5                     l3662:
  9917                           
  9918                           ;mcc_generated_files/i2c_host/src/mssp.c: 164:     if (!I2C1_IsBusy())
  9919     0EE5  318D  25FE  318E   	fcall	_I2C1_IsBusy
  9920     0EE8  3A00               	xorlw	0
  9921     0EE9  1D03               	skipz
  9922     0EEA  2EEC               	goto	u1731
  9923     0EEB  2EED               	goto	u1730
  9924     0EEC                     u1731:
  9925     0EEC  2F04               	goto	l3682
  9926     0EED                     u1730:
  9927     0EED                     l3664:
  9928                           
  9929                           ;mcc_generated_files/i2c_host/src/mssp.c: 165:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 166:         i2c1Status.busy = 1;
  9930     0EED  3001               	movlw	1
  9931     0EEE  0020               	movlb	0	; select bank0
  9932     0EEF  00D2               	movwf	_i2c1Status	;volatile
  9933                           
  9934                           ;mcc_generated_files/i2c_host/src/mssp.c: 167:         i2c1Status.address = address;
  9935     0EF0  0821               	movf	I2C1_Read@address+1,w
  9936     0EF1  00D4               	movwf	_i2c1Status+2	;volatile
  9937     0EF2  0820               	movf	I2C1_Read@address,w
  9938     0EF3  00D3               	movwf	_i2c1Status+1	;volatile
  9939     0EF4                     l3666:
  9940                           
  9941                           ;mcc_generated_files/i2c_host/src/mssp.c: 168:         i2c1Status.switchToRead = 0;
  9942     0EF4  01DB               	clrf	_i2c1Status+9	;volatile
  9943     0EF5                     l3668:
  9944                           
  9945                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:         i2c1Status.readPtr = data;
  9946     0EF5  0822               	movf	I2C1_Read@data,w
  9947     0EF6  00D8               	movwf	low ((_i2c1Status| 0+6))	;volatile
  9948     0EF7                     l3670:
  9949                           
  9950                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:         i2c1Status.readLength = dataLengt
      +                          h;
  9951     0EF7  0824               	movf	I2C1_Read@dataLength+1,w
  9952     0EF8  00DA               	movwf	_i2c1Status+8	;volatile
  9953     0EF9  0823               	movf	I2C1_Read@dataLength,w
  9954     0EFA  00D9               	movwf	_i2c1Status+7	;volatile
  9955     0EFB                     l3672:
  9956                           
  9957                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:         i2c1Status.writePtr = ((void*)0);
  9958     0EFB  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
  9959     0EFC                     l3674:
  9960                           
  9961                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:         i2c1Status.writeLength = 0;
  9962     0EFC  01D6               	clrf	_i2c1Status+4	;volatile
  9963     0EFD  01D7               	clrf	_i2c1Status+5	;volatile
  9964     0EFE                     l3676:
  9965                           
  9966                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
  9967     0EFE  01DC               	clrf	_i2c1Status+10	;volatile
  9968     0EFF                     l3678:
  9969                           
  9970                           ;mcc_generated_files/i2c_host/src/mssp.c: 174:         I2C1_ReadStart();
  9971     0EFF  318D  2563  318E   	fcall	_I2C1_ReadStart
  9972     0F02                     l3680:
  9973                           
  9974                           ;mcc_generated_files/i2c_host/src/mssp.c: 175:         retStatus = 1;
  9975     0F02  01F5               	clrf	I2C1_Read@retStatus
  9976     0F03  0AF5               	incf	I2C1_Read@retStatus,f
  9977     0F04                     l3682:
  9978                           
  9979                           ;mcc_generated_files/i2c_host/src/mssp.c: 177:     return retStatus;
  9980     0F04  0875               	movf	I2C1_Read@retStatus,w
  9981     0F05                     l188:
  9982     0F05  0008               	return
  9983     0F06                     __end_of_I2C1_Read:
  9984                           
  9985                           	psect	text36
  9986     0D63                     __ptext36:	
  9987 ;; *************** function _I2C1_ReadStart *****************
  9988 ;; Defined at:
  9989 ;;		line 232 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;		None
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      void 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0, pclath, cstack
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10003 ;;      Params:         0       0       0       0       0       0       0       0
 10004 ;;      Locals:         0       0       0       0       0       0       0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0
 10006 ;;      Totals:         0       0       0       0       0       0       0       0
 10007 ;;Total ram usage:        0 bytes
 10008 ;; Hardware stack levels used: 1
 10009 ;; Hardware stack levels required when called: 8
 10010 ;; This function calls:
 10011 ;;		_I2C1_StartSend
 10012 ;; This function is called by:
 10013 ;;		_I2C1_Read
 10014 ;; This function uses a non-reentrant model
 10015 ;;
 10016                           
 10017     0D63                     _I2C1_ReadStart:	
 10018                           ;psect for function _I2C1_ReadStart
 10019                           
 10020     0D63                     l3572:	
 10021                           ;incstack = 0
 10022                           ; Regs used in _I2C1_ReadStart: [wreg+status,2+status,0+pclath+cstack]
 10023                           
 10024                           
 10025                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:     I2C1_StartSend();
 10026     0D63  318C  24D7  318D   	fcall	_I2C1_StartSend
 10027     0D66                     l3574:
 10028                           
 10029                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:     i2c1Status.state = I2C_STATE_SEND_RD_
      +                          ADDR;
 10030     0D66  3001               	movlw	1
 10031     0D67  0020               	movlb	0	; select bank0
 10032     0D68  00DD               	movwf	_i2c1Status+11	;volatile
 10033     0D69                     l213:
 10034     0D69  0008               	return
 10035     0D6A                     __end_of_I2C1_ReadStart:
 10036                           
 10037                           	psect	text37
 10038     0584                     __ptext37:	
 10039 ;; *************** function _KAPS_StorePos *****************
 10040 ;; Defined at:
 10041 ;;		line 65 in file "kaps.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  idx             1    wreg     unsigned char 
 10044 ;;  pos             4   13[BANK0 ] unsigned long 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  idx             1   24[BANK0 ] unsigned char 
 10047 ;;  data            4   19[BANK0 ] unsigned char [4]
 10048 ;;  reg             1   23[BANK0 ] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10058 ;;      Params:         0       4       0       0       0       0       0       0
 10059 ;;      Locals:         0       6       0       0       0       0       0       0
 10060 ;;      Temps:          0       2       0       0       0       0       0       0
 10061 ;;      Totals:         0      12       0       0       0       0       0       0
 10062 ;;Total ram usage:       12 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; Hardware stack levels required when called: 10
 10065 ;; This function calls:
 10066 ;;		_I2C1_Write
 10067 ;;		_unpackLong
 10068 ;; This function is called by:
 10069 ;;		_ProcessMsg
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073     0584                     _KAPS_StorePos:	
 10074                           ;psect for function _KAPS_StorePos
 10075                           
 10076                           
 10077                           ;incstack = 0
 10078                           ; Regs used in _KAPS_StorePos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10079                           ;KAPS_StorePos@idx stored from wreg
 10080     0584  0020               	movlb	0	; select bank0
 10081     0585  00B8               	movwf	KAPS_StorePos@idx
 10082     0586                     l3906:
 10083                           
 10084                           ;kaps.c: 66:     idx--;
 10085     0586  3001               	movlw	1
 10086     0587  02B8               	subwf	KAPS_StorePos@idx,f
 10087     0588                     l3908:
 10088                           
 10089                           ;kaps.c: 68:     uint8_t reg = (idx)*4 + 0x04;
 10090     0588  0838               	movf	KAPS_StorePos@idx,w
 10091     0589  00B1               	movwf	??_KAPS_StorePos
 10092     058A  3001               	movlw	1
 10093     058B                     u1965:
 10094     058B  35B1               	lslf	??_KAPS_StorePos,f
 10095     058C  3EFF               	addlw	-1
 10096     058D  1D03               	skipz
 10097     058E  2D8B               	goto	u1965
 10098     058F  3531               	lslf	??_KAPS_StorePos,w
 10099     0590  3E04               	addlw	4
 10100     0591  00B7               	movwf	KAPS_StorePos@reg
 10101     0592                     l3910:
 10102                           
 10103                           ;kaps.c: 69:     uint8_t data[4];;kaps.c: 71:     data[0] = idx;
 10104     0592  0838               	movf	KAPS_StorePos@idx,w
 10105     0593  00B3               	movwf	KAPS_StorePos@data
 10106     0594                     l3912:
 10107                           
 10108                           ;kaps.c: 72:     unpackLong(pos, &data[0]);
 10109     0594  0830               	movf	KAPS_StorePos@pos+3,w
 10110     0595  00A3               	movwf	unpackLong@value+3
 10111     0596  082F               	movf	KAPS_StorePos@pos+2,w
 10112     0597  00A2               	movwf	unpackLong@value+2
 10113     0598  082E               	movf	KAPS_StorePos@pos+1,w
 10114     0599  00A1               	movwf	unpackLong@value+1
 10115     059A  082D               	movf	KAPS_StorePos@pos,w
 10116     059B  00A0               	movwf	unpackLong@value
 10117     059C  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10118     059D  00A4               	movwf	unpackLong@data
 10119     059E  3184  24BC  3185   	fcall	_unpackLong
 10120     05A1                     l3914:
 10121                           
 10122                           ;kaps.c: 74:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10123     05A1  0020               	movlb	0	; select bank0
 10124     05A2  0864               	movf	_kaps,w
 10125     05A3  00B1               	movwf	??_KAPS_StorePos
 10126     05A4  01B2               	clrf	??_KAPS_StorePos+1
 10127     05A5  0831               	movf	??_KAPS_StorePos,w
 10128     05A6  00A0               	movwf	I2C1_Write@address
 10129     05A7  0832               	movf	??_KAPS_StorePos+1,w
 10130     05A8  00A1               	movwf	I2C1_Write@address+1
 10131     05A9  3037               	movlw	(low (KAPS_StorePos@reg| 0))& (0+255)
 10132     05AA  00A2               	movwf	I2C1_Write@data
 10133     05AB  3001               	movlw	1
 10134     05AC  00A3               	movwf	I2C1_Write@dataLength
 10135     05AD  3000               	movlw	0
 10136     05AE  00A4               	movwf	I2C1_Write@dataLength+1
 10137     05AF  318E  26A4  3185   	fcall	_I2C1_Write
 10138     05B2                     l3916:
 10139                           
 10140                           ;kaps.c: 75:     I2C1_Write(kaps.m_bAddr, data, 4);
 10141     05B2  0020               	movlb	0	; select bank0
 10142     05B3  0864               	movf	_kaps,w
 10143     05B4  00B1               	movwf	??_KAPS_StorePos
 10144     05B5  01B2               	clrf	??_KAPS_StorePos+1
 10145     05B6  0831               	movf	??_KAPS_StorePos,w
 10146     05B7  00A0               	movwf	I2C1_Write@address
 10147     05B8  0832               	movf	??_KAPS_StorePos+1,w
 10148     05B9  00A1               	movwf	I2C1_Write@address+1
 10149     05BA  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10150     05BB  00A2               	movwf	I2C1_Write@data
 10151     05BC  3004               	movlw	4
 10152     05BD  00A3               	movwf	I2C1_Write@dataLength
 10153     05BE  3000               	movlw	0
 10154     05BF  00A4               	movwf	I2C1_Write@dataLength+1
 10155     05C0  318E  26A4  3185   	fcall	_I2C1_Write
 10156     05C3                     l725:
 10157     05C3  0008               	return
 10158     05C4                     __end_of_KAPS_StorePos:
 10159                           
 10160                           	psect	text38
 10161     04BC                     __ptext38:	
 10162 ;; *************** function _unpackLong *****************
 10163 ;; Defined at:
 10164 ;;		line 57 in file "utils.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  value           4    0[BANK0 ] unsigned long 
 10167 ;;  data            1    4[BANK0 ] PTR unsigned char 
 10168 ;;		 -> KAPS_StorePos@data(4), KAPS_setAbsPos@data(4), ProcessMsg@payload(6), 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;		None
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1    wreg      void 
 10173 ;; Registers used:
 10174 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10180 ;;      Params:         0       5       0       0       0       0       0       0
 10181 ;;      Locals:         0       0       0       0       0       0       0       0
 10182 ;;      Temps:          0       4       0       0       0       0       0       0
 10183 ;;      Totals:         0       9       0       0       0       0       0       0
 10184 ;;Total ram usage:        9 bytes
 10185 ;; Hardware stack levels used: 1
 10186 ;; Hardware stack levels required when called: 7
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_ProcessMsg
 10191 ;;		_KAPS_setAbsPos
 10192 ;;		_KAPS_StorePos
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196     04BC                     _unpackLong:	
 10197                           ;psect for function _unpackLong
 10198                           
 10199     04BC                     l3714:	
 10200                           ;incstack = 0
 10201                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
 10202                           
 10203                           
 10204                           ;utils.c: 59:     data[0] = (value & 0XFF);
 10205     04BC  0020               	movlb	0	; select bank0
 10206     04BD  0824               	movf	unpackLong@data,w
 10207     04BE  0086               	movwf	6
 10208     04BF  0187               	clrf	7
 10209     04C0  0820               	movf	unpackLong@value,w
 10210     04C1  0081               	movwf	1
 10211     04C2                     l3716:
 10212                           
 10213                           ;utils.c: 60:     data[1] = (value >> 8) & 0xFF;
 10214     04C2  0A24               	incf	unpackLong@data,w
 10215     04C3  0086               	movwf	6
 10216     04C4  0187               	clrf	7
 10217     04C5  0820               	movf	unpackLong@value,w
 10218     04C6  00A5               	movwf	??_unpackLong
 10219     04C7  0821               	movf	unpackLong@value+1,w
 10220     04C8  00A6               	movwf	??_unpackLong+1
 10221     04C9  0822               	movf	unpackLong@value+2,w
 10222     04CA  00A7               	movwf	??_unpackLong+2
 10223     04CB  0823               	movf	unpackLong@value+3,w
 10224     04CC  00A8               	movwf	??_unpackLong+3
 10225     04CD  3008               	movlw	8
 10226     04CE                     u1765:
 10227     04CE  36A8               	lsrf	??_unpackLong+3,f
 10228     04CF  0CA7               	rrf	??_unpackLong+2,f
 10229     04D0  0CA6               	rrf	??_unpackLong+1,f
 10230     04D1  0CA5               	rrf	??_unpackLong,f
 10231     04D2                     u1760:
 10232     04D2  0B89               	decfsz	9,f
 10233     04D3  2CCE               	goto	u1765
 10234     04D4  0825               	movf	??_unpackLong,w
 10235     04D5  0081               	movwf	1
 10236     04D6                     l3718:
 10237                           
 10238                           ;utils.c: 61:     data[2] = (value >> 16) & 0xFF;
 10239     04D6  0824               	movf	unpackLong@data,w
 10240     04D7  3E02               	addlw	2
 10241     04D8  0086               	movwf	6
 10242     04D9  0187               	clrf	7
 10243     04DA  0820               	movf	unpackLong@value,w
 10244     04DB  00A5               	movwf	??_unpackLong
 10245     04DC  0821               	movf	unpackLong@value+1,w
 10246     04DD  00A6               	movwf	??_unpackLong+1
 10247     04DE  0822               	movf	unpackLong@value+2,w
 10248     04DF  00A7               	movwf	??_unpackLong+2
 10249     04E0  0823               	movf	unpackLong@value+3,w
 10250     04E1  00A8               	movwf	??_unpackLong+3
 10251     04E2  3010               	movlw	16
 10252     04E3                     u1775:
 10253     04E3  36A8               	lsrf	??_unpackLong+3,f
 10254     04E4  0CA7               	rrf	??_unpackLong+2,f
 10255     04E5  0CA6               	rrf	??_unpackLong+1,f
 10256     04E6  0CA5               	rrf	??_unpackLong,f
 10257     04E7                     u1770:
 10258     04E7  0B89               	decfsz	9,f
 10259     04E8  2CE3               	goto	u1775
 10260     04E9  0825               	movf	??_unpackLong,w
 10261     04EA  0081               	movwf	1
 10262     04EB                     l3720:
 10263                           
 10264                           ;utils.c: 62:     data[3] = (value >> 24) & 0xFF;
 10265     04EB  0824               	movf	unpackLong@data,w
 10266     04EC  3E03               	addlw	3
 10267     04ED  0086               	movwf	6
 10268     04EE  0187               	clrf	7
 10269     04EF  0820               	movf	unpackLong@value,w
 10270     04F0  00A5               	movwf	??_unpackLong
 10271     04F1  0821               	movf	unpackLong@value+1,w
 10272     04F2  00A6               	movwf	??_unpackLong+1
 10273     04F3  0822               	movf	unpackLong@value+2,w
 10274     04F4  00A7               	movwf	??_unpackLong+2
 10275     04F5  0823               	movf	unpackLong@value+3,w
 10276     04F6  00A8               	movwf	??_unpackLong+3
 10277     04F7  3018               	movlw	24
 10278     04F8                     u1785:
 10279     04F8  36A8               	lsrf	??_unpackLong+3,f
 10280     04F9  0CA7               	rrf	??_unpackLong+2,f
 10281     04FA  0CA6               	rrf	??_unpackLong+1,f
 10282     04FB  0CA5               	rrf	??_unpackLong,f
 10283     04FC                     u1780:
 10284     04FC  0B89               	decfsz	9,f
 10285     04FD  2CF8               	goto	u1785
 10286     04FE  0825               	movf	??_unpackLong,w
 10287     04FF  0081               	movwf	1
 10288     0500                     l748:
 10289     0500  0008               	return
 10290     0501                     __end_of_unpackLong:
 10291                           
 10292                           	psect	text39
 10293     0F06                     __ptext39:	
 10294 ;; *************** function _KAPS_GoToIdx *****************
 10295 ;; Defined at:
 10296 ;;		line 24 in file "kaps.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  idx             1    wreg     unsigned char 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;  idx             1    7[BANK0 ] unsigned char 
 10301 ;;  reg             1    8[BANK0 ] unsigned char 
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  1    wreg      void 
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0, pclath, cstack
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10311 ;;      Params:         0       0       0       0       0       0       0       0
 10312 ;;      Locals:         0       2       0       0       0       0       0       0
 10313 ;;      Temps:          0       2       0       0       0       0       0       0
 10314 ;;      Totals:         0       4       0       0       0       0       0       0
 10315 ;;Total ram usage:        4 bytes
 10316 ;; Hardware stack levels used: 1
 10317 ;; Hardware stack levels required when called: 10
 10318 ;; This function calls:
 10319 ;;		_I2C1_Write
 10320 ;; This function is called by:
 10321 ;;		_ProcessMsg
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325     0F06                     _KAPS_GoToIdx:	
 10326                           ;psect for function _KAPS_GoToIdx
 10327                           
 10328                           
 10329                           ;incstack = 0
 10330                           ; Regs used in _KAPS_GoToIdx: [wreg+status,2+status,0+pclath+cstack]
 10331                           ;KAPS_GoToIdx@idx stored from wreg
 10332     0F06  0020               	movlb	0	; select bank0
 10333     0F07  00A7               	movwf	KAPS_GoToIdx@idx
 10334     0F08                     l3886:
 10335                           
 10336                           ;kaps.c: 25:     uint8_t reg = 0xFE;
 10337     0F08  30FE               	movlw	254
 10338     0F09  00A8               	movwf	KAPS_GoToIdx@reg
 10339     0F0A                     l3888:
 10340                           
 10341                           ;kaps.c: 27:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10342     0F0A  0864               	movf	_kaps,w
 10343     0F0B  00A5               	movwf	??_KAPS_GoToIdx
 10344     0F0C  01A6               	clrf	??_KAPS_GoToIdx+1
 10345     0F0D  0825               	movf	??_KAPS_GoToIdx,w
 10346     0F0E  00A0               	movwf	I2C1_Write@address
 10347     0F0F  0826               	movf	??_KAPS_GoToIdx+1,w
 10348     0F10  00A1               	movwf	I2C1_Write@address+1
 10349     0F11  3028               	movlw	(low (KAPS_GoToIdx@reg| 0))& (0+255)
 10350     0F12  00A2               	movwf	I2C1_Write@data
 10351     0F13  3001               	movlw	1
 10352     0F14  00A3               	movwf	I2C1_Write@dataLength
 10353     0F15  3000               	movlw	0
 10354     0F16  00A4               	movwf	I2C1_Write@dataLength+1
 10355     0F17  318E  26A4  318F   	fcall	_I2C1_Write
 10356     0F1A                     l3890:
 10357                           
 10358                           ;kaps.c: 28:     I2C1_Write(kaps.m_bAddr, &idx, 1);
 10359     0F1A  0020               	movlb	0	; select bank0
 10360     0F1B  0864               	movf	_kaps,w
 10361     0F1C  00A5               	movwf	??_KAPS_GoToIdx
 10362     0F1D  01A6               	clrf	??_KAPS_GoToIdx+1
 10363     0F1E  0825               	movf	??_KAPS_GoToIdx,w
 10364     0F1F  00A0               	movwf	I2C1_Write@address
 10365     0F20  0826               	movf	??_KAPS_GoToIdx+1,w
 10366     0F21  00A1               	movwf	I2C1_Write@address+1
 10367     0F22  3027               	movlw	(low (KAPS_GoToIdx@idx| 0))& (0+255)
 10368     0F23  00A2               	movwf	I2C1_Write@data
 10369     0F24  3001               	movlw	1
 10370     0F25  00A3               	movwf	I2C1_Write@dataLength
 10371     0F26  3000               	movlw	0
 10372     0F27  00A4               	movwf	I2C1_Write@dataLength+1
 10373     0F28  318E  26A4  318F   	fcall	_I2C1_Write
 10374     0F2B                     l716:
 10375     0F2B  0008               	return
 10376     0F2C                     __end_of_KAPS_GoToIdx:
 10377                           
 10378                           	psect	text40
 10379     0EA4                     __ptext40:	
 10380 ;; *************** function _I2C1_Write *****************
 10381 ;; Defined at:
 10382 ;;		line 142 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  address         2    0[BANK0 ] unsigned short 
 10385 ;;  data            1    2[BANK0 ] PTR unsigned char 
 10386 ;;		 -> KAPS_getPos@reg(1), KAPS_getIndex@reg(1), KAPS_getStatus@reg(1), KAPS_StorePos@data(4), 
 10387 ;;		 -> KAPS_StorePos@reg(1), KAPS_setRelPos@value(1), KAPS_setRelPos@reg(1), KAPS_setAbsPos@data(4), 
 10388 ;;		 -> KAPS_setAbsPos@reg(1), KAPS_GoToIdx@idx(1), KAPS_GoToIdx@reg(1), 
 10389 ;;  dataLength      2    3[BANK0 ] unsigned int 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;  retStatus       1    0        _Bool 
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1    wreg      _Bool 
 10394 ;; Registers used:
 10395 ;;		wreg, status,2, status,0, pclath, cstack
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10401 ;;      Params:         0       5       0       0       0       0       0       0
 10402 ;;      Locals:         0       0       0       0       0       0       0       0
 10403 ;;      Temps:          0       0       0       0       0       0       0       0
 10404 ;;      Totals:         0       5       0       0       0       0       0       0
 10405 ;;Total ram usage:        5 bytes
 10406 ;; Hardware stack levels used: 1
 10407 ;; Hardware stack levels required when called: 9
 10408 ;; This function calls:
 10409 ;;		_I2C1_IsBusy
 10410 ;;		_I2C1_WriteStart
 10411 ;; This function is called by:
 10412 ;;		_KAPS_GoToIdx
 10413 ;;		_KAPS_setAbsPos
 10414 ;;		_KAPS_setRelPos
 10415 ;;		_KAPS_StorePos
 10416 ;;		_KAPS_getStatus
 10417 ;;		_KAPS_getIndex
 10418 ;;		_KAPS_getPos
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422     0EA4                     _I2C1_Write:	
 10423                           ;psect for function _I2C1_Write
 10424                           
 10425     0EA4                     l3636:	
 10426                           ;incstack = 0
 10427                           ; Regs used in _I2C1_Write: [wreg+status,2+status,0+pclath+cstack]
 10428                           
 10429     0EA4                     l3638:
 10430                           
 10431                           ;mcc_generated_files/i2c_host/src/mssp.c: 145:     if (!I2C1_IsBusy())
 10432     0EA4  318D  25FE  318E   	fcall	_I2C1_IsBusy
 10433     0EA7  3A00               	xorlw	0
 10434     0EA8  1D03               	skipz
 10435     0EA9  2EAB               	goto	u1721
 10436     0EAA  2EAC               	goto	u1720
 10437     0EAB                     u1721:
 10438     0EAB  2EC1               	goto	l184
 10439     0EAC                     u1720:
 10440     0EAC                     l3640:
 10441                           
 10442                           ;mcc_generated_files/i2c_host/src/mssp.c: 146:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 147:         i2c1Status.busy = 1;
 10443     0EAC  3001               	movlw	1
 10444     0EAD  0020               	movlb	0	; select bank0
 10445     0EAE  00D2               	movwf	_i2c1Status	;volatile
 10446                           
 10447                           ;mcc_generated_files/i2c_host/src/mssp.c: 148:         i2c1Status.address = address;
 10448     0EAF  0821               	movf	I2C1_Write@address+1,w
 10449     0EB0  00D4               	movwf	_i2c1Status+2	;volatile
 10450     0EB1  0820               	movf	I2C1_Write@address,w
 10451     0EB2  00D3               	movwf	_i2c1Status+1	;volatile
 10452     0EB3                     l3642:
 10453                           
 10454                           ;mcc_generated_files/i2c_host/src/mssp.c: 149:         i2c1Status.switchToRead = 0;
 10455     0EB3  01DB               	clrf	_i2c1Status+9	;volatile
 10456     0EB4                     l3644:
 10457                           
 10458                           ;mcc_generated_files/i2c_host/src/mssp.c: 150:         i2c1Status.writePtr = data;
 10459     0EB4  0822               	movf	I2C1_Write@data,w
 10460     0EB5  00D5               	movwf	low ((_i2c1Status| 0+3))	;volatile
 10461     0EB6                     l3646:
 10462                           
 10463                           ;mcc_generated_files/i2c_host/src/mssp.c: 151:         i2c1Status.writeLength = dataLeng
      +                          th;
 10464     0EB6  0824               	movf	I2C1_Write@dataLength+1,w
 10465     0EB7  00D7               	movwf	_i2c1Status+5	;volatile
 10466     0EB8  0823               	movf	I2C1_Write@dataLength,w
 10467     0EB9  00D6               	movwf	_i2c1Status+4	;volatile
 10468     0EBA                     l3648:
 10469                           
 10470                           ;mcc_generated_files/i2c_host/src/mssp.c: 152:         i2c1Status.readPtr = ((void*)0);
 10471     0EBA  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 10472     0EBB                     l3650:
 10473                           
 10474                           ;mcc_generated_files/i2c_host/src/mssp.c: 153:         i2c1Status.readLength = 0;
 10475     0EBB  01D9               	clrf	_i2c1Status+7	;volatile
 10476     0EBC  01DA               	clrf	_i2c1Status+8	;volatile
 10477     0EBD                     l3652:
 10478                           
 10479                           ;mcc_generated_files/i2c_host/src/mssp.c: 154:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 10480     0EBD  01DC               	clrf	_i2c1Status+10	;volatile
 10481     0EBE                     l3654:
 10482                           
 10483                           ;mcc_generated_files/i2c_host/src/mssp.c: 155:         I2C1_WriteStart();
 10484     0EBE  318D  255C  318E   	fcall	_I2C1_WriteStart
 10485     0EC1                     l3656:
 10486     0EC1                     l184:
 10487     0EC1  0008               	return
 10488     0EC2                     __end_of_I2C1_Write:
 10489                           
 10490                           	psect	text41
 10491     0D5C                     __ptext41:	
 10492 ;; *************** function _I2C1_WriteStart *****************
 10493 ;; Defined at:
 10494 ;;		line 238 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;		None
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;		None
 10499 ;; Return value:  Size  Location     Type
 10500 ;;                  1    wreg      void 
 10501 ;; Registers used:
 10502 ;;		wreg, status,2, status,0, pclath, cstack
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/0
 10505 ;;		On exit  : 0/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10508 ;;      Params:         0       0       0       0       0       0       0       0
 10509 ;;      Locals:         0       0       0       0       0       0       0       0
 10510 ;;      Temps:          0       0       0       0       0       0       0       0
 10511 ;;      Totals:         0       0       0       0       0       0       0       0
 10512 ;;Total ram usage:        0 bytes
 10513 ;; Hardware stack levels used: 1
 10514 ;; Hardware stack levels required when called: 8
 10515 ;; This function calls:
 10516 ;;		_I2C1_StartSend
 10517 ;; This function is called by:
 10518 ;;		_I2C1_Write
 10519 ;;		_I2C1_WriteRead
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523     0D5C                     _I2C1_WriteStart:	
 10524                           ;psect for function _I2C1_WriteStart
 10525                           
 10526     0D5C                     l3568:	
 10527                           ;incstack = 0
 10528                           ; Regs used in _I2C1_WriteStart: [wreg+status,2+status,0+pclath+cstack]
 10529                           
 10530                           
 10531                           ;mcc_generated_files/i2c_host/src/mssp.c: 240:     I2C1_StartSend();
 10532     0D5C  318C  24D7  318D   	fcall	_I2C1_StartSend
 10533     0D5F                     l3570:
 10534                           
 10535                           ;mcc_generated_files/i2c_host/src/mssp.c: 241:     i2c1Status.state = I2C_STATE_SEND_WR_
      +                          ADDR;
 10536     0D5F  3002               	movlw	2
 10537     0D60  0020               	movlb	0	; select bank0
 10538     0D61  00DD               	movwf	_i2c1Status+11	;volatile
 10539     0D62                     l216:
 10540     0D62  0008               	return
 10541     0D63                     __end_of_I2C1_WriteStart:
 10542                           
 10543                           	psect	text42
 10544     0CD7                     __ptext42:	
 10545 ;; *************** function _I2C1_StartSend *****************
 10546 ;; Defined at:
 10547 ;;		line 425 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;		None
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		None
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10561 ;;      Params:         0       0       0       0       0       0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0       0       0
 10564 ;;      Totals:         0       0       0       0       0       0       0       0
 10565 ;;Total ram usage:        0 bytes
 10566 ;; Hardware stack levels used: 1
 10567 ;; Hardware stack levels required when called: 7
 10568 ;; This function calls:
 10569 ;;		Nothing
 10570 ;; This function is called by:
 10571 ;;		_I2C1_ReadStart
 10572 ;;		_I2C1_WriteStart
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576     0CD7                     _I2C1_StartSend:	
 10577                           ;psect for function _I2C1_StartSend
 10578                           
 10579     0CD7                     l3528:	
 10580                           ;incstack = 0
 10581                           ; Regs used in _I2C1_StartSend: []
 10582                           
 10583                           
 10584                           ;mcc_generated_files/i2c_host/src/mssp.c: 427:     SSP1CON2bits.SEN = 1;
 10585     0CD7  0024               	movlb	4	; select bank4
 10586     0CD8  1416               	bsf	22,0	;volatile
 10587     0CD9                     l288:
 10588     0CD9  0008               	return
 10589     0CDA                     __end_of_I2C1_StartSend:
 10590                           
 10591                           	psect	text43
 10592     0DFE                     __ptext43:	
 10593 ;; *************** function _I2C1_IsBusy *****************
 10594 ;; Defined at:
 10595 ;;		line 206 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;		None
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;		None
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      _Bool 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10609 ;;      Params:         0       0       0       0       0       0       0       0
 10610 ;;      Locals:         1       0       0       0       0       0       0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0
 10612 ;;      Totals:         1       0       0       0       0       0       0       0
 10613 ;;Total ram usage:        1 bytes
 10614 ;; Hardware stack levels used: 1
 10615 ;; Hardware stack levels required when called: 7
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_I2C1_Write
 10620 ;;		_I2C1_Read
 10621 ;;		_I2C1_WriteRead
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625     0DFE                     _I2C1_IsBusy:	
 10626                           ;psect for function _I2C1_IsBusy
 10627                           
 10628     0DFE                     l3556:	
 10629                           ;incstack = 0
 10630                           ; Regs used in _I2C1_IsBusy: [wreg+status,2+status,0]
 10631                           
 10632                           
 10633                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return i2c1Status.busy || SSP1STATbit
      +                          s.S;
 10634     0DFE  01F4               	clrf	_I2C1_IsBusy$646
 10635     0DFF  0AF4               	incf	_I2C1_IsBusy$646,f
 10636     0E00                     l3558:
 10637     0E00  0020               	movlb	0	; select bank0
 10638     0E01  0852               	movf	_i2c1Status,w	;volatile
 10639     0E02  1D03               	btfss	3,2
 10640     0E03  2E05               	goto	u1551
 10641     0E04  2E06               	goto	u1550
 10642     0E05                     u1551:
 10643     0E05  2E0C               	goto	l3564
 10644     0E06                     u1550:
 10645     0E06                     l3560:
 10646     0E06  0024               	movlb	4	; select bank4
 10647     0E07  1994               	btfsc	20,3	;volatile
 10648     0E08  2E0A               	goto	u1561
 10649     0E09  2E0B               	goto	u1560
 10650     0E0A                     u1561:
 10651     0E0A  2E0C               	goto	l3564
 10652     0E0B                     u1560:
 10653     0E0B                     l3562:
 10654     0E0B  01F4               	clrf	_I2C1_IsBusy$646
 10655     0E0C                     l3564:
 10656     0E0C  0874               	movf	_I2C1_IsBusy$646,w
 10657     0E0D                     l200:
 10658     0E0D  0008               	return
 10659     0E0E                     __end_of_I2C1_IsBusy:
 10660                           
 10661                           	psect	text44
 10662     01AC                     __ptext44:	
 10663 ;; *************** function _Parse *****************
 10664 ;; Defined at:
 10665 ;;		line 74 in file "parser.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  data            1    wreg     unsigned char 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  data            1    8[BANK0 ] unsigned char 
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      _Bool 
 10672 ;; Registers used:
 10673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10679 ;;      Params:         0       0       0       0       0       0       0       0
 10680 ;;      Locals:         0       1       0       0       0       0       0       0
 10681 ;;      Temps:          0       2       0       0       0       0       0       0
 10682 ;;      Totals:         0       3       0       0       0       0       0       0
 10683 ;;Total ram usage:        3 bytes
 10684 ;; Hardware stack levels used: 1
 10685 ;; Hardware stack levels required when called: 11
 10686 ;; This function calls:
 10687 ;;		_SendMsg
 10688 ;;		_SendNack
 10689 ;; This function is called by:
 10690 ;;		_main
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694     01AC                     _Parse:	
 10695                           ;psect for function _Parse
 10696                           
 10697                           
 10698                           ;incstack = 0
 10699                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10700                           ;Parse@data stored from wreg
 10701     01AC  0020               	movlb	0	; select bank0
 10702     01AD  00A8               	movwf	Parse@data
 10703     01AE                     l3974:
 10704                           
 10705                           ;parser.c: 75:     switch (parser.m_State) {
 10706     01AE  2A4A               	goto	l4042
 10707     01AF                     l3976:
 10708                           
 10709                           ;parser.c: 77:             if (data == 0x01) {
 10710     01AF  0328               	decf	Parse@data,w
 10711     01B0  1D03               	btfss	3,2
 10712     01B1  29B3               	goto	u2011
 10713     01B2  29B4               	goto	u2010
 10714     01B3                     u2011:
 10715     01B3  29BA               	goto	l3982
 10716     01B4                     u2010:
 10717     01B4                     l3978:
 10718                           
 10719                           ;parser.c: 78:                 parser.m_State = WAIT_ID;
 10720     01B4  0021               	movlb	1	; select bank1
 10721     01B5  01B8               	clrf	_parser^(0+128)
 10722     01B6  0AB8               	incf	_parser^(0+128),f
 10723     01B7                     l3980:
 10724                           
 10725                           ;parser.c: 79:                 parser.m_bSum = 0x00;
 10726     01B7  01BE               	clrf	(_parser^(0+128)+6)
 10727                           
 10728                           ;parser.c: 80:                 parser.m_bDataIndex = 0;
 10729     01B8  01BA               	clrf	(_parser^(0+128)+2)
 10730                           
 10731                           ;parser.c: 81:             } else
 10732     01B9  2A62               	goto	l4044
 10733     01BA                     l3982:
 10734                           
 10735                           ;parser.c: 82:                 SendNack(WRONG_MESSAGE);
 10736     01BA  3002               	movlw	2
 10737     01BB  318D  2590  3181   	fcall	_SendNack
 10738     01BE  2A62               	goto	l4044
 10739     01BF                     l3984:
 10740                           
 10741                           ;parser.c: 86:             parser.m_MsgID = data;
 10742     01BF  0828               	movf	Parse@data,w
 10743     01C0  0021               	movlb	1	; select bank1
 10744     01C1  00B9               	movwf	(_parser^(0+128)+1)
 10745     01C2                     l3986:
 10746                           
 10747                           ;parser.c: 87:             parser.m_bEcho = 1;
 10748     01C2  01BF               	clrf	(_parser^(0+128)+7)
 10749     01C3  0ABF               	incf	(_parser^(0+128)+7),f
 10750                           
 10751                           ;parser.c: 89:             parser.m_State = WAIT_VALUE;
 10752     01C4  3002               	movlw	2
 10753     01C5  00B8               	movwf	_parser^(0+128)
 10754                           
 10755                           ;parser.c: 91:             switch ((uint8_t) parser.m_MsgID) {
 10756     01C6  29E5               	goto	l4006
 10757     01C7                     l3988:
 10758                           
 10759                           ;parser.c: 95:                     parser.m_bEcho = 0;
 10760     01C7  01BF               	clrf	(_parser^(0+128)+7)
 10761                           
 10762                           ;parser.c: 96:                     parser.m_bReplySize = 0;
 10763     01C8  01BC               	clrf	(_parser^(0+128)+4)
 10764                           
 10765                           ;parser.c: 97:                     parser.m_bDataSize = 0;
 10766     01C9  01BB               	clrf	(_parser^(0+128)+3)
 10767     01CA                     l3990:
 10768                           
 10769                           ;parser.c: 98:                     parser.m_State = WAIT_CKSUM;
 10770     01CA  3003               	movlw	3
 10771     01CB  00B8               	movwf	_parser^(0+128)
 10772                           
 10773                           ;parser.c: 99:                     break;
 10774     01CC  2A62               	goto	l4044
 10775     01CD                     l792:	
 10776                           ;parser.c: 103:                 case NVT_RFDU_SSPAPout:
 10777                           
 10778     01CD                     l3992:
 10779                           
 10780                           ;parser.c: 105:                     parser.m_bEcho = 0;
 10781     01CD  01BF               	clrf	(_parser^(0+128)+7)
 10782     01CE                     l3994:
 10783                           
 10784                           ;parser.c: 107:                     parser.m_bReplySize = 1;
 10785     01CE  01BC               	clrf	(_parser^(0+128)+4)
 10786     01CF  0ABC               	incf	(_parser^(0+128)+4),f
 10787     01D0                     l3996:
 10788                           
 10789                           ;parser.c: 108:                     parser.m_bDataSize = 1;
 10790     01D0  01BB               	clrf	(_parser^(0+128)+3)
 10791     01D1  0ABB               	incf	(_parser^(0+128)+3),f
 10792                           
 10793                           ;parser.c: 109:                     break;
 10794     01D2  2A62               	goto	l4044
 10795     01D3                     l3998:
 10796                           
 10797                           ;parser.c: 112:                     parser.m_bReplySize = 2;
 10798     01D3  3002               	movlw	2
 10799     01D4  00BC               	movwf	(_parser^(0+128)+4)
 10800                           
 10801                           ;parser.c: 113:                     parser.m_bDataSize = 2;
 10802     01D5  3002               	movlw	2
 10803     01D6  00BB               	movwf	(_parser^(0+128)+3)
 10804                           
 10805                           ;parser.c: 114:                     break;
 10806     01D7  2A62               	goto	l4044
 10807     01D8                     l4000:
 10808                           
 10809                           ;parser.c: 117:                     parser.m_bReplySize = 4;
 10810     01D8  3004               	movlw	4
 10811     01D9  00BC               	movwf	(_parser^(0+128)+4)
 10812                           
 10813                           ;parser.c: 118:                     parser.m_bDataSize = 4;
 10814     01DA  3004               	movlw	4
 10815     01DB  00BB               	movwf	(_parser^(0+128)+3)
 10816                           
 10817                           ;parser.c: 119:                     break;
 10818     01DC  2A62               	goto	l4044
 10819     01DD                     l4002:
 10820                           
 10821                           ;parser.c: 122:                     parser.m_bReplySize = 5;
 10822     01DD  3005               	movlw	5
 10823     01DE  00BC               	movwf	(_parser^(0+128)+4)
 10824                           
 10825                           ;parser.c: 123:                     parser.m_bDataSize = 5;
 10826     01DF  3005               	movlw	5
 10827     01E0  00BB               	movwf	(_parser^(0+128)+3)
 10828                           
 10829                           ;parser.c: 124:                     break;
 10830     01E1  2A62               	goto	l4044
 10831     01E2                     l4004:
 10832                           
 10833                           ;parser.c: 127:                     parser.m_State = WAIT_SOM;
 10834     01E2  0021               	movlb	1	; select bank1
 10835     01E3  01B8               	clrf	_parser^(0+128)
 10836                           
 10837                           ;parser.c: 128:             }
 10838     01E4  2A62               	goto	l4044
 10839     01E5                     l4006:
 10840     01E5  0839               	movf	(_parser^(0+128)+1),w
 10841                           
 10842                           ; Switch size 1, requested type "simple"
 10843                           ; Number of cases is 11, Range of values is 1 to 17
 10844                           ; switch strategies available:
 10845                           ; Name         Instructions Cycles
 10846                           ; simple_byte           34    18 (average)
 10847                           ; direct_byte           43     9 (fixed)
 10848                           ; jumptable            263     9 (fixed)
 10849                           ;	Chosen strategy is simple_byte
 10850     01E6  3A01               	xorlw	1	; case 1
 10851     01E7  1903               	skipnz
 10852     01E8  29D3               	goto	l3998
 10853     01E9  3A03               	xorlw	3	; case 2
 10854     01EA  1903               	skipnz
 10855     01EB  29CD               	goto	l792
 10856     01EC  3A01               	xorlw	1	; case 3
 10857     01ED  1903               	skipnz
 10858     01EE  29CD               	goto	l3992
 10859     01EF  3A07               	xorlw	7	; case 4
 10860     01F0  1903               	skipnz
 10861     01F1  29CD               	goto	l3992
 10862     01F2  3A01               	xorlw	1	; case 5
 10863     01F3  1903               	skipnz
 10864     01F4  29C7               	goto	l3988
 10865     01F5  3A03               	xorlw	3	; case 6
 10866     01F6  1903               	skipnz
 10867     01F7  29C7               	goto	l3988
 10868     01F8  3A01               	xorlw	1	; case 7
 10869     01F9  1903               	skipnz
 10870     01FA  29CE               	goto	l3994
 10871     01FB  3A0F               	xorlw	15	; case 8
 10872     01FC  1903               	skipnz
 10873     01FD  29D8               	goto	l4000
 10874     01FE  3A01               	xorlw	1	; case 9
 10875     01FF  1903               	skipnz
 10876     0200  29CD               	goto	l3992
 10877     0201  3A03               	xorlw	3	; case 10
 10878     0202  1903               	skipnz
 10879     0203  29DD               	goto	l4002
 10880     0204  3A1B               	xorlw	27	; case 17
 10881     0205  1903               	skipnz
 10882     0206  29C7               	goto	l3988
 10883     0207  29E2               	goto	l4004
 10884     0208                     l4008:
 10885                           
 10886                           ;parser.c: 132:             parserDataBuffer[parser.m_bDataIndex] = data;
 10887     0208  0021               	movlb	1	; select bank1
 10888     0209  083A               	movf	(_parser^(0+128)+2),w
 10889     020A  3ECA               	addlw	(low (_parserDataBuffer| 0))& (0+255)
 10890     020B  0086               	movwf	6
 10891     020C  0187               	clrf	7
 10892     020D  0020               	movlb	0	; select bank0
 10893     020E  0828               	movf	Parse@data,w
 10894     020F  0081               	movwf	1
 10895     0210                     l4010:
 10896                           
 10897                           ;parser.c: 133:             parser.m_bSum += data;
 10898     0210  0828               	movf	Parse@data,w
 10899     0211  00A6               	movwf	??_Parse
 10900     0212  0826               	movf	??_Parse,w
 10901     0213  0021               	movlb	1	; select bank1
 10902     0214  07BE               	addwf	(_parser^(0+128)+6),f
 10903     0215                     l4012:
 10904                           
 10905                           ;parser.c: 134:             parser.m_bDataIndex++;
 10906     0215  3001               	movlw	1
 10907     0216  0020               	movlb	0	; select bank0
 10908     0217  00A6               	movwf	??_Parse
 10909     0218  0826               	movf	??_Parse,w
 10910     0219  0021               	movlb	1	; select bank1
 10911     021A  07BA               	addwf	(_parser^(0+128)+2),f
 10912     021B                     l4014:
 10913                           
 10914                           ;parser.c: 135:             parser.m_bDataSize--;
 10915     021B  3001               	movlw	1
 10916     021C  02BB               	subwf	(_parser^(0+128)+3),f
 10917     021D                     l4016:
 10918                           
 10919                           ;parser.c: 136:             if (parser.m_bDataSize == 0)
 10920     021D  083B               	movf	(_parser^(0+128)+3),w
 10921     021E  1D03               	btfss	3,2
 10922     021F  2A21               	goto	u2021
 10923     0220  2A22               	goto	u2020
 10924     0221                     u2021:
 10925     0221  2A62               	goto	l4044
 10926     0222                     u2020:
 10927     0222  29CA               	goto	l3990
 10928     0223                     l4020:
 10929                           
 10930                           ;parser.c: 141:             parser.m_bCkSum = data;
 10931     0223  0828               	movf	Parse@data,w
 10932     0224  0021               	movlb	1	; select bank1
 10933     0225  00BD               	movwf	(_parser^(0+128)+5)
 10934     0226                     l4022:
 10935                           
 10936                           ;parser.c: 142:             parser.m_State = WAIT_SOM;
 10937     0226  01B8               	clrf	_parser^(0+128)
 10938     0227                     l4024:
 10939                           
 10940                           ;parser.c: 144:             if (parser.m_bSum == parser.m_bCkSum) {
 10941     0227  083E               	movf	(_parser^(0+128)+6),w
 10942     0228  063D               	xorwf	(_parser^(0+128)+5),w
 10943     0229  1D03               	skipz
 10944     022A  2A2C               	goto	u2031
 10945     022B  2A2D               	goto	u2030
 10946     022C                     u2031:
 10947     022C  2A40               	goto	l4036
 10948     022D                     u2030:
 10949     022D                     l4026:
 10950                           
 10951                           ;parser.c: 145:                 if (parser.m_bEcho)
 10952     022D  083F               	movf	(_parser^(0+128)+7),w
 10953     022E  1903               	btfsc	3,2
 10954     022F  2A31               	goto	u2041
 10955     0230  2A32               	goto	u2040
 10956     0231                     u2041:
 10957     0231  2A3E               	goto	l4030
 10958     0232                     u2040:
 10959     0232                     l4028:
 10960                           
 10961                           ;parser.c: 146:                     SendMsg(parser.m_MsgID, parserDataBuffer, parser.m_b
      +                          ReplySize);
 10962     0232  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
 10963     0233  0020               	movlb	0	; select bank0
 10964     0234  00A0               	movwf	SendMsg@data
 10965     0235  0021               	movlb	1	; select bank1
 10966     0236  083C               	movf	(_parser^(0+128)+4),w
 10967     0237  0020               	movlb	0	; select bank0
 10968     0238  00A1               	movwf	SendMsg@data_len
 10969     0239  0021               	movlb	1	; select bank1
 10970     023A  0839               	movf	(_parser^(0+128)+1),w
 10971     023B  3186  267C  3181   	fcall	_SendMsg
 10972     023E                     l4030:
 10973                           
 10974                           ;parser.c: 148:                 return 1;
 10975     023E  3001               	movlw	1
 10976     023F  2A63               	goto	l804
 10977     0240                     l4036:
 10978                           
 10979                           ;parser.c: 150:                 SendNack(CKSUM_ERR);
 10980     0240  3001               	movlw	1
 10981     0241  318D  2590  3181   	fcall	_SendNack
 10982     0244  2A62               	goto	l4044
 10983     0245                     l4038:
 10984                           
 10985                           ;parser.c: 154:             SendNack(WRONG_MESSAGE);
 10986     0245  3002               	movlw	2
 10987     0246  318D  2590  3181   	fcall	_SendNack
 10988     0249  29E2               	goto	l4004
 10989     024A                     l4042:
 10990     024A  0021               	movlb	1	; select bank1
 10991     024B  0838               	movf	_parser^(0+128),w
 10992     024C  0020               	movlb	0	; select bank0
 10993     024D  00A6               	movwf	??_Parse
 10994     024E  01A7               	clrf	??_Parse+1
 10995                           
 10996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10997                           ; Switch size 1, requested type "simple"
 10998                           ; Number of cases is 1, Range of values is 0 to 0
 10999                           ; switch strategies available:
 11000                           ; Name         Instructions Cycles
 11001                           ; simple_byte            4     3 (average)
 11002                           ; direct_byte            8     6 (fixed)
 11003                           ; jumptable            260     6 (fixed)
 11004                           ;	Chosen strategy is simple_byte
 11005     024F  0827               	movf	??_Parse+1,w
 11006     0250  3A00               	xorlw	0	; case 0
 11007     0251  1903               	skipnz
 11008     0252  2A54               	goto	l4228
 11009     0253  2A45               	goto	l4038
 11010     0254                     l4228:
 11011                           
 11012                           ; Switch size 1, requested type "simple"
 11013                           ; Number of cases is 4, Range of values is 0 to 3
 11014                           ; switch strategies available:
 11015                           ; Name         Instructions Cycles
 11016                           ; simple_byte           13     7 (average)
 11017                           ; direct_byte           14     6 (fixed)
 11018                           ; jumptable            260     6 (fixed)
 11019                           ;	Chosen strategy is simple_byte
 11020     0254  0826               	movf	??_Parse,w
 11021     0255  3A00               	xorlw	0	; case 0
 11022     0256  1903               	skipnz
 11023     0257  29AF               	goto	l3976
 11024     0258  3A01               	xorlw	1	; case 1
 11025     0259  1903               	skipnz
 11026     025A  29BF               	goto	l3984
 11027     025B  3A03               	xorlw	3	; case 2
 11028     025C  1903               	skipnz
 11029     025D  2A08               	goto	l4008
 11030     025E  3A01               	xorlw	1	; case 3
 11031     025F  1903               	skipnz
 11032     0260  2A23               	goto	l4020
 11033     0261  2A45               	goto	l4038
 11034     0262                     l4044:
 11035                           
 11036                           ;parser.c: 158:     return 0;
 11037     0262  3000               	movlw	0
 11038     0263                     l804:
 11039     0263  0008               	return
 11040     0264                     __end_of_Parse:
 11041                           
 11042                           	psect	text45
 11043     0D90                     __ptext45:	
 11044 ;; *************** function _SendNack *****************
 11045 ;; Defined at:
 11046 ;;		line 62 in file "parser.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  error           1    wreg     unsigned char 
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;  error           1    5[BANK0 ] unsigned char 
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  1    wreg      void 
 11053 ;; Registers used:
 11054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11060 ;;      Params:         0       0       0       0       0       0       0       0
 11061 ;;      Locals:         0       1       0       0       0       0       0       0
 11062 ;;      Temps:          0       0       0       0       0       0       0       0
 11063 ;;      Totals:         0       1       0       0       0       0       0       0
 11064 ;;Total ram usage:        1 bytes
 11065 ;; Hardware stack levels used: 1
 11066 ;; Hardware stack levels required when called: 10
 11067 ;; This function calls:
 11068 ;;		_SendMsg
 11069 ;; This function is called by:
 11070 ;;		_Parse
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074     0D90                     _SendNack:	
 11075                           ;psect for function _SendNack
 11076                           
 11077                           
 11078                           ;incstack = 0
 11079                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11080                           ;SendNack@error stored from wreg
 11081     0D90  0020               	movlb	0	; select bank0
 11082     0D91  00A5               	movwf	SendNack@error
 11083     0D92                     l3918:
 11084                           
 11085                           ;parser.c: 63:     SendMsg(RFDU_NVT_NACK, &error, 1);
 11086     0D92  3025               	movlw	(low (SendNack@error| 0))& (0+255)
 11087     0D93  00A0               	movwf	SendMsg@data
 11088     0D94  01A1               	clrf	SendMsg@data_len
 11089     0D95  0AA1               	incf	SendMsg@data_len,f
 11090     0D96  300B               	movlw	11
 11091     0D97  3186  267C  318D   	fcall	_SendMsg
 11092     0D9A                     l776:
 11093     0D9A  0008               	return
 11094     0D9B                     __end_of_SendNack:
 11095                           
 11096                           	psect	text46
 11097     067C                     __ptext46:	
 11098 ;; *************** function _SendMsg *****************
 11099 ;; Defined at:
 11100 ;;		line 36 in file "parser.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  msg_id          1    wreg     unsigned char 
 11103 ;;  data            1    0[BANK0 ] PTR unsigned char 
 11104 ;;		 -> SendNack@error(1), parserDataBuffer(5), ProcessMsg@payload(6), 
 11105 ;;  data_len        1    1[BANK0 ] unsigned char 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  msg_id          1    4[BANK0 ] unsigned char 
 11108 ;;  sum             1    3[BANK0 ] unsigned char 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;                  1    wreg      void 
 11111 ;; Registers used:
 11112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11118 ;;      Params:         0       2       0       0       0       0       0       0
 11119 ;;      Locals:         0       2       0       0       0       0       0       0
 11120 ;;      Temps:          0       1       0       0       0       0       0       0
 11121 ;;      Totals:         0       5       0       0       0       0       0       0
 11122 ;;Total ram usage:        5 bytes
 11123 ;; Hardware stack levels used: 1
 11124 ;; Hardware stack levels required when called: 9
 11125 ;; This function calls:
 11126 ;;		_SendSync
 11127 ;; This function is called by:
 11128 ;;		_ProcessMsg
 11129 ;;		_SendNack
 11130 ;;		_Parse
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           
 11134     067C                     _SendMsg:	
 11135                           ;psect for function _SendMsg
 11136                           
 11137                           
 11138                           ;incstack = 0
 11139                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11140                           ;SendMsg@msg_id stored from wreg
 11141     067C  0020               	movlb	0	; select bank0
 11142     067D  00A4               	movwf	SendMsg@msg_id
 11143     067E                     l3686:
 11144                           
 11145                           ;parser.c: 37:     uint8_t sum = 0x00;
 11146     067E  01A3               	clrf	SendMsg@sum
 11147     067F                     l3688:
 11148                           
 11149                           ;parser.c: 39:     SendSync(0x01);
 11150     067F  3001               	movlw	1
 11151     0680  318E  260E  3186   	fcall	_SendSync
 11152     0683                     l3690:
 11153                           
 11154                           ;parser.c: 41:     SendSync(msg_id);
 11155     0683  0020               	movlb	0	; select bank0
 11156     0684  0824               	movf	SendMsg@msg_id,w
 11157     0685  318E  260E  3186   	fcall	_SendSync
 11158     0688                     l3692:
 11159                           
 11160                           ;parser.c: 43:     if (msg_id == RFDU_NVT_NACK)
 11161     0688  300B               	movlw	11
 11162     0689  0020               	movlb	0	; select bank0
 11163     068A  0624               	xorwf	SendMsg@msg_id,w
 11164     068B  1D03               	btfss	3,2
 11165     068C  2E8E               	goto	u1741
 11166     068D  2E8F               	goto	u1740
 11167     068E                     u1741:
 11168     068E  2E97               	goto	l3698
 11169     068F                     u1740:
 11170     068F                     l3694:
 11171                           
 11172                           ;parser.c: 44:     {;parser.c: 45:         SendSync(*data);
 11173     068F  0820               	movf	SendMsg@data,w
 11174     0690  0086               	movwf	6
 11175     0691  0187               	clrf	7
 11176     0692  0801               	movf	1,w
 11177     0693  318E  260E  3186   	fcall	_SendSync
 11178     0696  2EB7               	goto	l771
 11179     0697                     l3698:
 11180                           
 11181                           ;parser.c: 49:     for (; data_len > 0; data_len--) {
 11182     0697  0821               	movf	SendMsg@data_len,w
 11183     0698  1D03               	btfss	3,2
 11184     0699  2E9B               	goto	u1751
 11185     069A  2E9C               	goto	u1750
 11186     069B                     u1751:
 11187     069B  2E9D               	goto	l3702
 11188     069C                     u1750:
 11189     069C  2EB3               	goto	l3712
 11190     069D                     l3702:
 11191                           
 11192                           ;parser.c: 50:         SendSync(*data);
 11193     069D  0820               	movf	SendMsg@data,w
 11194     069E  0086               	movwf	6
 11195     069F  0187               	clrf	7
 11196     06A0  0801               	movf	1,w
 11197     06A1  318E  260E  3186   	fcall	_SendSync
 11198     06A4                     l3704:
 11199                           
 11200                           ;parser.c: 51:         sum += *data;
 11201     06A4  0020               	movlb	0	; select bank0
 11202     06A5  0820               	movf	SendMsg@data,w
 11203     06A6  0086               	movwf	6
 11204     06A7  0187               	clrf	7
 11205     06A8  0801               	movf	1,w
 11206     06A9  00A2               	movwf	??_SendMsg
 11207     06AA  0822               	movf	??_SendMsg,w
 11208     06AB  07A3               	addwf	SendMsg@sum,f
 11209     06AC                     l3706:
 11210                           
 11211                           ;parser.c: 52:         data++;
 11212     06AC  3001               	movlw	1
 11213     06AD  00A2               	movwf	??_SendMsg
 11214     06AE  0822               	movf	??_SendMsg,w
 11215     06AF  07A0               	addwf	SendMsg@data,f
 11216     06B0                     l3708:
 11217                           
 11218                           ;parser.c: 53:     }
 11219     06B0  3001               	movlw	1
 11220     06B1  02A1               	subwf	SendMsg@data_len,f
 11221     06B2  2E97               	goto	l3698
 11222     06B3                     l3712:
 11223                           
 11224                           ;parser.c: 55:     SendSync(sum);
 11225     06B3  0823               	movf	SendMsg@sum,w
 11226     06B4  318E  260E  3186   	fcall	_SendSync
 11227     06B7                     l771:
 11228     06B7  0008               	return
 11229     06B8                     __end_of_SendMsg:
 11230                           
 11231                           	psect	text47
 11232     0E0E                     __ptext47:	
 11233 ;; *************** function _SendSync *****************
 11234 ;; Defined at:
 11235 ;;		line 23 in file "parser.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  data            1    wreg     unsigned char 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  data            1    5[COMMON] unsigned char 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		wreg, status,2, status,0, pclath, cstack
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11249 ;;      Params:         0       0       0       0       0       0       0       0
 11250 ;;      Locals:         1       0       0       0       0       0       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0
 11252 ;;      Totals:         1       0       0       0       0       0       0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used: 1
 11255 ;; Hardware stack levels required when called: 8
 11256 ;; This function calls:
 11257 ;;		_EUSART_IsTxReady
 11258 ;;		_EUSART_Write
 11259 ;; This function is called by:
 11260 ;;		_SendMsg
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264     0E0E                     _SendSync:	
 11265                           ;psect for function _SendSync
 11266                           
 11267                           
 11268                           ;incstack = 0
 11269                           ; Regs used in _SendSync: [wreg+status,2+status,0+pclath+cstack]
 11270                           ;SendSync@data stored from wreg
 11271     0E0E  00F5               	movwf	SendSync@data
 11272     0E0F                     l3576:
 11273                           
 11274                           ;parser.c: 23: void SendSync(uint8_t data);parser.c: 24: {;parser.c: 25:     while(!EUSA
      +                          RT_IsTxReady())
 11275     0E0F  2E11               	goto	l3578
 11276     0E10                     l765:
 11277                           
 11278                           ;parser.c: 26:         __nop();
 11279     0E10  0000               	nop
 11280     0E11                     l3578:
 11281                           
 11282                           ;parser.c: 25:     while(!EUSART_IsTxReady())
 11283     0E11  318D  25EF  318E   	fcall	_EUSART_IsTxReady
 11284     0E14  3A00               	xorlw	0
 11285     0E15  1903               	skipnz
 11286     0E16  2E18               	goto	u1571
 11287     0E17  2E19               	goto	u1570
 11288     0E18                     u1571:
 11289     0E18  2E10               	goto	l765
 11290     0E19                     u1570:
 11291     0E19                     l3580:
 11292                           
 11293                           ;parser.c: 27:     EUSART_Write(data);
 11294     0E19  0875               	movf	SendSync@data,w
 11295     0E1A  00F4               	movwf	EUSART_Write@txData
 11296     0E1B  318D  2501  318E   	fcall	_EUSART_Write
 11297     0E1E                     l767:
 11298     0E1E  0008               	return
 11299     0E1F                     __end_of_SendSync:
 11300                           
 11301                           	psect	text48
 11302     0D01                     __ptext48:	
 11303 ;; *************** function _EUSART_Write *****************
 11304 ;; Defined at:
 11305 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  txData          1    4[COMMON] unsigned char 
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      void 
 11312 ;; Registers used:
 11313 ;;		wreg
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11319 ;;      Params:         1       0       0       0       0       0       0       0
 11320 ;;      Locals:         0       0       0       0       0       0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0
 11322 ;;      Totals:         1       0       0       0       0       0       0       0
 11323 ;;Total ram usage:        1 bytes
 11324 ;; Hardware stack levels used: 1
 11325 ;; Hardware stack levels required when called: 7
 11326 ;; This function calls:
 11327 ;;		Nothing
 11328 ;; This function is called by:
 11329 ;;		_SendSync
 11330 ;;		_EUSART_sendMsg
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334     0D01                     _EUSART_Write:	
 11335                           ;psect for function _EUSART_Write
 11336                           
 11337     0D01                     l3542:	
 11338                           ;incstack = 0
 11339                           ; Regs used in _EUSART_Write: [wreg]
 11340                           
 11341                           
 11342                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
 11343     0D01  0874               	movf	EUSART_Write@txData,w
 11344     0D02  0023               	movlb	3	; select bank3
 11345     0D03  009A               	movwf	26	;volatile
 11346     0D04                     l613:
 11347     0D04  0008               	return
 11348     0D05                     __end_of_EUSART_Write:
 11349                           
 11350                           	psect	text49
 11351     0DEF                     __ptext49:	
 11352 ;; *************** function _EUSART_IsTxReady *****************
 11353 ;; Defined at:
 11354 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;		None
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;		None
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  1    wreg      _Bool 
 11361 ;; Registers used:
 11362 ;;		wreg, status,2
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11368 ;;      Params:         0       0       0       0       0       0       0       0
 11369 ;;      Locals:         1       0       0       0       0       0       0       0
 11370 ;;      Temps:          0       0       0       0       0       0       0       0
 11371 ;;      Totals:         1       0       0       0       0       0       0       0
 11372 ;;Total ram usage:        1 bytes
 11373 ;; Hardware stack levels used: 1
 11374 ;; Hardware stack levels required when called: 7
 11375 ;; This function calls:
 11376 ;;		Nothing
 11377 ;; This function is called by:
 11378 ;;		_SendSync
 11379 ;;		_EUSART_sendMsg
 11380 ;; This function uses a non-reentrant model
 11381 ;;
 11382                           
 11383     0DEF                     _EUSART_IsTxReady:	
 11384                           ;psect for function _EUSART_IsTxReady
 11385                           
 11386     0DEF                     l3530:	
 11387                           ;incstack = 0
 11388                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2]
 11389                           
 11390                           
 11391                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TXIF && TX1STAb
      +                          its.TXEN);
 11392     0DEF  01F4               	clrf	_EUSART_IsTxReady$1324
 11393     0DF0                     l3532:
 11394     0DF0  0020               	movlb	0	; select bank0
 11395     0DF1  1E10               	btfss	16,4	;volatile
 11396     0DF2  2DF4               	goto	u1531
 11397     0DF3  2DF5               	goto	u1530
 11398     0DF4                     u1531:
 11399     0DF4  2DFC               	goto	l3538
 11400     0DF5                     u1530:
 11401     0DF5                     l3534:
 11402     0DF5  0023               	movlb	3	; select bank3
 11403     0DF6  1E9E               	btfss	30,5	;volatile
 11404     0DF7  2DF9               	goto	u1541
 11405     0DF8  2DFA               	goto	u1540
 11406     0DF9                     u1541:
 11407     0DF9  2DFC               	goto	l3538
 11408     0DFA                     u1540:
 11409     0DFA                     l3536:
 11410     0DFA  01F4               	clrf	_EUSART_IsTxReady$1324
 11411     0DFB  0AF4               	incf	_EUSART_IsTxReady$1324,f
 11412     0DFC                     l3538:
 11413     0DFC  0874               	movf	_EUSART_IsTxReady$1324,w
 11414     0DFD                     l597:
 11415     0DFD  0008               	return
 11416     0DFE                     __end_of_EUSART_IsTxReady:
 11417                           
 11418                           	psect	text50
 11419     0F7C                     __ptext50:	
 11420 ;; *************** function _EUSART_Read *****************
 11421 ;; Defined at:
 11422 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;		None
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;		None
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  1    wreg      unsigned char 
 11429 ;; Registers used:
 11430 ;;		wreg, status,2, status,0, pclath, cstack
 11431 ;; Tracked objects:
 11432 ;;		On entry : 0/0
 11433 ;;		On exit  : 0/0
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11436 ;;      Params:         0       0       0       0       0       0       0       0
 11437 ;;      Locals:         0       0       0       0       0       0       0       0
 11438 ;;      Temps:          0       0       0       0       0       0       0       0
 11439 ;;      Totals:         0       0       0       0       0       0       0       0
 11440 ;;Total ram usage:        0 bytes
 11441 ;; Hardware stack levels used: 1
 11442 ;; Hardware stack levels required when called: 8
 11443 ;; This function calls:
 11444 ;;		NULL
 11445 ;;		_EUSART_DefaultFramingErrorCallback
 11446 ;;		_EUSART_DefaultOverrunErrorCallback
 11447 ;; This function is called by:
 11448 ;;		_main
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452     0F7C                     _EUSART_Read:	
 11453                           ;psect for function _EUSART_Read
 11454                           
 11455     0F7C                     l3176:	
 11456                           ;incstack = 0
 11457                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 11458                           
 11459                           
 11460                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 11461     0F7C  0020               	movlb	0	; select bank0
 11462     0F7D  01E0               	clrf	_eusartRxLastError	;volatile
 11463     0F7E  01E1               	clrf	_eusartRxLastError+1	;volatile
 11464     0F7F                     l3178:
 11465                           
 11466                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 11467     0F7F  0023               	movlb	3	; select bank3
 11468     0F80  1C9D               	btfss	29,1	;volatile
 11469     0F81  2F83               	goto	u1291
 11470     0F82  2F84               	goto	u1290
 11471     0F83                     u1291:
 11472     0F83  2F91               	goto	l3186
 11473     0F84                     u1290:
 11474     0F84                     l3180:
 11475                           
 11476                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 11477     0F84  0020               	movlb	0	; select bank0
 11478     0F85  1560               	bsf	_eusartRxLastError,2	;volatile
 11479     0F86                     l3182:
 11480                           
 11481                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 11482     0F86  085E               	movf	_EUSART_OverrunErrorHandler,w
 11483     0F87  045F               	iorwf	_EUSART_OverrunErrorHandler+1,w
 11484     0F88  1903               	btfsc	3,2
 11485     0F89  2F8B               	goto	u1301
 11486     0F8A  2F8C               	goto	u1300
 11487     0F8B                     u1301:
 11488     0F8B  2F91               	goto	l3186
 11489     0F8C                     u1300:
 11490     0F8C                     l3184:
 11491                           
 11492                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 11493     0F8C  085F               	movf	_EUSART_OverrunErrorHandler+1,w
 11494     0F8D  008A               	movwf	10
 11495     0F8E  085E               	movf	_EUSART_OverrunErrorHandler,w
 11496     0F8F  000A               	callw
 11497     0F90  318F               	pagesel	$
 11498     0F91                     l3186:
 11499                           
 11500                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 11501     0F91  0023               	movlb	3	; select bank3
 11502     0F92  1D1D               	btfss	29,2	;volatile
 11503     0F93  2F95               	goto	u1311
 11504     0F94  2F96               	goto	u1310
 11505     0F95                     u1311:
 11506     0F95  2FA3               	goto	l3194
 11507     0F96                     u1310:
 11508     0F96                     l3188:
 11509                           
 11510                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 11511     0F96  0020               	movlb	0	; select bank0
 11512     0F97  14E0               	bsf	_eusartRxLastError,1	;volatile
 11513     0F98                     l3190:
 11514                           
 11515                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 11516     0F98  0876               	movf	_EUSART_FramingErrorHandler,w
 11517     0F99  0477               	iorwf	_EUSART_FramingErrorHandler+1,w
 11518     0F9A  1903               	btfsc	3,2
 11519     0F9B  2F9D               	goto	u1321
 11520     0F9C  2F9E               	goto	u1320
 11521     0F9D                     u1321:
 11522     0F9D  2FA3               	goto	l3194
 11523     0F9E                     u1320:
 11524     0F9E                     l3192:
 11525                           
 11526                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 11527     0F9E  0877               	movf	_EUSART_FramingErrorHandler+1,w
 11528     0F9F  008A               	movwf	10
 11529     0FA0  0876               	movf	_EUSART_FramingErrorHandler,w
 11530     0FA1  000A               	callw
 11531     0FA2  318F               	pagesel	$
 11532     0FA3                     l3194:
 11533                           
 11534                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 11535     0FA3  0023               	movlb	3	; select bank3
 11536     0FA4  0819               	movf	25,w	;volatile
 11537     0FA5                     l610:
 11538     0FA5  0008               	return
 11539     0FA6                     __end_of_EUSART_Read:
 11540                           
 11541                           	psect	text51
 11542     0CFD                     __ptext51:	
 11543 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 11544 ;; Defined at:
 11545 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;		None
 11548 ;; Auto vars:     Size  Location     Type
 11549 ;;		None
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  1    wreg      void 
 11552 ;; Registers used:
 11553 ;;		None
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11559 ;;      Params:         0       0       0       0       0       0       0       0
 11560 ;;      Locals:         0       0       0       0       0       0       0       0
 11561 ;;      Temps:          0       0       0       0       0       0       0       0
 11562 ;;      Totals:         0       0       0       0       0       0       0       0
 11563 ;;Total ram usage:        0 bytes
 11564 ;; Hardware stack levels used: 1
 11565 ;; Hardware stack levels required when called: 7
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		_EUSART_Initialize
 11570 ;;		_EUSART_Read
 11571 ;; This function uses a non-reentrant model
 11572 ;;
 11573                           
 11574     0CFD                     _EUSART_DefaultOverrunErrorCallback:	
 11575                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11576                           
 11577     0CFD                     l3022:	
 11578                           ;incstack = 0
 11579                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11580                           
 11581                           
 11582                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 11583     0CFD  0023               	movlb	3	; select bank3
 11584     0CFE  121D               	bcf	29,4	;volatile
 11585                           
 11586                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 11587     0CFF  161D               	bsf	29,4	;volatile
 11588     0D00                     l619:
 11589     0D00  0008               	return
 11590     0D01                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11591                           
 11592                           	psect	text52
 11593     0003                     __ptext52:	
 11594 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11595 ;; Defined at:
 11596 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;		None
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;		None
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  1    wreg      void 
 11603 ;; Registers used:
 11604 ;;		None
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11610 ;;      Params:         0       0       0       0       0       0       0       0
 11611 ;;      Locals:         0       0       0       0       0       0       0       0
 11612 ;;      Temps:          0       0       0       0       0       0       0       0
 11613 ;;      Totals:         0       0       0       0       0       0       0       0
 11614 ;;Total ram usage:        0 bytes
 11615 ;; Hardware stack levels used: 1
 11616 ;; Hardware stack levels required when called: 7
 11617 ;; This function calls:
 11618 ;;		Nothing
 11619 ;; This function is called by:
 11620 ;;		_EUSART_Initialize
 11621 ;;		_EUSART_Read
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625     0003                     _EUSART_DefaultFramingErrorCallback:	
 11626                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11627                           
 11628     0003                     l616:	
 11629                           ;incstack = 0
 11630                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11631                           
 11632     0003  0008               	return
 11633     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11634                           
 11635                           	psect	text53
 11636     0D13                     __ptext53:	
 11637 ;; *************** function _EUSART_IsRxReady *****************
 11638 ;; Defined at:
 11639 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;		None
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;		None
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  1    wreg      _Bool 
 11646 ;; Registers used:
 11647 ;;		wreg, status,2, status,0
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11653 ;;      Params:         0       0       0       0       0       0       0       0
 11654 ;;      Locals:         0       0       0       0       0       0       0       0
 11655 ;;      Temps:          0       0       0       0       0       0       0       0
 11656 ;;      Totals:         0       0       0       0       0       0       0       0
 11657 ;;Total ram usage:        0 bytes
 11658 ;; Hardware stack levels used: 1
 11659 ;; Hardware stack levels required when called: 7
 11660 ;; This function calls:
 11661 ;;		Nothing
 11662 ;; This function is called by:
 11663 ;;		_main
 11664 ;; This function uses a non-reentrant model
 11665 ;;
 11666                           
 11667     0D13                     _EUSART_IsRxReady:	
 11668                           ;psect for function _EUSART_IsRxReady
 11669                           
 11670     0D13                     l3172:	
 11671                           ;incstack = 0
 11672                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11673                           
 11674                           
 11675                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 11676     0D13  0020               	movlb	0	; select bank0
 11677     0D14  0E10               	swapf	16,w	;volatile
 11678     0D15  0C89               	rrf	9,f
 11679     0D16  3901               	andlw	1
 11680     0D17                     l592:
 11681     0D17  0008               	return
 11682     0D18                     __end_of_EUSART_IsRxReady:
 11683                           
 11684                           	psect	intentry
 11685     0004                     __pintentry:	
 11686 ;; *************** function _INTERRUPT_InterruptManager *****************
 11687 ;; Defined at:
 11688 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;		None
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;		None
 11693 ;; Return value:  Size  Location     Type
 11694 ;;                  1    wreg      void 
 11695 ;; Registers used:
 11696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11702 ;;      Params:         0       0       0       0       0       0       0       0
 11703 ;;      Locals:         0       0       0       0       0       0       0       0
 11704 ;;      Temps:          0       0       0       0       0       0       0       0
 11705 ;;      Totals:         0       0       0       0       0       0       0       0
 11706 ;;Total ram usage:        0 bytes
 11707 ;; Hardware stack levels used: 1
 11708 ;; Hardware stack levels required when called: 6
 11709 ;; This function calls:
 11710 ;;		_ADC_ISR
 11711 ;;		_I2C1_ERROR_ISR
 11712 ;;		_I2C1_ISR
 11713 ;; This function is called by:
 11714 ;;		Interrupt level 1
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718     0004                     _INTERRUPT_InterruptManager:
 11719                           
 11720                           ;incstack = 0
 11721     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11722                           
 11723                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11724     0005  3180               	pagesel	$
 11725     0006                     i1l3362:
 11726                           
 11727                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11728     0006  1F0B               	btfss	11,6	;volatile
 11729     0007  2809               	goto	u142_21
 11730     0008  280A               	goto	u142_20
 11731     0009                     u142_21:
 11732     0009  2834               	goto	i1l455
 11733     000A                     u142_20:
 11734     000A                     i1l3364:
 11735                           
 11736                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11737     000A  0021               	movlb	1	; select bank1
 11738     000B  1F10               	btfss	16,6	;volatile
 11739     000C  280E               	goto	u143_21
 11740     000D  280F               	goto	u143_20
 11741     000E                     u143_21:
 11742     000E  2818               	goto	i1l448
 11743     000F                     u143_20:
 11744     000F                     i1l3366:
 11745     000F  0020               	movlb	0	; select bank0
 11746     0010  1F10               	btfss	16,6	;volatile
 11747     0011  2813               	goto	u144_21
 11748     0012  2814               	goto	u144_20
 11749     0013                     u144_21:
 11750     0013  2818               	goto	i1l448
 11751     0014                     u144_20:
 11752     0014                     i1l3368:
 11753                           
 11754                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 11755     0014  318D  25E1  3180   	fcall	_ADC_ISR
 11756                           
 11757                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 11758     0017  2834               	goto	i1l455
 11759     0018                     i1l448:	
 11760                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 11761                           
 11762     0018  0021               	movlb	1	; select bank1
 11763     0019  1D91               	btfss	17,3	;volatile
 11764     001A  281C               	goto	u145_21
 11765     001B  281D               	goto	u145_20
 11766     001C                     u145_21:
 11767     001C  2826               	goto	i1l450
 11768     001D                     u145_20:
 11769     001D                     i1l3370:
 11770     001D  0020               	movlb	0	; select bank0
 11771     001E  1D91               	btfss	17,3	;volatile
 11772     001F  2821               	goto	u146_21
 11773     0020  2822               	goto	u146_20
 11774     0021                     u146_21:
 11775     0021  2826               	goto	i1l450
 11776     0022                     u146_20:
 11777     0022                     i1l3372:
 11778                           
 11779                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 11780     0022  318C  24F5  3180   	fcall	_I2C1_ERROR_ISR
 11781                           
 11782                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 11783     0025  2834               	goto	i1l455
 11784     0026                     i1l450:	
 11785                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 11786                           
 11787     0026  0021               	movlb	1	; select bank1
 11788     0027  1D90               	btfss	16,3	;volatile
 11789     0028  282A               	goto	u147_21
 11790     0029  282B               	goto	u147_20
 11791     002A                     u147_21:
 11792     002A  2834               	goto	i1l449
 11793     002B                     u147_20:
 11794     002B                     i1l3374:
 11795     002B  0020               	movlb	0	; select bank0
 11796     002C  1D90               	btfss	16,3	;volatile
 11797     002D  282F               	goto	u148_21
 11798     002E  2830               	goto	u148_20
 11799     002F                     u148_21:
 11800     002F  2834               	goto	i1l449
 11801     0030                     u148_20:
 11802     0030                     i1l3376:
 11803                           
 11804                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 11805     0030  318C  24F9  3180   	fcall	_I2C1_ISR
 11806                           
 11807                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 11808     0033  2834               	goto	i1l455
 11809     0034                     i1l449:
 11810     0034                     i1l455:	
 11811                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 11812                           
 11813     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11814     0035  0009               	retfie
 11815     0036                     __end_of_INTERRUPT_InterruptManager:
 11816                           
 11817                           	psect	text55
 11818     0CF9                     __ptext55:	
 11819 ;; *************** function _I2C1_ISR *****************
 11820 ;; Defined at:
 11821 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;		None
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      void 
 11828 ;; Registers used:
 11829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11835 ;;      Params:         0       0       0       0       0       0       0       0
 11836 ;;      Locals:         0       0       0       0       0       0       0       0
 11837 ;;      Temps:          0       0       0       0       0       0       0       0
 11838 ;;      Totals:         0       0       0       0       0       0       0       0
 11839 ;;Total ram usage:        0 bytes
 11840 ;; Hardware stack levels used: 1
 11841 ;; Hardware stack levels required when called: 5
 11842 ;; This function calls:
 11843 ;;		_I2C1_EventHandler
 11844 ;; This function is called by:
 11845 ;;		_INTERRUPT_InterruptManager
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849     0CF9                     _I2C1_ISR:	
 11850                           ;psect for function _I2C1_ISR
 11851                           
 11852     0CF9                     i1l3166:	
 11853                           ;incstack = 0
 11854                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11855                           
 11856                           
 11857                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 11858     0CF9  3185  2501  318C   	fcall	_I2C1_EventHandler
 11859     0CFC                     i1l207:
 11860     0CFC  0008               	return
 11861     0CFD                     __end_of_I2C1_ISR:
 11862                           
 11863                           	psect	text56
 11864     0501                     __ptext56:	
 11865 ;; *************** function _I2C1_EventHandler *****************
 11866 ;; Defined at:
 11867 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11868 ;; Parameters:    Size  Location     Type
 11869 ;;		None
 11870 ;; Auto vars:     Size  Location     Type
 11871 ;;		None
 11872 ;; Return value:  Size  Location     Type
 11873 ;;                  1    wreg      void 
 11874 ;; Registers used:
 11875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11876 ;; Tracked objects:
 11877 ;;		On entry : 0/0
 11878 ;;		On exit  : 0/0
 11879 ;;		Unchanged: 0/0
 11880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11881 ;;      Params:         0       0       0       0       0       0       0       0
 11882 ;;      Locals:         0       0       0       0       0       0       0       0
 11883 ;;      Temps:          2       0       0       0       0       0       0       0
 11884 ;;      Totals:         2       0       0       0       0       0       0       0
 11885 ;;Total ram usage:        2 bytes
 11886 ;; Hardware stack levels used: 1
 11887 ;; Hardware stack levels required when called: 4
 11888 ;; This function calls:
 11889 ;;		_I2C1_EVENT_ERROR
 11890 ;;		_I2C1_EVENT_IDLE
 11891 ;;		_I2C1_EVENT_NACK
 11892 ;;		_I2C1_EVENT_RESET
 11893 ;;		_I2C1_EVENT_RX
 11894 ;;		_I2C1_EVENT_SEND_RD_ADDR
 11895 ;;		_I2C1_EVENT_SEND_WR_ADDR
 11896 ;;		_I2C1_EVENT_STOP
 11897 ;;		_I2C1_EVENT_TX
 11898 ;;		_I2C1_InterruptClear
 11899 ;;		_I2C1_IsAddr
 11900 ;;		_I2C1_IsData
 11901 ;;		_I2C1_IsNack
 11902 ;; This function is called by:
 11903 ;;		_I2C1_ISR
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907     0501                     _I2C1_EventHandler:	
 11908                           ;psect for function _I2C1_EventHandler
 11909                           
 11910     0501                     i1l2924:	
 11911                           ;incstack = 0
 11912                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11913                           
 11914                           
 11915                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 11916     0501  318C  24C5  3185   	fcall	_I2C1_InterruptClear
 11917     0504                     i1l2926:
 11918                           
 11919                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 11920     0504  318D  2555  3185   	fcall	_I2C1_IsAddr
 11921     0507  3A00               	xorlw	0
 11922     0508  1903               	skipnz
 11923     0509  2D0B               	goto	u112_21
 11924     050A  2D0C               	goto	u112_20
 11925     050B                     u112_21:
 11926     050B  2D1A               	goto	i1l2932
 11927     050C                     u112_20:
 11928     050C                     i1l2928:
 11929     050C  318D  2529  3185   	fcall	_I2C1_IsNack
 11930     050F  3A00               	xorlw	0
 11931     0510  1903               	skipnz
 11932     0511  2D13               	goto	u113_21
 11933     0512  2D14               	goto	u113_20
 11934     0513                     u113_21:
 11935     0513  2D1A               	goto	i1l2932
 11936     0514                     u113_20:
 11937     0514                     i1l2930:
 11938                           
 11939                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 11940     0514  3005               	movlw	5
 11941     0515  0020               	movlb	0	; select bank0
 11942     0516  00DD               	movwf	_i2c1Status+11	;volatile
 11943                           
 11944                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 11945     0517  3001               	movlw	1
 11946     0518  00DC               	movwf	_i2c1Status+10	;volatile
 11947                           
 11948                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 11949     0519  2D2F               	goto	i1l2938
 11950     051A                     i1l2932:
 11951     051A  318D  250E  3185   	fcall	_I2C1_IsData
 11952     051D  3A00               	xorlw	0
 11953     051E  1903               	skipnz
 11954     051F  2D21               	goto	u114_21
 11955     0520  2D22               	goto	u114_20
 11956     0521                     u114_21:
 11957     0521  2D2F               	goto	i1l2938
 11958     0522                     u114_20:
 11959     0522                     i1l2934:
 11960     0522  318D  2529  3185   	fcall	_I2C1_IsNack
 11961     0525  3A00               	xorlw	0
 11962     0526  1903               	skipnz
 11963     0527  2D29               	goto	u115_21
 11964     0528  2D2A               	goto	u115_20
 11965     0529                     u115_21:
 11966     0529  2D2F               	goto	i1l2938
 11967     052A                     u115_20:
 11968     052A                     i1l2936:
 11969                           
 11970                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 11971     052A  3005               	movlw	5
 11972     052B  0020               	movlb	0	; select bank0
 11973     052C  00DD               	movwf	_i2c1Status+11	;volatile
 11974                           
 11975                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 11976     052D  3002               	movlw	2
 11977     052E  00DC               	movwf	_i2c1Status+10	;volatile
 11978     052F                     i1l2938:
 11979                           
 11980                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 11981     052F  0020               	movlb	0	; select bank0
 11982     0530  085D               	movf	_i2c1Status+11,w	;volatile
 11983     0531  00F2               	movwf	??_I2C1_EventHandler
 11984     0532  01F3               	clrf	??_I2C1_EventHandler+1
 11985     0533  35F2               	lslf	??_I2C1_EventHandler,f
 11986     0534  0DF3               	rlf	??_I2C1_EventHandler+1,f
 11987     0535  3005               	movlw	low _i2c1_eventTable
 11988     0536  0772               	addwf	??_I2C1_EventHandler,w
 11989     0537  0084               	movwf	4
 11990     0538  3008               	movlw	high _i2c1_eventTable
 11991     0539  3D73               	addwfc	??_I2C1_EventHandler+1,w
 11992     053A  3880               	iorlw	128
 11993     053B  0085               	movwf	5
 11994     053C  3F01               	moviw [1]fsr0
 11995     053D  008A               	movwf	10
 11996     053E  3F00               	moviw [0]fsr0
 11997     053F  000A               	callw
 11998     0540  3185               	pagesel	$
 11999     0541  0020               	movlb	0	; select bank0
 12000     0542  00DD               	movwf	_i2c1Status+11	;volatile
 12001     0543                     i1l225:
 12002     0543  0008               	return
 12003     0544                     __end_of_I2C1_EventHandler:
 12004                           
 12005                           	psect	text57
 12006     0D29                     __ptext57:	
 12007 ;; *************** function _I2C1_IsNack *****************
 12008 ;; Defined at:
 12009 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;		None
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      _Bool 
 12016 ;; Registers used:
 12017 ;;		wreg, status,2, status,0
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12023 ;;      Params:         0       0       0       0       0       0       0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0
 12026 ;;      Totals:         0       0       0       0       0       0       0       0
 12027 ;;Total ram usage:        0 bytes
 12028 ;; Hardware stack levels used: 1
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_I2C1_EventHandler
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036     0D29                     _I2C1_IsNack:	
 12037                           ;psect for function _I2C1_IsNack
 12038                           
 12039     0D29                     i1l2698:	
 12040                           ;incstack = 0
 12041                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 12042                           
 12043                           
 12044                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 12045     0D29  0024               	movlb	4	; select bank4
 12046     0D2A  0E16               	swapf	22,w	;volatile
 12047     0D2B  0C89               	rrf	9,f
 12048     0D2C  0C89               	rrf	9,f
 12049     0D2D  3901               	andlw	1
 12050     0D2E                     i1l300:
 12051     0D2E  0008               	return
 12052     0D2F                     __end_of_I2C1_IsNack:
 12053                           
 12054                           	psect	text58
 12055     0D0E                     __ptext58:	
 12056 ;; *************** function _I2C1_IsData *****************
 12057 ;; Defined at:
 12058 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      _Bool 
 12065 ;; Registers used:
 12066 ;;		wreg, status,2, status,0
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12072 ;;      Params:         0       0       0       0       0       0       0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0
 12075 ;;      Totals:         0       0       0       0       0       0       0       0
 12076 ;;Total ram usage:        0 bytes
 12077 ;; Hardware stack levels used: 1
 12078 ;; This function calls:
 12079 ;;		Nothing
 12080 ;; This function is called by:
 12081 ;;		_I2C1_EventHandler
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085     0D0E                     _I2C1_IsData:	
 12086                           ;psect for function _I2C1_IsData
 12087                           
 12088     0D0E                     i1l2702:	
 12089                           ;incstack = 0
 12090                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 12091                           
 12092                           
 12093                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 12094     0D0E  0024               	movlb	4	; select bank4
 12095     0D0F  0E14               	swapf	20,w	;volatile
 12096     0D10  0C89               	rrf	9,f
 12097     0D11  3901               	andlw	1
 12098     0D12                     i1l303:
 12099     0D12  0008               	return
 12100     0D13                     __end_of_I2C1_IsData:
 12101                           
 12102                           	psect	text59
 12103     0D55                     __ptext59:	
 12104 ;; *************** function _I2C1_IsAddr *****************
 12105 ;; Defined at:
 12106 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;		None
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      _Bool 
 12113 ;; Registers used:
 12114 ;;		wreg, status,0
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12120 ;;      Params:         0       0       0       0       0       0       0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used: 1
 12126 ;; This function calls:
 12127 ;;		Nothing
 12128 ;; This function is called by:
 12129 ;;		_I2C1_EventHandler
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133     0D55                     _I2C1_IsAddr:	
 12134                           ;psect for function _I2C1_IsAddr
 12135                           
 12136     0D55                     i1l2694:	
 12137                           ;incstack = 0
 12138                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12139                           
 12140                           
 12141                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12142     0D55  1003               	clrc
 12143     0D56  0024               	movlb	4	; select bank4
 12144     0D57  1E94               	btfss	20,5	;volatile
 12145     0D58  1403               	setc
 12146     0D59  3000               	movlw	0
 12147     0D5A  3D09               	addwfc	9,w
 12148     0D5B                     i1l306:
 12149     0D5B  0008               	return
 12150     0D5C                     __end_of_I2C1_IsAddr:
 12151                           
 12152                           	psect	text60
 12153     0CF5                     __ptext60:	
 12154 ;; *************** function _I2C1_ERROR_ISR *****************
 12155 ;; Defined at:
 12156 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;		None
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;		None
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  1    wreg      void 
 12163 ;; Registers used:
 12164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12165 ;; Tracked objects:
 12166 ;;		On entry : 0/0
 12167 ;;		On exit  : 0/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12170 ;;      Params:         0       0       0       0       0       0       0       0
 12171 ;;      Locals:         0       0       0       0       0       0       0       0
 12172 ;;      Temps:          0       0       0       0       0       0       0       0
 12173 ;;      Totals:         0       0       0       0       0       0       0       0
 12174 ;;Total ram usage:        0 bytes
 12175 ;; Hardware stack levels used: 1
 12176 ;; Hardware stack levels required when called: 5
 12177 ;; This function calls:
 12178 ;;		_I2C1_ErrorEventHandler
 12179 ;; This function is called by:
 12180 ;;		_INTERRUPT_InterruptManager
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184     0CF5                     _I2C1_ERROR_ISR:	
 12185                           ;psect for function _I2C1_ERROR_ISR
 12186                           
 12187     0CF5                     i1l3168:	
 12188                           ;incstack = 0
 12189                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12190                           
 12191                           
 12192                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12193     0CF5  318E  26C2  318C   	fcall	_I2C1_ErrorEventHandler
 12194     0CF8                     i1l210:
 12195     0CF8  0008               	return
 12196     0CF9                     __end_of_I2C1_ERROR_ISR:
 12197                           
 12198                           	psect	text61
 12199     0EC2                     __ptext61:	
 12200 ;; *************** function _I2C1_ErrorEventHandler *****************
 12201 ;; Defined at:
 12202 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12216 ;;      Params:         0       0       0       0       0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0
 12218 ;;      Temps:          2       0       0       0       0       0       0       0
 12219 ;;      Totals:         2       0       0       0       0       0       0       0
 12220 ;;Total ram usage:        2 bytes
 12221 ;; Hardware stack levels used: 1
 12222 ;; Hardware stack levels required when called: 4
 12223 ;; This function calls:
 12224 ;;		NULL
 12225 ;;		_I2C1_DefaultCallback
 12226 ;;		_I2C1_EVENT_ERROR
 12227 ;;		_I2C1_EVENT_IDLE
 12228 ;;		_I2C1_EVENT_NACK
 12229 ;;		_I2C1_EVENT_RESET
 12230 ;;		_I2C1_EVENT_RX
 12231 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12232 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12233 ;;		_I2C1_EVENT_STOP
 12234 ;;		_I2C1_EVENT_TX
 12235 ;;		_I2C1_ErrorInterruptClear
 12236 ;; This function is called by:
 12237 ;;		_I2C1_ERROR_ISR
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241     0EC2                     _I2C1_ErrorEventHandler:	
 12242                           ;psect for function _I2C1_ErrorEventHandler
 12243                           
 12244     0EC2                     i1l2940:	
 12245                           ;incstack = 0
 12246                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12247                           
 12248                           
 12249                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12250     0EC2  3006               	movlw	6
 12251     0EC3  0020               	movlb	0	; select bank0
 12252     0EC4  00DD               	movwf	_i2c1Status+11	;volatile
 12253                           
 12254                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12255     0EC5  3003               	movlw	3
 12256     0EC6  00DC               	movwf	_i2c1Status+10	;volatile
 12257     0EC7                     i1l2942:
 12258                           
 12259                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12260     0EC7  318C  24C2  318E   	fcall	_I2C1_ErrorInterruptClear
 12261     0ECA                     i1l2944:
 12262                           
 12263                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12264     0ECA  0020               	movlb	0	; select bank0
 12265     0ECB  085D               	movf	_i2c1Status+11,w	;volatile
 12266     0ECC  00F2               	movwf	??_I2C1_ErrorEventHandler
 12267     0ECD  01F3               	clrf	??_I2C1_ErrorEventHandler+1
 12268     0ECE  35F2               	lslf	??_I2C1_ErrorEventHandler,f
 12269     0ECF  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
 12270     0ED0  3005               	movlw	low _i2c1_eventTable
 12271     0ED1  0772               	addwf	??_I2C1_ErrorEventHandler,w
 12272     0ED2  0084               	movwf	4
 12273     0ED3  3008               	movlw	high _i2c1_eventTable
 12274     0ED4  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12275     0ED5  3880               	iorlw	128
 12276     0ED6  0085               	movwf	5
 12277     0ED7  3F01               	moviw [1]fsr0
 12278     0ED8  008A               	movwf	10
 12279     0ED9  3F00               	moviw [0]fsr0
 12280     0EDA  000A               	callw
 12281     0EDB  318E               	pagesel	$
 12282     0EDC  0020               	movlb	0	; select bank0
 12283     0EDD  00DD               	movwf	_i2c1Status+11	;volatile
 12284     0EDE                     i1l2946:
 12285                           
 12286                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12287     0EDE  0863               	movf	_I2C1_Callback+1,w
 12288     0EDF  008A               	movwf	10
 12289     0EE0  0862               	movf	_I2C1_Callback,w
 12290     0EE1  000A               	callw
 12291     0EE2  318E               	pagesel	$
 12292     0EE3                     i1l228:
 12293     0EE3  0008               	return
 12294     0EE4                     __end_of_I2C1_ErrorEventHandler:
 12295                           
 12296                           	psect	text62
 12297     0D4E                     __ptext62:	
 12298 ;; *************** function _I2C1_EVENT_RESET *****************
 12299 ;; Defined at:
 12300 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;		None
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;		None
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      enum E9559
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0, pclath, cstack
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12314 ;;      Params:         0       0       0       0       0       0       0       0
 12315 ;;      Locals:         0       0       0       0       0       0       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0       0
 12317 ;;      Totals:         0       0       0       0       0       0       0       0
 12318 ;;Total ram usage:        0 bytes
 12319 ;; Hardware stack levels used: 1
 12320 ;; Hardware stack levels required when called: 1
 12321 ;; This function calls:
 12322 ;;		_I2C1_BusReset
 12323 ;; This function is called by:
 12324 ;;		_I2C1_EVENT_ERROR
 12325 ;;		_I2C1_EventHandler
 12326 ;;		_I2C1_ErrorEventHandler
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330     0D4E                     _I2C1_EVENT_RESET:	
 12331                           ;psect for function _I2C1_EVENT_RESET
 12332                           
 12333     0D4E                     i1l2568:	
 12334                           ;incstack = 0
 12335                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12336                           
 12337                           
 12338                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12339     0D4E  318C  24DD  318D   	fcall	_I2C1_BusReset
 12340     0D51                     i1l2570:
 12341                           
 12342                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12343     0D51  0020               	movlb	0	; select bank0
 12344     0D52  01D2               	clrf	_i2c1Status	;volatile
 12345     0D53                     i1l2572:
 12346                           
 12347                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12348     0D53  3000               	movlw	0
 12349     0D54                     i1l267:
 12350     0D54  0008               	return
 12351     0D55                     __end_of_I2C1_EVENT_RESET:
 12352                           
 12353                           	psect	text63
 12354     0D80                     __ptext63:	
 12355 ;; *************** function _I2C1_EVENT_STOP *****************
 12356 ;; Defined at:
 12357 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;		None
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;		None
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  1    wreg      enum E9559
 12364 ;; Registers used:
 12365 ;;		wreg, status,2, status,0, pclath, cstack
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12371 ;;      Params:         0       0       0       0       0       0       0       0
 12372 ;;      Locals:         0       0       0       0       0       0       0       0
 12373 ;;      Temps:          0       0       0       0       0       0       0       0
 12374 ;;      Totals:         0       0       0       0       0       0       0       0
 12375 ;;Total ram usage:        0 bytes
 12376 ;; Hardware stack levels used: 1
 12377 ;; Hardware stack levels required when called: 2
 12378 ;; This function calls:
 12379 ;;		_I2C1_Close
 12380 ;;		_I2C1_StopSend
 12381 ;; This function is called by:
 12382 ;;		_I2C1_EVENT_TX
 12383 ;;		_I2C1_EVENT_NACK
 12384 ;;		_I2C1_EventHandler
 12385 ;;		_I2C1_ErrorEventHandler
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389     0D80                     _I2C1_EVENT_STOP:	
 12390                           ;psect for function _I2C1_EVENT_STOP
 12391                           
 12392     0D80                     i1l2546:	
 12393                           ;incstack = 0
 12394                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12395                           
 12396                           
 12397                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12398     0D80  318C  24C8  318D   	fcall	_I2C1_StopSend
 12399                           
 12400                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12401     0D83  318E  261F  318D   	fcall	_I2C1_Close
 12402     0D86                     i1l2548:
 12403                           
 12404                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12405     0D86  3000               	movlw	0
 12406     0D87                     i1l264:
 12407     0D87  0008               	return
 12408     0D88                     __end_of_I2C1_EVENT_STOP:
 12409                           
 12410                           	psect	text64
 12411     0D23                     __ptext64:	
 12412 ;; *************** function _I2C1_EVENT_ERROR *****************
 12413 ;; Defined at:
 12414 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12415 ;; Parameters:    Size  Location     Type
 12416 ;;		None
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;  retEventStat    1    0[COMMON] enum E9559
 12419 ;; Return value:  Size  Location     Type
 12420 ;;                  1    wreg      enum E9559
 12421 ;; Registers used:
 12422 ;;		wreg, status,2, status,0, pclath, cstack
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12428 ;;      Params:         0       0       0       0       0       0       0       0
 12429 ;;      Locals:         1       0       0       0       0       0       0       0
 12430 ;;      Temps:          0       0       0       0       0       0       0       0
 12431 ;;      Totals:         1       0       0       0       0       0       0       0
 12432 ;;Total ram usage:        1 bytes
 12433 ;; Hardware stack levels used: 1
 12434 ;; Hardware stack levels required when called: 2
 12435 ;; This function calls:
 12436 ;;		_I2C1_EVENT_RESET
 12437 ;; This function is called by:
 12438 ;;		_I2C1_EventHandler
 12439 ;;		_I2C1_ErrorEventHandler
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443     0D23                     _I2C1_EVENT_ERROR:	
 12444                           ;psect for function _I2C1_EVENT_ERROR
 12445                           
 12446     0D23                     i1l2782:	
 12447                           ;incstack = 0
 12448                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12449                           
 12450     0D23                     i1l2784:
 12451                           
 12452                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12453     0D23  318D  254E  318D   	fcall	_I2C1_EVENT_RESET
 12454     0D26  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12455     0D27                     i1l2786:
 12456                           
 12457                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12458     0D27  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12459     0D28                     i1l261:
 12460     0D28  0008               	return
 12461     0D29                     __end_of_I2C1_EVENT_ERROR:
 12462                           
 12463                           	psect	text65
 12464     0D1D                     __ptext65:	
 12465 ;; *************** function _I2C1_EVENT_NACK *****************
 12466 ;; Defined at:
 12467 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;		None
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;  retEventStat    1    0[COMMON] enum E9559
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      enum E9559
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, status,0, pclath, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12481 ;;      Params:         0       0       0       0       0       0       0       0
 12482 ;;      Locals:         1       0       0       0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0
 12484 ;;      Totals:         1       0       0       0       0       0       0       0
 12485 ;;Total ram usage:        1 bytes
 12486 ;; Hardware stack levels used: 1
 12487 ;; Hardware stack levels required when called: 3
 12488 ;; This function calls:
 12489 ;;		_I2C1_EVENT_STOP
 12490 ;; This function is called by:
 12491 ;;		_I2C1_EventHandler
 12492 ;;		_I2C1_ErrorEventHandler
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496     0D1D                     _I2C1_EVENT_NACK:	
 12497                           ;psect for function _I2C1_EVENT_NACK
 12498                           
 12499     0D1D                     i1l2774:	
 12500                           ;incstack = 0
 12501                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12502                           
 12503     0D1D                     i1l2776:
 12504                           
 12505                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12506     0D1D  318D  2580  318D   	fcall	_I2C1_EVENT_STOP
 12507     0D20  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12508     0D21                     i1l2778:
 12509                           
 12510                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12511     0D21  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12512     0D22                     i1l258:
 12513     0D22  0008               	return
 12514     0D23                     __end_of_I2C1_EVENT_NACK:
 12515                           
 12516                           	psect	text66
 12517     06F3                     __ptext66:	
 12518 ;; *************** function _I2C1_EVENT_RX *****************
 12519 ;; Defined at:
 12520 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12521 ;; Parameters:    Size  Location     Type
 12522 ;;		None
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;  retEventStat    1    1[COMMON] enum E9559
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      enum E9559
 12527 ;; Registers used:
 12528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12534 ;;      Params:         0       0       0       0       0       0       0       0
 12535 ;;      Locals:         1       0       0       0       0       0       0       0
 12536 ;;      Temps:          1       0       0       0       0       0       0       0
 12537 ;;      Totals:         2       0       0       0       0       0       0       0
 12538 ;;Total ram usage:        2 bytes
 12539 ;; Hardware stack levels used: 1
 12540 ;; Hardware stack levels required when called: 1
 12541 ;; This function calls:
 12542 ;;		_I2C1_AckSend
 12543 ;;		_I2C1_DataReceive
 12544 ;;		_I2C1_IsRxBufFull
 12545 ;;		_I2C1_NackSend
 12546 ;;		_I2C1_ReceiveEnable
 12547 ;;		_I2C1_RestartDisable
 12548 ;; This function is called by:
 12549 ;;		_I2C1_EventHandler
 12550 ;;		_I2C1_ErrorEventHandler
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554     06F3                     _I2C1_EVENT_RX:	
 12555                           ;psect for function _I2C1_EVENT_RX
 12556                           
 12557     06F3                     i1l2748:	
 12558                           ;incstack = 0
 12559                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12560                           
 12561                           
 12562                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12563     06F3  3004               	movlw	4
 12564     06F4  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12565     06F5                     i1l2750:
 12566                           
 12567                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12568     06F5  318C  24E9  3186   	fcall	_I2C1_IsRxBufFull
 12569     06F8  3A00               	xorlw	0
 12570     06F9  1903               	skipnz
 12571     06FA  2EFC               	goto	u96_21
 12572     06FB  2EFD               	goto	u96_20
 12573     06FC                     u96_21:
 12574     06FC  2F27               	goto	i1l2768
 12575     06FD                     u96_20:
 12576     06FD                     i1l2752:
 12577                           
 12578                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12579     06FD  0020               	movlb	0	; select bank0
 12580     06FE  0859               	movf	_i2c1Status+7,w	;volatile
 12581     06FF  045A               	iorwf	_i2c1Status+8,w	;volatile
 12582     0700  1903               	btfsc	3,2
 12583     0701  2F03               	goto	u97_21
 12584     0702  2F04               	goto	u97_20
 12585     0703                     u97_21:
 12586     0703  2F14               	goto	i1l2760
 12587     0704                     u97_20:
 12588     0704                     i1l2754:
 12589                           
 12590                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12591     0704  0858               	movf	low ((_i2c1Status| 0+6)),w	;volatile
 12592     0705  0086               	movwf	6
 12593     0706  0187               	clrf	7
 12594     0707  318C  24CB  3186   	fcall	_I2C1_DataReceive
 12595     070A  0081               	movwf	1
 12596     070B                     i1l2756:
 12597     070B  3001               	movlw	1
 12598     070C  00F0               	movwf	??_I2C1_EVENT_RX
 12599     070D  0870               	movf	??_I2C1_EVENT_RX,w
 12600     070E  0020               	movlb	0	; select bank0
 12601     070F  07D8               	addwf	low ((_i2c1Status| 0+6)),f	;volatile
 12602     0710                     i1l2758:
 12603                           
 12604                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12605     0710  3001               	movlw	1
 12606     0711  02D9               	subwf	_i2c1Status+7,f	;volatile
 12607     0712  3000               	movlw	0
 12608     0713  3BDA               	subwfb	_i2c1Status+8,f	;volatile
 12609     0714                     i1l2760:
 12610                           
 12611                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12612     0714  0859               	movf	_i2c1Status+7,w	;volatile
 12613     0715  045A               	iorwf	_i2c1Status+8,w	;volatile
 12614     0716  1903               	btfsc	3,2
 12615     0717  2F19               	goto	u98_21
 12616     0718  2F1A               	goto	u98_20
 12617     0719                     u98_21:
 12618     0719  2F1E               	goto	i1l2764
 12619     071A                     u98_20:
 12620     071A                     i1l2762:
 12621                           
 12622                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12623     071A  318C  24E5  3186   	fcall	_I2C1_AckSend
 12624                           
 12625                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12626     071D  2F2A               	goto	i1l2770
 12627     071E                     i1l2764:
 12628                           
 12629                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12630     071E  318C  24D1  3186   	fcall	_I2C1_RestartDisable
 12631                           
 12632                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12633     0721  318C  24ED  3186   	fcall	_I2C1_NackSend
 12634     0724                     i1l2766:
 12635                           
 12636                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12637     0724  3007               	movlw	7
 12638     0725  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12639     0726  2F2A               	goto	i1l2770
 12640     0727                     i1l2768:
 12641                           
 12642                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12643     0727  318C  24CE  3186   	fcall	_I2C1_ReceiveEnable
 12644     072A                     i1l2770:
 12645                           
 12646                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12647     072A  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12648     072B                     i1l255:
 12649     072B  0008               	return
 12650     072C                     __end_of_I2C1_EVENT_RX:
 12651                           
 12652                           	psect	text67
 12653     0D47                     __ptext67:	
 12654 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12655 ;; Defined at:
 12656 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;		None
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;		None
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      enum E9559
 12663 ;; Registers used:
 12664 ;;		wreg, status,2, status,0, pclath, cstack
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12670 ;;      Params:         0       0       0       0       0       0       0       0
 12671 ;;      Locals:         0       0       0       0       0       0       0       0
 12672 ;;      Temps:          0       0       0       0       0       0       0       0
 12673 ;;      Totals:         0       0       0       0       0       0       0       0
 12674 ;;Total ram usage:        0 bytes
 12675 ;; Hardware stack levels used: 1
 12676 ;; Hardware stack levels required when called: 1
 12677 ;; This function calls:
 12678 ;;		_I2C1_DataTransmit
 12679 ;; This function is called by:
 12680 ;;		_I2C1_EventHandler
 12681 ;;		_I2C1_ErrorEventHandler
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685     0D47                     _I2C1_EVENT_SEND_WR_ADDR:	
 12686                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12687                           
 12688     0D47                     i1l2718:	
 12689                           ;incstack = 0
 12690                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12691                           
 12692                           
 12693                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12694     0D47  0020               	movlb	0	; select bank0
 12695     0D48  3553               	lslf	_i2c1Status+1,w	;volatile
 12696     0D49  318D  2509  318D   	fcall	_I2C1_DataTransmit
 12697     0D4C                     i1l2720:
 12698                           
 12699                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12700     0D4C  3003               	movlw	3
 12701     0D4D                     i1l240:
 12702     0D4D  0008               	return
 12703     0D4E                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12704                           
 12705                           	psect	text68
 12706     0D78                     __ptext68:	
 12707 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12708 ;; Defined at:
 12709 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12710 ;; Parameters:    Size  Location     Type
 12711 ;;		None
 12712 ;; Auto vars:     Size  Location     Type
 12713 ;;		None
 12714 ;; Return value:  Size  Location     Type
 12715 ;;                  1    wreg      enum E9559
 12716 ;; Registers used:
 12717 ;;		wreg, status,2, status,0, pclath, cstack
 12718 ;; Tracked objects:
 12719 ;;		On entry : 0/0
 12720 ;;		On exit  : 0/0
 12721 ;;		Unchanged: 0/0
 12722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12723 ;;      Params:         0       0       0       0       0       0       0       0
 12724 ;;      Locals:         0       0       0       0       0       0       0       0
 12725 ;;      Temps:          0       0       0       0       0       0       0       0
 12726 ;;      Totals:         0       0       0       0       0       0       0       0
 12727 ;;Total ram usage:        0 bytes
 12728 ;; Hardware stack levels used: 1
 12729 ;; Hardware stack levels required when called: 1
 12730 ;; This function calls:
 12731 ;;		_I2C1_DataTransmit
 12732 ;; This function is called by:
 12733 ;;		_I2C1_EventHandler
 12734 ;;		_I2C1_ErrorEventHandler
 12735 ;; This function uses a non-reentrant model
 12736 ;;
 12737                           
 12738     0D78                     _I2C1_EVENT_SEND_RD_ADDR:	
 12739                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12740                           
 12741     0D78                     i1l2712:	
 12742                           ;incstack = 0
 12743                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12744                           
 12745                           
 12746                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12747     0D78  1403               	setc
 12748     0D79  0020               	movlb	0	; select bank0
 12749     0D7A  0D53               	rlf	_i2c1Status+1,w	;volatile
 12750     0D7B  318D  2509  318D   	fcall	_I2C1_DataTransmit
 12751     0D7E                     i1l2714:
 12752                           
 12753                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 12754     0D7E  3004               	movlw	4
 12755     0D7F                     i1l237:
 12756     0D7F  0008               	return
 12757     0D80                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 12758                           
 12759                           	psect	text69
 12760     0CF1                     __ptext69:	
 12761 ;; *************** function _I2C1_EVENT_IDLE *****************
 12762 ;; Defined at:
 12763 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;		None
 12766 ;; Auto vars:     Size  Location     Type
 12767 ;;		None
 12768 ;; Return value:  Size  Location     Type
 12769 ;;                  1    wreg      enum E9559
 12770 ;; Registers used:
 12771 ;;		wreg, status,2
 12772 ;; Tracked objects:
 12773 ;;		On entry : 0/0
 12774 ;;		On exit  : 0/0
 12775 ;;		Unchanged: 0/0
 12776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12777 ;;      Params:         0       0       0       0       0       0       0       0
 12778 ;;      Locals:         0       0       0       0       0       0       0       0
 12779 ;;      Temps:          0       0       0       0       0       0       0       0
 12780 ;;      Totals:         0       0       0       0       0       0       0       0
 12781 ;;Total ram usage:        0 bytes
 12782 ;; Hardware stack levels used: 1
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		_I2C1_EventHandler
 12787 ;;		_I2C1_ErrorEventHandler
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791     0CF1                     _I2C1_EVENT_IDLE:	
 12792                           ;psect for function _I2C1_EVENT_IDLE
 12793                           
 12794     0CF1                     i1l2706:	
 12795                           ;incstack = 0
 12796                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 12797                           
 12798                           
 12799                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 12800     0CF1  0020               	movlb	0	; select bank0
 12801     0CF2  01D2               	clrf	_i2c1Status	;volatile
 12802     0CF3                     i1l2708:
 12803                           
 12804                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 12805     0CF3  3008               	movlw	8
 12806     0CF4                     i1l234:
 12807     0CF4  0008               	return
 12808     0CF5                     __end_of_I2C1_EVENT_IDLE:
 12809                           
 12810                           	psect	text70
 12811     0FA6                     __ptext70:	
 12812 ;; *************** function _I2C1_EVENT_TX *****************
 12813 ;; Defined at:
 12814 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;		None
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;  retEventStat    1    1[COMMON] enum E9559
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      enum E9559
 12821 ;; Registers used:
 12822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12828 ;;      Params:         0       0       0       0       0       0       0       0
 12829 ;;      Locals:         1       0       0       0       0       0       0       0
 12830 ;;      Temps:          0       0       0       0       0       0       0       0
 12831 ;;      Totals:         1       0       0       0       0       0       0       0
 12832 ;;Total ram usage:        1 bytes
 12833 ;; Hardware stack levels used: 1
 12834 ;; Hardware stack levels required when called: 3
 12835 ;; This function calls:
 12836 ;;		_I2C1_DataTransmit
 12837 ;;		_I2C1_EVENT_STOP
 12838 ;;		_I2C1_RestartEnable
 12839 ;; This function is called by:
 12840 ;;		_I2C1_EventHandler
 12841 ;;		_I2C1_ErrorEventHandler
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845     0FA6                     _I2C1_EVENT_TX:	
 12846                           ;psect for function _I2C1_EVENT_TX
 12847                           
 12848     0FA6                     i1l2724:	
 12849                           ;incstack = 0
 12850                           ; Regs used in _I2C1_EVENT_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12851                           
 12852     0FA6                     i1l2726:
 12853                           
 12854                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 12855     0FA6  0020               	movlb	0	; select bank0
 12856     0FA7  0856               	movf	_i2c1Status+4,w	;volatile
 12857     0FA8  0457               	iorwf	_i2c1Status+5,w	;volatile
 12858     0FA9  1903               	btfsc	3,2
 12859     0FAA  2FAC               	goto	u94_21
 12860     0FAB  2FAD               	goto	u94_20
 12861     0FAC                     u94_21:
 12862     0FAC  2FC0               	goto	i1l2734
 12863     0FAD                     u94_20:
 12864     0FAD                     i1l2728:
 12865                           
 12866                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 12867     0FAD  3001               	movlw	1
 12868     0FAE  02D6               	subwf	_i2c1Status+4,f	;volatile
 12869     0FAF  3000               	movlw	0
 12870     0FB0  3BD7               	subwfb	_i2c1Status+5,f	;volatile
 12871     0FB1                     i1l2730:
 12872                           
 12873                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 12874     0FB1  3003               	movlw	3
 12875     0FB2  3E52               	addlw	(low (_i2c1Status| 0))& (0+255)
 12876     0FB3  0086               	movwf	6
 12877     0FB4  0187               	clrf	7
 12878     0FB5  3F40               	moviw [0]fsr1
 12879     0FB6  0084               	movwf	4
 12880     0FB7  0185               	clrf	5
 12881     0FB8  0A81               	incf	1,f
 12882     0FB9  0800               	movf	0,w
 12883     0FBA  318D  2509  318F   	fcall	_I2C1_DataTransmit
 12884     0FBD                     i1l2732:
 12885                           
 12886                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 12887     0FBD  3003               	movlw	3
 12888     0FBE  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12889                           
 12890                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 12891     0FBF  2FD0               	goto	i1l2744
 12892     0FC0                     i1l2734:
 12893                           
 12894                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 12895     0FC0  085B               	movf	_i2c1Status+9,w	;volatile
 12896     0FC1  1903               	btfsc	3,2
 12897     0FC2  2FC4               	goto	u95_21
 12898     0FC3  2FC5               	goto	u95_20
 12899     0FC4                     u95_21:
 12900     0FC4  2FCC               	goto	i1l2742
 12901     0FC5                     u95_20:
 12902     0FC5                     i1l2736:
 12903                           
 12904                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 12905     0FC5  01DB               	clrf	_i2c1Status+9	;volatile
 12906     0FC6                     i1l2738:
 12907                           
 12908                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 12909     0FC6  318C  24D4  318F   	fcall	_I2C1_RestartEnable
 12910     0FC9                     i1l2740:
 12911                           
 12912                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 12913     0FC9  01F1               	clrf	I2C1_EVENT_TX@retEventState
 12914     0FCA  0AF1               	incf	I2C1_EVENT_TX@retEventState,f
 12915                           
 12916                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 12917     0FCB  2FD0               	goto	i1l2744
 12918     0FCC                     i1l2742:
 12919                           
 12920                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 12921     0FCC  318D  2580  318F   	fcall	_I2C1_EVENT_STOP
 12922     0FCF  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12923     0FD0                     i1l2744:
 12924                           
 12925                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 12926     0FD0  0871               	movf	I2C1_EVENT_TX@retEventState,w
 12927     0FD1                     i1l247:
 12928     0FD1  0008               	return
 12929     0FD2                     __end_of_I2C1_EVENT_TX:
 12930                           
 12931                           	psect	text71
 12932     0CD4                     __ptext71:	
 12933 ;; *************** function _I2C1_RestartEnable *****************
 12934 ;; Defined at:
 12935 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		None
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12949 ;;      Params:         0       0       0       0       0       0       0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0
 12951 ;;      Temps:          0       0       0       0       0       0       0       0
 12952 ;;      Totals:         0       0       0       0       0       0       0       0
 12953 ;;Total ram usage:        0 bytes
 12954 ;; Hardware stack levels used: 1
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_I2C1_EVENT_TX
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962     0CD4                     _I2C1_RestartEnable:	
 12963                           ;psect for function _I2C1_RestartEnable
 12964                           
 12965     0CD4                     i1l2544:	
 12966                           ;incstack = 0
 12967                           ; Regs used in _I2C1_RestartEnable: []
 12968                           
 12969                           
 12970                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 12971     0CD4  0024               	movlb	4	; select bank4
 12972     0CD5  1496               	bsf	22,1	;volatile
 12973     0CD6                     i1l282:
 12974     0CD6  0008               	return
 12975     0CD7                     __end_of_I2C1_RestartEnable:
 12976                           
 12977                           	psect	text72
 12978     0D09                     __ptext72:	
 12979 ;; *************** function _I2C1_DataTransmit *****************
 12980 ;; Defined at:
 12981 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;  data            1    wreg     unsigned char 
 12984 ;; Auto vars:     Size  Location     Type
 12985 ;;  data            1    0[COMMON] unsigned char 
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  1    wreg      void 
 12988 ;; Registers used:
 12989 ;;		wreg
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 0/0
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12995 ;;      Params:         0       0       0       0       0       0       0       0
 12996 ;;      Locals:         1       0       0       0       0       0       0       0
 12997 ;;      Temps:          0       0       0       0       0       0       0       0
 12998 ;;      Totals:         1       0       0       0       0       0       0       0
 12999 ;;Total ram usage:        1 bytes
 13000 ;; Hardware stack levels used: 1
 13001 ;; This function calls:
 13002 ;;		Nothing
 13003 ;; This function is called by:
 13004 ;;		_I2C1_EVENT_SEND_RD_ADDR
 13005 ;;		_I2C1_EVENT_SEND_WR_ADDR
 13006 ;;		_I2C1_EVENT_TX
 13007 ;; This function uses a non-reentrant model
 13008 ;;
 13009                           
 13010     0D09                     _I2C1_DataTransmit:	
 13011                           ;psect for function _I2C1_DataTransmit
 13012                           
 13013                           
 13014                           ;incstack = 0
 13015                           ; Regs used in _I2C1_DataTransmit: [wreg]
 13016                           ;I2C1_DataTransmit@data stored from wreg
 13017     0D09  00F0               	movwf	I2C1_DataTransmit@data
 13018     0D0A                     i1l2542:
 13019                           
 13020                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 13021     0D0A  0870               	movf	I2C1_DataTransmit@data,w
 13022     0D0B  0024               	movlb	4	; select bank4
 13023     0D0C  0091               	movwf	17	;volatile
 13024     0D0D                     i1l273:
 13025     0D0D  0008               	return
 13026     0D0E                     __end_of_I2C1_DataTransmit:
 13027                           
 13028                           	psect	text73
 13029     0CD1                     __ptext73:	
 13030 ;; *************** function _I2C1_RestartDisable *****************
 13031 ;; Defined at:
 13032 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;		None
 13035 ;; Auto vars:     Size  Location     Type
 13036 ;;		None
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  1    wreg      void 
 13039 ;; Registers used:
 13040 ;;		None
 13041 ;; Tracked objects:
 13042 ;;		On entry : 0/0
 13043 ;;		On exit  : 0/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13046 ;;      Params:         0       0       0       0       0       0       0       0
 13047 ;;      Locals:         0       0       0       0       0       0       0       0
 13048 ;;      Temps:          0       0       0       0       0       0       0       0
 13049 ;;      Totals:         0       0       0       0       0       0       0       0
 13050 ;;Total ram usage:        0 bytes
 13051 ;; Hardware stack levels used: 1
 13052 ;; This function calls:
 13053 ;;		Nothing
 13054 ;; This function is called by:
 13055 ;;		_I2C1_EVENT_RX
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059     0CD1                     _I2C1_RestartDisable:	
 13060                           ;psect for function _I2C1_RestartDisable
 13061                           
 13062     0CD1                     i1l2562:	
 13063                           ;incstack = 0
 13064                           ; Regs used in _I2C1_RestartDisable: []
 13065                           
 13066                           
 13067                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 13068     0CD1  0024               	movlb	4	; select bank4
 13069     0CD2  1096               	bcf	22,1	;volatile
 13070     0CD3                     i1l285:
 13071     0CD3  0008               	return
 13072     0CD4                     __end_of_I2C1_RestartDisable:
 13073                           
 13074                           	psect	text74
 13075     0CCE                     __ptext74:	
 13076 ;; *************** function _I2C1_ReceiveEnable *****************
 13077 ;; Defined at:
 13078 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;		None
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;		None
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  1    wreg      void 
 13085 ;; Registers used:
 13086 ;;		None
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13092 ;;      Params:         0       0       0       0       0       0       0       0
 13093 ;;      Locals:         0       0       0       0       0       0       0       0
 13094 ;;      Temps:          0       0       0       0       0       0       0       0
 13095 ;;      Totals:         0       0       0       0       0       0       0       0
 13096 ;;Total ram usage:        0 bytes
 13097 ;; Hardware stack levels used: 1
 13098 ;; This function calls:
 13099 ;;		Nothing
 13100 ;; This function is called by:
 13101 ;;		_I2C1_EVENT_RX
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105     0CCE                     _I2C1_ReceiveEnable:	
 13106                           ;psect for function _I2C1_ReceiveEnable
 13107                           
 13108     0CCE                     i1l2566:	
 13109                           ;incstack = 0
 13110                           ; Regs used in _I2C1_ReceiveEnable: []
 13111                           
 13112                           
 13113                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13114     0CCE  0024               	movlb	4	; select bank4
 13115     0CCF  1596               	bsf	22,3	;volatile
 13116     0CD0                     i1l279:
 13117     0CD0  0008               	return
 13118     0CD1                     __end_of_I2C1_ReceiveEnable:
 13119                           
 13120                           	psect	text75
 13121     0CED                     __ptext75:	
 13122 ;; *************** function _I2C1_NackSend *****************
 13123 ;; Defined at:
 13124 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13125 ;; Parameters:    Size  Location     Type
 13126 ;;		None
 13127 ;; Auto vars:     Size  Location     Type
 13128 ;;		None
 13129 ;; Return value:  Size  Location     Type
 13130 ;;                  1    wreg      void 
 13131 ;; Registers used:
 13132 ;;		None
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13138 ;;      Params:         0       0       0       0       0       0       0       0
 13139 ;;      Locals:         0       0       0       0       0       0       0       0
 13140 ;;      Temps:          0       0       0       0       0       0       0       0
 13141 ;;      Totals:         0       0       0       0       0       0       0       0
 13142 ;;Total ram usage:        0 bytes
 13143 ;; Hardware stack levels used: 1
 13144 ;; This function calls:
 13145 ;;		Nothing
 13146 ;; This function is called by:
 13147 ;;		_I2C1_EVENT_RX
 13148 ;; This function uses a non-reentrant model
 13149 ;;
 13150                           
 13151     0CED                     _I2C1_NackSend:	
 13152                           ;psect for function _I2C1_NackSend
 13153                           
 13154     0CED                     i1l2564:	
 13155                           ;incstack = 0
 13156                           ; Regs used in _I2C1_NackSend: []
 13157                           
 13158                           
 13159                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13160     0CED  0024               	movlb	4	; select bank4
 13161     0CEE  1696               	bsf	22,5	;volatile
 13162                           
 13163                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13164     0CEF  1616               	bsf	22,4	;volatile
 13165     0CF0                     i1l297:
 13166     0CF0  0008               	return
 13167     0CF1                     __end_of_I2C1_NackSend:
 13168                           
 13169                           	psect	text76
 13170     0CE9                     __ptext76:	
 13171 ;; *************** function _I2C1_IsRxBufFull *****************
 13172 ;; Defined at:
 13173 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      _Bool 
 13180 ;; Registers used:
 13181 ;;		wreg, status,2, status,0
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13187 ;;      Params:         0       0       0       0       0       0       0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0
 13190 ;;      Totals:         0       0       0       0       0       0       0       0
 13191 ;;Total ram usage:        0 bytes
 13192 ;; Hardware stack levels used: 1
 13193 ;; This function calls:
 13194 ;;		Nothing
 13195 ;; This function is called by:
 13196 ;;		_I2C1_EVENT_RX
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200     0CE9                     _I2C1_IsRxBufFull:	
 13201                           ;psect for function _I2C1_IsRxBufFull
 13202                           
 13203     0CE9                     i1l2552:	
 13204                           ;incstack = 0
 13205                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13206                           
 13207                           
 13208                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13209     0CE9  0024               	movlb	4	; select bank4
 13210     0CEA  0814               	movf	20,w	;volatile
 13211     0CEB  3901               	andlw	1
 13212     0CEC                     i1l309:
 13213     0CEC  0008               	return
 13214     0CED                     __end_of_I2C1_IsRxBufFull:
 13215                           
 13216                           	psect	text77
 13217     0CCB                     __ptext77:	
 13218 ;; *************** function _I2C1_DataReceive *****************
 13219 ;; Defined at:
 13220 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;		None
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;		None
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  1    wreg      unsigned char 
 13227 ;; Registers used:
 13228 ;;		wreg
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13234 ;;      Params:         0       0       0       0       0       0       0       0
 13235 ;;      Locals:         0       0       0       0       0       0       0       0
 13236 ;;      Temps:          0       0       0       0       0       0       0       0
 13237 ;;      Totals:         0       0       0       0       0       0       0       0
 13238 ;;Total ram usage:        0 bytes
 13239 ;; Hardware stack levels used: 1
 13240 ;; This function calls:
 13241 ;;		Nothing
 13242 ;; This function is called by:
 13243 ;;		_I2C1_EVENT_RX
 13244 ;; This function uses a non-reentrant model
 13245 ;;
 13246                           
 13247     0CCB                     _I2C1_DataReceive:	
 13248                           ;psect for function _I2C1_DataReceive
 13249                           
 13250     0CCB                     i1l2556:	
 13251                           ;incstack = 0
 13252                           ; Regs used in _I2C1_DataReceive: [wreg]
 13253                           
 13254                           
 13255                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13256     0CCB  0024               	movlb	4	; select bank4
 13257     0CCC  0811               	movf	17,w	;volatile
 13258     0CCD                     i1l270:
 13259     0CCD  0008               	return
 13260     0CCE                     __end_of_I2C1_DataReceive:
 13261                           
 13262                           	psect	text78
 13263     0CE5                     __ptext78:	
 13264 ;; *************** function _I2C1_AckSend *****************
 13265 ;; Defined at:
 13266 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;		None
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;		None
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  1    wreg      void 
 13273 ;; Registers used:
 13274 ;;		None
 13275 ;; Tracked objects:
 13276 ;;		On entry : 0/0
 13277 ;;		On exit  : 0/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13280 ;;      Params:         0       0       0       0       0       0       0       0
 13281 ;;      Locals:         0       0       0       0       0       0       0       0
 13282 ;;      Temps:          0       0       0       0       0       0       0       0
 13283 ;;      Totals:         0       0       0       0       0       0       0       0
 13284 ;;Total ram usage:        0 bytes
 13285 ;; Hardware stack levels used: 1
 13286 ;; This function calls:
 13287 ;;		Nothing
 13288 ;; This function is called by:
 13289 ;;		_I2C1_EVENT_RX
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293     0CE5                     _I2C1_AckSend:	
 13294                           ;psect for function _I2C1_AckSend
 13295                           
 13296     0CE5                     i1l2560:	
 13297                           ;incstack = 0
 13298                           ; Regs used in _I2C1_AckSend: []
 13299                           
 13300                           
 13301                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13302     0CE5  0024               	movlb	4	; select bank4
 13303     0CE6  1296               	bcf	22,5	;volatile
 13304                           
 13305                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13306     0CE7  1616               	bsf	22,4	;volatile
 13307     0CE8                     i1l294:
 13308     0CE8  0008               	return
 13309     0CE9                     __end_of_I2C1_AckSend:
 13310                           
 13311                           	psect	text79
 13312     0CC8                     __ptext79:	
 13313 ;; *************** function _I2C1_StopSend *****************
 13314 ;; Defined at:
 13315 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;		None
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;		None
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  1    wreg      void 
 13322 ;; Registers used:
 13323 ;;		None
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/0
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13329 ;;      Params:         0       0       0       0       0       0       0       0
 13330 ;;      Locals:         0       0       0       0       0       0       0       0
 13331 ;;      Temps:          0       0       0       0       0       0       0       0
 13332 ;;      Totals:         0       0       0       0       0       0       0       0
 13333 ;;Total ram usage:        0 bytes
 13334 ;; Hardware stack levels used: 1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		_I2C1_EVENT_STOP
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342     0CC8                     _I2C1_StopSend:	
 13343                           ;psect for function _I2C1_StopSend
 13344                           
 13345     0CC8                     i1l2492:	
 13346                           ;incstack = 0
 13347                           ; Regs used in _I2C1_StopSend: []
 13348                           
 13349                           
 13350                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13351     0CC8  0024               	movlb	4	; select bank4
 13352     0CC9  1516               	bsf	22,2	;volatile
 13353     0CCA                     i1l291:
 13354     0CCA  0008               	return
 13355     0CCB                     __end_of_I2C1_StopSend:
 13356                           
 13357                           	psect	text80
 13358     0E1F                     __ptext80:	
 13359 ;; *************** function _I2C1_Close *****************
 13360 ;; Defined at:
 13361 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13362 ;; Parameters:    Size  Location     Type
 13363 ;;		None
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;		None
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  1    wreg      void 
 13368 ;; Registers used:
 13369 ;;		status,2, status,0, pclath, cstack
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/0
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13375 ;;      Params:         0       0       0       0       0       0       0       0
 13376 ;;      Locals:         0       0       0       0       0       0       0       0
 13377 ;;      Temps:          0       0       0       0       0       0       0       0
 13378 ;;      Totals:         0       0       0       0       0       0       0       0
 13379 ;;Total ram usage:        0 bytes
 13380 ;; Hardware stack levels used: 1
 13381 ;; Hardware stack levels required when called: 1
 13382 ;; This function calls:
 13383 ;;		_I2C1_ErrorInterruptClear
 13384 ;;		_I2C1_InterruptClear
 13385 ;;		_I2C1_StatusFlagsClear
 13386 ;; This function is called by:
 13387 ;;		_I2C1_EVENT_STOP
 13388 ;; This function uses a non-reentrant model
 13389 ;;
 13390                           
 13391     0E1F                     _I2C1_Close:	
 13392                           ;psect for function _I2C1_Close
 13393                           
 13394     0E1F                     i1l2482:	
 13395                           ;incstack = 0
 13396                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13397                           
 13398                           
 13399                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13400     0E1F  0020               	movlb	0	; select bank0
 13401     0E20  01D2               	clrf	_i2c1Status	;volatile
 13402     0E21                     i1l2484:
 13403                           
 13404                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13405     0E21  3000               	movlw	0
 13406     0E22  00D4               	movwf	_i2c1Status+2	;volatile
 13407     0E23  30FF               	movlw	255
 13408     0E24  00D3               	movwf	_i2c1Status+1	;volatile
 13409                           
 13410                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13411     0E25  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
 13412                           
 13413                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13414     0E26  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 13415                           
 13416                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13417     0E27  01DD               	clrf	_i2c1Status+11	;volatile
 13418     0E28                     i1l2486:
 13419                           
 13420                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13421     0E28  318C  24C5  318E   	fcall	_I2C1_InterruptClear
 13422     0E2B                     i1l2488:
 13423                           
 13424                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13425     0E2B  318C  24C2  318E   	fcall	_I2C1_ErrorInterruptClear
 13426     0E2E                     i1l2490:
 13427                           
 13428                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13429     0E2E  318C  24E1  318E   	fcall	_I2C1_StatusFlagsClear
 13430     0E31                     i1l219:
 13431     0E31  0008               	return
 13432     0E32                     __end_of_I2C1_Close:
 13433                           
 13434                           	psect	text81
 13435     0CE1                     __ptext81:	
 13436 ;; *************** function _I2C1_StatusFlagsClear *****************
 13437 ;; Defined at:
 13438 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13439 ;; Parameters:    Size  Location     Type
 13440 ;;		None
 13441 ;; Auto vars:     Size  Location     Type
 13442 ;;		None
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  1    wreg      void 
 13445 ;; Registers used:
 13446 ;;		None
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13452 ;;      Params:         0       0       0       0       0       0       0       0
 13453 ;;      Locals:         0       0       0       0       0       0       0       0
 13454 ;;      Temps:          0       0       0       0       0       0       0       0
 13455 ;;      Totals:         0       0       0       0       0       0       0       0
 13456 ;;Total ram usage:        0 bytes
 13457 ;; Hardware stack levels used: 1
 13458 ;; This function calls:
 13459 ;;		Nothing
 13460 ;; This function is called by:
 13461 ;;		_I2C1_Close
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465     0CE1                     _I2C1_StatusFlagsClear:	
 13466                           ;psect for function _I2C1_StatusFlagsClear
 13467                           
 13468     0CE1                     i1l2478:	
 13469                           ;incstack = 0
 13470                           ; Regs used in _I2C1_StatusFlagsClear: []
 13471                           
 13472                           
 13473                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13474     0CE1  0024               	movlb	4	; select bank4
 13475     0CE2  1395               	bcf	21,7	;volatile
 13476                           
 13477                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13478     0CE3  1315               	bcf	21,6	;volatile
 13479     0CE4                     i1l324:
 13480     0CE4  0008               	return
 13481     0CE5                     __end_of_I2C1_StatusFlagsClear:
 13482                           
 13483                           	psect	text82
 13484     0CC5                     __ptext82:	
 13485 ;; *************** function _I2C1_InterruptClear *****************
 13486 ;; Defined at:
 13487 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		None
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13501 ;;      Params:         0       0       0       0       0       0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_I2C1_Close
 13511 ;;		_I2C1_EventHandler
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515     0CC5                     _I2C1_InterruptClear:	
 13516                           ;psect for function _I2C1_InterruptClear
 13517                           
 13518     0CC5                     i1l2474:	
 13519                           ;incstack = 0
 13520                           ; Regs used in _I2C1_InterruptClear: []
 13521                           
 13522                           
 13523                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13524     0CC5  0020               	movlb	0	; select bank0
 13525     0CC6  1190               	bcf	16,3	;volatile
 13526     0CC7                     i1l318:
 13527     0CC7  0008               	return
 13528     0CC8                     __end_of_I2C1_InterruptClear:
 13529                           
 13530                           	psect	text83
 13531     0CC2                     __ptext83:	
 13532 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13533 ;; Defined at:
 13534 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;		None
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;		None
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		None
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13548 ;;      Params:         0       0       0       0       0       0       0       0
 13549 ;;      Locals:         0       0       0       0       0       0       0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0
 13551 ;;      Totals:         0       0       0       0       0       0       0       0
 13552 ;;Total ram usage:        0 bytes
 13553 ;; Hardware stack levels used: 1
 13554 ;; This function calls:
 13555 ;;		Nothing
 13556 ;; This function is called by:
 13557 ;;		_I2C1_Close
 13558 ;;		_I2C1_ErrorEventHandler
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562     0CC2                     _I2C1_ErrorInterruptClear:	
 13563                           ;psect for function _I2C1_ErrorInterruptClear
 13564                           
 13565     0CC2                     i1l2476:	
 13566                           ;incstack = 0
 13567                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13568                           
 13569                           
 13570                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13571     0CC2  0020               	movlb	0	; select bank0
 13572     0CC3  1191               	bcf	17,3	;volatile
 13573     0CC4                     i1l321:
 13574     0CC4  0008               	return
 13575     0CC5                     __end_of_I2C1_ErrorInterruptClear:
 13576                           
 13577                           	psect	text84
 13578     0CDD                     __ptext84:	
 13579 ;; *************** function _I2C1_BusReset *****************
 13580 ;; Defined at:
 13581 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13582 ;; Parameters:    Size  Location     Type
 13583 ;;		None
 13584 ;; Auto vars:     Size  Location     Type
 13585 ;;		None
 13586 ;; Return value:  Size  Location     Type
 13587 ;;                  1    wreg      void 
 13588 ;; Registers used:
 13589 ;;		None
 13590 ;; Tracked objects:
 13591 ;;		On entry : 0/0
 13592 ;;		On exit  : 0/0
 13593 ;;		Unchanged: 0/0
 13594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13595 ;;      Params:         0       0       0       0       0       0       0       0
 13596 ;;      Locals:         0       0       0       0       0       0       0       0
 13597 ;;      Temps:          0       0       0       0       0       0       0       0
 13598 ;;      Totals:         0       0       0       0       0       0       0       0
 13599 ;;Total ram usage:        0 bytes
 13600 ;; Hardware stack levels used: 1
 13601 ;; This function calls:
 13602 ;;		Nothing
 13603 ;; This function is called by:
 13604 ;;		_I2C1_EVENT_RESET
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608     0CDD                     _I2C1_BusReset:	
 13609                           ;psect for function _I2C1_BusReset
 13610                           
 13611     0CDD                     i1l2494:	
 13612                           ;incstack = 0
 13613                           ; Regs used in _I2C1_BusReset: []
 13614                           
 13615                           
 13616                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13617     0CDD  0024               	movlb	4	; select bank4
 13618     0CDE  1295               	bcf	21,5	;volatile
 13619                           
 13620                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13621     0CDF  1695               	bsf	21,5	;volatile
 13622     0CE0                     i1l276:
 13623     0CE0  0008               	return
 13624     0CE1                     __end_of_I2C1_BusReset:
 13625                           
 13626                           	psect	text85
 13627     0CC1                     __ptext85:	
 13628 ;; *************** function _I2C1_DefaultCallback *****************
 13629 ;; Defined at:
 13630 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13631 ;; Parameters:    Size  Location     Type
 13632 ;;		None
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;		None
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  1    wreg      void 
 13637 ;; Registers used:
 13638 ;;		None
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13644 ;;      Params:         0       0       0       0       0       0       0       0
 13645 ;;      Locals:         0       0       0       0       0       0       0       0
 13646 ;;      Temps:          0       0       0       0       0       0       0       0
 13647 ;;      Totals:         0       0       0       0       0       0       0       0
 13648 ;;Total ram usage:        0 bytes
 13649 ;; Hardware stack levels used: 1
 13650 ;; This function calls:
 13651 ;;		Nothing
 13652 ;; This function is called by:
 13653 ;;		_I2C1_Initialize
 13654 ;;		_I2C1_Deinitialize
 13655 ;;		_I2C1_ErrorEventHandler
 13656 ;; This function uses a non-reentrant model
 13657 ;;
 13658                           
 13659     0CC1                     _I2C1_DefaultCallback:	
 13660                           ;psect for function _I2C1_DefaultCallback
 13661                           
 13662     0CC1                     i1l231:	
 13663                           ;incstack = 0
 13664                           ; Regs used in _I2C1_DefaultCallback: []
 13665                           
 13666     0CC1  0008               	return
 13667     0CC2                     __end_of_I2C1_DefaultCallback:
 13668                           
 13669                           	psect	text86
 13670     0DE1                     __ptext86:	
 13671 ;; *************** function _ADC_ISR *****************
 13672 ;; Defined at:
 13673 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;		None
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;		None
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  1    wreg      void 
 13680 ;; Registers used:
 13681 ;;		wreg, status,2, status,0, pclath, cstack
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13687 ;;      Params:         0       0       0       0       0       0       0       0
 13688 ;;      Locals:         0       0       0       0       0       0       0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0
 13690 ;;      Totals:         0       0       0       0       0       0       0       0
 13691 ;;Total ram usage:        0 bytes
 13692 ;; Hardware stack levels used: 1
 13693 ;; Hardware stack levels required when called: 1
 13694 ;; This function calls:
 13695 ;;		NULL
 13696 ;;		_ADC_DefaultInterruptHandler
 13697 ;; This function is called by:
 13698 ;;		_INTERRUPT_InterruptManager
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702     0DE1                     _ADC_ISR:	
 13703                           ;psect for function _ADC_ISR
 13704                           
 13705     0DE1                     i1l3160:	
 13706                           ;incstack = 0
 13707                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 13708                           
 13709                           
 13710                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 13711     0DE1  0020               	movlb	0	; select bank0
 13712     0DE2  1310               	bcf	16,6	;volatile
 13713     0DE3                     i1l3162:
 13714                           
 13715                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 13716     0DE3  086B               	movf	_ADC_InterruptHandler,w
 13717     0DE4  046C               	iorwf	_ADC_InterruptHandler+1,w
 13718     0DE5  1903               	btfsc	3,2
 13719     0DE6  2DE8               	goto	u128_21
 13720     0DE7  2DE9               	goto	u128_20
 13721     0DE8                     u128_21:
 13722     0DE8  2DEE               	goto	i1l52
 13723     0DE9                     u128_20:
 13724     0DE9                     i1l3164:
 13725                           
 13726                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 13727     0DE9  086C               	movf	_ADC_InterruptHandler+1,w
 13728     0DEA  008A               	movwf	10
 13729     0DEB  086B               	movf	_ADC_InterruptHandler,w
 13730     0DEC  000A               	callw
 13731     0DED  318D               	pagesel	$
 13732     0DEE                     i1l52:
 13733     0DEE  0008               	return
 13734     0DEF                     __end_of_ADC_ISR:
 13735                           
 13736                           	psect	text87
 13737     0CC0                     __ptext87:	
 13738 ;; *************** function _ADC_DefaultInterruptHandler *****************
 13739 ;; Defined at:
 13740 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 13741 ;; Parameters:    Size  Location     Type
 13742 ;;		None
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;		None
 13745 ;; Return value:  Size  Location     Type
 13746 ;;                  1    wreg      void 
 13747 ;; Registers used:
 13748 ;;		None
 13749 ;; Tracked objects:
 13750 ;;		On entry : 0/0
 13751 ;;		On exit  : 0/0
 13752 ;;		Unchanged: 0/0
 13753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13754 ;;      Params:         0       0       0       0       0       0       0       0
 13755 ;;      Locals:         0       0       0       0       0       0       0       0
 13756 ;;      Temps:          0       0       0       0       0       0       0       0
 13757 ;;      Totals:         0       0       0       0       0       0       0       0
 13758 ;;Total ram usage:        0 bytes
 13759 ;; Hardware stack levels used: 1
 13760 ;; This function calls:
 13761 ;;		Nothing
 13762 ;; This function is called by:
 13763 ;;		_ADC_Initialize
 13764 ;;		_ADC_ISR
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768     0CC0                     _ADC_DefaultInterruptHandler:	
 13769                           ;psect for function _ADC_DefaultInterruptHandler
 13770                           
 13771     0CC0                     i1l58:	
 13772                           ;incstack = 0
 13773                           ; Regs used in _ADC_DefaultInterruptHandler: []
 13774                           
 13775     0CC0  0008               	return
 13776     0CC1                     __end_of_ADC_DefaultInterruptHandler:
 13777     007E                     btemp	set	126	;btemp
 13778     007E                     int$flags	set	126
 13779     007E                     wtemp0	set	126
 13780                           
 13781                           	psect	config
 13782                           
 13783                           ;Config register CONFIG1 @ 0x8007
 13784                           ;	Oscillator Selection Bits
 13785                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13786                           ;	Power-up Timer Enable
 13787                           ;	PWRTE = OFF, PWRT disabled
 13788                           ;	MCLR Pin Function Select
 13789                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13790                           ;	Flash Program Memory Code Protection
 13791                           ;	CP = OFF, Program memory code protection is disabled
 13792                           ;	Brown-out Reset Enable
 13793                           ;	BOREN = ON, Brown-out Reset enabled
 13794                           ;	Clock Out Enable
 13795                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13796     8007                     	org	32775
 13797     8007  3FFC               	dw	16380
 13798                           
 13799                           ;Config register CONFIG2 @ 0x8008
 13800                           ;	Flash Memory Self-Write Protection
 13801                           ;	WRT = OFF, Write protection off
 13802                           ;	Peripheral Pin Select one-way control
 13803                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13804                           ;	Zero Cross Detect Disable Bit
 13805                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13806                           ;	PLL Enable Bit
 13807                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13808                           ;	Stack Overflow/Underflow Reset Enable
 13809                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13810                           ;	Brown-out Reset Voltage Selection
 13811                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13812                           ;	Low-Power Brown Out Reset
 13813                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13814                           ;	In-Circuit Debugger Mode
 13815                           ;	DEBUG = 0x1, unprogrammed default
 13816                           ;	Low-Voltage Programming Enable
 13817                           ;	LVP = ON, Low-voltage programming enabled
 13818     8008                     	org	32776
 13819     8008  3EFF               	dw	16127
 13820                           
 13821                           ;Config register CONFIG3 @ 0x8009
 13822                           ;	WDT Period Select
 13823                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13824                           ;	Watchdog Timer Enable
 13825                           ;	WDTE = OFF, WDT disabled
 13826                           ;	WDT Window Select
 13827                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13828                           ;	WDT Input Clock Selector
 13829                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13830     8009                     	org	32777
 13831     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    86
    Data        31
    BSS         45
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      77
    BANK1            80      0      47
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9559[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Read@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    I2C1_Write@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    packLong@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getPos@data(BANK0[4]), parserDataBuffer(BANK1[5]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 5
		 -> parserDataBuffer(BANK1[5]), 

    S189$2$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    S189$3$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S288$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 6
		 -> parserDataBuffer(BANK1[5]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> KAPS_setAbsPos@data(BANK0[4]), KAPS_StorePos@data(BANK0[4]), ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 


Critical Paths under _main in COMMON

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ProcessMsg->_SSPA_setMute
    _ADC2Celsius->___aldiv
    _getADCValue->_ADC_GetConversionResult
    _getADCValue->_ADC_SelectChannel
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getPos->_I2C1_Read
    _KAPS_getIndex->_I2C1_Read
    _I2C1_Read->_I2C1_IsBusy
    _I2C1_Write->_I2C1_IsBusy
    _SendMsg->_SendSync
    _SendSync->_EUSART_IsTxReady
    _SendSync->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_RX
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_RX
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _main->_ProcessMsg
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->_ADC2Celsius
    _ADC2Celsius->___aldiv
    _SSPA_getPOut->_ADC2Amp
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    ___aldiv->___lmul
    _KAPS_setRelPos->_I2C1_Write
    _KAPS_setAbsPos->_packLong
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getStatus->_I2C1_Write
    _KAPS_getPos->_packLong
    _KAPS_getIndex->_I2C1_Read
    _KAPS_getIndex->_I2C1_Write
    _KAPS_StorePos->_packLong
    _KAPS_GoToIdx->_I2C1_Write
    _Parse->_SendNack
    _SendNack->_SendMsg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44057
                                             49 BANK0      1     1      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                         _ProcessMsg
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     632
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     196
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     196
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessMsg                                           3     2      1   39235
                                             46 BANK0      3     2      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (2) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SSPA_setMute                                         4     3      1     245
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SSPA_getTemp                                         6     6      0    2184
                                             40 BANK0      6     6      0
                        _ADC2Celsius
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _ADC2Celsius                                         14    12      2    1850
                                             26 BANK0     14    12      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SSPA_getPOut                                         6     6      0    4350
                                             38 BANK0      5     5      0
                            _ADC2Amp
                            _ADC2dBm
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                         10     8      2     201
                                              0 BANK0     10     8      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_SelectChannel                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC2dBm                                             10     8      2    1850
                                             26 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ADC2Amp                                             12     8      4    1940
                                             26 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     985
                                              4 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _KAPS_setRelPos                                       5     5      0    3218
                                              5 BANK0      5     5      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_setAbsPos                                      11     7      4    4328
                                             13 BANK0     11     7      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _KAPS_getStatus                                       4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_getPos                                          7     7      0    4638
                                             13 BANK0      7     7      0
                          _I2C1_Read
                         _I2C1_Write
                           _packLong
 ---------------------------------------------------------------------------------
 (2) _packLong                                            13     9      4     428
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _KAPS_getIndex                                        4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read                                            6     1      5     977
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                     _I2C1_ReadStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadStart                                       0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (2) _KAPS_StorePos                                       12     8      4    4396
                                             13 BANK0     12     8      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _unpackLong                                           9     4      5     968
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _KAPS_GoToIdx                                         4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write                                           6     1      5    3113
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteStart                                      0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (5) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_IsBusy                                          1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parse                                                3     3      0    4153
                                              6 BANK0      3     3      0
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    2019
                                              5 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _SendMsg                                              5     3      2    1979
                                              0 BANK0      5     3      2
                           _SendSync
 ---------------------------------------------------------------------------------
 (3) _SendSync                                             1     1      0     279
                                              5 COMMON     1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     211
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_IsTxReady                                     1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_EventHandler                                    2     2      0     164
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_ErrorEventHandler                               2     2      0     164
                                              2 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_TX                                        1     1      0      48
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _SendMsg
       _SendSync
         _EUSART_IsTxReady
         _EUSART_Write
     _SendNack
       _SendMsg
   _ProcessMsg
     _KAPS_GoToIdx
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_StartSend
     _KAPS_StorePos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_getIndex
       _I2C1_Read
         _I2C1_IsBusy
         _I2C1_ReadStart
           _I2C1_StartSend
       _I2C1_Write
     _KAPS_getPos
       _I2C1_Read
       _I2C1_Write
       _packLong
     _KAPS_getStatus
       _I2C1_Read
       _I2C1_Write
     _KAPS_setAbsPos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_setRelPos
       _I2C1_Write
     _SSPA_getPOut
       _ADC2Amp
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _ADC2dBm
         ___aldiv
         ___lmul
       _getADCValue
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_SelectChannel
         _ADC_StartConversion
     _SSPA_getTemp
       _ADC2Celsius
         ___aldiv
         ___lmul
       _getADCValue
     _SSPA_setMute
     _SendMsg
     _packLong
     _unpackLong
     _unpackWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      86       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      86      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 14:56:26 2024

                                    I2C1_Write@data 0022                              ??_I2C1_DefaultCallback 0070  
                                                l30 0DBC                                                  l33 0CDC  
                                                l27 0E58                                                  l36 0D70  
                                                l39 0D34                                                  l55 0D3A  
       __end_of_EUSART_OverrunErrorCallbackRegister 0DD5               ??_EUSART_OverrunErrorCallbackRegister 0076  
              ?_EUSART_OverrunErrorCallbackRegister 0074                 _EUSART_OverrunErrorCallbackRegister 0DC9  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                                     ?_KAPS_GoToIdx 0070                                       _KAPS_StorePos 0584  
                                      _SSPA_getPOut 02F4                                        _SSPA_getTemp 0602  
                                               l200 0E0D                                     __end_of_ADC2Amp 0584  
                                               l204 0DE0                                                 l213 0D69  
                                               l216 0D62                                                 l312 0D08  
                                               l410 04BB                                                 l333 0D8F  
                                               l184 0EC1                                                 l177 0E6E  
                                               l610 0FA5                                                 l442 0DB0  
                                               l188 0F05                                                 l613 0D04  
                                               l623 0DA5                                                 l616 0003  
                                               l288 0CD9                                                 l465 0D1C  
                                               l722 0F53                                                 l619 0D00  
                                               l627 0DD4                                                 l483 0E44  
                                               l804 0263                                                 l716 0F2B  
                                               l548 0EA3                                                 l725 05C3  
                                               l733 0FFF                                                 l742 03D4  
                                               l719 0792                                                 l751 0DC8  
                                               l592 0D17                                                 l840 0583  
                                               l729 07F0                                                 l833 0410  
                                               l834 0424                                                 l771 06B7  
                                               l739 0601                                                 l843 067B  
                                               l748 0500                                                 l860 06CD  
                                               l852 06C2                                                 l597 0DFD  
                                               l765 0E10                                                 l837 0470  
                                               l693 01AB                                                 l767 0E1E  
                                               l776 0D9A                                                 l792 01CD  
                                               l864 06F2                                                 l873 063E  
                                               l857 06CA                                                 l849 06BF  
                                               l882 037D                                                 l699 0F78  
                                               l964 075F                                                 l877 02F7  
                                   __end_of_ADC2dBm 067C                                                 u910 0DDB  
                                               u911 0DDA                                                 u990 0DA1  
                                               u991 0DA0                                        ?_KAPS_getPos 0070  
                         __end_of_I2C1_DataTransmit 0D0E                                     __end_of_ADC_ISR 0DEF  
                   __end_of_ADC_SetInterruptHandler 0D3B                                                 wreg 0009  
                                      ADC2dBm@value 003C                            _I2C1_ErrorInterruptClear 0CC2  
                                      _SSPA_setMute 06B8                        ?_ADC_DefaultInterruptHandler 0070  
                                     SendMsg@msg_id 0024                                       _KAPS_getIndex 0FD2  
                                      ?_EUSART_Read 0070                                        _BAUD1CONbits 019F  
                                  __end_of_I2C1_ISR 0CFD                                                l1015 0277  
                                              l1025 02F3                                                l3000 04B6  
                                              l3010 0DA6                                                l3002 04B7  
                                              l3020 0EA0                                                l3012 0DA9  
                                              l3004 04B8                                                l3022 0CFD  
                                              l3014 0E87                                                l3006 04B9  
                                              l4000 01D8                                                l3016 0E92  
                                              l3008 04BA                                                l4010 0210  
                                              l4002 01DD                                                l3018 0E99  
                                              l4020 0223                                                l4012 0215  
                                              l4004 01E2                                                l4030 023E  
                                              l4022 0226                                                l4014 021B  
                                              l4006 01E5                                                l4024 0227  
                                              l4016 021D                                                l4008 0208  
                                              l4026 022D                                                l4042 024A  
                                              l3170 0E32                                                l3172 0D13  
                                              l3180 0F84                                                l4028 0232  
                                              l4036 0240                                                l4044 0262  
                                              l3190 0F98                                                l3182 0F86  
                                              l4038 0245                                                l4222 06D9  
                                              l3192 0F9E                                                l3184 0F8C  
                                              l3176 0F7C                                                l3600 026A  
                                              l4224 0613                                                l2640 0DD5  
                                              l4080 0F59                                                l4072 0F54  
                                              l3194 0FA3                                                l3186 0F91  
                                              l3178 0F7F                                                l3530 0DEF  
                                              l3610 029A                                                l3602 027B  
                                              l4226 0372                                                l2642 0DDB  
                                              l4082 0F61                                                l4074 0F57  
                                              l3188 0F96                                                l3532 0DF0  
                                              l4228 0254                                                l3620 02C5  
                                              l3612 029D                                                l3604 0286  
                                              l2636 0D35                                                l2900 0E48  
                                              l4084 0F66                                                l4076 0F58  
                                              l3534 0DF5                                                l3542 0D01  
                                              l3702 069D                                                l3630 02E0  
                                              l3622 02CD                                                l3614 02A8  
                                              l3606 028A                                                l2910 0E4F  
                                              l2902 0E49                                                l2638 0D05  
                                              l4086 0F6F                                                l4078 0F59  
                                              l3536 0DFA                                                l3704 06A4  
                                              l3712 06B3                                                l3560 0E06  
                                              l3528 0CD7                                                l3640 0EAC  
                                              l3720 04EB                                                l3632 02EB  
                                              l3624 02CE                                                l3616 02AC  
                                              l3608 0292                                                l3552 0D2F  
                                              l3544 0DB2                                                l2912 0E56  
                                              l2904 0E4A                                                l2920 0E62  
                                              l3538 0DFC                                                l3706 06AC  
                                              l3562 0E0B                                                l3570 0D5F  
                                              l3650 0EBB                                                l3642 0EB3  
                                              l3714 04BC                                                l3730 03C6  
                                              l3722 0380                                                l3626 02D5  
                                              l3618 02B3                                                l3546 0CDA  
                                              l3810 02F7                                                l2906 0E4B  
                                              l2922 0E6C                                                l2914 0E59  
                                              l3580 0E19                                                l3708 06B0  
                                              l3564 0E0C                                                l3556 0DFE  
                                              l3652 0EBD                                                l3644 0EB4  
                                              l3636 0EA4                                                l3716 04C2  
                                              l3572 0D63                                                l3660 0EE4  
                                              l3724 0380                                                l3900 0F2E  
                                              l3628 02DB                                                l3548 0D6A  
                                              l3740 03E0                                                l3820 0332  
                                              l3812 0300                                                l3804 0DBD  
                                              l2908 0E4D                                                l2916 0E5E  
                                              l3558 0E00                                                l3654 0EBE  
                                              l3646 0EB6                                                l3638 0EA4  
                                              l3718 04D6                                                l3910 0592  
                                              l3574 0D66                                                l3670 0EF7  
                                              l3662 0EE5                                                l3726 0397  
                                              l3902 0F32                                                l3590 0748  
                                              l3582 072C                                                l3750 03F8  
                                              l3734 03D7                                                l3822 034D  
                                              l3814 031B                                                l3830 036A  
                                              l3806 0DC3                                                l2950 0D8B  
                                              l2918 0E5F                                                l2790 0D18  
                                              l3576 0E0F                                                l3568 0D5C  
                                              l3656 0EC1                                                l3648 0EBA  
                                              l3912 0594                                                l3680 0F02  
                                              l3672 0EFB                                                l3664 0EED  
                                              l3728 03AE                                                l3840 07C6  
                                              l3904 0F42                                                l3592 0757  
                                              l3584 0735                                                l3752 0400  
                                              l3736 03D9                                                l3824 034D  
                                              l3816 0329                                                l3808 02F6  
                                              l3760 0425                                                l3920 006A  
                                              l2952 0D8D                                                l2792 0D9B  
                                              l2960 048B                                                l3578 0E11  
                                              l3690 0683                                                l3914 05A1  
                                              l3906 0586                                                l3674 0EFC  
                                              l3666 0EF4                                                l3682 0F04  
                                              l3850 05C6                                                l3842 07C7  
                                              l3586 0739                                                l3770 054B  
                                              l3754 0404                                                l3746 03EB  
                                              l3738 03DD                                                l3826 0356  
                                              l3818 0329                                                l3762 042C  
                                              l3930 0094                                                l3922 006B  
                                              l2794 0DA1                                                l2970 0494  
                                              l2962 048D                                                l2954 0471  
                                              l3692 0688                                                l3916 05B2  
                                              l3908 0588                                                l3676 0EFE  
                                              l3668 0EF5                                                l3860 0FD5  
                                              l3852 05CE                                                l3844 07D7  
                                              l3596 0264                                                l3588 0741  
                                              l3772 057B                                                l3780 067A  
                                              l3756 0417                                                l3748 03F3  
                                              l3764 046C                                                l3940 00CB  
                                              l3932 009B                                                l3924 0071  
                                              l2948 0D88                                                l2796 0DC9  
                                              l2980 049F                                                l2972 0496  
                                              l2964 048F                                                l2956 0473  
                                              l3694 068F                                                l3686 067E  
                                              l3918 0D92                                                l3678 0EFF  
                                              l3862 0FD6                                                l3854 05DE  
                                              l3846 07ED                                                l3838 07C3  
                                              l3598 0266                                                l3870 06BA  
                                              l3950 010A                                                l3942 00DD  
                                              l3934 00B3                                                l3926 0083  
                                              l2798 0DCF                                                l2990 04AE  
                                              l2982 04A2                                                l2974 0498  
                                              l2966 0490                                                l2958 0475  
                                              l3688 067F                                                l3864 0FE6  
                                              l3856 05F4                                                l3848 05C4  
                                              l3768 0544                                                l3776 063F  
                                              l3792 060B                                                l3784 0604  
                                              l3872 06C5                                                l3960 0144  
                                              l3952 0114                                                l3944 00F9  
                                              l3936 00BD                                                l3928 008D  
                                              l2992 04B1                                                l2984 04A5  
                                              l2976 049B                                                l2968 0491  
                                              l3698 0697                                                l3890 0F1A  
                                              l3866 0FFC                                                l3858 0FD2  
                                              l3778 0646                                                l3794 061E  
                                              l3786 0605                                                l3962 0151  
                                              l3954 0133                                                l3946 0103  
                                              l3938 00C4                                                l2898 0E45  
                                              l2994 04B3                                                l2986 04A8  
                                              l2978 049D                                                l3980 01B7  
                                              l3892 0760                                                l3796 0627  
                                              l3788 0608                                                l3876 06D0  
                                              l3868 06B9                                                l3964 0159  
                                              l3956 0136                                                l3948 0106  
                                              l3972 0188                                                l2996 04B4  
                                              l2988 04AB                                                l3990 01CA  
                                              l3982 01BA                                                l3974 01AE  
                                              l3886 0F08                                                l3894 0763  
                                              l3878 06E4                                                l3966 016A  
                                              l3958 013A                                                l2998 04B5  
                                              l3992 01CD                                                l3984 01BF  
                                              l3976 01AF                                                l3888 0F0A  
                                              l3896 0770                                                l3968 0172  
                                              l3994 01CE                                                l3986 01C2  
                                              l3978 01B4                                                l3898 0781  
                                              l3996 01D0                                                l3988 01C7  
                                              l3998 01D3                                   _I2C1_Deinitialize 0000  
                                              u1000 0DCF                                                u1001 0DCE  
                                              u2010 01B4                                                u2011 01B3  
                                              u1300 0F8C                                                u2020 0222  
                                              u1301 0F8B                                                u2021 0221  
                                              u2005 00E4                                                u1310 0F96  
                                              u2030 022D                                                u1311 0F95  
                                              u2031 022C                                                u1320 0F9E  
                                              u2040 0232                                                u1321 0F9D  
                                              u2041 0231                                                u2107 03E4  
                                              u2060 0F61                                                u2117 040B  
                                              u2061 0F60                                                _LATA 010C  
                                              u2070 0F6F                                                _LATB 010D  
                                              u2071 0F6E                                                _LATC 010E  
                                              u1290 0F84                                                u1530 0DF5  
                                              u1610 0757                                                u1291 0F83  
                                              u1531 0DF4                                                u1611 0756  
                                              u1540 0DFA                                                u1700 02DB  
                                              u1620 026A                                                u1541 0DF9  
                                              u1701 02DA                                                u1621 0269  
                                              u1605 0749                                                u1550 0E06  
                                              u1710 02E0                                                u1630 027B  
                                              u1551 0E05                                                u1711 02DF  
                                              u1631 027A                                                u1560 0E0B  
                                              u1720 0EAC                                                u1800 03A4  
                                              u1640 029A                                                u1561 0E0A  
                                              u1721 0EAB                                                u1641 0299  
                                              u1570 0E19                                                u1730 0EED  
                                              u1810 03BC                                                u1571 0E18  
                                              u1731 0EEC                                                u1740 068F  
                                              u1900 07ED                                                u1660 02AC  
                                              u1580 0739                                                u1820 03F3  
                                              u1741 068E                                                u1805 03A0  
                                              u1901 07EC                                                u1661 02AB  
                                              u1581 0738                                                u1821 03F2  
                                              u1750 069C                                                u1910 05F4  
                                              u1830 0417                                                u1751 069B  
                                              u1815 03B8                                                u1911 05F3  
                                              u1655 029E                                                u1831 0416  
                                              u1760 04D2                                                u1920 0FFC  
                                              u1680 02C5                                                u1921 0FFB  
                                              u1681 02C4                                                u1770 04E7  
                                              u1930 06BF                                                u1675 02AD  
                                              u1595 0742                                                u1931 06BE  
                                              u1780 04FC                                                u1940 06CA  
                                              u1765 04CE                                                u1685 02C1  
                                              u1845 041C                                                u1941 06C9  
                                              u1790 038D                                                u1775 04E3  
                                              u1695 02CF                                                u1855 0632  
                                              u1785 04F8                                                u1865 030B  
                                              u1795 0389                                                u1875 031E  
                                              u1955 06E8                                                u1965 058B  
                                              u1885 033D                                                u1895 0359  
                                              u1975 0078                                                u1985 00A2  
                                              u1995 00D2                                                i1l52 0DEE  
                                              i1l58 0CC0                                                _UART 0793  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                                    ??_I2C1_ReadStart 0074  
                                   ??_I2C1_StopSend 0070                                   I2C1_Write@address 0020  
                                              _main 0F54                                                _kaps 0064  
                                  __end_of_I2C_Host 0805                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                       _INT_DefaultInterruptHandler 0000                                                start 0036  
        __end_of_EUSART_DefaultOverrunErrorCallback 0D01                ??_EUSART_DefaultOverrunErrorCallback 0074  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 0CFD  
                                     ADC2dBm@result 0040                     __end_of_INT_SetInterruptHandler 0D1D  
                                   _I2C1_EVENT_IDLE 0CF1                                     _I2C1_EVENT_NACK 0D1D  
                                        _i2c1Status 0052                                     _I2C1_EVENT_STOP 0D80  
                                   __end_of_SendMsg 06B8                                      ??_KAPS_GoToIdx 0025  
                                    ?_KAPS_StorePos 002D                                      _KAPS_getStatus 07C3  
                                     ?_EUSART_Write 0074                                   __end_of_I2C1_Read 0F06  
                                   __end_of___aldiv 02F4                                               ?_main 0070  
                                             _IOCAF 0393                                               _IOCBF 0396  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCBN 0395  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                               i1l210 0CF8  
                                             i1l300 0D2E                                               i1l231 0CC1  
                                             i1l303 0D12                                               i1l207 0CFC  
                                             i1l240 0D4D                                               i1l321 0CC4  
                                             i1l225 0543                                               i1l234 0CF4  
                                             i1l306 0D5B                                               i1l219 0E31  
                                             i1l324 0CE4                                               i1l228 0EE3  
                                             i1l309 0CEC                                               i1l237 0D7F  
                                             i1l261 0D28                                               i1l318 0CC7  
                                             i1l270 0CCD                                               i1l247 0FD1  
                                             i1l255 072B                                               i1l264 0D87  
                                             i1l273 0D0D                                               i1l282 0CD6  
                                             i1l258 0D22                                               i1l450 0026  
                                             i1l291 0CCA                                               i1l267 0D54  
                                             i1l276 0CE0                                               i1l285 0CD3  
                                             i1l294 0CE8                                               i1l279 0CD0  
                                             i1l455 0034                                               i1l448 0018  
                                             i1l297 0CF0                                               i1l449 0034  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               u94_20 0FAD  
                                             u94_21 0FAC                                               u95_20 0FC5  
                                             u95_21 0FC4                                               u96_20 06FD  
                                             u96_21 06FC                                               _RXPPS 0E24  
                                             u97_20 0704                                               u97_21 0703  
                                             u98_20 071A                                               u98_21 0719  
                                  ??_I2C1_StartSend 0074                            ?_I2C1_EVENT_SEND_RD_ADDR 0070  
                               ___lmul@multiplicand 0024                                               _Parse 01AC  
                                    ?_KAPS_getIndex 0070                                   ??_I2C1_Initialize 0076  
                                   SendMsg@data_len 0021                             ??_I2C1_CallbackRegister 0076  
                                 ?_I2C1_IsRxBufFull 0070                                    ProcessMsg@msg_id 0050  
                          ?_I2C1_EVENT_SEND_WR_ADDR 0070                                               _sspas 00A0  
                                             pclath 000A                               I2C1_DataTransmit@data 0070  
                                    _KAPS_setAbsPos 0760                                  ??_I2C1_IsRxBufFull 0070  
                                             status 0003                                               wtemp0 007E  
                                    _KAPS_setRelPos 0F2C                                        ??_I2C1_Close 0070  
                                        SendMsg@sum 0023                                        __end_of_UART 07C3  
                                      ??_I2C1_Write 0075                                     __initialization 0038  
                          ??_I2C1_ErrorEventHandler 0072                                   getADCValue@sample 0025  
                                      __end_of_main 0F7C                              __end_of_KAPS_getStatus 07F1  
                                         ??_ADC2Amp 0075                                           ??_ADC2dBm 0075  
                                    getADCValue@sum 0027                                    _I2C1_EVENT_ERROR 0D23  
                                    ??_EUSART_Write 0075                                    _I2C1_EVENT_RESET 0D4E  
                                         ??_ADC_ISR 0070                         ?_INTERRUPT_InterruptManager 0070  
                                  __end_of_SendNack 0D9B                                              ??_main 0076  
                                  __end_of_SendSync 0E1F                                    SSPA_setMute@band 0075  
                                  SSPA_setMute@mute 0074  EUSART_OverrunErrorCallbackRegister@callbackHandler 0074  
EUSART_FramingErrorCallbackRegister@callbackHandler 0074                I2C1_CallbackRegister@callbackHandler 0074  
                                            ?_Parse 0070                                  __end_of_I2C1_Close 0E32  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 005E  
                             _I2C1_InterruptsEnable 0D05                                              _ADRESH 009C  
                                            _ADRESL 009B                              __end_of_KAPS_setAbsPos 0793  
                                __end_of_I2C1_Write 0EC2                                              _ANSELA 018C  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                            _BORCON 0116                                   KAPS_setAbsPos@reg 0037  
                                 KAPS_setAbsPos@pos 002D                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RC2PPS 0EA2  
                                            _RB5PPS 0E9D                                              _RB6PPS 0E9E  
                                            u112_20 050C                                              u112_21 050B  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            _ODCONC 028E                                              i1l3160 0DE1  
                                            u113_20 0514                                              u113_21 0513  
                                            i1l3162 0DE3                                              i1l3164 0DE9  
                                            i1l2542 0D0A                                              i1l2702 0D0E  
                                            i1l3166 0CF9                                              i1l2560 0CE5  
                                            i1l2552 0CE9                                              i1l2544 0CD4  
                                            i1l2712 0D78                                              i1l2720 0D4C  
                                            i1l3168 0CF5                                              u114_20 0522  
                                            u114_21 0521                                              i1l2474 0CC5  
                                            i1l2490 0E2E                                              i1l2482 0E1F  
                                            i1l2562 0CD1                                              i1l2730 0FB1  
                                            i1l2706 0CF1                                              i1l2714 0D7E  
                                            i1l2546 0D80                                              i1l2570 0D51  
                                            i1l3370 001D                                              i1l3362 0006  
                                            i1l2476 0CC2                                              i1l2484 0E21  
                                            i1l2492 0CC8                                              i1l2556 0CCB  
                                            i1l2564 0CED                                              i1l2740 0FC9  
                                            i1l2732 0FBD                                              i1l2724 0FA6  
                                            i1l2708 0CF3                                              i1l2548 0D86  
                                            i1l2572 0D53                                              i1l3372 0022  
                                            i1l3364 000A                                              i1l2494 0CDD  
                                            i1l2478 0CE1                                              i1l2486 0E28  
                                            i1l2566 0CCE                                              i1l2742 0FCC  
                                            i1l2734 0FC0                                              i1l2726 0FA6  
                                            i1l2718 0D47                                              i1l2750 06F5  
                                            i1l3374 002B                                              i1l3366 000F  
                                            i1l2488 0E2B                                              i1l2736 0FC5  
                                            i1l2744 0FD0                                              i1l2728 0FAD  
                                            i1l2760 0714                                              i1l2752 06FD  
                                            i1l2568 0D4E                                              u115_20 052A  
                                            i1l3376 0030                                              i1l3368 0014  
                                            u115_21 0529                                              i1l2738 0FC6  
                                            i1l2770 072A                                              i1l2762 071A  
                                            i1l2754 0704                                              i1l2930 0514  
                                            i1l2764 071E                                              i1l2756 070B  
                                            i1l2748 06F3                                              i1l2940 0EC2  
                                            i1l2932 051A                                              i1l2924 0501  
                                            i1l2766 0724                                              i1l2758 0710  
                                            i1l2774 0D1D                                              i1l2782 0D23  
                                            i1l2942 0EC7                                              i1l2694 0D55  
                                            i1l2934 0522                                              i1l2926 0504  
                                            i1l2768 0727                                              i1l2776 0D1D  
                                            i1l2784 0D23                                              i1l2944 0ECA  
                                            i1l2936 052A                                              i1l2928 050C  
                                            i1l2778 0D21                                              i1l2786 0D27  
                                            i1l2946 0EDE                                              i1l2698 0D29  
                                            i1l2938 052F                                              u142_20 000A  
                                            u142_21 0009                                              u143_20 000F  
                                            u143_21 000E                                              u128_20 0DE9  
                                            u144_20 0014                                              u128_21 0DE8  
                                            u144_21 0013                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u145_20 001D                                              u145_21 001C  
                                            u146_20 0022                                              u146_21 0021  
                                            u147_20 002B                                              u147_21 002A  
                                            u148_20 0030                                              u148_21 002F  
                                            _OSCCON 0099                              __end_of_KAPS_setRelPos 0F54  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                           __end_of_I2C1_EVENT_IDLE 0CF5                             __end_of_I2C1_EVENT_NACK 0D23  
                                KAPS_getStatus@data 0028                             __end_of_I2C1_EVENT_STOP 0D88  
                             SSPA_getPOut@adc_value 0048                                           ??_SendMsg 0022  
                       __end_of_I2C1_InterruptClear 0CC8                                     ??_KAPS_StorePos 0031  
                                            ___lmul 072C                                           ??___aldiv 0074  
                                   ?_KAPS_getStatus 0070                                    __end_of_packLong 03D5  
                                _I2C1_RestartEnable 0CD4                                           ?_I2C1_ISR 0070  
                                            _parser 00B8                                   ?_EUSART_IsRxReady 0070  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 0D80                                   ?_EUSART_IsTxReady 0070  
                                 ProcessMsg@payload 00C4                                          _ProcessMsg 0068  
                                      packLong@data 002C                                   ?_CLOCK_Initialize 0070  
                                ??_EUSART_IsRxReady 0074                                     ??_KAPS_getIndex 0025  
                                ??_EUSART_IsTxReady 0074                                  ??_CLOCK_Initialize 0074  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 0D4E                                 ?_I2C1_RestartEnable 0070  
                                 ??_I2C1_WriteStart 0074             INT_SetInterruptHandler@InterruptHandler 0074  
           ADC_SetInterruptHandler@InterruptHandler 0074                                     ?_KAPS_setAbsPos 002D  
                              __end_of_KAPS_GoToIdx 0F2C                                   _SYSTEM_Initialize 0E32  
                           __end_of__initialization 0064                                     ?_KAPS_setRelPos 0070  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                     ??_I2C1_IsNack 0070                                       ??_I2C1_IsBusy 0074  
                                ?_SYSTEM_Initialize 0070                                         SendMsg@data 0020  
                                getADCValue@channel 0024                                       ??_ADC2Celsius 003C  
                              ??_I2C1_RestartEnable 0070                                      __pcstackCOMMON 0070  
                                     __end_of_Parse 0264                                        __pidataBANK0 0D71  
                                      __pidataBANK1 0E6F                                 ??_SYSTEM_Initialize 0076  
                               KAPS_setRelPos@value 0029                          ??_I2C1_ErrorInterruptClear 0070  
                                   _I2C1_IsBusy$646 0074                                          ??_I2C1_ISR 0074  
                           _ADC_GetConversionResult 0D2F                                      _OPTION_REGbits 0095  
                             __end_of_I2C1_EVENT_RX 072C                               __end_of_I2C1_EVENT_TX 0FD2  
                                           ??_Parse 0026                              ?_I2C1_InterruptsEnable 0070  
                                 _I2C1_EventHandler 0501                           __end_of_SYSTEM_Initialize 0E45  
                                        __pbssBANK0 0052                                          __pbssBANK1 00B8  
                              __end_of_EUSART_Write 0D05                                  ?_I2C1_EventHandler 0070  
                                 KAPS_setRelPos@reg 0028                               _I2C1_StatusFlagsClear 0CE1  
                                  ?_I2C1_EVENT_IDLE 0070                                    ?_I2C1_EVENT_NACK 0070  
                                         ?_SendNack 0070                                    ?_I2C1_EVENT_STOP 0070  
                                         ?_SendSync 0070                                 ??_I2C1_EventHandler 0072  
                                        __pmaintext 0F54                                 __end_of_I2C1_IsAddr 0D5C  
                               __end_of_I2C1_IsData 0D13                                 __end_of_I2C1_IsNack 0D2F  
                                           ?___lmul 0020                                 __end_of_I2C1_IsBusy 0E0E  
                                           _ADC2Amp 0544                                             _ADC2dBm 063F  
                                        __pintentry 0004                                     _I2C1_Initialize 0E59  
                              _EUSART_AutoBaudQuery 0000                                 __end_of_ADC2Celsius 0471  
                                           _ADC_ISR 0DE1                                      ___lmul@product 0028  
                                       ?_ProcessMsg 004E                                  KAPS_setAbsPos@data 0033  
                             __end_of_I2C1_NackSend 0CF1                               __end_of_I2C1_BusReset 0CE1  
                                   _EUSART_IsTxDone 0000                                     _EUSART_ErrorGet 0000  
                                         _I2C1_Read 0EE4                           __end_of_I2C1_EventHandler 0544  
                            _I2C1_ErrorEventHandler 0EC2                                             _OSCTUNE 0098  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                           _SSP1BUF 0211                            __end_of_I2C1_EVENT_ERROR 0D29  
                          __end_of_I2C1_EVENT_RESET 0D55                                           ?_packLong 0020  
                     __end_of_I2C1_CallbackRegister 0DE1                                     KAPS_getPos@data 002F  
                             __end_of_I2C1_StopSend 0CCB                                          ??_SendNack 0076  
                                        ??_SendSync 0075                                _ADC_InterruptHandler 006B  
                                           _SendMsg 067C                             _ADC_SetInterruptHandler 0D35  
                                     ??_getADCValue 0022                                             ___aldiv 0264  
                                  KAPS_StorePos@idx 0038                                    KAPS_StorePos@reg 0037  
                                  KAPS_StorePos@pos 002D                           ??_ADC_GetConversionResult 0076  
                                           __ptext1 0E32                                             __ptext2 0471  
                                           __ptext3 0DA6                                             __ptext4 0D18  
                                           __ptext5 0E59                                             __ptext6 0D05  
                                           __ptext7 0DD5                                             __ptext8 0E87  
                                           __ptext9 0DC9                                I2C1_Write@dataLength 0023  
                               _I2C1_RestartDisable 0CD1                                    ___aldiv@dividend 0030  
                          ??_PIN_MANAGER_Initialize 0074                                          ?_I2C1_Read 0020  
                                     ?_I2C1_AckSend 0070                             _INT_SetInterruptHandler 0D18  
                                   _i2c1_eventTable 0805                                             clrloop0 0D3C  
                              end_of_initialization 0064                                          ??_packLong 0024  
                            ?_I2C1_StatusFlagsClear 0070                                             init_ram 0D41  
                                           initloop 0D42                                         _I2C1_IsAddr 0D55  
                                       _I2C1_IsData 0D0E                                         _I2C1_IsNack 0D29  
                                       _I2C1_IsBusy 0DFE                                    ??_KAPS_getStatus 0025  
                                 _EUSART_Initialize 0E87                                ?_I2C1_RestartDisable 0070  
                                  I2C1_Read@address 0020                             __end_of_I2C1_Initialize 0E6F  
                      __end_of_ADC_IsConversionDone 0D71                                         _ADC2Celsius 0425  
                                ?_EUSART_Initialize 0070                                   KAPS_getIndex@data 0028  
                                  ___aldiv@quotient 0036                                    _I2C1_DataReceive 0CCB  
                                   _I2C1_WriteStart 0D5C                                 __end_of_getADCValue 0425  
                               ??_EUSART_Initialize 0076                                        _KAPS_GoToIdx 0F06  
                                         _SSPDATPPS 0E21                                           _SSPCLKPPS 0E20  
                                  ??_KAPS_setAbsPos 0031                                      ??_I2C1_AckSend 0070  
               __end_of_ADC_DefaultInterruptHandler 0CC1                         _ADC_DefaultInterruptHandler 0CC0  
                               _ADC_StartConversion 0CDA                                    ??_KAPS_setRelPos 0025  
                               _EUSART_Deinitialize 0000                                          _unpackLong 04BC  
                                        _unpackWord 0DBD                           __end_of_EUSART_Initialize 0EA4  
                     ??_ADC_DefaultInterruptHandler 0070                           ??_ADC_SetInterruptHandler 0076  
                             ??_I2C1_RestartDisable 0070                                      ProcessMsg@data 004E  
                              ?_ADC_StartConversion 0070                                        getADCValue@i 0029  
                      __end_of_INTERRUPT_Initialize 0DB1                                      _I2C1_ERROR_ISR 0CF5  
                                    __end_of___lmul 0760                               __end_of_KAPS_StorePos 05C4  
                                         Parse@data 0028                                       ?_SSPA_getPOut 0070  
                        __end_of_I2C1_ReceiveEnable 0CD1                                        _EUSART_Write 0D01  
                                     ?_SSPA_getTemp 0070                             __end_of_i2c1_eventTable 0817  
                                    _ADC_Initialize 0E45                                KAPS_setRelPos@offset 0027  
                         ??_INT_SetInterruptHandler 0076                             ??_I2C1_InterruptsEnable 0074  
                                     ??_KAPS_getPos 002D                                            ADC2Amp@v 003A  
                               start_initialization 0038                                       ?_SSPA_setMute 0074  
                                       ??_I2C1_Read 0075                                            ADC2dBm@v 003A  
                             __end_of_KAPS_getIndex 1000                                        SendSync@data 0075  
                                     ??_EUSART_Read 0074                             _I2C1_EVENT_SEND_RD_ADDR 0D78  
                           __end_of_I2C1_WriteStart 0D63                                    ?_I2C1_Initialize 0070  
                                 KAPS_getStatus@reg 0027                               ??_ADC_StartConversion 0074  
                           _I2C1_EVENT_SEND_WR_ADDR 0D47                                         _getADCValue 03D5  
                            __end_of_I2C1_ERROR_ISR 0CF9                          _EUSART_FramingErrorHandler 0076  
                                  _I2C1_IsRxBufFull 0CE9                                            ??___lmul 0074  
                                          ?_ADC2Amp 003A                                            ?_ADC2dBm 003A  
                            __end_of_ADC_Initialize 0E59                                         __pdataBANK0 0064  
                                       __pdataBANK1 00A0                                      ??_SSPA_getPOut 0046  
                                    ??_SSPA_getTemp 0048                                            ?_ADC_ISR 0070  
                                   unpackLong@value 0020                                        ??_ProcessMsg 004F  
                           ?_I2C1_ErrorEventHandler 0070                                      ??_SSPA_setMute 0020  
                                       __pbssCOMMON 0076                                           ___latbits 0001  
                                     __pcstackBANK0 0020                                _ADC_IsConversionDone 0D6A  
                                       ?_unpackLong 0020                                 __end_of_KAPS_getPos 0602  
                                       ?_unpackWord 0020                           ?_I2C1_ErrorInterruptClear 0070  
                      __end_of_I2C1_DefaultCallback 0CC2                                   ?_I2C1_EVENT_ERROR 0070  
                                 ?_I2C1_EVENT_RESET 0070                                 __end_of_EUSART_Read 0FA6  
                                ??_I2C1_EVENT_ERROR 0070                                  ??_I2C1_EVENT_RESET 0070  
                                         __pnvBANK0 006B                                  __end_of_ProcessMsg 01AC  
                                          ?_SendMsg 0020                                __end_of_I2C1_AckSend 0CE9  
                            _PIN_MANAGER_Initialize 0471                                     ?_I2C1_ERROR_ISR 0070  
                                 ADC2Celsius@result 0044                                      _I2C1_ReadStart 0D63  
                                 _ADC_SelectChannel 0DB1                                            ?___aldiv 002C  
                                   ?_ADC_Initialize 0070                                  ?_ADC_SelectChannel 0070  
                                          _I2C1_ISR 0CF9                        ??_INTERRUPT_InterruptManager 0074  
                    __end_of_I2C1_ErrorEventHandler 0EE4                                            _BAUD1CON 019F  
                                    KAPS_getPos@reg 0033                              _EUSART_TransmitDisable 0000  
                                  SSPA_getPOut@band 004A                                            _I2C_Host 07F1  
                               ??_ADC_SelectChannel 0074                               ?_ADC_IsConversionDone 0070  
                               I2C1_Read@dataLength 0023                       I2C1_EVENT_ERROR@retEventState 0070  
                           ??_I2C1_StatusFlagsClear 0070                            __end_of_I2C1_DataReceive 0CCE  
                         ??_I2C1_EVENT_SEND_RD_ADDR 0070                                    _EUSART_IsRxReady 0D13  
                              _INTERRUPT_Initialize 0DA6                                     unpackWord@value 0020  
                                  _EUSART_IsTxReady 0DEF                                     ___aldiv@divisor 002C  
                                  _CLOCK_Initialize 0D88                                      _I2C1_StartSend 0CD7  
                                   ___aldiv@counter 0034                                        ?_I2C1_IsAddr 0070  
                                      ?_I2C1_IsData 0070                                            _LATCbits 010E  
                                      ?_I2C1_IsNack 0070                           ??_I2C1_EVENT_SEND_WR_ADDR 0071  
                                      ?_I2C1_IsBusy 0070                               _I2C1_CallbackRegister 0DD5  
                                         clear_ram0 0D3B                                            _PIE1bits 0090  
                                          _PIE2bits 0091                                    ?_I2C1_WriteStart 0070  
                                 _eusartRxLastError 0060                                          _I2C1_Close 0E1F  
                            __end_of_I2C1_ReadStart 0D6A                           __end_of_ADC_SelectChannel 0DBD  
                                      ?_ADC2Celsius 003A                                            _PIR1bits 0010  
                                          _PIR2bits 0011                                          _I2C1_Write 0EA4  
                                  KAPS_getIndex@reg 0027                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                  KAPS_getPos@F9702 00C0                                    SSPA_getTemp@band 004D  
                                        _ADCON0bits 009D                            ADC_SelectChannel@channel 0075  
                                       _KAPS_getPos 05C4                        I2C1_EVENT_NACK@retEventState 0070  
                                     _I2C1_EVENT_RX 06F3                                       _I2C1_EVENT_TX 0FA6  
                                       _EUSART_Read 0F7C                                   ___lmul@multiplier 0020  
                             ?_INTERRUPT_Initialize 0070                              __end_of_I2C1_StartSend 0CDA  
                              __end_of_SSPA_getPOut 037E                                __end_of_SSPA_getTemp 063F  
                               _I2C1_InterruptClear 0CC5                                            _SendNack 0D90  
                                          _SendSync 0E0E                                __end_of_SSPA_setMute 06F3  
                                   ?_I2C1_ReadStart 0070                            ?_ADC_GetConversionResult 0074  
                             _EUSART_IsTxReady$1324 0074                                      unpackLong@data 0024  
                                     _I2C1_Callback 0062                                   KAPS_StorePos@data 0033  
                              _I2C1_DefaultCallback 0CC1                                     KAPS_GoToIdx@idx 0027  
                                   KAPS_GoToIdx@reg 0028                                ?_I2C1_InterruptClear 0070  
                                     _I2C1_NackSend 0CED                              ??_ADC_IsConversionDone 0074  
                                     _I2C1_BusReset 0CDD                                   ??_I2C1_EVENT_IDLE 0070  
                                 ??_I2C1_EVENT_NACK 0070                                   ??_I2C1_EVENT_STOP 0070  
                     __end_of_I2C1_InterruptsEnable 0D09                                      ?_I2C1_EVENT_RX 0070  
                                    ?_I2C1_EVENT_TX 0070                                    ADC2Celsius@value 0040  
                                     _I2C1_ErrorGet 0000                                  _EUSART_AutoBaudSet 0000  
                                          __ptext10 0D9B                                            __ptext11 0D88  
                                          __ptext20 03D5                                            __ptext12 0E45  
                                          __ptext21 0CDA                                            __ptext13 0D35  
                                          __ptext30 0760                                            __ptext22 0DB1  
                                          __ptext14 0068                                            __ptext31 07C3  
                                          __ptext23 0D6A                                            __ptext15 0DBD  
                                          __ptext40 0EA4                                            __ptext32 05C4  
                                          __ptext24 0D2F                                            __ptext16 06B8  
                                          __ptext41 0D5C                                            __ptext33 037E  
                                          __ptext25 063F                                            __ptext17 0602  
                                          __ptext50 0F7C                                            __ptext42 0CD7  
                                          __ptext34 0FD2                                            __ptext26 0544  
                                          __ptext18 0425                                            __ptext51 0CFD  
                                          __ptext43 0DFE                                            __ptext35 0EE4  
                                          __ptext27 072C                                            __ptext19 02F4  
                                          __ptext60 0CF5                                            __ptext52 0003  
                                          __ptext44 01AC                                            __ptext36 0D63  
                                          __ptext28 0264                                            __ptext61 0EC2  
                                          __ptext53 0D13                                            __ptext45 0D90  
                                          __ptext37 0584                                            __ptext29 0F2C  
                                          __ptext70 0FA6                                            __ptext62 0D4E  
                                          __ptext46 067C                                            __ptext38 04BC  
                                          __ptext71 0CD4                                            __ptext63 0D80  
                                          __ptext55 0CF9                                            __ptext47 0E0E  
                                          __ptext39 0F06                                            __ptext80 0E1F  
                                          __ptext72 0D09                                            __ptext64 0D23  
                                          __ptext56 0501                                            __ptext48 0D01  
                                          __ptext81 0CE1                                            __ptext73 0CD1  
                                          __ptext65 0D1D                                            __ptext57 0D29  
                                          __ptext49 0DEF                                            __ptext82 0CC5  
                                          __ptext74 0CCE                                            __ptext66 06F3  
                                          __ptext58 0D0E                                            __ptext83 0CC2  
                                          __ptext75 0CED                                            __ptext67 0D47  
                                          __ptext59 0D55                                            __ptext84 0CDD  
                                          __ptext76 0CE9                                            __ptext68 0D78  
                                          __ptext85 0CC1                                            __ptext77 0CCB  
                                          __ptext69 0CF1                                            __ptext86 0DE1  
                                          __ptext78 0CE5                                            __ptext87 0CC0  
                                          __ptext79 0CC8                            __end_of_I2C1_IsRxBufFull 0CED  
                                      _SSP1CON1bits 0215                                        _SSP1CON2bits 0216  
                       __end_of_I2C1_RestartDisable 0CD4                                  _I2C1_ReceiveEnable 0CCE  
                                   ?_I2C1_StartSend 0070                               _EUSART_TransmitEnable 0000  
                                          _packLong 037E                              ?_I2C1_CallbackRegister 0074  
                                    unpackWord@data 0022                                 ?_I2C1_ReceiveEnable 0070  
                                  _parserDataBuffer 00CA                                         ?_I2C1_Close 0070  
                                     _I2C1_StopSend 0CC8                                        ?_getADCValue 0020  
                                        _RC1STAbits 019D                                         ?_I2C1_Write 0020  
                                          int$flags 007E                  __end_of_INTERRUPT_InterruptManager 0036  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 0DA6  
             ??_EUSART_FramingErrorCallbackRegister 0076                ?_EUSART_FramingErrorCallbackRegister 0074  
               _EUSART_FramingErrorCallbackRegister 0D9B                               ?_I2C1_DefaultCallback 0070  
                                          main@data 0051                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0070                    __end_of_I2C1_ErrorInterruptClear 0CC5  
                             SSPA_getTemp@adc_value 004A                                      ?_I2C1_NackSend 0070  
                                    ?_I2C1_BusReset 0070                                ??_I2C1_ReceiveEnable 0070  
                                    packLong@result 0028                                          _INTCONbits 000B  
                                      _I2C1_AckSend 0CE5                                _INT_InterruptHandler 0078  
                            ??_INTERRUPT_Initialize 0076                                        ??_unpackLong 0025  
                        I2C1_EVENT_RX@retEventState 0071                            ?_ADC_SetInterruptHandler 0074  
                                      ??_unpackWord 0074                                            intlevel1 0000  
                       __end_of_ADC_StartConversion 0CDD                                    ??_I2C1_ERROR_ISR 0074  
                                I2C1_Read@retStatus 0075                             ?_PIN_MANAGER_Initialize 0070  
                        __end_of_I2C1_RestartEnable 0CD7          __end_of_EUSART_DefaultFramingErrorCallback 0004  
              ??_EUSART_DefaultFramingErrorCallback 0074                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 0003                     __end_of_ADC_GetConversionResult 0D35  
                                    ?_I2C1_StopSend 0070                                    ??_ADC_Initialize 0076  
                                     I2C1_Read@data 0022                            ?_INT_SetInterruptHandler 0074  
                          __end_of_EUSART_IsRxReady 0D18                            __end_of_EUSART_IsTxReady 0DFE  
                                __end_of_unpackLong 0501                            __end_of_CLOCK_Initialize 0D90  
                                __end_of_unpackWord 0DC9                                       __pstringtext1 0793  
                                     __pstringtext2 07F1                                       __pstringtext3 0805  
                                     ADC2Amp@result 0042                                     ??_I2C1_EVENT_RX 0070  
                                   ??_I2C1_EVENT_TX 0071                                        ___aldiv@sign 0035  
                                 _I2C1_DataTransmit 0D09                                          _TX1STAbits 019E  
                                ?_I2C1_DataTransmit 0070                                 SSPA_getTemp@channel 004C  
                                      ADC2Amp@value 003E                                   ?_I2C1_DataReceive 0070  
                                EUSART_Write@txData 0074                                       SendNack@error 0025  
                    __end_of_PIN_MANAGER_Initialize 04BC                       __end_of_I2C1_StatusFlagsClear 0CE5  
                                ??_I2C1_DataReceive 0070                                        ADC2Celsius@v 003A  
                        I2C1_EVENT_TX@retEventState 0071                                 ??_I2C1_DataTransmit 0070  
