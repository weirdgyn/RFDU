

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 15:33:46 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,delta=2
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   106                           	dabs	1,0x7E,2
   107     0000                     
   108                           ; Generated 07/09/2023 GMT
   109                           ; 
   110                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution. Publication is not required when
   124                           ;        this file is used in an embedded application.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC16F1618 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     010C                     	;# 
   196     010D                     	;# 
   197     010E                     	;# 
   198     0111                     	;# 
   199     0112                     	;# 
   200     0113                     	;# 
   201     0114                     	;# 
   202     0115                     	;# 
   203     0116                     	;# 
   204     0117                     	;# 
   205     0118                     	;# 
   206     0119                     	;# 
   207     011C                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     018E                     	;# 
   211     0191                     	;# 
   212     0191                     	;# 
   213     0192                     	;# 
   214     0193                     	;# 
   215     0193                     	;# 
   216     0194                     	;# 
   217     0195                     	;# 
   218     0196                     	;# 
   219     0197                     	;# 
   220     0199                     	;# 
   221     0199                     	;# 
   222     0199                     	;# 
   223     019A                     	;# 
   224     019A                     	;# 
   225     019A                     	;# 
   226     019B                     	;# 
   227     019B                     	;# 
   228     019B                     	;# 
   229     019B                     	;# 
   230     019B                     	;# 
   231     019C                     	;# 
   232     019C                     	;# 
   233     019C                     	;# 
   234     019D                     	;# 
   235     019D                     	;# 
   236     019D                     	;# 
   237     019E                     	;# 
   238     019E                     	;# 
   239     019E                     	;# 
   240     019F                     	;# 
   241     019F                     	;# 
   242     019F                     	;# 
   243     019F                     	;# 
   244     019F                     	;# 
   245     020C                     	;# 
   246     020D                     	;# 
   247     020E                     	;# 
   248     0211                     	;# 
   249     0211                     	;# 
   250     0212                     	;# 
   251     0212                     	;# 
   252     0213                     	;# 
   253     0213                     	;# 
   254     0214                     	;# 
   255     0214                     	;# 
   256     0215                     	;# 
   257     0215                     	;# 
   258     0215                     	;# 
   259     0215                     	;# 
   260     0216                     	;# 
   261     0216                     	;# 
   262     0217                     	;# 
   263     0217                     	;# 
   264     028C                     	;# 
   265     028D                     	;# 
   266     028E                     	;# 
   267     0291                     	;# 
   268     0291                     	;# 
   269     0292                     	;# 
   270     0293                     	;# 
   271     0294                     	;# 
   272     0298                     	;# 
   273     0298                     	;# 
   274     0299                     	;# 
   275     029A                     	;# 
   276     029B                     	;# 
   277     029E                     	;# 
   278     030C                     	;# 
   279     030D                     	;# 
   280     030E                     	;# 
   281     038C                     	;# 
   282     038D                     	;# 
   283     038E                     	;# 
   284     0391                     	;# 
   285     0392                     	;# 
   286     0393                     	;# 
   287     0394                     	;# 
   288     0395                     	;# 
   289     0396                     	;# 
   290     0397                     	;# 
   291     0398                     	;# 
   292     0399                     	;# 
   293     040E                     	;# 
   294     0413                     	;# 
   295     0413                     	;# 
   296     0414                     	;# 
   297     0414                     	;# 
   298     0415                     	;# 
   299     0416                     	;# 
   300     0417                     	;# 
   301     0418                     	;# 
   302     041A                     	;# 
   303     041A                     	;# 
   304     041B                     	;# 
   305     041B                     	;# 
   306     041C                     	;# 
   307     041D                     	;# 
   308     041E                     	;# 
   309     041F                     	;# 
   310     0493                     	;# 
   311     0494                     	;# 
   312     0495                     	;# 
   313     0496                     	;# 
   314     049A                     	;# 
   315     049B                     	;# 
   316     049C                     	;# 
   317     049D                     	;# 
   318     058C                     	;# 
   319     058C                     	;# 
   320     058D                     	;# 
   321     058E                     	;# 
   322     058E                     	;# 
   323     058F                     	;# 
   324     0590                     	;# 
   325     0590                     	;# 
   326     0591                     	;# 
   327     0592                     	;# 
   328     0592                     	;# 
   329     0593                     	;# 
   330     0594                     	;# 
   331     0594                     	;# 
   332     0595                     	;# 
   333     0596                     	;# 
   334     0596                     	;# 
   335     0597                     	;# 
   336     0598                     	;# 
   337     0599                     	;# 
   338     059A                     	;# 
   339     059B                     	;# 
   340     059B                     	;# 
   341     059C                     	;# 
   342     059D                     	;# 
   343     060C                     	;# 
   344     060C                     	;# 
   345     060D                     	;# 
   346     060E                     	;# 
   347     060F                     	;# 
   348     060F                     	;# 
   349     0610                     	;# 
   350     0611                     	;# 
   351     0612                     	;# 
   352     0613                     	;# 
   353     0614                     	;# 
   354     0617                     	;# 
   355     0617                     	;# 
   356     0618                     	;# 
   357     0619                     	;# 
   358     061A                     	;# 
   359     061A                     	;# 
   360     061B                     	;# 
   361     061C                     	;# 
   362     0691                     	;# 
   363     0692                     	;# 
   364     0693                     	;# 
   365     0694                     	;# 
   366     0695                     	;# 
   367     0696                     	;# 
   368     0697                     	;# 
   369     0699                     	;# 
   370     069A                     	;# 
   371     0711                     	;# 
   372     0712                     	;# 
   373     0713                     	;# 
   374     0714                     	;# 
   375     0715                     	;# 
   376     0718                     	;# 
   377     0718                     	;# 
   378     0719                     	;# 
   379     071A                     	;# 
   380     071A                     	;# 
   381     071B                     	;# 
   382     071C                     	;# 
   383     071D                     	;# 
   384     0791                     	;# 
   385     0791                     	;# 
   386     0792                     	;# 
   387     0793                     	;# 
   388     0793                     	;# 
   389     0794                     	;# 
   390     0795                     	;# 
   391     0795                     	;# 
   392     0796                     	;# 
   393     0797                     	;# 
   394     0797                     	;# 
   395     0798                     	;# 
   396     0799                     	;# 
   397     079A                     	;# 
   398     080C                     	;# 
   399     080C                     	;# 
   400     080D                     	;# 
   401     080E                     	;# 
   402     080E                     	;# 
   403     080F                     	;# 
   404     0810                     	;# 
   405     0810                     	;# 
   406     0811                     	;# 
   407     0812                     	;# 
   408     0812                     	;# 
   409     0813                     	;# 
   410     0814                     	;# 
   411     0815                     	;# 
   412     0816                     	;# 
   413     0817                     	;# 
   414     0818                     	;# 
   415     0819                     	;# 
   416     081A                     	;# 
   417     081A                     	;# 
   418     081B                     	;# 
   419     081C                     	;# 
   420     081C                     	;# 
   421     081D                     	;# 
   422     088C                     	;# 
   423     088D                     	;# 
   424     088E                     	;# 
   425     088F                     	;# 
   426     088F                     	;# 
   427     0890                     	;# 
   428     0891                     	;# 
   429     0892                     	;# 
   430     0893                     	;# 
   431     0893                     	;# 
   432     0894                     	;# 
   433     0895                     	;# 
   434     0896                     	;# 
   435     0897                     	;# 
   436     0897                     	;# 
   437     0898                     	;# 
   438     0899                     	;# 
   439     0D8C                     	;# 
   440     0D8C                     	;# 
   441     0D8D                     	;# 
   442     0D8E                     	;# 
   443     0D8F                     	;# 
   444     0D8F                     	;# 
   445     0D90                     	;# 
   446     0D91                     	;# 
   447     0D92                     	;# 
   448     0D92                     	;# 
   449     0D93                     	;# 
   450     0D94                     	;# 
   451     0D95                     	;# 
   452     0D95                     	;# 
   453     0D96                     	;# 
   454     0D97                     	;# 
   455     0D98                     	;# 
   456     0D99                     	;# 
   457     0D9A                     	;# 
   458     0D9B                     	;# 
   459     0D9C                     	;# 
   460     0D9D                     	;# 
   461     0D9E                     	;# 
   462     0D9E                     	;# 
   463     0D9F                     	;# 
   464     0DA0                     	;# 
   465     0DA1                     	;# 
   466     0DA1                     	;# 
   467     0DA2                     	;# 
   468     0DA3                     	;# 
   469     0DA4                     	;# 
   470     0DA4                     	;# 
   471     0DA5                     	;# 
   472     0DA6                     	;# 
   473     0DA7                     	;# 
   474     0DA7                     	;# 
   475     0DA8                     	;# 
   476     0DA9                     	;# 
   477     0DAA                     	;# 
   478     0DAB                     	;# 
   479     0DAC                     	;# 
   480     0DAD                     	;# 
   481     0DAE                     	;# 
   482     0DAF                     	;# 
   483     0E0F                     	;# 
   484     0E10                     	;# 
   485     0E11                     	;# 
   486     0E12                     	;# 
   487     0E13                     	;# 
   488     0E14                     	;# 
   489     0E15                     	;# 
   490     0E16                     	;# 
   491     0E17                     	;# 
   492     0E17                     	;# 
   493     0E18                     	;# 
   494     0E18                     	;# 
   495     0E19                     	;# 
   496     0E1A                     	;# 
   497     0E1B                     	;# 
   498     0E1B                     	;# 
   499     0E1C                     	;# 
   500     0E1D                     	;# 
   501     0E1E                     	;# 
   502     0E1E                     	;# 
   503     0E1F                     	;# 
   504     0E20                     	;# 
   505     0E21                     	;# 
   506     0E22                     	;# 
   507     0E23                     	;# 
   508     0E24                     	;# 
   509     0E25                     	;# 
   510     0E26                     	;# 
   511     0E27                     	;# 
   512     0E28                     	;# 
   513     0E29                     	;# 
   514     0E2A                     	;# 
   515     0E2B                     	;# 
   516     0E2C                     	;# 
   517     0E2D                     	;# 
   518     0E2E                     	;# 
   519     0E90                     	;# 
   520     0E91                     	;# 
   521     0E92                     	;# 
   522     0E94                     	;# 
   523     0E95                     	;# 
   524     0E9C                     	;# 
   525     0E9D                     	;# 
   526     0E9E                     	;# 
   527     0E9F                     	;# 
   528     0EA0                     	;# 
   529     0EA1                     	;# 
   530     0EA2                     	;# 
   531     0EA3                     	;# 
   532     0EA4                     	;# 
   533     0EA5                     	;# 
   534     0EA6                     	;# 
   535     0EA7                     	;# 
   536     0F0F                     	;# 
   537     0F10                     	;# 
   538     0F11                     	;# 
   539     0F12                     	;# 
   540     0F13                     	;# 
   541     0F14                     	;# 
   542     0F15                     	;# 
   543     0F16                     	;# 
   544     0F17                     	;# 
   545     0F18                     	;# 
   546     0F19                     	;# 
   547     0F1A                     	;# 
   548     0F1B                     	;# 
   549     0F1C                     	;# 
   550     0F1D                     	;# 
   551     0F1E                     	;# 
   552     0F1F                     	;# 
   553     0F20                     	;# 
   554     0F21                     	;# 
   555     0F22                     	;# 
   556     0F23                     	;# 
   557     0FE4                     	;# 
   558     0FE5                     	;# 
   559     0FE6                     	;# 
   560     0FE7                     	;# 
   561     0FE8                     	;# 
   562     0FE9                     	;# 
   563     0FEA                     	;# 
   564     0FEB                     	;# 
   565     0FED                     	;# 
   566     0FEE                     	;# 
   567     0FEF                     	;# 
   568     0000                     	;# 
   569     0001                     	;# 
   570     0002                     	;# 
   571     0003                     	;# 
   572     0004                     	;# 
   573     0005                     	;# 
   574     0006                     	;# 
   575     0007                     	;# 
   576     0008                     	;# 
   577     0009                     	;# 
   578     000A                     	;# 
   579     000B                     	;# 
   580     000C                     	;# 
   581     000D                     	;# 
   582     000E                     	;# 
   583     0010                     	;# 
   584     0011                     	;# 
   585     0012                     	;# 
   586     0013                     	;# 
   587     0014                     	;# 
   588     0015                     	;# 
   589     0016                     	;# 
   590     0016                     	;# 
   591     0017                     	;# 
   592     0018                     	;# 
   593     0019                     	;# 
   594     001A                     	;# 
   595     001A                     	;# 
   596     001B                     	;# 
   597     001B                     	;# 
   598     001C                     	;# 
   599     001D                     	;# 
   600     001E                     	;# 
   601     001F                     	;# 
   602     008C                     	;# 
   603     008D                     	;# 
   604     008E                     	;# 
   605     0090                     	;# 
   606     0091                     	;# 
   607     0092                     	;# 
   608     0093                     	;# 
   609     0094                     	;# 
   610     0095                     	;# 
   611     0096                     	;# 
   612     0098                     	;# 
   613     0099                     	;# 
   614     009A                     	;# 
   615     009B                     	;# 
   616     009B                     	;# 
   617     009C                     	;# 
   618     009D                     	;# 
   619     009E                     	;# 
   620     009F                     	;# 
   621     010C                     	;# 
   622     010D                     	;# 
   623     010E                     	;# 
   624     0111                     	;# 
   625     0112                     	;# 
   626     0113                     	;# 
   627     0114                     	;# 
   628     0115                     	;# 
   629     0116                     	;# 
   630     0117                     	;# 
   631     0118                     	;# 
   632     0119                     	;# 
   633     011C                     	;# 
   634     018C                     	;# 
   635     018D                     	;# 
   636     018E                     	;# 
   637     0191                     	;# 
   638     0191                     	;# 
   639     0192                     	;# 
   640     0193                     	;# 
   641     0193                     	;# 
   642     0194                     	;# 
   643     0195                     	;# 
   644     0196                     	;# 
   645     0197                     	;# 
   646     0199                     	;# 
   647     0199                     	;# 
   648     0199                     	;# 
   649     019A                     	;# 
   650     019A                     	;# 
   651     019A                     	;# 
   652     019B                     	;# 
   653     019B                     	;# 
   654     019B                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019C                     	;# 
   658     019C                     	;# 
   659     019C                     	;# 
   660     019D                     	;# 
   661     019D                     	;# 
   662     019D                     	;# 
   663     019E                     	;# 
   664     019E                     	;# 
   665     019E                     	;# 
   666     019F                     	;# 
   667     019F                     	;# 
   668     019F                     	;# 
   669     019F                     	;# 
   670     019F                     	;# 
   671     020C                     	;# 
   672     020D                     	;# 
   673     020E                     	;# 
   674     0211                     	;# 
   675     0211                     	;# 
   676     0212                     	;# 
   677     0212                     	;# 
   678     0213                     	;# 
   679     0213                     	;# 
   680     0214                     	;# 
   681     0214                     	;# 
   682     0215                     	;# 
   683     0215                     	;# 
   684     0215                     	;# 
   685     0215                     	;# 
   686     0216                     	;# 
   687     0216                     	;# 
   688     0217                     	;# 
   689     0217                     	;# 
   690     028C                     	;# 
   691     028D                     	;# 
   692     028E                     	;# 
   693     0291                     	;# 
   694     0291                     	;# 
   695     0292                     	;# 
   696     0293                     	;# 
   697     0294                     	;# 
   698     0298                     	;# 
   699     0298                     	;# 
   700     0299                     	;# 
   701     029A                     	;# 
   702     029B                     	;# 
   703     029E                     	;# 
   704     030C                     	;# 
   705     030D                     	;# 
   706     030E                     	;# 
   707     038C                     	;# 
   708     038D                     	;# 
   709     038E                     	;# 
   710     0391                     	;# 
   711     0392                     	;# 
   712     0393                     	;# 
   713     0394                     	;# 
   714     0395                     	;# 
   715     0396                     	;# 
   716     0397                     	;# 
   717     0398                     	;# 
   718     0399                     	;# 
   719     040E                     	;# 
   720     0413                     	;# 
   721     0413                     	;# 
   722     0414                     	;# 
   723     0414                     	;# 
   724     0415                     	;# 
   725     0416                     	;# 
   726     0417                     	;# 
   727     0418                     	;# 
   728     041A                     	;# 
   729     041A                     	;# 
   730     041B                     	;# 
   731     041B                     	;# 
   732     041C                     	;# 
   733     041D                     	;# 
   734     041E                     	;# 
   735     041F                     	;# 
   736     0493                     	;# 
   737     0494                     	;# 
   738     0495                     	;# 
   739     0496                     	;# 
   740     049A                     	;# 
   741     049B                     	;# 
   742     049C                     	;# 
   743     049D                     	;# 
   744     058C                     	;# 
   745     058C                     	;# 
   746     058D                     	;# 
   747     058E                     	;# 
   748     058E                     	;# 
   749     058F                     	;# 
   750     0590                     	;# 
   751     0590                     	;# 
   752     0591                     	;# 
   753     0592                     	;# 
   754     0592                     	;# 
   755     0593                     	;# 
   756     0594                     	;# 
   757     0594                     	;# 
   758     0595                     	;# 
   759     0596                     	;# 
   760     0596                     	;# 
   761     0597                     	;# 
   762     0598                     	;# 
   763     0599                     	;# 
   764     059A                     	;# 
   765     059B                     	;# 
   766     059B                     	;# 
   767     059C                     	;# 
   768     059D                     	;# 
   769     060C                     	;# 
   770     060C                     	;# 
   771     060D                     	;# 
   772     060E                     	;# 
   773     060F                     	;# 
   774     060F                     	;# 
   775     0610                     	;# 
   776     0611                     	;# 
   777     0612                     	;# 
   778     0613                     	;# 
   779     0614                     	;# 
   780     0617                     	;# 
   781     0617                     	;# 
   782     0618                     	;# 
   783     0619                     	;# 
   784     061A                     	;# 
   785     061A                     	;# 
   786     061B                     	;# 
   787     061C                     	;# 
   788     0691                     	;# 
   789     0692                     	;# 
   790     0693                     	;# 
   791     0694                     	;# 
   792     0695                     	;# 
   793     0696                     	;# 
   794     0697                     	;# 
   795     0699                     	;# 
   796     069A                     	;# 
   797     0711                     	;# 
   798     0712                     	;# 
   799     0713                     	;# 
   800     0714                     	;# 
   801     0715                     	;# 
   802     0718                     	;# 
   803     0718                     	;# 
   804     0719                     	;# 
   805     071A                     	;# 
   806     071A                     	;# 
   807     071B                     	;# 
   808     071C                     	;# 
   809     071D                     	;# 
   810     0791                     	;# 
   811     0791                     	;# 
   812     0792                     	;# 
   813     0793                     	;# 
   814     0793                     	;# 
   815     0794                     	;# 
   816     0795                     	;# 
   817     0795                     	;# 
   818     0796                     	;# 
   819     0797                     	;# 
   820     0797                     	;# 
   821     0798                     	;# 
   822     0799                     	;# 
   823     079A                     	;# 
   824     080C                     	;# 
   825     080C                     	;# 
   826     080D                     	;# 
   827     080E                     	;# 
   828     080E                     	;# 
   829     080F                     	;# 
   830     0810                     	;# 
   831     0810                     	;# 
   832     0811                     	;# 
   833     0812                     	;# 
   834     0812                     	;# 
   835     0813                     	;# 
   836     0814                     	;# 
   837     0815                     	;# 
   838     0816                     	;# 
   839     0817                     	;# 
   840     0818                     	;# 
   841     0819                     	;# 
   842     081A                     	;# 
   843     081A                     	;# 
   844     081B                     	;# 
   845     081C                     	;# 
   846     081C                     	;# 
   847     081D                     	;# 
   848     088C                     	;# 
   849     088D                     	;# 
   850     088E                     	;# 
   851     088F                     	;# 
   852     088F                     	;# 
   853     0890                     	;# 
   854     0891                     	;# 
   855     0892                     	;# 
   856     0893                     	;# 
   857     0893                     	;# 
   858     0894                     	;# 
   859     0895                     	;# 
   860     0896                     	;# 
   861     0897                     	;# 
   862     0897                     	;# 
   863     0898                     	;# 
   864     0899                     	;# 
   865     0D8C                     	;# 
   866     0D8C                     	;# 
   867     0D8D                     	;# 
   868     0D8E                     	;# 
   869     0D8F                     	;# 
   870     0D8F                     	;# 
   871     0D90                     	;# 
   872     0D91                     	;# 
   873     0D92                     	;# 
   874     0D92                     	;# 
   875     0D93                     	;# 
   876     0D94                     	;# 
   877     0D95                     	;# 
   878     0D95                     	;# 
   879     0D96                     	;# 
   880     0D97                     	;# 
   881     0D98                     	;# 
   882     0D99                     	;# 
   883     0D9A                     	;# 
   884     0D9B                     	;# 
   885     0D9C                     	;# 
   886     0D9D                     	;# 
   887     0D9E                     	;# 
   888     0D9E                     	;# 
   889     0D9F                     	;# 
   890     0DA0                     	;# 
   891     0DA1                     	;# 
   892     0DA1                     	;# 
   893     0DA2                     	;# 
   894     0DA3                     	;# 
   895     0DA4                     	;# 
   896     0DA4                     	;# 
   897     0DA5                     	;# 
   898     0DA6                     	;# 
   899     0DA7                     	;# 
   900     0DA7                     	;# 
   901     0DA8                     	;# 
   902     0DA9                     	;# 
   903     0DAA                     	;# 
   904     0DAB                     	;# 
   905     0DAC                     	;# 
   906     0DAD                     	;# 
   907     0DAE                     	;# 
   908     0DAF                     	;# 
   909     0E0F                     	;# 
   910     0E10                     	;# 
   911     0E11                     	;# 
   912     0E12                     	;# 
   913     0E13                     	;# 
   914     0E14                     	;# 
   915     0E15                     	;# 
   916     0E16                     	;# 
   917     0E17                     	;# 
   918     0E17                     	;# 
   919     0E18                     	;# 
   920     0E18                     	;# 
   921     0E19                     	;# 
   922     0E1A                     	;# 
   923     0E1B                     	;# 
   924     0E1B                     	;# 
   925     0E1C                     	;# 
   926     0E1D                     	;# 
   927     0E1E                     	;# 
   928     0E1E                     	;# 
   929     0E1F                     	;# 
   930     0E20                     	;# 
   931     0E21                     	;# 
   932     0E22                     	;# 
   933     0E23                     	;# 
   934     0E24                     	;# 
   935     0E25                     	;# 
   936     0E26                     	;# 
   937     0E27                     	;# 
   938     0E28                     	;# 
   939     0E29                     	;# 
   940     0E2A                     	;# 
   941     0E2B                     	;# 
   942     0E2C                     	;# 
   943     0E2D                     	;# 
   944     0E2E                     	;# 
   945     0E90                     	;# 
   946     0E91                     	;# 
   947     0E92                     	;# 
   948     0E94                     	;# 
   949     0E95                     	;# 
   950     0E9C                     	;# 
   951     0E9D                     	;# 
   952     0E9E                     	;# 
   953     0E9F                     	;# 
   954     0EA0                     	;# 
   955     0EA1                     	;# 
   956     0EA2                     	;# 
   957     0EA3                     	;# 
   958     0EA4                     	;# 
   959     0EA5                     	;# 
   960     0EA6                     	;# 
   961     0EA7                     	;# 
   962     0F0F                     	;# 
   963     0F10                     	;# 
   964     0F11                     	;# 
   965     0F12                     	;# 
   966     0F13                     	;# 
   967     0F14                     	;# 
   968     0F15                     	;# 
   969     0F16                     	;# 
   970     0F17                     	;# 
   971     0F18                     	;# 
   972     0F19                     	;# 
   973     0F1A                     	;# 
   974     0F1B                     	;# 
   975     0F1C                     	;# 
   976     0F1D                     	;# 
   977     0F1E                     	;# 
   978     0F1F                     	;# 
   979     0F20                     	;# 
   980     0F21                     	;# 
   981     0F22                     	;# 
   982     0F23                     	;# 
   983     0FE4                     	;# 
   984     0FE5                     	;# 
   985     0FE6                     	;# 
   986     0FE7                     	;# 
   987     0FE8                     	;# 
   988     0FE9                     	;# 
   989     0FEA                     	;# 
   990     0FEB                     	;# 
   991     0FED                     	;# 
   992     0FEE                     	;# 
   993     0FEF                     	;# 
   994     0000                     	;# 
   995     0001                     	;# 
   996     0002                     	;# 
   997     0003                     	;# 
   998     0004                     	;# 
   999     0005                     	;# 
  1000     0006                     	;# 
  1001     0007                     	;# 
  1002     0008                     	;# 
  1003     0009                     	;# 
  1004     000A                     	;# 
  1005     000B                     	;# 
  1006     000C                     	;# 
  1007     000D                     	;# 
  1008     000E                     	;# 
  1009     0010                     	;# 
  1010     0011                     	;# 
  1011     0012                     	;# 
  1012     0013                     	;# 
  1013     0014                     	;# 
  1014     0015                     	;# 
  1015     0016                     	;# 
  1016     0016                     	;# 
  1017     0017                     	;# 
  1018     0018                     	;# 
  1019     0019                     	;# 
  1020     001A                     	;# 
  1021     001A                     	;# 
  1022     001B                     	;# 
  1023     001B                     	;# 
  1024     001C                     	;# 
  1025     001D                     	;# 
  1026     001E                     	;# 
  1027     001F                     	;# 
  1028     008C                     	;# 
  1029     008D                     	;# 
  1030     008E                     	;# 
  1031     0090                     	;# 
  1032     0091                     	;# 
  1033     0092                     	;# 
  1034     0093                     	;# 
  1035     0094                     	;# 
  1036     0095                     	;# 
  1037     0096                     	;# 
  1038     0098                     	;# 
  1039     0099                     	;# 
  1040     009A                     	;# 
  1041     009B                     	;# 
  1042     009B                     	;# 
  1043     009C                     	;# 
  1044     009D                     	;# 
  1045     009E                     	;# 
  1046     009F                     	;# 
  1047     010C                     	;# 
  1048     010D                     	;# 
  1049     010E                     	;# 
  1050     0111                     	;# 
  1051     0112                     	;# 
  1052     0113                     	;# 
  1053     0114                     	;# 
  1054     0115                     	;# 
  1055     0116                     	;# 
  1056     0117                     	;# 
  1057     0118                     	;# 
  1058     0119                     	;# 
  1059     011C                     	;# 
  1060     018C                     	;# 
  1061     018D                     	;# 
  1062     018E                     	;# 
  1063     0191                     	;# 
  1064     0191                     	;# 
  1065     0192                     	;# 
  1066     0193                     	;# 
  1067     0193                     	;# 
  1068     0194                     	;# 
  1069     0195                     	;# 
  1070     0196                     	;# 
  1071     0197                     	;# 
  1072     0199                     	;# 
  1073     0199                     	;# 
  1074     0199                     	;# 
  1075     019A                     	;# 
  1076     019A                     	;# 
  1077     019A                     	;# 
  1078     019B                     	;# 
  1079     019B                     	;# 
  1080     019B                     	;# 
  1081     019B                     	;# 
  1082     019B                     	;# 
  1083     019C                     	;# 
  1084     019C                     	;# 
  1085     019C                     	;# 
  1086     019D                     	;# 
  1087     019D                     	;# 
  1088     019D                     	;# 
  1089     019E                     	;# 
  1090     019E                     	;# 
  1091     019E                     	;# 
  1092     019F                     	;# 
  1093     019F                     	;# 
  1094     019F                     	;# 
  1095     019F                     	;# 
  1096     019F                     	;# 
  1097     020C                     	;# 
  1098     020D                     	;# 
  1099     020E                     	;# 
  1100     0211                     	;# 
  1101     0211                     	;# 
  1102     0212                     	;# 
  1103     0212                     	;# 
  1104     0213                     	;# 
  1105     0213                     	;# 
  1106     0214                     	;# 
  1107     0214                     	;# 
  1108     0215                     	;# 
  1109     0215                     	;# 
  1110     0215                     	;# 
  1111     0215                     	;# 
  1112     0216                     	;# 
  1113     0216                     	;# 
  1114     0217                     	;# 
  1115     0217                     	;# 
  1116     028C                     	;# 
  1117     028D                     	;# 
  1118     028E                     	;# 
  1119     0291                     	;# 
  1120     0291                     	;# 
  1121     0292                     	;# 
  1122     0293                     	;# 
  1123     0294                     	;# 
  1124     0298                     	;# 
  1125     0298                     	;# 
  1126     0299                     	;# 
  1127     029A                     	;# 
  1128     029B                     	;# 
  1129     029E                     	;# 
  1130     030C                     	;# 
  1131     030D                     	;# 
  1132     030E                     	;# 
  1133     038C                     	;# 
  1134     038D                     	;# 
  1135     038E                     	;# 
  1136     0391                     	;# 
  1137     0392                     	;# 
  1138     0393                     	;# 
  1139     0394                     	;# 
  1140     0395                     	;# 
  1141     0396                     	;# 
  1142     0397                     	;# 
  1143     0398                     	;# 
  1144     0399                     	;# 
  1145     040E                     	;# 
  1146     0413                     	;# 
  1147     0413                     	;# 
  1148     0414                     	;# 
  1149     0414                     	;# 
  1150     0415                     	;# 
  1151     0416                     	;# 
  1152     0417                     	;# 
  1153     0418                     	;# 
  1154     041A                     	;# 
  1155     041A                     	;# 
  1156     041B                     	;# 
  1157     041B                     	;# 
  1158     041C                     	;# 
  1159     041D                     	;# 
  1160     041E                     	;# 
  1161     041F                     	;# 
  1162     0493                     	;# 
  1163     0494                     	;# 
  1164     0495                     	;# 
  1165     0496                     	;# 
  1166     049A                     	;# 
  1167     049B                     	;# 
  1168     049C                     	;# 
  1169     049D                     	;# 
  1170     058C                     	;# 
  1171     058C                     	;# 
  1172     058D                     	;# 
  1173     058E                     	;# 
  1174     058E                     	;# 
  1175     058F                     	;# 
  1176     0590                     	;# 
  1177     0590                     	;# 
  1178     0591                     	;# 
  1179     0592                     	;# 
  1180     0592                     	;# 
  1181     0593                     	;# 
  1182     0594                     	;# 
  1183     0594                     	;# 
  1184     0595                     	;# 
  1185     0596                     	;# 
  1186     0596                     	;# 
  1187     0597                     	;# 
  1188     0598                     	;# 
  1189     0599                     	;# 
  1190     059A                     	;# 
  1191     059B                     	;# 
  1192     059B                     	;# 
  1193     059C                     	;# 
  1194     059D                     	;# 
  1195     060C                     	;# 
  1196     060C                     	;# 
  1197     060D                     	;# 
  1198     060E                     	;# 
  1199     060F                     	;# 
  1200     060F                     	;# 
  1201     0610                     	;# 
  1202     0611                     	;# 
  1203     0612                     	;# 
  1204     0613                     	;# 
  1205     0614                     	;# 
  1206     0617                     	;# 
  1207     0617                     	;# 
  1208     0618                     	;# 
  1209     0619                     	;# 
  1210     061A                     	;# 
  1211     061A                     	;# 
  1212     061B                     	;# 
  1213     061C                     	;# 
  1214     0691                     	;# 
  1215     0692                     	;# 
  1216     0693                     	;# 
  1217     0694                     	;# 
  1218     0695                     	;# 
  1219     0696                     	;# 
  1220     0697                     	;# 
  1221     0699                     	;# 
  1222     069A                     	;# 
  1223     0711                     	;# 
  1224     0712                     	;# 
  1225     0713                     	;# 
  1226     0714                     	;# 
  1227     0715                     	;# 
  1228     0718                     	;# 
  1229     0718                     	;# 
  1230     0719                     	;# 
  1231     071A                     	;# 
  1232     071A                     	;# 
  1233     071B                     	;# 
  1234     071C                     	;# 
  1235     071D                     	;# 
  1236     0791                     	;# 
  1237     0791                     	;# 
  1238     0792                     	;# 
  1239     0793                     	;# 
  1240     0793                     	;# 
  1241     0794                     	;# 
  1242     0795                     	;# 
  1243     0795                     	;# 
  1244     0796                     	;# 
  1245     0797                     	;# 
  1246     0797                     	;# 
  1247     0798                     	;# 
  1248     0799                     	;# 
  1249     079A                     	;# 
  1250     080C                     	;# 
  1251     080C                     	;# 
  1252     080D                     	;# 
  1253     080E                     	;# 
  1254     080E                     	;# 
  1255     080F                     	;# 
  1256     0810                     	;# 
  1257     0810                     	;# 
  1258     0811                     	;# 
  1259     0812                     	;# 
  1260     0812                     	;# 
  1261     0813                     	;# 
  1262     0814                     	;# 
  1263     0815                     	;# 
  1264     0816                     	;# 
  1265     0817                     	;# 
  1266     0818                     	;# 
  1267     0819                     	;# 
  1268     081A                     	;# 
  1269     081A                     	;# 
  1270     081B                     	;# 
  1271     081C                     	;# 
  1272     081C                     	;# 
  1273     081D                     	;# 
  1274     088C                     	;# 
  1275     088D                     	;# 
  1276     088E                     	;# 
  1277     088F                     	;# 
  1278     088F                     	;# 
  1279     0890                     	;# 
  1280     0891                     	;# 
  1281     0892                     	;# 
  1282     0893                     	;# 
  1283     0893                     	;# 
  1284     0894                     	;# 
  1285     0895                     	;# 
  1286     0896                     	;# 
  1287     0897                     	;# 
  1288     0897                     	;# 
  1289     0898                     	;# 
  1290     0899                     	;# 
  1291     0D8C                     	;# 
  1292     0D8C                     	;# 
  1293     0D8D                     	;# 
  1294     0D8E                     	;# 
  1295     0D8F                     	;# 
  1296     0D8F                     	;# 
  1297     0D90                     	;# 
  1298     0D91                     	;# 
  1299     0D92                     	;# 
  1300     0D92                     	;# 
  1301     0D93                     	;# 
  1302     0D94                     	;# 
  1303     0D95                     	;# 
  1304     0D95                     	;# 
  1305     0D96                     	;# 
  1306     0D97                     	;# 
  1307     0D98                     	;# 
  1308     0D99                     	;# 
  1309     0D9A                     	;# 
  1310     0D9B                     	;# 
  1311     0D9C                     	;# 
  1312     0D9D                     	;# 
  1313     0D9E                     	;# 
  1314     0D9E                     	;# 
  1315     0D9F                     	;# 
  1316     0DA0                     	;# 
  1317     0DA1                     	;# 
  1318     0DA1                     	;# 
  1319     0DA2                     	;# 
  1320     0DA3                     	;# 
  1321     0DA4                     	;# 
  1322     0DA4                     	;# 
  1323     0DA5                     	;# 
  1324     0DA6                     	;# 
  1325     0DA7                     	;# 
  1326     0DA7                     	;# 
  1327     0DA8                     	;# 
  1328     0DA9                     	;# 
  1329     0DAA                     	;# 
  1330     0DAB                     	;# 
  1331     0DAC                     	;# 
  1332     0DAD                     	;# 
  1333     0DAE                     	;# 
  1334     0DAF                     	;# 
  1335     0E0F                     	;# 
  1336     0E10                     	;# 
  1337     0E11                     	;# 
  1338     0E12                     	;# 
  1339     0E13                     	;# 
  1340     0E14                     	;# 
  1341     0E15                     	;# 
  1342     0E16                     	;# 
  1343     0E17                     	;# 
  1344     0E17                     	;# 
  1345     0E18                     	;# 
  1346     0E18                     	;# 
  1347     0E19                     	;# 
  1348     0E1A                     	;# 
  1349     0E1B                     	;# 
  1350     0E1B                     	;# 
  1351     0E1C                     	;# 
  1352     0E1D                     	;# 
  1353     0E1E                     	;# 
  1354     0E1E                     	;# 
  1355     0E1F                     	;# 
  1356     0E20                     	;# 
  1357     0E21                     	;# 
  1358     0E22                     	;# 
  1359     0E23                     	;# 
  1360     0E24                     	;# 
  1361     0E25                     	;# 
  1362     0E26                     	;# 
  1363     0E27                     	;# 
  1364     0E28                     	;# 
  1365     0E29                     	;# 
  1366     0E2A                     	;# 
  1367     0E2B                     	;# 
  1368     0E2C                     	;# 
  1369     0E2D                     	;# 
  1370     0E2E                     	;# 
  1371     0E90                     	;# 
  1372     0E91                     	;# 
  1373     0E92                     	;# 
  1374     0E94                     	;# 
  1375     0E95                     	;# 
  1376     0E9C                     	;# 
  1377     0E9D                     	;# 
  1378     0E9E                     	;# 
  1379     0E9F                     	;# 
  1380     0EA0                     	;# 
  1381     0EA1                     	;# 
  1382     0EA2                     	;# 
  1383     0EA3                     	;# 
  1384     0EA4                     	;# 
  1385     0EA5                     	;# 
  1386     0EA6                     	;# 
  1387     0EA7                     	;# 
  1388     0F0F                     	;# 
  1389     0F10                     	;# 
  1390     0F11                     	;# 
  1391     0F12                     	;# 
  1392     0F13                     	;# 
  1393     0F14                     	;# 
  1394     0F15                     	;# 
  1395     0F16                     	;# 
  1396     0F17                     	;# 
  1397     0F18                     	;# 
  1398     0F19                     	;# 
  1399     0F1A                     	;# 
  1400     0F1B                     	;# 
  1401     0F1C                     	;# 
  1402     0F1D                     	;# 
  1403     0F1E                     	;# 
  1404     0F1F                     	;# 
  1405     0F20                     	;# 
  1406     0F21                     	;# 
  1407     0F22                     	;# 
  1408     0F23                     	;# 
  1409     0FE4                     	;# 
  1410     0FE5                     	;# 
  1411     0FE6                     	;# 
  1412     0FE7                     	;# 
  1413     0FE8                     	;# 
  1414     0FE9                     	;# 
  1415     0FEA                     	;# 
  1416     0FEB                     	;# 
  1417     0FED                     	;# 
  1418     0FEE                     	;# 
  1419     0FEF                     	;# 
  1420     0000                     	;# 
  1421     0001                     	;# 
  1422     0002                     	;# 
  1423     0003                     	;# 
  1424     0004                     	;# 
  1425     0005                     	;# 
  1426     0006                     	;# 
  1427     0007                     	;# 
  1428     0008                     	;# 
  1429     0009                     	;# 
  1430     000A                     	;# 
  1431     000B                     	;# 
  1432     000C                     	;# 
  1433     000D                     	;# 
  1434     000E                     	;# 
  1435     0010                     	;# 
  1436     0011                     	;# 
  1437     0012                     	;# 
  1438     0013                     	;# 
  1439     0014                     	;# 
  1440     0015                     	;# 
  1441     0016                     	;# 
  1442     0016                     	;# 
  1443     0017                     	;# 
  1444     0018                     	;# 
  1445     0019                     	;# 
  1446     001A                     	;# 
  1447     001A                     	;# 
  1448     001B                     	;# 
  1449     001B                     	;# 
  1450     001C                     	;# 
  1451     001D                     	;# 
  1452     001E                     	;# 
  1453     001F                     	;# 
  1454     008C                     	;# 
  1455     008D                     	;# 
  1456     008E                     	;# 
  1457     0090                     	;# 
  1458     0091                     	;# 
  1459     0092                     	;# 
  1460     0093                     	;# 
  1461     0094                     	;# 
  1462     0095                     	;# 
  1463     0096                     	;# 
  1464     0098                     	;# 
  1465     0099                     	;# 
  1466     009A                     	;# 
  1467     009B                     	;# 
  1468     009B                     	;# 
  1469     009C                     	;# 
  1470     009D                     	;# 
  1471     009E                     	;# 
  1472     009F                     	;# 
  1473     010C                     	;# 
  1474     010D                     	;# 
  1475     010E                     	;# 
  1476     0111                     	;# 
  1477     0112                     	;# 
  1478     0113                     	;# 
  1479     0114                     	;# 
  1480     0115                     	;# 
  1481     0116                     	;# 
  1482     0117                     	;# 
  1483     0118                     	;# 
  1484     0119                     	;# 
  1485     011C                     	;# 
  1486     018C                     	;# 
  1487     018D                     	;# 
  1488     018E                     	;# 
  1489     0191                     	;# 
  1490     0191                     	;# 
  1491     0192                     	;# 
  1492     0193                     	;# 
  1493     0193                     	;# 
  1494     0194                     	;# 
  1495     0195                     	;# 
  1496     0196                     	;# 
  1497     0197                     	;# 
  1498     0199                     	;# 
  1499     0199                     	;# 
  1500     0199                     	;# 
  1501     019A                     	;# 
  1502     019A                     	;# 
  1503     019A                     	;# 
  1504     019B                     	;# 
  1505     019B                     	;# 
  1506     019B                     	;# 
  1507     019B                     	;# 
  1508     019B                     	;# 
  1509     019C                     	;# 
  1510     019C                     	;# 
  1511     019C                     	;# 
  1512     019D                     	;# 
  1513     019D                     	;# 
  1514     019D                     	;# 
  1515     019E                     	;# 
  1516     019E                     	;# 
  1517     019E                     	;# 
  1518     019F                     	;# 
  1519     019F                     	;# 
  1520     019F                     	;# 
  1521     019F                     	;# 
  1522     019F                     	;# 
  1523     020C                     	;# 
  1524     020D                     	;# 
  1525     020E                     	;# 
  1526     0211                     	;# 
  1527     0211                     	;# 
  1528     0212                     	;# 
  1529     0212                     	;# 
  1530     0213                     	;# 
  1531     0213                     	;# 
  1532     0214                     	;# 
  1533     0214                     	;# 
  1534     0215                     	;# 
  1535     0215                     	;# 
  1536     0215                     	;# 
  1537     0215                     	;# 
  1538     0216                     	;# 
  1539     0216                     	;# 
  1540     0217                     	;# 
  1541     0217                     	;# 
  1542     028C                     	;# 
  1543     028D                     	;# 
  1544     028E                     	;# 
  1545     0291                     	;# 
  1546     0291                     	;# 
  1547     0292                     	;# 
  1548     0293                     	;# 
  1549     0294                     	;# 
  1550     0298                     	;# 
  1551     0298                     	;# 
  1552     0299                     	;# 
  1553     029A                     	;# 
  1554     029B                     	;# 
  1555     029E                     	;# 
  1556     030C                     	;# 
  1557     030D                     	;# 
  1558     030E                     	;# 
  1559     038C                     	;# 
  1560     038D                     	;# 
  1561     038E                     	;# 
  1562     0391                     	;# 
  1563     0392                     	;# 
  1564     0393                     	;# 
  1565     0394                     	;# 
  1566     0395                     	;# 
  1567     0396                     	;# 
  1568     0397                     	;# 
  1569     0398                     	;# 
  1570     0399                     	;# 
  1571     040E                     	;# 
  1572     0413                     	;# 
  1573     0413                     	;# 
  1574     0414                     	;# 
  1575     0414                     	;# 
  1576     0415                     	;# 
  1577     0416                     	;# 
  1578     0417                     	;# 
  1579     0418                     	;# 
  1580     041A                     	;# 
  1581     041A                     	;# 
  1582     041B                     	;# 
  1583     041B                     	;# 
  1584     041C                     	;# 
  1585     041D                     	;# 
  1586     041E                     	;# 
  1587     041F                     	;# 
  1588     0493                     	;# 
  1589     0494                     	;# 
  1590     0495                     	;# 
  1591     0496                     	;# 
  1592     049A                     	;# 
  1593     049B                     	;# 
  1594     049C                     	;# 
  1595     049D                     	;# 
  1596     058C                     	;# 
  1597     058C                     	;# 
  1598     058D                     	;# 
  1599     058E                     	;# 
  1600     058E                     	;# 
  1601     058F                     	;# 
  1602     0590                     	;# 
  1603     0590                     	;# 
  1604     0591                     	;# 
  1605     0592                     	;# 
  1606     0592                     	;# 
  1607     0593                     	;# 
  1608     0594                     	;# 
  1609     0594                     	;# 
  1610     0595                     	;# 
  1611     0596                     	;# 
  1612     0596                     	;# 
  1613     0597                     	;# 
  1614     0598                     	;# 
  1615     0599                     	;# 
  1616     059A                     	;# 
  1617     059B                     	;# 
  1618     059B                     	;# 
  1619     059C                     	;# 
  1620     059D                     	;# 
  1621     060C                     	;# 
  1622     060C                     	;# 
  1623     060D                     	;# 
  1624     060E                     	;# 
  1625     060F                     	;# 
  1626     060F                     	;# 
  1627     0610                     	;# 
  1628     0611                     	;# 
  1629     0612                     	;# 
  1630     0613                     	;# 
  1631     0614                     	;# 
  1632     0617                     	;# 
  1633     0617                     	;# 
  1634     0618                     	;# 
  1635     0619                     	;# 
  1636     061A                     	;# 
  1637     061A                     	;# 
  1638     061B                     	;# 
  1639     061C                     	;# 
  1640     0691                     	;# 
  1641     0692                     	;# 
  1642     0693                     	;# 
  1643     0694                     	;# 
  1644     0695                     	;# 
  1645     0696                     	;# 
  1646     0697                     	;# 
  1647     0699                     	;# 
  1648     069A                     	;# 
  1649     0711                     	;# 
  1650     0712                     	;# 
  1651     0713                     	;# 
  1652     0714                     	;# 
  1653     0715                     	;# 
  1654     0718                     	;# 
  1655     0718                     	;# 
  1656     0719                     	;# 
  1657     071A                     	;# 
  1658     071A                     	;# 
  1659     071B                     	;# 
  1660     071C                     	;# 
  1661     071D                     	;# 
  1662     0791                     	;# 
  1663     0791                     	;# 
  1664     0792                     	;# 
  1665     0793                     	;# 
  1666     0793                     	;# 
  1667     0794                     	;# 
  1668     0795                     	;# 
  1669     0795                     	;# 
  1670     0796                     	;# 
  1671     0797                     	;# 
  1672     0797                     	;# 
  1673     0798                     	;# 
  1674     0799                     	;# 
  1675     079A                     	;# 
  1676     080C                     	;# 
  1677     080C                     	;# 
  1678     080D                     	;# 
  1679     080E                     	;# 
  1680     080E                     	;# 
  1681     080F                     	;# 
  1682     0810                     	;# 
  1683     0810                     	;# 
  1684     0811                     	;# 
  1685     0812                     	;# 
  1686     0812                     	;# 
  1687     0813                     	;# 
  1688     0814                     	;# 
  1689     0815                     	;# 
  1690     0816                     	;# 
  1691     0817                     	;# 
  1692     0818                     	;# 
  1693     0819                     	;# 
  1694     081A                     	;# 
  1695     081A                     	;# 
  1696     081B                     	;# 
  1697     081C                     	;# 
  1698     081C                     	;# 
  1699     081D                     	;# 
  1700     088C                     	;# 
  1701     088D                     	;# 
  1702     088E                     	;# 
  1703     088F                     	;# 
  1704     088F                     	;# 
  1705     0890                     	;# 
  1706     0891                     	;# 
  1707     0892                     	;# 
  1708     0893                     	;# 
  1709     0893                     	;# 
  1710     0894                     	;# 
  1711     0895                     	;# 
  1712     0896                     	;# 
  1713     0897                     	;# 
  1714     0897                     	;# 
  1715     0898                     	;# 
  1716     0899                     	;# 
  1717     0D8C                     	;# 
  1718     0D8C                     	;# 
  1719     0D8D                     	;# 
  1720     0D8E                     	;# 
  1721     0D8F                     	;# 
  1722     0D8F                     	;# 
  1723     0D90                     	;# 
  1724     0D91                     	;# 
  1725     0D92                     	;# 
  1726     0D92                     	;# 
  1727     0D93                     	;# 
  1728     0D94                     	;# 
  1729     0D95                     	;# 
  1730     0D95                     	;# 
  1731     0D96                     	;# 
  1732     0D97                     	;# 
  1733     0D98                     	;# 
  1734     0D99                     	;# 
  1735     0D9A                     	;# 
  1736     0D9B                     	;# 
  1737     0D9C                     	;# 
  1738     0D9D                     	;# 
  1739     0D9E                     	;# 
  1740     0D9E                     	;# 
  1741     0D9F                     	;# 
  1742     0DA0                     	;# 
  1743     0DA1                     	;# 
  1744     0DA1                     	;# 
  1745     0DA2                     	;# 
  1746     0DA3                     	;# 
  1747     0DA4                     	;# 
  1748     0DA4                     	;# 
  1749     0DA5                     	;# 
  1750     0DA6                     	;# 
  1751     0DA7                     	;# 
  1752     0DA7                     	;# 
  1753     0DA8                     	;# 
  1754     0DA9                     	;# 
  1755     0DAA                     	;# 
  1756     0DAB                     	;# 
  1757     0DAC                     	;# 
  1758     0DAD                     	;# 
  1759     0DAE                     	;# 
  1760     0DAF                     	;# 
  1761     0E0F                     	;# 
  1762     0E10                     	;# 
  1763     0E11                     	;# 
  1764     0E12                     	;# 
  1765     0E13                     	;# 
  1766     0E14                     	;# 
  1767     0E15                     	;# 
  1768     0E16                     	;# 
  1769     0E17                     	;# 
  1770     0E17                     	;# 
  1771     0E18                     	;# 
  1772     0E18                     	;# 
  1773     0E19                     	;# 
  1774     0E1A                     	;# 
  1775     0E1B                     	;# 
  1776     0E1B                     	;# 
  1777     0E1C                     	;# 
  1778     0E1D                     	;# 
  1779     0E1E                     	;# 
  1780     0E1E                     	;# 
  1781     0E1F                     	;# 
  1782     0E20                     	;# 
  1783     0E21                     	;# 
  1784     0E22                     	;# 
  1785     0E23                     	;# 
  1786     0E24                     	;# 
  1787     0E25                     	;# 
  1788     0E26                     	;# 
  1789     0E27                     	;# 
  1790     0E28                     	;# 
  1791     0E29                     	;# 
  1792     0E2A                     	;# 
  1793     0E2B                     	;# 
  1794     0E2C                     	;# 
  1795     0E2D                     	;# 
  1796     0E2E                     	;# 
  1797     0E90                     	;# 
  1798     0E91                     	;# 
  1799     0E92                     	;# 
  1800     0E94                     	;# 
  1801     0E95                     	;# 
  1802     0E9C                     	;# 
  1803     0E9D                     	;# 
  1804     0E9E                     	;# 
  1805     0E9F                     	;# 
  1806     0EA0                     	;# 
  1807     0EA1                     	;# 
  1808     0EA2                     	;# 
  1809     0EA3                     	;# 
  1810     0EA4                     	;# 
  1811     0EA5                     	;# 
  1812     0EA6                     	;# 
  1813     0EA7                     	;# 
  1814     0F0F                     	;# 
  1815     0F10                     	;# 
  1816     0F11                     	;# 
  1817     0F12                     	;# 
  1818     0F13                     	;# 
  1819     0F14                     	;# 
  1820     0F15                     	;# 
  1821     0F16                     	;# 
  1822     0F17                     	;# 
  1823     0F18                     	;# 
  1824     0F19                     	;# 
  1825     0F1A                     	;# 
  1826     0F1B                     	;# 
  1827     0F1C                     	;# 
  1828     0F1D                     	;# 
  1829     0F1E                     	;# 
  1830     0F1F                     	;# 
  1831     0F20                     	;# 
  1832     0F21                     	;# 
  1833     0F22                     	;# 
  1834     0F23                     	;# 
  1835     0FE4                     	;# 
  1836     0FE5                     	;# 
  1837     0FE6                     	;# 
  1838     0FE7                     	;# 
  1839     0FE8                     	;# 
  1840     0FE9                     	;# 
  1841     0FEA                     	;# 
  1842     0FEB                     	;# 
  1843     0FED                     	;# 
  1844     0FEE                     	;# 
  1845     0FEF                     	;# 
  1846     0000                     	;# 
  1847     0001                     	;# 
  1848     0002                     	;# 
  1849     0003                     	;# 
  1850     0004                     	;# 
  1851     0005                     	;# 
  1852     0006                     	;# 
  1853     0007                     	;# 
  1854     0008                     	;# 
  1855     0009                     	;# 
  1856     000A                     	;# 
  1857     000B                     	;# 
  1858     000C                     	;# 
  1859     000D                     	;# 
  1860     000E                     	;# 
  1861     0010                     	;# 
  1862     0011                     	;# 
  1863     0012                     	;# 
  1864     0013                     	;# 
  1865     0014                     	;# 
  1866     0015                     	;# 
  1867     0016                     	;# 
  1868     0016                     	;# 
  1869     0017                     	;# 
  1870     0018                     	;# 
  1871     0019                     	;# 
  1872     001A                     	;# 
  1873     001A                     	;# 
  1874     001B                     	;# 
  1875     001B                     	;# 
  1876     001C                     	;# 
  1877     001D                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     008E                     	;# 
  1883     0090                     	;# 
  1884     0091                     	;# 
  1885     0092                     	;# 
  1886     0093                     	;# 
  1887     0094                     	;# 
  1888     0095                     	;# 
  1889     0096                     	;# 
  1890     0098                     	;# 
  1891     0099                     	;# 
  1892     009A                     	;# 
  1893     009B                     	;# 
  1894     009B                     	;# 
  1895     009C                     	;# 
  1896     009D                     	;# 
  1897     009E                     	;# 
  1898     009F                     	;# 
  1899     010C                     	;# 
  1900     010D                     	;# 
  1901     010E                     	;# 
  1902     0111                     	;# 
  1903     0112                     	;# 
  1904     0113                     	;# 
  1905     0114                     	;# 
  1906     0115                     	;# 
  1907     0116                     	;# 
  1908     0117                     	;# 
  1909     0118                     	;# 
  1910     0119                     	;# 
  1911     011C                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     018E                     	;# 
  1915     0191                     	;# 
  1916     0191                     	;# 
  1917     0192                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0197                     	;# 
  1924     0199                     	;# 
  1925     0199                     	;# 
  1926     0199                     	;# 
  1927     019A                     	;# 
  1928     019A                     	;# 
  1929     019A                     	;# 
  1930     019B                     	;# 
  1931     019B                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019C                     	;# 
  1936     019C                     	;# 
  1937     019C                     	;# 
  1938     019D                     	;# 
  1939     019D                     	;# 
  1940     019D                     	;# 
  1941     019E                     	;# 
  1942     019E                     	;# 
  1943     019E                     	;# 
  1944     019F                     	;# 
  1945     019F                     	;# 
  1946     019F                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     020C                     	;# 
  1950     020D                     	;# 
  1951     020E                     	;# 
  1952     0211                     	;# 
  1953     0211                     	;# 
  1954     0212                     	;# 
  1955     0212                     	;# 
  1956     0213                     	;# 
  1957     0213                     	;# 
  1958     0214                     	;# 
  1959     0214                     	;# 
  1960     0215                     	;# 
  1961     0215                     	;# 
  1962     0215                     	;# 
  1963     0215                     	;# 
  1964     0216                     	;# 
  1965     0216                     	;# 
  1966     0217                     	;# 
  1967     0217                     	;# 
  1968     028C                     	;# 
  1969     028D                     	;# 
  1970     028E                     	;# 
  1971     0291                     	;# 
  1972     0291                     	;# 
  1973     0292                     	;# 
  1974     0293                     	;# 
  1975     0294                     	;# 
  1976     0298                     	;# 
  1977     0298                     	;# 
  1978     0299                     	;# 
  1979     029A                     	;# 
  1980     029B                     	;# 
  1981     029E                     	;# 
  1982     030C                     	;# 
  1983     030D                     	;# 
  1984     030E                     	;# 
  1985     038C                     	;# 
  1986     038D                     	;# 
  1987     038E                     	;# 
  1988     0391                     	;# 
  1989     0392                     	;# 
  1990     0393                     	;# 
  1991     0394                     	;# 
  1992     0395                     	;# 
  1993     0396                     	;# 
  1994     0397                     	;# 
  1995     0398                     	;# 
  1996     0399                     	;# 
  1997     040E                     	;# 
  1998     0413                     	;# 
  1999     0413                     	;# 
  2000     0414                     	;# 
  2001     0414                     	;# 
  2002     0415                     	;# 
  2003     0416                     	;# 
  2004     0417                     	;# 
  2005     0418                     	;# 
  2006     041A                     	;# 
  2007     041A                     	;# 
  2008     041B                     	;# 
  2009     041B                     	;# 
  2010     041C                     	;# 
  2011     041D                     	;# 
  2012     041E                     	;# 
  2013     041F                     	;# 
  2014     0493                     	;# 
  2015     0494                     	;# 
  2016     0495                     	;# 
  2017     0496                     	;# 
  2018     049A                     	;# 
  2019     049B                     	;# 
  2020     049C                     	;# 
  2021     049D                     	;# 
  2022     058C                     	;# 
  2023     058C                     	;# 
  2024     058D                     	;# 
  2025     058E                     	;# 
  2026     058E                     	;# 
  2027     058F                     	;# 
  2028     0590                     	;# 
  2029     0590                     	;# 
  2030     0591                     	;# 
  2031     0592                     	;# 
  2032     0592                     	;# 
  2033     0593                     	;# 
  2034     0594                     	;# 
  2035     0594                     	;# 
  2036     0595                     	;# 
  2037     0596                     	;# 
  2038     0596                     	;# 
  2039     0597                     	;# 
  2040     0598                     	;# 
  2041     0599                     	;# 
  2042     059A                     	;# 
  2043     059B                     	;# 
  2044     059B                     	;# 
  2045     059C                     	;# 
  2046     059D                     	;# 
  2047     060C                     	;# 
  2048     060C                     	;# 
  2049     060D                     	;# 
  2050     060E                     	;# 
  2051     060F                     	;# 
  2052     060F                     	;# 
  2053     0610                     	;# 
  2054     0611                     	;# 
  2055     0612                     	;# 
  2056     0613                     	;# 
  2057     0614                     	;# 
  2058     0617                     	;# 
  2059     0617                     	;# 
  2060     0618                     	;# 
  2061     0619                     	;# 
  2062     061A                     	;# 
  2063     061A                     	;# 
  2064     061B                     	;# 
  2065     061C                     	;# 
  2066     0691                     	;# 
  2067     0692                     	;# 
  2068     0693                     	;# 
  2069     0694                     	;# 
  2070     0695                     	;# 
  2071     0696                     	;# 
  2072     0697                     	;# 
  2073     0699                     	;# 
  2074     069A                     	;# 
  2075     0711                     	;# 
  2076     0712                     	;# 
  2077     0713                     	;# 
  2078     0714                     	;# 
  2079     0715                     	;# 
  2080     0718                     	;# 
  2081     0718                     	;# 
  2082     0719                     	;# 
  2083     071A                     	;# 
  2084     071A                     	;# 
  2085     071B                     	;# 
  2086     071C                     	;# 
  2087     071D                     	;# 
  2088     0791                     	;# 
  2089     0791                     	;# 
  2090     0792                     	;# 
  2091     0793                     	;# 
  2092     0793                     	;# 
  2093     0794                     	;# 
  2094     0795                     	;# 
  2095     0795                     	;# 
  2096     0796                     	;# 
  2097     0797                     	;# 
  2098     0797                     	;# 
  2099     0798                     	;# 
  2100     0799                     	;# 
  2101     079A                     	;# 
  2102     080C                     	;# 
  2103     080C                     	;# 
  2104     080D                     	;# 
  2105     080E                     	;# 
  2106     080E                     	;# 
  2107     080F                     	;# 
  2108     0810                     	;# 
  2109     0810                     	;# 
  2110     0811                     	;# 
  2111     0812                     	;# 
  2112     0812                     	;# 
  2113     0813                     	;# 
  2114     0814                     	;# 
  2115     0815                     	;# 
  2116     0816                     	;# 
  2117     0817                     	;# 
  2118     0818                     	;# 
  2119     0819                     	;# 
  2120     081A                     	;# 
  2121     081A                     	;# 
  2122     081B                     	;# 
  2123     081C                     	;# 
  2124     081C                     	;# 
  2125     081D                     	;# 
  2126     088C                     	;# 
  2127     088D                     	;# 
  2128     088E                     	;# 
  2129     088F                     	;# 
  2130     088F                     	;# 
  2131     0890                     	;# 
  2132     0891                     	;# 
  2133     0892                     	;# 
  2134     0893                     	;# 
  2135     0893                     	;# 
  2136     0894                     	;# 
  2137     0895                     	;# 
  2138     0896                     	;# 
  2139     0897                     	;# 
  2140     0897                     	;# 
  2141     0898                     	;# 
  2142     0899                     	;# 
  2143     0D8C                     	;# 
  2144     0D8C                     	;# 
  2145     0D8D                     	;# 
  2146     0D8E                     	;# 
  2147     0D8F                     	;# 
  2148     0D8F                     	;# 
  2149     0D90                     	;# 
  2150     0D91                     	;# 
  2151     0D92                     	;# 
  2152     0D92                     	;# 
  2153     0D93                     	;# 
  2154     0D94                     	;# 
  2155     0D95                     	;# 
  2156     0D95                     	;# 
  2157     0D96                     	;# 
  2158     0D97                     	;# 
  2159     0D98                     	;# 
  2160     0D99                     	;# 
  2161     0D9A                     	;# 
  2162     0D9B                     	;# 
  2163     0D9C                     	;# 
  2164     0D9D                     	;# 
  2165     0D9E                     	;# 
  2166     0D9E                     	;# 
  2167     0D9F                     	;# 
  2168     0DA0                     	;# 
  2169     0DA1                     	;# 
  2170     0DA1                     	;# 
  2171     0DA2                     	;# 
  2172     0DA3                     	;# 
  2173     0DA4                     	;# 
  2174     0DA4                     	;# 
  2175     0DA5                     	;# 
  2176     0DA6                     	;# 
  2177     0DA7                     	;# 
  2178     0DA7                     	;# 
  2179     0DA8                     	;# 
  2180     0DA9                     	;# 
  2181     0DAA                     	;# 
  2182     0DAB                     	;# 
  2183     0DAC                     	;# 
  2184     0DAD                     	;# 
  2185     0DAE                     	;# 
  2186     0DAF                     	;# 
  2187     0E0F                     	;# 
  2188     0E10                     	;# 
  2189     0E11                     	;# 
  2190     0E12                     	;# 
  2191     0E13                     	;# 
  2192     0E14                     	;# 
  2193     0E15                     	;# 
  2194     0E16                     	;# 
  2195     0E17                     	;# 
  2196     0E17                     	;# 
  2197     0E18                     	;# 
  2198     0E18                     	;# 
  2199     0E19                     	;# 
  2200     0E1A                     	;# 
  2201     0E1B                     	;# 
  2202     0E1B                     	;# 
  2203     0E1C                     	;# 
  2204     0E1D                     	;# 
  2205     0E1E                     	;# 
  2206     0E1E                     	;# 
  2207     0E1F                     	;# 
  2208     0E20                     	;# 
  2209     0E21                     	;# 
  2210     0E22                     	;# 
  2211     0E23                     	;# 
  2212     0E24                     	;# 
  2213     0E25                     	;# 
  2214     0E26                     	;# 
  2215     0E27                     	;# 
  2216     0E28                     	;# 
  2217     0E29                     	;# 
  2218     0E2A                     	;# 
  2219     0E2B                     	;# 
  2220     0E2C                     	;# 
  2221     0E2D                     	;# 
  2222     0E2E                     	;# 
  2223     0E90                     	;# 
  2224     0E91                     	;# 
  2225     0E92                     	;# 
  2226     0E94                     	;# 
  2227     0E95                     	;# 
  2228     0E9C                     	;# 
  2229     0E9D                     	;# 
  2230     0E9E                     	;# 
  2231     0E9F                     	;# 
  2232     0EA0                     	;# 
  2233     0EA1                     	;# 
  2234     0EA2                     	;# 
  2235     0EA3                     	;# 
  2236     0EA4                     	;# 
  2237     0EA5                     	;# 
  2238     0EA6                     	;# 
  2239     0EA7                     	;# 
  2240     0F0F                     	;# 
  2241     0F10                     	;# 
  2242     0F11                     	;# 
  2243     0F12                     	;# 
  2244     0F13                     	;# 
  2245     0F14                     	;# 
  2246     0F15                     	;# 
  2247     0F16                     	;# 
  2248     0F17                     	;# 
  2249     0F18                     	;# 
  2250     0F19                     	;# 
  2251     0F1A                     	;# 
  2252     0F1B                     	;# 
  2253     0F1C                     	;# 
  2254     0F1D                     	;# 
  2255     0F1E                     	;# 
  2256     0F1F                     	;# 
  2257     0F20                     	;# 
  2258     0F21                     	;# 
  2259     0F22                     	;# 
  2260     0F23                     	;# 
  2261     0FE4                     	;# 
  2262     0FE5                     	;# 
  2263     0FE6                     	;# 
  2264     0FE7                     	;# 
  2265     0FE8                     	;# 
  2266     0FE9                     	;# 
  2267     0FEA                     	;# 
  2268     0FEB                     	;# 
  2269     0FED                     	;# 
  2270     0FEE                     	;# 
  2271     0FEF                     	;# 
  2272     0000                     	;# 
  2273     0001                     	;# 
  2274     0002                     	;# 
  2275     0003                     	;# 
  2276     0004                     	;# 
  2277     0005                     	;# 
  2278     0006                     	;# 
  2279     0007                     	;# 
  2280     0008                     	;# 
  2281     0009                     	;# 
  2282     000A                     	;# 
  2283     000B                     	;# 
  2284     000C                     	;# 
  2285     000D                     	;# 
  2286     000E                     	;# 
  2287     0010                     	;# 
  2288     0011                     	;# 
  2289     0012                     	;# 
  2290     0013                     	;# 
  2291     0014                     	;# 
  2292     0015                     	;# 
  2293     0016                     	;# 
  2294     0016                     	;# 
  2295     0017                     	;# 
  2296     0018                     	;# 
  2297     0019                     	;# 
  2298     001A                     	;# 
  2299     001A                     	;# 
  2300     001B                     	;# 
  2301     001B                     	;# 
  2302     001C                     	;# 
  2303     001D                     	;# 
  2304     001E                     	;# 
  2305     001F                     	;# 
  2306     008C                     	;# 
  2307     008D                     	;# 
  2308     008E                     	;# 
  2309     0090                     	;# 
  2310     0091                     	;# 
  2311     0092                     	;# 
  2312     0093                     	;# 
  2313     0094                     	;# 
  2314     0095                     	;# 
  2315     0096                     	;# 
  2316     0098                     	;# 
  2317     0099                     	;# 
  2318     009A                     	;# 
  2319     009B                     	;# 
  2320     009B                     	;# 
  2321     009C                     	;# 
  2322     009D                     	;# 
  2323     009E                     	;# 
  2324     009F                     	;# 
  2325     010C                     	;# 
  2326     010D                     	;# 
  2327     010E                     	;# 
  2328     0111                     	;# 
  2329     0112                     	;# 
  2330     0113                     	;# 
  2331     0114                     	;# 
  2332     0115                     	;# 
  2333     0116                     	;# 
  2334     0117                     	;# 
  2335     0118                     	;# 
  2336     0119                     	;# 
  2337     011C                     	;# 
  2338     018C                     	;# 
  2339     018D                     	;# 
  2340     018E                     	;# 
  2341     0191                     	;# 
  2342     0191                     	;# 
  2343     0192                     	;# 
  2344     0193                     	;# 
  2345     0193                     	;# 
  2346     0194                     	;# 
  2347     0195                     	;# 
  2348     0196                     	;# 
  2349     0197                     	;# 
  2350     0199                     	;# 
  2351     0199                     	;# 
  2352     0199                     	;# 
  2353     019A                     	;# 
  2354     019A                     	;# 
  2355     019A                     	;# 
  2356     019B                     	;# 
  2357     019B                     	;# 
  2358     019B                     	;# 
  2359     019B                     	;# 
  2360     019B                     	;# 
  2361     019C                     	;# 
  2362     019C                     	;# 
  2363     019C                     	;# 
  2364     019D                     	;# 
  2365     019D                     	;# 
  2366     019D                     	;# 
  2367     019E                     	;# 
  2368     019E                     	;# 
  2369     019E                     	;# 
  2370     019F                     	;# 
  2371     019F                     	;# 
  2372     019F                     	;# 
  2373     019F                     	;# 
  2374     019F                     	;# 
  2375     020C                     	;# 
  2376     020D                     	;# 
  2377     020E                     	;# 
  2378     0211                     	;# 
  2379     0211                     	;# 
  2380     0212                     	;# 
  2381     0212                     	;# 
  2382     0213                     	;# 
  2383     0213                     	;# 
  2384     0214                     	;# 
  2385     0214                     	;# 
  2386     0215                     	;# 
  2387     0215                     	;# 
  2388     0215                     	;# 
  2389     0215                     	;# 
  2390     0216                     	;# 
  2391     0216                     	;# 
  2392     0217                     	;# 
  2393     0217                     	;# 
  2394     028C                     	;# 
  2395     028D                     	;# 
  2396     028E                     	;# 
  2397     0291                     	;# 
  2398     0291                     	;# 
  2399     0292                     	;# 
  2400     0293                     	;# 
  2401     0294                     	;# 
  2402     0298                     	;# 
  2403     0298                     	;# 
  2404     0299                     	;# 
  2405     029A                     	;# 
  2406     029B                     	;# 
  2407     029E                     	;# 
  2408     030C                     	;# 
  2409     030D                     	;# 
  2410     030E                     	;# 
  2411     038C                     	;# 
  2412     038D                     	;# 
  2413     038E                     	;# 
  2414     0391                     	;# 
  2415     0392                     	;# 
  2416     0393                     	;# 
  2417     0394                     	;# 
  2418     0395                     	;# 
  2419     0396                     	;# 
  2420     0397                     	;# 
  2421     0398                     	;# 
  2422     0399                     	;# 
  2423     040E                     	;# 
  2424     0413                     	;# 
  2425     0413                     	;# 
  2426     0414                     	;# 
  2427     0414                     	;# 
  2428     0415                     	;# 
  2429     0416                     	;# 
  2430     0417                     	;# 
  2431     0418                     	;# 
  2432     041A                     	;# 
  2433     041A                     	;# 
  2434     041B                     	;# 
  2435     041B                     	;# 
  2436     041C                     	;# 
  2437     041D                     	;# 
  2438     041E                     	;# 
  2439     041F                     	;# 
  2440     0493                     	;# 
  2441     0494                     	;# 
  2442     0495                     	;# 
  2443     0496                     	;# 
  2444     049A                     	;# 
  2445     049B                     	;# 
  2446     049C                     	;# 
  2447     049D                     	;# 
  2448     058C                     	;# 
  2449     058C                     	;# 
  2450     058D                     	;# 
  2451     058E                     	;# 
  2452     058E                     	;# 
  2453     058F                     	;# 
  2454     0590                     	;# 
  2455     0590                     	;# 
  2456     0591                     	;# 
  2457     0592                     	;# 
  2458     0592                     	;# 
  2459     0593                     	;# 
  2460     0594                     	;# 
  2461     0594                     	;# 
  2462     0595                     	;# 
  2463     0596                     	;# 
  2464     0596                     	;# 
  2465     0597                     	;# 
  2466     0598                     	;# 
  2467     0599                     	;# 
  2468     059A                     	;# 
  2469     059B                     	;# 
  2470     059B                     	;# 
  2471     059C                     	;# 
  2472     059D                     	;# 
  2473     060C                     	;# 
  2474     060C                     	;# 
  2475     060D                     	;# 
  2476     060E                     	;# 
  2477     060F                     	;# 
  2478     060F                     	;# 
  2479     0610                     	;# 
  2480     0611                     	;# 
  2481     0612                     	;# 
  2482     0613                     	;# 
  2483     0614                     	;# 
  2484     0617                     	;# 
  2485     0617                     	;# 
  2486     0618                     	;# 
  2487     0619                     	;# 
  2488     061A                     	;# 
  2489     061A                     	;# 
  2490     061B                     	;# 
  2491     061C                     	;# 
  2492     0691                     	;# 
  2493     0692                     	;# 
  2494     0693                     	;# 
  2495     0694                     	;# 
  2496     0695                     	;# 
  2497     0696                     	;# 
  2498     0697                     	;# 
  2499     0699                     	;# 
  2500     069A                     	;# 
  2501     0711                     	;# 
  2502     0712                     	;# 
  2503     0713                     	;# 
  2504     0714                     	;# 
  2505     0715                     	;# 
  2506     0718                     	;# 
  2507     0718                     	;# 
  2508     0719                     	;# 
  2509     071A                     	;# 
  2510     071A                     	;# 
  2511     071B                     	;# 
  2512     071C                     	;# 
  2513     071D                     	;# 
  2514     0791                     	;# 
  2515     0791                     	;# 
  2516     0792                     	;# 
  2517     0793                     	;# 
  2518     0793                     	;# 
  2519     0794                     	;# 
  2520     0795                     	;# 
  2521     0795                     	;# 
  2522     0796                     	;# 
  2523     0797                     	;# 
  2524     0797                     	;# 
  2525     0798                     	;# 
  2526     0799                     	;# 
  2527     079A                     	;# 
  2528     080C                     	;# 
  2529     080C                     	;# 
  2530     080D                     	;# 
  2531     080E                     	;# 
  2532     080E                     	;# 
  2533     080F                     	;# 
  2534     0810                     	;# 
  2535     0810                     	;# 
  2536     0811                     	;# 
  2537     0812                     	;# 
  2538     0812                     	;# 
  2539     0813                     	;# 
  2540     0814                     	;# 
  2541     0815                     	;# 
  2542     0816                     	;# 
  2543     0817                     	;# 
  2544     0818                     	;# 
  2545     0819                     	;# 
  2546     081A                     	;# 
  2547     081A                     	;# 
  2548     081B                     	;# 
  2549     081C                     	;# 
  2550     081C                     	;# 
  2551     081D                     	;# 
  2552     088C                     	;# 
  2553     088D                     	;# 
  2554     088E                     	;# 
  2555     088F                     	;# 
  2556     088F                     	;# 
  2557     0890                     	;# 
  2558     0891                     	;# 
  2559     0892                     	;# 
  2560     0893                     	;# 
  2561     0893                     	;# 
  2562     0894                     	;# 
  2563     0895                     	;# 
  2564     0896                     	;# 
  2565     0897                     	;# 
  2566     0897                     	;# 
  2567     0898                     	;# 
  2568     0899                     	;# 
  2569     0D8C                     	;# 
  2570     0D8C                     	;# 
  2571     0D8D                     	;# 
  2572     0D8E                     	;# 
  2573     0D8F                     	;# 
  2574     0D8F                     	;# 
  2575     0D90                     	;# 
  2576     0D91                     	;# 
  2577     0D92                     	;# 
  2578     0D92                     	;# 
  2579     0D93                     	;# 
  2580     0D94                     	;# 
  2581     0D95                     	;# 
  2582     0D95                     	;# 
  2583     0D96                     	;# 
  2584     0D97                     	;# 
  2585     0D98                     	;# 
  2586     0D99                     	;# 
  2587     0D9A                     	;# 
  2588     0D9B                     	;# 
  2589     0D9C                     	;# 
  2590     0D9D                     	;# 
  2591     0D9E                     	;# 
  2592     0D9E                     	;# 
  2593     0D9F                     	;# 
  2594     0DA0                     	;# 
  2595     0DA1                     	;# 
  2596     0DA1                     	;# 
  2597     0DA2                     	;# 
  2598     0DA3                     	;# 
  2599     0DA4                     	;# 
  2600     0DA4                     	;# 
  2601     0DA5                     	;# 
  2602     0DA6                     	;# 
  2603     0DA7                     	;# 
  2604     0DA7                     	;# 
  2605     0DA8                     	;# 
  2606     0DA9                     	;# 
  2607     0DAA                     	;# 
  2608     0DAB                     	;# 
  2609     0DAC                     	;# 
  2610     0DAD                     	;# 
  2611     0DAE                     	;# 
  2612     0DAF                     	;# 
  2613     0E0F                     	;# 
  2614     0E10                     	;# 
  2615     0E11                     	;# 
  2616     0E12                     	;# 
  2617     0E13                     	;# 
  2618     0E14                     	;# 
  2619     0E15                     	;# 
  2620     0E16                     	;# 
  2621     0E17                     	;# 
  2622     0E17                     	;# 
  2623     0E18                     	;# 
  2624     0E18                     	;# 
  2625     0E19                     	;# 
  2626     0E1A                     	;# 
  2627     0E1B                     	;# 
  2628     0E1B                     	;# 
  2629     0E1C                     	;# 
  2630     0E1D                     	;# 
  2631     0E1E                     	;# 
  2632     0E1E                     	;# 
  2633     0E1F                     	;# 
  2634     0E20                     	;# 
  2635     0E21                     	;# 
  2636     0E22                     	;# 
  2637     0E23                     	;# 
  2638     0E24                     	;# 
  2639     0E25                     	;# 
  2640     0E26                     	;# 
  2641     0E27                     	;# 
  2642     0E28                     	;# 
  2643     0E29                     	;# 
  2644     0E2A                     	;# 
  2645     0E2B                     	;# 
  2646     0E2C                     	;# 
  2647     0E2D                     	;# 
  2648     0E2E                     	;# 
  2649     0E90                     	;# 
  2650     0E91                     	;# 
  2651     0E92                     	;# 
  2652     0E94                     	;# 
  2653     0E95                     	;# 
  2654     0E9C                     	;# 
  2655     0E9D                     	;# 
  2656     0E9E                     	;# 
  2657     0E9F                     	;# 
  2658     0EA0                     	;# 
  2659     0EA1                     	;# 
  2660     0EA2                     	;# 
  2661     0EA3                     	;# 
  2662     0EA4                     	;# 
  2663     0EA5                     	;# 
  2664     0EA6                     	;# 
  2665     0EA7                     	;# 
  2666     0F0F                     	;# 
  2667     0F10                     	;# 
  2668     0F11                     	;# 
  2669     0F12                     	;# 
  2670     0F13                     	;# 
  2671     0F14                     	;# 
  2672     0F15                     	;# 
  2673     0F16                     	;# 
  2674     0F17                     	;# 
  2675     0F18                     	;# 
  2676     0F19                     	;# 
  2677     0F1A                     	;# 
  2678     0F1B                     	;# 
  2679     0F1C                     	;# 
  2680     0F1D                     	;# 
  2681     0F1E                     	;# 
  2682     0F1F                     	;# 
  2683     0F20                     	;# 
  2684     0F21                     	;# 
  2685     0F22                     	;# 
  2686     0F23                     	;# 
  2687     0FE4                     	;# 
  2688     0FE5                     	;# 
  2689     0FE6                     	;# 
  2690     0FE7                     	;# 
  2691     0FE8                     	;# 
  2692     0FE9                     	;# 
  2693     0FEA                     	;# 
  2694     0FEB                     	;# 
  2695     0FED                     	;# 
  2696     0FEE                     	;# 
  2697     0FEF                     	;# 
  2698     0000                     	;# 
  2699     0001                     	;# 
  2700     0002                     	;# 
  2701     0003                     	;# 
  2702     0004                     	;# 
  2703     0005                     	;# 
  2704     0006                     	;# 
  2705     0007                     	;# 
  2706     0008                     	;# 
  2707     0009                     	;# 
  2708     000A                     	;# 
  2709     000B                     	;# 
  2710     000C                     	;# 
  2711     000D                     	;# 
  2712     000E                     	;# 
  2713     0010                     	;# 
  2714     0011                     	;# 
  2715     0012                     	;# 
  2716     0013                     	;# 
  2717     0014                     	;# 
  2718     0015                     	;# 
  2719     0016                     	;# 
  2720     0016                     	;# 
  2721     0017                     	;# 
  2722     0018                     	;# 
  2723     0019                     	;# 
  2724     001A                     	;# 
  2725     001A                     	;# 
  2726     001B                     	;# 
  2727     001B                     	;# 
  2728     001C                     	;# 
  2729     001D                     	;# 
  2730     001E                     	;# 
  2731     001F                     	;# 
  2732     008C                     	;# 
  2733     008D                     	;# 
  2734     008E                     	;# 
  2735     0090                     	;# 
  2736     0091                     	;# 
  2737     0092                     	;# 
  2738     0093                     	;# 
  2739     0094                     	;# 
  2740     0095                     	;# 
  2741     0096                     	;# 
  2742     0098                     	;# 
  2743     0099                     	;# 
  2744     009A                     	;# 
  2745     009B                     	;# 
  2746     009B                     	;# 
  2747     009C                     	;# 
  2748     009D                     	;# 
  2749     009E                     	;# 
  2750     009F                     	;# 
  2751     010C                     	;# 
  2752     010D                     	;# 
  2753     010E                     	;# 
  2754     0111                     	;# 
  2755     0112                     	;# 
  2756     0113                     	;# 
  2757     0114                     	;# 
  2758     0115                     	;# 
  2759     0116                     	;# 
  2760     0117                     	;# 
  2761     0118                     	;# 
  2762     0119                     	;# 
  2763     011C                     	;# 
  2764     018C                     	;# 
  2765     018D                     	;# 
  2766     018E                     	;# 
  2767     0191                     	;# 
  2768     0191                     	;# 
  2769     0192                     	;# 
  2770     0193                     	;# 
  2771     0193                     	;# 
  2772     0194                     	;# 
  2773     0195                     	;# 
  2774     0196                     	;# 
  2775     0197                     	;# 
  2776     0199                     	;# 
  2777     0199                     	;# 
  2778     0199                     	;# 
  2779     019A                     	;# 
  2780     019A                     	;# 
  2781     019A                     	;# 
  2782     019B                     	;# 
  2783     019B                     	;# 
  2784     019B                     	;# 
  2785     019B                     	;# 
  2786     019B                     	;# 
  2787     019C                     	;# 
  2788     019C                     	;# 
  2789     019C                     	;# 
  2790     019D                     	;# 
  2791     019D                     	;# 
  2792     019D                     	;# 
  2793     019E                     	;# 
  2794     019E                     	;# 
  2795     019E                     	;# 
  2796     019F                     	;# 
  2797     019F                     	;# 
  2798     019F                     	;# 
  2799     019F                     	;# 
  2800     019F                     	;# 
  2801     020C                     	;# 
  2802     020D                     	;# 
  2803     020E                     	;# 
  2804     0211                     	;# 
  2805     0211                     	;# 
  2806     0212                     	;# 
  2807     0212                     	;# 
  2808     0213                     	;# 
  2809     0213                     	;# 
  2810     0214                     	;# 
  2811     0214                     	;# 
  2812     0215                     	;# 
  2813     0215                     	;# 
  2814     0215                     	;# 
  2815     0215                     	;# 
  2816     0216                     	;# 
  2817     0216                     	;# 
  2818     0217                     	;# 
  2819     0217                     	;# 
  2820     028C                     	;# 
  2821     028D                     	;# 
  2822     028E                     	;# 
  2823     0291                     	;# 
  2824     0291                     	;# 
  2825     0292                     	;# 
  2826     0293                     	;# 
  2827     0294                     	;# 
  2828     0298                     	;# 
  2829     0298                     	;# 
  2830     0299                     	;# 
  2831     029A                     	;# 
  2832     029B                     	;# 
  2833     029E                     	;# 
  2834     030C                     	;# 
  2835     030D                     	;# 
  2836     030E                     	;# 
  2837     038C                     	;# 
  2838     038D                     	;# 
  2839     038E                     	;# 
  2840     0391                     	;# 
  2841     0392                     	;# 
  2842     0393                     	;# 
  2843     0394                     	;# 
  2844     0395                     	;# 
  2845     0396                     	;# 
  2846     0397                     	;# 
  2847     0398                     	;# 
  2848     0399                     	;# 
  2849     040E                     	;# 
  2850     0413                     	;# 
  2851     0413                     	;# 
  2852     0414                     	;# 
  2853     0414                     	;# 
  2854     0415                     	;# 
  2855     0416                     	;# 
  2856     0417                     	;# 
  2857     0418                     	;# 
  2858     041A                     	;# 
  2859     041A                     	;# 
  2860     041B                     	;# 
  2861     041B                     	;# 
  2862     041C                     	;# 
  2863     041D                     	;# 
  2864     041E                     	;# 
  2865     041F                     	;# 
  2866     0493                     	;# 
  2867     0494                     	;# 
  2868     0495                     	;# 
  2869     0496                     	;# 
  2870     049A                     	;# 
  2871     049B                     	;# 
  2872     049C                     	;# 
  2873     049D                     	;# 
  2874     058C                     	;# 
  2875     058C                     	;# 
  2876     058D                     	;# 
  2877     058E                     	;# 
  2878     058E                     	;# 
  2879     058F                     	;# 
  2880     0590                     	;# 
  2881     0590                     	;# 
  2882     0591                     	;# 
  2883     0592                     	;# 
  2884     0592                     	;# 
  2885     0593                     	;# 
  2886     0594                     	;# 
  2887     0594                     	;# 
  2888     0595                     	;# 
  2889     0596                     	;# 
  2890     0596                     	;# 
  2891     0597                     	;# 
  2892     0598                     	;# 
  2893     0599                     	;# 
  2894     059A                     	;# 
  2895     059B                     	;# 
  2896     059B                     	;# 
  2897     059C                     	;# 
  2898     059D                     	;# 
  2899     060C                     	;# 
  2900     060C                     	;# 
  2901     060D                     	;# 
  2902     060E                     	;# 
  2903     060F                     	;# 
  2904     060F                     	;# 
  2905     0610                     	;# 
  2906     0611                     	;# 
  2907     0612                     	;# 
  2908     0613                     	;# 
  2909     0614                     	;# 
  2910     0617                     	;# 
  2911     0617                     	;# 
  2912     0618                     	;# 
  2913     0619                     	;# 
  2914     061A                     	;# 
  2915     061A                     	;# 
  2916     061B                     	;# 
  2917     061C                     	;# 
  2918     0691                     	;# 
  2919     0692                     	;# 
  2920     0693                     	;# 
  2921     0694                     	;# 
  2922     0695                     	;# 
  2923     0696                     	;# 
  2924     0697                     	;# 
  2925     0699                     	;# 
  2926     069A                     	;# 
  2927     0711                     	;# 
  2928     0712                     	;# 
  2929     0713                     	;# 
  2930     0714                     	;# 
  2931     0715                     	;# 
  2932     0718                     	;# 
  2933     0718                     	;# 
  2934     0719                     	;# 
  2935     071A                     	;# 
  2936     071A                     	;# 
  2937     071B                     	;# 
  2938     071C                     	;# 
  2939     071D                     	;# 
  2940     0791                     	;# 
  2941     0791                     	;# 
  2942     0792                     	;# 
  2943     0793                     	;# 
  2944     0793                     	;# 
  2945     0794                     	;# 
  2946     0795                     	;# 
  2947     0795                     	;# 
  2948     0796                     	;# 
  2949     0797                     	;# 
  2950     0797                     	;# 
  2951     0798                     	;# 
  2952     0799                     	;# 
  2953     079A                     	;# 
  2954     080C                     	;# 
  2955     080C                     	;# 
  2956     080D                     	;# 
  2957     080E                     	;# 
  2958     080E                     	;# 
  2959     080F                     	;# 
  2960     0810                     	;# 
  2961     0810                     	;# 
  2962     0811                     	;# 
  2963     0812                     	;# 
  2964     0812                     	;# 
  2965     0813                     	;# 
  2966     0814                     	;# 
  2967     0815                     	;# 
  2968     0816                     	;# 
  2969     0817                     	;# 
  2970     0818                     	;# 
  2971     0819                     	;# 
  2972     081A                     	;# 
  2973     081A                     	;# 
  2974     081B                     	;# 
  2975     081C                     	;# 
  2976     081C                     	;# 
  2977     081D                     	;# 
  2978     088C                     	;# 
  2979     088D                     	;# 
  2980     088E                     	;# 
  2981     088F                     	;# 
  2982     088F                     	;# 
  2983     0890                     	;# 
  2984     0891                     	;# 
  2985     0892                     	;# 
  2986     0893                     	;# 
  2987     0893                     	;# 
  2988     0894                     	;# 
  2989     0895                     	;# 
  2990     0896                     	;# 
  2991     0897                     	;# 
  2992     0897                     	;# 
  2993     0898                     	;# 
  2994     0899                     	;# 
  2995     0D8C                     	;# 
  2996     0D8C                     	;# 
  2997     0D8D                     	;# 
  2998     0D8E                     	;# 
  2999     0D8F                     	;# 
  3000     0D8F                     	;# 
  3001     0D90                     	;# 
  3002     0D91                     	;# 
  3003     0D92                     	;# 
  3004     0D92                     	;# 
  3005     0D93                     	;# 
  3006     0D94                     	;# 
  3007     0D95                     	;# 
  3008     0D95                     	;# 
  3009     0D96                     	;# 
  3010     0D97                     	;# 
  3011     0D98                     	;# 
  3012     0D99                     	;# 
  3013     0D9A                     	;# 
  3014     0D9B                     	;# 
  3015     0D9C                     	;# 
  3016     0D9D                     	;# 
  3017     0D9E                     	;# 
  3018     0D9E                     	;# 
  3019     0D9F                     	;# 
  3020     0DA0                     	;# 
  3021     0DA1                     	;# 
  3022     0DA1                     	;# 
  3023     0DA2                     	;# 
  3024     0DA3                     	;# 
  3025     0DA4                     	;# 
  3026     0DA4                     	;# 
  3027     0DA5                     	;# 
  3028     0DA6                     	;# 
  3029     0DA7                     	;# 
  3030     0DA7                     	;# 
  3031     0DA8                     	;# 
  3032     0DA9                     	;# 
  3033     0DAA                     	;# 
  3034     0DAB                     	;# 
  3035     0DAC                     	;# 
  3036     0DAD                     	;# 
  3037     0DAE                     	;# 
  3038     0DAF                     	;# 
  3039     0E0F                     	;# 
  3040     0E10                     	;# 
  3041     0E11                     	;# 
  3042     0E12                     	;# 
  3043     0E13                     	;# 
  3044     0E14                     	;# 
  3045     0E15                     	;# 
  3046     0E16                     	;# 
  3047     0E17                     	;# 
  3048     0E17                     	;# 
  3049     0E18                     	;# 
  3050     0E18                     	;# 
  3051     0E19                     	;# 
  3052     0E1A                     	;# 
  3053     0E1B                     	;# 
  3054     0E1B                     	;# 
  3055     0E1C                     	;# 
  3056     0E1D                     	;# 
  3057     0E1E                     	;# 
  3058     0E1E                     	;# 
  3059     0E1F                     	;# 
  3060     0E20                     	;# 
  3061     0E21                     	;# 
  3062     0E22                     	;# 
  3063     0E23                     	;# 
  3064     0E24                     	;# 
  3065     0E25                     	;# 
  3066     0E26                     	;# 
  3067     0E27                     	;# 
  3068     0E28                     	;# 
  3069     0E29                     	;# 
  3070     0E2A                     	;# 
  3071     0E2B                     	;# 
  3072     0E2C                     	;# 
  3073     0E2D                     	;# 
  3074     0E2E                     	;# 
  3075     0E90                     	;# 
  3076     0E91                     	;# 
  3077     0E92                     	;# 
  3078     0E94                     	;# 
  3079     0E95                     	;# 
  3080     0E9C                     	;# 
  3081     0E9D                     	;# 
  3082     0E9E                     	;# 
  3083     0E9F                     	;# 
  3084     0EA0                     	;# 
  3085     0EA1                     	;# 
  3086     0EA2                     	;# 
  3087     0EA3                     	;# 
  3088     0EA4                     	;# 
  3089     0EA5                     	;# 
  3090     0EA6                     	;# 
  3091     0EA7                     	;# 
  3092     0F0F                     	;# 
  3093     0F10                     	;# 
  3094     0F11                     	;# 
  3095     0F12                     	;# 
  3096     0F13                     	;# 
  3097     0F14                     	;# 
  3098     0F15                     	;# 
  3099     0F16                     	;# 
  3100     0F17                     	;# 
  3101     0F18                     	;# 
  3102     0F19                     	;# 
  3103     0F1A                     	;# 
  3104     0F1B                     	;# 
  3105     0F1C                     	;# 
  3106     0F1D                     	;# 
  3107     0F1E                     	;# 
  3108     0F1F                     	;# 
  3109     0F20                     	;# 
  3110     0F21                     	;# 
  3111     0F22                     	;# 
  3112     0F23                     	;# 
  3113     0FE4                     	;# 
  3114     0FE5                     	;# 
  3115     0FE6                     	;# 
  3116     0FE7                     	;# 
  3117     0FE8                     	;# 
  3118     0FE9                     	;# 
  3119     0FEA                     	;# 
  3120     0FEB                     	;# 
  3121     0FED                     	;# 
  3122     0FEE                     	;# 
  3123     0FEF                     	;# 
  3124     0000                     	;# 
  3125     0001                     	;# 
  3126     0002                     	;# 
  3127     0003                     	;# 
  3128     0004                     	;# 
  3129     0005                     	;# 
  3130     0006                     	;# 
  3131     0007                     	;# 
  3132     0008                     	;# 
  3133     0009                     	;# 
  3134     000A                     	;# 
  3135     000B                     	;# 
  3136     000C                     	;# 
  3137     000D                     	;# 
  3138     000E                     	;# 
  3139     0010                     	;# 
  3140     0011                     	;# 
  3141     0012                     	;# 
  3142     0013                     	;# 
  3143     0014                     	;# 
  3144     0015                     	;# 
  3145     0016                     	;# 
  3146     0016                     	;# 
  3147     0017                     	;# 
  3148     0018                     	;# 
  3149     0019                     	;# 
  3150     001A                     	;# 
  3151     001A                     	;# 
  3152     001B                     	;# 
  3153     001B                     	;# 
  3154     001C                     	;# 
  3155     001D                     	;# 
  3156     001E                     	;# 
  3157     001F                     	;# 
  3158     008C                     	;# 
  3159     008D                     	;# 
  3160     008E                     	;# 
  3161     0090                     	;# 
  3162     0091                     	;# 
  3163     0092                     	;# 
  3164     0093                     	;# 
  3165     0094                     	;# 
  3166     0095                     	;# 
  3167     0096                     	;# 
  3168     0098                     	;# 
  3169     0099                     	;# 
  3170     009A                     	;# 
  3171     009B                     	;# 
  3172     009B                     	;# 
  3173     009C                     	;# 
  3174     009D                     	;# 
  3175     009E                     	;# 
  3176     009F                     	;# 
  3177     010C                     	;# 
  3178     010D                     	;# 
  3179     010E                     	;# 
  3180     0111                     	;# 
  3181     0112                     	;# 
  3182     0113                     	;# 
  3183     0114                     	;# 
  3184     0115                     	;# 
  3185     0116                     	;# 
  3186     0117                     	;# 
  3187     0118                     	;# 
  3188     0119                     	;# 
  3189     011C                     	;# 
  3190     018C                     	;# 
  3191     018D                     	;# 
  3192     018E                     	;# 
  3193     0191                     	;# 
  3194     0191                     	;# 
  3195     0192                     	;# 
  3196     0193                     	;# 
  3197     0193                     	;# 
  3198     0194                     	;# 
  3199     0195                     	;# 
  3200     0196                     	;# 
  3201     0197                     	;# 
  3202     0199                     	;# 
  3203     0199                     	;# 
  3204     0199                     	;# 
  3205     019A                     	;# 
  3206     019A                     	;# 
  3207     019A                     	;# 
  3208     019B                     	;# 
  3209     019B                     	;# 
  3210     019B                     	;# 
  3211     019B                     	;# 
  3212     019B                     	;# 
  3213     019C                     	;# 
  3214     019C                     	;# 
  3215     019C                     	;# 
  3216     019D                     	;# 
  3217     019D                     	;# 
  3218     019D                     	;# 
  3219     019E                     	;# 
  3220     019E                     	;# 
  3221     019E                     	;# 
  3222     019F                     	;# 
  3223     019F                     	;# 
  3224     019F                     	;# 
  3225     019F                     	;# 
  3226     019F                     	;# 
  3227     020C                     	;# 
  3228     020D                     	;# 
  3229     020E                     	;# 
  3230     0211                     	;# 
  3231     0211                     	;# 
  3232     0212                     	;# 
  3233     0212                     	;# 
  3234     0213                     	;# 
  3235     0213                     	;# 
  3236     0214                     	;# 
  3237     0214                     	;# 
  3238     0215                     	;# 
  3239     0215                     	;# 
  3240     0215                     	;# 
  3241     0215                     	;# 
  3242     0216                     	;# 
  3243     0216                     	;# 
  3244     0217                     	;# 
  3245     0217                     	;# 
  3246     028C                     	;# 
  3247     028D                     	;# 
  3248     028E                     	;# 
  3249     0291                     	;# 
  3250     0291                     	;# 
  3251     0292                     	;# 
  3252     0293                     	;# 
  3253     0294                     	;# 
  3254     0298                     	;# 
  3255     0298                     	;# 
  3256     0299                     	;# 
  3257     029A                     	;# 
  3258     029B                     	;# 
  3259     029E                     	;# 
  3260     030C                     	;# 
  3261     030D                     	;# 
  3262     030E                     	;# 
  3263     038C                     	;# 
  3264     038D                     	;# 
  3265     038E                     	;# 
  3266     0391                     	;# 
  3267     0392                     	;# 
  3268     0393                     	;# 
  3269     0394                     	;# 
  3270     0395                     	;# 
  3271     0396                     	;# 
  3272     0397                     	;# 
  3273     0398                     	;# 
  3274     0399                     	;# 
  3275     040E                     	;# 
  3276     0413                     	;# 
  3277     0413                     	;# 
  3278     0414                     	;# 
  3279     0414                     	;# 
  3280     0415                     	;# 
  3281     0416                     	;# 
  3282     0417                     	;# 
  3283     0418                     	;# 
  3284     041A                     	;# 
  3285     041A                     	;# 
  3286     041B                     	;# 
  3287     041B                     	;# 
  3288     041C                     	;# 
  3289     041D                     	;# 
  3290     041E                     	;# 
  3291     041F                     	;# 
  3292     0493                     	;# 
  3293     0494                     	;# 
  3294     0495                     	;# 
  3295     0496                     	;# 
  3296     049A                     	;# 
  3297     049B                     	;# 
  3298     049C                     	;# 
  3299     049D                     	;# 
  3300     058C                     	;# 
  3301     058C                     	;# 
  3302     058D                     	;# 
  3303     058E                     	;# 
  3304     058E                     	;# 
  3305     058F                     	;# 
  3306     0590                     	;# 
  3307     0590                     	;# 
  3308     0591                     	;# 
  3309     0592                     	;# 
  3310     0592                     	;# 
  3311     0593                     	;# 
  3312     0594                     	;# 
  3313     0594                     	;# 
  3314     0595                     	;# 
  3315     0596                     	;# 
  3316     0596                     	;# 
  3317     0597                     	;# 
  3318     0598                     	;# 
  3319     0599                     	;# 
  3320     059A                     	;# 
  3321     059B                     	;# 
  3322     059B                     	;# 
  3323     059C                     	;# 
  3324     059D                     	;# 
  3325     060C                     	;# 
  3326     060C                     	;# 
  3327     060D                     	;# 
  3328     060E                     	;# 
  3329     060F                     	;# 
  3330     060F                     	;# 
  3331     0610                     	;# 
  3332     0611                     	;# 
  3333     0612                     	;# 
  3334     0613                     	;# 
  3335     0614                     	;# 
  3336     0617                     	;# 
  3337     0617                     	;# 
  3338     0618                     	;# 
  3339     0619                     	;# 
  3340     061A                     	;# 
  3341     061A                     	;# 
  3342     061B                     	;# 
  3343     061C                     	;# 
  3344     0691                     	;# 
  3345     0692                     	;# 
  3346     0693                     	;# 
  3347     0694                     	;# 
  3348     0695                     	;# 
  3349     0696                     	;# 
  3350     0697                     	;# 
  3351     0699                     	;# 
  3352     069A                     	;# 
  3353     0711                     	;# 
  3354     0712                     	;# 
  3355     0713                     	;# 
  3356     0714                     	;# 
  3357     0715                     	;# 
  3358     0718                     	;# 
  3359     0718                     	;# 
  3360     0719                     	;# 
  3361     071A                     	;# 
  3362     071A                     	;# 
  3363     071B                     	;# 
  3364     071C                     	;# 
  3365     071D                     	;# 
  3366     0791                     	;# 
  3367     0791                     	;# 
  3368     0792                     	;# 
  3369     0793                     	;# 
  3370     0793                     	;# 
  3371     0794                     	;# 
  3372     0795                     	;# 
  3373     0795                     	;# 
  3374     0796                     	;# 
  3375     0797                     	;# 
  3376     0797                     	;# 
  3377     0798                     	;# 
  3378     0799                     	;# 
  3379     079A                     	;# 
  3380     080C                     	;# 
  3381     080C                     	;# 
  3382     080D                     	;# 
  3383     080E                     	;# 
  3384     080E                     	;# 
  3385     080F                     	;# 
  3386     0810                     	;# 
  3387     0810                     	;# 
  3388     0811                     	;# 
  3389     0812                     	;# 
  3390     0812                     	;# 
  3391     0813                     	;# 
  3392     0814                     	;# 
  3393     0815                     	;# 
  3394     0816                     	;# 
  3395     0817                     	;# 
  3396     0818                     	;# 
  3397     0819                     	;# 
  3398     081A                     	;# 
  3399     081A                     	;# 
  3400     081B                     	;# 
  3401     081C                     	;# 
  3402     081C                     	;# 
  3403     081D                     	;# 
  3404     088C                     	;# 
  3405     088D                     	;# 
  3406     088E                     	;# 
  3407     088F                     	;# 
  3408     088F                     	;# 
  3409     0890                     	;# 
  3410     0891                     	;# 
  3411     0892                     	;# 
  3412     0893                     	;# 
  3413     0893                     	;# 
  3414     0894                     	;# 
  3415     0895                     	;# 
  3416     0896                     	;# 
  3417     0897                     	;# 
  3418     0897                     	;# 
  3419     0898                     	;# 
  3420     0899                     	;# 
  3421     0D8C                     	;# 
  3422     0D8C                     	;# 
  3423     0D8D                     	;# 
  3424     0D8E                     	;# 
  3425     0D8F                     	;# 
  3426     0D8F                     	;# 
  3427     0D90                     	;# 
  3428     0D91                     	;# 
  3429     0D92                     	;# 
  3430     0D92                     	;# 
  3431     0D93                     	;# 
  3432     0D94                     	;# 
  3433     0D95                     	;# 
  3434     0D95                     	;# 
  3435     0D96                     	;# 
  3436     0D97                     	;# 
  3437     0D98                     	;# 
  3438     0D99                     	;# 
  3439     0D9A                     	;# 
  3440     0D9B                     	;# 
  3441     0D9C                     	;# 
  3442     0D9D                     	;# 
  3443     0D9E                     	;# 
  3444     0D9E                     	;# 
  3445     0D9F                     	;# 
  3446     0DA0                     	;# 
  3447     0DA1                     	;# 
  3448     0DA1                     	;# 
  3449     0DA2                     	;# 
  3450     0DA3                     	;# 
  3451     0DA4                     	;# 
  3452     0DA4                     	;# 
  3453     0DA5                     	;# 
  3454     0DA6                     	;# 
  3455     0DA7                     	;# 
  3456     0DA7                     	;# 
  3457     0DA8                     	;# 
  3458     0DA9                     	;# 
  3459     0DAA                     	;# 
  3460     0DAB                     	;# 
  3461     0DAC                     	;# 
  3462     0DAD                     	;# 
  3463     0DAE                     	;# 
  3464     0DAF                     	;# 
  3465     0E0F                     	;# 
  3466     0E10                     	;# 
  3467     0E11                     	;# 
  3468     0E12                     	;# 
  3469     0E13                     	;# 
  3470     0E14                     	;# 
  3471     0E15                     	;# 
  3472     0E16                     	;# 
  3473     0E17                     	;# 
  3474     0E17                     	;# 
  3475     0E18                     	;# 
  3476     0E18                     	;# 
  3477     0E19                     	;# 
  3478     0E1A                     	;# 
  3479     0E1B                     	;# 
  3480     0E1B                     	;# 
  3481     0E1C                     	;# 
  3482     0E1D                     	;# 
  3483     0E1E                     	;# 
  3484     0E1E                     	;# 
  3485     0E1F                     	;# 
  3486     0E20                     	;# 
  3487     0E21                     	;# 
  3488     0E22                     	;# 
  3489     0E23                     	;# 
  3490     0E24                     	;# 
  3491     0E25                     	;# 
  3492     0E26                     	;# 
  3493     0E27                     	;# 
  3494     0E28                     	;# 
  3495     0E29                     	;# 
  3496     0E2A                     	;# 
  3497     0E2B                     	;# 
  3498     0E2C                     	;# 
  3499     0E2D                     	;# 
  3500     0E2E                     	;# 
  3501     0E90                     	;# 
  3502     0E91                     	;# 
  3503     0E92                     	;# 
  3504     0E94                     	;# 
  3505     0E95                     	;# 
  3506     0E9C                     	;# 
  3507     0E9D                     	;# 
  3508     0E9E                     	;# 
  3509     0E9F                     	;# 
  3510     0EA0                     	;# 
  3511     0EA1                     	;# 
  3512     0EA2                     	;# 
  3513     0EA3                     	;# 
  3514     0EA4                     	;# 
  3515     0EA5                     	;# 
  3516     0EA6                     	;# 
  3517     0EA7                     	;# 
  3518     0F0F                     	;# 
  3519     0F10                     	;# 
  3520     0F11                     	;# 
  3521     0F12                     	;# 
  3522     0F13                     	;# 
  3523     0F14                     	;# 
  3524     0F15                     	;# 
  3525     0F16                     	;# 
  3526     0F17                     	;# 
  3527     0F18                     	;# 
  3528     0F19                     	;# 
  3529     0F1A                     	;# 
  3530     0F1B                     	;# 
  3531     0F1C                     	;# 
  3532     0F1D                     	;# 
  3533     0F1E                     	;# 
  3534     0F1F                     	;# 
  3535     0F20                     	;# 
  3536     0F21                     	;# 
  3537     0F22                     	;# 
  3538     0F23                     	;# 
  3539     0FE4                     	;# 
  3540     0FE5                     	;# 
  3541     0FE6                     	;# 
  3542     0FE7                     	;# 
  3543     0FE8                     	;# 
  3544     0FE9                     	;# 
  3545     0FEA                     	;# 
  3546     0FEB                     	;# 
  3547     0FED                     	;# 
  3548     0FEE                     	;# 
  3549     0FEF                     	;# 
  3550     0000                     	;# 
  3551     0001                     	;# 
  3552     0002                     	;# 
  3553     0003                     	;# 
  3554     0004                     	;# 
  3555     0005                     	;# 
  3556     0006                     	;# 
  3557     0007                     	;# 
  3558     0008                     	;# 
  3559     0009                     	;# 
  3560     000A                     	;# 
  3561     000B                     	;# 
  3562     000C                     	;# 
  3563     000D                     	;# 
  3564     000E                     	;# 
  3565     0010                     	;# 
  3566     0011                     	;# 
  3567     0012                     	;# 
  3568     0013                     	;# 
  3569     0014                     	;# 
  3570     0015                     	;# 
  3571     0016                     	;# 
  3572     0016                     	;# 
  3573     0017                     	;# 
  3574     0018                     	;# 
  3575     0019                     	;# 
  3576     001A                     	;# 
  3577     001A                     	;# 
  3578     001B                     	;# 
  3579     001B                     	;# 
  3580     001C                     	;# 
  3581     001D                     	;# 
  3582     001E                     	;# 
  3583     001F                     	;# 
  3584     008C                     	;# 
  3585     008D                     	;# 
  3586     008E                     	;# 
  3587     0090                     	;# 
  3588     0091                     	;# 
  3589     0092                     	;# 
  3590     0093                     	;# 
  3591     0094                     	;# 
  3592     0095                     	;# 
  3593     0096                     	;# 
  3594     0098                     	;# 
  3595     0099                     	;# 
  3596     009A                     	;# 
  3597     009B                     	;# 
  3598     009B                     	;# 
  3599     009C                     	;# 
  3600     009D                     	;# 
  3601     009E                     	;# 
  3602     009F                     	;# 
  3603     010C                     	;# 
  3604     010D                     	;# 
  3605     010E                     	;# 
  3606     0111                     	;# 
  3607     0112                     	;# 
  3608     0113                     	;# 
  3609     0114                     	;# 
  3610     0115                     	;# 
  3611     0116                     	;# 
  3612     0117                     	;# 
  3613     0118                     	;# 
  3614     0119                     	;# 
  3615     011C                     	;# 
  3616     018C                     	;# 
  3617     018D                     	;# 
  3618     018E                     	;# 
  3619     0191                     	;# 
  3620     0191                     	;# 
  3621     0192                     	;# 
  3622     0193                     	;# 
  3623     0193                     	;# 
  3624     0194                     	;# 
  3625     0195                     	;# 
  3626     0196                     	;# 
  3627     0197                     	;# 
  3628     0199                     	;# 
  3629     0199                     	;# 
  3630     0199                     	;# 
  3631     019A                     	;# 
  3632     019A                     	;# 
  3633     019A                     	;# 
  3634     019B                     	;# 
  3635     019B                     	;# 
  3636     019B                     	;# 
  3637     019B                     	;# 
  3638     019B                     	;# 
  3639     019C                     	;# 
  3640     019C                     	;# 
  3641     019C                     	;# 
  3642     019D                     	;# 
  3643     019D                     	;# 
  3644     019D                     	;# 
  3645     019E                     	;# 
  3646     019E                     	;# 
  3647     019E                     	;# 
  3648     019F                     	;# 
  3649     019F                     	;# 
  3650     019F                     	;# 
  3651     019F                     	;# 
  3652     019F                     	;# 
  3653     020C                     	;# 
  3654     020D                     	;# 
  3655     020E                     	;# 
  3656     0211                     	;# 
  3657     0211                     	;# 
  3658     0212                     	;# 
  3659     0212                     	;# 
  3660     0213                     	;# 
  3661     0213                     	;# 
  3662     0214                     	;# 
  3663     0214                     	;# 
  3664     0215                     	;# 
  3665     0215                     	;# 
  3666     0215                     	;# 
  3667     0215                     	;# 
  3668     0216                     	;# 
  3669     0216                     	;# 
  3670     0217                     	;# 
  3671     0217                     	;# 
  3672     028C                     	;# 
  3673     028D                     	;# 
  3674     028E                     	;# 
  3675     0291                     	;# 
  3676     0291                     	;# 
  3677     0292                     	;# 
  3678     0293                     	;# 
  3679     0294                     	;# 
  3680     0298                     	;# 
  3681     0298                     	;# 
  3682     0299                     	;# 
  3683     029A                     	;# 
  3684     029B                     	;# 
  3685     029E                     	;# 
  3686     030C                     	;# 
  3687     030D                     	;# 
  3688     030E                     	;# 
  3689     038C                     	;# 
  3690     038D                     	;# 
  3691     038E                     	;# 
  3692     0391                     	;# 
  3693     0392                     	;# 
  3694     0393                     	;# 
  3695     0394                     	;# 
  3696     0395                     	;# 
  3697     0396                     	;# 
  3698     0397                     	;# 
  3699     0398                     	;# 
  3700     0399                     	;# 
  3701     040E                     	;# 
  3702     0413                     	;# 
  3703     0413                     	;# 
  3704     0414                     	;# 
  3705     0414                     	;# 
  3706     0415                     	;# 
  3707     0416                     	;# 
  3708     0417                     	;# 
  3709     0418                     	;# 
  3710     041A                     	;# 
  3711     041A                     	;# 
  3712     041B                     	;# 
  3713     041B                     	;# 
  3714     041C                     	;# 
  3715     041D                     	;# 
  3716     041E                     	;# 
  3717     041F                     	;# 
  3718     0493                     	;# 
  3719     0494                     	;# 
  3720     0495                     	;# 
  3721     0496                     	;# 
  3722     049A                     	;# 
  3723     049B                     	;# 
  3724     049C                     	;# 
  3725     049D                     	;# 
  3726     058C                     	;# 
  3727     058C                     	;# 
  3728     058D                     	;# 
  3729     058E                     	;# 
  3730     058E                     	;# 
  3731     058F                     	;# 
  3732     0590                     	;# 
  3733     0590                     	;# 
  3734     0591                     	;# 
  3735     0592                     	;# 
  3736     0592                     	;# 
  3737     0593                     	;# 
  3738     0594                     	;# 
  3739     0594                     	;# 
  3740     0595                     	;# 
  3741     0596                     	;# 
  3742     0596                     	;# 
  3743     0597                     	;# 
  3744     0598                     	;# 
  3745     0599                     	;# 
  3746     059A                     	;# 
  3747     059B                     	;# 
  3748     059B                     	;# 
  3749     059C                     	;# 
  3750     059D                     	;# 
  3751     060C                     	;# 
  3752     060C                     	;# 
  3753     060D                     	;# 
  3754     060E                     	;# 
  3755     060F                     	;# 
  3756     060F                     	;# 
  3757     0610                     	;# 
  3758     0611                     	;# 
  3759     0612                     	;# 
  3760     0613                     	;# 
  3761     0614                     	;# 
  3762     0617                     	;# 
  3763     0617                     	;# 
  3764     0618                     	;# 
  3765     0619                     	;# 
  3766     061A                     	;# 
  3767     061A                     	;# 
  3768     061B                     	;# 
  3769     061C                     	;# 
  3770     0691                     	;# 
  3771     0692                     	;# 
  3772     0693                     	;# 
  3773     0694                     	;# 
  3774     0695                     	;# 
  3775     0696                     	;# 
  3776     0697                     	;# 
  3777     0699                     	;# 
  3778     069A                     	;# 
  3779     0711                     	;# 
  3780     0712                     	;# 
  3781     0713                     	;# 
  3782     0714                     	;# 
  3783     0715                     	;# 
  3784     0718                     	;# 
  3785     0718                     	;# 
  3786     0719                     	;# 
  3787     071A                     	;# 
  3788     071A                     	;# 
  3789     071B                     	;# 
  3790     071C                     	;# 
  3791     071D                     	;# 
  3792     0791                     	;# 
  3793     0791                     	;# 
  3794     0792                     	;# 
  3795     0793                     	;# 
  3796     0793                     	;# 
  3797     0794                     	;# 
  3798     0795                     	;# 
  3799     0795                     	;# 
  3800     0796                     	;# 
  3801     0797                     	;# 
  3802     0797                     	;# 
  3803     0798                     	;# 
  3804     0799                     	;# 
  3805     079A                     	;# 
  3806     080C                     	;# 
  3807     080C                     	;# 
  3808     080D                     	;# 
  3809     080E                     	;# 
  3810     080E                     	;# 
  3811     080F                     	;# 
  3812     0810                     	;# 
  3813     0810                     	;# 
  3814     0811                     	;# 
  3815     0812                     	;# 
  3816     0812                     	;# 
  3817     0813                     	;# 
  3818     0814                     	;# 
  3819     0815                     	;# 
  3820     0816                     	;# 
  3821     0817                     	;# 
  3822     0818                     	;# 
  3823     0819                     	;# 
  3824     081A                     	;# 
  3825     081A                     	;# 
  3826     081B                     	;# 
  3827     081C                     	;# 
  3828     081C                     	;# 
  3829     081D                     	;# 
  3830     088C                     	;# 
  3831     088D                     	;# 
  3832     088E                     	;# 
  3833     088F                     	;# 
  3834     088F                     	;# 
  3835     0890                     	;# 
  3836     0891                     	;# 
  3837     0892                     	;# 
  3838     0893                     	;# 
  3839     0893                     	;# 
  3840     0894                     	;# 
  3841     0895                     	;# 
  3842     0896                     	;# 
  3843     0897                     	;# 
  3844     0897                     	;# 
  3845     0898                     	;# 
  3846     0899                     	;# 
  3847     0D8C                     	;# 
  3848     0D8C                     	;# 
  3849     0D8D                     	;# 
  3850     0D8E                     	;# 
  3851     0D8F                     	;# 
  3852     0D8F                     	;# 
  3853     0D90                     	;# 
  3854     0D91                     	;# 
  3855     0D92                     	;# 
  3856     0D92                     	;# 
  3857     0D93                     	;# 
  3858     0D94                     	;# 
  3859     0D95                     	;# 
  3860     0D95                     	;# 
  3861     0D96                     	;# 
  3862     0D97                     	;# 
  3863     0D98                     	;# 
  3864     0D99                     	;# 
  3865     0D9A                     	;# 
  3866     0D9B                     	;# 
  3867     0D9C                     	;# 
  3868     0D9D                     	;# 
  3869     0D9E                     	;# 
  3870     0D9E                     	;# 
  3871     0D9F                     	;# 
  3872     0DA0                     	;# 
  3873     0DA1                     	;# 
  3874     0DA1                     	;# 
  3875     0DA2                     	;# 
  3876     0DA3                     	;# 
  3877     0DA4                     	;# 
  3878     0DA4                     	;# 
  3879     0DA5                     	;# 
  3880     0DA6                     	;# 
  3881     0DA7                     	;# 
  3882     0DA7                     	;# 
  3883     0DA8                     	;# 
  3884     0DA9                     	;# 
  3885     0DAA                     	;# 
  3886     0DAB                     	;# 
  3887     0DAC                     	;# 
  3888     0DAD                     	;# 
  3889     0DAE                     	;# 
  3890     0DAF                     	;# 
  3891     0E0F                     	;# 
  3892     0E10                     	;# 
  3893     0E11                     	;# 
  3894     0E12                     	;# 
  3895     0E13                     	;# 
  3896     0E14                     	;# 
  3897     0E15                     	;# 
  3898     0E16                     	;# 
  3899     0E17                     	;# 
  3900     0E17                     	;# 
  3901     0E18                     	;# 
  3902     0E18                     	;# 
  3903     0E19                     	;# 
  3904     0E1A                     	;# 
  3905     0E1B                     	;# 
  3906     0E1B                     	;# 
  3907     0E1C                     	;# 
  3908     0E1D                     	;# 
  3909     0E1E                     	;# 
  3910     0E1E                     	;# 
  3911     0E1F                     	;# 
  3912     0E20                     	;# 
  3913     0E21                     	;# 
  3914     0E22                     	;# 
  3915     0E23                     	;# 
  3916     0E24                     	;# 
  3917     0E25                     	;# 
  3918     0E26                     	;# 
  3919     0E27                     	;# 
  3920     0E28                     	;# 
  3921     0E29                     	;# 
  3922     0E2A                     	;# 
  3923     0E2B                     	;# 
  3924     0E2C                     	;# 
  3925     0E2D                     	;# 
  3926     0E2E                     	;# 
  3927     0E90                     	;# 
  3928     0E91                     	;# 
  3929     0E92                     	;# 
  3930     0E94                     	;# 
  3931     0E95                     	;# 
  3932     0E9C                     	;# 
  3933     0E9D                     	;# 
  3934     0E9E                     	;# 
  3935     0E9F                     	;# 
  3936     0EA0                     	;# 
  3937     0EA1                     	;# 
  3938     0EA2                     	;# 
  3939     0EA3                     	;# 
  3940     0EA4                     	;# 
  3941     0EA5                     	;# 
  3942     0EA6                     	;# 
  3943     0EA7                     	;# 
  3944     0F0F                     	;# 
  3945     0F10                     	;# 
  3946     0F11                     	;# 
  3947     0F12                     	;# 
  3948     0F13                     	;# 
  3949     0F14                     	;# 
  3950     0F15                     	;# 
  3951     0F16                     	;# 
  3952     0F17                     	;# 
  3953     0F18                     	;# 
  3954     0F19                     	;# 
  3955     0F1A                     	;# 
  3956     0F1B                     	;# 
  3957     0F1C                     	;# 
  3958     0F1D                     	;# 
  3959     0F1E                     	;# 
  3960     0F1F                     	;# 
  3961     0F20                     	;# 
  3962     0F21                     	;# 
  3963     0F22                     	;# 
  3964     0F23                     	;# 
  3965     0FE4                     	;# 
  3966     0FE5                     	;# 
  3967     0FE6                     	;# 
  3968     0FE7                     	;# 
  3969     0FE8                     	;# 
  3970     0FE9                     	;# 
  3971     0FEA                     	;# 
  3972     0FEB                     	;# 
  3973     0FED                     	;# 
  3974     0FEE                     	;# 
  3975     0FEF                     	;# 
  3976     0000                     	;# 
  3977     0001                     	;# 
  3978     0002                     	;# 
  3979     0003                     	;# 
  3980     0004                     	;# 
  3981     0005                     	;# 
  3982     0006                     	;# 
  3983     0007                     	;# 
  3984     0008                     	;# 
  3985     0009                     	;# 
  3986     000A                     	;# 
  3987     000B                     	;# 
  3988     000C                     	;# 
  3989     000D                     	;# 
  3990     000E                     	;# 
  3991     0010                     	;# 
  3992     0011                     	;# 
  3993     0012                     	;# 
  3994     0013                     	;# 
  3995     0014                     	;# 
  3996     0015                     	;# 
  3997     0016                     	;# 
  3998     0016                     	;# 
  3999     0017                     	;# 
  4000     0018                     	;# 
  4001     0019                     	;# 
  4002     001A                     	;# 
  4003     001A                     	;# 
  4004     001B                     	;# 
  4005     001B                     	;# 
  4006     001C                     	;# 
  4007     001D                     	;# 
  4008     001E                     	;# 
  4009     001F                     	;# 
  4010     008C                     	;# 
  4011     008D                     	;# 
  4012     008E                     	;# 
  4013     0090                     	;# 
  4014     0091                     	;# 
  4015     0092                     	;# 
  4016     0093                     	;# 
  4017     0094                     	;# 
  4018     0095                     	;# 
  4019     0096                     	;# 
  4020     0098                     	;# 
  4021     0099                     	;# 
  4022     009A                     	;# 
  4023     009B                     	;# 
  4024     009B                     	;# 
  4025     009C                     	;# 
  4026     009D                     	;# 
  4027     009E                     	;# 
  4028     009F                     	;# 
  4029     010C                     	;# 
  4030     010D                     	;# 
  4031     010E                     	;# 
  4032     0111                     	;# 
  4033     0112                     	;# 
  4034     0113                     	;# 
  4035     0114                     	;# 
  4036     0115                     	;# 
  4037     0116                     	;# 
  4038     0117                     	;# 
  4039     0118                     	;# 
  4040     0119                     	;# 
  4041     011C                     	;# 
  4042     018C                     	;# 
  4043     018D                     	;# 
  4044     018E                     	;# 
  4045     0191                     	;# 
  4046     0191                     	;# 
  4047     0192                     	;# 
  4048     0193                     	;# 
  4049     0193                     	;# 
  4050     0194                     	;# 
  4051     0195                     	;# 
  4052     0196                     	;# 
  4053     0197                     	;# 
  4054     0199                     	;# 
  4055     0199                     	;# 
  4056     0199                     	;# 
  4057     019A                     	;# 
  4058     019A                     	;# 
  4059     019A                     	;# 
  4060     019B                     	;# 
  4061     019B                     	;# 
  4062     019B                     	;# 
  4063     019B                     	;# 
  4064     019B                     	;# 
  4065     019C                     	;# 
  4066     019C                     	;# 
  4067     019C                     	;# 
  4068     019D                     	;# 
  4069     019D                     	;# 
  4070     019D                     	;# 
  4071     019E                     	;# 
  4072     019E                     	;# 
  4073     019E                     	;# 
  4074     019F                     	;# 
  4075     019F                     	;# 
  4076     019F                     	;# 
  4077     019F                     	;# 
  4078     019F                     	;# 
  4079     020C                     	;# 
  4080     020D                     	;# 
  4081     020E                     	;# 
  4082     0211                     	;# 
  4083     0211                     	;# 
  4084     0212                     	;# 
  4085     0212                     	;# 
  4086     0213                     	;# 
  4087     0213                     	;# 
  4088     0214                     	;# 
  4089     0214                     	;# 
  4090     0215                     	;# 
  4091     0215                     	;# 
  4092     0215                     	;# 
  4093     0215                     	;# 
  4094     0216                     	;# 
  4095     0216                     	;# 
  4096     0217                     	;# 
  4097     0217                     	;# 
  4098     028C                     	;# 
  4099     028D                     	;# 
  4100     028E                     	;# 
  4101     0291                     	;# 
  4102     0291                     	;# 
  4103     0292                     	;# 
  4104     0293                     	;# 
  4105     0294                     	;# 
  4106     0298                     	;# 
  4107     0298                     	;# 
  4108     0299                     	;# 
  4109     029A                     	;# 
  4110     029B                     	;# 
  4111     029E                     	;# 
  4112     030C                     	;# 
  4113     030D                     	;# 
  4114     030E                     	;# 
  4115     038C                     	;# 
  4116     038D                     	;# 
  4117     038E                     	;# 
  4118     0391                     	;# 
  4119     0392                     	;# 
  4120     0393                     	;# 
  4121     0394                     	;# 
  4122     0395                     	;# 
  4123     0396                     	;# 
  4124     0397                     	;# 
  4125     0398                     	;# 
  4126     0399                     	;# 
  4127     040E                     	;# 
  4128     0413                     	;# 
  4129     0413                     	;# 
  4130     0414                     	;# 
  4131     0414                     	;# 
  4132     0415                     	;# 
  4133     0416                     	;# 
  4134     0417                     	;# 
  4135     0418                     	;# 
  4136     041A                     	;# 
  4137     041A                     	;# 
  4138     041B                     	;# 
  4139     041B                     	;# 
  4140     041C                     	;# 
  4141     041D                     	;# 
  4142     041E                     	;# 
  4143     041F                     	;# 
  4144     0493                     	;# 
  4145     0494                     	;# 
  4146     0495                     	;# 
  4147     0496                     	;# 
  4148     049A                     	;# 
  4149     049B                     	;# 
  4150     049C                     	;# 
  4151     049D                     	;# 
  4152     058C                     	;# 
  4153     058C                     	;# 
  4154     058D                     	;# 
  4155     058E                     	;# 
  4156     058E                     	;# 
  4157     058F                     	;# 
  4158     0590                     	;# 
  4159     0590                     	;# 
  4160     0591                     	;# 
  4161     0592                     	;# 
  4162     0592                     	;# 
  4163     0593                     	;# 
  4164     0594                     	;# 
  4165     0594                     	;# 
  4166     0595                     	;# 
  4167     0596                     	;# 
  4168     0596                     	;# 
  4169     0597                     	;# 
  4170     0598                     	;# 
  4171     0599                     	;# 
  4172     059A                     	;# 
  4173     059B                     	;# 
  4174     059B                     	;# 
  4175     059C                     	;# 
  4176     059D                     	;# 
  4177     060C                     	;# 
  4178     060C                     	;# 
  4179     060D                     	;# 
  4180     060E                     	;# 
  4181     060F                     	;# 
  4182     060F                     	;# 
  4183     0610                     	;# 
  4184     0611                     	;# 
  4185     0612                     	;# 
  4186     0613                     	;# 
  4187     0614                     	;# 
  4188     0617                     	;# 
  4189     0617                     	;# 
  4190     0618                     	;# 
  4191     0619                     	;# 
  4192     061A                     	;# 
  4193     061A                     	;# 
  4194     061B                     	;# 
  4195     061C                     	;# 
  4196     0691                     	;# 
  4197     0692                     	;# 
  4198     0693                     	;# 
  4199     0694                     	;# 
  4200     0695                     	;# 
  4201     0696                     	;# 
  4202     0697                     	;# 
  4203     0699                     	;# 
  4204     069A                     	;# 
  4205     0711                     	;# 
  4206     0712                     	;# 
  4207     0713                     	;# 
  4208     0714                     	;# 
  4209     0715                     	;# 
  4210     0718                     	;# 
  4211     0718                     	;# 
  4212     0719                     	;# 
  4213     071A                     	;# 
  4214     071A                     	;# 
  4215     071B                     	;# 
  4216     071C                     	;# 
  4217     071D                     	;# 
  4218     0791                     	;# 
  4219     0791                     	;# 
  4220     0792                     	;# 
  4221     0793                     	;# 
  4222     0793                     	;# 
  4223     0794                     	;# 
  4224     0795                     	;# 
  4225     0795                     	;# 
  4226     0796                     	;# 
  4227     0797                     	;# 
  4228     0797                     	;# 
  4229     0798                     	;# 
  4230     0799                     	;# 
  4231     079A                     	;# 
  4232     080C                     	;# 
  4233     080C                     	;# 
  4234     080D                     	;# 
  4235     080E                     	;# 
  4236     080E                     	;# 
  4237     080F                     	;# 
  4238     0810                     	;# 
  4239     0810                     	;# 
  4240     0811                     	;# 
  4241     0812                     	;# 
  4242     0812                     	;# 
  4243     0813                     	;# 
  4244     0814                     	;# 
  4245     0815                     	;# 
  4246     0816                     	;# 
  4247     0817                     	;# 
  4248     0818                     	;# 
  4249     0819                     	;# 
  4250     081A                     	;# 
  4251     081A                     	;# 
  4252     081B                     	;# 
  4253     081C                     	;# 
  4254     081C                     	;# 
  4255     081D                     	;# 
  4256     088C                     	;# 
  4257     088D                     	;# 
  4258     088E                     	;# 
  4259     088F                     	;# 
  4260     088F                     	;# 
  4261     0890                     	;# 
  4262     0891                     	;# 
  4263     0892                     	;# 
  4264     0893                     	;# 
  4265     0893                     	;# 
  4266     0894                     	;# 
  4267     0895                     	;# 
  4268     0896                     	;# 
  4269     0897                     	;# 
  4270     0897                     	;# 
  4271     0898                     	;# 
  4272     0899                     	;# 
  4273     0D8C                     	;# 
  4274     0D8C                     	;# 
  4275     0D8D                     	;# 
  4276     0D8E                     	;# 
  4277     0D8F                     	;# 
  4278     0D8F                     	;# 
  4279     0D90                     	;# 
  4280     0D91                     	;# 
  4281     0D92                     	;# 
  4282     0D92                     	;# 
  4283     0D93                     	;# 
  4284     0D94                     	;# 
  4285     0D95                     	;# 
  4286     0D95                     	;# 
  4287     0D96                     	;# 
  4288     0D97                     	;# 
  4289     0D98                     	;# 
  4290     0D99                     	;# 
  4291     0D9A                     	;# 
  4292     0D9B                     	;# 
  4293     0D9C                     	;# 
  4294     0D9D                     	;# 
  4295     0D9E                     	;# 
  4296     0D9E                     	;# 
  4297     0D9F                     	;# 
  4298     0DA0                     	;# 
  4299     0DA1                     	;# 
  4300     0DA1                     	;# 
  4301     0DA2                     	;# 
  4302     0DA3                     	;# 
  4303     0DA4                     	;# 
  4304     0DA4                     	;# 
  4305     0DA5                     	;# 
  4306     0DA6                     	;# 
  4307     0DA7                     	;# 
  4308     0DA7                     	;# 
  4309     0DA8                     	;# 
  4310     0DA9                     	;# 
  4311     0DAA                     	;# 
  4312     0DAB                     	;# 
  4313     0DAC                     	;# 
  4314     0DAD                     	;# 
  4315     0DAE                     	;# 
  4316     0DAF                     	;# 
  4317     0E0F                     	;# 
  4318     0E10                     	;# 
  4319     0E11                     	;# 
  4320     0E12                     	;# 
  4321     0E13                     	;# 
  4322     0E14                     	;# 
  4323     0E15                     	;# 
  4324     0E16                     	;# 
  4325     0E17                     	;# 
  4326     0E17                     	;# 
  4327     0E18                     	;# 
  4328     0E18                     	;# 
  4329     0E19                     	;# 
  4330     0E1A                     	;# 
  4331     0E1B                     	;# 
  4332     0E1B                     	;# 
  4333     0E1C                     	;# 
  4334     0E1D                     	;# 
  4335     0E1E                     	;# 
  4336     0E1E                     	;# 
  4337     0E1F                     	;# 
  4338     0E20                     	;# 
  4339     0E21                     	;# 
  4340     0E22                     	;# 
  4341     0E23                     	;# 
  4342     0E24                     	;# 
  4343     0E25                     	;# 
  4344     0E26                     	;# 
  4345     0E27                     	;# 
  4346     0E28                     	;# 
  4347     0E29                     	;# 
  4348     0E2A                     	;# 
  4349     0E2B                     	;# 
  4350     0E2C                     	;# 
  4351     0E2D                     	;# 
  4352     0E2E                     	;# 
  4353     0E90                     	;# 
  4354     0E91                     	;# 
  4355     0E92                     	;# 
  4356     0E94                     	;# 
  4357     0E95                     	;# 
  4358     0E9C                     	;# 
  4359     0E9D                     	;# 
  4360     0E9E                     	;# 
  4361     0E9F                     	;# 
  4362     0EA0                     	;# 
  4363     0EA1                     	;# 
  4364     0EA2                     	;# 
  4365     0EA3                     	;# 
  4366     0EA4                     	;# 
  4367     0EA5                     	;# 
  4368     0EA6                     	;# 
  4369     0EA7                     	;# 
  4370     0F0F                     	;# 
  4371     0F10                     	;# 
  4372     0F11                     	;# 
  4373     0F12                     	;# 
  4374     0F13                     	;# 
  4375     0F14                     	;# 
  4376     0F15                     	;# 
  4377     0F16                     	;# 
  4378     0F17                     	;# 
  4379     0F18                     	;# 
  4380     0F19                     	;# 
  4381     0F1A                     	;# 
  4382     0F1B                     	;# 
  4383     0F1C                     	;# 
  4384     0F1D                     	;# 
  4385     0F1E                     	;# 
  4386     0F1F                     	;# 
  4387     0F20                     	;# 
  4388     0F21                     	;# 
  4389     0F22                     	;# 
  4390     0F23                     	;# 
  4391     0FE4                     	;# 
  4392     0FE5                     	;# 
  4393     0FE6                     	;# 
  4394     0FE7                     	;# 
  4395     0FE8                     	;# 
  4396     0FE9                     	;# 
  4397     0FEA                     	;# 
  4398     0FEB                     	;# 
  4399     0FED                     	;# 
  4400     0FEE                     	;# 
  4401     0FEF                     	;# 
  4402     0000                     	;# 
  4403     0001                     	;# 
  4404     0002                     	;# 
  4405     0003                     	;# 
  4406     0004                     	;# 
  4407     0005                     	;# 
  4408     0006                     	;# 
  4409     0007                     	;# 
  4410     0008                     	;# 
  4411     0009                     	;# 
  4412     000A                     	;# 
  4413     000B                     	;# 
  4414     000C                     	;# 
  4415     000D                     	;# 
  4416     000E                     	;# 
  4417     0010                     	;# 
  4418     0011                     	;# 
  4419     0012                     	;# 
  4420     0013                     	;# 
  4421     0014                     	;# 
  4422     0015                     	;# 
  4423     0016                     	;# 
  4424     0016                     	;# 
  4425     0017                     	;# 
  4426     0018                     	;# 
  4427     0019                     	;# 
  4428     001A                     	;# 
  4429     001A                     	;# 
  4430     001B                     	;# 
  4431     001B                     	;# 
  4432     001C                     	;# 
  4433     001D                     	;# 
  4434     001E                     	;# 
  4435     001F                     	;# 
  4436     008C                     	;# 
  4437     008D                     	;# 
  4438     008E                     	;# 
  4439     0090                     	;# 
  4440     0091                     	;# 
  4441     0092                     	;# 
  4442     0093                     	;# 
  4443     0094                     	;# 
  4444     0095                     	;# 
  4445     0096                     	;# 
  4446     0098                     	;# 
  4447     0099                     	;# 
  4448     009A                     	;# 
  4449     009B                     	;# 
  4450     009B                     	;# 
  4451     009C                     	;# 
  4452     009D                     	;# 
  4453     009E                     	;# 
  4454     009F                     	;# 
  4455     010C                     	;# 
  4456     010D                     	;# 
  4457     010E                     	;# 
  4458     0111                     	;# 
  4459     0112                     	;# 
  4460     0113                     	;# 
  4461     0114                     	;# 
  4462     0115                     	;# 
  4463     0116                     	;# 
  4464     0117                     	;# 
  4465     0118                     	;# 
  4466     0119                     	;# 
  4467     011C                     	;# 
  4468     018C                     	;# 
  4469     018D                     	;# 
  4470     018E                     	;# 
  4471     0191                     	;# 
  4472     0191                     	;# 
  4473     0192                     	;# 
  4474     0193                     	;# 
  4475     0193                     	;# 
  4476     0194                     	;# 
  4477     0195                     	;# 
  4478     0196                     	;# 
  4479     0197                     	;# 
  4480     0199                     	;# 
  4481     0199                     	;# 
  4482     0199                     	;# 
  4483     019A                     	;# 
  4484     019A                     	;# 
  4485     019A                     	;# 
  4486     019B                     	;# 
  4487     019B                     	;# 
  4488     019B                     	;# 
  4489     019B                     	;# 
  4490     019B                     	;# 
  4491     019C                     	;# 
  4492     019C                     	;# 
  4493     019C                     	;# 
  4494     019D                     	;# 
  4495     019D                     	;# 
  4496     019D                     	;# 
  4497     019E                     	;# 
  4498     019E                     	;# 
  4499     019E                     	;# 
  4500     019F                     	;# 
  4501     019F                     	;# 
  4502     019F                     	;# 
  4503     019F                     	;# 
  4504     019F                     	;# 
  4505     020C                     	;# 
  4506     020D                     	;# 
  4507     020E                     	;# 
  4508     0211                     	;# 
  4509     0211                     	;# 
  4510     0212                     	;# 
  4511     0212                     	;# 
  4512     0213                     	;# 
  4513     0213                     	;# 
  4514     0214                     	;# 
  4515     0214                     	;# 
  4516     0215                     	;# 
  4517     0215                     	;# 
  4518     0215                     	;# 
  4519     0215                     	;# 
  4520     0216                     	;# 
  4521     0216                     	;# 
  4522     0217                     	;# 
  4523     0217                     	;# 
  4524     028C                     	;# 
  4525     028D                     	;# 
  4526     028E                     	;# 
  4527     0291                     	;# 
  4528     0291                     	;# 
  4529     0292                     	;# 
  4530     0293                     	;# 
  4531     0294                     	;# 
  4532     0298                     	;# 
  4533     0298                     	;# 
  4534     0299                     	;# 
  4535     029A                     	;# 
  4536     029B                     	;# 
  4537     029E                     	;# 
  4538     030C                     	;# 
  4539     030D                     	;# 
  4540     030E                     	;# 
  4541     038C                     	;# 
  4542     038D                     	;# 
  4543     038E                     	;# 
  4544     0391                     	;# 
  4545     0392                     	;# 
  4546     0393                     	;# 
  4547     0394                     	;# 
  4548     0395                     	;# 
  4549     0396                     	;# 
  4550     0397                     	;# 
  4551     0398                     	;# 
  4552     0399                     	;# 
  4553     040E                     	;# 
  4554     0413                     	;# 
  4555     0413                     	;# 
  4556     0414                     	;# 
  4557     0414                     	;# 
  4558     0415                     	;# 
  4559     0416                     	;# 
  4560     0417                     	;# 
  4561     0418                     	;# 
  4562     041A                     	;# 
  4563     041A                     	;# 
  4564     041B                     	;# 
  4565     041B                     	;# 
  4566     041C                     	;# 
  4567     041D                     	;# 
  4568     041E                     	;# 
  4569     041F                     	;# 
  4570     0493                     	;# 
  4571     0494                     	;# 
  4572     0495                     	;# 
  4573     0496                     	;# 
  4574     049A                     	;# 
  4575     049B                     	;# 
  4576     049C                     	;# 
  4577     049D                     	;# 
  4578     058C                     	;# 
  4579     058C                     	;# 
  4580     058D                     	;# 
  4581     058E                     	;# 
  4582     058E                     	;# 
  4583     058F                     	;# 
  4584     0590                     	;# 
  4585     0590                     	;# 
  4586     0591                     	;# 
  4587     0592                     	;# 
  4588     0592                     	;# 
  4589     0593                     	;# 
  4590     0594                     	;# 
  4591     0594                     	;# 
  4592     0595                     	;# 
  4593     0596                     	;# 
  4594     0596                     	;# 
  4595     0597                     	;# 
  4596     0598                     	;# 
  4597     0599                     	;# 
  4598     059A                     	;# 
  4599     059B                     	;# 
  4600     059B                     	;# 
  4601     059C                     	;# 
  4602     059D                     	;# 
  4603     060C                     	;# 
  4604     060C                     	;# 
  4605     060D                     	;# 
  4606     060E                     	;# 
  4607     060F                     	;# 
  4608     060F                     	;# 
  4609     0610                     	;# 
  4610     0611                     	;# 
  4611     0612                     	;# 
  4612     0613                     	;# 
  4613     0614                     	;# 
  4614     0617                     	;# 
  4615     0617                     	;# 
  4616     0618                     	;# 
  4617     0619                     	;# 
  4618     061A                     	;# 
  4619     061A                     	;# 
  4620     061B                     	;# 
  4621     061C                     	;# 
  4622     0691                     	;# 
  4623     0692                     	;# 
  4624     0693                     	;# 
  4625     0694                     	;# 
  4626     0695                     	;# 
  4627     0696                     	;# 
  4628     0697                     	;# 
  4629     0699                     	;# 
  4630     069A                     	;# 
  4631     0711                     	;# 
  4632     0712                     	;# 
  4633     0713                     	;# 
  4634     0714                     	;# 
  4635     0715                     	;# 
  4636     0718                     	;# 
  4637     0718                     	;# 
  4638     0719                     	;# 
  4639     071A                     	;# 
  4640     071A                     	;# 
  4641     071B                     	;# 
  4642     071C                     	;# 
  4643     071D                     	;# 
  4644     0791                     	;# 
  4645     0791                     	;# 
  4646     0792                     	;# 
  4647     0793                     	;# 
  4648     0793                     	;# 
  4649     0794                     	;# 
  4650     0795                     	;# 
  4651     0795                     	;# 
  4652     0796                     	;# 
  4653     0797                     	;# 
  4654     0797                     	;# 
  4655     0798                     	;# 
  4656     0799                     	;# 
  4657     079A                     	;# 
  4658     080C                     	;# 
  4659     080C                     	;# 
  4660     080D                     	;# 
  4661     080E                     	;# 
  4662     080E                     	;# 
  4663     080F                     	;# 
  4664     0810                     	;# 
  4665     0810                     	;# 
  4666     0811                     	;# 
  4667     0812                     	;# 
  4668     0812                     	;# 
  4669     0813                     	;# 
  4670     0814                     	;# 
  4671     0815                     	;# 
  4672     0816                     	;# 
  4673     0817                     	;# 
  4674     0818                     	;# 
  4675     0819                     	;# 
  4676     081A                     	;# 
  4677     081A                     	;# 
  4678     081B                     	;# 
  4679     081C                     	;# 
  4680     081C                     	;# 
  4681     081D                     	;# 
  4682     088C                     	;# 
  4683     088D                     	;# 
  4684     088E                     	;# 
  4685     088F                     	;# 
  4686     088F                     	;# 
  4687     0890                     	;# 
  4688     0891                     	;# 
  4689     0892                     	;# 
  4690     0893                     	;# 
  4691     0893                     	;# 
  4692     0894                     	;# 
  4693     0895                     	;# 
  4694     0896                     	;# 
  4695     0897                     	;# 
  4696     0897                     	;# 
  4697     0898                     	;# 
  4698     0899                     	;# 
  4699     0D8C                     	;# 
  4700     0D8C                     	;# 
  4701     0D8D                     	;# 
  4702     0D8E                     	;# 
  4703     0D8F                     	;# 
  4704     0D8F                     	;# 
  4705     0D90                     	;# 
  4706     0D91                     	;# 
  4707     0D92                     	;# 
  4708     0D92                     	;# 
  4709     0D93                     	;# 
  4710     0D94                     	;# 
  4711     0D95                     	;# 
  4712     0D95                     	;# 
  4713     0D96                     	;# 
  4714     0D97                     	;# 
  4715     0D98                     	;# 
  4716     0D99                     	;# 
  4717     0D9A                     	;# 
  4718     0D9B                     	;# 
  4719     0D9C                     	;# 
  4720     0D9D                     	;# 
  4721     0D9E                     	;# 
  4722     0D9E                     	;# 
  4723     0D9F                     	;# 
  4724     0DA0                     	;# 
  4725     0DA1                     	;# 
  4726     0DA1                     	;# 
  4727     0DA2                     	;# 
  4728     0DA3                     	;# 
  4729     0DA4                     	;# 
  4730     0DA4                     	;# 
  4731     0DA5                     	;# 
  4732     0DA6                     	;# 
  4733     0DA7                     	;# 
  4734     0DA7                     	;# 
  4735     0DA8                     	;# 
  4736     0DA9                     	;# 
  4737     0DAA                     	;# 
  4738     0DAB                     	;# 
  4739     0DAC                     	;# 
  4740     0DAD                     	;# 
  4741     0DAE                     	;# 
  4742     0DAF                     	;# 
  4743     0E0F                     	;# 
  4744     0E10                     	;# 
  4745     0E11                     	;# 
  4746     0E12                     	;# 
  4747     0E13                     	;# 
  4748     0E14                     	;# 
  4749     0E15                     	;# 
  4750     0E16                     	;# 
  4751     0E17                     	;# 
  4752     0E17                     	;# 
  4753     0E18                     	;# 
  4754     0E18                     	;# 
  4755     0E19                     	;# 
  4756     0E1A                     	;# 
  4757     0E1B                     	;# 
  4758     0E1B                     	;# 
  4759     0E1C                     	;# 
  4760     0E1D                     	;# 
  4761     0E1E                     	;# 
  4762     0E1E                     	;# 
  4763     0E1F                     	;# 
  4764     0E20                     	;# 
  4765     0E21                     	;# 
  4766     0E22                     	;# 
  4767     0E23                     	;# 
  4768     0E24                     	;# 
  4769     0E25                     	;# 
  4770     0E26                     	;# 
  4771     0E27                     	;# 
  4772     0E28                     	;# 
  4773     0E29                     	;# 
  4774     0E2A                     	;# 
  4775     0E2B                     	;# 
  4776     0E2C                     	;# 
  4777     0E2D                     	;# 
  4778     0E2E                     	;# 
  4779     0E90                     	;# 
  4780     0E91                     	;# 
  4781     0E92                     	;# 
  4782     0E94                     	;# 
  4783     0E95                     	;# 
  4784     0E9C                     	;# 
  4785     0E9D                     	;# 
  4786     0E9E                     	;# 
  4787     0E9F                     	;# 
  4788     0EA0                     	;# 
  4789     0EA1                     	;# 
  4790     0EA2                     	;# 
  4791     0EA3                     	;# 
  4792     0EA4                     	;# 
  4793     0EA5                     	;# 
  4794     0EA6                     	;# 
  4795     0EA7                     	;# 
  4796     0F0F                     	;# 
  4797     0F10                     	;# 
  4798     0F11                     	;# 
  4799     0F12                     	;# 
  4800     0F13                     	;# 
  4801     0F14                     	;# 
  4802     0F15                     	;# 
  4803     0F16                     	;# 
  4804     0F17                     	;# 
  4805     0F18                     	;# 
  4806     0F19                     	;# 
  4807     0F1A                     	;# 
  4808     0F1B                     	;# 
  4809     0F1C                     	;# 
  4810     0F1D                     	;# 
  4811     0F1E                     	;# 
  4812     0F1F                     	;# 
  4813     0F20                     	;# 
  4814     0F21                     	;# 
  4815     0F22                     	;# 
  4816     0F23                     	;# 
  4817     0FE4                     	;# 
  4818     0FE5                     	;# 
  4819     0FE6                     	;# 
  4820     0FE7                     	;# 
  4821     0FE8                     	;# 
  4822     0FE9                     	;# 
  4823     0FEA                     	;# 
  4824     0FEB                     	;# 
  4825     0FED                     	;# 
  4826     0FEE                     	;# 
  4827     0FEF                     	;# 
  4828                           
  4829 ;; Function _I2C1_Deinitialize is unused but had its address taken
  4830     0000                     
  4831 ;; Function _I2C1_WriteRead is unused but had its address taken
  4832     0000                     
  4833 ;; Function _I2C1_ErrorGet is unused but had its address taken
  4834     0000                     
  4835 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  4836     0000                     
  4837 ;; Function _EUSART_Deinitialize is unused but had its address taken
  4838     0000                     
  4839 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  4840     0000                     
  4841 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  4842     0000                     
  4843 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  4844     0000                     
  4845 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  4846     0000                     
  4847 ;; Function _EUSART_IsTxDone is unused but had its address taken
  4848     0000                     
  4849 ;; Function _EUSART_ErrorGet is unused but had its address taken
  4850     0000                     
  4851                           	psect	idataBANK0
  4852     0D8F                     __pidataBANK0:
  4853                           
  4854                           ;initializer for _kaps
  4855     0D8F  3451               	retlw	81
  4856     0D90  3400               	retlw	0
  4857     0D91  3400               	retlw	0
  4858     0D92  3400               	retlw	0
  4859     0D93  3400               	retlw	0
  4860     0D94  3400               	retlw	0
  4861     0D95  3400               	retlw	0
  4862                           
  4863                           	psect	idataBANK1
  4864     0E81                     __pidataBANK1:
  4865                           
  4866                           ;initializer for _sspas
  4867     0E81  3401               	retlw	1
  4868     0E82  3400               	retlw	0
  4869     0E83  3400               	retlw	0
  4870     0E84  3400               	retlw	0
  4871     0E85  3400               	retlw	0
  4872     0E86  3400               	retlw	0
  4873     0E87  3400               	retlw	0
  4874     0E88  3400               	retlw	0
  4875     0E89  3401               	retlw	1
  4876     0E8A  3400               	retlw	0
  4877     0E8B  3400               	retlw	0
  4878     0E8C  3400               	retlw	0
  4879     0E8D  3400               	retlw	0
  4880     0E8E  3400               	retlw	0
  4881     0E8F  3400               	retlw	0
  4882     0E90  3400               	retlw	0
  4883     0E91  3401               	retlw	1
  4884     0E92  3400               	retlw	0
  4885     0E93  3400               	retlw	0
  4886     0E94  3400               	retlw	0
  4887     0E95  3400               	retlw	0
  4888     0E96  3400               	retlw	0
  4889     0E97  3400               	retlw	0
  4890     0E98  3400               	retlw	0
  4891                           
  4892                           	psect	stringtext1
  4893     0743                     __pstringtext1:
  4894     0743                     _UART:
  4895     0743  3499               	retlw	low _EUSART_Initialize
  4896     0744  340E               	retlw	high _EUSART_Initialize
  4897     0745  3400               	retlw	0
  4898     0746  3400               	retlw	0
  4899     0747  34AC               	retlw	low _EUSART_Read
  4900     0748  340F               	retlw	high _EUSART_Read
  4901     0749  342C               	retlw	low _EUSART_Write
  4902     074A  340D               	retlw	high _EUSART_Write
  4903     074B  343E               	retlw	low _EUSART_IsRxReady
  4904     074C  340D               	retlw	high _EUSART_IsRxReady
  4905     074D  3401               	retlw	low _EUSART_IsTxReady
  4906     074E  340E               	retlw	high _EUSART_IsTxReady
  4907     074F  3400               	retlw	0
  4908     0750  3400               	retlw	0
  4909     0751  3400               	retlw	0
  4910     0752  3400               	retlw	0
  4911     0753  3400               	retlw	0
  4912     0754  3400               	retlw	0
  4913     0755  3400               	retlw	0
  4914     0756  3400               	retlw	0
  4915     0757  3400               	retlw	0
  4916     0758  3400               	retlw	0
  4917     0759  3400               	retlw	0
  4918     075A  3400               	retlw	0
  4919     075B  3400               	retlw	0
  4920     075C  3400               	retlw	0
  4921     075D  3400               	retlw	0
  4922     075E  3400               	retlw	0
  4923     075F  3400               	retlw	0
  4924     0760  3400               	retlw	0
  4925     0761  3400               	retlw	0
  4926     0762  3400               	retlw	0
  4927     0763  3400               	retlw	0
  4928     0764  3400               	retlw	0
  4929     0765  3400               	retlw	0
  4930     0766  3400               	retlw	0
  4931     0767  3400               	retlw	0
  4932     0768  3400               	retlw	0
  4933     0769  3400               	retlw	0
  4934     076A  3400               	retlw	0
  4935     076B  34B9               	retlw	low _EUSART_FramingErrorCallbackRegister
  4936     076C  340D               	retlw	high _EUSART_FramingErrorCallbackRegister
  4937     076D  34DB               	retlw	low _EUSART_OverrunErrorCallbackRegister
  4938     076E  340D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  4939     076F  3400               	retlw	0
  4940     0770  3400               	retlw	0
  4941     0771  3400               	retlw	0
  4942     0772  3400               	retlw	0
  4943     0773                     __end_of_UART:
  4944                           
  4945                           	psect	stringtext2
  4946     07FB                     __pstringtext2:
  4947     07FB                     _I2C_Host:
  4948     07FB  346B               	retlw	low _I2C1_Initialize
  4949     07FC  340E               	retlw	high _I2C1_Initialize
  4950     07FD  3400               	retlw	0
  4951     07FE  3400               	retlw	0
  4952     07FF  34B6               	retlw	low _I2C1_Write
  4953     0800  340E               	retlw	high _I2C1_Write
  4954     0801  3414               	retlw	low _I2C1_Read
  4955     0802  340F               	retlw	high _I2C1_Read
  4956     0803  3400               	retlw	0
  4957     0804  3400               	retlw	0
  4958     0805  3400               	retlw	0
  4959     0806  3400               	retlw	0
  4960     0807  3400               	retlw	0
  4961     0808  3400               	retlw	0
  4962     0809  3410               	retlw	low _I2C1_IsBusy
  4963     080A  340E               	retlw	high _I2C1_IsBusy
  4964     080B  34E7               	retlw	low _I2C1_CallbackRegister
  4965     080C  340D               	retlw	high _I2C1_CallbackRegister
  4966     080D  3400               	retlw	0
  4967     080E  3400               	retlw	0
  4968     080F                     __end_of_I2C_Host:
  4969                           
  4970                           	psect	stringtext3
  4971     080F                     __pstringtext3:
  4972     080F                     _i2c1_eventTable:
  4973     080F  341C               	retlw	low _I2C1_EVENT_IDLE
  4974     0810  340D               	retlw	high _I2C1_EVENT_IDLE
  4975     0811  3496               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  4976     0812  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  4977     0813  346C               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  4978     0814  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  4979     0815  34CF               	retlw	low _I2C1_EVENT_TX
  4980     0816  3407               	retlw	high _I2C1_EVENT_TX
  4981     0817  34A3               	retlw	low _I2C1_EVENT_RX
  4982     0818  3406               	retlw	high _I2C1_EVENT_RX
  4983     0819  3448               	retlw	low _I2C1_EVENT_NACK
  4984     081A  340D               	retlw	high _I2C1_EVENT_NACK
  4985     081B  344E               	retlw	low _I2C1_EVENT_ERROR
  4986     081C  340D               	retlw	high _I2C1_EVENT_ERROR
  4987     081D  349E               	retlw	low _I2C1_EVENT_STOP
  4988     081E  340D               	retlw	high _I2C1_EVENT_STOP
  4989     081F  3473               	retlw	low _I2C1_EVENT_RESET
  4990     0820  340D               	retlw	high _I2C1_EVENT_RESET
  4991     0821                     __end_of_i2c1_eventTable:
  4992                           
  4993                           	psect	nvBANK0
  4994     006B                     __pnvBANK0:
  4995     006B                     _ADC_InterruptHandler:
  4996     006B                     	ds	2
  4997     000B                     _INTCONbits	set	11
  4998     0011                     _PIR2bits	set	17
  4999     0010                     _PIR1bits	set	16
  5000     0095                     _OPTION_REGbits	set	149
  5001     008E                     _TRISC	set	142
  5002     008D                     _TRISB	set	141
  5003     008C                     _TRISA	set	140
  5004     0098                     _OSCTUNE	set	152
  5005     0099                     _OSCCON	set	153
  5006     0091                     _PIE2bits	set	145
  5007     009D                     _ADCON0bits	set	157
  5008     0090                     _PIE1bits	set	144
  5009     009D                     _ADCON0	set	157
  5010     009F                     _ADCON2	set	159
  5011     009C                     _ADRESH	set	156
  5012     009B                     _ADRESL	set	155
  5013     009E                     _ADCON1	set	158
  5014     010E                     _LATCbits	set	270
  5015     010E                     _LATC	set	270
  5016     010D                     _LATB	set	269
  5017     010C                     _LATA	set	268
  5018     0116                     _BORCON	set	278
  5019     019A                     _TX1REG	set	410
  5020     0199                     _RC1REG	set	409
  5021     019F                     _BAUD1CONbits	set	415
  5022     019E                     _TX1STAbits	set	414
  5023     019D                     _RC1STAbits	set	413
  5024     019C                     _SPBRGH	set	412
  5025     019B                     _SPBRGL	set	411
  5026     019E                     _TX1STA	set	414
  5027     019D                     _RC1STA	set	413
  5028     019F                     _BAUD1CON	set	415
  5029     018E                     _ANSELC	set	398
  5030     018D                     _ANSELB	set	397
  5031     018C                     _ANSELA	set	396
  5032     020E                     _WPUC	set	526
  5033     020D                     _WPUB	set	525
  5034     020C                     _WPUA	set	524
  5035     0216                     _SSP1CON2bits	set	534
  5036     0211                     _SSP1BUF	set	529
  5037     0214                     _SSP1STATbits	set	532
  5038     0215                     _SSP1CON1bits	set	533
  5039     0212                     _SSP1ADD	set	530
  5040     0217                     _SSP1CON3	set	535
  5041     0216                     _SSP1CON2	set	534
  5042     0215                     _SSP1CON1	set	533
  5043     0214                     _SSP1STAT	set	532
  5044     028E                     _ODCONC	set	654
  5045     028D                     _ODCONB	set	653
  5046     028C                     _ODCONA	set	652
  5047     030E                     _SLRCONC	set	782
  5048     030D                     _SLRCONB	set	781
  5049     030C                     _SLRCONA	set	780
  5050     0399                     _IOCCF	set	921
  5051     0398                     _IOCCN	set	920
  5052     0397                     _IOCCP	set	919
  5053     0396                     _IOCBF	set	918
  5054     0395                     _IOCBN	set	917
  5055     0394                     _IOCBP	set	916
  5056     0393                     _IOCAF	set	915
  5057     0392                     _IOCAN	set	914
  5058     0391                     _IOCAP	set	913
  5059     038E                     _INLVLC	set	910
  5060     038D                     _INLVLB	set	909
  5061     038C                     _INLVLA	set	908
  5062     0E21                     _SSPDATPPS	set	3617
  5063     0E20                     _SSPCLKPPS	set	3616
  5064     0E24                     _RXPPS	set	3620
  5065     0E9D                     _RB5PPS	set	3741
  5066     0E9E                     _RB6PPS	set	3742
  5067     0EA2                     _RC2PPS	set	3746
  5068                           
  5069                           	psect	cinit
  5070     0038                     start_initialization:	
  5071                           ; #config settings
  5072                           
  5073     0038                     __initialization:
  5074                           
  5075                           ; Initialize objects allocated to BANK0
  5076     0038  308F               	movlw	low __pidataBANK0
  5077     0039  0084               	movwf	4
  5078     003A  308D               	movlw	(high __pidataBANK0)| (0+128)
  5079     003B  0085               	movwf	5
  5080     003C  3064               	movlw	low __pdataBANK0
  5081     003D  0086               	movwf	6
  5082     003E  3000               	movlw	high __pdataBANK0
  5083     003F  0087               	movwf	7
  5084     0040  3007               	movlw	7
  5085     0041  318D  2566  3180   	fcall	init_ram
  5086                           
  5087                           ; Initialize objects allocated to BANK1
  5088     0044  3081               	movlw	low __pidataBANK1
  5089     0045  0084               	movwf	4
  5090     0046  308E               	movlw	(high __pidataBANK1)| (0+128)
  5091     0047  0085               	movwf	5
  5092     0048  30A0               	movlw	low __pdataBANK1
  5093     0049  0086               	movwf	6
  5094     004A  3000               	movlw	high __pdataBANK1
  5095     004B  0087               	movwf	7
  5096     004C  3018               	movlw	24
  5097     004D  318D  2566  3180   	fcall	init_ram
  5098                           
  5099                           ; Clear objects allocated to COMMON
  5100     0050  01F6               	clrf	__pbssCOMMON& (0+127)
  5101     0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5102     0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5103     0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5104                           
  5105                           ; Clear objects allocated to BANK0
  5106     0054  3052               	movlw	low __pbssBANK0
  5107     0055  0084               	movwf	4
  5108     0056  3000               	movlw	high __pbssBANK0
  5109     0057  0085               	movwf	5
  5110     0058  3012               	movlw	18
  5111     0059  318D  2560  3180   	fcall	clear_ram0
  5112                           
  5113                           ; Clear objects allocated to BANK1
  5114     005C  30B8               	movlw	low __pbssBANK1
  5115     005D  0084               	movwf	4
  5116     005E  3000               	movlw	high __pbssBANK1
  5117     005F  0085               	movwf	5
  5118     0060  3017               	movlw	23
  5119     0061  318D  2560  3180   	fcall	clear_ram0
  5120     0064                     end_of_initialization:	
  5121                           ;End of C runtime variable initialization code
  5122                           
  5123     0064                     __end_of__initialization:
  5124     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5125     0065  0020               	movlb	0
  5126     0066  318F  2F84         	ljmp	_main	;jump to C main() function
  5127                           
  5128                           	psect	bssCOMMON
  5129     0076                     __pbssCOMMON:
  5130     0076                     _EUSART_FramingErrorHandler:
  5131     0076                     	ds	2
  5132     0078                     _INT_InterruptHandler:
  5133     0078                     	ds	2
  5134                           
  5135                           	psect	bssBANK0
  5136     0052                     __pbssBANK0:
  5137     0052                     _i2c1Status:
  5138     0052                     	ds	12
  5139     005E                     _EUSART_OverrunErrorHandler:
  5140     005E                     	ds	2
  5141     0060                     _eusartRxLastError:
  5142     0060                     	ds	2
  5143     0062                     _I2C1_Callback:
  5144     0062                     	ds	2
  5145                           
  5146                           	psect	dataBANK0
  5147     0064                     __pdataBANK0:
  5148     0064                     _kaps:
  5149     0064                     	ds	7
  5150                           
  5151                           	psect	bssBANK1
  5152     00B8                     __pbssBANK1:
  5153     00B8                     _parser:
  5154     00B8                     	ds	8
  5155     00C0                     KAPS_getPos@F9702:
  5156     00C0                     	ds	4
  5157     00C4                     ProcessMsg@payload:
  5158     00C4                     	ds	6
  5159     00CA                     _parserDataBuffer:
  5160     00CA                     	ds	5
  5161                           
  5162                           	psect	dataBANK1
  5163     00A0                     __pdataBANK1:
  5164     00A0                     _sspas:
  5165     00A0                     	ds	24
  5166                           
  5167                           	psect	inittext
  5168     0D66                     init_ram:
  5169     0D66  00FE               	movwf	btemp
  5170     0D67                     initloop:
  5171     0D67  0012               	moviw fsr0++
  5172     0D68  001E               	movwi fsr1++
  5173     0D69  0BFE               	decfsz	btemp,f
  5174     0D6A  2D67               	goto	initloop
  5175     0D6B  3400               	retlw	0
  5176                           
  5177                           	psect	clrtext
  5178     0D60                     clear_ram0:	
  5179                           ;	Called with FSR0 containing the base address, and
  5180                           ;	WREG with the size to clear
  5181                           
  5182     0D60  0064               	clrwdt	;clear the watchdog before getting into this loop
  5183     0D61                     clrloop0:
  5184     0D61  0180               	clrf	0	;clear RAM location pointed to by FSR
  5185     0D62  3101               	addfsr 0,1
  5186     0D63  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5187     0D64  2D61               	goto	clrloop0	;have we reached the end yet?
  5188     0D65  3400               	retlw	0	;all done for this memory range, return
  5189                           
  5190                           	psect	cstackCOMMON
  5191     0070                     __pcstackCOMMON:
  5192     0070                     ?_ADC_DefaultInterruptHandler:
  5193     0070                     ??_ADC_DefaultInterruptHandler:	
  5194                           ; 1 bytes @ 0x0
  5195                           
  5196     0070                     ?_I2C1_Initialize:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199     0070                     ?_I2C1_IsBusy:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202     0070                     ?_I2C1_EVENT_IDLE:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205     0070                     ??_I2C1_EVENT_IDLE:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217     0070                     ?_I2C1_EVENT_TX:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220     0070                     ?_I2C1_EVENT_RX:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223     0070                     ??_I2C1_EVENT_RX:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226     0070                     ?_I2C1_EVENT_NACK:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229     0070                     ??_I2C1_EVENT_NACK:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232     0070                     ?_I2C1_EVENT_ERROR:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235     0070                     ??_I2C1_EVENT_ERROR:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238     0070                     ?_I2C1_EVENT_STOP:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241     0070                     ??_I2C1_EVENT_STOP:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244     0070                     ?_I2C1_EVENT_RESET:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247     0070                     ??_I2C1_EVENT_RESET:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250     0070                     ?_I2C1_InterruptsEnable:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253     0070                     ?_I2C1_DefaultCallback:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256     0070                     ??_I2C1_DefaultCallback:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259     0070                     ?_I2C1_WriteStart:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262     0070                     ?_I2C1_ReadStart:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265     0070                     ?_I2C1_EventHandler:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268     0070                     ?_I2C1_ErrorEventHandler:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271     0070                     ?_I2C1_StartSend:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274     0070                     ?_I2C1_InterruptClear:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277     0070                     ??_I2C1_InterruptClear:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280     0070                     ?_I2C1_ErrorInterruptClear:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283     0070                     ??_I2C1_ErrorInterruptClear:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286     0070                     ?_I2C1_StatusFlagsClear:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289     0070                     ??_I2C1_StatusFlagsClear:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292     0070                     ?_I2C1_IsAddr:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295     0070                     ??_I2C1_IsAddr:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298     0070                     ?_I2C1_IsNack:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301     0070                     ??_I2C1_IsNack:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304     0070                     ?_I2C1_IsData:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307     0070                     ??_I2C1_IsData:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310     0070                     ?_I2C1_DataTransmit:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313     0070                     ??_I2C1_DataTransmit:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316     0070                     ?_I2C1_RestartEnable:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319     0070                     ??_I2C1_RestartEnable:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322     0070                     ?_I2C1_IsRxBufFull:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325     0070                     ??_I2C1_IsRxBufFull:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328     0070                     ?_I2C1_DataReceive:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331     0070                     ??_I2C1_DataReceive:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334     0070                     ?_I2C1_AckSend:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337     0070                     ??_I2C1_AckSend:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340     0070                     ?_I2C1_RestartDisable:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343     0070                     ??_I2C1_RestartDisable:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346     0070                     ?_I2C1_NackSend:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349     0070                     ??_I2C1_NackSend:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352     0070                     ?_I2C1_ReceiveEnable:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355     0070                     ??_I2C1_ReceiveEnable:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358     0070                     ?_I2C1_StopSend:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361     0070                     ??_I2C1_StopSend:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364     0070                     ?_I2C1_BusReset:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367     0070                     ??_I2C1_BusReset:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370     0070                     ?_EUSART_Initialize:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373     0070                     ?_EUSART_Read:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376     0070                     ?_EUSART_IsRxReady:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379     0070                     ?_EUSART_IsTxReady:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388     0070                     ?_SSPA_getTemp:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391     0070                     ?_SSPA_getPOut:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394     0070                     ?_KAPS_getStatus:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397     0070                     ?_KAPS_getPos:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400     0070                     ?_KAPS_getIndex:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403     0070                     ?_KAPS_GoToIdx:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406     0070                     ?_KAPS_setRelPos:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409     0070                     ?_Parse:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412     0070                     ?_ADC_Initialize:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415     0070                     ?_ADC_ISR:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418     0070                     ??_ADC_ISR:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421     0070                     ?_I2C1_ISR:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424     0070                     ?_I2C1_ERROR_ISR:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427     0070                     ?_I2C1_Close:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430     0070                     ??_I2C1_Close:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433     0070                     ?_CLOCK_Initialize:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436     0070                     ?_PIN_MANAGER_Initialize:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439     0070                     ?_INTERRUPT_Initialize:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442     0070                     ?_INTERRUPT_InterruptManager:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445     0070                     ?_SYSTEM_Initialize:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448     0070                     ?_SendSync:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451     0070                     ?_SendNack:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454     0070                     ?_main:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457     0070                     I2C1_EVENT_NACK@retEventState:	
  5458                           ; 2 bytes @ 0x0
  5459                           
  5460     0070                     I2C1_EVENT_ERROR@retEventState:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463     0070                     I2C1_DataTransmit@data:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466                           
  5467                           ; 1 bytes @ 0x0
  5468     0070                     	ds	1
  5469     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  5470     0071                     ??_I2C1_EVENT_TX:	
  5471                           ; 1 bytes @ 0x1
  5472                           
  5473     0071                     I2C1_EVENT_TX@retEventState:	
  5474                           ; 1 bytes @ 0x1
  5475                           
  5476     0071                     I2C1_EVENT_RX@retEventState:	
  5477                           ; 1 bytes @ 0x1
  5478                           
  5479                           
  5480                           ; 1 bytes @ 0x1
  5481     0071                     	ds	1
  5482     0072                     ??_I2C1_EventHandler:
  5483     0072                     ??_I2C1_ErrorEventHandler:	
  5484                           ; 1 bytes @ 0x2
  5485                           
  5486                           
  5487                           ; 1 bytes @ 0x2
  5488     0072                     	ds	2
  5489     0074                     ?_ADC_SetInterruptHandler:
  5490     0074                     ??_I2C1_IsBusy:	
  5491                           ; 1 bytes @ 0x4
  5492                           
  5493     0074                     ?_I2C1_CallbackRegister:	
  5494                           ; 1 bytes @ 0x4
  5495                           
  5496     0074                     ??_I2C1_InterruptsEnable:	
  5497                           ; 1 bytes @ 0x4
  5498                           
  5499     0074                     ??_I2C1_WriteStart:	
  5500                           ; 1 bytes @ 0x4
  5501                           
  5502     0074                     ??_I2C1_ReadStart:	
  5503                           ; 1 bytes @ 0x4
  5504                           
  5505     0074                     ??_I2C1_StartSend:	
  5506                           ; 1 bytes @ 0x4
  5507                           
  5508     0074                     ?_INT_SetInterruptHandler:	
  5509                           ; 1 bytes @ 0x4
  5510                           
  5511     0074                     ??_EUSART_Read:	
  5512                           ; 1 bytes @ 0x4
  5513                           
  5514     0074                     ?_EUSART_Write:	
  5515                           ; 1 bytes @ 0x4
  5516                           
  5517     0074                     ??_EUSART_IsRxReady:	
  5518                           ; 1 bytes @ 0x4
  5519                           
  5520     0074                     ??_EUSART_IsTxReady:	
  5521                           ; 1 bytes @ 0x4
  5522                           
  5523     0074                     ?_EUSART_FramingErrorCallbackRegister:	
  5524                           ; 1 bytes @ 0x4
  5525                           
  5526     0074                     ?_EUSART_OverrunErrorCallbackRegister:	
  5527                           ; 1 bytes @ 0x4
  5528                           
  5529     0074                     ??_EUSART_DefaultFramingErrorCallback:	
  5530                           ; 1 bytes @ 0x4
  5531                           
  5532     0074                     ??_EUSART_DefaultOverrunErrorCallback:	
  5533                           ; 1 bytes @ 0x4
  5534                           
  5535     0074                     ??_unpackWord:	
  5536                           ; 1 bytes @ 0x4
  5537                           
  5538     0074                     ?_SSPA_setMute:	
  5539                           ; 1 bytes @ 0x4
  5540                           
  5541     0074                     ??_I2C1_ISR:	
  5542                           ; 1 bytes @ 0x4
  5543                           
  5544     0074                     ??_I2C1_ERROR_ISR:	
  5545                           ; 1 bytes @ 0x4
  5546                           
  5547     0074                     ??_CLOCK_Initialize:	
  5548                           ; 1 bytes @ 0x4
  5549                           
  5550     0074                     ??_PIN_MANAGER_Initialize:	
  5551                           ; 1 bytes @ 0x4
  5552                           
  5553     0074                     ??_INTERRUPT_InterruptManager:	
  5554                           ; 1 bytes @ 0x4
  5555                           
  5556     0074                     ??___lmul:	
  5557                           ; 1 bytes @ 0x4
  5558                           
  5559     0074                     ??___aldiv:	
  5560                           ; 1 bytes @ 0x4
  5561                           
  5562     0074                     ?_ADC_GetConversion:	
  5563                           ; 1 bytes @ 0x4
  5564                           
  5565     0074                     _I2C1_IsBusy$646:	
  5566                           ; 2 bytes @ 0x4
  5567                           
  5568     0074                     _EUSART_IsTxReady$1324:	
  5569                           ; 1 bytes @ 0x4
  5570                           
  5571     0074                     EUSART_Write@txData:	
  5572                           ; 1 bytes @ 0x4
  5573                           
  5574     0074                     SSPA_setMute@mute:	
  5575                           ; 1 bytes @ 0x4
  5576                           
  5577     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  5578                           ; 1 bytes @ 0x4
  5579                           
  5580     0074                     I2C1_CallbackRegister@callbackHandler:	
  5581                           ; 2 bytes @ 0x4
  5582                           
  5583     0074                     INT_SetInterruptHandler@InterruptHandler:	
  5584                           ; 2 bytes @ 0x4
  5585                           
  5586     0074                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  5587                           ; 2 bytes @ 0x4
  5588                           
  5589     0074                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  5590                           ; 2 bytes @ 0x4
  5591                           
  5592                           
  5593                           ; 2 bytes @ 0x4
  5594     0074                     	ds	1
  5595     0075                     ??_I2C1_Write:
  5596     0075                     ??_I2C1_Read:	
  5597                           ; 1 bytes @ 0x5
  5598                           
  5599     0075                     ??_EUSART_Write:	
  5600                           ; 1 bytes @ 0x5
  5601                           
  5602     0075                     ??_SendSync:	
  5603                           ; 1 bytes @ 0x5
  5604                           
  5605     0075                     ??_ADC2Amp:	
  5606                           ; 1 bytes @ 0x5
  5607                           
  5608     0075                     ??_ADC2dBm:	
  5609                           ; 1 bytes @ 0x5
  5610                           
  5611     0075                     I2C1_Read@retStatus:	
  5612                           ; 1 bytes @ 0x5
  5613                           
  5614     0075                     SendSync@data:	
  5615                           ; 1 bytes @ 0x5
  5616                           
  5617     0075                     SSPA_setMute@band:	
  5618                           ; 1 bytes @ 0x5
  5619                           
  5620                           
  5621                           ; 1 bytes @ 0x5
  5622     0075                     	ds	1
  5623     0076                     ??_ADC_SetInterruptHandler:
  5624     0076                     ??_I2C1_Initialize:	
  5625                           ; 1 bytes @ 0x6
  5626                           
  5627     0076                     ??_I2C1_CallbackRegister:	
  5628                           ; 1 bytes @ 0x6
  5629                           
  5630     0076                     ??_INT_SetInterruptHandler:	
  5631                           ; 1 bytes @ 0x6
  5632                           
  5633     0076                     ??_EUSART_Initialize:	
  5634                           ; 1 bytes @ 0x6
  5635                           
  5636     0076                     ??_EUSART_FramingErrorCallbackRegister:	
  5637                           ; 1 bytes @ 0x6
  5638                           
  5639     0076                     ??_EUSART_OverrunErrorCallbackRegister:	
  5640                           ; 1 bytes @ 0x6
  5641                           
  5642     0076                     ??_ADC_Initialize:	
  5643                           ; 1 bytes @ 0x6
  5644                           
  5645     0076                     ??_INTERRUPT_Initialize:	
  5646                           ; 1 bytes @ 0x6
  5647                           
  5648     0076                     ??_SYSTEM_Initialize:	
  5649                           ; 1 bytes @ 0x6
  5650                           
  5651     0076                     ??_main:	
  5652                           ; 1 bytes @ 0x6
  5653                           
  5654     0076                     ??_SendNack:	
  5655                           ; 1 bytes @ 0x6
  5656                           
  5657                           
  5658                           	psect	cstackBANK0
  5659     0020                     __pcstackBANK0:	
  5660                           ; 1 bytes @ 0x6
  5661                           
  5662     0020                     ?_I2C1_Write:
  5663     0020                     ?_I2C1_Read:	
  5664                           ; 1 bytes @ 0x0
  5665                           
  5666     0020                     ?_SendMsg:	
  5667                           ; 1 bytes @ 0x0
  5668                           
  5669     0020                     ?_unpackWord:	
  5670                           ; 1 bytes @ 0x0
  5671                           
  5672     0020                     ?_unpackLong:	
  5673                           ; 1 bytes @ 0x0
  5674                           
  5675     0020                     ??_SSPA_setMute:	
  5676                           ; 1 bytes @ 0x0
  5677                           
  5678     0020                     ??_ADC_GetConversion:	
  5679                           ; 1 bytes @ 0x0
  5680                           
  5681     0020                     ?_packLong:	
  5682                           ; 1 bytes @ 0x0
  5683                           
  5684     0020                     ?___lmul:	
  5685                           ; 4 bytes @ 0x0
  5686                           
  5687     0020                     SendMsg@data:	
  5688                           ; 4 bytes @ 0x0
  5689                           
  5690     0020                     I2C1_Write@address:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693     0020                     I2C1_Read@address:	
  5694                           ; 2 bytes @ 0x0
  5695                           
  5696     0020                     unpackWord@value:	
  5697                           ; 2 bytes @ 0x0
  5698                           
  5699     0020                     unpackLong@value:	
  5700                           ; 2 bytes @ 0x0
  5701                           
  5702     0020                     ___lmul@multiplier:	
  5703                           ; 4 bytes @ 0x0
  5704                           
  5705                           
  5706                           ; 4 bytes @ 0x0
  5707     0020                     	ds	1
  5708     0021                     ADC_GetConversion@channel:
  5709     0021                     SendMsg@data_len:	
  5710                           ; 1 bytes @ 0x1
  5711                           
  5712                           
  5713                           ; 1 bytes @ 0x1
  5714     0021                     	ds	1
  5715     0022                     ??_SendMsg:
  5716     0022                     ?_getADCValue:	
  5717                           ; 1 bytes @ 0x2
  5718                           
  5719     0022                     I2C1_Write@data:	
  5720                           ; 2 bytes @ 0x2
  5721                           
  5722     0022                     I2C1_Read@data:	
  5723                           ; 1 bytes @ 0x2
  5724                           
  5725     0022                     unpackWord@data:	
  5726                           ; 1 bytes @ 0x2
  5727                           
  5728                           
  5729                           ; 1 bytes @ 0x2
  5730     0022                     	ds	1
  5731     0023                     SendMsg@sum:
  5732     0023                     I2C1_Write@dataLength:	
  5733                           ; 1 bytes @ 0x3
  5734                           
  5735     0023                     I2C1_Read@dataLength:	
  5736                           ; 2 bytes @ 0x3
  5737                           
  5738                           
  5739                           ; 2 bytes @ 0x3
  5740     0023                     	ds	1
  5741     0024                     ??_packLong:
  5742     0024                     ??_getADCValue:	
  5743                           ; 1 bytes @ 0x4
  5744                           
  5745     0024                     unpackLong@data:	
  5746                           ; 1 bytes @ 0x4
  5747                           
  5748     0024                     SendMsg@msg_id:	
  5749                           ; 1 bytes @ 0x4
  5750                           
  5751     0024                     ___lmul@multiplicand:	
  5752                           ; 1 bytes @ 0x4
  5753                           
  5754                           
  5755                           ; 4 bytes @ 0x4
  5756     0024                     	ds	1
  5757     0025                     ??_unpackLong:
  5758     0025                     ??_KAPS_getStatus:	
  5759                           ; 1 bytes @ 0x5
  5760                           
  5761     0025                     ??_KAPS_getIndex:	
  5762                           ; 1 bytes @ 0x5
  5763                           
  5764     0025                     ??_KAPS_GoToIdx:	
  5765                           ; 1 bytes @ 0x5
  5766                           
  5767     0025                     ??_KAPS_setRelPos:	
  5768                           ; 1 bytes @ 0x5
  5769                           
  5770     0025                     SendNack@error:	
  5771                           ; 1 bytes @ 0x5
  5772                           
  5773                           
  5774                           ; 1 bytes @ 0x5
  5775     0025                     	ds	1
  5776     0026                     ??_Parse:
  5777     0026                     getADCValue@channel:	
  5778                           ; 1 bytes @ 0x6
  5779                           
  5780                           
  5781                           ; 1 bytes @ 0x6
  5782     0026                     	ds	1
  5783     0027                     KAPS_GoToIdx@idx:
  5784     0027                     KAPS_setRelPos@offset:	
  5785                           ; 1 bytes @ 0x7
  5786                           
  5787     0027                     KAPS_getStatus@reg:	
  5788                           ; 1 bytes @ 0x7
  5789                           
  5790     0027                     KAPS_getIndex@reg:	
  5791                           ; 1 bytes @ 0x7
  5792                           
  5793     0027                     getADCValue@sample:	
  5794                           ; 1 bytes @ 0x7
  5795                           
  5796                           
  5797                           ; 2 bytes @ 0x7
  5798     0027                     	ds	1
  5799     0028                     KAPS_GoToIdx@reg:
  5800     0028                     KAPS_setRelPos@reg:	
  5801                           ; 1 bytes @ 0x8
  5802                           
  5803     0028                     KAPS_getStatus@data:	
  5804                           ; 1 bytes @ 0x8
  5805                           
  5806     0028                     KAPS_getIndex@data:	
  5807                           ; 1 bytes @ 0x8
  5808                           
  5809     0028                     Parse@data:	
  5810                           ; 1 bytes @ 0x8
  5811                           
  5812     0028                     packLong@result:	
  5813                           ; 1 bytes @ 0x8
  5814                           
  5815     0028                     ___lmul@product:	
  5816                           ; 4 bytes @ 0x8
  5817                           
  5818                           
  5819                           ; 4 bytes @ 0x8
  5820     0028                     	ds	1
  5821     0029                     KAPS_setRelPos@value:
  5822     0029                     getADCValue@sum:	
  5823                           ; 1 bytes @ 0x9
  5824                           
  5825                           
  5826                           ; 2 bytes @ 0x9
  5827     0029                     	ds	2
  5828     002B                     getADCValue@i:
  5829                           
  5830                           ; 1 bytes @ 0xB
  5831     002B                     	ds	1
  5832     002C                     ?___aldiv:
  5833     002C                     packLong@data:	
  5834                           ; 4 bytes @ 0xC
  5835                           
  5836     002C                     ___aldiv@divisor:	
  5837                           ; 1 bytes @ 0xC
  5838                           
  5839                           
  5840                           ; 4 bytes @ 0xC
  5841     002C                     	ds	1
  5842     002D                     ??_KAPS_getPos:
  5843     002D                     ?_KAPS_setAbsPos:	
  5844                           ; 1 bytes @ 0xD
  5845                           
  5846     002D                     ?_KAPS_StorePos:	
  5847                           ; 1 bytes @ 0xD
  5848                           
  5849     002D                     KAPS_setAbsPos@pos:	
  5850                           ; 1 bytes @ 0xD
  5851                           
  5852     002D                     KAPS_StorePos@pos:	
  5853                           ; 4 bytes @ 0xD
  5854                           
  5855                           
  5856                           ; 4 bytes @ 0xD
  5857     002D                     	ds	2
  5858     002F                     KAPS_getPos@data:
  5859                           
  5860                           ; 4 bytes @ 0xF
  5861     002F                     	ds	1
  5862     0030                     ___aldiv@dividend:
  5863                           
  5864                           ; 4 bytes @ 0x10
  5865     0030                     	ds	1
  5866     0031                     ??_KAPS_setAbsPos:
  5867     0031                     ??_KAPS_StorePos:	
  5868                           ; 1 bytes @ 0x11
  5869                           
  5870                           
  5871                           ; 1 bytes @ 0x11
  5872     0031                     	ds	2
  5873     0033                     KAPS_getPos@reg:
  5874     0033                     KAPS_setAbsPos@data:	
  5875                           ; 1 bytes @ 0x13
  5876                           
  5877     0033                     KAPS_StorePos@data:	
  5878                           ; 4 bytes @ 0x13
  5879                           
  5880                           
  5881                           ; 4 bytes @ 0x13
  5882     0033                     	ds	1
  5883     0034                     ___aldiv@counter:
  5884                           
  5885                           ; 1 bytes @ 0x14
  5886     0034                     	ds	1
  5887     0035                     ___aldiv@sign:
  5888                           
  5889                           ; 1 bytes @ 0x15
  5890     0035                     	ds	1
  5891     0036                     ___aldiv@quotient:
  5892                           
  5893                           ; 4 bytes @ 0x16
  5894     0036                     	ds	1
  5895     0037                     KAPS_setAbsPos@reg:
  5896     0037                     KAPS_StorePos@reg:	
  5897                           ; 1 bytes @ 0x17
  5898                           
  5899                           
  5900                           ; 1 bytes @ 0x17
  5901     0037                     	ds	1
  5902     0038                     KAPS_StorePos@idx:
  5903                           
  5904                           ; 1 bytes @ 0x18
  5905     0038                     	ds	2
  5906     003A                     ?_ADC2dBm:
  5907     003A                     ?_ADC2Celsius:	
  5908                           ; 1 bytes @ 0x1A
  5909                           
  5910     003A                     ?_ADC2Amp:	
  5911                           ; 2 bytes @ 0x1A
  5912                           
  5913     003A                     ADC2Celsius@v:	
  5914                           ; 4 bytes @ 0x1A
  5915                           
  5916     003A                     ADC2Amp@v:	
  5917                           ; 2 bytes @ 0x1A
  5918                           
  5919     003A                     ADC2dBm@v:	
  5920                           ; 2 bytes @ 0x1A
  5921                           
  5922                           
  5923                           ; 2 bytes @ 0x1A
  5924     003A                     	ds	2
  5925     003C                     ??_ADC2Celsius:
  5926     003C                     ADC2dBm@value:	
  5927                           ; 1 bytes @ 0x1C
  5928                           
  5929                           
  5930                           ; 4 bytes @ 0x1C
  5931     003C                     	ds	2
  5932     003E                     ADC2Amp@value:
  5933                           
  5934                           ; 4 bytes @ 0x1E
  5935     003E                     	ds	2
  5936     0040                     ADC2Celsius@value:
  5937     0040                     ADC2dBm@result:	
  5938                           ; 4 bytes @ 0x20
  5939                           
  5940                           
  5941                           ; 4 bytes @ 0x20
  5942     0040                     	ds	2
  5943     0042                     ADC2Amp@result:
  5944                           
  5945                           ; 4 bytes @ 0x22
  5946     0042                     	ds	2
  5947     0044                     ADC2Celsius@result:
  5948                           
  5949                           ; 4 bytes @ 0x24
  5950     0044                     	ds	2
  5951     0046                     ??_SSPA_getPOut:
  5952                           
  5953                           ; 1 bytes @ 0x26
  5954     0046                     	ds	2
  5955     0048                     ??_SSPA_getTemp:
  5956     0048                     SSPA_getPOut@adc_value:	
  5957                           ; 1 bytes @ 0x28
  5958                           
  5959                           
  5960                           ; 2 bytes @ 0x28
  5961     0048                     	ds	2
  5962     004A                     SSPA_getPOut@band:
  5963     004A                     SSPA_getTemp@adc_value:	
  5964                           ; 1 bytes @ 0x2A
  5965                           
  5966                           
  5967                           ; 2 bytes @ 0x2A
  5968     004A                     	ds	2
  5969     004C                     SSPA_getTemp@channel:
  5970                           
  5971                           ; 1 bytes @ 0x2C
  5972     004C                     	ds	1
  5973     004D                     SSPA_getTemp@band:
  5974                           
  5975                           ; 1 bytes @ 0x2D
  5976     004D                     	ds	1
  5977     004E                     ?_ProcessMsg:
  5978     004E                     ProcessMsg@data:	
  5979                           ; 1 bytes @ 0x2E
  5980                           
  5981                           
  5982                           ; 1 bytes @ 0x2E
  5983     004E                     	ds	1
  5984     004F                     ??_ProcessMsg:
  5985                           
  5986                           ; 1 bytes @ 0x2F
  5987     004F                     	ds	1
  5988     0050                     ProcessMsg@msg_id:
  5989                           
  5990                           ; 1 bytes @ 0x30
  5991     0050                     	ds	1
  5992     0051                     main@data:
  5993                           
  5994                           ; 1 bytes @ 0x31
  5995     0051                     	ds	1
  5996                           
  5997                           	psect	maintext
  5998     0F84                     __pmaintext:	
  5999 ;;
  6000 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6001 ;;
  6002 ;; *************** function _main *****************
  6003 ;; Defined at:
  6004 ;;		line 115 in file "main.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  data            1   49[BANK0 ] unsigned char 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  2  697[None  ] int 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : B1F/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6018 ;;      Params:         0       0       0       0       0       0       0       0
  6019 ;;      Locals:         0       1       0       0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0
  6021 ;;      Totals:         0       1       0       0       0       0       0       0
  6022 ;;Total ram usage:        1 bytes
  6023 ;; Hardware stack levels required when called: 12
  6024 ;; This function calls:
  6025 ;;		_EUSART_IsRxReady
  6026 ;;		_EUSART_Read
  6027 ;;		_Parse
  6028 ;;		_ProcessMsg
  6029 ;;		_SYSTEM_Initialize
  6030 ;; This function is called by:
  6031 ;;		Startup code after reset
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035     0F84                     _main:	
  6036                           ;psect for function _main
  6037                           
  6038     0F84                     l4039:	
  6039                           ;incstack = 0
  6040                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6041                           
  6042                           
  6043                           ;main.c: 116:     SYSTEM_Initialize();
  6044     0F84  318E  2644  318F   	fcall	_SYSTEM_Initialize
  6045     0F87                     l4041:
  6046                           
  6047                           ;main.c: 118:     (INTCONbits.GIE = 1);
  6048     0F87  178B               	bsf	11,7	;volatile
  6049     0F88                     l4043:
  6050                           
  6051                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6052     0F88  170B               	bsf	11,6	;volatile
  6053     0F89                     l4045:
  6054     0F89                     l4047:
  6055                           
  6056                           ;main.c: 132:         if (EUSART_IsRxReady()) {
  6057     0F89  318D  253E  318F   	fcall	_EUSART_IsRxReady
  6058     0F8C  3A00               	xorlw	0
  6059     0F8D  1903               	skipnz
  6060     0F8E  2F90               	goto	u2051
  6061     0F8F  2F91               	goto	u2050
  6062     0F90                     u2051:
  6063     0F90  2FA8               	goto	l699
  6064     0F91                     u2050:
  6065     0F91                     l4049:
  6066                           
  6067                           ;main.c: 133:             data = EUSART_Read();
  6068     0F91  318F  27AC  318F   	fcall	_EUSART_Read
  6069     0F94  0020               	movlb	0	; select bank0
  6070     0F95  00D1               	movwf	main@data
  6071     0F96                     l4051:
  6072                           
  6073                           ;main.c: 135:             if (Parse(data))
  6074     0F96  0851               	movf	main@data,w
  6075     0F97  3181  21AC  318F   	fcall	_Parse
  6076     0F9A  3A00               	xorlw	0
  6077     0F9B  1903               	skipnz
  6078     0F9C  2F9E               	goto	u2061
  6079     0F9D  2F9F               	goto	u2060
  6080     0F9E                     u2061:
  6081     0F9E  2F89               	goto	l4047
  6082     0F9F                     u2060:
  6083     0F9F                     l4053:
  6084                           
  6085                           ;main.c: 136:                 ProcessMsg(parser.m_MsgID, parserDataBuffer);
  6086     0F9F  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
  6087     0FA0  0020               	movlb	0	; select bank0
  6088     0FA1  00CE               	movwf	ProcessMsg@data
  6089     0FA2  0021               	movlb	1	; select bank1
  6090     0FA3  0839               	movf	(_parser^(0+128)+1),w
  6091     0FA4  3180  2068  318F   	fcall	_ProcessMsg
  6092     0FA7  2F89               	goto	l4047
  6093     0FA8                     l699:	
  6094                           ;main.c: 138:         else
  6095                           
  6096                           
  6097                           ;main.c: 139:             __nop();
  6098     0FA8  0000               	nop
  6099     0FA9  2F89               	goto	l4047
  6100     0FAA  3180  2836         	ljmp	start
  6101     0FAC                     __end_of_main:
  6102                           
  6103                           	psect	text1
  6104     0E44                     __ptext1:	
  6105 ;; *************** function _SYSTEM_Initialize *****************
  6106 ;; Defined at:
  6107 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2, status,0, pclath, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6121 ;;      Params:         0       0       0       0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0
  6124 ;;      Totals:         0       0       0       0       0       0       0       0
  6125 ;;Total ram usage:        0 bytes
  6126 ;; Hardware stack levels used: 1
  6127 ;; Hardware stack levels required when called: 9
  6128 ;; This function calls:
  6129 ;;		_ADC_Initialize
  6130 ;;		_CLOCK_Initialize
  6131 ;;		_EUSART_Initialize
  6132 ;;		_I2C1_Initialize
  6133 ;;		_INTERRUPT_Initialize
  6134 ;;		_PIN_MANAGER_Initialize
  6135 ;; This function is called by:
  6136 ;;		_main
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140     0E44                     _SYSTEM_Initialize:	
  6141                           ;psect for function _SYSTEM_Initialize
  6142                           
  6143     0E44                     l3145:	
  6144                           ;incstack = 0
  6145                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6146                           
  6147                           
  6148                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  6149     0E44  318D  25A6  318E   	fcall	_CLOCK_Initialize
  6150                           
  6151                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  6152     0E47  3184  2421  318E   	fcall	_PIN_MANAGER_Initialize
  6153                           
  6154                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  6155     0E4A  318E  2657  318E   	fcall	_ADC_Initialize
  6156                           
  6157                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  6158     0E4D  318E  2699  318E   	fcall	_EUSART_Initialize
  6159                           
  6160                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  6161     0E50  318E  266B  318E   	fcall	_I2C1_Initialize
  6162                           
  6163                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  6164     0E53  318D  25C4  318E   	fcall	_INTERRUPT_Initialize
  6165     0E56                     l483:
  6166     0E56  0008               	return
  6167     0E57                     __end_of_SYSTEM_Initialize:
  6168                           
  6169                           	psect	text2
  6170     0421                     __ptext2:	
  6171 ;; *************** function _PIN_MANAGER_Initialize *****************
  6172 ;; Defined at:
  6173 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6187 ;;      Params:         0       0       0       0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; Hardware stack levels required when called: 7
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_SYSTEM_Initialize
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201     0421                     _PIN_MANAGER_Initialize:	
  6202                           ;psect for function _PIN_MANAGER_Initialize
  6203                           
  6204     0421                     l2929:	
  6205                           ;incstack = 0
  6206                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6207                           
  6208                           
  6209                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  6210     0421  0022               	movlb	2	; select bank2
  6211     0422  018C               	clrf	12	;volatile
  6212     0423                     l2931:
  6213                           
  6214                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  6215     0423  3060               	movlw	96
  6216     0424  008D               	movwf	13	;volatile
  6217     0425                     l2933:
  6218                           
  6219                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  6220     0425  018E               	clrf	14	;volatile
  6221                           
  6222                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  6223     0426  303F               	movlw	63
  6224     0427  0021               	movlb	1	; select bank1
  6225     0428  008C               	movwf	12	;volatile
  6226                           
  6227                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  6228     0429  30F0               	movlw	240
  6229     042A  008D               	movwf	13	;volatile
  6230                           
  6231                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  6232     042B  303B               	movlw	59
  6233     042C  008E               	movwf	14	;volatile
  6234                           
  6235                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  6236     042D  3017               	movlw	23
  6237     042E  0023               	movlb	3	; select bank3
  6238     042F  008C               	movwf	12	;volatile
  6239                           
  6240                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  6241     0430  3010               	movlw	16
  6242     0431  008D               	movwf	13	;volatile
  6243                           
  6244                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  6245     0432  300D               	movlw	13
  6246     0433  008E               	movwf	14	;volatile
  6247                           
  6248                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  6249     0434  302C               	movlw	44
  6250     0435  0024               	movlb	4	; select bank4
  6251     0436  008C               	movwf	12	;volatile
  6252                           
  6253                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  6254     0437  30E0               	movlw	224
  6255     0438  008D               	movwf	13	;volatile
  6256                           
  6257                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  6258     0439  30F7               	movlw	247
  6259     043A  008E               	movwf	14	;volatile
  6260     043B                     l2935:
  6261                           
  6262                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  6263     043B  0021               	movlb	1	; select bank1
  6264     043C  1395               	bcf	21,7	;volatile
  6265     043D                     l2937:
  6266                           
  6267                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  6268     043D  0025               	movlb	5	; select bank5
  6269     043E  018C               	clrf	12	;volatile
  6270     043F                     l2939:
  6271                           
  6272                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  6273     043F  018D               	clrf	13	;volatile
  6274     0440                     l2941:
  6275                           
  6276                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  6277     0440  018E               	clrf	14	;volatile
  6278     0441                     l2943:
  6279                           
  6280                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  6281     0441  3037               	movlw	55
  6282     0442  0026               	movlb	6	; select bank6
  6283     0443  008C               	movwf	12	;volatile
  6284     0444                     l2945:
  6285                           
  6286                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  6287     0444  30F0               	movlw	240
  6288     0445  008D               	movwf	13	;volatile
  6289     0446                     l2947:
  6290                           
  6291                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  6292     0446  30FF               	movlw	255
  6293     0447  008E               	movwf	14	;volatile
  6294     0448                     l2949:
  6295                           
  6296                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  6297     0448  303F               	movlw	63
  6298     0449  0027               	movlb	7	; select bank7
  6299     044A  008C               	movwf	12	;volatile
  6300     044B                     l2951:
  6301                           
  6302                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  6303     044B  30F0               	movlw	240
  6304     044C  008D               	movwf	13	;volatile
  6305     044D                     l2953:
  6306                           
  6307                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  6308     044D  30FF               	movlw	255
  6309     044E  008E               	movwf	14	;volatile
  6310     044F                     l2955:
  6311                           
  6312                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  6313     044F  3011               	movlw	17
  6314     0450  003C               	movlb	28	; select bank28
  6315     0451  00A4               	movwf	36	;volatile
  6316     0452                     l2957:
  6317                           
  6318                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  6319     0452  3006               	movlw	6
  6320     0453  003D               	movlb	29	; select bank29
  6321     0454  00A2               	movwf	34	;volatile
  6322     0455                     l2959:
  6323                           
  6324                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  6325     0455  300E               	movlw	14
  6326     0456  003C               	movlb	28	; select bank28
  6327     0457  00A0               	movwf	32	;volatile
  6328     0458                     l2961:
  6329                           
  6330                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  6331     0458  3010               	movlw	16
  6332     0459  003D               	movlb	29	; select bank29
  6333     045A  009E               	movwf	30	;volatile
  6334     045B                     l2963:
  6335                           
  6336                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  6337     045B  300D               	movlw	13
  6338     045C  003C               	movlb	28	; select bank28
  6339     045D  00A1               	movwf	33	;volatile
  6340     045E                     l2965:
  6341                           
  6342                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  6343     045E  3011               	movlw	17
  6344     045F  003D               	movlb	29	; select bank29
  6345     0460  009D               	movwf	29	;volatile
  6346     0461                     l2967:
  6347                           
  6348                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  6349     0461  0027               	movlb	7	; select bank7
  6350     0462  0191               	clrf	17	;volatile
  6351     0463                     l2969:
  6352                           
  6353                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  6354     0463  0192               	clrf	18	;volatile
  6355     0464                     l2971:
  6356                           
  6357                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  6358     0464  0193               	clrf	19	;volatile
  6359     0465                     l2973:
  6360                           
  6361                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  6362     0465  0194               	clrf	20	;volatile
  6363     0466                     l2975:
  6364                           
  6365                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  6366     0466  0195               	clrf	21	;volatile
  6367     0467                     l2977:
  6368                           
  6369                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  6370     0467  0196               	clrf	22	;volatile
  6371     0468                     l2979:
  6372                           
  6373                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  6374     0468  0197               	clrf	23	;volatile
  6375     0469                     l2981:
  6376                           
  6377                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  6378     0469  0198               	clrf	24	;volatile
  6379     046A                     l2983:
  6380                           
  6381                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  6382     046A  0199               	clrf	25	;volatile
  6383     046B                     l410:
  6384     046B  0008               	return
  6385     046C                     __end_of_PIN_MANAGER_Initialize:
  6386                           
  6387                           	psect	text3
  6388     0DC4                     __ptext3:	
  6389 ;; *************** function _INTERRUPT_Initialize *****************
  6390 ;; Defined at:
  6391 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0, pclath, cstack
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6405 ;;      Params:         0       0       0       0       0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0
  6407 ;;      Temps:          0       0       0       0       0       0       0       0
  6408 ;;      Totals:         0       0       0       0       0       0       0       0
  6409 ;;Total ram usage:        0 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; Hardware stack levels required when called: 8
  6412 ;; This function calls:
  6413 ;;		_INT_SetInterruptHandler
  6414 ;; This function is called by:
  6415 ;;		_SYSTEM_Initialize
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419     0DC4                     _INTERRUPT_Initialize:	
  6420                           ;psect for function _INTERRUPT_Initialize
  6421                           
  6422     0DC4                     l2985:	
  6423                           ;incstack = 0
  6424                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6425                           
  6426                           
  6427                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  6428     0DC4  108B               	bcf	11,1	;volatile
  6429                           
  6430                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  6431     0DC5  0021               	movlb	1	; select bank1
  6432     0DC6  1715               	bsf	21,6	;volatile
  6433     0DC7                     l2987:
  6434                           
  6435                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  6436     0DC7  3000               	movlw	0
  6437     0DC8  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  6438     0DC9  3000               	movlw	0
  6439     0DCA  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6440     0DCB  318D  2543  318D   	fcall	_INT_SetInterruptHandler
  6441     0DCE                     l442:
  6442     0DCE  0008               	return
  6443     0DCF                     __end_of_INTERRUPT_Initialize:
  6444                           
  6445                           	psect	text4
  6446     0D43                     __ptext4:	
  6447 ;; *************** function _INT_SetInterruptHandler *****************
  6448 ;; Defined at:
  6449 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6452 ;;		 -> INT_DefaultInterruptHandler(1), 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6464 ;;      Params:         2       0       0       0       0       0       0       0
  6465 ;;      Locals:         0       0       0       0       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0
  6467 ;;      Totals:         2       0       0       0       0       0       0       0
  6468 ;;Total ram usage:        2 bytes
  6469 ;; Hardware stack levels used: 1
  6470 ;; Hardware stack levels required when called: 7
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_INTERRUPT_Initialize
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478     0D43                     _INT_SetInterruptHandler:	
  6479                           ;psect for function _INT_SetInterruptHandler
  6480                           
  6481     0D43                     l2773:	
  6482                           ;incstack = 0
  6483                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6484                           
  6485                           
  6486                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  6487     0D43  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6488     0D44  00F9               	movwf	_INT_InterruptHandler+1
  6489     0D45  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6490     0D46  00F8               	movwf	_INT_InterruptHandler
  6491     0D47                     l465:
  6492     0D47  0008               	return
  6493     0D48                     __end_of_INT_SetInterruptHandler:
  6494                           
  6495                           	psect	text5
  6496     0E6B                     __ptext5:	
  6497 ;; *************** function _I2C1_Initialize *****************
  6498 ;; Defined at:
  6499 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg, status,2, status,0, pclath, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6513 ;;      Params:         0       0       0       0       0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0
  6516 ;;      Totals:         0       0       0       0       0       0       0       0
  6517 ;;Total ram usage:        0 bytes
  6518 ;; Hardware stack levels used: 1
  6519 ;; Hardware stack levels required when called: 8
  6520 ;; This function calls:
  6521 ;;		_I2C1_CallbackRegister
  6522 ;;		_I2C1_InterruptsEnable
  6523 ;; This function is called by:
  6524 ;;		_SYSTEM_Initialize
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528     0E6B                     _I2C1_Initialize:	
  6529                           ;psect for function _I2C1_Initialize
  6530                           
  6531     0E6B                     l2889:	
  6532                           ;incstack = 0
  6533                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6534                           
  6535                           
  6536                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  6537     0E6B  3080               	movlw	128
  6538     0E6C  0024               	movlb	4	; select bank4
  6539     0E6D  0094               	movwf	20	;volatile
  6540                           
  6541                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  6542     0E6E  3008               	movlw	8
  6543     0E6F  0095               	movwf	21	;volatile
  6544     0E70                     l2891:
  6545                           
  6546                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  6547     0E70  0196               	clrf	22	;volatile
  6548     0E71                     l2893:
  6549                           
  6550                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  6551     0E71  0197               	clrf	23	;volatile
  6552                           
  6553                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  6554     0E72  3027               	movlw	39
  6555     0E73  0092               	movwf	18	;volatile
  6556     0E74                     l2895:
  6557                           
  6558                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  6559     0E74  318D  2530  318E   	fcall	_I2C1_InterruptsEnable
  6560                           
  6561                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  6562     0E77  30EF               	movlw	low _I2C1_DefaultCallback
  6563     0E78  00F4               	movwf	I2C1_CallbackRegister@callbackHandler
  6564     0E79  300C               	movlw	high _I2C1_DefaultCallback
  6565     0E7A  00F5               	movwf	I2C1_CallbackRegister@callbackHandler+1
  6566     0E7B  318D  25E7  318E   	fcall	_I2C1_CallbackRegister
  6567     0E7E                     l2897:
  6568                           
  6569                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  6570     0E7E  0024               	movlb	4	; select bank4
  6571     0E7F  1695               	bsf	21,5	;volatile
  6572     0E80                     l177:
  6573     0E80  0008               	return
  6574     0E81                     __end_of_I2C1_Initialize:
  6575                           
  6576                           	psect	text6
  6577     0D30                     __ptext6:	
  6578 ;; *************** function _I2C1_InterruptsEnable *****************
  6579 ;; Defined at:
  6580 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		None
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6594 ;;      Params:         0       0       0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used: 1
  6600 ;; Hardware stack levels required when called: 7
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		_I2C1_Initialize
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608     0D30                     _I2C1_InterruptsEnable:	
  6609                           ;psect for function _I2C1_InterruptsEnable
  6610                           
  6611     0D30                     l2621:	
  6612                           ;incstack = 0
  6613                           ; Regs used in _I2C1_InterruptsEnable: []
  6614                           
  6615                           
  6616                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  6617     0D30  0021               	movlb	1	; select bank1
  6618     0D31  1590               	bsf	16,3	;volatile
  6619                           
  6620                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  6621     0D32  1591               	bsf	17,3	;volatile
  6622     0D33                     l312:
  6623     0D33  0008               	return
  6624     0D34                     __end_of_I2C1_InterruptsEnable:
  6625                           
  6626                           	psect	text7
  6627     0DE7                     __ptext7:	
  6628 ;; *************** function _I2C1_CallbackRegister *****************
  6629 ;; Defined at:
  6630 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6633 ;;		 -> I2C1_DefaultCallback(1), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6645 ;;      Params:         2       0       0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0
  6648 ;;      Totals:         2       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        2 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 7
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_I2C1_Initialize
  6656 ;;		_I2C1_Deinitialize
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660     0DE7                     _I2C1_CallbackRegister:	
  6661                           ;psect for function _I2C1_CallbackRegister
  6662                           
  6663     0DE7                     l2623:	
  6664                           ;incstack = 0
  6665                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  6666                           
  6667                           
  6668                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  6669     0DE7  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6670     0DE8  0475               	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  6671     0DE9  1903               	btfsc	3,2
  6672     0DEA  2DEC               	goto	u911
  6673     0DEB  2DED               	goto	u910
  6674     0DEC                     u911:
  6675     0DEC  2DF2               	goto	l204
  6676     0DED                     u910:
  6677     0DED                     l2625:
  6678                           
  6679                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  6680     0DED  0875               	movf	I2C1_CallbackRegister@callbackHandler+1,w
  6681     0DEE  0020               	movlb	0	; select bank0
  6682     0DEF  00E3               	movwf	_I2C1_Callback+1
  6683     0DF0  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6684     0DF1  00E2               	movwf	_I2C1_Callback
  6685     0DF2                     l204:
  6686     0DF2  0008               	return
  6687     0DF3                     __end_of_I2C1_CallbackRegister:
  6688                           
  6689                           	psect	text8
  6690     0E99                     __ptext8:	
  6691 ;; *************** function _EUSART_Initialize *****************
  6692 ;; Defined at:
  6693 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      void 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0, pclath, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6707 ;;      Params:         0       0       0       0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0
  6710 ;;      Totals:         0       0       0       0       0       0       0       0
  6711 ;;Total ram usage:        0 bytes
  6712 ;; Hardware stack levels used: 1
  6713 ;; Hardware stack levels required when called: 8
  6714 ;; This function calls:
  6715 ;;		_EUSART_FramingErrorCallbackRegister
  6716 ;;		_EUSART_OverrunErrorCallbackRegister
  6717 ;; This function is called by:
  6718 ;;		_SYSTEM_Initialize
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722     0E99                     _EUSART_Initialize:	
  6723                           ;psect for function _EUSART_Initialize
  6724                           
  6725     0E99                     l2989:	
  6726                           ;incstack = 0
  6727                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6728                           
  6729                           
  6730                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  6731     0E99  3048               	movlw	72
  6732     0E9A  0023               	movlb	3	; select bank3
  6733     0E9B  009F               	movwf	31	;volatile
  6734                           
  6735                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  6736     0E9C  3090               	movlw	144
  6737     0E9D  009D               	movwf	29	;volatile
  6738                           
  6739                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  6740     0E9E  3026               	movlw	38
  6741     0E9F  009E               	movwf	30	;volatile
  6742                           
  6743                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  6744     0EA0  30A0               	movlw	160
  6745     0EA1  009B               	movwf	27	;volatile
  6746                           
  6747                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  6748     0EA2  3001               	movlw	1
  6749     0EA3  009C               	movwf	28	;volatile
  6750     0EA4                     l2991:
  6751                           
  6752                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  6753     0EA4  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  6754     0EA5  00F4               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  6755     0EA6  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  6756     0EA7  00F5               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  6757     0EA8  318D  25B9  318E   	fcall	_EUSART_FramingErrorCallbackRegister
  6758     0EAB                     l2993:
  6759                           
  6760                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  6761     0EAB  3028               	movlw	low _EUSART_DefaultOverrunErrorCallback
  6762     0EAC  00F4               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  6763     0EAD  300D               	movlw	high _EUSART_DefaultOverrunErrorCallback
  6764     0EAE  00F5               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  6765     0EAF  318D  25DB  318E   	fcall	_EUSART_OverrunErrorCallbackRegister
  6766     0EB2                     l2995:
  6767                           
  6768                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  6769     0EB2  0020               	movlb	0	; select bank0
  6770     0EB3  01E0               	clrf	_eusartRxLastError	;volatile
  6771     0EB4  01E1               	clrf	_eusartRxLastError+1	;volatile
  6772     0EB5                     l548:
  6773     0EB5  0008               	return
  6774     0EB6                     __end_of_EUSART_Initialize:
  6775                           
  6776                           	psect	text9
  6777     0DDB                     __ptext9:	
  6778 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  6779 ;; Defined at:
  6780 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6783 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6795 ;;      Params:         2       0       0       0       0       0       0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0
  6798 ;;      Totals:         2       0       0       0       0       0       0       0
  6799 ;;Total ram usage:        2 bytes
  6800 ;; Hardware stack levels used: 1
  6801 ;; Hardware stack levels required when called: 7
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_EUSART_Initialize
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809     0DDB                     _EUSART_OverrunErrorCallbackRegister:	
  6810                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  6811                           
  6812     0DDB                     l2779:	
  6813                           ;incstack = 0
  6814                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  6815                           
  6816                           
  6817                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  6818     0DDB  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6819     0DDC  0475               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6820     0DDD  1903               	btfsc	3,2
  6821     0DDE  2DE0               	goto	u1001
  6822     0DDF  2DE1               	goto	u1000
  6823     0DE0                     u1001:
  6824     0DE0  2DE6               	goto	l627
  6825     0DE1                     u1000:
  6826     0DE1                     l2781:
  6827                           
  6828                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6829     0DE1  0875               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6830     0DE2  0020               	movlb	0	; select bank0
  6831     0DE3  00DF               	movwf	_EUSART_OverrunErrorHandler+1
  6832     0DE4  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6833     0DE5  00DE               	movwf	_EUSART_OverrunErrorHandler
  6834     0DE6                     l627:
  6835     0DE6  0008               	return
  6836     0DE7                     __end_of_EUSART_OverrunErrorCallbackRegister:
  6837                           
  6838                           	psect	text10
  6839     0DB9                     __ptext10:	
  6840 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6841 ;; Defined at:
  6842 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6845 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6857 ;;      Params:         2       0       0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0
  6860 ;;      Totals:         2       0       0       0       0       0       0       0
  6861 ;;Total ram usage:        2 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 7
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_EUSART_Initialize
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871     0DB9                     _EUSART_FramingErrorCallbackRegister:	
  6872                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6873                           
  6874     0DB9                     l2775:	
  6875                           ;incstack = 0
  6876                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6877                           
  6878                           
  6879                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6880     0DB9  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6881     0DBA  0475               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6882     0DBB  1903               	btfsc	3,2
  6883     0DBC  2DBE               	goto	u991
  6884     0DBD  2DBF               	goto	u990
  6885     0DBE                     u991:
  6886     0DBE  2DC3               	goto	l623
  6887     0DBF                     u990:
  6888     0DBF                     l2777:
  6889                           
  6890                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6891     0DBF  0875               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6892     0DC0  00F7               	movwf	_EUSART_FramingErrorHandler+1
  6893     0DC1  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6894     0DC2  00F6               	movwf	_EUSART_FramingErrorHandler
  6895     0DC3                     l623:
  6896     0DC3  0008               	return
  6897     0DC4                     __end_of_EUSART_FramingErrorCallbackRegister:
  6898                           
  6899                           	psect	text11
  6900     0DA6                     __ptext11:	
  6901 ;; *************** function _CLOCK_Initialize *****************
  6902 ;; Defined at:
  6903 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6917 ;;      Params:         0       0       0       0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0
  6920 ;;      Totals:         0       0       0       0       0       0       0       0
  6921 ;;Total ram usage:        0 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 7
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_SYSTEM_Initialize
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931     0DA6                     _CLOCK_Initialize:	
  6932                           ;psect for function _CLOCK_Initialize
  6933                           
  6934     0DA6                     l2923:	
  6935                           ;incstack = 0
  6936                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6937                           
  6938                           
  6939                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6940     0DA6  307A               	movlw	122
  6941     0DA7  0021               	movlb	1	; select bank1
  6942     0DA8  0099               	movwf	25	;volatile
  6943     0DA9                     l2925:
  6944                           
  6945                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6946     0DA9  0022               	movlb	2	; select bank2
  6947     0DAA  0196               	clrf	22	;volatile
  6948     0DAB                     l2927:
  6949                           
  6950                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6951     0DAB  0021               	movlb	1	; select bank1
  6952     0DAC  0198               	clrf	24	;volatile
  6953     0DAD                     l333:
  6954     0DAD  0008               	return
  6955     0DAE                     __end_of_CLOCK_Initialize:
  6956                           
  6957                           	psect	text12
  6958     0E57                     __ptext12:	
  6959 ;; *************** function _ADC_Initialize *****************
  6960 ;; Defined at:
  6961 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0, pclath, cstack
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6975 ;;      Params:         0       0       0       0       0       0       0       0
  6976 ;;      Locals:         0       0       0       0       0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0
  6978 ;;      Totals:         0       0       0       0       0       0       0       0
  6979 ;;Total ram usage:        0 bytes
  6980 ;; Hardware stack levels used: 1
  6981 ;; Hardware stack levels required when called: 8
  6982 ;; This function calls:
  6983 ;;		_ADC_SetInterruptHandler
  6984 ;; This function is called by:
  6985 ;;		_SYSTEM_Initialize
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989     0E57                     _ADC_Initialize:	
  6990                           ;psect for function _ADC_Initialize
  6991                           
  6992     0E57                     l2873:	
  6993                           ;incstack = 0
  6994                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6995                           
  6996                           
  6997                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  6998     0E57  3060               	movlw	96
  6999     0E58  0021               	movlb	1	; select bank1
  7000     0E59  009E               	movwf	30	;volatile
  7001     0E5A                     l2875:
  7002                           
  7003                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  7004     0E5A  019B               	clrf	27	;volatile
  7005     0E5B                     l2877:
  7006                           
  7007                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  7008     0E5B  019C               	clrf	28	;volatile
  7009     0E5C                     l2879:
  7010                           
  7011                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  7012     0E5C  019F               	clrf	31	;volatile
  7013     0E5D                     l2881:
  7014                           
  7015                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  7016     0E5D  3001               	movlw	1
  7017     0E5E  009D               	movwf	29	;volatile
  7018     0E5F                     l2883:
  7019                           
  7020                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  7021     0E5F  0020               	movlb	0	; select bank0
  7022     0E60  1310               	bcf	16,6	;volatile
  7023     0E61                     l2885:
  7024                           
  7025                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  7026     0E61  30EE               	movlw	low _ADC_DefaultInterruptHandler
  7027     0E62  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7028     0E63  300C               	movlw	high _ADC_DefaultInterruptHandler
  7029     0E64  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7030     0E65  318D  255A  318E   	fcall	_ADC_SetInterruptHandler
  7031     0E68                     l2887:
  7032                           
  7033                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  7034     0E68  0021               	movlb	1	; select bank1
  7035     0E69  1710               	bsf	16,6	;volatile
  7036     0E6A                     l27:
  7037     0E6A  0008               	return
  7038     0E6B                     __end_of_ADC_Initialize:
  7039                           
  7040                           	psect	text13
  7041     0D5A                     __ptext13:	
  7042 ;; *************** function _ADC_SetInterruptHandler *****************
  7043 ;; Defined at:
  7044 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7047 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7059 ;;      Params:         2       0       0       0       0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0
  7062 ;;      Totals:         2       0       0       0       0       0       0       0
  7063 ;;Total ram usage:        2 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 7
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_ADC_Initialize
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073     0D5A                     _ADC_SetInterruptHandler:	
  7074                           ;psect for function _ADC_SetInterruptHandler
  7075                           
  7076     0D5A                     l2619:	
  7077                           ;incstack = 0
  7078                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7079                           
  7080                           
  7081                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  7082     0D5A  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7083     0D5B  0020               	movlb	0	; select bank0
  7084     0D5C  00EC               	movwf	_ADC_InterruptHandler+1
  7085     0D5D  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7086     0D5E  00EB               	movwf	_ADC_InterruptHandler
  7087     0D5F                     l55:
  7088     0D5F  0008               	return
  7089     0D60                     __end_of_ADC_SetInterruptHandler:
  7090                           
  7091                           	psect	text14
  7092     0068                     __ptext14:	
  7093 ;; *************** function _ProcessMsg *****************
  7094 ;; Defined at:
  7095 ;;		line 47 in file "main.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  msg_id          1    wreg     unsigned char 
  7098 ;;  data            1   46[BANK0 ] PTR unsigned char 
  7099 ;;		 -> parserDataBuffer(5), 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  msg_id          1   48[BANK0 ] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7111 ;;      Params:         0       1       0       0       0       0       0       0
  7112 ;;      Locals:         0       1       0       0       0       0       0       0
  7113 ;;      Temps:          0       1       0       0       0       0       0       0
  7114 ;;      Totals:         0       3       0       0       0       0       0       0
  7115 ;;Total ram usage:        3 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; Hardware stack levels required when called: 11
  7118 ;; This function calls:
  7119 ;;		_KAPS_GoToIdx
  7120 ;;		_KAPS_StorePos
  7121 ;;		_KAPS_getIndex
  7122 ;;		_KAPS_getPos
  7123 ;;		_KAPS_getStatus
  7124 ;;		_KAPS_setAbsPos
  7125 ;;		_KAPS_setRelPos
  7126 ;;		_SSPA_getPOut
  7127 ;;		_SSPA_getTemp
  7128 ;;		_SSPA_setMute
  7129 ;;		_SendMsg
  7130 ;;		_packLong
  7131 ;;		_unpackLong
  7132 ;;		_unpackWord
  7133 ;; This function is called by:
  7134 ;;		_main
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138     0068                     _ProcessMsg:	
  7139                           ;psect for function _ProcessMsg
  7140                           
  7141                           
  7142                           ;incstack = 0
  7143                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7144                           ;ProcessMsg@msg_id stored from wreg
  7145     0068  0020               	movlb	0	; select bank0
  7146     0069  00D0               	movwf	ProcessMsg@msg_id
  7147     006A                     l3887:
  7148                           
  7149                           ;main.c: 48:     static uint8_t payload[6];;main.c: 50:     switch (msg_id) {
  7150     006A  2988               	goto	l3939
  7151     006B                     l3889:
  7152                           
  7153                           ;main.c: 52:             payload[0] = data[0];
  7154     006B  084E               	movf	ProcessMsg@data,w
  7155     006C  0086               	movwf	6
  7156     006D  0187               	clrf	7
  7157     006E  0801               	movf	1,w
  7158     006F  0021               	movlb	1	; select bank1
  7159     0070  00C4               	movwf	ProcessMsg@payload^(0+128)
  7160     0071                     l3891:
  7161                           
  7162                           ;main.c: 53:             payload[1] = (uint8_t) sspas[data[0]].m_Mute;
  7163     0071  0020               	movlb	0	; select bank0
  7164     0072  084E               	movf	ProcessMsg@data,w
  7165     0073  0086               	movwf	6
  7166     0074  0187               	clrf	7
  7167     0075  0801               	movf	1,w
  7168     0076  00CF               	movwf	??_ProcessMsg
  7169     0077  3002               	movlw	2
  7170     0078                     u1965:
  7171     0078  35CF               	lslf	??_ProcessMsg,f
  7172     0079  3EFF               	addlw	-1
  7173     007A  1D03               	skipz
  7174     007B  2878               	goto	u1965
  7175     007C  354F               	lslf	??_ProcessMsg,w
  7176     007D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7177     007E  0086               	movwf	6
  7178     007F  0187               	clrf	7
  7179     0080  0801               	movf	1,w
  7180     0081  0021               	movlb	1	; select bank1
  7181     0082  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7182     0083                     l3893:
  7183                           
  7184                           ;main.c: 54:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  7185     0083  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7186     0084  0020               	movlb	0	; select bank0
  7187     0085  00A0               	movwf	SendMsg@data
  7188     0086  3002               	movlw	2
  7189     0087  00A1               	movwf	SendMsg@data_len
  7190     0088  300C               	movlw	12
  7191     0089  3186  262C  3180   	fcall	_SendMsg
  7192                           
  7193                           ;main.c: 55:             break;
  7194     008C  29AB               	goto	l693
  7195     008D                     l3895:
  7196                           
  7197                           ;main.c: 58:             SSPA_getTemp((antenna_band_t) data[0]);
  7198     008D  084E               	movf	ProcessMsg@data,w
  7199     008E  0086               	movwf	6
  7200     008F  0187               	clrf	7
  7201     0090  0801               	movf	1,w
  7202     0091  3185  25B2  3180   	fcall	_SSPA_getTemp
  7203     0094                     l3897:
  7204                           
  7205                           ;main.c: 59:             payload[0] = data[0];
  7206     0094  0020               	movlb	0	; select bank0
  7207     0095  084E               	movf	ProcessMsg@data,w
  7208     0096  0086               	movwf	6
  7209     0097  0187               	clrf	7
  7210     0098  0801               	movf	1,w
  7211     0099  0021               	movlb	1	; select bank1
  7212     009A  00C4               	movwf	ProcessMsg@payload^(0+128)
  7213     009B                     l3899:
  7214                           
  7215                           ;main.c: 60:             unpackWord((uint16_t) sspas[data[0]].m_wTemp, &payload[1]);
  7216     009B  0020               	movlb	0	; select bank0
  7217     009C  084E               	movf	ProcessMsg@data,w
  7218     009D  0086               	movwf	6
  7219     009E  0187               	clrf	7
  7220     009F  0801               	movf	1,w
  7221     00A0  00CF               	movwf	??_ProcessMsg
  7222     00A1  3002               	movlw	2
  7223     00A2                     u1975:
  7224     00A2  35CF               	lslf	??_ProcessMsg,f
  7225     00A3  3EFF               	addlw	-1
  7226     00A4  1D03               	skipz
  7227     00A5  28A2               	goto	u1975
  7228     00A6  354F               	lslf	??_ProcessMsg,w
  7229     00A7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7230     00A8  0086               	movwf	6
  7231     00A9  0187               	clrf	7
  7232     00AA  3F40               	moviw [0]fsr1
  7233     00AB  00A0               	movwf	unpackWord@value
  7234     00AC  3F41               	moviw [1]fsr1
  7235     00AD  00A1               	movwf	unpackWord@value+1
  7236     00AE  30C5               	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7237     00AF  00A2               	movwf	unpackWord@data
  7238     00B0  318D  25CF  3180   	fcall	_unpackWord
  7239     00B3                     l3901:
  7240                           
  7241                           ;main.c: 61:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7242     00B3  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7243     00B4  0020               	movlb	0	; select bank0
  7244     00B5  00A0               	movwf	SendMsg@data
  7245     00B6  3003               	movlw	3
  7246     00B7  00A1               	movwf	SendMsg@data_len
  7247     00B8  300D               	movlw	13
  7248     00B9  3186  262C  3180   	fcall	_SendMsg
  7249                           
  7250                           ;main.c: 62:             break;
  7251     00BC  29AB               	goto	l693
  7252     00BD                     l3903:
  7253                           
  7254                           ;main.c: 65:             SSPA_getPOut((antenna_band_t) data[0]);
  7255     00BD  084E               	movf	ProcessMsg@data,w
  7256     00BE  0086               	movwf	6
  7257     00BF  0187               	clrf	7
  7258     00C0  0801               	movf	1,w
  7259     00C1  3182  22F4  3180   	fcall	_SSPA_getPOut
  7260     00C4                     l3905:
  7261                           
  7262                           ;main.c: 66:             payload[0] = data[0];
  7263     00C4  0020               	movlb	0	; select bank0
  7264     00C5  084E               	movf	ProcessMsg@data,w
  7265     00C6  0086               	movwf	6
  7266     00C7  0187               	clrf	7
  7267     00C8  0801               	movf	1,w
  7268     00C9  0021               	movlb	1	; select bank1
  7269     00CA  00C4               	movwf	ProcessMsg@payload^(0+128)
  7270     00CB                     l3907:
  7271                           
  7272                           ;main.c: 67:             payload[1] = sspas[data[0]].m_bPOut;
  7273     00CB  0020               	movlb	0	; select bank0
  7274     00CC  084E               	movf	ProcessMsg@data,w
  7275     00CD  0086               	movwf	6
  7276     00CE  0187               	clrf	7
  7277     00CF  0801               	movf	1,w
  7278     00D0  00CF               	movwf	??_ProcessMsg
  7279     00D1  3002               	movlw	2
  7280     00D2                     u1985:
  7281     00D2  35CF               	lslf	??_ProcessMsg,f
  7282     00D3  3EFF               	addlw	-1
  7283     00D4  1D03               	skipz
  7284     00D5  28D2               	goto	u1985
  7285     00D6  354F               	lslf	??_ProcessMsg,w
  7286     00D7  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  7287     00D8  0086               	movwf	6
  7288     00D9  0187               	clrf	7
  7289     00DA  0801               	movf	1,w
  7290     00DB  0021               	movlb	1	; select bank1
  7291     00DC  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7292     00DD                     l3909:
  7293                           
  7294                           ;main.c: 68:             unpackLong(sspas[data[0]].m_lCurrent, &payload[2]);
  7295     00DD  0020               	movlb	0	; select bank0
  7296     00DE  084E               	movf	ProcessMsg@data,w
  7297     00DF  0086               	movwf	6
  7298     00E0  0187               	clrf	7
  7299     00E1  0801               	movf	1,w
  7300     00E2  00CF               	movwf	??_ProcessMsg
  7301     00E3  3002               	movlw	2
  7302     00E4                     u1995:
  7303     00E4  35CF               	lslf	??_ProcessMsg,f
  7304     00E5  3EFF               	addlw	-1
  7305     00E6  1D03               	skipz
  7306     00E7  28E4               	goto	u1995
  7307     00E8  354F               	lslf	??_ProcessMsg,w
  7308     00E9  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  7309     00EA  0086               	movwf	6
  7310     00EB  0187               	clrf	7
  7311     00EC  3F40               	moviw [0]fsr1
  7312     00ED  00A0               	movwf	unpackLong@value
  7313     00EE  3F41               	moviw [1]fsr1
  7314     00EF  00A1               	movwf	unpackLong@value+1
  7315     00F0  3F42               	moviw [2]fsr1
  7316     00F1  00A2               	movwf	unpackLong@value+2
  7317     00F2  3F43               	moviw [3]fsr1
  7318     00F3  00A3               	movwf	unpackLong@value+3
  7319     00F4  30C6               	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7320     00F5  00A4               	movwf	unpackLong@data
  7321     00F6  3184  246C  3180   	fcall	_unpackLong
  7322     00F9                     l3911:
  7323                           
  7324                           ;main.c: 69:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7325     00F9  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7326     00FA  0020               	movlb	0	; select bank0
  7327     00FB  00A0               	movwf	SendMsg@data
  7328     00FC  3006               	movlw	6
  7329     00FD  00A1               	movwf	SendMsg@data_len
  7330     00FE  300E               	movlw	14
  7331     00FF  3186  262C  3180   	fcall	_SendMsg
  7332                           
  7333                           ;main.c: 70:             break;
  7334     0102  29AB               	goto	l693
  7335     0103                     l3913:
  7336                           
  7337                           ;main.c: 73:             KAPS_getStatus();
  7338     0103  3187  2773  3180   	fcall	_KAPS_getStatus
  7339     0106                     l3915:
  7340                           
  7341                           ;main.c: 74:             payload[0] = (uint8_t) kaps.m_Status;
  7342     0106  0020               	movlb	0	; select bank0
  7343     0107  0865               	movf	_kaps+1,w
  7344     0108  0021               	movlb	1	; select bank1
  7345     0109  00C4               	movwf	ProcessMsg@payload^(0+128)
  7346     010A                     l3917:
  7347                           
  7348                           ;main.c: 75:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7349     010A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7350     010B  0020               	movlb	0	; select bank0
  7351     010C  00A0               	movwf	SendMsg@data
  7352     010D  01A1               	clrf	SendMsg@data_len
  7353     010E  0AA1               	incf	SendMsg@data_len,f
  7354     010F  300F               	movlw	15
  7355     0110  3186  262C  3180   	fcall	_SendMsg
  7356                           
  7357                           ;main.c: 76:             break;
  7358     0113  29AB               	goto	l693
  7359     0114                     l3919:
  7360                           
  7361                           ;main.c: 79:             KAPS_getPos();
  7362     0114  3185  2574  3180   	fcall	_KAPS_getPos
  7363                           
  7364                           ;main.c: 80:             unpackLong(kaps.m_lAbsPos, payload);
  7365     0117  3002               	movlw	2
  7366     0118  3E64               	addlw	(low (_kaps| 0))& (0+255)
  7367     0119  0086               	movwf	6
  7368     011A  0187               	clrf	7
  7369     011B  3F40               	moviw [0]fsr1
  7370     011C  0020               	movlb	0	; select bank0
  7371     011D  00A0               	movwf	unpackLong@value
  7372     011E  3F41               	moviw [1]fsr1
  7373     011F  00A1               	movwf	unpackLong@value+1
  7374     0120  3F42               	moviw [2]fsr1
  7375     0121  00A2               	movwf	unpackLong@value+2
  7376     0122  3F43               	moviw [3]fsr1
  7377     0123  00A3               	movwf	unpackLong@value+3
  7378     0124  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7379     0125  00A4               	movwf	unpackLong@data
  7380     0126  3184  246C  3180   	fcall	_unpackLong
  7381                           
  7382                           ;main.c: 81:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7383     0129  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7384     012A  0020               	movlb	0	; select bank0
  7385     012B  00A0               	movwf	SendMsg@data
  7386     012C  3004               	movlw	4
  7387     012D  00A1               	movwf	SendMsg@data_len
  7388     012E  3010               	movlw	16
  7389     012F  3186  262C  3180   	fcall	_SendMsg
  7390                           
  7391                           ;main.c: 82:             break;
  7392     0132  29AB               	goto	l693
  7393     0133                     l3921:
  7394                           
  7395                           ;main.c: 85:             KAPS_getIndex();
  7396     0133  3187  27A1  3180   	fcall	_KAPS_getIndex
  7397     0136                     l3923:
  7398                           
  7399                           ;main.c: 86:             payload[0] = kaps.m_bIdxPos;
  7400     0136  0020               	movlb	0	; select bank0
  7401     0137  086A               	movf	_kaps+6,w
  7402     0138  0021               	movlb	1	; select bank1
  7403     0139  00C4               	movwf	ProcessMsg@payload^(0+128)
  7404     013A                     l3925:
  7405                           
  7406                           ;main.c: 87:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7407     013A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7408     013B  0020               	movlb	0	; select bank0
  7409     013C  00A0               	movwf	SendMsg@data
  7410     013D  01A1               	clrf	SendMsg@data_len
  7411     013E  0AA1               	incf	SendMsg@data_len,f
  7412     013F  3012               	movlw	18
  7413     0140  3186  262C  3180   	fcall	_SendMsg
  7414                           
  7415                           ;main.c: 88:             break;
  7416     0143  29AB               	goto	l693
  7417     0144                     l3927:
  7418                           
  7419                           ;main.c: 91:             SSPA_setMute((antenna_band_t) data[0], (mute_t) data[1]);
  7420     0144  084E               	movf	ProcessMsg@data,w
  7421     0145  0086               	movwf	6
  7422     0146  0187               	clrf	7
  7423     0147  3F41               	moviw [1]fsr1
  7424     0148  00F4               	movwf	SSPA_setMute@mute
  7425     0149  084E               	movf	ProcessMsg@data,w
  7426     014A  0086               	movwf	6
  7427     014B  0187               	clrf	7
  7428     014C  0801               	movf	1,w
  7429     014D  3186  2668  3180   	fcall	_SSPA_setMute
  7430                           
  7431                           ;main.c: 92:             break;
  7432     0150  29AB               	goto	l693
  7433     0151                     l3929:
  7434                           
  7435                           ;main.c: 95:             KAPS_GoToIdx(data[0]);
  7436     0151  084E               	movf	ProcessMsg@data,w
  7437     0152  0086               	movwf	6
  7438     0153  0187               	clrf	7
  7439     0154  0801               	movf	1,w
  7440     0155  318F  2736  3180   	fcall	_KAPS_GoToIdx
  7441                           
  7442                           ;main.c: 96:             break;
  7443     0158  29AB               	goto	l693
  7444     0159                     l3931:
  7445                           
  7446                           ;main.c: 99:             KAPS_setAbsPos(packLong(data));
  7447     0159  084E               	movf	ProcessMsg@data,w
  7448     015A  3183  237E  3180   	fcall	_packLong
  7449     015D  0020               	movlb	0	; select bank0
  7450     015E  0823               	movf	?_packLong+3,w
  7451     015F  00B0               	movwf	KAPS_setAbsPos@pos+3
  7452     0160  0822               	movf	?_packLong+2,w
  7453     0161  00AF               	movwf	KAPS_setAbsPos@pos+2
  7454     0162  0821               	movf	?_packLong+1,w
  7455     0163  00AE               	movwf	KAPS_setAbsPos@pos+1
  7456     0164  0820               	movf	?_packLong,w
  7457     0165  00AD               	movwf	KAPS_setAbsPos@pos
  7458     0166  3187  2710  3180   	fcall	_KAPS_setAbsPos
  7459                           
  7460                           ;main.c: 100:             break;
  7461     0169  29AB               	goto	l693
  7462     016A                     l3933:
  7463                           
  7464                           ;main.c: 103:             KAPS_setRelPos((int8_t) data[0]);
  7465     016A  084E               	movf	ProcessMsg@data,w
  7466     016B  0086               	movwf	6
  7467     016C  0187               	clrf	7
  7468     016D  0801               	movf	1,w
  7469     016E  318F  275C  3180   	fcall	_KAPS_setRelPos
  7470                           
  7471                           ;main.c: 104:             break;
  7472     0171  29AB               	goto	l693
  7473     0172                     l3935:
  7474                           
  7475                           ;main.c: 107:             KAPS_StorePos(data[4], packLong(data));
  7476     0172  084E               	movf	ProcessMsg@data,w
  7477     0173  3183  237E  3180   	fcall	_packLong
  7478     0176  0020               	movlb	0	; select bank0
  7479     0177  0823               	movf	?_packLong+3,w
  7480     0178  00B0               	movwf	KAPS_StorePos@pos+3
  7481     0179  0822               	movf	?_packLong+2,w
  7482     017A  00AF               	movwf	KAPS_StorePos@pos+2
  7483     017B  0821               	movf	?_packLong+1,w
  7484     017C  00AE               	movwf	KAPS_StorePos@pos+1
  7485     017D  0820               	movf	?_packLong,w
  7486     017E  00AD               	movwf	KAPS_StorePos@pos
  7487     017F  084E               	movf	ProcessMsg@data,w
  7488     0180  3E04               	addlw	4
  7489     0181  0086               	movwf	6
  7490     0182  0187               	clrf	7
  7491     0183  0801               	movf	1,w
  7492     0184  3185  2534  3180   	fcall	_KAPS_StorePos
  7493                           
  7494                           ;main.c: 108:             break;
  7495     0187  29AB               	goto	l693
  7496     0188                     l3939:
  7497     0188  0850               	movf	ProcessMsg@msg_id,w
  7498                           
  7499                           ; Switch size 1, requested type "simple"
  7500                           ; Number of cases is 11, Range of values is 1 to 17
  7501                           ; switch strategies available:
  7502                           ; Name         Instructions Cycles
  7503                           ; simple_byte           34    18 (average)
  7504                           ; direct_byte           43     9 (fixed)
  7505                           ; jumptable            263     9 (fixed)
  7506                           ;	Chosen strategy is simple_byte
  7507     0189  3A01               	xorlw	1	; case 1
  7508     018A  1903               	skipnz
  7509     018B  2944               	goto	l3927
  7510     018C  3A03               	xorlw	3	; case 2
  7511     018D  1903               	skipnz
  7512     018E  286B               	goto	l3889
  7513     018F  3A01               	xorlw	1	; case 3
  7514     0190  1903               	skipnz
  7515     0191  288D               	goto	l3895
  7516     0192  3A07               	xorlw	7	; case 4
  7517     0193  1903               	skipnz
  7518     0194  28BD               	goto	l3903
  7519     0195  3A01               	xorlw	1	; case 5
  7520     0196  1903               	skipnz
  7521     0197  2903               	goto	l3913
  7522     0198  3A03               	xorlw	3	; case 6
  7523     0199  1903               	skipnz
  7524     019A  2914               	goto	l3919
  7525     019B  3A01               	xorlw	1	; case 7
  7526     019C  1903               	skipnz
  7527     019D  2951               	goto	l3929
  7528     019E  3A0F               	xorlw	15	; case 8
  7529     019F  1903               	skipnz
  7530     01A0  2959               	goto	l3931
  7531     01A1  3A01               	xorlw	1	; case 9
  7532     01A2  1903               	skipnz
  7533     01A3  296A               	goto	l3933
  7534     01A4  3A03               	xorlw	3	; case 10
  7535     01A5  1903               	skipnz
  7536     01A6  2972               	goto	l3935
  7537     01A7  3A1B               	xorlw	27	; case 17
  7538     01A8  1903               	skipnz
  7539     01A9  2933               	goto	l3921
  7540     01AA  29AB               	goto	l693
  7541     01AB                     l693:
  7542     01AB  0008               	return
  7543     01AC                     __end_of_ProcessMsg:
  7544                           
  7545                           	psect	text15
  7546     0DCF                     __ptext15:	
  7547 ;; *************** function _unpackWord *****************
  7548 ;; Defined at:
  7549 ;;		line 71 in file "utils.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  value           2    0[BANK0 ] unsigned short 
  7552 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7553 ;;		 -> ProcessMsg@payload(6), 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      void 
  7558 ;; Registers used:
  7559 ;;		wreg, fsr1l, fsr1h, status,2
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7565 ;;      Params:         0       3       0       0       0       0       0       0
  7566 ;;      Locals:         0       0       0       0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0
  7568 ;;      Totals:         0       3       0       0       0       0       0       0
  7569 ;;Total ram usage:        3 bytes
  7570 ;; Hardware stack levels used: 1
  7571 ;; Hardware stack levels required when called: 7
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_ProcessMsg
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579     0DCF                     _unpackWord:	
  7580                           ;psect for function _unpackWord
  7581                           
  7582     0DCF                     l3771:	
  7583                           ;incstack = 0
  7584                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7585                           
  7586                           
  7587                           ;utils.c: 73:     data[0] = value & 0xFF;
  7588     0DCF  0020               	movlb	0	; select bank0
  7589     0DD0  0822               	movf	unpackWord@data,w
  7590     0DD1  0086               	movwf	6
  7591     0DD2  0187               	clrf	7
  7592     0DD3  0820               	movf	unpackWord@value,w
  7593     0DD4  0081               	movwf	1
  7594     0DD5                     l3773:
  7595                           
  7596                           ;utils.c: 74:     data[1] = (value >> 8) & 0xFF;
  7597     0DD5  0A22               	incf	unpackWord@data,w
  7598     0DD6  0086               	movwf	6
  7599     0DD7  0187               	clrf	7
  7600     0DD8  0821               	movf	unpackWord@value+1,w
  7601     0DD9  0081               	movwf	1
  7602     0DDA                     l751:
  7603     0DDA  0008               	return
  7604     0DDB                     __end_of_unpackWord:
  7605                           
  7606                           	psect	text16
  7607     0668                     __ptext16:	
  7608 ;; *************** function _SSPA_setMute *****************
  7609 ;; Defined at:
  7610 ;;		line 77 in file "sspa.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  band            1    wreg     enum E40
  7613 ;;  mute            1    4[COMMON] enum E36
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  band            1    5[COMMON] enum E40
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      void 
  7618 ;; Registers used:
  7619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7625 ;;      Params:         1       0       0       0       0       0       0       0
  7626 ;;      Locals:         1       0       0       0       0       0       0       0
  7627 ;;      Temps:          0       2       0       0       0       0       0       0
  7628 ;;      Totals:         2       2       0       0       0       0       0       0
  7629 ;;Total ram usage:        4 bytes
  7630 ;; Hardware stack levels used: 1
  7631 ;; Hardware stack levels required when called: 7
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_ProcessMsg
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639     0668                     _SSPA_setMute:	
  7640                           ;psect for function _SSPA_setMute
  7641                           
  7642                           
  7643                           ;incstack = 0
  7644                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7645                           ;SSPA_setMute@band stored from wreg
  7646     0668  00F5               	movwf	SSPA_setMute@band
  7647     0669                     l3835:
  7648                           
  7649                           ;sspa.c: 78:     switch (band) {
  7650     0669  2E80               	goto	l3843
  7651     066A                     l3837:
  7652                           
  7653                           ;sspa.c: 80:             if (mute == UNMUTE)
  7654     066A  0874               	movf	SSPA_setMute@mute,w
  7655     066B  1D03               	btfss	3,2
  7656     066C  2E6E               	goto	u1921
  7657     066D  2E6F               	goto	u1920
  7658     066E                     u1921:
  7659     066E  2E72               	goto	l843
  7660     066F                     u1920:
  7661     066F                     l840:	
  7662                           ;sspa.c: 81:                 do { LATCbits.LATC7 = 1; } while(0);
  7663                           
  7664     066F  0022               	movlb	2	; select bank2
  7665     0670  178E               	bsf	14,7	;volatile
  7666     0671  2E94               	goto	l3845
  7667     0672                     l843:	
  7668                           ;sspa.c: 83:                 do { LATCbits.LATC7 = 0; } while(0);
  7669                           
  7670     0672  0022               	movlb	2	; select bank2
  7671     0673  138E               	bcf	14,7	;volatile
  7672     0674  2E94               	goto	l3845
  7673     0675                     l3839:
  7674                           
  7675                           ;sspa.c: 87:             if (mute == UNMUTE)
  7676     0675  0874               	movf	SSPA_setMute@mute,w
  7677     0676  1D03               	btfss	3,2
  7678     0677  2E79               	goto	u1931
  7679     0678  2E7A               	goto	u1930
  7680     0679                     u1931:
  7681     0679  2E7D               	goto	l851
  7682     067A                     u1930:
  7683     067A                     l848:	
  7684                           ;sspa.c: 88:                 do { LATCbits.LATC6 = 1; } while(0);
  7685                           
  7686     067A  0022               	movlb	2	; select bank2
  7687     067B  170E               	bsf	14,6	;volatile
  7688     067C  2E94               	goto	l3845
  7689     067D                     l851:	
  7690                           ;sspa.c: 90:                 do { LATCbits.LATC6 = 0; } while(0);
  7691                           
  7692     067D  0022               	movlb	2	; select bank2
  7693     067E  130E               	bcf	14,6	;volatile
  7694     067F  2E94               	goto	l3845
  7695     0680                     l3843:
  7696     0680  0875               	movf	SSPA_setMute@band,w
  7697     0681  0020               	movlb	0	; select bank0
  7698     0682  00A0               	movwf	??_SSPA_setMute
  7699     0683  01A1               	clrf	??_SSPA_setMute+1
  7700                           
  7701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7702                           ; Switch size 1, requested type "simple"
  7703                           ; Number of cases is 1, Range of values is 0 to 0
  7704                           ; switch strategies available:
  7705                           ; Name         Instructions Cycles
  7706                           ; simple_byte            4     3 (average)
  7707                           ; direct_byte            8     6 (fixed)
  7708                           ; jumptable            260     6 (fixed)
  7709                           ;	Chosen strategy is simple_byte
  7710     0684  0821               	movf	??_SSPA_setMute+1,w
  7711     0685  3A00               	xorlw	0	; case 0
  7712     0686  1903               	skipnz
  7713     0687  2E89               	goto	l4189
  7714     0688  2E94               	goto	l3845
  7715     0689                     l4189:
  7716                           
  7717                           ; Switch size 1, requested type "simple"
  7718                           ; Number of cases is 3, Range of values is 0 to 2
  7719                           ; switch strategies available:
  7720                           ; Name         Instructions Cycles
  7721                           ; simple_byte           10     6 (average)
  7722                           ; direct_byte           12     6 (fixed)
  7723                           ; jumptable            260     6 (fixed)
  7724                           ;	Chosen strategy is simple_byte
  7725     0689  0820               	movf	??_SSPA_setMute,w
  7726     068A  3A00               	xorlw	0	; case 0
  7727     068B  1903               	skipnz
  7728     068C  2E94               	goto	l3845
  7729     068D  3A01               	xorlw	1	; case 1
  7730     068E  1903               	skipnz
  7731     068F  2E6A               	goto	l3837
  7732     0690  3A03               	xorlw	3	; case 2
  7733     0691  1903               	skipnz
  7734     0692  2E75               	goto	l3839
  7735     0693  2E94               	goto	l3845
  7736     0694                     l3845:
  7737                           
  7738                           ;sspa.c: 98:     sspas[band].m_Mute = mute;
  7739     0694  0875               	movf	SSPA_setMute@band,w
  7740     0695  0020               	movlb	0	; select bank0
  7741     0696  00A0               	movwf	??_SSPA_setMute
  7742     0697  3002               	movlw	2
  7743     0698                     u1945:
  7744     0698  35A0               	lslf	??_SSPA_setMute,f
  7745     0699  3EFF               	addlw	-1
  7746     069A  1D03               	skipz
  7747     069B  2E98               	goto	u1945
  7748     069C  3520               	lslf	??_SSPA_setMute,w
  7749     069D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7750     069E  0086               	movwf	6
  7751     069F  0187               	clrf	7
  7752     06A0  0874               	movf	SSPA_setMute@mute,w
  7753     06A1  0081               	movwf	1
  7754     06A2                     l855:
  7755     06A2  0008               	return
  7756     06A3                     __end_of_SSPA_setMute:
  7757                           
  7758                           	psect	text17
  7759     05B2                     __ptext17:	
  7760 ;; *************** function _SSPA_getTemp *****************
  7761 ;; Defined at:
  7762 ;;		line 105 in file "sspa.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  band            1    wreg     enum E40
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  band            1   45[BANK0 ] enum E40
  7767 ;;  adc_value       2   42[BANK0 ] unsigned short 
  7768 ;;  channel         1   44[BANK0 ] enum E9257
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7778 ;;      Params:         0       0       0       0       0       0       0       0
  7779 ;;      Locals:         0       4       0       0       0       0       0       0
  7780 ;;      Temps:          0       2       0       0       0       0       0       0
  7781 ;;      Totals:         0       6       0       0       0       0       0       0
  7782 ;;Total ram usage:        6 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 9
  7785 ;; This function calls:
  7786 ;;		_ADC2Celsius
  7787 ;;		_getADCValue
  7788 ;; This function is called by:
  7789 ;;		_ProcessMsg
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793     05B2                     _SSPA_getTemp:	
  7794                           ;psect for function _SSPA_getTemp
  7795                           
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7799                           ;SSPA_getTemp@band stored from wreg
  7800     05B2  0020               	movlb	0	; select bank0
  7801     05B3  00CD               	movwf	SSPA_getTemp@band
  7802     05B4                     l3751:
  7803                           
  7804                           ;sspa.c: 106:     adc_channel_t channel;;sspa.c: 107:     adc_result_t adc_value;;sspa.c
      +                          : 109:     switch (band) {
  7805     05B4  2DBB               	goto	l3759
  7806     05B5                     l3753:
  7807                           
  7808                           ;sspa.c: 111:             channel = TM_Ka;
  7809     05B5  3003               	movlw	3
  7810     05B6  00CC               	movwf	SSPA_getTemp@channel
  7811                           
  7812                           ;sspa.c: 112:             break;
  7813     05B7  2DCE               	goto	l3761
  7814     05B8                     l3755:
  7815                           
  7816                           ;sspa.c: 114:             channel = TM_X;
  7817     05B8  3007               	movlw	7
  7818     05B9  00CC               	movwf	SSPA_getTemp@channel
  7819                           
  7820                           ;sspa.c: 115:             break;
  7821     05BA  2DCE               	goto	l3761
  7822     05BB                     l3759:
  7823     05BB  084D               	movf	SSPA_getTemp@band,w
  7824     05BC  00C8               	movwf	??_SSPA_getTemp
  7825     05BD  01C9               	clrf	??_SSPA_getTemp+1
  7826                           
  7827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7828                           ; Switch size 1, requested type "simple"
  7829                           ; Number of cases is 1, Range of values is 0 to 0
  7830                           ; switch strategies available:
  7831                           ; Name         Instructions Cycles
  7832                           ; simple_byte            4     3 (average)
  7833                           ; direct_byte            8     6 (fixed)
  7834                           ; jumptable            260     6 (fixed)
  7835                           ;	Chosen strategy is simple_byte
  7836     05BE  0849               	movf	??_SSPA_getTemp+1,w
  7837     05BF  3A00               	xorlw	0	; case 0
  7838     05C0  1903               	skipnz
  7839     05C1  2DC3               	goto	l4191
  7840     05C2  2DCE               	goto	l3761
  7841     05C3                     l4191:
  7842                           
  7843                           ; Switch size 1, requested type "simple"
  7844                           ; Number of cases is 3, Range of values is 0 to 2
  7845                           ; switch strategies available:
  7846                           ; Name         Instructions Cycles
  7847                           ; simple_byte           10     6 (average)
  7848                           ; direct_byte           12     6 (fixed)
  7849                           ; jumptable            260     6 (fixed)
  7850                           ;	Chosen strategy is simple_byte
  7851     05C3  0848               	movf	??_SSPA_getTemp,w
  7852     05C4  3A00               	xorlw	0	; case 0
  7853     05C5  1903               	skipnz
  7854     05C6  2DCE               	goto	l3761
  7855     05C7  3A01               	xorlw	1	; case 1
  7856     05C8  1903               	skipnz
  7857     05C9  2DB5               	goto	l3753
  7858     05CA  3A03               	xorlw	3	; case 2
  7859     05CB  1903               	skipnz
  7860     05CC  2DB8               	goto	l3755
  7861     05CD  2DCE               	goto	l3761
  7862     05CE                     l3761:
  7863                           
  7864                           ;sspa.c: 122:     adc_value = getADCValue(channel);
  7865     05CE  084C               	movf	SSPA_getTemp@channel,w
  7866     05CF  318F  27D6  3185   	fcall	_getADCValue
  7867     05D2  0020               	movlb	0	; select bank0
  7868     05D3  0823               	movf	?_getADCValue+1,w
  7869     05D4  00CB               	movwf	SSPA_getTemp@adc_value+1
  7870     05D5  0822               	movf	?_getADCValue,w
  7871     05D6  00CA               	movwf	SSPA_getTemp@adc_value
  7872     05D7                     l3763:
  7873                           
  7874                           ;sspa.c: 124:     sspas[band].m_wTemp = ADC2Celsius(adc_value);
  7875     05D7  084B               	movf	SSPA_getTemp@adc_value+1,w
  7876     05D8  00BB               	movwf	ADC2Celsius@v+1
  7877     05D9  084A               	movf	SSPA_getTemp@adc_value,w
  7878     05DA  00BA               	movwf	ADC2Celsius@v
  7879     05DB  3183  23D5  3185   	fcall	_ADC2Celsius
  7880     05DE  0020               	movlb	0	; select bank0
  7881     05DF  084D               	movf	SSPA_getTemp@band,w
  7882     05E0  00C8               	movwf	??_SSPA_getTemp
  7883     05E1  3002               	movlw	2
  7884     05E2                     u1845:
  7885     05E2  35C8               	lslf	??_SSPA_getTemp,f
  7886     05E3  3EFF               	addlw	-1
  7887     05E4  1D03               	skipz
  7888     05E5  2DE2               	goto	u1845
  7889     05E6  3548               	lslf	??_SSPA_getTemp,w
  7890     05E7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7891     05E8  0086               	movwf	6
  7892     05E9  0187               	clrf	7
  7893     05EA  083A               	movf	?_ADC2Celsius,w
  7894     05EB  3FC0               	movwi [0]fsr1
  7895     05EC  083B               	movf	?_ADC2Celsius+1,w
  7896     05ED  3FC1               	movwi [1]fsr1
  7897     05EE                     l864:
  7898     05EE  0008               	return
  7899     05EF                     __end_of_SSPA_getTemp:
  7900                           
  7901                           	psect	text18
  7902     03D5                     __ptext18:	
  7903 ;; *************** function _ADC2Celsius *****************
  7904 ;; Defined at:
  7905 ;;		line 51 in file "sspa.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  v               2   26[BANK0 ] unsigned short 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  result          4   36[BANK0 ] long 
  7910 ;;  value           4   32[BANK0 ] long 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  2   26[BANK0 ] short 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0, pclath, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7920 ;;      Params:         0       2       0       0       0       0       0       0
  7921 ;;      Locals:         0       8       0       0       0       0       0       0
  7922 ;;      Temps:          0       4       0       0       0       0       0       0
  7923 ;;      Totals:         0      14       0       0       0       0       0       0
  7924 ;;Total ram usage:       14 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 8
  7927 ;; This function calls:
  7928 ;;		___aldiv
  7929 ;;		___lmul
  7930 ;; This function is called by:
  7931 ;;		_SSPA_getTemp
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935     03D5                     _ADC2Celsius:	
  7936                           ;psect for function _ADC2Celsius
  7937                           
  7938     03D5                     l3727:	
  7939                           ;incstack = 0
  7940                           ; Regs used in _ADC2Celsius: [wreg+status,2+status,0+pclath+cstack]
  7941                           
  7942                           
  7943                           ;sspa.c: 52:     int32_t value = (int32_t) v;
  7944     03D5  0020               	movlb	0	; select bank0
  7945     03D6  083A               	movf	ADC2Celsius@v,w
  7946     03D7  00C0               	movwf	ADC2Celsius@value
  7947     03D8  083B               	movf	ADC2Celsius@v+1,w
  7948     03D9  00C1               	movwf	ADC2Celsius@value+1
  7949     03DA  01C2               	clrf	ADC2Celsius@value+2
  7950     03DB  01C3               	clrf	ADC2Celsius@value+3
  7951     03DC                     l3729:
  7952                           
  7953                           ;sspa.c: 53:     int32_t result = (int32_t)(160) - (value * (int32_t)(428)) / (int32_t)(
      +                          1024);
  7954     03DC  3000               	movlw	0
  7955     03DD  00AF               	movwf	___aldiv@divisor+3
  7956     03DE  3000               	movlw	0
  7957     03DF  00AE               	movwf	___aldiv@divisor+2
  7958     03E0  3004               	movlw	4
  7959     03E1  00AD               	movwf	___aldiv@divisor+1
  7960     03E2  3000               	movlw	0
  7961     03E3  00AC               	movwf	___aldiv@divisor
  7962     03E4  0843               	movf	ADC2Celsius@value+3,w
  7963     03E5  00A3               	movwf	___lmul@multiplier+3
  7964     03E6  0842               	movf	ADC2Celsius@value+2,w
  7965     03E7  00A2               	movwf	___lmul@multiplier+2
  7966     03E8  0841               	movf	ADC2Celsius@value+1,w
  7967     03E9  00A1               	movwf	___lmul@multiplier+1
  7968     03EA  0840               	movf	ADC2Celsius@value,w
  7969     03EB  00A0               	movwf	___lmul@multiplier
  7970     03EC  3000               	movlw	0
  7971     03ED  00A7               	movwf	___lmul@multiplicand+3
  7972     03EE  3000               	movlw	0
  7973     03EF  00A6               	movwf	___lmul@multiplicand+2
  7974     03F0  3001               	movlw	1
  7975     03F1  00A5               	movwf	___lmul@multiplicand+1
  7976     03F2  30AC               	movlw	172
  7977     03F3  00A4               	movwf	___lmul@multiplicand
  7978     03F4  3186  26DC  3183   	fcall	___lmul
  7979     03F7  0020               	movlb	0	; select bank0
  7980     03F8  0823               	movf	?___lmul+3,w
  7981     03F9  00B3               	movwf	___aldiv@dividend+3
  7982     03FA  0822               	movf	?___lmul+2,w
  7983     03FB  00B2               	movwf	___aldiv@dividend+2
  7984     03FC  0821               	movf	?___lmul+1,w
  7985     03FD  00B1               	movwf	___aldiv@dividend+1
  7986     03FE  0820               	movf	?___lmul,w
  7987     03FF  00B0               	movwf	___aldiv@dividend
  7988     0400  3182  2264  3183   	fcall	___aldiv
  7989     0403  30A0               	movlw	160
  7990     0404  0020               	movlb	0	; select bank0
  7991     0405  00BC               	movwf	??_ADC2Celsius
  7992     0406  3000               	movlw	0
  7993     0407  00BD               	movwf	??_ADC2Celsius+1
  7994     0408  3000               	movlw	0
  7995     0409  00BE               	movwf	??_ADC2Celsius+2
  7996     040A  3000               	movlw	0
  7997     040B  00BF               	movwf	??_ADC2Celsius+3
  7998     040C  082C               	movf	?___aldiv,w
  7999     040D  02BC               	subwf	??_ADC2Celsius,f
  8000     040E  082D               	movf	?___aldiv+1,w
  8001     040F  3BBD               	subwfb	??_ADC2Celsius+1,f
  8002     0410  082E               	movf	?___aldiv+2,w
  8003     0411  3BBE               	subwfb	??_ADC2Celsius+2,f
  8004     0412  082F               	movf	?___aldiv+3,w
  8005     0413  3BBF               	subwfb	??_ADC2Celsius+3,f
  8006     0414  083F               	movf	??_ADC2Celsius+3,w
  8007     0415  00C7               	movwf	ADC2Celsius@result+3
  8008     0416  083E               	movf	??_ADC2Celsius+2,w
  8009     0417  00C6               	movwf	ADC2Celsius@result+2
  8010     0418  083D               	movf	??_ADC2Celsius+1,w
  8011     0419  00C5               	movwf	ADC2Celsius@result+1
  8012     041A  083C               	movf	??_ADC2Celsius,w
  8013     041B  00C4               	movwf	ADC2Celsius@result
  8014     041C                     l3731:
  8015                           
  8016                           ;sspa.c: 55:     return (int16_t) result;
  8017     041C  0845               	movf	ADC2Celsius@result+1,w
  8018     041D  00BB               	movwf	?_ADC2Celsius+1
  8019     041E  0844               	movf	ADC2Celsius@result,w
  8020     041F  00BA               	movwf	?_ADC2Celsius
  8021     0420                     l828:
  8022     0420  0008               	return
  8023     0421                     __end_of_ADC2Celsius:
  8024                           
  8025                           	psect	text19
  8026     02F4                     __ptext19:	
  8027 ;; *************** function _SSPA_getPOut *****************
  8028 ;; Defined at:
  8029 ;;		line 131 in file "sspa.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  band            1    wreg     enum E40
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  band            1   42[BANK0 ] enum E40
  8034 ;;  adc_value       2   40[BANK0 ] unsigned short 
  8035 ;;  channel         1    0        enum E9257
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8045 ;;      Params:         0       0       0       0       0       0       0       0
  8046 ;;      Locals:         0       3       0       0       0       0       0       0
  8047 ;;      Temps:          0       2       0       0       0       0       0       0
  8048 ;;      Totals:         0       5       0       0       0       0       0       0
  8049 ;;Total ram usage:        5 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 9
  8052 ;; This function calls:
  8053 ;;		_ADC2Amp
  8054 ;;		_ADC2dBm
  8055 ;;		_getADCValue
  8056 ;; This function is called by:
  8057 ;;		_ProcessMsg
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061     02F4                     _SSPA_getPOut:	
  8062                           ;psect for function _SSPA_getPOut
  8063                           
  8064                           
  8065                           ;incstack = 0
  8066                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8067                           ;SSPA_getPOut@band stored from wreg
  8068     02F4  0020               	movlb	0	; select bank0
  8069     02F5  00CA               	movwf	SSPA_getPOut@band
  8070     02F6                     l3775:
  8071                           
  8072                           ;sspa.c: 132:     adc_channel_t channel;;sspa.c: 133:     adc_result_t adc_value;;sspa.c
      +                          : 135:     switch (band) {
  8073     02F6  2B6A               	goto	l3797
  8074     02F7                     l868:	
  8075                           ;sspa.c: 136:         case ANTENNABAND_KA:
  8076                           
  8077     02F7                     l3777:
  8078                           
  8079                           ;sspa.c: 138:             adc_value = getADCValue(channel);
  8080     02F7  3001               	movlw	1
  8081     02F8  318F  27D6  3182   	fcall	_getADCValue
  8082     02FB  0020               	movlb	0	; select bank0
  8083     02FC  0823               	movf	?_getADCValue+1,w
  8084     02FD  00C9               	movwf	SSPA_getPOut@adc_value+1
  8085     02FE  0822               	movf	?_getADCValue,w
  8086     02FF  00C8               	movwf	SSPA_getPOut@adc_value
  8087     0300                     l3779:
  8088                           
  8089                           ;sspa.c: 139:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8090     0300  0849               	movf	SSPA_getPOut@adc_value+1,w
  8091     0301  00BB               	movwf	ADC2Amp@v+1
  8092     0302  0848               	movf	SSPA_getPOut@adc_value,w
  8093     0303  00BA               	movwf	ADC2Amp@v
  8094     0304  3184  24F4  3182   	fcall	_ADC2Amp
  8095     0307  0020               	movlb	0	; select bank0
  8096     0308  084A               	movf	SSPA_getPOut@band,w
  8097     0309  00C6               	movwf	??_SSPA_getPOut
  8098     030A  3002               	movlw	2
  8099     030B                     u1855:
  8100     030B  35C6               	lslf	??_SSPA_getPOut,f
  8101     030C  3EFF               	addlw	-1
  8102     030D  1D03               	skipz
  8103     030E  2B0B               	goto	u1855
  8104     030F  3546               	lslf	??_SSPA_getPOut,w
  8105     0310  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8106     0311  0086               	movwf	6
  8107     0312  0187               	clrf	7
  8108     0313  083A               	movf	?_ADC2Amp,w
  8109     0314  3FC0               	movwi [0]fsr1
  8110     0315  083B               	movf	?_ADC2Amp+1,w
  8111     0316  3FC1               	movwi [1]fsr1
  8112     0317  083C               	movf	?_ADC2Amp+2,w
  8113     0318  3FC2               	movwi [2]fsr1
  8114     0319  083D               	movf	?_ADC2Amp+3,w
  8115     031A  3FC3               	movwi [3]fsr1
  8116     031B                     l3781:
  8117                           
  8118                           ;sspa.c: 140:             sspas[band].m_bPOut = 0xFF;
  8119     031B  084A               	movf	SSPA_getPOut@band,w
  8120     031C  00C6               	movwf	??_SSPA_getPOut
  8121     031D  3002               	movlw	2
  8122     031E                     u1865:
  8123     031E  35C6               	lslf	??_SSPA_getPOut,f
  8124     031F  3EFF               	addlw	-1
  8125     0320  1D03               	skipz
  8126     0321  2B1E               	goto	u1865
  8127     0322  3546               	lslf	??_SSPA_getPOut,w
  8128     0323  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8129     0324  0086               	movwf	6
  8130     0325  0187               	clrf	7
  8131     0326  30FF               	movlw	255
  8132     0327  0081               	movwf	1
  8133                           
  8134                           ;sspa.c: 141:             break;
  8135     0328  2B7D               	goto	l873
  8136     0329                     l3783:
  8137     0329                     l3785:
  8138                           
  8139                           ;sspa.c: 145:             adc_value = getADCValue(channel);
  8140     0329  300A               	movlw	10
  8141     032A  318F  27D6  3182   	fcall	_getADCValue
  8142     032D  0020               	movlb	0	; select bank0
  8143     032E  0823               	movf	?_getADCValue+1,w
  8144     032F  00C9               	movwf	SSPA_getPOut@adc_value+1
  8145     0330  0822               	movf	?_getADCValue,w
  8146     0331  00C8               	movwf	SSPA_getPOut@adc_value
  8147     0332                     l3787:
  8148                           
  8149                           ;sspa.c: 146:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8150     0332  0849               	movf	SSPA_getPOut@adc_value+1,w
  8151     0333  00BB               	movwf	ADC2Amp@v+1
  8152     0334  0848               	movf	SSPA_getPOut@adc_value,w
  8153     0335  00BA               	movwf	ADC2Amp@v
  8154     0336  3184  24F4  3182   	fcall	_ADC2Amp
  8155     0339  0020               	movlb	0	; select bank0
  8156     033A  084A               	movf	SSPA_getPOut@band,w
  8157     033B  00C6               	movwf	??_SSPA_getPOut
  8158     033C  3002               	movlw	2
  8159     033D                     u1875:
  8160     033D  35C6               	lslf	??_SSPA_getPOut,f
  8161     033E  3EFF               	addlw	-1
  8162     033F  1D03               	skipz
  8163     0340  2B3D               	goto	u1875
  8164     0341  3546               	lslf	??_SSPA_getPOut,w
  8165     0342  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8166     0343  0086               	movwf	6
  8167     0344  0187               	clrf	7
  8168     0345  083A               	movf	?_ADC2Amp,w
  8169     0346  3FC0               	movwi [0]fsr1
  8170     0347  083B               	movf	?_ADC2Amp+1,w
  8171     0348  3FC1               	movwi [1]fsr1
  8172     0349  083C               	movf	?_ADC2Amp+2,w
  8173     034A  3FC2               	movwi [2]fsr1
  8174     034B  083D               	movf	?_ADC2Amp+3,w
  8175     034C  3FC3               	movwi [3]fsr1
  8176     034D                     l3789:
  8177     034D                     l3791:
  8178                           
  8179                           ;sspa.c: 148:             adc_value = getADCValue(channel);
  8180     034D  3000               	movlw	0
  8181     034E  318F  27D6  3182   	fcall	_getADCValue
  8182     0351  0020               	movlb	0	; select bank0
  8183     0352  0823               	movf	?_getADCValue+1,w
  8184     0353  00C9               	movwf	SSPA_getPOut@adc_value+1
  8185     0354  0822               	movf	?_getADCValue,w
  8186     0355  00C8               	movwf	SSPA_getPOut@adc_value
  8187     0356                     l3793:
  8188                           
  8189                           ;sspa.c: 149:             sspas[band].m_bPOut = (uint8_t) ADC2dBm(adc_value);
  8190     0356  084A               	movf	SSPA_getPOut@band,w
  8191     0357  00C6               	movwf	??_SSPA_getPOut
  8192     0358  3002               	movlw	2
  8193     0359                     u1885:
  8194     0359  35C6               	lslf	??_SSPA_getPOut,f
  8195     035A  3EFF               	addlw	-1
  8196     035B  1D03               	skipz
  8197     035C  2B59               	goto	u1885
  8198     035D  3546               	lslf	??_SSPA_getPOut,w
  8199     035E  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8200     035F  0086               	movwf	6
  8201     0360  0187               	clrf	7
  8202     0361  0849               	movf	SSPA_getPOut@adc_value+1,w
  8203     0362  00BB               	movwf	ADC2dBm@v+1
  8204     0363  0848               	movf	SSPA_getPOut@adc_value,w
  8205     0364  00BA               	movwf	ADC2dBm@v
  8206     0365  3185  25EF  3182   	fcall	_ADC2dBm
  8207     0368  0081               	movwf	1
  8208                           
  8209                           ;sspa.c: 150:             break;
  8210     0369  2B7D               	goto	l873
  8211     036A                     l3797:
  8212     036A  084A               	movf	SSPA_getPOut@band,w
  8213     036B  00C6               	movwf	??_SSPA_getPOut
  8214     036C  01C7               	clrf	??_SSPA_getPOut+1
  8215                           
  8216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8217                           ; Switch size 1, requested type "simple"
  8218                           ; Number of cases is 1, Range of values is 0 to 0
  8219                           ; switch strategies available:
  8220                           ; Name         Instructions Cycles
  8221                           ; simple_byte            4     3 (average)
  8222                           ; direct_byte            8     6 (fixed)
  8223                           ; jumptable            260     6 (fixed)
  8224                           ;	Chosen strategy is simple_byte
  8225     036D  0847               	movf	??_SSPA_getPOut+1,w
  8226     036E  3A00               	xorlw	0	; case 0
  8227     036F  1903               	skipnz
  8228     0370  2B72               	goto	l4193
  8229     0371  2B7D               	goto	l873
  8230     0372                     l4193:
  8231                           
  8232                           ; Switch size 1, requested type "simple"
  8233                           ; Number of cases is 3, Range of values is 0 to 2
  8234                           ; switch strategies available:
  8235                           ; Name         Instructions Cycles
  8236                           ; simple_byte           10     6 (average)
  8237                           ; direct_byte           12     6 (fixed)
  8238                           ; jumptable            260     6 (fixed)
  8239                           ;	Chosen strategy is simple_byte
  8240     0372  0846               	movf	??_SSPA_getPOut,w
  8241     0373  3A00               	xorlw	0	; case 0
  8242     0374  1903               	skipnz
  8243     0375  2B7D               	goto	l873
  8244     0376  3A01               	xorlw	1	; case 1
  8245     0377  1903               	skipnz
  8246     0378  2AF7               	goto	l868
  8247     0379  3A03               	xorlw	3	; case 2
  8248     037A  1903               	skipnz
  8249     037B  2B29               	goto	l3783
  8250     037C  2B7D               	goto	l873
  8251     037D                     l873:
  8252     037D  0008               	return
  8253     037E                     __end_of_SSPA_getPOut:
  8254                           
  8255                           	psect	text20
  8256     0FD6                     __ptext20:	
  8257 ;; *************** function _getADCValue *****************
  8258 ;; Defined at:
  8259 ;;		line 38 in file "sspa.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  channel         1    wreg     enum E9257
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  channel         1    6[BANK0 ] enum E9257
  8264 ;;  i               1   11[BANK0 ] unsigned char 
  8265 ;;  sum             2    9[BANK0 ] unsigned short 
  8266 ;;  sample          2    7[BANK0 ] unsigned short 
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  2    2[BANK0 ] unsigned short 
  8269 ;; Registers used:
  8270 ;;		wreg, status,2, status,0, pclath, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8276 ;;      Params:         0       2       0       0       0       0       0       0
  8277 ;;      Locals:         0       6       0       0       0       0       0       0
  8278 ;;      Temps:          0       2       0       0       0       0       0       0
  8279 ;;      Totals:         0      10       0       0       0       0       0       0
  8280 ;;Total ram usage:       10 bytes
  8281 ;; Hardware stack levels used: 1
  8282 ;; Hardware stack levels required when called: 8
  8283 ;; This function calls:
  8284 ;;		_ADC_GetConversion
  8285 ;; This function is called by:
  8286 ;;		_SSPA_getTemp
  8287 ;;		_SSPA_getPOut
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291     0FD6                     _getADCValue:	
  8292                           ;psect for function _getADCValue
  8293                           
  8294                           
  8295                           ;incstack = 0
  8296                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8297                           ;getADCValue@channel stored from wreg
  8298     0FD6  0020               	movlb	0	; select bank0
  8299     0FD7  00A6               	movwf	getADCValue@channel
  8300     0FD8                     l3709:
  8301                           
  8302                           ;sspa.c: 39:     adc_result_t sum = 0;
  8303     0FD8  01A9               	clrf	getADCValue@sum
  8304     0FD9  01AA               	clrf	getADCValue@sum+1
  8305                           
  8306                           ;sspa.c: 40:     adc_result_t sample;;sspa.c: 42:     for (uint8_t i = 0; i < 32; i++ )
  8307     0FDA  01AB               	clrf	getADCValue@i
  8308     0FDB                     l3715:
  8309                           
  8310                           ;sspa.c: 43:     {;sspa.c: 44:         sample = ADC_GetConversion(channel);
  8311     0FDB  0826               	movf	getADCValue@channel,w
  8312     0FDC  318E  26D4  318F   	fcall	_ADC_GetConversion
  8313     0FDF  0875               	movf	?_ADC_GetConversion+1,w
  8314     0FE0  0020               	movlb	0	; select bank0
  8315     0FE1  00A8               	movwf	getADCValue@sample+1
  8316     0FE2  0874               	movf	?_ADC_GetConversion,w
  8317     0FE3  00A7               	movwf	getADCValue@sample
  8318     0FE4                     l3717:
  8319                           
  8320                           ;sspa.c: 45:         sum += sample;
  8321     0FE4  0827               	movf	getADCValue@sample,w
  8322     0FE5  07A9               	addwf	getADCValue@sum,f
  8323     0FE6  0828               	movf	getADCValue@sample+1,w
  8324     0FE7  3DAA               	addwfc	getADCValue@sum+1,f
  8325     0FE8                     l3719:
  8326                           
  8327                           ;sspa.c: 46:     }
  8328     0FE8  3001               	movlw	1
  8329     0FE9  00A4               	movwf	??_getADCValue
  8330     0FEA  0824               	movf	??_getADCValue,w
  8331     0FEB  07AB               	addwf	getADCValue@i,f
  8332     0FEC                     l3721:
  8333     0FEC  3020               	movlw	32
  8334     0FED  022B               	subwf	getADCValue@i,w
  8335     0FEE  1C03               	skipc
  8336     0FEF  2FF1               	goto	u1821
  8337     0FF0  2FF2               	goto	u1820
  8338     0FF1                     u1821:
  8339     0FF1  2FDB               	goto	l3715
  8340     0FF2                     u1820:
  8341     0FF2                     l3723:
  8342                           
  8343                           ;sspa.c: 48:     return sum >> 5;
  8344     0FF2  082A               	movf	getADCValue@sum+1,w
  8345     0FF3  00A5               	movwf	??_getADCValue+1
  8346     0FF4  0829               	movf	getADCValue@sum,w
  8347     0FF5  00A4               	movwf	??_getADCValue
  8348     0FF6  3005               	movlw	5
  8349     0FF7                     u1835:
  8350     0FF7  36A5               	lsrf	??_getADCValue+1,f
  8351     0FF8  0CA4               	rrf	??_getADCValue,f
  8352     0FF9  0B89               	decfsz	9,f
  8353     0FFA  2FF7               	goto	u1835
  8354     0FFB  0824               	movf	??_getADCValue,w
  8355     0FFC  00A2               	movwf	?_getADCValue
  8356     0FFD  0825               	movf	??_getADCValue+1,w
  8357     0FFE  00A3               	movwf	?_getADCValue+1
  8358     0FFF                     l825:
  8359     0FFF  0008               	return
  8360     1000                     __end_of_getADCValue:
  8361                           
  8362                           	psect	text21
  8363     0ED4                     __ptext21:	
  8364 ;; *************** function _ADC_GetConversion *****************
  8365 ;; Defined at:
  8366 ;;		line 106 in file "mcc_generated_files/adc/src/adc.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  channel         1    wreg     enum E9234
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;  channel         1    1[BANK0 ] enum E9234
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  2    4[COMMON] unsigned short 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8380 ;;      Params:         2       0       0       0       0       0       0       0
  8381 ;;      Locals:         0       1       0       0       0       0       0       0
  8382 ;;      Temps:          0       1       0       0       0       0       0       0
  8383 ;;      Totals:         2       2       0       0       0       0       0       0
  8384 ;;Total ram usage:        4 bytes
  8385 ;; Hardware stack levels used: 1
  8386 ;; Hardware stack levels required when called: 7
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_getADCValue
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394     0ED4                     _ADC_GetConversion:	
  8395                           ;psect for function _ADC_GetConversion
  8396                           
  8397                           
  8398                           ;incstack = 0
  8399                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8400                           ;ADC_GetConversion@channel stored from wreg
  8401     0ED4  0020               	movlb	0	; select bank0
  8402     0ED5  00A1               	movwf	ADC_GetConversion@channel
  8403     0ED6                     l3519:
  8404                           
  8405                           ;mcc_generated_files/adc/src/adc.c: 106: adc_result_t ADC_GetConversion(adc_channel_t ch
      +                          annel);mcc_generated_files/adc/src/adc.c: 107: {;mcc_generated_files/adc/src/adc.c: 109:
      +                               ADCON0bits.CHS = channel;
  8406     0ED6  0821               	movf	ADC_GetConversion@channel,w
  8407     0ED7  00A0               	movwf	??_ADC_GetConversion
  8408     0ED8  0DA0               	rlf	??_ADC_GetConversion,f
  8409     0ED9  0DA0               	rlf	??_ADC_GetConversion,f
  8410     0EDA  0021               	movlb	1	; select bank1
  8411     0EDB  081D               	movf	29,w	;volatile
  8412     0EDC  0020               	movlb	0	; select bank0
  8413     0EDD  0620               	xorwf	??_ADC_GetConversion,w
  8414     0EDE  3983               	andlw	-125
  8415     0EDF  0620               	xorwf	??_ADC_GetConversion,w
  8416     0EE0  0021               	movlb	1	; select bank1
  8417     0EE1  009D               	movwf	29	;volatile
  8418     0EE2                     l3521:
  8419                           
  8420                           ;mcc_generated_files/adc/src/adc.c: 112:     ADCON0bits.ADON = 1;
  8421     0EE2  141D               	bsf	29,0	;volatile
  8422     0EE3                     l3523:
  8423                           
  8424                           ;mcc_generated_files/adc/src/adc.c: 115:     _delay((unsigned long)((5)*(16000000/400000
      +                          0.0)));
  8425     0EE3  3006               	movlw	6
  8426     0EE4                     u2097:
  8427     0EE4  0B89               	decfsz	9,f
  8428     0EE5  2EE4               	goto	u2097
  8429     0EE6  3200               	nop2
  8430     0EE7                     l3525:
  8431                           
  8432                           ;mcc_generated_files/adc/src/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  8433     0EE7  0021               	movlb	1	; select bank1
  8434     0EE8  149D               	bsf	29,1	;volatile
  8435     0EE9                     l42:	
  8436                           ;mcc_generated_files/adc/src/adc.c: 122:     {;mcc_generated_files/adc/src/adc.c: 123:  
      +                             }
  8437                           
  8438                           
  8439                           ;mcc_generated_files/adc/src/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  8440     0EE9  189D               	btfsc	29,1	;volatile
  8441     0EEA  2EEC               	goto	u1541
  8442     0EEB  2EED               	goto	u1540
  8443     0EEC                     u1541:
  8444     0EEC  2EE9               	goto	l42
  8445     0EED                     u1540:
  8446     0EED                     l3527:
  8447                           
  8448                           ;mcc_generated_files/adc/src/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
  8449     0EED  081C               	movf	28,w	;volatile
  8450     0EEE  00F5               	movwf	?_ADC_GetConversion+1
  8451     0EEF  081B               	movf	27,w	;volatile
  8452     0EF0  00F4               	movwf	?_ADC_GetConversion
  8453     0EF1                     l45:
  8454     0EF1  0008               	return
  8455     0EF2                     __end_of_ADC_GetConversion:
  8456                           
  8457                           	psect	text22
  8458     05EF                     __ptext22:	
  8459 ;; *************** function _ADC2dBm *****************
  8460 ;; Defined at:
  8461 ;;		line 65 in file "sspa.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  v               2   26[BANK0 ] unsigned short 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  result          4   32[BANK0 ] long 
  8466 ;;  value           4   28[BANK0 ] long 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      unsigned char 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2, status,0, pclath, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8476 ;;      Params:         0       2       0       0       0       0       0       0
  8477 ;;      Locals:         0       8       0       0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0
  8479 ;;      Totals:         0      10       0       0       0       0       0       0
  8480 ;;Total ram usage:       10 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 8
  8483 ;; This function calls:
  8484 ;;		___aldiv
  8485 ;;		___lmul
  8486 ;; This function is called by:
  8487 ;;		_SSPA_getPOut
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491     05EF                     _ADC2dBm:	
  8492                           ;psect for function _ADC2dBm
  8493                           
  8494     05EF                     l3743:	
  8495                           ;incstack = 0
  8496                           ; Regs used in _ADC2dBm: [wreg+status,2+status,0+pclath+cstack]
  8497                           
  8498                           
  8499                           ;sspa.c: 66:     int32_t value = (int32_t) v;
  8500     05EF  0020               	movlb	0	; select bank0
  8501     05F0  083A               	movf	ADC2dBm@v,w
  8502     05F1  00BC               	movwf	ADC2dBm@value
  8503     05F2  083B               	movf	ADC2dBm@v+1,w
  8504     05F3  00BD               	movwf	ADC2dBm@value+1
  8505     05F4  01BE               	clrf	ADC2dBm@value+2
  8506     05F5  01BF               	clrf	ADC2dBm@value+3
  8507     05F6                     l3745:
  8508                           
  8509                           ;sspa.c: 67:     int32_t result = (uint16_t)(34) + (value * (uint16_t)(16650)) / (uint16
      +                          _t)(1024000);
  8510     05F6  3000               	movlw	0
  8511     05F7  00AF               	movwf	___aldiv@divisor+3
  8512     05F8  3000               	movlw	0
  8513     05F9  00AE               	movwf	___aldiv@divisor+2
  8514     05FA  30A0               	movlw	160
  8515     05FB  00AD               	movwf	___aldiv@divisor+1
  8516     05FC  3000               	movlw	0
  8517     05FD  00AC               	movwf	___aldiv@divisor
  8518     05FE  083F               	movf	ADC2dBm@value+3,w
  8519     05FF  00A3               	movwf	___lmul@multiplier+3
  8520     0600  083E               	movf	ADC2dBm@value+2,w
  8521     0601  00A2               	movwf	___lmul@multiplier+2
  8522     0602  083D               	movf	ADC2dBm@value+1,w
  8523     0603  00A1               	movwf	___lmul@multiplier+1
  8524     0604  083C               	movf	ADC2dBm@value,w
  8525     0605  00A0               	movwf	___lmul@multiplier
  8526     0606  3000               	movlw	0
  8527     0607  00A7               	movwf	___lmul@multiplicand+3
  8528     0608  3000               	movlw	0
  8529     0609  00A6               	movwf	___lmul@multiplicand+2
  8530     060A  3041               	movlw	65
  8531     060B  00A5               	movwf	___lmul@multiplicand+1
  8532     060C  300A               	movlw	10
  8533     060D  00A4               	movwf	___lmul@multiplicand
  8534     060E  3186  26DC  3185   	fcall	___lmul
  8535     0611  0020               	movlb	0	; select bank0
  8536     0612  0823               	movf	?___lmul+3,w
  8537     0613  00B3               	movwf	___aldiv@dividend+3
  8538     0614  0822               	movf	?___lmul+2,w
  8539     0615  00B2               	movwf	___aldiv@dividend+2
  8540     0616  0821               	movf	?___lmul+1,w
  8541     0617  00B1               	movwf	___aldiv@dividend+1
  8542     0618  0820               	movf	?___lmul,w
  8543     0619  00B0               	movwf	___aldiv@dividend
  8544     061A  3182  2264  3185   	fcall	___aldiv
  8545     061D  3022               	movlw	34
  8546     061E  0020               	movlb	0	; select bank0
  8547     061F  072C               	addwf	?___aldiv,w
  8548     0620  00C0               	movwf	ADC2dBm@result
  8549     0621  3000               	movlw	0
  8550     0622  3D2D               	addwfc	?___aldiv+1,w
  8551     0623  00C1               	movwf	ADC2dBm@result+1
  8552     0624  3000               	movlw	0
  8553     0625  3D2E               	addwfc	?___aldiv+2,w
  8554     0626  00C2               	movwf	ADC2dBm@result+2
  8555     0627  3000               	movlw	0
  8556     0628  3D2F               	addwfc	?___aldiv+3,w
  8557     0629  00C3               	movwf	ADC2dBm@result+3
  8558     062A                     l3747:
  8559                           
  8560                           ;sspa.c: 69:     return (uint8_t) result;
  8561     062A  0840               	movf	ADC2dBm@result,w
  8562     062B                     l834:
  8563     062B  0008               	return
  8564     062C                     __end_of_ADC2dBm:
  8565                           
  8566                           	psect	text23
  8567     04F4                     __ptext23:	
  8568 ;; *************** function _ADC2Amp *****************
  8569 ;; Defined at:
  8570 ;;		line 58 in file "sspa.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  v               2   26[BANK0 ] unsigned short 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  result          4   34[BANK0 ] long 
  8575 ;;  value           4   30[BANK0 ] long 
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  4   26[BANK0 ] unsigned long 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, pclath, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8585 ;;      Params:         0       4       0       0       0       0       0       0
  8586 ;;      Locals:         0       8       0       0       0       0       0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0
  8588 ;;      Totals:         0      12       0       0       0       0       0       0
  8589 ;;Total ram usage:       12 bytes
  8590 ;; Hardware stack levels used: 1
  8591 ;; Hardware stack levels required when called: 8
  8592 ;; This function calls:
  8593 ;;		___aldiv
  8594 ;;		___lmul
  8595 ;; This function is called by:
  8596 ;;		_SSPA_getPOut
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600     04F4                     _ADC2Amp:	
  8601                           ;psect for function _ADC2Amp
  8602                           
  8603     04F4                     l3735:	
  8604                           ;incstack = 0
  8605                           ; Regs used in _ADC2Amp: [wreg+status,2+status,0+pclath+cstack]
  8606                           
  8607                           
  8608                           ;sspa.c: 59:     int32_t value = (int32_t) v;
  8609     04F4  0020               	movlb	0	; select bank0
  8610     04F5  083A               	movf	ADC2Amp@v,w
  8611     04F6  00BE               	movwf	ADC2Amp@value
  8612     04F7  083B               	movf	ADC2Amp@v+1,w
  8613     04F8  00BF               	movwf	ADC2Amp@value+1
  8614     04F9  01C0               	clrf	ADC2Amp@value+2
  8615     04FA  01C1               	clrf	ADC2Amp@value+3
  8616     04FB                     l3737:
  8617                           
  8618                           ;sspa.c: 60:     int32_t result = (uint16_t)(0) + (value * (uint16_t)(500)) / (uint16_t)
      +                          (10240);
  8619     04FB  3000               	movlw	0
  8620     04FC  00AF               	movwf	___aldiv@divisor+3
  8621     04FD  3000               	movlw	0
  8622     04FE  00AE               	movwf	___aldiv@divisor+2
  8623     04FF  3028               	movlw	40
  8624     0500  00AD               	movwf	___aldiv@divisor+1
  8625     0501  3000               	movlw	0
  8626     0502  00AC               	movwf	___aldiv@divisor
  8627     0503  0841               	movf	ADC2Amp@value+3,w
  8628     0504  00A3               	movwf	___lmul@multiplier+3
  8629     0505  0840               	movf	ADC2Amp@value+2,w
  8630     0506  00A2               	movwf	___lmul@multiplier+2
  8631     0507  083F               	movf	ADC2Amp@value+1,w
  8632     0508  00A1               	movwf	___lmul@multiplier+1
  8633     0509  083E               	movf	ADC2Amp@value,w
  8634     050A  00A0               	movwf	___lmul@multiplier
  8635     050B  3000               	movlw	0
  8636     050C  00A7               	movwf	___lmul@multiplicand+3
  8637     050D  3000               	movlw	0
  8638     050E  00A6               	movwf	___lmul@multiplicand+2
  8639     050F  3001               	movlw	1
  8640     0510  00A5               	movwf	___lmul@multiplicand+1
  8641     0511  30F4               	movlw	244
  8642     0512  00A4               	movwf	___lmul@multiplicand
  8643     0513  3186  26DC  3184   	fcall	___lmul
  8644     0516  0020               	movlb	0	; select bank0
  8645     0517  0823               	movf	?___lmul+3,w
  8646     0518  00B3               	movwf	___aldiv@dividend+3
  8647     0519  0822               	movf	?___lmul+2,w
  8648     051A  00B2               	movwf	___aldiv@dividend+2
  8649     051B  0821               	movf	?___lmul+1,w
  8650     051C  00B1               	movwf	___aldiv@dividend+1
  8651     051D  0820               	movf	?___lmul,w
  8652     051E  00B0               	movwf	___aldiv@dividend
  8653     051F  3182  2264  3184   	fcall	___aldiv
  8654     0522  0020               	movlb	0	; select bank0
  8655     0523  082F               	movf	?___aldiv+3,w
  8656     0524  00C5               	movwf	ADC2Amp@result+3
  8657     0525  082E               	movf	?___aldiv+2,w
  8658     0526  00C4               	movwf	ADC2Amp@result+2
  8659     0527  082D               	movf	?___aldiv+1,w
  8660     0528  00C3               	movwf	ADC2Amp@result+1
  8661     0529  082C               	movf	?___aldiv,w
  8662     052A  00C2               	movwf	ADC2Amp@result
  8663     052B                     l3739:
  8664                           
  8665                           ;sspa.c: 62:     return (uint32_t) result;
  8666     052B  0845               	movf	ADC2Amp@result+3,w
  8667     052C  00BD               	movwf	?_ADC2Amp+3
  8668     052D  0844               	movf	ADC2Amp@result+2,w
  8669     052E  00BC               	movwf	?_ADC2Amp+2
  8670     052F  0843               	movf	ADC2Amp@result+1,w
  8671     0530  00BB               	movwf	?_ADC2Amp+1
  8672     0531  0842               	movf	ADC2Amp@result,w
  8673     0532  00BA               	movwf	?_ADC2Amp
  8674     0533                     l831:
  8675     0533  0008               	return
  8676     0534                     __end_of_ADC2Amp:
  8677                           
  8678                           	psect	text24
  8679     06DC                     __ptext24:	
  8680 ;; *************** function ___lmul *****************
  8681 ;; Defined at:
  8682 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8685 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  product         4    8[BANK0 ] unsigned long 
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  4    0[BANK0 ] unsigned long 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2, status,0
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8697 ;;      Params:         0       8       0       0       0       0       0       0
  8698 ;;      Locals:         0       4       0       0       0       0       0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0
  8700 ;;      Totals:         0      12       0       0       0       0       0       0
  8701 ;;Total ram usage:       12 bytes
  8702 ;; Hardware stack levels used: 1
  8703 ;; Hardware stack levels required when called: 7
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_ADC2Celsius
  8708 ;;		_ADC2Amp
  8709 ;;		_ADC2dBm
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713     06DC                     ___lmul:	
  8714                           ;psect for function ___lmul
  8715                           
  8716     06DC                     l3557:	
  8717                           ;incstack = 0
  8718                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8719                           
  8720     06DC  3000               	movlw	0
  8721     06DD  0020               	movlb	0	; select bank0
  8722     06DE  00AB               	movwf	___lmul@product+3
  8723     06DF  3000               	movlw	0
  8724     06E0  00AA               	movwf	___lmul@product+2
  8725     06E1  3000               	movlw	0
  8726     06E2  00A9               	movwf	___lmul@product+1
  8727     06E3  3000               	movlw	0
  8728     06E4  00A8               	movwf	___lmul@product
  8729     06E5                     l3559:
  8730     06E5  1C20               	btfss	___lmul@multiplier,0
  8731     06E6  2EE8               	goto	u1581
  8732     06E7  2EE9               	goto	u1580
  8733     06E8                     u1581:
  8734     06E8  2EF1               	goto	l3563
  8735     06E9                     u1580:
  8736     06E9                     l3561:
  8737     06E9  0824               	movf	___lmul@multiplicand,w
  8738     06EA  07A8               	addwf	___lmul@product,f
  8739     06EB  0825               	movf	___lmul@multiplicand+1,w
  8740     06EC  3DA9               	addwfc	___lmul@product+1,f
  8741     06ED  0826               	movf	___lmul@multiplicand+2,w
  8742     06EE  3DAA               	addwfc	___lmul@product+2,f
  8743     06EF  0827               	movf	___lmul@multiplicand+3,w
  8744     06F0  3DAB               	addwfc	___lmul@product+3,f
  8745     06F1                     l3563:
  8746     06F1  3001               	movlw	1
  8747     06F2                     u1595:
  8748     06F2  35A4               	lslf	___lmul@multiplicand,f
  8749     06F3  0DA5               	rlf	___lmul@multiplicand+1,f
  8750     06F4  0DA6               	rlf	___lmul@multiplicand+2,f
  8751     06F5  0DA7               	rlf	___lmul@multiplicand+3,f
  8752     06F6  0B89               	decfsz	9,f
  8753     06F7  2EF2               	goto	u1595
  8754     06F8                     l3565:
  8755     06F8  3001               	movlw	1
  8756     06F9                     u1605:
  8757     06F9  36A3               	lsrf	___lmul@multiplier+3,f
  8758     06FA  0CA2               	rrf	___lmul@multiplier+2,f
  8759     06FB  0CA1               	rrf	___lmul@multiplier+1,f
  8760     06FC  0CA0               	rrf	___lmul@multiplier,f
  8761     06FD  0B89               	decfsz	9,f
  8762     06FE  2EF9               	goto	u1605
  8763     06FF  0823               	movf	___lmul@multiplier+3,w
  8764     0700  0422               	iorwf	___lmul@multiplier+2,w
  8765     0701  0421               	iorwf	___lmul@multiplier+1,w
  8766     0702  0420               	iorwf	___lmul@multiplier,w
  8767     0703  1D03               	skipz
  8768     0704  2F06               	goto	u1611
  8769     0705  2F07               	goto	u1610
  8770     0706                     u1611:
  8771     0706  2EE5               	goto	l3559
  8772     0707                     u1610:
  8773     0707                     l3567:
  8774     0707  082B               	movf	___lmul@product+3,w
  8775     0708  00A3               	movwf	?___lmul+3
  8776     0709  082A               	movf	___lmul@product+2,w
  8777     070A  00A2               	movwf	?___lmul+2
  8778     070B  0829               	movf	___lmul@product+1,w
  8779     070C  00A1               	movwf	?___lmul+1
  8780     070D  0828               	movf	___lmul@product,w
  8781     070E  00A0               	movwf	?___lmul
  8782     070F                     l955:
  8783     070F  0008               	return
  8784     0710                     __end_of___lmul:
  8785                           
  8786                           	psect	text25
  8787     0264                     __ptext25:	
  8788 ;; *************** function ___aldiv *****************
  8789 ;; Defined at:
  8790 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  divisor         4   12[BANK0 ] long 
  8793 ;;  dividend        4   16[BANK0 ] long 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  quotient        4   22[BANK0 ] long 
  8796 ;;  sign            1   21[BANK0 ] unsigned char 
  8797 ;;  counter         1   20[BANK0 ] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  4   12[BANK0 ] long 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8807 ;;      Params:         0       8       0       0       0       0       0       0
  8808 ;;      Locals:         0       6       0       0       0       0       0       0
  8809 ;;      Temps:          1       0       0       0       0       0       0       0
  8810 ;;      Totals:         1      14       0       0       0       0       0       0
  8811 ;;Total ram usage:       15 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 7
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_ADC2Celsius
  8818 ;;		_ADC2Amp
  8819 ;;		_ADC2dBm
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823     0264                     ___aldiv:	
  8824                           ;psect for function ___aldiv
  8825                           
  8826     0264                     l3571:	
  8827                           ;incstack = 0
  8828                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8829                           
  8830     0264  0020               	movlb	0	; select bank0
  8831     0265  01B5               	clrf	___aldiv@sign
  8832     0266                     l3573:
  8833     0266  1FAF               	btfss	___aldiv@divisor+3,7
  8834     0267  2A69               	goto	u1621
  8835     0268  2A6A               	goto	u1620
  8836     0269                     u1621:
  8837     0269  2A77               	goto	l1006
  8838     026A                     u1620:
  8839     026A                     l3575:
  8840     026A  09AC               	comf	___aldiv@divisor,f
  8841     026B  09AD               	comf	___aldiv@divisor+1,f
  8842     026C  09AE               	comf	___aldiv@divisor+2,f
  8843     026D  09AF               	comf	___aldiv@divisor+3,f
  8844     026E  0AAC               	incf	___aldiv@divisor,f
  8845     026F  1903               	skipnz
  8846     0270  0AAD               	incf	___aldiv@divisor+1,f
  8847     0271  1903               	skipnz
  8848     0272  0AAE               	incf	___aldiv@divisor+2,f
  8849     0273  1903               	skipnz
  8850     0274  0AAF               	incf	___aldiv@divisor+3,f
  8851     0275  01B5               	clrf	___aldiv@sign
  8852     0276  0AB5               	incf	___aldiv@sign,f
  8853     0277                     l1006:
  8854     0277  1FB3               	btfss	___aldiv@dividend+3,7
  8855     0278  2A7A               	goto	u1631
  8856     0279  2A7B               	goto	u1630
  8857     027A                     u1631:
  8858     027A  2A8A               	goto	l3581
  8859     027B                     u1630:
  8860     027B                     l3577:
  8861     027B  09B0               	comf	___aldiv@dividend,f
  8862     027C  09B1               	comf	___aldiv@dividend+1,f
  8863     027D  09B2               	comf	___aldiv@dividend+2,f
  8864     027E  09B3               	comf	___aldiv@dividend+3,f
  8865     027F  0AB0               	incf	___aldiv@dividend,f
  8866     0280  1903               	skipnz
  8867     0281  0AB1               	incf	___aldiv@dividend+1,f
  8868     0282  1903               	skipnz
  8869     0283  0AB2               	incf	___aldiv@dividend+2,f
  8870     0284  1903               	skipnz
  8871     0285  0AB3               	incf	___aldiv@dividend+3,f
  8872     0286                     l3579:
  8873     0286  3001               	movlw	1
  8874     0287  00F4               	movwf	??___aldiv
  8875     0288  0874               	movf	??___aldiv,w
  8876     0289  06B5               	xorwf	___aldiv@sign,f
  8877     028A                     l3581:
  8878     028A  3000               	movlw	0
  8879     028B  00B9               	movwf	___aldiv@quotient+3
  8880     028C  3000               	movlw	0
  8881     028D  00B8               	movwf	___aldiv@quotient+2
  8882     028E  3000               	movlw	0
  8883     028F  00B7               	movwf	___aldiv@quotient+1
  8884     0290  3000               	movlw	0
  8885     0291  00B6               	movwf	___aldiv@quotient
  8886     0292                     l3583:
  8887     0292  082F               	movf	___aldiv@divisor+3,w
  8888     0293  042E               	iorwf	___aldiv@divisor+2,w
  8889     0294  042D               	iorwf	___aldiv@divisor+1,w
  8890     0295  042C               	iorwf	___aldiv@divisor,w
  8891     0296  1903               	skipnz
  8892     0297  2A99               	goto	u1641
  8893     0298  2A9A               	goto	u1640
  8894     0299                     u1641:
  8895     0299  2ADB               	goto	l3603
  8896     029A                     u1640:
  8897     029A                     l3585:
  8898     029A  01B4               	clrf	___aldiv@counter
  8899     029B  0AB4               	incf	___aldiv@counter,f
  8900     029C  2AA8               	goto	l3589
  8901     029D                     l3587:
  8902     029D  3001               	movlw	1
  8903     029E                     u1655:
  8904     029E  35AC               	lslf	___aldiv@divisor,f
  8905     029F  0DAD               	rlf	___aldiv@divisor+1,f
  8906     02A0  0DAE               	rlf	___aldiv@divisor+2,f
  8907     02A1  0DAF               	rlf	___aldiv@divisor+3,f
  8908     02A2  0B89               	decfsz	9,f
  8909     02A3  2A9E               	goto	u1655
  8910     02A4  3001               	movlw	1
  8911     02A5  00F4               	movwf	??___aldiv
  8912     02A6  0874               	movf	??___aldiv,w
  8913     02A7  07B4               	addwf	___aldiv@counter,f
  8914     02A8                     l3589:
  8915     02A8  1FAF               	btfss	___aldiv@divisor+3,7
  8916     02A9  2AAB               	goto	u1661
  8917     02AA  2AAC               	goto	u1660
  8918     02AB                     u1661:
  8919     02AB  2A9D               	goto	l3587
  8920     02AC                     u1660:
  8921     02AC                     l3591:
  8922     02AC  3001               	movlw	1
  8923     02AD                     u1675:
  8924     02AD  35B6               	lslf	___aldiv@quotient,f
  8925     02AE  0DB7               	rlf	___aldiv@quotient+1,f
  8926     02AF  0DB8               	rlf	___aldiv@quotient+2,f
  8927     02B0  0DB9               	rlf	___aldiv@quotient+3,f
  8928     02B1  0B89               	decfsz	9,f
  8929     02B2  2AAD               	goto	u1675
  8930     02B3                     l3593:
  8931     02B3  082F               	movf	___aldiv@divisor+3,w
  8932     02B4  0233               	subwf	___aldiv@dividend+3,w
  8933     02B5  1D03               	skipz
  8934     02B6  2AC1               	goto	u1685
  8935     02B7  082E               	movf	___aldiv@divisor+2,w
  8936     02B8  0232               	subwf	___aldiv@dividend+2,w
  8937     02B9  1D03               	skipz
  8938     02BA  2AC1               	goto	u1685
  8939     02BB  082D               	movf	___aldiv@divisor+1,w
  8940     02BC  0231               	subwf	___aldiv@dividend+1,w
  8941     02BD  1D03               	skipz
  8942     02BE  2AC1               	goto	u1685
  8943     02BF  082C               	movf	___aldiv@divisor,w
  8944     02C0  0230               	subwf	___aldiv@dividend,w
  8945     02C1                     u1685:
  8946     02C1  1C03               	skipc
  8947     02C2  2AC4               	goto	u1681
  8948     02C3  2AC5               	goto	u1680
  8949     02C4                     u1681:
  8950     02C4  2ACE               	goto	l3599
  8951     02C5                     u1680:
  8952     02C5                     l3595:
  8953     02C5  082C               	movf	___aldiv@divisor,w
  8954     02C6  02B0               	subwf	___aldiv@dividend,f
  8955     02C7  082D               	movf	___aldiv@divisor+1,w
  8956     02C8  3BB1               	subwfb	___aldiv@dividend+1,f
  8957     02C9  082E               	movf	___aldiv@divisor+2,w
  8958     02CA  3BB2               	subwfb	___aldiv@dividend+2,f
  8959     02CB  082F               	movf	___aldiv@divisor+3,w
  8960     02CC  3BB3               	subwfb	___aldiv@dividend+3,f
  8961     02CD                     l3597:
  8962     02CD  1436               	bsf	___aldiv@quotient,0
  8963     02CE                     l3599:
  8964     02CE  3001               	movlw	1
  8965     02CF                     u1695:
  8966     02CF  36AF               	lsrf	___aldiv@divisor+3,f
  8967     02D0  0CAE               	rrf	___aldiv@divisor+2,f
  8968     02D1  0CAD               	rrf	___aldiv@divisor+1,f
  8969     02D2  0CAC               	rrf	___aldiv@divisor,f
  8970     02D3  0B89               	decfsz	9,f
  8971     02D4  2ACF               	goto	u1695
  8972     02D5                     l3601:
  8973     02D5  3001               	movlw	1
  8974     02D6  02B4               	subwf	___aldiv@counter,f
  8975     02D7  1D03               	btfss	3,2
  8976     02D8  2ADA               	goto	u1701
  8977     02D9  2ADB               	goto	u1700
  8978     02DA                     u1701:
  8979     02DA  2AAC               	goto	l3591
  8980     02DB                     u1700:
  8981     02DB                     l3603:
  8982     02DB  0835               	movf	___aldiv@sign,w
  8983     02DC  1903               	btfsc	3,2
  8984     02DD  2ADF               	goto	u1711
  8985     02DE  2AE0               	goto	u1710
  8986     02DF                     u1711:
  8987     02DF  2AEB               	goto	l3607
  8988     02E0                     u1710:
  8989     02E0                     l3605:
  8990     02E0  09B6               	comf	___aldiv@quotient,f
  8991     02E1  09B7               	comf	___aldiv@quotient+1,f
  8992     02E2  09B8               	comf	___aldiv@quotient+2,f
  8993     02E3  09B9               	comf	___aldiv@quotient+3,f
  8994     02E4  0AB6               	incf	___aldiv@quotient,f
  8995     02E5  1903               	skipnz
  8996     02E6  0AB7               	incf	___aldiv@quotient+1,f
  8997     02E7  1903               	skipnz
  8998     02E8  0AB8               	incf	___aldiv@quotient+2,f
  8999     02E9  1903               	skipnz
  9000     02EA  0AB9               	incf	___aldiv@quotient+3,f
  9001     02EB                     l3607:
  9002     02EB  0839               	movf	___aldiv@quotient+3,w
  9003     02EC  00AF               	movwf	?___aldiv+3
  9004     02ED  0838               	movf	___aldiv@quotient+2,w
  9005     02EE  00AE               	movwf	?___aldiv+2
  9006     02EF  0837               	movf	___aldiv@quotient+1,w
  9007     02F0  00AD               	movwf	?___aldiv+1
  9008     02F1  0836               	movf	___aldiv@quotient,w
  9009     02F2  00AC               	movwf	?___aldiv
  9010     02F3                     l1016:
  9011     02F3  0008               	return
  9012     02F4                     __end_of___aldiv:
  9013                           
  9014                           	psect	text26
  9015     0F5C                     __ptext26:	
  9016 ;; *************** function _KAPS_setRelPos *****************
  9017 ;; Defined at:
  9018 ;;		line 51 in file "kaps.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  offset          1    wreg     char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  offset          1    7[BANK0 ] char 
  9023 ;;  value           1    9[BANK0 ] unsigned char 
  9024 ;;  reg             1    8[BANK0 ] unsigned char 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  1    wreg      void 
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0, pclath, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9034 ;;      Params:         0       0       0       0       0       0       0       0
  9035 ;;      Locals:         0       3       0       0       0       0       0       0
  9036 ;;      Temps:          0       2       0       0       0       0       0       0
  9037 ;;      Totals:         0       5       0       0       0       0       0       0
  9038 ;;Total ram usage:        5 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 10
  9041 ;; This function calls:
  9042 ;;		_I2C1_Write
  9043 ;; This function is called by:
  9044 ;;		_ProcessMsg
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048     0F5C                     _KAPS_setRelPos:	
  9049                           ;psect for function _KAPS_setRelPos
  9050                           
  9051                           
  9052                           ;incstack = 0
  9053                           ; Regs used in _KAPS_setRelPos: [wreg+status,2+status,0+pclath+cstack]
  9054                           ;KAPS_setRelPos@offset stored from wreg
  9055     0F5C  0020               	movlb	0	; select bank0
  9056     0F5D  00A7               	movwf	KAPS_setRelPos@offset
  9057     0F5E                     l3867:
  9058                           
  9059                           ;kaps.c: 52:     uint8_t reg = 0x02;
  9060     0F5E  3002               	movlw	2
  9061     0F5F  00A8               	movwf	KAPS_setRelPos@reg
  9062                           
  9063                           ;kaps.c: 53:     uint8_t value = (uint8_t)offset;
  9064     0F60  0827               	movf	KAPS_setRelPos@offset,w
  9065     0F61  00A9               	movwf	KAPS_setRelPos@value
  9066     0F62                     l3869:
  9067                           
  9068                           ;kaps.c: 55:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9069     0F62  0864               	movf	_kaps,w
  9070     0F63  00A5               	movwf	??_KAPS_setRelPos
  9071     0F64  01A6               	clrf	??_KAPS_setRelPos+1
  9072     0F65  0825               	movf	??_KAPS_setRelPos,w
  9073     0F66  00A0               	movwf	I2C1_Write@address
  9074     0F67  0826               	movf	??_KAPS_setRelPos+1,w
  9075     0F68  00A1               	movwf	I2C1_Write@address+1
  9076     0F69  3028               	movlw	(low (KAPS_setRelPos@reg| 0))& (0+255)
  9077     0F6A  00A2               	movwf	I2C1_Write@data
  9078     0F6B  3001               	movlw	1
  9079     0F6C  00A3               	movwf	I2C1_Write@dataLength
  9080     0F6D  3000               	movlw	0
  9081     0F6E  00A4               	movwf	I2C1_Write@dataLength+1
  9082     0F6F  318E  26B6  318F   	fcall	_I2C1_Write
  9083     0F72                     l3871:
  9084                           
  9085                           ;kaps.c: 56:     I2C1_Write(kaps.m_bAddr, &value, 1);
  9086     0F72  0020               	movlb	0	; select bank0
  9087     0F73  0864               	movf	_kaps,w
  9088     0F74  00A5               	movwf	??_KAPS_setRelPos
  9089     0F75  01A6               	clrf	??_KAPS_setRelPos+1
  9090     0F76  0825               	movf	??_KAPS_setRelPos,w
  9091     0F77  00A0               	movwf	I2C1_Write@address
  9092     0F78  0826               	movf	??_KAPS_setRelPos+1,w
  9093     0F79  00A1               	movwf	I2C1_Write@address+1
  9094     0F7A  3029               	movlw	(low (KAPS_setRelPos@value| 0))& (0+255)
  9095     0F7B  00A2               	movwf	I2C1_Write@data
  9096     0F7C  3001               	movlw	1
  9097     0F7D  00A3               	movwf	I2C1_Write@dataLength
  9098     0F7E  3000               	movlw	0
  9099     0F7F  00A4               	movwf	I2C1_Write@dataLength+1
  9100     0F80  318E  26B6  318F   	fcall	_I2C1_Write
  9101     0F83                     l722:
  9102     0F83  0008               	return
  9103     0F84                     __end_of_KAPS_setRelPos:
  9104                           
  9105                           	psect	text27
  9106     0710                     __ptext27:	
  9107 ;; *************** function _KAPS_setAbsPos *****************
  9108 ;; Defined at:
  9109 ;;		line 36 in file "kaps.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  pos             4   13[BANK0 ] unsigned long 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;  data            4   19[BANK0 ] unsigned char [4]
  9114 ;;  reg             1   23[BANK0 ] unsigned char 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  1    wreg      void 
  9117 ;; Registers used:
  9118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9124 ;;      Params:         0       4       0       0       0       0       0       0
  9125 ;;      Locals:         0       5       0       0       0       0       0       0
  9126 ;;      Temps:          0       2       0       0       0       0       0       0
  9127 ;;      Totals:         0      11       0       0       0       0       0       0
  9128 ;;Total ram usage:       11 bytes
  9129 ;; Hardware stack levels used: 1
  9130 ;; Hardware stack levels required when called: 10
  9131 ;; This function calls:
  9132 ;;		_I2C1_Write
  9133 ;;		_unpackLong
  9134 ;; This function is called by:
  9135 ;;		_ProcessMsg
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139     0710                     _KAPS_setAbsPos:	
  9140                           ;psect for function _KAPS_setAbsPos
  9141                           
  9142     0710                     l3859:	
  9143                           ;incstack = 0
  9144                           ; Regs used in _KAPS_setAbsPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9145                           
  9146                           
  9147                           ;kaps.c: 37:     uint8_t reg = 0x01;
  9148     0710  0020               	movlb	0	; select bank0
  9149     0711  01B7               	clrf	KAPS_setAbsPos@reg
  9150     0712  0AB7               	incf	KAPS_setAbsPos@reg,f
  9151     0713                     l3861:
  9152                           
  9153                           ;kaps.c: 38:     uint8_t data[4];;kaps.c: 40:     unpackLong(pos, data);
  9154     0713  0830               	movf	KAPS_setAbsPos@pos+3,w
  9155     0714  00A3               	movwf	unpackLong@value+3
  9156     0715  082F               	movf	KAPS_setAbsPos@pos+2,w
  9157     0716  00A2               	movwf	unpackLong@value+2
  9158     0717  082E               	movf	KAPS_setAbsPos@pos+1,w
  9159     0718  00A1               	movwf	unpackLong@value+1
  9160     0719  082D               	movf	KAPS_setAbsPos@pos,w
  9161     071A  00A0               	movwf	unpackLong@value
  9162     071B  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9163     071C  00A4               	movwf	unpackLong@data
  9164     071D  3184  246C  3187   	fcall	_unpackLong
  9165     0720                     l3863:
  9166                           
  9167                           ;kaps.c: 42:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9168     0720  0020               	movlb	0	; select bank0
  9169     0721  0864               	movf	_kaps,w
  9170     0722  00B1               	movwf	??_KAPS_setAbsPos
  9171     0723  01B2               	clrf	??_KAPS_setAbsPos+1
  9172     0724  0831               	movf	??_KAPS_setAbsPos,w
  9173     0725  00A0               	movwf	I2C1_Write@address
  9174     0726  0832               	movf	??_KAPS_setAbsPos+1,w
  9175     0727  00A1               	movwf	I2C1_Write@address+1
  9176     0728  3037               	movlw	(low (KAPS_setAbsPos@reg| 0))& (0+255)
  9177     0729  00A2               	movwf	I2C1_Write@data
  9178     072A  3001               	movlw	1
  9179     072B  00A3               	movwf	I2C1_Write@dataLength
  9180     072C  3000               	movlw	0
  9181     072D  00A4               	movwf	I2C1_Write@dataLength+1
  9182     072E  318E  26B6  3187   	fcall	_I2C1_Write
  9183     0731                     l3865:
  9184                           
  9185                           ;kaps.c: 43:     I2C1_Write(kaps.m_bAddr, data, 4);
  9186     0731  0020               	movlb	0	; select bank0
  9187     0732  0864               	movf	_kaps,w
  9188     0733  00B1               	movwf	??_KAPS_setAbsPos
  9189     0734  01B2               	clrf	??_KAPS_setAbsPos+1
  9190     0735  0831               	movf	??_KAPS_setAbsPos,w
  9191     0736  00A0               	movwf	I2C1_Write@address
  9192     0737  0832               	movf	??_KAPS_setAbsPos+1,w
  9193     0738  00A1               	movwf	I2C1_Write@address+1
  9194     0739  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9195     073A  00A2               	movwf	I2C1_Write@data
  9196     073B  3004               	movlw	4
  9197     073C  00A3               	movwf	I2C1_Write@dataLength
  9198     073D  3000               	movlw	0
  9199     073E  00A4               	movwf	I2C1_Write@dataLength+1
  9200     073F  318E  26B6  3187   	fcall	_I2C1_Write
  9201     0742                     l719:
  9202     0742  0008               	return
  9203     0743                     __end_of_KAPS_setAbsPos:
  9204                           
  9205                           	psect	text28
  9206     0773                     __ptext28:	
  9207 ;; *************** function _KAPS_getStatus *****************
  9208 ;; Defined at:
  9209 ;;		line 81 in file "kaps.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;		None
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  data            1    8[BANK0 ] unsigned char 
  9214 ;;  reg             1    7[BANK0 ] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, pclath, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9224 ;;      Params:         0       0       0       0       0       0       0       0
  9225 ;;      Locals:         0       2       0       0       0       0       0       0
  9226 ;;      Temps:          0       2       0       0       0       0       0       0
  9227 ;;      Totals:         0       4       0       0       0       0       0       0
  9228 ;;Total ram usage:        4 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; Hardware stack levels required when called: 10
  9231 ;; This function calls:
  9232 ;;		_I2C1_Read
  9233 ;;		_I2C1_Write
  9234 ;; This function is called by:
  9235 ;;		_ProcessMsg
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239     0773                     _KAPS_getStatus:	
  9240                           ;psect for function _KAPS_getStatus
  9241                           
  9242     0773                     l3805:	
  9243                           ;incstack = 0
  9244                           ; Regs used in _KAPS_getStatus: [wreg+status,2+status,0+pclath+cstack]
  9245                           
  9246                           
  9247                           ;kaps.c: 82:     uint8_t reg = 0xFF;
  9248     0773  30FF               	movlw	255
  9249     0774  0020               	movlb	0	; select bank0
  9250     0775  00A7               	movwf	KAPS_getStatus@reg
  9251     0776                     l3807:
  9252                           
  9253                           ;kaps.c: 83:     uint8_t data = 0x00;
  9254     0776  01A8               	clrf	KAPS_getStatus@data
  9255     0777                     l3809:
  9256                           
  9257                           ;kaps.c: 85:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9258     0777  0864               	movf	_kaps,w
  9259     0778  00A5               	movwf	??_KAPS_getStatus
  9260     0779  01A6               	clrf	??_KAPS_getStatus+1
  9261     077A  0825               	movf	??_KAPS_getStatus,w
  9262     077B  00A0               	movwf	I2C1_Write@address
  9263     077C  0826               	movf	??_KAPS_getStatus+1,w
  9264     077D  00A1               	movwf	I2C1_Write@address+1
  9265     077E  3027               	movlw	(low (KAPS_getStatus@reg| 0))& (0+255)
  9266     077F  00A2               	movwf	I2C1_Write@data
  9267     0780  3001               	movlw	1
  9268     0781  00A3               	movwf	I2C1_Write@dataLength
  9269     0782  3000               	movlw	0
  9270     0783  00A4               	movwf	I2C1_Write@dataLength+1
  9271     0784  318E  26B6  3187   	fcall	_I2C1_Write
  9272     0787                     l3811:
  9273                           
  9274                           ;kaps.c: 87:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9275     0787  0020               	movlb	0	; select bank0
  9276     0788  0864               	movf	_kaps,w
  9277     0789  00A5               	movwf	??_KAPS_getStatus
  9278     078A  01A6               	clrf	??_KAPS_getStatus+1
  9279     078B  0825               	movf	??_KAPS_getStatus,w
  9280     078C  00A0               	movwf	I2C1_Read@address
  9281     078D  0826               	movf	??_KAPS_getStatus+1,w
  9282     078E  00A1               	movwf	I2C1_Read@address+1
  9283     078F  3028               	movlw	(low (KAPS_getStatus@data| 0))& (0+255)
  9284     0790  00A2               	movwf	I2C1_Read@data
  9285     0791  3001               	movlw	1
  9286     0792  00A3               	movwf	I2C1_Read@dataLength
  9287     0793  3000               	movlw	0
  9288     0794  00A4               	movwf	I2C1_Read@dataLength+1
  9289     0795  318F  2714  3187   	fcall	_I2C1_Read
  9290     0798  3A00               	xorlw	0
  9291     0799  1903               	skipnz
  9292     079A  2F9C               	goto	u1891
  9293     079B  2F9D               	goto	u1890
  9294     079C                     u1891:
  9295     079C  2FA0               	goto	l729
  9296     079D                     u1890:
  9297     079D                     l3813:
  9298                           
  9299                           ;kaps.c: 88:         kaps.m_Status = (kaps_status_t) data;
  9300     079D  0020               	movlb	0	; select bank0
  9301     079E  0828               	movf	KAPS_getStatus@data,w
  9302     079F  00E5               	movwf	_kaps+1
  9303     07A0                     l729:
  9304     07A0  0008               	return
  9305     07A1                     __end_of_KAPS_getStatus:
  9306                           
  9307                           	psect	text29
  9308     0574                     __ptext29:	
  9309 ;; *************** function _KAPS_getPos *****************
  9310 ;; Defined at:
  9311 ;;		line 107 in file "kaps.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;  data            4   15[BANK0 ] unsigned char [4]
  9316 ;;  reg             1   19[BANK0 ] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9326 ;;      Params:         0       0       0       0       0       0       0       0
  9327 ;;      Locals:         0       5       0       0       0       0       0       0
  9328 ;;      Temps:          0       2       0       0       0       0       0       0
  9329 ;;      Totals:         0       7       0       0       0       0       0       0
  9330 ;;Total ram usage:        7 bytes
  9331 ;; Hardware stack levels used: 1
  9332 ;; Hardware stack levels required when called: 10
  9333 ;; This function calls:
  9334 ;;		_I2C1_Read
  9335 ;;		_I2C1_Write
  9336 ;;		_packLong
  9337 ;; This function is called by:
  9338 ;;		_ProcessMsg
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342     0574                     _KAPS_getPos:	
  9343                           ;psect for function _KAPS_getPos
  9344                           
  9345     0574                     l3815:	
  9346                           ;incstack = 0
  9347                           ; Regs used in _KAPS_getPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9348                           
  9349                           
  9350                           ;kaps.c: 108:     uint8_t reg = 0x00;
  9351     0574  0020               	movlb	0	; select bank0
  9352     0575  01B3               	clrf	KAPS_getPos@reg
  9353     0576                     l3817:
  9354                           
  9355                           ;kaps.c: 109:     uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
  9356     0576  3000               	movlw	0
  9357     0577  00B2               	movwf	KAPS_getPos@data+3
  9358     0578  3000               	movlw	0
  9359     0579  00B1               	movwf	KAPS_getPos@data+2
  9360     057A  3000               	movlw	0
  9361     057B  00B0               	movwf	KAPS_getPos@data+1
  9362     057C  3000               	movlw	0
  9363     057D  00AF               	movwf	KAPS_getPos@data
  9364     057E                     l3819:
  9365                           
  9366                           ;kaps.c: 111:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9367     057E  0864               	movf	_kaps,w
  9368     057F  00AD               	movwf	??_KAPS_getPos
  9369     0580  01AE               	clrf	??_KAPS_getPos+1
  9370     0581  082D               	movf	??_KAPS_getPos,w
  9371     0582  00A0               	movwf	I2C1_Write@address
  9372     0583  082E               	movf	??_KAPS_getPos+1,w
  9373     0584  00A1               	movwf	I2C1_Write@address+1
  9374     0585  3033               	movlw	(low (KAPS_getPos@reg| 0))& (0+255)
  9375     0586  00A2               	movwf	I2C1_Write@data
  9376     0587  3001               	movlw	1
  9377     0588  00A3               	movwf	I2C1_Write@dataLength
  9378     0589  3000               	movlw	0
  9379     058A  00A4               	movwf	I2C1_Write@dataLength+1
  9380     058B  318E  26B6  3185   	fcall	_I2C1_Write
  9381     058E                     l3821:
  9382                           
  9383                           ;kaps.c: 113:     if (I2C1_Read(kaps.m_bAddr, data, 4))
  9384     058E  0020               	movlb	0	; select bank0
  9385     058F  0864               	movf	_kaps,w
  9386     0590  00AD               	movwf	??_KAPS_getPos
  9387     0591  01AE               	clrf	??_KAPS_getPos+1
  9388     0592  082D               	movf	??_KAPS_getPos,w
  9389     0593  00A0               	movwf	I2C1_Read@address
  9390     0594  082E               	movf	??_KAPS_getPos+1,w
  9391     0595  00A1               	movwf	I2C1_Read@address+1
  9392     0596  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9393     0597  00A2               	movwf	I2C1_Read@data
  9394     0598  3004               	movlw	4
  9395     0599  00A3               	movwf	I2C1_Read@dataLength
  9396     059A  3000               	movlw	0
  9397     059B  00A4               	movwf	I2C1_Read@dataLength+1
  9398     059C  318F  2714  3185   	fcall	_I2C1_Read
  9399     059F  3A00               	xorlw	0
  9400     05A0  1903               	skipnz
  9401     05A1  2DA3               	goto	u1901
  9402     05A2  2DA4               	goto	u1900
  9403     05A3                     u1901:
  9404     05A3  2DB1               	goto	l739
  9405     05A4                     u1900:
  9406     05A4                     l3823:
  9407                           
  9408                           ;kaps.c: 114:         kaps.m_lAbsPos = packLong(data);
  9409     05A4  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9410     05A5  3183  237E  3185   	fcall	_packLong
  9411     05A8  0020               	movlb	0	; select bank0
  9412     05A9  0823               	movf	?_packLong+3,w
  9413     05AA  00E9               	movwf	_kaps+5
  9414     05AB  0822               	movf	?_packLong+2,w
  9415     05AC  00E8               	movwf	_kaps+4
  9416     05AD  0821               	movf	?_packLong+1,w
  9417     05AE  00E7               	movwf	_kaps+3
  9418     05AF  0820               	movf	?_packLong,w
  9419     05B0  00E6               	movwf	_kaps+2
  9420     05B1                     l739:
  9421     05B1  0008               	return
  9422     05B2                     __end_of_KAPS_getPos:
  9423                           
  9424                           	psect	text30
  9425     037E                     __ptext30:	
  9426 ;; *************** function _packLong *****************
  9427 ;; Defined at:
  9428 ;;		line 20 in file "utils.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  data            1    wreg     PTR unsigned char 
  9431 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  data            1   12[BANK0 ] PTR unsigned char 
  9434 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9435 ;;  result          4    8[BANK0 ] unsigned long 
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  4    0[BANK0 ] unsigned long 
  9438 ;; Registers used:
  9439 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9445 ;;      Params:         0       4       0       0       0       0       0       0
  9446 ;;      Locals:         0       5       0       0       0       0       0       0
  9447 ;;      Temps:          0       4       0       0       0       0       0       0
  9448 ;;      Totals:         0      13       0       0       0       0       0       0
  9449 ;;Total ram usage:       13 bytes
  9450 ;; Hardware stack levels used: 1
  9451 ;; Hardware stack levels required when called: 7
  9452 ;; This function calls:
  9453 ;;		Nothing
  9454 ;; This function is called by:
  9455 ;;		_ProcessMsg
  9456 ;;		_KAPS_getPos
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460     037E                     _packLong:	
  9461                           ;psect for function _packLong
  9462                           
  9463                           
  9464                           ;incstack = 0
  9465                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  9466                           ;packLong@data stored from wreg
  9467     037E  0020               	movlb	0	; select bank0
  9468     037F  00AC               	movwf	packLong@data
  9469     0380                     l3697:
  9470     0380                     l3699:
  9471                           
  9472                           ;utils.c: 26:     result = (uint32_t) data[0] << 24;
  9473     0380  082C               	movf	packLong@data,w
  9474     0381  0086               	movwf	6
  9475     0382  0187               	clrf	7
  9476     0383  0801               	movf	1,w
  9477     0384  00A4               	movwf	??_packLong
  9478     0385  01A5               	clrf	??_packLong+1
  9479     0386  01A6               	clrf	??_packLong+2
  9480     0387  01A7               	clrf	??_packLong+3
  9481     0388  3018               	movlw	24
  9482     0389                     u1795:
  9483     0389  35A4               	lslf	??_packLong,f
  9484     038A  0DA5               	rlf	??_packLong+1,f
  9485     038B  0DA6               	rlf	??_packLong+2,f
  9486     038C  0DA7               	rlf	??_packLong+3,f
  9487     038D                     u1790:
  9488     038D  0B89               	decfsz	9,f
  9489     038E  2B89               	goto	u1795
  9490     038F  0827               	movf	??_packLong+3,w
  9491     0390  00AB               	movwf	packLong@result+3
  9492     0391  0826               	movf	??_packLong+2,w
  9493     0392  00AA               	movwf	packLong@result+2
  9494     0393  0825               	movf	??_packLong+1,w
  9495     0394  00A9               	movwf	packLong@result+1
  9496     0395  0824               	movf	??_packLong,w
  9497     0396  00A8               	movwf	packLong@result
  9498     0397                     l3701:
  9499                           
  9500                           ;utils.c: 27:     result |= (uint32_t) data[1] << 16;
  9501     0397  0A2C               	incf	packLong@data,w
  9502     0398  0086               	movwf	6
  9503     0399  0187               	clrf	7
  9504     039A  0801               	movf	1,w
  9505     039B  00A4               	movwf	??_packLong
  9506     039C  01A5               	clrf	??_packLong+1
  9507     039D  01A6               	clrf	??_packLong+2
  9508     039E  01A7               	clrf	??_packLong+3
  9509     039F  3010               	movlw	16
  9510     03A0                     u1805:
  9511     03A0  35A4               	lslf	??_packLong,f
  9512     03A1  0DA5               	rlf	??_packLong+1,f
  9513     03A2  0DA6               	rlf	??_packLong+2,f
  9514     03A3  0DA7               	rlf	??_packLong+3,f
  9515     03A4                     u1800:
  9516     03A4  0B89               	decfsz	9,f
  9517     03A5  2BA0               	goto	u1805
  9518     03A6  0824               	movf	??_packLong,w
  9519     03A7  04A8               	iorwf	packLong@result,f
  9520     03A8  0825               	movf	??_packLong+1,w
  9521     03A9  04A9               	iorwf	packLong@result+1,f
  9522     03AA  0826               	movf	??_packLong+2,w
  9523     03AB  04AA               	iorwf	packLong@result+2,f
  9524     03AC  0827               	movf	??_packLong+3,w
  9525     03AD  04AB               	iorwf	packLong@result+3,f
  9526     03AE                     l3703:
  9527                           
  9528                           ;utils.c: 28:     result |= (uint32_t) data[2] << 8;
  9529     03AE  082C               	movf	packLong@data,w
  9530     03AF  3E02               	addlw	2
  9531     03B0  0086               	movwf	6
  9532     03B1  0187               	clrf	7
  9533     03B2  0801               	movf	1,w
  9534     03B3  00A4               	movwf	??_packLong
  9535     03B4  01A5               	clrf	??_packLong+1
  9536     03B5  01A6               	clrf	??_packLong+2
  9537     03B6  01A7               	clrf	??_packLong+3
  9538     03B7  3008               	movlw	8
  9539     03B8                     u1815:
  9540     03B8  35A4               	lslf	??_packLong,f
  9541     03B9  0DA5               	rlf	??_packLong+1,f
  9542     03BA  0DA6               	rlf	??_packLong+2,f
  9543     03BB  0DA7               	rlf	??_packLong+3,f
  9544     03BC                     u1810:
  9545     03BC  0B89               	decfsz	9,f
  9546     03BD  2BB8               	goto	u1815
  9547     03BE  0824               	movf	??_packLong,w
  9548     03BF  04A8               	iorwf	packLong@result,f
  9549     03C0  0825               	movf	??_packLong+1,w
  9550     03C1  04A9               	iorwf	packLong@result+1,f
  9551     03C2  0826               	movf	??_packLong+2,w
  9552     03C3  04AA               	iorwf	packLong@result+2,f
  9553     03C4  0827               	movf	??_packLong+3,w
  9554     03C5  04AB               	iorwf	packLong@result+3,f
  9555     03C6                     l3705:
  9556                           
  9557                           ;utils.c: 29:     result |= (uint32_t) data[3];
  9558     03C6  082C               	movf	packLong@data,w
  9559     03C7  3E03               	addlw	3
  9560     03C8  0086               	movwf	6
  9561     03C9  0187               	clrf	7
  9562     03CA  0801               	movf	1,w
  9563     03CB  04A8               	iorwf	packLong@result,f
  9564                           
  9565                           ;utils.c: 31:     return result;
  9566     03CC  082B               	movf	packLong@result+3,w
  9567     03CD  00A3               	movwf	?_packLong+3
  9568     03CE  082A               	movf	packLong@result+2,w
  9569     03CF  00A2               	movwf	?_packLong+2
  9570     03D0  0829               	movf	packLong@result+1,w
  9571     03D1  00A1               	movwf	?_packLong+1
  9572     03D2  0828               	movf	packLong@result,w
  9573     03D3  00A0               	movwf	?_packLong
  9574     03D4                     l742:
  9575     03D4  0008               	return
  9576     03D5                     __end_of_packLong:
  9577                           
  9578                           	psect	text31
  9579     07A1                     __ptext31:	
  9580 ;; *************** function _KAPS_getIndex *****************
  9581 ;; Defined at:
  9582 ;;		line 94 in file "kaps.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;		None
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  data            1    8[BANK0 ] unsigned char 
  9587 ;;  reg             1    7[BANK0 ] unsigned char 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2, status,0, pclath, cstack
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9597 ;;      Params:         0       0       0       0       0       0       0       0
  9598 ;;      Locals:         0       2       0       0       0       0       0       0
  9599 ;;      Temps:          0       2       0       0       0       0       0       0
  9600 ;;      Totals:         0       4       0       0       0       0       0       0
  9601 ;;Total ram usage:        4 bytes
  9602 ;; Hardware stack levels used: 1
  9603 ;; Hardware stack levels required when called: 10
  9604 ;; This function calls:
  9605 ;;		_I2C1_Read
  9606 ;;		_I2C1_Write
  9607 ;; This function is called by:
  9608 ;;		_ProcessMsg
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612     07A1                     _KAPS_getIndex:	
  9613                           ;psect for function _KAPS_getIndex
  9614                           
  9615     07A1                     l3825:	
  9616                           ;incstack = 0
  9617                           ; Regs used in _KAPS_getIndex: [wreg+status,2+status,0+pclath+cstack]
  9618                           
  9619                           
  9620                           ;kaps.c: 95:     uint8_t reg = 0xFE;
  9621     07A1  30FE               	movlw	254
  9622     07A2  0020               	movlb	0	; select bank0
  9623     07A3  00A7               	movwf	KAPS_getIndex@reg
  9624     07A4                     l3827:
  9625                           
  9626                           ;kaps.c: 96:     uint8_t data = 0x00;
  9627     07A4  01A8               	clrf	KAPS_getIndex@data
  9628     07A5                     l3829:
  9629                           
  9630                           ;kaps.c: 98:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9631     07A5  0864               	movf	_kaps,w
  9632     07A6  00A5               	movwf	??_KAPS_getIndex
  9633     07A7  01A6               	clrf	??_KAPS_getIndex+1
  9634     07A8  0825               	movf	??_KAPS_getIndex,w
  9635     07A9  00A0               	movwf	I2C1_Write@address
  9636     07AA  0826               	movf	??_KAPS_getIndex+1,w
  9637     07AB  00A1               	movwf	I2C1_Write@address+1
  9638     07AC  3027               	movlw	(low (KAPS_getIndex@reg| 0))& (0+255)
  9639     07AD  00A2               	movwf	I2C1_Write@data
  9640     07AE  3001               	movlw	1
  9641     07AF  00A3               	movwf	I2C1_Write@dataLength
  9642     07B0  3000               	movlw	0
  9643     07B1  00A4               	movwf	I2C1_Write@dataLength+1
  9644     07B2  318E  26B6  3187   	fcall	_I2C1_Write
  9645     07B5                     l3831:
  9646                           
  9647                           ;kaps.c: 100:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9648     07B5  0020               	movlb	0	; select bank0
  9649     07B6  0864               	movf	_kaps,w
  9650     07B7  00A5               	movwf	??_KAPS_getIndex
  9651     07B8  01A6               	clrf	??_KAPS_getIndex+1
  9652     07B9  0825               	movf	??_KAPS_getIndex,w
  9653     07BA  00A0               	movwf	I2C1_Read@address
  9654     07BB  0826               	movf	??_KAPS_getIndex+1,w
  9655     07BC  00A1               	movwf	I2C1_Read@address+1
  9656     07BD  3028               	movlw	(low (KAPS_getIndex@data| 0))& (0+255)
  9657     07BE  00A2               	movwf	I2C1_Read@data
  9658     07BF  3001               	movlw	1
  9659     07C0  00A3               	movwf	I2C1_Read@dataLength
  9660     07C1  3000               	movlw	0
  9661     07C2  00A4               	movwf	I2C1_Read@dataLength+1
  9662     07C3  318F  2714  3187   	fcall	_I2C1_Read
  9663     07C6  3A00               	xorlw	0
  9664     07C7  1903               	skipnz
  9665     07C8  2FCA               	goto	u1911
  9666     07C9  2FCB               	goto	u1910
  9667     07CA                     u1911:
  9668     07CA  2FCE               	goto	l733
  9669     07CB                     u1910:
  9670     07CB                     l3833:
  9671                           
  9672                           ;kaps.c: 101:         kaps.m_bIdxPos = data;
  9673     07CB  0020               	movlb	0	; select bank0
  9674     07CC  0828               	movf	KAPS_getIndex@data,w
  9675     07CD  00EA               	movwf	_kaps+6
  9676     07CE                     l733:
  9677     07CE  0008               	return
  9678     07CF                     __end_of_KAPS_getIndex:
  9679                           
  9680                           	psect	text32
  9681     0F14                     __ptext32:	
  9682 ;; *************** function _I2C1_Read *****************
  9683 ;; Defined at:
  9684 ;;		line 161 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  address         2    0[BANK0 ] unsigned short 
  9687 ;;  data            1    2[BANK0 ] PTR unsigned char 
  9688 ;;		 -> KAPS_getPos@data(4), KAPS_getIndex@data(1), KAPS_getStatus@data(1), 
  9689 ;;  dataLength      2    3[BANK0 ] unsigned int 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  retStatus       1    5[COMMON] _Bool 
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      _Bool 
  9694 ;; Registers used:
  9695 ;;		wreg, status,2, status,0, pclath, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9701 ;;      Params:         0       5       0       0       0       0       0       0
  9702 ;;      Locals:         1       0       0       0       0       0       0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0
  9704 ;;      Totals:         1       5       0       0       0       0       0       0
  9705 ;;Total ram usage:        6 bytes
  9706 ;; Hardware stack levels used: 1
  9707 ;; Hardware stack levels required when called: 9
  9708 ;; This function calls:
  9709 ;;		_I2C1_IsBusy
  9710 ;;		_I2C1_ReadStart
  9711 ;; This function is called by:
  9712 ;;		_KAPS_getStatus
  9713 ;;		_KAPS_getIndex
  9714 ;;		_KAPS_getPos
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718     0F14                     _I2C1_Read:	
  9719                           ;psect for function _I2C1_Read
  9720                           
  9721     0F14                     l3635:	
  9722                           ;incstack = 0
  9723                           ; Regs used in _I2C1_Read: [wreg+status,2+status,0+pclath+cstack]
  9724                           
  9725                           
  9726                           ;mcc_generated_files/i2c_host/src/mssp.c: 161: _Bool I2C1_Read(uint16_t address, uint8_t
      +                           *data, size_t dataLength);mcc_generated_files/i2c_host/src/mssp.c: 162: {;mcc_generated
      +                          _files/i2c_host/src/mssp.c: 163:     _Bool retStatus = 0;
  9727     0F14  01F5               	clrf	I2C1_Read@retStatus
  9728     0F15                     l3637:
  9729                           
  9730                           ;mcc_generated_files/i2c_host/src/mssp.c: 164:     if (!I2C1_IsBusy())
  9731     0F15  318E  2610  318F   	fcall	_I2C1_IsBusy
  9732     0F18  3A00               	xorlw	0
  9733     0F19  1D03               	skipz
  9734     0F1A  2F1C               	goto	u1731
  9735     0F1B  2F1D               	goto	u1730
  9736     0F1C                     u1731:
  9737     0F1C  2F34               	goto	l3657
  9738     0F1D                     u1730:
  9739     0F1D                     l3639:
  9740                           
  9741                           ;mcc_generated_files/i2c_host/src/mssp.c: 165:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 166:         i2c1Status.busy = 1;
  9742     0F1D  3001               	movlw	1
  9743     0F1E  0020               	movlb	0	; select bank0
  9744     0F1F  00D2               	movwf	_i2c1Status	;volatile
  9745                           
  9746                           ;mcc_generated_files/i2c_host/src/mssp.c: 167:         i2c1Status.address = address;
  9747     0F20  0821               	movf	I2C1_Read@address+1,w
  9748     0F21  00D4               	movwf	_i2c1Status+2	;volatile
  9749     0F22  0820               	movf	I2C1_Read@address,w
  9750     0F23  00D3               	movwf	_i2c1Status+1	;volatile
  9751     0F24                     l3641:
  9752                           
  9753                           ;mcc_generated_files/i2c_host/src/mssp.c: 168:         i2c1Status.switchToRead = 0;
  9754     0F24  01DB               	clrf	_i2c1Status+9	;volatile
  9755     0F25                     l3643:
  9756                           
  9757                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:         i2c1Status.readPtr = data;
  9758     0F25  0822               	movf	I2C1_Read@data,w
  9759     0F26  00D8               	movwf	low ((_i2c1Status| 0+6))	;volatile
  9760     0F27                     l3645:
  9761                           
  9762                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:         i2c1Status.readLength = dataLengt
      +                          h;
  9763     0F27  0824               	movf	I2C1_Read@dataLength+1,w
  9764     0F28  00DA               	movwf	_i2c1Status+8	;volatile
  9765     0F29  0823               	movf	I2C1_Read@dataLength,w
  9766     0F2A  00D9               	movwf	_i2c1Status+7	;volatile
  9767     0F2B                     l3647:
  9768                           
  9769                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:         i2c1Status.writePtr = ((void*)0);
  9770     0F2B  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
  9771     0F2C                     l3649:
  9772                           
  9773                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:         i2c1Status.writeLength = 0;
  9774     0F2C  01D6               	clrf	_i2c1Status+4	;volatile
  9775     0F2D  01D7               	clrf	_i2c1Status+5	;volatile
  9776     0F2E                     l3651:
  9777                           
  9778                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
  9779     0F2E  01DC               	clrf	_i2c1Status+10	;volatile
  9780     0F2F                     l3653:
  9781                           
  9782                           ;mcc_generated_files/i2c_host/src/mssp.c: 174:         I2C1_ReadStart();
  9783     0F2F  318D  2588  318F   	fcall	_I2C1_ReadStart
  9784     0F32                     l3655:
  9785                           
  9786                           ;mcc_generated_files/i2c_host/src/mssp.c: 175:         retStatus = 1;
  9787     0F32  01F5               	clrf	I2C1_Read@retStatus
  9788     0F33  0AF5               	incf	I2C1_Read@retStatus,f
  9789     0F34                     l3657:
  9790                           
  9791                           ;mcc_generated_files/i2c_host/src/mssp.c: 177:     return retStatus;
  9792     0F34  0875               	movf	I2C1_Read@retStatus,w
  9793     0F35                     l188:
  9794     0F35  0008               	return
  9795     0F36                     __end_of_I2C1_Read:
  9796                           
  9797                           	psect	text33
  9798     0D88                     __ptext33:	
  9799 ;; *************** function _I2C1_ReadStart *****************
  9800 ;; Defined at:
  9801 ;;		line 232 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;		None
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;		None
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, status,2, status,0, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9815 ;;      Params:         0       0       0       0       0       0       0       0
  9816 ;;      Locals:         0       0       0       0       0       0       0       0
  9817 ;;      Temps:          0       0       0       0       0       0       0       0
  9818 ;;      Totals:         0       0       0       0       0       0       0       0
  9819 ;;Total ram usage:        0 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 8
  9822 ;; This function calls:
  9823 ;;		_I2C1_StartSend
  9824 ;; This function is called by:
  9825 ;;		_I2C1_Read
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829     0D88                     _I2C1_ReadStart:	
  9830                           ;psect for function _I2C1_ReadStart
  9831                           
  9832     0D88                     l3547:	
  9833                           ;incstack = 0
  9834                           ; Regs used in _I2C1_ReadStart: [wreg+status,2+status,0+pclath+cstack]
  9835                           
  9836                           
  9837                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:     I2C1_StartSend();
  9838     0D88  318D  2505  318D   	fcall	_I2C1_StartSend
  9839     0D8B                     l3549:
  9840                           
  9841                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:     i2c1Status.state = I2C_STATE_SEND_RD_
      +                          ADDR;
  9842     0D8B  3001               	movlw	1
  9843     0D8C  0020               	movlb	0	; select bank0
  9844     0D8D  00DD               	movwf	_i2c1Status+11	;volatile
  9845     0D8E                     l213:
  9846     0D8E  0008               	return
  9847     0D8F                     __end_of_I2C1_ReadStart:
  9848                           
  9849                           	psect	text34
  9850     0534                     __ptext34:	
  9851 ;; *************** function _KAPS_StorePos *****************
  9852 ;; Defined at:
  9853 ;;		line 65 in file "kaps.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  idx             1    wreg     unsigned char 
  9856 ;;  pos             4   13[BANK0 ] unsigned long 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  idx             1   24[BANK0 ] unsigned char 
  9859 ;;  data            4   19[BANK0 ] unsigned char [4]
  9860 ;;  reg             1   23[BANK0 ] unsigned char 
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9870 ;;      Params:         0       4       0       0       0       0       0       0
  9871 ;;      Locals:         0       6       0       0       0       0       0       0
  9872 ;;      Temps:          0       2       0       0       0       0       0       0
  9873 ;;      Totals:         0      12       0       0       0       0       0       0
  9874 ;;Total ram usage:       12 bytes
  9875 ;; Hardware stack levels used: 1
  9876 ;; Hardware stack levels required when called: 10
  9877 ;; This function calls:
  9878 ;;		_I2C1_Write
  9879 ;;		_unpackLong
  9880 ;; This function is called by:
  9881 ;;		_ProcessMsg
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885     0534                     _KAPS_StorePos:	
  9886                           ;psect for function _KAPS_StorePos
  9887                           
  9888                           
  9889                           ;incstack = 0
  9890                           ; Regs used in _KAPS_StorePos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9891                           ;KAPS_StorePos@idx stored from wreg
  9892     0534  0020               	movlb	0	; select bank0
  9893     0535  00B8               	movwf	KAPS_StorePos@idx
  9894     0536                     l3873:
  9895                           
  9896                           ;kaps.c: 66:     idx--;
  9897     0536  3001               	movlw	1
  9898     0537  02B8               	subwf	KAPS_StorePos@idx,f
  9899     0538                     l3875:
  9900                           
  9901                           ;kaps.c: 68:     uint8_t reg = (idx)*4 + 0x04;
  9902     0538  0838               	movf	KAPS_StorePos@idx,w
  9903     0539  00B1               	movwf	??_KAPS_StorePos
  9904     053A  3001               	movlw	1
  9905     053B                     u1955:
  9906     053B  35B1               	lslf	??_KAPS_StorePos,f
  9907     053C  3EFF               	addlw	-1
  9908     053D  1D03               	skipz
  9909     053E  2D3B               	goto	u1955
  9910     053F  3531               	lslf	??_KAPS_StorePos,w
  9911     0540  3E04               	addlw	4
  9912     0541  00B7               	movwf	KAPS_StorePos@reg
  9913     0542                     l3877:
  9914                           
  9915                           ;kaps.c: 69:     uint8_t data[4];;kaps.c: 71:     data[0] = idx;
  9916     0542  0838               	movf	KAPS_StorePos@idx,w
  9917     0543  00B3               	movwf	KAPS_StorePos@data
  9918     0544                     l3879:
  9919                           
  9920                           ;kaps.c: 72:     unpackLong(pos, &data[0]);
  9921     0544  0830               	movf	KAPS_StorePos@pos+3,w
  9922     0545  00A3               	movwf	unpackLong@value+3
  9923     0546  082F               	movf	KAPS_StorePos@pos+2,w
  9924     0547  00A2               	movwf	unpackLong@value+2
  9925     0548  082E               	movf	KAPS_StorePos@pos+1,w
  9926     0549  00A1               	movwf	unpackLong@value+1
  9927     054A  082D               	movf	KAPS_StorePos@pos,w
  9928     054B  00A0               	movwf	unpackLong@value
  9929     054C  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
  9930     054D  00A4               	movwf	unpackLong@data
  9931     054E  3184  246C  3185   	fcall	_unpackLong
  9932     0551                     l3881:
  9933                           
  9934                           ;kaps.c: 74:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9935     0551  0020               	movlb	0	; select bank0
  9936     0552  0864               	movf	_kaps,w
  9937     0553  00B1               	movwf	??_KAPS_StorePos
  9938     0554  01B2               	clrf	??_KAPS_StorePos+1
  9939     0555  0831               	movf	??_KAPS_StorePos,w
  9940     0556  00A0               	movwf	I2C1_Write@address
  9941     0557  0832               	movf	??_KAPS_StorePos+1,w
  9942     0558  00A1               	movwf	I2C1_Write@address+1
  9943     0559  3037               	movlw	(low (KAPS_StorePos@reg| 0))& (0+255)
  9944     055A  00A2               	movwf	I2C1_Write@data
  9945     055B  3001               	movlw	1
  9946     055C  00A3               	movwf	I2C1_Write@dataLength
  9947     055D  3000               	movlw	0
  9948     055E  00A4               	movwf	I2C1_Write@dataLength+1
  9949     055F  318E  26B6  3185   	fcall	_I2C1_Write
  9950     0562                     l3883:
  9951                           
  9952                           ;kaps.c: 75:     I2C1_Write(kaps.m_bAddr, data, 4);
  9953     0562  0020               	movlb	0	; select bank0
  9954     0563  0864               	movf	_kaps,w
  9955     0564  00B1               	movwf	??_KAPS_StorePos
  9956     0565  01B2               	clrf	??_KAPS_StorePos+1
  9957     0566  0831               	movf	??_KAPS_StorePos,w
  9958     0567  00A0               	movwf	I2C1_Write@address
  9959     0568  0832               	movf	??_KAPS_StorePos+1,w
  9960     0569  00A1               	movwf	I2C1_Write@address+1
  9961     056A  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
  9962     056B  00A2               	movwf	I2C1_Write@data
  9963     056C  3004               	movlw	4
  9964     056D  00A3               	movwf	I2C1_Write@dataLength
  9965     056E  3000               	movlw	0
  9966     056F  00A4               	movwf	I2C1_Write@dataLength+1
  9967     0570  318E  26B6  3185   	fcall	_I2C1_Write
  9968     0573                     l725:
  9969     0573  0008               	return
  9970     0574                     __end_of_KAPS_StorePos:
  9971                           
  9972                           	psect	text35
  9973     046C                     __ptext35:	
  9974 ;; *************** function _unpackLong *****************
  9975 ;; Defined at:
  9976 ;;		line 57 in file "utils.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  value           4    0[BANK0 ] unsigned long 
  9979 ;;  data            1    4[BANK0 ] PTR unsigned char 
  9980 ;;		 -> KAPS_StorePos@data(4), KAPS_setAbsPos@data(4), ProcessMsg@payload(6), 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9992 ;;      Params:         0       5       0       0       0       0       0       0
  9993 ;;      Locals:         0       0       0       0       0       0       0       0
  9994 ;;      Temps:          0       4       0       0       0       0       0       0
  9995 ;;      Totals:         0       9       0       0       0       0       0       0
  9996 ;;Total ram usage:        9 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; Hardware stack levels required when called: 7
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_ProcessMsg
 10003 ;;		_KAPS_setAbsPos
 10004 ;;		_KAPS_StorePos
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008     046C                     _unpackLong:	
 10009                           ;psect for function _unpackLong
 10010                           
 10011     046C                     l3689:	
 10012                           ;incstack = 0
 10013                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
 10014                           
 10015                           
 10016                           ;utils.c: 59:     data[0] = (value & 0XFF);
 10017     046C  0020               	movlb	0	; select bank0
 10018     046D  0824               	movf	unpackLong@data,w
 10019     046E  0086               	movwf	6
 10020     046F  0187               	clrf	7
 10021     0470  0820               	movf	unpackLong@value,w
 10022     0471  0081               	movwf	1
 10023     0472                     l3691:
 10024                           
 10025                           ;utils.c: 60:     data[1] = (value >> 8) & 0xFF;
 10026     0472  0A24               	incf	unpackLong@data,w
 10027     0473  0086               	movwf	6
 10028     0474  0187               	clrf	7
 10029     0475  0820               	movf	unpackLong@value,w
 10030     0476  00A5               	movwf	??_unpackLong
 10031     0477  0821               	movf	unpackLong@value+1,w
 10032     0478  00A6               	movwf	??_unpackLong+1
 10033     0479  0822               	movf	unpackLong@value+2,w
 10034     047A  00A7               	movwf	??_unpackLong+2
 10035     047B  0823               	movf	unpackLong@value+3,w
 10036     047C  00A8               	movwf	??_unpackLong+3
 10037     047D  3008               	movlw	8
 10038     047E                     u1765:
 10039     047E  36A8               	lsrf	??_unpackLong+3,f
 10040     047F  0CA7               	rrf	??_unpackLong+2,f
 10041     0480  0CA6               	rrf	??_unpackLong+1,f
 10042     0481  0CA5               	rrf	??_unpackLong,f
 10043     0482                     u1760:
 10044     0482  0B89               	decfsz	9,f
 10045     0483  2C7E               	goto	u1765
 10046     0484  0825               	movf	??_unpackLong,w
 10047     0485  0081               	movwf	1
 10048     0486                     l3693:
 10049                           
 10050                           ;utils.c: 61:     data[2] = (value >> 16) & 0xFF;
 10051     0486  0824               	movf	unpackLong@data,w
 10052     0487  3E02               	addlw	2
 10053     0488  0086               	movwf	6
 10054     0489  0187               	clrf	7
 10055     048A  0820               	movf	unpackLong@value,w
 10056     048B  00A5               	movwf	??_unpackLong
 10057     048C  0821               	movf	unpackLong@value+1,w
 10058     048D  00A6               	movwf	??_unpackLong+1
 10059     048E  0822               	movf	unpackLong@value+2,w
 10060     048F  00A7               	movwf	??_unpackLong+2
 10061     0490  0823               	movf	unpackLong@value+3,w
 10062     0491  00A8               	movwf	??_unpackLong+3
 10063     0492  3010               	movlw	16
 10064     0493                     u1775:
 10065     0493  36A8               	lsrf	??_unpackLong+3,f
 10066     0494  0CA7               	rrf	??_unpackLong+2,f
 10067     0495  0CA6               	rrf	??_unpackLong+1,f
 10068     0496  0CA5               	rrf	??_unpackLong,f
 10069     0497                     u1770:
 10070     0497  0B89               	decfsz	9,f
 10071     0498  2C93               	goto	u1775
 10072     0499  0825               	movf	??_unpackLong,w
 10073     049A  0081               	movwf	1
 10074     049B                     l3695:
 10075                           
 10076                           ;utils.c: 62:     data[3] = (value >> 24) & 0xFF;
 10077     049B  0824               	movf	unpackLong@data,w
 10078     049C  3E03               	addlw	3
 10079     049D  0086               	movwf	6
 10080     049E  0187               	clrf	7
 10081     049F  0820               	movf	unpackLong@value,w
 10082     04A0  00A5               	movwf	??_unpackLong
 10083     04A1  0821               	movf	unpackLong@value+1,w
 10084     04A2  00A6               	movwf	??_unpackLong+1
 10085     04A3  0822               	movf	unpackLong@value+2,w
 10086     04A4  00A7               	movwf	??_unpackLong+2
 10087     04A5  0823               	movf	unpackLong@value+3,w
 10088     04A6  00A8               	movwf	??_unpackLong+3
 10089     04A7  3018               	movlw	24
 10090     04A8                     u1785:
 10091     04A8  36A8               	lsrf	??_unpackLong+3,f
 10092     04A9  0CA7               	rrf	??_unpackLong+2,f
 10093     04AA  0CA6               	rrf	??_unpackLong+1,f
 10094     04AB  0CA5               	rrf	??_unpackLong,f
 10095     04AC                     u1780:
 10096     04AC  0B89               	decfsz	9,f
 10097     04AD  2CA8               	goto	u1785
 10098     04AE  0825               	movf	??_unpackLong,w
 10099     04AF  0081               	movwf	1
 10100     04B0                     l748:
 10101     04B0  0008               	return
 10102     04B1                     __end_of_unpackLong:
 10103                           
 10104                           	psect	text36
 10105     0F36                     __ptext36:	
 10106 ;; *************** function _KAPS_GoToIdx *****************
 10107 ;; Defined at:
 10108 ;;		line 24 in file "kaps.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  idx             1    wreg     unsigned char 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  idx             1    7[BANK0 ] unsigned char 
 10113 ;;  reg             1    8[BANK0 ] unsigned char 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      void 
 10116 ;; Registers used:
 10117 ;;		wreg, status,2, status,0, pclath, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10123 ;;      Params:         0       0       0       0       0       0       0       0
 10124 ;;      Locals:         0       2       0       0       0       0       0       0
 10125 ;;      Temps:          0       2       0       0       0       0       0       0
 10126 ;;      Totals:         0       4       0       0       0       0       0       0
 10127 ;;Total ram usage:        4 bytes
 10128 ;; Hardware stack levels used: 1
 10129 ;; Hardware stack levels required when called: 10
 10130 ;; This function calls:
 10131 ;;		_I2C1_Write
 10132 ;; This function is called by:
 10133 ;;		_ProcessMsg
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137     0F36                     _KAPS_GoToIdx:	
 10138                           ;psect for function _KAPS_GoToIdx
 10139                           
 10140                           
 10141                           ;incstack = 0
 10142                           ; Regs used in _KAPS_GoToIdx: [wreg+status,2+status,0+pclath+cstack]
 10143                           ;KAPS_GoToIdx@idx stored from wreg
 10144     0F36  0020               	movlb	0	; select bank0
 10145     0F37  00A7               	movwf	KAPS_GoToIdx@idx
 10146     0F38                     l3853:
 10147                           
 10148                           ;kaps.c: 25:     uint8_t reg = 0xFE;
 10149     0F38  30FE               	movlw	254
 10150     0F39  00A8               	movwf	KAPS_GoToIdx@reg
 10151     0F3A                     l3855:
 10152                           
 10153                           ;kaps.c: 27:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10154     0F3A  0864               	movf	_kaps,w
 10155     0F3B  00A5               	movwf	??_KAPS_GoToIdx
 10156     0F3C  01A6               	clrf	??_KAPS_GoToIdx+1
 10157     0F3D  0825               	movf	??_KAPS_GoToIdx,w
 10158     0F3E  00A0               	movwf	I2C1_Write@address
 10159     0F3F  0826               	movf	??_KAPS_GoToIdx+1,w
 10160     0F40  00A1               	movwf	I2C1_Write@address+1
 10161     0F41  3028               	movlw	(low (KAPS_GoToIdx@reg| 0))& (0+255)
 10162     0F42  00A2               	movwf	I2C1_Write@data
 10163     0F43  3001               	movlw	1
 10164     0F44  00A3               	movwf	I2C1_Write@dataLength
 10165     0F45  3000               	movlw	0
 10166     0F46  00A4               	movwf	I2C1_Write@dataLength+1
 10167     0F47  318E  26B6  318F   	fcall	_I2C1_Write
 10168     0F4A                     l3857:
 10169                           
 10170                           ;kaps.c: 28:     I2C1_Write(kaps.m_bAddr, &idx, 1);
 10171     0F4A  0020               	movlb	0	; select bank0
 10172     0F4B  0864               	movf	_kaps,w
 10173     0F4C  00A5               	movwf	??_KAPS_GoToIdx
 10174     0F4D  01A6               	clrf	??_KAPS_GoToIdx+1
 10175     0F4E  0825               	movf	??_KAPS_GoToIdx,w
 10176     0F4F  00A0               	movwf	I2C1_Write@address
 10177     0F50  0826               	movf	??_KAPS_GoToIdx+1,w
 10178     0F51  00A1               	movwf	I2C1_Write@address+1
 10179     0F52  3027               	movlw	(low (KAPS_GoToIdx@idx| 0))& (0+255)
 10180     0F53  00A2               	movwf	I2C1_Write@data
 10181     0F54  3001               	movlw	1
 10182     0F55  00A3               	movwf	I2C1_Write@dataLength
 10183     0F56  3000               	movlw	0
 10184     0F57  00A4               	movwf	I2C1_Write@dataLength+1
 10185     0F58  318E  26B6  318F   	fcall	_I2C1_Write
 10186     0F5B                     l716:
 10187     0F5B  0008               	return
 10188     0F5C                     __end_of_KAPS_GoToIdx:
 10189                           
 10190                           	psect	text37
 10191     0EB6                     __ptext37:	
 10192 ;; *************** function _I2C1_Write *****************
 10193 ;; Defined at:
 10194 ;;		line 142 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;  address         2    0[BANK0 ] unsigned short 
 10197 ;;  data            1    2[BANK0 ] PTR unsigned char 
 10198 ;;		 -> KAPS_getPos@reg(1), KAPS_getIndex@reg(1), KAPS_getStatus@reg(1), KAPS_StorePos@data(4), 
 10199 ;;		 -> KAPS_StorePos@reg(1), KAPS_setRelPos@value(1), KAPS_setRelPos@reg(1), KAPS_setAbsPos@data(4), 
 10200 ;;		 -> KAPS_setAbsPos@reg(1), KAPS_GoToIdx@idx(1), KAPS_GoToIdx@reg(1), 
 10201 ;;  dataLength      2    3[BANK0 ] unsigned int 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  retStatus       1    0        _Bool 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      _Bool 
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, status,0, pclath, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10213 ;;      Params:         0       5       0       0       0       0       0       0
 10214 ;;      Locals:         0       0       0       0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0       0
 10216 ;;      Totals:         0       5       0       0       0       0       0       0
 10217 ;;Total ram usage:        5 bytes
 10218 ;; Hardware stack levels used: 1
 10219 ;; Hardware stack levels required when called: 9
 10220 ;; This function calls:
 10221 ;;		_I2C1_IsBusy
 10222 ;;		_I2C1_WriteStart
 10223 ;; This function is called by:
 10224 ;;		_KAPS_GoToIdx
 10225 ;;		_KAPS_setAbsPos
 10226 ;;		_KAPS_setRelPos
 10227 ;;		_KAPS_StorePos
 10228 ;;		_KAPS_getStatus
 10229 ;;		_KAPS_getIndex
 10230 ;;		_KAPS_getPos
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234     0EB6                     _I2C1_Write:	
 10235                           ;psect for function _I2C1_Write
 10236                           
 10237     0EB6                     l3611:	
 10238                           ;incstack = 0
 10239                           ; Regs used in _I2C1_Write: [wreg+status,2+status,0+pclath+cstack]
 10240                           
 10241     0EB6                     l3613:
 10242                           
 10243                           ;mcc_generated_files/i2c_host/src/mssp.c: 145:     if (!I2C1_IsBusy())
 10244     0EB6  318E  2610  318E   	fcall	_I2C1_IsBusy
 10245     0EB9  3A00               	xorlw	0
 10246     0EBA  1D03               	skipz
 10247     0EBB  2EBD               	goto	u1721
 10248     0EBC  2EBE               	goto	u1720
 10249     0EBD                     u1721:
 10250     0EBD  2ED3               	goto	l184
 10251     0EBE                     u1720:
 10252     0EBE                     l3615:
 10253                           
 10254                           ;mcc_generated_files/i2c_host/src/mssp.c: 146:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 147:         i2c1Status.busy = 1;
 10255     0EBE  3001               	movlw	1
 10256     0EBF  0020               	movlb	0	; select bank0
 10257     0EC0  00D2               	movwf	_i2c1Status	;volatile
 10258                           
 10259                           ;mcc_generated_files/i2c_host/src/mssp.c: 148:         i2c1Status.address = address;
 10260     0EC1  0821               	movf	I2C1_Write@address+1,w
 10261     0EC2  00D4               	movwf	_i2c1Status+2	;volatile
 10262     0EC3  0820               	movf	I2C1_Write@address,w
 10263     0EC4  00D3               	movwf	_i2c1Status+1	;volatile
 10264     0EC5                     l3617:
 10265                           
 10266                           ;mcc_generated_files/i2c_host/src/mssp.c: 149:         i2c1Status.switchToRead = 0;
 10267     0EC5  01DB               	clrf	_i2c1Status+9	;volatile
 10268     0EC6                     l3619:
 10269                           
 10270                           ;mcc_generated_files/i2c_host/src/mssp.c: 150:         i2c1Status.writePtr = data;
 10271     0EC6  0822               	movf	I2C1_Write@data,w
 10272     0EC7  00D5               	movwf	low ((_i2c1Status| 0+3))	;volatile
 10273     0EC8                     l3621:
 10274                           
 10275                           ;mcc_generated_files/i2c_host/src/mssp.c: 151:         i2c1Status.writeLength = dataLeng
      +                          th;
 10276     0EC8  0824               	movf	I2C1_Write@dataLength+1,w
 10277     0EC9  00D7               	movwf	_i2c1Status+5	;volatile
 10278     0ECA  0823               	movf	I2C1_Write@dataLength,w
 10279     0ECB  00D6               	movwf	_i2c1Status+4	;volatile
 10280     0ECC                     l3623:
 10281                           
 10282                           ;mcc_generated_files/i2c_host/src/mssp.c: 152:         i2c1Status.readPtr = ((void*)0);
 10283     0ECC  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 10284     0ECD                     l3625:
 10285                           
 10286                           ;mcc_generated_files/i2c_host/src/mssp.c: 153:         i2c1Status.readLength = 0;
 10287     0ECD  01D9               	clrf	_i2c1Status+7	;volatile
 10288     0ECE  01DA               	clrf	_i2c1Status+8	;volatile
 10289     0ECF                     l3627:
 10290                           
 10291                           ;mcc_generated_files/i2c_host/src/mssp.c: 154:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 10292     0ECF  01DC               	clrf	_i2c1Status+10	;volatile
 10293     0ED0                     l3629:
 10294                           
 10295                           ;mcc_generated_files/i2c_host/src/mssp.c: 155:         I2C1_WriteStart();
 10296     0ED0  318D  2581  318E   	fcall	_I2C1_WriteStart
 10297     0ED3                     l3631:
 10298     0ED3                     l184:
 10299     0ED3  0008               	return
 10300     0ED4                     __end_of_I2C1_Write:
 10301                           
 10302                           	psect	text38
 10303     0D81                     __ptext38:	
 10304 ;; *************** function _I2C1_WriteStart *****************
 10305 ;; Defined at:
 10306 ;;		line 238 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;		None
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;		None
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg, status,2, status,0, pclath, cstack
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10320 ;;      Params:         0       0       0       0       0       0       0       0
 10321 ;;      Locals:         0       0       0       0       0       0       0       0
 10322 ;;      Temps:          0       0       0       0       0       0       0       0
 10323 ;;      Totals:         0       0       0       0       0       0       0       0
 10324 ;;Total ram usage:        0 bytes
 10325 ;; Hardware stack levels used: 1
 10326 ;; Hardware stack levels required when called: 8
 10327 ;; This function calls:
 10328 ;;		_I2C1_StartSend
 10329 ;; This function is called by:
 10330 ;;		_I2C1_Write
 10331 ;;		_I2C1_WriteRead
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335     0D81                     _I2C1_WriteStart:	
 10336                           ;psect for function _I2C1_WriteStart
 10337                           
 10338     0D81                     l3543:	
 10339                           ;incstack = 0
 10340                           ; Regs used in _I2C1_WriteStart: [wreg+status,2+status,0+pclath+cstack]
 10341                           
 10342                           
 10343                           ;mcc_generated_files/i2c_host/src/mssp.c: 240:     I2C1_StartSend();
 10344     0D81  318D  2505  318D   	fcall	_I2C1_StartSend
 10345     0D84                     l3545:
 10346                           
 10347                           ;mcc_generated_files/i2c_host/src/mssp.c: 241:     i2c1Status.state = I2C_STATE_SEND_WR_
      +                          ADDR;
 10348     0D84  3002               	movlw	2
 10349     0D85  0020               	movlb	0	; select bank0
 10350     0D86  00DD               	movwf	_i2c1Status+11	;volatile
 10351     0D87                     l216:
 10352     0D87  0008               	return
 10353     0D88                     __end_of_I2C1_WriteStart:
 10354                           
 10355                           	psect	text39
 10356     0D05                     __ptext39:	
 10357 ;; *************** function _I2C1_StartSend *****************
 10358 ;; Defined at:
 10359 ;;		line 425 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;		None
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      void 
 10366 ;; Registers used:
 10367 ;;		None
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10373 ;;      Params:         0       0       0       0       0       0       0       0
 10374 ;;      Locals:         0       0       0       0       0       0       0       0
 10375 ;;      Temps:          0       0       0       0       0       0       0       0
 10376 ;;      Totals:         0       0       0       0       0       0       0       0
 10377 ;;Total ram usage:        0 bytes
 10378 ;; Hardware stack levels used: 1
 10379 ;; Hardware stack levels required when called: 7
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_I2C1_ReadStart
 10384 ;;		_I2C1_WriteStart
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388     0D05                     _I2C1_StartSend:	
 10389                           ;psect for function _I2C1_StartSend
 10390                           
 10391     0D05                     l3503:	
 10392                           ;incstack = 0
 10393                           ; Regs used in _I2C1_StartSend: []
 10394                           
 10395                           
 10396                           ;mcc_generated_files/i2c_host/src/mssp.c: 427:     SSP1CON2bits.SEN = 1;
 10397     0D05  0024               	movlb	4	; select bank4
 10398     0D06  1416               	bsf	22,0	;volatile
 10399     0D07                     l288:
 10400     0D07  0008               	return
 10401     0D08                     __end_of_I2C1_StartSend:
 10402                           
 10403                           	psect	text40
 10404     0E10                     __ptext40:	
 10405 ;; *************** function _I2C1_IsBusy *****************
 10406 ;; Defined at:
 10407 ;;		line 206 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;		None
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;		None
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      _Bool 
 10414 ;; Registers used:
 10415 ;;		wreg, status,2, status,0
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10421 ;;      Params:         0       0       0       0       0       0       0       0
 10422 ;;      Locals:         1       0       0       0       0       0       0       0
 10423 ;;      Temps:          0       0       0       0       0       0       0       0
 10424 ;;      Totals:         1       0       0       0       0       0       0       0
 10425 ;;Total ram usage:        1 bytes
 10426 ;; Hardware stack levels used: 1
 10427 ;; Hardware stack levels required when called: 7
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_I2C1_Write
 10432 ;;		_I2C1_Read
 10433 ;;		_I2C1_WriteRead
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437     0E10                     _I2C1_IsBusy:	
 10438                           ;psect for function _I2C1_IsBusy
 10439                           
 10440     0E10                     l3531:	
 10441                           ;incstack = 0
 10442                           ; Regs used in _I2C1_IsBusy: [wreg+status,2+status,0]
 10443                           
 10444                           
 10445                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return i2c1Status.busy || SSP1STATbit
      +                          s.S;
 10446     0E10  01F4               	clrf	_I2C1_IsBusy$646
 10447     0E11  0AF4               	incf	_I2C1_IsBusy$646,f
 10448     0E12                     l3533:
 10449     0E12  0020               	movlb	0	; select bank0
 10450     0E13  0852               	movf	_i2c1Status,w	;volatile
 10451     0E14  1D03               	btfss	3,2
 10452     0E15  2E17               	goto	u1551
 10453     0E16  2E18               	goto	u1550
 10454     0E17                     u1551:
 10455     0E17  2E1E               	goto	l3539
 10456     0E18                     u1550:
 10457     0E18                     l3535:
 10458     0E18  0024               	movlb	4	; select bank4
 10459     0E19  1994               	btfsc	20,3	;volatile
 10460     0E1A  2E1C               	goto	u1561
 10461     0E1B  2E1D               	goto	u1560
 10462     0E1C                     u1561:
 10463     0E1C  2E1E               	goto	l3539
 10464     0E1D                     u1560:
 10465     0E1D                     l3537:
 10466     0E1D  01F4               	clrf	_I2C1_IsBusy$646
 10467     0E1E                     l3539:
 10468     0E1E  0874               	movf	_I2C1_IsBusy$646,w
 10469     0E1F                     l200:
 10470     0E1F  0008               	return
 10471     0E20                     __end_of_I2C1_IsBusy:
 10472                           
 10473                           	psect	text41
 10474     01AC                     __ptext41:	
 10475 ;; *************** function _Parse *****************
 10476 ;; Defined at:
 10477 ;;		line 74 in file "parser.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  data            1    wreg     unsigned char 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  data            1    8[BANK0 ] unsigned char 
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      _Bool 
 10484 ;; Registers used:
 10485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10491 ;;      Params:         0       0       0       0       0       0       0       0
 10492 ;;      Locals:         0       1       0       0       0       0       0       0
 10493 ;;      Temps:          0       2       0       0       0       0       0       0
 10494 ;;      Totals:         0       3       0       0       0       0       0       0
 10495 ;;Total ram usage:        3 bytes
 10496 ;; Hardware stack levels used: 1
 10497 ;; Hardware stack levels required when called: 11
 10498 ;; This function calls:
 10499 ;;		_SendMsg
 10500 ;;		_SendNack
 10501 ;; This function is called by:
 10502 ;;		_main
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506     01AC                     _Parse:	
 10507                           ;psect for function _Parse
 10508                           
 10509                           
 10510                           ;incstack = 0
 10511                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10512                           ;Parse@data stored from wreg
 10513     01AC  0020               	movlb	0	; select bank0
 10514     01AD  00A8               	movwf	Parse@data
 10515     01AE                     l3941:
 10516                           
 10517                           ;parser.c: 75:     switch (parser.m_State) {
 10518     01AE  2A4A               	goto	l4009
 10519     01AF                     l3943:
 10520                           
 10521                           ;parser.c: 77:             if (data == 0x01) {
 10522     01AF  0328               	decf	Parse@data,w
 10523     01B0  1D03               	btfss	3,2
 10524     01B1  29B3               	goto	u2001
 10525     01B2  29B4               	goto	u2000
 10526     01B3                     u2001:
 10527     01B3  29BA               	goto	l3949
 10528     01B4                     u2000:
 10529     01B4                     l3945:
 10530                           
 10531                           ;parser.c: 78:                 parser.m_State = WAIT_ID;
 10532     01B4  0021               	movlb	1	; select bank1
 10533     01B5  01B8               	clrf	_parser^(0+128)
 10534     01B6  0AB8               	incf	_parser^(0+128),f
 10535     01B7                     l3947:
 10536                           
 10537                           ;parser.c: 79:                 parser.m_bSum = 0x00;
 10538     01B7  01BE               	clrf	(_parser^(0+128)+6)
 10539                           
 10540                           ;parser.c: 80:                 parser.m_bDataIndex = 0;
 10541     01B8  01BA               	clrf	(_parser^(0+128)+2)
 10542                           
 10543                           ;parser.c: 81:             } else
 10544     01B9  2A62               	goto	l4011
 10545     01BA                     l3949:
 10546                           
 10547                           ;parser.c: 82:                 SendNack(WRONG_MESSAGE);
 10548     01BA  3002               	movlw	2
 10549     01BB  318D  25AE  3181   	fcall	_SendNack
 10550     01BE  2A62               	goto	l4011
 10551     01BF                     l3951:
 10552                           
 10553                           ;parser.c: 86:             parser.m_MsgID = data;
 10554     01BF  0828               	movf	Parse@data,w
 10555     01C0  0021               	movlb	1	; select bank1
 10556     01C1  00B9               	movwf	(_parser^(0+128)+1)
 10557     01C2                     l3953:
 10558                           
 10559                           ;parser.c: 87:             parser.m_bEcho = 1;
 10560     01C2  01BF               	clrf	(_parser^(0+128)+7)
 10561     01C3  0ABF               	incf	(_parser^(0+128)+7),f
 10562                           
 10563                           ;parser.c: 89:             parser.m_State = WAIT_VALUE;
 10564     01C4  3002               	movlw	2
 10565     01C5  00B8               	movwf	_parser^(0+128)
 10566                           
 10567                           ;parser.c: 91:             switch ((uint8_t) parser.m_MsgID) {
 10568     01C6  29E5               	goto	l3973
 10569     01C7                     l3955:
 10570                           
 10571                           ;parser.c: 95:                     parser.m_bEcho = 0;
 10572     01C7  01BF               	clrf	(_parser^(0+128)+7)
 10573                           
 10574                           ;parser.c: 96:                     parser.m_bReplySize = 0;
 10575     01C8  01BC               	clrf	(_parser^(0+128)+4)
 10576                           
 10577                           ;parser.c: 97:                     parser.m_bDataSize = 0;
 10578     01C9  01BB               	clrf	(_parser^(0+128)+3)
 10579     01CA                     l3957:
 10580                           
 10581                           ;parser.c: 98:                     parser.m_State = WAIT_CKSUM;
 10582     01CA  3003               	movlw	3
 10583     01CB  00B8               	movwf	_parser^(0+128)
 10584                           
 10585                           ;parser.c: 99:                     break;
 10586     01CC  2A62               	goto	l4011
 10587     01CD                     l792:	
 10588                           ;parser.c: 103:                 case NVT_RFDU_SSPAPout:
 10589                           
 10590     01CD                     l3959:
 10591                           
 10592                           ;parser.c: 105:                     parser.m_bEcho = 0;
 10593     01CD  01BF               	clrf	(_parser^(0+128)+7)
 10594     01CE                     l3961:
 10595                           
 10596                           ;parser.c: 107:                     parser.m_bReplySize = 1;
 10597     01CE  01BC               	clrf	(_parser^(0+128)+4)
 10598     01CF  0ABC               	incf	(_parser^(0+128)+4),f
 10599     01D0                     l3963:
 10600                           
 10601                           ;parser.c: 108:                     parser.m_bDataSize = 1;
 10602     01D0  01BB               	clrf	(_parser^(0+128)+3)
 10603     01D1  0ABB               	incf	(_parser^(0+128)+3),f
 10604                           
 10605                           ;parser.c: 109:                     break;
 10606     01D2  2A62               	goto	l4011
 10607     01D3                     l3965:
 10608                           
 10609                           ;parser.c: 112:                     parser.m_bReplySize = 2;
 10610     01D3  3002               	movlw	2
 10611     01D4  00BC               	movwf	(_parser^(0+128)+4)
 10612                           
 10613                           ;parser.c: 113:                     parser.m_bDataSize = 2;
 10614     01D5  3002               	movlw	2
 10615     01D6  00BB               	movwf	(_parser^(0+128)+3)
 10616                           
 10617                           ;parser.c: 114:                     break;
 10618     01D7  2A62               	goto	l4011
 10619     01D8                     l3967:
 10620                           
 10621                           ;parser.c: 117:                     parser.m_bReplySize = 4;
 10622     01D8  3004               	movlw	4
 10623     01D9  00BC               	movwf	(_parser^(0+128)+4)
 10624                           
 10625                           ;parser.c: 118:                     parser.m_bDataSize = 4;
 10626     01DA  3004               	movlw	4
 10627     01DB  00BB               	movwf	(_parser^(0+128)+3)
 10628                           
 10629                           ;parser.c: 119:                     break;
 10630     01DC  2A62               	goto	l4011
 10631     01DD                     l3969:
 10632                           
 10633                           ;parser.c: 122:                     parser.m_bReplySize = 5;
 10634     01DD  3005               	movlw	5
 10635     01DE  00BC               	movwf	(_parser^(0+128)+4)
 10636                           
 10637                           ;parser.c: 123:                     parser.m_bDataSize = 5;
 10638     01DF  3005               	movlw	5
 10639     01E0  00BB               	movwf	(_parser^(0+128)+3)
 10640                           
 10641                           ;parser.c: 124:                     break;
 10642     01E1  2A62               	goto	l4011
 10643     01E2                     l3971:
 10644                           
 10645                           ;parser.c: 127:                     parser.m_State = WAIT_SOM;
 10646     01E2  0021               	movlb	1	; select bank1
 10647     01E3  01B8               	clrf	_parser^(0+128)
 10648                           
 10649                           ;parser.c: 128:             }
 10650     01E4  2A62               	goto	l4011
 10651     01E5                     l3973:
 10652     01E5  0839               	movf	(_parser^(0+128)+1),w
 10653                           
 10654                           ; Switch size 1, requested type "simple"
 10655                           ; Number of cases is 11, Range of values is 1 to 17
 10656                           ; switch strategies available:
 10657                           ; Name         Instructions Cycles
 10658                           ; simple_byte           34    18 (average)
 10659                           ; direct_byte           43     9 (fixed)
 10660                           ; jumptable            263     9 (fixed)
 10661                           ;	Chosen strategy is simple_byte
 10662     01E6  3A01               	xorlw	1	; case 1
 10663     01E7  1903               	skipnz
 10664     01E8  29D3               	goto	l3965
 10665     01E9  3A03               	xorlw	3	; case 2
 10666     01EA  1903               	skipnz
 10667     01EB  29CD               	goto	l792
 10668     01EC  3A01               	xorlw	1	; case 3
 10669     01ED  1903               	skipnz
 10670     01EE  29CD               	goto	l3959
 10671     01EF  3A07               	xorlw	7	; case 4
 10672     01F0  1903               	skipnz
 10673     01F1  29CD               	goto	l3959
 10674     01F2  3A01               	xorlw	1	; case 5
 10675     01F3  1903               	skipnz
 10676     01F4  29C7               	goto	l3955
 10677     01F5  3A03               	xorlw	3	; case 6
 10678     01F6  1903               	skipnz
 10679     01F7  29C7               	goto	l3955
 10680     01F8  3A01               	xorlw	1	; case 7
 10681     01F9  1903               	skipnz
 10682     01FA  29CE               	goto	l3961
 10683     01FB  3A0F               	xorlw	15	; case 8
 10684     01FC  1903               	skipnz
 10685     01FD  29D8               	goto	l3967
 10686     01FE  3A01               	xorlw	1	; case 9
 10687     01FF  1903               	skipnz
 10688     0200  29CD               	goto	l3959
 10689     0201  3A03               	xorlw	3	; case 10
 10690     0202  1903               	skipnz
 10691     0203  29DD               	goto	l3969
 10692     0204  3A1B               	xorlw	27	; case 17
 10693     0205  1903               	skipnz
 10694     0206  29C7               	goto	l3955
 10695     0207  29E2               	goto	l3971
 10696     0208                     l3975:
 10697                           
 10698                           ;parser.c: 132:             parserDataBuffer[parser.m_bDataIndex] = data;
 10699     0208  0021               	movlb	1	; select bank1
 10700     0209  083A               	movf	(_parser^(0+128)+2),w
 10701     020A  3ECA               	addlw	(low (_parserDataBuffer| 0))& (0+255)
 10702     020B  0086               	movwf	6
 10703     020C  0187               	clrf	7
 10704     020D  0020               	movlb	0	; select bank0
 10705     020E  0828               	movf	Parse@data,w
 10706     020F  0081               	movwf	1
 10707     0210                     l3977:
 10708                           
 10709                           ;parser.c: 133:             parser.m_bSum += data;
 10710     0210  0828               	movf	Parse@data,w
 10711     0211  00A6               	movwf	??_Parse
 10712     0212  0826               	movf	??_Parse,w
 10713     0213  0021               	movlb	1	; select bank1
 10714     0214  07BE               	addwf	(_parser^(0+128)+6),f
 10715     0215                     l3979:
 10716                           
 10717                           ;parser.c: 134:             parser.m_bDataIndex++;
 10718     0215  3001               	movlw	1
 10719     0216  0020               	movlb	0	; select bank0
 10720     0217  00A6               	movwf	??_Parse
 10721     0218  0826               	movf	??_Parse,w
 10722     0219  0021               	movlb	1	; select bank1
 10723     021A  07BA               	addwf	(_parser^(0+128)+2),f
 10724     021B                     l3981:
 10725                           
 10726                           ;parser.c: 135:             parser.m_bDataSize--;
 10727     021B  3001               	movlw	1
 10728     021C  02BB               	subwf	(_parser^(0+128)+3),f
 10729     021D                     l3983:
 10730                           
 10731                           ;parser.c: 136:             if (parser.m_bDataSize == 0)
 10732     021D  083B               	movf	(_parser^(0+128)+3),w
 10733     021E  1D03               	btfss	3,2
 10734     021F  2A21               	goto	u2011
 10735     0220  2A22               	goto	u2010
 10736     0221                     u2011:
 10737     0221  2A62               	goto	l4011
 10738     0222                     u2010:
 10739     0222  29CA               	goto	l3957
 10740     0223                     l3987:
 10741                           
 10742                           ;parser.c: 141:             parser.m_bCkSum = data;
 10743     0223  0828               	movf	Parse@data,w
 10744     0224  0021               	movlb	1	; select bank1
 10745     0225  00BD               	movwf	(_parser^(0+128)+5)
 10746     0226                     l3989:
 10747                           
 10748                           ;parser.c: 142:             parser.m_State = WAIT_SOM;
 10749     0226  01B8               	clrf	_parser^(0+128)
 10750     0227                     l3991:
 10751                           
 10752                           ;parser.c: 144:             if (parser.m_bSum == parser.m_bCkSum) {
 10753     0227  083E               	movf	(_parser^(0+128)+6),w
 10754     0228  063D               	xorwf	(_parser^(0+128)+5),w
 10755     0229  1D03               	skipz
 10756     022A  2A2C               	goto	u2021
 10757     022B  2A2D               	goto	u2020
 10758     022C                     u2021:
 10759     022C  2A40               	goto	l4003
 10760     022D                     u2020:
 10761     022D                     l3993:
 10762                           
 10763                           ;parser.c: 145:                 if (parser.m_bEcho)
 10764     022D  083F               	movf	(_parser^(0+128)+7),w
 10765     022E  1903               	btfsc	3,2
 10766     022F  2A31               	goto	u2031
 10767     0230  2A32               	goto	u2030
 10768     0231                     u2031:
 10769     0231  2A3E               	goto	l3997
 10770     0232                     u2030:
 10771     0232                     l3995:
 10772                           
 10773                           ;parser.c: 146:                     SendMsg(parser.m_MsgID, parserDataBuffer, parser.m_b
      +                          ReplySize);
 10774     0232  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
 10775     0233  0020               	movlb	0	; select bank0
 10776     0234  00A0               	movwf	SendMsg@data
 10777     0235  0021               	movlb	1	; select bank1
 10778     0236  083C               	movf	(_parser^(0+128)+4),w
 10779     0237  0020               	movlb	0	; select bank0
 10780     0238  00A1               	movwf	SendMsg@data_len
 10781     0239  0021               	movlb	1	; select bank1
 10782     023A  0839               	movf	(_parser^(0+128)+1),w
 10783     023B  3186  262C  3181   	fcall	_SendMsg
 10784     023E                     l3997:
 10785                           
 10786                           ;parser.c: 148:                 return 1;
 10787     023E  3001               	movlw	1
 10788     023F  2A63               	goto	l804
 10789     0240                     l4003:
 10790                           
 10791                           ;parser.c: 150:                 SendNack(CKSUM_ERR);
 10792     0240  3001               	movlw	1
 10793     0241  318D  25AE  3181   	fcall	_SendNack
 10794     0244  2A62               	goto	l4011
 10795     0245                     l4005:
 10796                           
 10797                           ;parser.c: 154:             SendNack(WRONG_MESSAGE);
 10798     0245  3002               	movlw	2
 10799     0246  318D  25AE  3181   	fcall	_SendNack
 10800     0249  29E2               	goto	l3971
 10801     024A                     l4009:
 10802     024A  0021               	movlb	1	; select bank1
 10803     024B  0838               	movf	_parser^(0+128),w
 10804     024C  0020               	movlb	0	; select bank0
 10805     024D  00A6               	movwf	??_Parse
 10806     024E  01A7               	clrf	??_Parse+1
 10807                           
 10808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10809                           ; Switch size 1, requested type "simple"
 10810                           ; Number of cases is 1, Range of values is 0 to 0
 10811                           ; switch strategies available:
 10812                           ; Name         Instructions Cycles
 10813                           ; simple_byte            4     3 (average)
 10814                           ; direct_byte            8     6 (fixed)
 10815                           ; jumptable            260     6 (fixed)
 10816                           ;	Chosen strategy is simple_byte
 10817     024F  0827               	movf	??_Parse+1,w
 10818     0250  3A00               	xorlw	0	; case 0
 10819     0251  1903               	skipnz
 10820     0252  2A54               	goto	l4195
 10821     0253  2A45               	goto	l4005
 10822     0254                     l4195:
 10823                           
 10824                           ; Switch size 1, requested type "simple"
 10825                           ; Number of cases is 4, Range of values is 0 to 3
 10826                           ; switch strategies available:
 10827                           ; Name         Instructions Cycles
 10828                           ; simple_byte           13     7 (average)
 10829                           ; direct_byte           14     6 (fixed)
 10830                           ; jumptable            260     6 (fixed)
 10831                           ;	Chosen strategy is simple_byte
 10832     0254  0826               	movf	??_Parse,w
 10833     0255  3A00               	xorlw	0	; case 0
 10834     0256  1903               	skipnz
 10835     0257  29AF               	goto	l3943
 10836     0258  3A01               	xorlw	1	; case 1
 10837     0259  1903               	skipnz
 10838     025A  29BF               	goto	l3951
 10839     025B  3A03               	xorlw	3	; case 2
 10840     025C  1903               	skipnz
 10841     025D  2A08               	goto	l3975
 10842     025E  3A01               	xorlw	1	; case 3
 10843     025F  1903               	skipnz
 10844     0260  2A23               	goto	l3987
 10845     0261  2A45               	goto	l4005
 10846     0262                     l4011:
 10847                           
 10848                           ;parser.c: 158:     return 0;
 10849     0262  3000               	movlw	0
 10850     0263                     l804:
 10851     0263  0008               	return
 10852     0264                     __end_of_Parse:
 10853                           
 10854                           	psect	text42
 10855     0DAE                     __ptext42:	
 10856 ;; *************** function _SendNack *****************
 10857 ;; Defined at:
 10858 ;;		line 62 in file "parser.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  error           1    wreg     unsigned char 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  error           1    5[BANK0 ] unsigned char 
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      void 
 10865 ;; Registers used:
 10866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10872 ;;      Params:         0       0       0       0       0       0       0       0
 10873 ;;      Locals:         0       1       0       0       0       0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0
 10875 ;;      Totals:         0       1       0       0       0       0       0       0
 10876 ;;Total ram usage:        1 bytes
 10877 ;; Hardware stack levels used: 1
 10878 ;; Hardware stack levels required when called: 10
 10879 ;; This function calls:
 10880 ;;		_SendMsg
 10881 ;; This function is called by:
 10882 ;;		_Parse
 10883 ;; This function uses a non-reentrant model
 10884 ;;
 10885                           
 10886     0DAE                     _SendNack:	
 10887                           ;psect for function _SendNack
 10888                           
 10889                           
 10890                           ;incstack = 0
 10891                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10892                           ;SendNack@error stored from wreg
 10893     0DAE  0020               	movlb	0	; select bank0
 10894     0DAF  00A5               	movwf	SendNack@error
 10895     0DB0                     l3885:
 10896                           
 10897                           ;parser.c: 63:     SendMsg(RFDU_NVT_NACK, &error, 1);
 10898     0DB0  3025               	movlw	(low (SendNack@error| 0))& (0+255)
 10899     0DB1  00A0               	movwf	SendMsg@data
 10900     0DB2  01A1               	clrf	SendMsg@data_len
 10901     0DB3  0AA1               	incf	SendMsg@data_len,f
 10902     0DB4  300B               	movlw	11
 10903     0DB5  3186  262C  318D   	fcall	_SendMsg
 10904     0DB8                     l776:
 10905     0DB8  0008               	return
 10906     0DB9                     __end_of_SendNack:
 10907                           
 10908                           	psect	text43
 10909     062C                     __ptext43:	
 10910 ;; *************** function _SendMsg *****************
 10911 ;; Defined at:
 10912 ;;		line 36 in file "parser.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  msg_id          1    wreg     unsigned char 
 10915 ;;  data            1    0[BANK0 ] PTR unsigned char 
 10916 ;;		 -> SendNack@error(1), parserDataBuffer(5), ProcessMsg@payload(6), 
 10917 ;;  data_len        1    1[BANK0 ] unsigned char 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  msg_id          1    4[BANK0 ] unsigned char 
 10920 ;;  sum             1    3[BANK0 ] unsigned char 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10930 ;;      Params:         0       2       0       0       0       0       0       0
 10931 ;;      Locals:         0       2       0       0       0       0       0       0
 10932 ;;      Temps:          0       1       0       0       0       0       0       0
 10933 ;;      Totals:         0       5       0       0       0       0       0       0
 10934 ;;Total ram usage:        5 bytes
 10935 ;; Hardware stack levels used: 1
 10936 ;; Hardware stack levels required when called: 9
 10937 ;; This function calls:
 10938 ;;		_SendSync
 10939 ;; This function is called by:
 10940 ;;		_ProcessMsg
 10941 ;;		_SendNack
 10942 ;;		_Parse
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946     062C                     _SendMsg:	
 10947                           ;psect for function _SendMsg
 10948                           
 10949                           
 10950                           ;incstack = 0
 10951                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10952                           ;SendMsg@msg_id stored from wreg
 10953     062C  0020               	movlb	0	; select bank0
 10954     062D  00A4               	movwf	SendMsg@msg_id
 10955     062E                     l3661:
 10956                           
 10957                           ;parser.c: 37:     uint8_t sum = 0x00;
 10958     062E  01A3               	clrf	SendMsg@sum
 10959     062F                     l3663:
 10960                           
 10961                           ;parser.c: 39:     SendSync(0x01);
 10962     062F  3001               	movlw	1
 10963     0630  318E  2620  3186   	fcall	_SendSync
 10964     0633                     l3665:
 10965                           
 10966                           ;parser.c: 41:     SendSync(msg_id);
 10967     0633  0020               	movlb	0	; select bank0
 10968     0634  0824               	movf	SendMsg@msg_id,w
 10969     0635  318E  2620  3186   	fcall	_SendSync
 10970     0638                     l3667:
 10971                           
 10972                           ;parser.c: 43:     if (msg_id == RFDU_NVT_NACK)
 10973     0638  300B               	movlw	11
 10974     0639  0020               	movlb	0	; select bank0
 10975     063A  0624               	xorwf	SendMsg@msg_id,w
 10976     063B  1D03               	btfss	3,2
 10977     063C  2E3E               	goto	u1741
 10978     063D  2E3F               	goto	u1740
 10979     063E                     u1741:
 10980     063E  2E47               	goto	l3673
 10981     063F                     u1740:
 10982     063F                     l3669:
 10983                           
 10984                           ;parser.c: 44:     {;parser.c: 45:         SendSync(*data);
 10985     063F  0820               	movf	SendMsg@data,w
 10986     0640  0086               	movwf	6
 10987     0641  0187               	clrf	7
 10988     0642  0801               	movf	1,w
 10989     0643  318E  2620  3186   	fcall	_SendSync
 10990     0646  2E67               	goto	l771
 10991     0647                     l3673:
 10992                           
 10993                           ;parser.c: 49:     for (; data_len > 0; data_len--) {
 10994     0647  0821               	movf	SendMsg@data_len,w
 10995     0648  1D03               	btfss	3,2
 10996     0649  2E4B               	goto	u1751
 10997     064A  2E4C               	goto	u1750
 10998     064B                     u1751:
 10999     064B  2E4D               	goto	l3677
 11000     064C                     u1750:
 11001     064C  2E63               	goto	l3687
 11002     064D                     l3677:
 11003                           
 11004                           ;parser.c: 50:         SendSync(*data);
 11005     064D  0820               	movf	SendMsg@data,w
 11006     064E  0086               	movwf	6
 11007     064F  0187               	clrf	7
 11008     0650  0801               	movf	1,w
 11009     0651  318E  2620  3186   	fcall	_SendSync
 11010     0654                     l3679:
 11011                           
 11012                           ;parser.c: 51:         sum += *data;
 11013     0654  0020               	movlb	0	; select bank0
 11014     0655  0820               	movf	SendMsg@data,w
 11015     0656  0086               	movwf	6
 11016     0657  0187               	clrf	7
 11017     0658  0801               	movf	1,w
 11018     0659  00A2               	movwf	??_SendMsg
 11019     065A  0822               	movf	??_SendMsg,w
 11020     065B  07A3               	addwf	SendMsg@sum,f
 11021     065C                     l3681:
 11022                           
 11023                           ;parser.c: 52:         data++;
 11024     065C  3001               	movlw	1
 11025     065D  00A2               	movwf	??_SendMsg
 11026     065E  0822               	movf	??_SendMsg,w
 11027     065F  07A0               	addwf	SendMsg@data,f
 11028     0660                     l3683:
 11029                           
 11030                           ;parser.c: 53:     }
 11031     0660  3001               	movlw	1
 11032     0661  02A1               	subwf	SendMsg@data_len,f
 11033     0662  2E47               	goto	l3673
 11034     0663                     l3687:
 11035                           
 11036                           ;parser.c: 55:     SendSync(sum);
 11037     0663  0823               	movf	SendMsg@sum,w
 11038     0664  318E  2620  3186   	fcall	_SendSync
 11039     0667                     l771:
 11040     0667  0008               	return
 11041     0668                     __end_of_SendMsg:
 11042                           
 11043                           	psect	text44
 11044     0E20                     __ptext44:	
 11045 ;; *************** function _SendSync *****************
 11046 ;; Defined at:
 11047 ;;		line 23 in file "parser.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  data            1    wreg     unsigned char 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  data            1    5[COMMON] unsigned char 
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      void 
 11054 ;; Registers used:
 11055 ;;		wreg, status,2, status,0, pclath, cstack
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11061 ;;      Params:         0       0       0       0       0       0       0       0
 11062 ;;      Locals:         1       0       0       0       0       0       0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0
 11064 ;;      Totals:         1       0       0       0       0       0       0       0
 11065 ;;Total ram usage:        1 bytes
 11066 ;; Hardware stack levels used: 1
 11067 ;; Hardware stack levels required when called: 8
 11068 ;; This function calls:
 11069 ;;		_EUSART_IsTxReady
 11070 ;;		_EUSART_Write
 11071 ;; This function is called by:
 11072 ;;		_SendMsg
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076     0E20                     _SendSync:	
 11077                           ;psect for function _SendSync
 11078                           
 11079                           
 11080                           ;incstack = 0
 11081                           ; Regs used in _SendSync: [wreg+status,2+status,0+pclath+cstack]
 11082                           ;SendSync@data stored from wreg
 11083     0E20  00F5               	movwf	SendSync@data
 11084     0E21                     l3551:
 11085                           
 11086                           ;parser.c: 23: void SendSync(uint8_t data);parser.c: 24: {;parser.c: 25:     while(!EUSA
      +                          RT_IsTxReady())
 11087     0E21  2E23               	goto	l3553
 11088     0E22                     l765:
 11089                           
 11090                           ;parser.c: 26:         __nop();
 11091     0E22  0000               	nop
 11092     0E23                     l3553:
 11093                           
 11094                           ;parser.c: 25:     while(!EUSART_IsTxReady())
 11095     0E23  318E  2601  318E   	fcall	_EUSART_IsTxReady
 11096     0E26  3A00               	xorlw	0
 11097     0E27  1903               	skipnz
 11098     0E28  2E2A               	goto	u1571
 11099     0E29  2E2B               	goto	u1570
 11100     0E2A                     u1571:
 11101     0E2A  2E22               	goto	l765
 11102     0E2B                     u1570:
 11103     0E2B                     l3555:
 11104                           
 11105                           ;parser.c: 27:     EUSART_Write(data);
 11106     0E2B  0875               	movf	SendSync@data,w
 11107     0E2C  00F4               	movwf	EUSART_Write@txData
 11108     0E2D  318D  252C  318E   	fcall	_EUSART_Write
 11109     0E30                     l767:
 11110     0E30  0008               	return
 11111     0E31                     __end_of_SendSync:
 11112                           
 11113                           	psect	text45
 11114     0D2C                     __ptext45:	
 11115 ;; *************** function _EUSART_Write *****************
 11116 ;; Defined at:
 11117 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  txData          1    4[COMMON] unsigned char 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;		None
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  1    wreg      void 
 11124 ;; Registers used:
 11125 ;;		wreg
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11131 ;;      Params:         1       0       0       0       0       0       0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0
 11133 ;;      Temps:          0       0       0       0       0       0       0       0
 11134 ;;      Totals:         1       0       0       0       0       0       0       0
 11135 ;;Total ram usage:        1 bytes
 11136 ;; Hardware stack levels used: 1
 11137 ;; Hardware stack levels required when called: 7
 11138 ;; This function calls:
 11139 ;;		Nothing
 11140 ;; This function is called by:
 11141 ;;		_SendSync
 11142 ;;		_EUSART_sendMsg
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146     0D2C                     _EUSART_Write:	
 11147                           ;psect for function _EUSART_Write
 11148                           
 11149     0D2C                     l3517:	
 11150                           ;incstack = 0
 11151                           ; Regs used in _EUSART_Write: [wreg]
 11152                           
 11153                           
 11154                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
 11155     0D2C  0874               	movf	EUSART_Write@txData,w
 11156     0D2D  0023               	movlb	3	; select bank3
 11157     0D2E  009A               	movwf	26	;volatile
 11158     0D2F                     l613:
 11159     0D2F  0008               	return
 11160     0D30                     __end_of_EUSART_Write:
 11161                           
 11162                           	psect	text46
 11163     0E01                     __ptext46:	
 11164 ;; *************** function _EUSART_IsTxReady *****************
 11165 ;; Defined at:
 11166 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;		None
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;		None
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      _Bool 
 11173 ;; Registers used:
 11174 ;;		wreg, status,2
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11180 ;;      Params:         0       0       0       0       0       0       0       0
 11181 ;;      Locals:         1       0       0       0       0       0       0       0
 11182 ;;      Temps:          0       0       0       0       0       0       0       0
 11183 ;;      Totals:         1       0       0       0       0       0       0       0
 11184 ;;Total ram usage:        1 bytes
 11185 ;; Hardware stack levels used: 1
 11186 ;; Hardware stack levels required when called: 7
 11187 ;; This function calls:
 11188 ;;		Nothing
 11189 ;; This function is called by:
 11190 ;;		_SendSync
 11191 ;;		_EUSART_sendMsg
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195     0E01                     _EUSART_IsTxReady:	
 11196                           ;psect for function _EUSART_IsTxReady
 11197                           
 11198     0E01                     l3505:	
 11199                           ;incstack = 0
 11200                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2]
 11201                           
 11202                           
 11203                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TXIF && TX1STAb
      +                          its.TXEN);
 11204     0E01  01F4               	clrf	_EUSART_IsTxReady$1324
 11205     0E02                     l3507:
 11206     0E02  0020               	movlb	0	; select bank0
 11207     0E03  1E10               	btfss	16,4	;volatile
 11208     0E04  2E06               	goto	u1521
 11209     0E05  2E07               	goto	u1520
 11210     0E06                     u1521:
 11211     0E06  2E0E               	goto	l3513
 11212     0E07                     u1520:
 11213     0E07                     l3509:
 11214     0E07  0023               	movlb	3	; select bank3
 11215     0E08  1E9E               	btfss	30,5	;volatile
 11216     0E09  2E0B               	goto	u1531
 11217     0E0A  2E0C               	goto	u1530
 11218     0E0B                     u1531:
 11219     0E0B  2E0E               	goto	l3513
 11220     0E0C                     u1530:
 11221     0E0C                     l3511:
 11222     0E0C  01F4               	clrf	_EUSART_IsTxReady$1324
 11223     0E0D  0AF4               	incf	_EUSART_IsTxReady$1324,f
 11224     0E0E                     l3513:
 11225     0E0E  0874               	movf	_EUSART_IsTxReady$1324,w
 11226     0E0F                     l597:
 11227     0E0F  0008               	return
 11228     0E10                     __end_of_EUSART_IsTxReady:
 11229                           
 11230                           	psect	text47
 11231     0FAC                     __ptext47:	
 11232 ;; *************** function _EUSART_Read *****************
 11233 ;; Defined at:
 11234 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      unsigned char 
 11241 ;; Registers used:
 11242 ;;		wreg, status,2, status,0, pclath, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11248 ;;      Params:         0       0       0       0       0       0       0       0
 11249 ;;      Locals:         0       0       0       0       0       0       0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0
 11251 ;;      Totals:         0       0       0       0       0       0       0       0
 11252 ;;Total ram usage:        0 bytes
 11253 ;; Hardware stack levels used: 1
 11254 ;; Hardware stack levels required when called: 8
 11255 ;; This function calls:
 11256 ;;		NULL
 11257 ;;		_EUSART_DefaultFramingErrorCallback
 11258 ;;		_EUSART_DefaultOverrunErrorCallback
 11259 ;; This function is called by:
 11260 ;;		_main
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264     0FAC                     _EUSART_Read:	
 11265                           ;psect for function _EUSART_Read
 11266                           
 11267     0FAC                     l3151:	
 11268                           ;incstack = 0
 11269                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 11270                           
 11271                           
 11272                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 11273     0FAC  0020               	movlb	0	; select bank0
 11274     0FAD  01E0               	clrf	_eusartRxLastError	;volatile
 11275     0FAE  01E1               	clrf	_eusartRxLastError+1	;volatile
 11276     0FAF                     l3153:
 11277                           
 11278                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 11279     0FAF  0023               	movlb	3	; select bank3
 11280     0FB0  1C9D               	btfss	29,1	;volatile
 11281     0FB1  2FB3               	goto	u1281
 11282     0FB2  2FB4               	goto	u1280
 11283     0FB3                     u1281:
 11284     0FB3  2FC1               	goto	l3161
 11285     0FB4                     u1280:
 11286     0FB4                     l3155:
 11287                           
 11288                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 11289     0FB4  0020               	movlb	0	; select bank0
 11290     0FB5  1560               	bsf	_eusartRxLastError,2	;volatile
 11291     0FB6                     l3157:
 11292                           
 11293                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 11294     0FB6  085E               	movf	_EUSART_OverrunErrorHandler,w
 11295     0FB7  045F               	iorwf	_EUSART_OverrunErrorHandler+1,w
 11296     0FB8  1903               	btfsc	3,2
 11297     0FB9  2FBB               	goto	u1291
 11298     0FBA  2FBC               	goto	u1290
 11299     0FBB                     u1291:
 11300     0FBB  2FC1               	goto	l3161
 11301     0FBC                     u1290:
 11302     0FBC                     l3159:
 11303                           
 11304                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 11305     0FBC  085F               	movf	_EUSART_OverrunErrorHandler+1,w
 11306     0FBD  008A               	movwf	10
 11307     0FBE  085E               	movf	_EUSART_OverrunErrorHandler,w
 11308     0FBF  000A               	callw
 11309     0FC0  318F               	pagesel	$
 11310     0FC1                     l3161:
 11311                           
 11312                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 11313     0FC1  0023               	movlb	3	; select bank3
 11314     0FC2  1D1D               	btfss	29,2	;volatile
 11315     0FC3  2FC5               	goto	u1301
 11316     0FC4  2FC6               	goto	u1300
 11317     0FC5                     u1301:
 11318     0FC5  2FD3               	goto	l3169
 11319     0FC6                     u1300:
 11320     0FC6                     l3163:
 11321                           
 11322                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 11323     0FC6  0020               	movlb	0	; select bank0
 11324     0FC7  14E0               	bsf	_eusartRxLastError,1	;volatile
 11325     0FC8                     l3165:
 11326                           
 11327                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 11328     0FC8  0876               	movf	_EUSART_FramingErrorHandler,w
 11329     0FC9  0477               	iorwf	_EUSART_FramingErrorHandler+1,w
 11330     0FCA  1903               	btfsc	3,2
 11331     0FCB  2FCD               	goto	u1311
 11332     0FCC  2FCE               	goto	u1310
 11333     0FCD                     u1311:
 11334     0FCD  2FD3               	goto	l3169
 11335     0FCE                     u1310:
 11336     0FCE                     l3167:
 11337                           
 11338                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 11339     0FCE  0877               	movf	_EUSART_FramingErrorHandler+1,w
 11340     0FCF  008A               	movwf	10
 11341     0FD0  0876               	movf	_EUSART_FramingErrorHandler,w
 11342     0FD1  000A               	callw
 11343     0FD2  318F               	pagesel	$
 11344     0FD3                     l3169:
 11345                           
 11346                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 11347     0FD3  0023               	movlb	3	; select bank3
 11348     0FD4  0819               	movf	25,w	;volatile
 11349     0FD5                     l610:
 11350     0FD5  0008               	return
 11351     0FD6                     __end_of_EUSART_Read:
 11352                           
 11353                           	psect	text48
 11354     0D28                     __ptext48:	
 11355 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 11356 ;; Defined at:
 11357 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		None
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11371 ;;      Params:         0       0       0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used: 1
 11377 ;; Hardware stack levels required when called: 7
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_EUSART_Initialize
 11382 ;;		_EUSART_Read
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386     0D28                     _EUSART_DefaultOverrunErrorCallback:	
 11387                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11388                           
 11389     0D28                     l2997:	
 11390                           ;incstack = 0
 11391                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11392                           
 11393                           
 11394                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 11395     0D28  0023               	movlb	3	; select bank3
 11396     0D29  121D               	bcf	29,4	;volatile
 11397                           
 11398                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 11399     0D2A  161D               	bsf	29,4	;volatile
 11400     0D2B                     l619:
 11401     0D2B  0008               	return
 11402     0D2C                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11403                           
 11404                           	psect	text49
 11405     0003                     __ptext49:	
 11406 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11407 ;; Defined at:
 11408 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;		None
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;		None
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  1    wreg      void 
 11415 ;; Registers used:
 11416 ;;		None
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11422 ;;      Params:         0       0       0       0       0       0       0       0
 11423 ;;      Locals:         0       0       0       0       0       0       0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0
 11425 ;;      Totals:         0       0       0       0       0       0       0       0
 11426 ;;Total ram usage:        0 bytes
 11427 ;; Hardware stack levels used: 1
 11428 ;; Hardware stack levels required when called: 7
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_EUSART_Initialize
 11433 ;;		_EUSART_Read
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437     0003                     _EUSART_DefaultFramingErrorCallback:	
 11438                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11439                           
 11440     0003                     l616:	
 11441                           ;incstack = 0
 11442                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11443                           
 11444     0003  0008               	return
 11445     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11446                           
 11447                           	psect	text50
 11448     0D3E                     __ptext50:	
 11449 ;; *************** function _EUSART_IsRxReady *****************
 11450 ;; Defined at:
 11451 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;		None
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;		None
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  1    wreg      _Bool 
 11458 ;; Registers used:
 11459 ;;		wreg, status,2, status,0
 11460 ;; Tracked objects:
 11461 ;;		On entry : 0/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11465 ;;      Params:         0       0       0       0       0       0       0       0
 11466 ;;      Locals:         0       0       0       0       0       0       0       0
 11467 ;;      Temps:          0       0       0       0       0       0       0       0
 11468 ;;      Totals:         0       0       0       0       0       0       0       0
 11469 ;;Total ram usage:        0 bytes
 11470 ;; Hardware stack levels used: 1
 11471 ;; Hardware stack levels required when called: 7
 11472 ;; This function calls:
 11473 ;;		Nothing
 11474 ;; This function is called by:
 11475 ;;		_main
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479     0D3E                     _EUSART_IsRxReady:	
 11480                           ;psect for function _EUSART_IsRxReady
 11481                           
 11482     0D3E                     l3147:	
 11483                           ;incstack = 0
 11484                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11485                           
 11486                           
 11487                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 11488     0D3E  0020               	movlb	0	; select bank0
 11489     0D3F  0E10               	swapf	16,w	;volatile
 11490     0D40  0C89               	rrf	9,f
 11491     0D41  3901               	andlw	1
 11492     0D42                     l592:
 11493     0D42  0008               	return
 11494     0D43                     __end_of_EUSART_IsRxReady:
 11495                           
 11496                           	psect	intentry
 11497     0004                     __pintentry:	
 11498 ;; *************** function _INTERRUPT_InterruptManager *****************
 11499 ;; Defined at:
 11500 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;		None
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;		None
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  1    wreg      void 
 11507 ;; Registers used:
 11508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/0
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11514 ;;      Params:         0       0       0       0       0       0       0       0
 11515 ;;      Locals:         0       0       0       0       0       0       0       0
 11516 ;;      Temps:          0       0       0       0       0       0       0       0
 11517 ;;      Totals:         0       0       0       0       0       0       0       0
 11518 ;;Total ram usage:        0 bytes
 11519 ;; Hardware stack levels used: 1
 11520 ;; Hardware stack levels required when called: 6
 11521 ;; This function calls:
 11522 ;;		_ADC_ISR
 11523 ;;		_I2C1_ERROR_ISR
 11524 ;;		_I2C1_ISR
 11525 ;; This function is called by:
 11526 ;;		Interrupt level 1
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530     0004                     _INTERRUPT_InterruptManager:
 11531                           
 11532                           ;incstack = 0
 11533     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11534                           
 11535                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11536     0005  3180               	pagesel	$
 11537     0006                     i1l3337:
 11538                           
 11539                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11540     0006  1F0B               	btfss	11,6	;volatile
 11541     0007  2809               	goto	u141_21
 11542     0008  280A               	goto	u141_20
 11543     0009                     u141_21:
 11544     0009  2834               	goto	i1l455
 11545     000A                     u141_20:
 11546     000A                     i1l3339:
 11547                           
 11548                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11549     000A  0021               	movlb	1	; select bank1
 11550     000B  1F10               	btfss	16,6	;volatile
 11551     000C  280E               	goto	u142_21
 11552     000D  280F               	goto	u142_20
 11553     000E                     u142_21:
 11554     000E  2818               	goto	i1l448
 11555     000F                     u142_20:
 11556     000F                     i1l3341:
 11557     000F  0020               	movlb	0	; select bank0
 11558     0010  1F10               	btfss	16,6	;volatile
 11559     0011  2813               	goto	u143_21
 11560     0012  2814               	goto	u143_20
 11561     0013                     u143_21:
 11562     0013  2818               	goto	i1l448
 11563     0014                     u143_20:
 11564     0014                     i1l3343:
 11565                           
 11566                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 11567     0014  318D  25F3  3180   	fcall	_ADC_ISR
 11568                           
 11569                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 11570     0017  2834               	goto	i1l455
 11571     0018                     i1l448:	
 11572                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 11573                           
 11574     0018  0021               	movlb	1	; select bank1
 11575     0019  1D91               	btfss	17,3	;volatile
 11576     001A  281C               	goto	u144_21
 11577     001B  281D               	goto	u144_20
 11578     001C                     u144_21:
 11579     001C  2826               	goto	i1l450
 11580     001D                     u144_20:
 11581     001D                     i1l3345:
 11582     001D  0020               	movlb	0	; select bank0
 11583     001E  1D91               	btfss	17,3	;volatile
 11584     001F  2821               	goto	u145_21
 11585     0020  2822               	goto	u145_20
 11586     0021                     u145_21:
 11587     0021  2826               	goto	i1l450
 11588     0022                     u145_20:
 11589     0022                     i1l3347:
 11590                           
 11591                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 11592     0022  318D  2520  3180   	fcall	_I2C1_ERROR_ISR
 11593                           
 11594                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 11595     0025  2834               	goto	i1l455
 11596     0026                     i1l450:	
 11597                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 11598                           
 11599     0026  0021               	movlb	1	; select bank1
 11600     0027  1D90               	btfss	16,3	;volatile
 11601     0028  282A               	goto	u146_21
 11602     0029  282B               	goto	u146_20
 11603     002A                     u146_21:
 11604     002A  2834               	goto	i1l449
 11605     002B                     u146_20:
 11606     002B                     i1l3349:
 11607     002B  0020               	movlb	0	; select bank0
 11608     002C  1D90               	btfss	16,3	;volatile
 11609     002D  282F               	goto	u147_21
 11610     002E  2830               	goto	u147_20
 11611     002F                     u147_21:
 11612     002F  2834               	goto	i1l449
 11613     0030                     u147_20:
 11614     0030                     i1l3351:
 11615                           
 11616                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 11617     0030  318D  2524  3180   	fcall	_I2C1_ISR
 11618                           
 11619                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 11620     0033  2834               	goto	i1l455
 11621     0034                     i1l449:
 11622     0034                     i1l455:	
 11623                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 11624                           
 11625     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11626     0035  0009               	retfie
 11627     0036                     __end_of_INTERRUPT_InterruptManager:
 11628                           
 11629                           	psect	text52
 11630     0D24                     __ptext52:	
 11631 ;; *************** function _I2C1_ISR *****************
 11632 ;; Defined at:
 11633 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  1    wreg      void 
 11640 ;; Registers used:
 11641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11647 ;;      Params:         0       0       0       0       0       0       0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0
 11650 ;;      Totals:         0       0       0       0       0       0       0       0
 11651 ;;Total ram usage:        0 bytes
 11652 ;; Hardware stack levels used: 1
 11653 ;; Hardware stack levels required when called: 5
 11654 ;; This function calls:
 11655 ;;		_I2C1_EventHandler
 11656 ;; This function is called by:
 11657 ;;		_INTERRUPT_InterruptManager
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661     0D24                     _I2C1_ISR:	
 11662                           ;psect for function _I2C1_ISR
 11663                           
 11664     0D24                     i1l3141:	
 11665                           ;incstack = 0
 11666                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11667                           
 11668                           
 11669                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 11670     0D24  3184  24B1  318D   	fcall	_I2C1_EventHandler
 11671     0D27                     i1l207:
 11672     0D27  0008               	return
 11673     0D28                     __end_of_I2C1_ISR:
 11674                           
 11675                           	psect	text53
 11676     04B1                     __ptext53:	
 11677 ;; *************** function _I2C1_EventHandler *****************
 11678 ;; Defined at:
 11679 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;		None
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      void 
 11686 ;; Registers used:
 11687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11693 ;;      Params:         0       0       0       0       0       0       0       0
 11694 ;;      Locals:         0       0       0       0       0       0       0       0
 11695 ;;      Temps:          2       0       0       0       0       0       0       0
 11696 ;;      Totals:         2       0       0       0       0       0       0       0
 11697 ;;Total ram usage:        2 bytes
 11698 ;; Hardware stack levels used: 1
 11699 ;; Hardware stack levels required when called: 4
 11700 ;; This function calls:
 11701 ;;		_I2C1_EVENT_ERROR
 11702 ;;		_I2C1_EVENT_IDLE
 11703 ;;		_I2C1_EVENT_NACK
 11704 ;;		_I2C1_EVENT_RESET
 11705 ;;		_I2C1_EVENT_RX
 11706 ;;		_I2C1_EVENT_SEND_RD_ADDR
 11707 ;;		_I2C1_EVENT_SEND_WR_ADDR
 11708 ;;		_I2C1_EVENT_STOP
 11709 ;;		_I2C1_EVENT_TX
 11710 ;;		_I2C1_InterruptClear
 11711 ;;		_I2C1_IsAddr
 11712 ;;		_I2C1_IsData
 11713 ;;		_I2C1_IsNack
 11714 ;; This function is called by:
 11715 ;;		_I2C1_ISR
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719     04B1                     _I2C1_EventHandler:	
 11720                           ;psect for function _I2C1_EventHandler
 11721                           
 11722     04B1                     i1l2899:	
 11723                           ;incstack = 0
 11724                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11725                           
 11726                           
 11727                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 11728     04B1  318C  24F3  3184   	fcall	_I2C1_InterruptClear
 11729     04B4                     i1l2901:
 11730                           
 11731                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 11732     04B4  318D  257A  3184   	fcall	_I2C1_IsAddr
 11733     04B7  3A00               	xorlw	0
 11734     04B8  1903               	skipnz
 11735     04B9  2CBB               	goto	u111_21
 11736     04BA  2CBC               	goto	u111_20
 11737     04BB                     u111_21:
 11738     04BB  2CCA               	goto	i1l2907
 11739     04BC                     u111_20:
 11740     04BC                     i1l2903:
 11741     04BC  318D  2554  3184   	fcall	_I2C1_IsNack
 11742     04BF  3A00               	xorlw	0
 11743     04C0  1903               	skipnz
 11744     04C1  2CC3               	goto	u112_21
 11745     04C2  2CC4               	goto	u112_20
 11746     04C3                     u112_21:
 11747     04C3  2CCA               	goto	i1l2907
 11748     04C4                     u112_20:
 11749     04C4                     i1l2905:
 11750                           
 11751                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 11752     04C4  3005               	movlw	5
 11753     04C5  0020               	movlb	0	; select bank0
 11754     04C6  00DD               	movwf	_i2c1Status+11	;volatile
 11755                           
 11756                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 11757     04C7  3001               	movlw	1
 11758     04C8  00DC               	movwf	_i2c1Status+10	;volatile
 11759                           
 11760                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 11761     04C9  2CDF               	goto	i1l2913
 11762     04CA                     i1l2907:
 11763     04CA  318D  2539  3184   	fcall	_I2C1_IsData
 11764     04CD  3A00               	xorlw	0
 11765     04CE  1903               	skipnz
 11766     04CF  2CD1               	goto	u113_21
 11767     04D0  2CD2               	goto	u113_20
 11768     04D1                     u113_21:
 11769     04D1  2CDF               	goto	i1l2913
 11770     04D2                     u113_20:
 11771     04D2                     i1l2909:
 11772     04D2  318D  2554  3184   	fcall	_I2C1_IsNack
 11773     04D5  3A00               	xorlw	0
 11774     04D6  1903               	skipnz
 11775     04D7  2CD9               	goto	u114_21
 11776     04D8  2CDA               	goto	u114_20
 11777     04D9                     u114_21:
 11778     04D9  2CDF               	goto	i1l2913
 11779     04DA                     u114_20:
 11780     04DA                     i1l2911:
 11781                           
 11782                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 11783     04DA  3005               	movlw	5
 11784     04DB  0020               	movlb	0	; select bank0
 11785     04DC  00DD               	movwf	_i2c1Status+11	;volatile
 11786                           
 11787                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 11788     04DD  3002               	movlw	2
 11789     04DE  00DC               	movwf	_i2c1Status+10	;volatile
 11790     04DF                     i1l2913:
 11791                           
 11792                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 11793     04DF  0020               	movlb	0	; select bank0
 11794     04E0  085D               	movf	_i2c1Status+11,w	;volatile
 11795     04E1  00F2               	movwf	??_I2C1_EventHandler
 11796     04E2  01F3               	clrf	??_I2C1_EventHandler+1
 11797     04E3  35F2               	lslf	??_I2C1_EventHandler,f
 11798     04E4  0DF3               	rlf	??_I2C1_EventHandler+1,f
 11799     04E5  300F               	movlw	low _i2c1_eventTable
 11800     04E6  0772               	addwf	??_I2C1_EventHandler,w
 11801     04E7  0084               	movwf	4
 11802     04E8  3008               	movlw	high _i2c1_eventTable
 11803     04E9  3D73               	addwfc	??_I2C1_EventHandler+1,w
 11804     04EA  3880               	iorlw	128
 11805     04EB  0085               	movwf	5
 11806     04EC  3F01               	moviw [1]fsr0
 11807     04ED  008A               	movwf	10
 11808     04EE  3F00               	moviw [0]fsr0
 11809     04EF  000A               	callw
 11810     04F0  3184               	pagesel	$
 11811     04F1  0020               	movlb	0	; select bank0
 11812     04F2  00DD               	movwf	_i2c1Status+11	;volatile
 11813     04F3                     i1l225:
 11814     04F3  0008               	return
 11815     04F4                     __end_of_I2C1_EventHandler:
 11816                           
 11817                           	psect	text54
 11818     0D54                     __ptext54:	
 11819 ;; *************** function _I2C1_IsNack *****************
 11820 ;; Defined at:
 11821 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;		None
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      _Bool 
 11828 ;; Registers used:
 11829 ;;		wreg, status,2, status,0
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11835 ;;      Params:         0       0       0       0       0       0       0       0
 11836 ;;      Locals:         0       0       0       0       0       0       0       0
 11837 ;;      Temps:          0       0       0       0       0       0       0       0
 11838 ;;      Totals:         0       0       0       0       0       0       0       0
 11839 ;;Total ram usage:        0 bytes
 11840 ;; Hardware stack levels used: 1
 11841 ;; This function calls:
 11842 ;;		Nothing
 11843 ;; This function is called by:
 11844 ;;		_I2C1_EventHandler
 11845 ;; This function uses a non-reentrant model
 11846 ;;
 11847                           
 11848     0D54                     _I2C1_IsNack:	
 11849                           ;psect for function _I2C1_IsNack
 11850                           
 11851     0D54                     i1l2681:	
 11852                           ;incstack = 0
 11853                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 11854                           
 11855                           
 11856                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 11857     0D54  0024               	movlb	4	; select bank4
 11858     0D55  0E16               	swapf	22,w	;volatile
 11859     0D56  0C89               	rrf	9,f
 11860     0D57  0C89               	rrf	9,f
 11861     0D58  3901               	andlw	1
 11862     0D59                     i1l300:
 11863     0D59  0008               	return
 11864     0D5A                     __end_of_I2C1_IsNack:
 11865                           
 11866                           	psect	text55
 11867     0D39                     __ptext55:	
 11868 ;; *************** function _I2C1_IsData *****************
 11869 ;; Defined at:
 11870 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;		None
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;		None
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      _Bool 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2, status,0
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11884 ;;      Params:         0       0       0       0       0       0       0       0
 11885 ;;      Locals:         0       0       0       0       0       0       0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0
 11887 ;;      Totals:         0       0       0       0       0       0       0       0
 11888 ;;Total ram usage:        0 bytes
 11889 ;; Hardware stack levels used: 1
 11890 ;; This function calls:
 11891 ;;		Nothing
 11892 ;; This function is called by:
 11893 ;;		_I2C1_EventHandler
 11894 ;; This function uses a non-reentrant model
 11895 ;;
 11896                           
 11897     0D39                     _I2C1_IsData:	
 11898                           ;psect for function _I2C1_IsData
 11899                           
 11900     0D39                     i1l2685:	
 11901                           ;incstack = 0
 11902                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 11903                           
 11904                           
 11905                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 11906     0D39  0024               	movlb	4	; select bank4
 11907     0D3A  0E14               	swapf	20,w	;volatile
 11908     0D3B  0C89               	rrf	9,f
 11909     0D3C  3901               	andlw	1
 11910     0D3D                     i1l303:
 11911     0D3D  0008               	return
 11912     0D3E                     __end_of_I2C1_IsData:
 11913                           
 11914                           	psect	text56
 11915     0D7A                     __ptext56:	
 11916 ;; *************** function _I2C1_IsAddr *****************
 11917 ;; Defined at:
 11918 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      _Bool 
 11925 ;; Registers used:
 11926 ;;		wreg, status,0
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11932 ;;      Params:         0       0       0       0       0       0       0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0
 11935 ;;      Totals:         0       0       0       0       0       0       0       0
 11936 ;;Total ram usage:        0 bytes
 11937 ;; Hardware stack levels used: 1
 11938 ;; This function calls:
 11939 ;;		Nothing
 11940 ;; This function is called by:
 11941 ;;		_I2C1_EventHandler
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945     0D7A                     _I2C1_IsAddr:	
 11946                           ;psect for function _I2C1_IsAddr
 11947                           
 11948     0D7A                     i1l2677:	
 11949                           ;incstack = 0
 11950                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 11951                           
 11952                           
 11953                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 11954     0D7A  1003               	clrc
 11955     0D7B  0024               	movlb	4	; select bank4
 11956     0D7C  1E94               	btfss	20,5	;volatile
 11957     0D7D  1403               	setc
 11958     0D7E  3000               	movlw	0
 11959     0D7F  3D09               	addwfc	9,w
 11960     0D80                     i1l306:
 11961     0D80  0008               	return
 11962     0D81                     __end_of_I2C1_IsAddr:
 11963                           
 11964                           	psect	text57
 11965     0D20                     __ptext57:	
 11966 ;; *************** function _I2C1_ERROR_ISR *****************
 11967 ;; Defined at:
 11968 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;		None
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;		None
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  1    wreg      void 
 11975 ;; Registers used:
 11976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11982 ;;      Params:         0       0       0       0       0       0       0       0
 11983 ;;      Locals:         0       0       0       0       0       0       0       0
 11984 ;;      Temps:          0       0       0       0       0       0       0       0
 11985 ;;      Totals:         0       0       0       0       0       0       0       0
 11986 ;;Total ram usage:        0 bytes
 11987 ;; Hardware stack levels used: 1
 11988 ;; Hardware stack levels required when called: 5
 11989 ;; This function calls:
 11990 ;;		_I2C1_ErrorEventHandler
 11991 ;; This function is called by:
 11992 ;;		_INTERRUPT_InterruptManager
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996     0D20                     _I2C1_ERROR_ISR:	
 11997                           ;psect for function _I2C1_ERROR_ISR
 11998                           
 11999     0D20                     i1l3143:	
 12000                           ;incstack = 0
 12001                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12002                           
 12003                           
 12004                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12005     0D20  318E  26F2  318D   	fcall	_I2C1_ErrorEventHandler
 12006     0D23                     i1l210:
 12007     0D23  0008               	return
 12008     0D24                     __end_of_I2C1_ERROR_ISR:
 12009                           
 12010                           	psect	text58
 12011     0EF2                     __ptext58:	
 12012 ;; *************** function _I2C1_ErrorEventHandler *****************
 12013 ;; Defined at:
 12014 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;		None
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;		None
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12028 ;;      Params:         0       0       0       0       0       0       0       0
 12029 ;;      Locals:         0       0       0       0       0       0       0       0
 12030 ;;      Temps:          2       0       0       0       0       0       0       0
 12031 ;;      Totals:         2       0       0       0       0       0       0       0
 12032 ;;Total ram usage:        2 bytes
 12033 ;; Hardware stack levels used: 1
 12034 ;; Hardware stack levels required when called: 4
 12035 ;; This function calls:
 12036 ;;		NULL
 12037 ;;		_I2C1_DefaultCallback
 12038 ;;		_I2C1_EVENT_ERROR
 12039 ;;		_I2C1_EVENT_IDLE
 12040 ;;		_I2C1_EVENT_NACK
 12041 ;;		_I2C1_EVENT_RESET
 12042 ;;		_I2C1_EVENT_RX
 12043 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12044 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12045 ;;		_I2C1_EVENT_STOP
 12046 ;;		_I2C1_EVENT_TX
 12047 ;;		_I2C1_ErrorInterruptClear
 12048 ;; This function is called by:
 12049 ;;		_I2C1_ERROR_ISR
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053     0EF2                     _I2C1_ErrorEventHandler:	
 12054                           ;psect for function _I2C1_ErrorEventHandler
 12055                           
 12056     0EF2                     i1l2915:	
 12057                           ;incstack = 0
 12058                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12059                           
 12060                           
 12061                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12062     0EF2  3006               	movlw	6
 12063     0EF3  0020               	movlb	0	; select bank0
 12064     0EF4  00DD               	movwf	_i2c1Status+11	;volatile
 12065                           
 12066                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12067     0EF5  3003               	movlw	3
 12068     0EF6  00DC               	movwf	_i2c1Status+10	;volatile
 12069     0EF7                     i1l2917:
 12070                           
 12071                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12072     0EF7  318C  24F0  318E   	fcall	_I2C1_ErrorInterruptClear
 12073     0EFA                     i1l2919:
 12074                           
 12075                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12076     0EFA  0020               	movlb	0	; select bank0
 12077     0EFB  085D               	movf	_i2c1Status+11,w	;volatile
 12078     0EFC  00F2               	movwf	??_I2C1_ErrorEventHandler
 12079     0EFD  01F3               	clrf	??_I2C1_ErrorEventHandler+1
 12080     0EFE  35F2               	lslf	??_I2C1_ErrorEventHandler,f
 12081     0EFF  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
 12082     0F00  300F               	movlw	low _i2c1_eventTable
 12083     0F01  0772               	addwf	??_I2C1_ErrorEventHandler,w
 12084     0F02  0084               	movwf	4
 12085     0F03  3008               	movlw	high _i2c1_eventTable
 12086     0F04  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12087     0F05  3880               	iorlw	128
 12088     0F06  0085               	movwf	5
 12089     0F07  3F01               	moviw [1]fsr0
 12090     0F08  008A               	movwf	10
 12091     0F09  3F00               	moviw [0]fsr0
 12092     0F0A  000A               	callw
 12093     0F0B  318E               	pagesel	$
 12094     0F0C  0020               	movlb	0	; select bank0
 12095     0F0D  00DD               	movwf	_i2c1Status+11	;volatile
 12096     0F0E                     i1l2921:
 12097                           
 12098                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12099     0F0E  0863               	movf	_I2C1_Callback+1,w
 12100     0F0F  008A               	movwf	10
 12101     0F10  0862               	movf	_I2C1_Callback,w
 12102     0F11  000A               	callw
 12103     0F12  318E               	pagesel	$
 12104     0F13                     i1l228:
 12105     0F13  0008               	return
 12106     0F14                     __end_of_I2C1_ErrorEventHandler:
 12107                           
 12108                           	psect	text59
 12109     0D73                     __ptext59:	
 12110 ;; *************** function _I2C1_EVENT_RESET *****************
 12111 ;; Defined at:
 12112 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;		None
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;		None
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  1    wreg      enum E9559
 12119 ;; Registers used:
 12120 ;;		wreg, status,2, status,0, pclath, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12126 ;;      Params:         0       0       0       0       0       0       0       0
 12127 ;;      Locals:         0       0       0       0       0       0       0       0
 12128 ;;      Temps:          0       0       0       0       0       0       0       0
 12129 ;;      Totals:         0       0       0       0       0       0       0       0
 12130 ;;Total ram usage:        0 bytes
 12131 ;; Hardware stack levels used: 1
 12132 ;; Hardware stack levels required when called: 1
 12133 ;; This function calls:
 12134 ;;		_I2C1_BusReset
 12135 ;; This function is called by:
 12136 ;;		_I2C1_EVENT_ERROR
 12137 ;;		_I2C1_EventHandler
 12138 ;;		_I2C1_ErrorEventHandler
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142     0D73                     _I2C1_EVENT_RESET:	
 12143                           ;psect for function _I2C1_EVENT_RESET
 12144                           
 12145     0D73                     i1l2551:	
 12146                           ;incstack = 0
 12147                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12148                           
 12149                           
 12150                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12151     0D73  318D  2508  318D   	fcall	_I2C1_BusReset
 12152     0D76                     i1l2553:
 12153                           
 12154                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12155     0D76  0020               	movlb	0	; select bank0
 12156     0D77  01D2               	clrf	_i2c1Status	;volatile
 12157     0D78                     i1l2555:
 12158                           
 12159                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12160     0D78  3000               	movlw	0
 12161     0D79                     i1l267:
 12162     0D79  0008               	return
 12163     0D7A                     __end_of_I2C1_EVENT_RESET:
 12164                           
 12165                           	psect	text60
 12166     0D9E                     __ptext60:	
 12167 ;; *************** function _I2C1_EVENT_STOP *****************
 12168 ;; Defined at:
 12169 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12170 ;; Parameters:    Size  Location     Type
 12171 ;;		None
 12172 ;; Auto vars:     Size  Location     Type
 12173 ;;		None
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  1    wreg      enum E9559
 12176 ;; Registers used:
 12177 ;;		wreg, status,2, status,0, pclath, cstack
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12183 ;;      Params:         0       0       0       0       0       0       0       0
 12184 ;;      Locals:         0       0       0       0       0       0       0       0
 12185 ;;      Temps:          0       0       0       0       0       0       0       0
 12186 ;;      Totals:         0       0       0       0       0       0       0       0
 12187 ;;Total ram usage:        0 bytes
 12188 ;; Hardware stack levels used: 1
 12189 ;; Hardware stack levels required when called: 2
 12190 ;; This function calls:
 12191 ;;		_I2C1_Close
 12192 ;;		_I2C1_StopSend
 12193 ;; This function is called by:
 12194 ;;		_I2C1_EVENT_TX
 12195 ;;		_I2C1_EVENT_NACK
 12196 ;;		_I2C1_EventHandler
 12197 ;;		_I2C1_ErrorEventHandler
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201     0D9E                     _I2C1_EVENT_STOP:	
 12202                           ;psect for function _I2C1_EVENT_STOP
 12203                           
 12204     0D9E                     i1l2529:	
 12205                           ;incstack = 0
 12206                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12207                           
 12208                           
 12209                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12210     0D9E  318C  24F6  318D   	fcall	_I2C1_StopSend
 12211                           
 12212                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12213     0DA1  318E  2631  318D   	fcall	_I2C1_Close
 12214     0DA4                     i1l2531:
 12215                           
 12216                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12217     0DA4  3000               	movlw	0
 12218     0DA5                     i1l264:
 12219     0DA5  0008               	return
 12220     0DA6                     __end_of_I2C1_EVENT_STOP:
 12221                           
 12222                           	psect	text61
 12223     0D4E                     __ptext61:	
 12224 ;; *************** function _I2C1_EVENT_ERROR *****************
 12225 ;; Defined at:
 12226 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;		None
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;  retEventStat    1    0[COMMON] enum E9559
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      enum E9559
 12233 ;; Registers used:
 12234 ;;		wreg, status,2, status,0, pclath, cstack
 12235 ;; Tracked objects:
 12236 ;;		On entry : 0/0
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12240 ;;      Params:         0       0       0       0       0       0       0       0
 12241 ;;      Locals:         1       0       0       0       0       0       0       0
 12242 ;;      Temps:          0       0       0       0       0       0       0       0
 12243 ;;      Totals:         1       0       0       0       0       0       0       0
 12244 ;;Total ram usage:        1 bytes
 12245 ;; Hardware stack levels used: 1
 12246 ;; Hardware stack levels required when called: 2
 12247 ;; This function calls:
 12248 ;;		_I2C1_EVENT_RESET
 12249 ;; This function is called by:
 12250 ;;		_I2C1_EventHandler
 12251 ;;		_I2C1_ErrorEventHandler
 12252 ;; This function uses a non-reentrant model
 12253 ;;
 12254                           
 12255     0D4E                     _I2C1_EVENT_ERROR:	
 12256                           ;psect for function _I2C1_EVENT_ERROR
 12257                           
 12258     0D4E                     i1l2765:	
 12259                           ;incstack = 0
 12260                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12261                           
 12262     0D4E                     i1l2767:
 12263                           
 12264                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12265     0D4E  318D  2573  318D   	fcall	_I2C1_EVENT_RESET
 12266     0D51  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12267     0D52                     i1l2769:
 12268                           
 12269                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12270     0D52  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12271     0D53                     i1l261:
 12272     0D53  0008               	return
 12273     0D54                     __end_of_I2C1_EVENT_ERROR:
 12274                           
 12275                           	psect	text62
 12276     0D48                     __ptext62:	
 12277 ;; *************** function _I2C1_EVENT_NACK *****************
 12278 ;; Defined at:
 12279 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;		None
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;  retEventStat    1    0[COMMON] enum E9559
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      enum E9559
 12286 ;; Registers used:
 12287 ;;		wreg, status,2, status,0, pclath, cstack
 12288 ;; Tracked objects:
 12289 ;;		On entry : 0/0
 12290 ;;		On exit  : 0/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12293 ;;      Params:         0       0       0       0       0       0       0       0
 12294 ;;      Locals:         1       0       0       0       0       0       0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0
 12296 ;;      Totals:         1       0       0       0       0       0       0       0
 12297 ;;Total ram usage:        1 bytes
 12298 ;; Hardware stack levels used: 1
 12299 ;; Hardware stack levels required when called: 3
 12300 ;; This function calls:
 12301 ;;		_I2C1_EVENT_STOP
 12302 ;; This function is called by:
 12303 ;;		_I2C1_EventHandler
 12304 ;;		_I2C1_ErrorEventHandler
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308     0D48                     _I2C1_EVENT_NACK:	
 12309                           ;psect for function _I2C1_EVENT_NACK
 12310                           
 12311     0D48                     i1l2757:	
 12312                           ;incstack = 0
 12313                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12314                           
 12315     0D48                     i1l2759:
 12316                           
 12317                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12318     0D48  318D  259E  318D   	fcall	_I2C1_EVENT_STOP
 12319     0D4B  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12320     0D4C                     i1l2761:
 12321                           
 12322                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12323     0D4C  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12324     0D4D                     i1l258:
 12325     0D4D  0008               	return
 12326     0D4E                     __end_of_I2C1_EVENT_NACK:
 12327                           
 12328                           	psect	text63
 12329     06A3                     __ptext63:	
 12330 ;; *************** function _I2C1_EVENT_RX *****************
 12331 ;; Defined at:
 12332 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;		None
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;  retEventStat    1    1[COMMON] enum E9559
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      enum E9559
 12339 ;; Registers used:
 12340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12346 ;;      Params:         0       0       0       0       0       0       0       0
 12347 ;;      Locals:         1       0       0       0       0       0       0       0
 12348 ;;      Temps:          1       0       0       0       0       0       0       0
 12349 ;;      Totals:         2       0       0       0       0       0       0       0
 12350 ;;Total ram usage:        2 bytes
 12351 ;; Hardware stack levels used: 1
 12352 ;; Hardware stack levels required when called: 1
 12353 ;; This function calls:
 12354 ;;		_I2C1_AckSend
 12355 ;;		_I2C1_DataReceive
 12356 ;;		_I2C1_IsRxBufFull
 12357 ;;		_I2C1_NackSend
 12358 ;;		_I2C1_ReceiveEnable
 12359 ;;		_I2C1_RestartDisable
 12360 ;; This function is called by:
 12361 ;;		_I2C1_EventHandler
 12362 ;;		_I2C1_ErrorEventHandler
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366     06A3                     _I2C1_EVENT_RX:	
 12367                           ;psect for function _I2C1_EVENT_RX
 12368                           
 12369     06A3                     i1l2731:	
 12370                           ;incstack = 0
 12371                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12372                           
 12373                           
 12374                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12375     06A3  3004               	movlw	4
 12376     06A4  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12377     06A5                     i1l2733:
 12378                           
 12379                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12380     06A5  318D  2514  3186   	fcall	_I2C1_IsRxBufFull
 12381     06A8  3A00               	xorlw	0
 12382     06A9  1903               	skipnz
 12383     06AA  2EAC               	goto	u96_21
 12384     06AB  2EAD               	goto	u96_20
 12385     06AC                     u96_21:
 12386     06AC  2ED7               	goto	i1l2751
 12387     06AD                     u96_20:
 12388     06AD                     i1l2735:
 12389                           
 12390                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12391     06AD  0020               	movlb	0	; select bank0
 12392     06AE  0859               	movf	_i2c1Status+7,w	;volatile
 12393     06AF  045A               	iorwf	_i2c1Status+8,w	;volatile
 12394     06B0  1903               	btfsc	3,2
 12395     06B1  2EB3               	goto	u97_21
 12396     06B2  2EB4               	goto	u97_20
 12397     06B3                     u97_21:
 12398     06B3  2EC4               	goto	i1l2743
 12399     06B4                     u97_20:
 12400     06B4                     i1l2737:
 12401                           
 12402                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12403     06B4  0858               	movf	low ((_i2c1Status| 0+6)),w	;volatile
 12404     06B5  0086               	movwf	6
 12405     06B6  0187               	clrf	7
 12406     06B7  318C  24F9  3186   	fcall	_I2C1_DataReceive
 12407     06BA  0081               	movwf	1
 12408     06BB                     i1l2739:
 12409     06BB  3001               	movlw	1
 12410     06BC  00F0               	movwf	??_I2C1_EVENT_RX
 12411     06BD  0870               	movf	??_I2C1_EVENT_RX,w
 12412     06BE  0020               	movlb	0	; select bank0
 12413     06BF  07D8               	addwf	low ((_i2c1Status| 0+6)),f	;volatile
 12414     06C0                     i1l2741:
 12415                           
 12416                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12417     06C0  3001               	movlw	1
 12418     06C1  02D9               	subwf	_i2c1Status+7,f	;volatile
 12419     06C2  3000               	movlw	0
 12420     06C3  3BDA               	subwfb	_i2c1Status+8,f	;volatile
 12421     06C4                     i1l2743:
 12422                           
 12423                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12424     06C4  0859               	movf	_i2c1Status+7,w	;volatile
 12425     06C5  045A               	iorwf	_i2c1Status+8,w	;volatile
 12426     06C6  1903               	btfsc	3,2
 12427     06C7  2EC9               	goto	u98_21
 12428     06C8  2ECA               	goto	u98_20
 12429     06C9                     u98_21:
 12430     06C9  2ECE               	goto	i1l2747
 12431     06CA                     u98_20:
 12432     06CA                     i1l2745:
 12433                           
 12434                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12435     06CA  318D  2510  3186   	fcall	_I2C1_AckSend
 12436                           
 12437                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12438     06CD  2EDA               	goto	i1l2753
 12439     06CE                     i1l2747:
 12440                           
 12441                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12442     06CE  318C  24FF  3186   	fcall	_I2C1_RestartDisable
 12443                           
 12444                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12445     06D1  318D  2518  3186   	fcall	_I2C1_NackSend
 12446     06D4                     i1l2749:
 12447                           
 12448                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12449     06D4  3007               	movlw	7
 12450     06D5  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12451     06D6  2EDA               	goto	i1l2753
 12452     06D7                     i1l2751:
 12453                           
 12454                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12455     06D7  318C  24FC  3186   	fcall	_I2C1_ReceiveEnable
 12456     06DA                     i1l2753:
 12457                           
 12458                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12459     06DA  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12460     06DB                     i1l255:
 12461     06DB  0008               	return
 12462     06DC                     __end_of_I2C1_EVENT_RX:
 12463                           
 12464                           	psect	text64
 12465     0D6C                     __ptext64:	
 12466 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12467 ;; Defined at:
 12468 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;		None
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;		None
 12473 ;; Return value:  Size  Location     Type
 12474 ;;                  1    wreg      enum E9559
 12475 ;; Registers used:
 12476 ;;		wreg, status,2, status,0, pclath, cstack
 12477 ;; Tracked objects:
 12478 ;;		On entry : 0/0
 12479 ;;		On exit  : 0/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12482 ;;      Params:         0       0       0       0       0       0       0       0
 12483 ;;      Locals:         0       0       0       0       0       0       0       0
 12484 ;;      Temps:          0       0       0       0       0       0       0       0
 12485 ;;      Totals:         0       0       0       0       0       0       0       0
 12486 ;;Total ram usage:        0 bytes
 12487 ;; Hardware stack levels used: 1
 12488 ;; Hardware stack levels required when called: 1
 12489 ;; This function calls:
 12490 ;;		_I2C1_DataTransmit
 12491 ;; This function is called by:
 12492 ;;		_I2C1_EventHandler
 12493 ;;		_I2C1_ErrorEventHandler
 12494 ;; This function uses a non-reentrant model
 12495 ;;
 12496                           
 12497     0D6C                     _I2C1_EVENT_SEND_WR_ADDR:	
 12498                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12499                           
 12500     0D6C                     i1l2701:	
 12501                           ;incstack = 0
 12502                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12503                           
 12504                           
 12505                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12506     0D6C  0020               	movlb	0	; select bank0
 12507     0D6D  3553               	lslf	_i2c1Status+1,w	;volatile
 12508     0D6E  318D  2534  318D   	fcall	_I2C1_DataTransmit
 12509     0D71                     i1l2703:
 12510                           
 12511                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12512     0D71  3003               	movlw	3
 12513     0D72                     i1l240:
 12514     0D72  0008               	return
 12515     0D73                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12516                           
 12517                           	psect	text65
 12518     0D96                     __ptext65:	
 12519 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12520 ;; Defined at:
 12521 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12522 ;; Parameters:    Size  Location     Type
 12523 ;;		None
 12524 ;; Auto vars:     Size  Location     Type
 12525 ;;		None
 12526 ;; Return value:  Size  Location     Type
 12527 ;;                  1    wreg      enum E9559
 12528 ;; Registers used:
 12529 ;;		wreg, status,2, status,0, pclath, cstack
 12530 ;; Tracked objects:
 12531 ;;		On entry : 0/0
 12532 ;;		On exit  : 0/0
 12533 ;;		Unchanged: 0/0
 12534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12535 ;;      Params:         0       0       0       0       0       0       0       0
 12536 ;;      Locals:         0       0       0       0       0       0       0       0
 12537 ;;      Temps:          0       0       0       0       0       0       0       0
 12538 ;;      Totals:         0       0       0       0       0       0       0       0
 12539 ;;Total ram usage:        0 bytes
 12540 ;; Hardware stack levels used: 1
 12541 ;; Hardware stack levels required when called: 1
 12542 ;; This function calls:
 12543 ;;		_I2C1_DataTransmit
 12544 ;; This function is called by:
 12545 ;;		_I2C1_EventHandler
 12546 ;;		_I2C1_ErrorEventHandler
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550     0D96                     _I2C1_EVENT_SEND_RD_ADDR:	
 12551                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12552                           
 12553     0D96                     i1l2695:	
 12554                           ;incstack = 0
 12555                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12556                           
 12557                           
 12558                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12559     0D96  1403               	setc
 12560     0D97  0020               	movlb	0	; select bank0
 12561     0D98  0D53               	rlf	_i2c1Status+1,w	;volatile
 12562     0D99  318D  2534  318D   	fcall	_I2C1_DataTransmit
 12563     0D9C                     i1l2697:
 12564                           
 12565                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 12566     0D9C  3004               	movlw	4
 12567     0D9D                     i1l237:
 12568     0D9D  0008               	return
 12569     0D9E                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 12570                           
 12571                           	psect	text66
 12572     0D1C                     __ptext66:	
 12573 ;; *************** function _I2C1_EVENT_IDLE *****************
 12574 ;; Defined at:
 12575 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12576 ;; Parameters:    Size  Location     Type
 12577 ;;		None
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;		None
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  1    wreg      enum E9559
 12582 ;; Registers used:
 12583 ;;		wreg, status,2
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12589 ;;      Params:         0       0       0       0       0       0       0       0
 12590 ;;      Locals:         0       0       0       0       0       0       0       0
 12591 ;;      Temps:          0       0       0       0       0       0       0       0
 12592 ;;      Totals:         0       0       0       0       0       0       0       0
 12593 ;;Total ram usage:        0 bytes
 12594 ;; Hardware stack levels used: 1
 12595 ;; This function calls:
 12596 ;;		Nothing
 12597 ;; This function is called by:
 12598 ;;		_I2C1_EventHandler
 12599 ;;		_I2C1_ErrorEventHandler
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603     0D1C                     _I2C1_EVENT_IDLE:	
 12604                           ;psect for function _I2C1_EVENT_IDLE
 12605                           
 12606     0D1C                     i1l2689:	
 12607                           ;incstack = 0
 12608                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 12609                           
 12610                           
 12611                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 12612     0D1C  0020               	movlb	0	; select bank0
 12613     0D1D  01D2               	clrf	_i2c1Status	;volatile
 12614     0D1E                     i1l2691:
 12615                           
 12616                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 12617     0D1E  3008               	movlw	8
 12618     0D1F                     i1l234:
 12619     0D1F  0008               	return
 12620     0D20                     __end_of_I2C1_EVENT_IDLE:
 12621                           
 12622                           	psect	text67
 12623     07CF                     __ptext67:	
 12624 ;; *************** function _I2C1_EVENT_TX *****************
 12625 ;; Defined at:
 12626 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;		None
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;  retEventStat    1    1[COMMON] enum E9559
 12631 ;; Return value:  Size  Location     Type
 12632 ;;                  1    wreg      enum E9559
 12633 ;; Registers used:
 12634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12635 ;; Tracked objects:
 12636 ;;		On entry : 0/0
 12637 ;;		On exit  : 0/0
 12638 ;;		Unchanged: 0/0
 12639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12640 ;;      Params:         0       0       0       0       0       0       0       0
 12641 ;;      Locals:         1       0       0       0       0       0       0       0
 12642 ;;      Temps:          0       0       0       0       0       0       0       0
 12643 ;;      Totals:         1       0       0       0       0       0       0       0
 12644 ;;Total ram usage:        1 bytes
 12645 ;; Hardware stack levels used: 1
 12646 ;; Hardware stack levels required when called: 3
 12647 ;; This function calls:
 12648 ;;		_I2C1_DataTransmit
 12649 ;;		_I2C1_EVENT_STOP
 12650 ;;		_I2C1_RestartEnable
 12651 ;; This function is called by:
 12652 ;;		_I2C1_EventHandler
 12653 ;;		_I2C1_ErrorEventHandler
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657     07CF                     _I2C1_EVENT_TX:	
 12658                           ;psect for function _I2C1_EVENT_TX
 12659                           
 12660     07CF                     i1l2707:	
 12661                           ;incstack = 0
 12662                           ; Regs used in _I2C1_EVENT_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12663                           
 12664     07CF                     i1l2709:
 12665                           
 12666                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 12667     07CF  0020               	movlb	0	; select bank0
 12668     07D0  0856               	movf	_i2c1Status+4,w	;volatile
 12669     07D1  0457               	iorwf	_i2c1Status+5,w	;volatile
 12670     07D2  1903               	btfsc	3,2
 12671     07D3  2FD5               	goto	u94_21
 12672     07D4  2FD6               	goto	u94_20
 12673     07D5                     u94_21:
 12674     07D5  2FE9               	goto	i1l2717
 12675     07D6                     u94_20:
 12676     07D6                     i1l2711:
 12677                           
 12678                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 12679     07D6  3001               	movlw	1
 12680     07D7  02D6               	subwf	_i2c1Status+4,f	;volatile
 12681     07D8  3000               	movlw	0
 12682     07D9  3BD7               	subwfb	_i2c1Status+5,f	;volatile
 12683     07DA                     i1l2713:
 12684                           
 12685                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 12686     07DA  3003               	movlw	3
 12687     07DB  3E52               	addlw	(low (_i2c1Status| 0))& (0+255)
 12688     07DC  0086               	movwf	6
 12689     07DD  0187               	clrf	7
 12690     07DE  3F40               	moviw [0]fsr1
 12691     07DF  0084               	movwf	4
 12692     07E0  0185               	clrf	5
 12693     07E1  0A81               	incf	1,f
 12694     07E2  0800               	movf	0,w
 12695     07E3  318D  2534  3187   	fcall	_I2C1_DataTransmit
 12696     07E6                     i1l2715:
 12697                           
 12698                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 12699     07E6  3003               	movlw	3
 12700     07E7  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12701                           
 12702                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 12703     07E8  2FF9               	goto	i1l2727
 12704     07E9                     i1l2717:
 12705                           
 12706                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 12707     07E9  085B               	movf	_i2c1Status+9,w	;volatile
 12708     07EA  1903               	btfsc	3,2
 12709     07EB  2FED               	goto	u95_21
 12710     07EC  2FEE               	goto	u95_20
 12711     07ED                     u95_21:
 12712     07ED  2FF5               	goto	i1l2725
 12713     07EE                     u95_20:
 12714     07EE                     i1l2719:
 12715                           
 12716                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 12717     07EE  01DB               	clrf	_i2c1Status+9	;volatile
 12718     07EF                     i1l2721:
 12719                           
 12720                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 12721     07EF  318D  2502  3187   	fcall	_I2C1_RestartEnable
 12722     07F2                     i1l2723:
 12723                           
 12724                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 12725     07F2  01F1               	clrf	I2C1_EVENT_TX@retEventState
 12726     07F3  0AF1               	incf	I2C1_EVENT_TX@retEventState,f
 12727                           
 12728                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 12729     07F4  2FF9               	goto	i1l2727
 12730     07F5                     i1l2725:
 12731                           
 12732                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 12733     07F5  318D  259E  3187   	fcall	_I2C1_EVENT_STOP
 12734     07F8  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12735     07F9                     i1l2727:
 12736                           
 12737                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 12738     07F9  0871               	movf	I2C1_EVENT_TX@retEventState,w
 12739     07FA                     i1l247:
 12740     07FA  0008               	return
 12741     07FB                     __end_of_I2C1_EVENT_TX:
 12742                           
 12743                           	psect	text68
 12744     0D02                     __ptext68:	
 12745 ;; *************** function _I2C1_RestartEnable *****************
 12746 ;; Defined at:
 12747 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;		None
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  1    wreg      void 
 12754 ;; Registers used:
 12755 ;;		None
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12761 ;;      Params:         0       0       0       0       0       0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0
 12763 ;;      Temps:          0       0       0       0       0       0       0       0
 12764 ;;      Totals:         0       0       0       0       0       0       0       0
 12765 ;;Total ram usage:        0 bytes
 12766 ;; Hardware stack levels used: 1
 12767 ;; This function calls:
 12768 ;;		Nothing
 12769 ;; This function is called by:
 12770 ;;		_I2C1_EVENT_TX
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774     0D02                     _I2C1_RestartEnable:	
 12775                           ;psect for function _I2C1_RestartEnable
 12776                           
 12777     0D02                     i1l2527:	
 12778                           ;incstack = 0
 12779                           ; Regs used in _I2C1_RestartEnable: []
 12780                           
 12781                           
 12782                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 12783     0D02  0024               	movlb	4	; select bank4
 12784     0D03  1496               	bsf	22,1	;volatile
 12785     0D04                     i1l282:
 12786     0D04  0008               	return
 12787     0D05                     __end_of_I2C1_RestartEnable:
 12788                           
 12789                           	psect	text69
 12790     0D34                     __ptext69:	
 12791 ;; *************** function _I2C1_DataTransmit *****************
 12792 ;; Defined at:
 12793 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;  data            1    wreg     unsigned char 
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;  data            1    0[COMMON] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      void 
 12800 ;; Registers used:
 12801 ;;		wreg
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12807 ;;      Params:         0       0       0       0       0       0       0       0
 12808 ;;      Locals:         1       0       0       0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0
 12810 ;;      Totals:         1       0       0       0       0       0       0       0
 12811 ;;Total ram usage:        1 bytes
 12812 ;; Hardware stack levels used: 1
 12813 ;; This function calls:
 12814 ;;		Nothing
 12815 ;; This function is called by:
 12816 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12817 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12818 ;;		_I2C1_EVENT_TX
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822     0D34                     _I2C1_DataTransmit:	
 12823                           ;psect for function _I2C1_DataTransmit
 12824                           
 12825                           
 12826                           ;incstack = 0
 12827                           ; Regs used in _I2C1_DataTransmit: [wreg]
 12828                           ;I2C1_DataTransmit@data stored from wreg
 12829     0D34  00F0               	movwf	I2C1_DataTransmit@data
 12830     0D35                     i1l2525:
 12831                           
 12832                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 12833     0D35  0870               	movf	I2C1_DataTransmit@data,w
 12834     0D36  0024               	movlb	4	; select bank4
 12835     0D37  0091               	movwf	17	;volatile
 12836     0D38                     i1l273:
 12837     0D38  0008               	return
 12838     0D39                     __end_of_I2C1_DataTransmit:
 12839                           
 12840                           	psect	text70
 12841     0CFF                     __ptext70:	
 12842 ;; *************** function _I2C1_RestartDisable *****************
 12843 ;; Defined at:
 12844 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;		None
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;		None
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      void 
 12851 ;; Registers used:
 12852 ;;		None
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12858 ;;      Params:         0       0       0       0       0       0       0       0
 12859 ;;      Locals:         0       0       0       0       0       0       0       0
 12860 ;;      Temps:          0       0       0       0       0       0       0       0
 12861 ;;      Totals:         0       0       0       0       0       0       0       0
 12862 ;;Total ram usage:        0 bytes
 12863 ;; Hardware stack levels used: 1
 12864 ;; This function calls:
 12865 ;;		Nothing
 12866 ;; This function is called by:
 12867 ;;		_I2C1_EVENT_RX
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871     0CFF                     _I2C1_RestartDisable:	
 12872                           ;psect for function _I2C1_RestartDisable
 12873                           
 12874     0CFF                     i1l2545:	
 12875                           ;incstack = 0
 12876                           ; Regs used in _I2C1_RestartDisable: []
 12877                           
 12878                           
 12879                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 12880     0CFF  0024               	movlb	4	; select bank4
 12881     0D00  1096               	bcf	22,1	;volatile
 12882     0D01                     i1l285:
 12883     0D01  0008               	return
 12884     0D02                     __end_of_I2C1_RestartDisable:
 12885                           
 12886                           	psect	text71
 12887     0CFC                     __ptext71:	
 12888 ;; *************** function _I2C1_ReceiveEnable *****************
 12889 ;; Defined at:
 12890 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;		None
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		None
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12904 ;;      Params:         0       0       0       0       0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0
 12907 ;;      Totals:         0       0       0       0       0       0       0       0
 12908 ;;Total ram usage:        0 bytes
 12909 ;; Hardware stack levels used: 1
 12910 ;; This function calls:
 12911 ;;		Nothing
 12912 ;; This function is called by:
 12913 ;;		_I2C1_EVENT_RX
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917     0CFC                     _I2C1_ReceiveEnable:	
 12918                           ;psect for function _I2C1_ReceiveEnable
 12919                           
 12920     0CFC                     i1l2549:	
 12921                           ;incstack = 0
 12922                           ; Regs used in _I2C1_ReceiveEnable: []
 12923                           
 12924                           
 12925                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 12926     0CFC  0024               	movlb	4	; select bank4
 12927     0CFD  1596               	bsf	22,3	;volatile
 12928     0CFE                     i1l279:
 12929     0CFE  0008               	return
 12930     0CFF                     __end_of_I2C1_ReceiveEnable:
 12931                           
 12932                           	psect	text72
 12933     0D18                     __ptext72:	
 12934 ;; *************** function _I2C1_NackSend *****************
 12935 ;; Defined at:
 12936 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;		None
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;		None
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		None
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12950 ;;      Params:         0       0       0       0       0       0       0       0
 12951 ;;      Locals:         0       0       0       0       0       0       0       0
 12952 ;;      Temps:          0       0       0       0       0       0       0       0
 12953 ;;      Totals:         0       0       0       0       0       0       0       0
 12954 ;;Total ram usage:        0 bytes
 12955 ;; Hardware stack levels used: 1
 12956 ;; This function calls:
 12957 ;;		Nothing
 12958 ;; This function is called by:
 12959 ;;		_I2C1_EVENT_RX
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963     0D18                     _I2C1_NackSend:	
 12964                           ;psect for function _I2C1_NackSend
 12965                           
 12966     0D18                     i1l2547:	
 12967                           ;incstack = 0
 12968                           ; Regs used in _I2C1_NackSend: []
 12969                           
 12970                           
 12971                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 12972     0D18  0024               	movlb	4	; select bank4
 12973     0D19  1696               	bsf	22,5	;volatile
 12974                           
 12975                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 12976     0D1A  1616               	bsf	22,4	;volatile
 12977     0D1B                     i1l297:
 12978     0D1B  0008               	return
 12979     0D1C                     __end_of_I2C1_NackSend:
 12980                           
 12981                           	psect	text73
 12982     0D14                     __ptext73:	
 12983 ;; *************** function _I2C1_IsRxBufFull *****************
 12984 ;; Defined at:
 12985 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;		None
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;		None
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      _Bool 
 12992 ;; Registers used:
 12993 ;;		wreg, status,2, status,0
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12999 ;;      Params:         0       0       0       0       0       0       0       0
 13000 ;;      Locals:         0       0       0       0       0       0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0
 13002 ;;      Totals:         0       0       0       0       0       0       0       0
 13003 ;;Total ram usage:        0 bytes
 13004 ;; Hardware stack levels used: 1
 13005 ;; This function calls:
 13006 ;;		Nothing
 13007 ;; This function is called by:
 13008 ;;		_I2C1_EVENT_RX
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012     0D14                     _I2C1_IsRxBufFull:	
 13013                           ;psect for function _I2C1_IsRxBufFull
 13014                           
 13015     0D14                     i1l2535:	
 13016                           ;incstack = 0
 13017                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13018                           
 13019                           
 13020                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13021     0D14  0024               	movlb	4	; select bank4
 13022     0D15  0814               	movf	20,w	;volatile
 13023     0D16  3901               	andlw	1
 13024     0D17                     i1l309:
 13025     0D17  0008               	return
 13026     0D18                     __end_of_I2C1_IsRxBufFull:
 13027                           
 13028                           	psect	text74
 13029     0CF9                     __ptext74:	
 13030 ;; *************** function _I2C1_DataReceive *****************
 13031 ;; Defined at:
 13032 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;		None
 13035 ;; Auto vars:     Size  Location     Type
 13036 ;;		None
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  1    wreg      unsigned char 
 13039 ;; Registers used:
 13040 ;;		wreg
 13041 ;; Tracked objects:
 13042 ;;		On entry : 0/0
 13043 ;;		On exit  : 0/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13046 ;;      Params:         0       0       0       0       0       0       0       0
 13047 ;;      Locals:         0       0       0       0       0       0       0       0
 13048 ;;      Temps:          0       0       0       0       0       0       0       0
 13049 ;;      Totals:         0       0       0       0       0       0       0       0
 13050 ;;Total ram usage:        0 bytes
 13051 ;; Hardware stack levels used: 1
 13052 ;; This function calls:
 13053 ;;		Nothing
 13054 ;; This function is called by:
 13055 ;;		_I2C1_EVENT_RX
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059     0CF9                     _I2C1_DataReceive:	
 13060                           ;psect for function _I2C1_DataReceive
 13061                           
 13062     0CF9                     i1l2539:	
 13063                           ;incstack = 0
 13064                           ; Regs used in _I2C1_DataReceive: [wreg]
 13065                           
 13066                           
 13067                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13068     0CF9  0024               	movlb	4	; select bank4
 13069     0CFA  0811               	movf	17,w	;volatile
 13070     0CFB                     i1l270:
 13071     0CFB  0008               	return
 13072     0CFC                     __end_of_I2C1_DataReceive:
 13073                           
 13074                           	psect	text75
 13075     0D10                     __ptext75:	
 13076 ;; *************** function _I2C1_AckSend *****************
 13077 ;; Defined at:
 13078 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;		None
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;		None
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  1    wreg      void 
 13085 ;; Registers used:
 13086 ;;		None
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13092 ;;      Params:         0       0       0       0       0       0       0       0
 13093 ;;      Locals:         0       0       0       0       0       0       0       0
 13094 ;;      Temps:          0       0       0       0       0       0       0       0
 13095 ;;      Totals:         0       0       0       0       0       0       0       0
 13096 ;;Total ram usage:        0 bytes
 13097 ;; Hardware stack levels used: 1
 13098 ;; This function calls:
 13099 ;;		Nothing
 13100 ;; This function is called by:
 13101 ;;		_I2C1_EVENT_RX
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105     0D10                     _I2C1_AckSend:	
 13106                           ;psect for function _I2C1_AckSend
 13107                           
 13108     0D10                     i1l2543:	
 13109                           ;incstack = 0
 13110                           ; Regs used in _I2C1_AckSend: []
 13111                           
 13112                           
 13113                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13114     0D10  0024               	movlb	4	; select bank4
 13115     0D11  1296               	bcf	22,5	;volatile
 13116                           
 13117                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13118     0D12  1616               	bsf	22,4	;volatile
 13119     0D13                     i1l294:
 13120     0D13  0008               	return
 13121     0D14                     __end_of_I2C1_AckSend:
 13122                           
 13123                           	psect	text76
 13124     0CF6                     __ptext76:	
 13125 ;; *************** function _I2C1_StopSend *****************
 13126 ;; Defined at:
 13127 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;		None
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;		None
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		None
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13141 ;;      Params:         0       0       0       0       0       0       0       0
 13142 ;;      Locals:         0       0       0       0       0       0       0       0
 13143 ;;      Temps:          0       0       0       0       0       0       0       0
 13144 ;;      Totals:         0       0       0       0       0       0       0       0
 13145 ;;Total ram usage:        0 bytes
 13146 ;; Hardware stack levels used: 1
 13147 ;; This function calls:
 13148 ;;		Nothing
 13149 ;; This function is called by:
 13150 ;;		_I2C1_EVENT_STOP
 13151 ;; This function uses a non-reentrant model
 13152 ;;
 13153                           
 13154     0CF6                     _I2C1_StopSend:	
 13155                           ;psect for function _I2C1_StopSend
 13156                           
 13157     0CF6                     i1l2475:	
 13158                           ;incstack = 0
 13159                           ; Regs used in _I2C1_StopSend: []
 13160                           
 13161                           
 13162                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13163     0CF6  0024               	movlb	4	; select bank4
 13164     0CF7  1516               	bsf	22,2	;volatile
 13165     0CF8                     i1l291:
 13166     0CF8  0008               	return
 13167     0CF9                     __end_of_I2C1_StopSend:
 13168                           
 13169                           	psect	text77
 13170     0E31                     __ptext77:	
 13171 ;; *************** function _I2C1_Close *****************
 13172 ;; Defined at:
 13173 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      void 
 13180 ;; Registers used:
 13181 ;;		status,2, status,0, pclath, cstack
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13187 ;;      Params:         0       0       0       0       0       0       0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0
 13190 ;;      Totals:         0       0       0       0       0       0       0       0
 13191 ;;Total ram usage:        0 bytes
 13192 ;; Hardware stack levels used: 1
 13193 ;; Hardware stack levels required when called: 1
 13194 ;; This function calls:
 13195 ;;		_I2C1_ErrorInterruptClear
 13196 ;;		_I2C1_InterruptClear
 13197 ;;		_I2C1_StatusFlagsClear
 13198 ;; This function is called by:
 13199 ;;		_I2C1_EVENT_STOP
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203     0E31                     _I2C1_Close:	
 13204                           ;psect for function _I2C1_Close
 13205                           
 13206     0E31                     i1l2465:	
 13207                           ;incstack = 0
 13208                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13209                           
 13210                           
 13211                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13212     0E31  0020               	movlb	0	; select bank0
 13213     0E32  01D2               	clrf	_i2c1Status	;volatile
 13214     0E33                     i1l2467:
 13215                           
 13216                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13217     0E33  3000               	movlw	0
 13218     0E34  00D4               	movwf	_i2c1Status+2	;volatile
 13219     0E35  30FF               	movlw	255
 13220     0E36  00D3               	movwf	_i2c1Status+1	;volatile
 13221                           
 13222                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13223     0E37  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
 13224                           
 13225                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13226     0E38  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 13227                           
 13228                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13229     0E39  01DD               	clrf	_i2c1Status+11	;volatile
 13230     0E3A                     i1l2469:
 13231                           
 13232                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13233     0E3A  318C  24F3  318E   	fcall	_I2C1_InterruptClear
 13234     0E3D                     i1l2471:
 13235                           
 13236                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13237     0E3D  318C  24F0  318E   	fcall	_I2C1_ErrorInterruptClear
 13238     0E40                     i1l2473:
 13239                           
 13240                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13241     0E40  318D  250C  318E   	fcall	_I2C1_StatusFlagsClear
 13242     0E43                     i1l219:
 13243     0E43  0008               	return
 13244     0E44                     __end_of_I2C1_Close:
 13245                           
 13246                           	psect	text78
 13247     0D0C                     __ptext78:	
 13248 ;; *************** function _I2C1_StatusFlagsClear *****************
 13249 ;; Defined at:
 13250 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;		None
 13253 ;; Auto vars:     Size  Location     Type
 13254 ;;		None
 13255 ;; Return value:  Size  Location     Type
 13256 ;;                  1    wreg      void 
 13257 ;; Registers used:
 13258 ;;		None
 13259 ;; Tracked objects:
 13260 ;;		On entry : 0/0
 13261 ;;		On exit  : 0/0
 13262 ;;		Unchanged: 0/0
 13263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13264 ;;      Params:         0       0       0       0       0       0       0       0
 13265 ;;      Locals:         0       0       0       0       0       0       0       0
 13266 ;;      Temps:          0       0       0       0       0       0       0       0
 13267 ;;      Totals:         0       0       0       0       0       0       0       0
 13268 ;;Total ram usage:        0 bytes
 13269 ;; Hardware stack levels used: 1
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_I2C1_Close
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277     0D0C                     _I2C1_StatusFlagsClear:	
 13278                           ;psect for function _I2C1_StatusFlagsClear
 13279                           
 13280     0D0C                     i1l2461:	
 13281                           ;incstack = 0
 13282                           ; Regs used in _I2C1_StatusFlagsClear: []
 13283                           
 13284                           
 13285                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13286     0D0C  0024               	movlb	4	; select bank4
 13287     0D0D  1395               	bcf	21,7	;volatile
 13288                           
 13289                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13290     0D0E  1315               	bcf	21,6	;volatile
 13291     0D0F                     i1l324:
 13292     0D0F  0008               	return
 13293     0D10                     __end_of_I2C1_StatusFlagsClear:
 13294                           
 13295                           	psect	text79
 13296     0CF3                     __ptext79:	
 13297 ;; *************** function _I2C1_InterruptClear *****************
 13298 ;; Defined at:
 13299 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;		None
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      void 
 13306 ;; Registers used:
 13307 ;;		None
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13313 ;;      Params:         0       0       0       0       0       0       0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0
 13316 ;;      Totals:         0       0       0       0       0       0       0       0
 13317 ;;Total ram usage:        0 bytes
 13318 ;; Hardware stack levels used: 1
 13319 ;; This function calls:
 13320 ;;		Nothing
 13321 ;; This function is called by:
 13322 ;;		_I2C1_Close
 13323 ;;		_I2C1_EventHandler
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327     0CF3                     _I2C1_InterruptClear:	
 13328                           ;psect for function _I2C1_InterruptClear
 13329                           
 13330     0CF3                     i1l2457:	
 13331                           ;incstack = 0
 13332                           ; Regs used in _I2C1_InterruptClear: []
 13333                           
 13334                           
 13335                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13336     0CF3  0020               	movlb	0	; select bank0
 13337     0CF4  1190               	bcf	16,3	;volatile
 13338     0CF5                     i1l318:
 13339     0CF5  0008               	return
 13340     0CF6                     __end_of_I2C1_InterruptClear:
 13341                           
 13342                           	psect	text80
 13343     0CF0                     __ptext80:	
 13344 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13345 ;; Defined at:
 13346 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;		None
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  1    wreg      void 
 13353 ;; Registers used:
 13354 ;;		None
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13360 ;;      Params:         0       0       0       0       0       0       0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0
 13362 ;;      Temps:          0       0       0       0       0       0       0       0
 13363 ;;      Totals:         0       0       0       0       0       0       0       0
 13364 ;;Total ram usage:        0 bytes
 13365 ;; Hardware stack levels used: 1
 13366 ;; This function calls:
 13367 ;;		Nothing
 13368 ;; This function is called by:
 13369 ;;		_I2C1_Close
 13370 ;;		_I2C1_ErrorEventHandler
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374     0CF0                     _I2C1_ErrorInterruptClear:	
 13375                           ;psect for function _I2C1_ErrorInterruptClear
 13376                           
 13377     0CF0                     i1l2459:	
 13378                           ;incstack = 0
 13379                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13380                           
 13381                           
 13382                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13383     0CF0  0020               	movlb	0	; select bank0
 13384     0CF1  1191               	bcf	17,3	;volatile
 13385     0CF2                     i1l321:
 13386     0CF2  0008               	return
 13387     0CF3                     __end_of_I2C1_ErrorInterruptClear:
 13388                           
 13389                           	psect	text81
 13390     0D08                     __ptext81:	
 13391 ;; *************** function _I2C1_BusReset *****************
 13392 ;; Defined at:
 13393 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;		None
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;		None
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		None
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13407 ;;      Params:         0       0       0       0       0       0       0       0
 13408 ;;      Locals:         0       0       0       0       0       0       0       0
 13409 ;;      Temps:          0       0       0       0       0       0       0       0
 13410 ;;      Totals:         0       0       0       0       0       0       0       0
 13411 ;;Total ram usage:        0 bytes
 13412 ;; Hardware stack levels used: 1
 13413 ;; This function calls:
 13414 ;;		Nothing
 13415 ;; This function is called by:
 13416 ;;		_I2C1_EVENT_RESET
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420     0D08                     _I2C1_BusReset:	
 13421                           ;psect for function _I2C1_BusReset
 13422                           
 13423     0D08                     i1l2477:	
 13424                           ;incstack = 0
 13425                           ; Regs used in _I2C1_BusReset: []
 13426                           
 13427                           
 13428                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13429     0D08  0024               	movlb	4	; select bank4
 13430     0D09  1295               	bcf	21,5	;volatile
 13431                           
 13432                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13433     0D0A  1695               	bsf	21,5	;volatile
 13434     0D0B                     i1l276:
 13435     0D0B  0008               	return
 13436     0D0C                     __end_of_I2C1_BusReset:
 13437                           
 13438                           	psect	text82
 13439     0CEF                     __ptext82:	
 13440 ;; *************** function _I2C1_DefaultCallback *****************
 13441 ;; Defined at:
 13442 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;		None
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  1    wreg      void 
 13449 ;; Registers used:
 13450 ;;		None
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13456 ;;      Params:         0       0       0       0       0       0       0       0
 13457 ;;      Locals:         0       0       0       0       0       0       0       0
 13458 ;;      Temps:          0       0       0       0       0       0       0       0
 13459 ;;      Totals:         0       0       0       0       0       0       0       0
 13460 ;;Total ram usage:        0 bytes
 13461 ;; Hardware stack levels used: 1
 13462 ;; This function calls:
 13463 ;;		Nothing
 13464 ;; This function is called by:
 13465 ;;		_I2C1_Initialize
 13466 ;;		_I2C1_Deinitialize
 13467 ;;		_I2C1_ErrorEventHandler
 13468 ;; This function uses a non-reentrant model
 13469 ;;
 13470                           
 13471     0CEF                     _I2C1_DefaultCallback:	
 13472                           ;psect for function _I2C1_DefaultCallback
 13473                           
 13474     0CEF                     i1l231:	
 13475                           ;incstack = 0
 13476                           ; Regs used in _I2C1_DefaultCallback: []
 13477                           
 13478     0CEF  0008               	return
 13479     0CF0                     __end_of_I2C1_DefaultCallback:
 13480                           
 13481                           	psect	text83
 13482     0DF3                     __ptext83:	
 13483 ;; *************** function _ADC_ISR *****************
 13484 ;; Defined at:
 13485 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;		None
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;		None
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      void 
 13492 ;; Registers used:
 13493 ;;		wreg, status,2, status,0, pclath, cstack
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/0
 13496 ;;		On exit  : 0/0
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13499 ;;      Params:         0       0       0       0       0       0       0       0
 13500 ;;      Locals:         0       0       0       0       0       0       0       0
 13501 ;;      Temps:          0       0       0       0       0       0       0       0
 13502 ;;      Totals:         0       0       0       0       0       0       0       0
 13503 ;;Total ram usage:        0 bytes
 13504 ;; Hardware stack levels used: 1
 13505 ;; Hardware stack levels required when called: 1
 13506 ;; This function calls:
 13507 ;;		NULL
 13508 ;;		_ADC_DefaultInterruptHandler
 13509 ;; This function is called by:
 13510 ;;		_INTERRUPT_InterruptManager
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514     0DF3                     _ADC_ISR:	
 13515                           ;psect for function _ADC_ISR
 13516                           
 13517     0DF3                     i1l3135:	
 13518                           ;incstack = 0
 13519                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 13520                           
 13521                           
 13522                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 13523     0DF3  0020               	movlb	0	; select bank0
 13524     0DF4  1310               	bcf	16,6	;volatile
 13525     0DF5                     i1l3137:
 13526                           
 13527                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 13528     0DF5  086B               	movf	_ADC_InterruptHandler,w
 13529     0DF6  046C               	iorwf	_ADC_InterruptHandler+1,w
 13530     0DF7  1903               	btfsc	3,2
 13531     0DF8  2DFA               	goto	u127_21
 13532     0DF9  2DFB               	goto	u127_20
 13533     0DFA                     u127_21:
 13534     0DFA  2E00               	goto	i1l52
 13535     0DFB                     u127_20:
 13536     0DFB                     i1l3139:
 13537                           
 13538                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 13539     0DFB  086C               	movf	_ADC_InterruptHandler+1,w
 13540     0DFC  008A               	movwf	10
 13541     0DFD  086B               	movf	_ADC_InterruptHandler,w
 13542     0DFE  000A               	callw
 13543     0DFF  318D               	pagesel	$
 13544     0E00                     i1l52:
 13545     0E00  0008               	return
 13546     0E01                     __end_of_ADC_ISR:
 13547                           
 13548                           	psect	text84
 13549     0CEE                     __ptext84:	
 13550 ;; *************** function _ADC_DefaultInterruptHandler *****************
 13551 ;; Defined at:
 13552 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;		None
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;		None
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      void 
 13559 ;; Registers used:
 13560 ;;		None
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13566 ;;      Params:         0       0       0       0       0       0       0       0
 13567 ;;      Locals:         0       0       0       0       0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0       0
 13569 ;;      Totals:         0       0       0       0       0       0       0       0
 13570 ;;Total ram usage:        0 bytes
 13571 ;; Hardware stack levels used: 1
 13572 ;; This function calls:
 13573 ;;		Nothing
 13574 ;; This function is called by:
 13575 ;;		_ADC_Initialize
 13576 ;;		_ADC_ISR
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580     0CEE                     _ADC_DefaultInterruptHandler:	
 13581                           ;psect for function _ADC_DefaultInterruptHandler
 13582                           
 13583     0CEE                     i1l58:	
 13584                           ;incstack = 0
 13585                           ; Regs used in _ADC_DefaultInterruptHandler: []
 13586                           
 13587     0CEE  0008               	return
 13588     0CEF                     __end_of_ADC_DefaultInterruptHandler:
 13589     007E                     btemp	set	126	;btemp
 13590     007E                     int$flags	set	126
 13591     007E                     wtemp0	set	126
 13592                           
 13593                           	psect	config
 13594                           
 13595                           ;Config register CONFIG1 @ 0x8007
 13596                           ;	Oscillator Selection Bits
 13597                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13598                           ;	Power-up Timer Enable
 13599                           ;	PWRTE = OFF, PWRT disabled
 13600                           ;	MCLR Pin Function Select
 13601                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13602                           ;	Flash Program Memory Code Protection
 13603                           ;	CP = OFF, Program memory code protection is disabled
 13604                           ;	Brown-out Reset Enable
 13605                           ;	BOREN = ON, Brown-out Reset enabled
 13606                           ;	Clock Out Enable
 13607                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13608     8007                     	org	32775
 13609     8007  3FFC               	dw	16380
 13610                           
 13611                           ;Config register CONFIG2 @ 0x8008
 13612                           ;	Flash Memory Self-Write Protection
 13613                           ;	WRT = OFF, Write protection off
 13614                           ;	Peripheral Pin Select one-way control
 13615                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13616                           ;	Zero Cross Detect Disable Bit
 13617                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13618                           ;	PLL Enable Bit
 13619                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13620                           ;	Stack Overflow/Underflow Reset Enable
 13621                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13622                           ;	Brown-out Reset Voltage Selection
 13623                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13624                           ;	Low-Power Brown Out Reset
 13625                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13626                           ;	In-Circuit Debugger Mode
 13627                           ;	DEBUG = 0x1, unprogrammed default
 13628                           ;	Low-Voltage Programming Enable
 13629                           ;	LVP = ON, Low-voltage programming enabled
 13630     8008                     	org	32776
 13631     8008  3EFF               	dw	16127
 13632                           
 13633                           ;Config register CONFIG3 @ 0x8009
 13634                           ;	WDT Period Select
 13635                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13636                           ;	Watchdog Timer Enable
 13637                           ;	WDTE = OFF, WDT disabled
 13638                           ;	WDT Window Select
 13639                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13640                           ;	WDT Input Clock Selector
 13641                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13642     8009                     	org	32777
 13643     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    86
    Data        31
    BSS         45
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      77
    BANK1            80      0      47
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9559[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Read@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    I2C1_Write@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    packLong@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getPos@data(BANK0[4]), parserDataBuffer(BANK1[5]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 5
		 -> parserDataBuffer(BANK1[5]), 

    S189$2$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    S189$3$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S288$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 6
		 -> parserDataBuffer(BANK1[5]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> KAPS_setAbsPos@data(BANK0[4]), KAPS_StorePos@data(BANK0[4]), ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 


Critical Paths under _main in COMMON

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ProcessMsg->_SSPA_setMute
    _ADC2Celsius->___aldiv
    _getADCValue->_ADC_GetConversion
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getPos->_I2C1_Read
    _KAPS_getIndex->_I2C1_Read
    _I2C1_Read->_I2C1_IsBusy
    _I2C1_Write->_I2C1_IsBusy
    _SendMsg->_SendSync
    _SendSync->_EUSART_IsTxReady
    _SendSync->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_RX
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_RX
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _main->_ProcessMsg
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->_ADC2Celsius
    _ADC2Celsius->___aldiv
    _SSPA_getPOut->_ADC2Amp
    _getADCValue->_ADC_GetConversion
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    ___aldiv->___lmul
    _KAPS_setRelPos->_I2C1_Write
    _KAPS_setAbsPos->_packLong
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getStatus->_I2C1_Write
    _KAPS_getPos->_packLong
    _KAPS_getIndex->_I2C1_Read
    _KAPS_getIndex->_I2C1_Write
    _KAPS_StorePos->_packLong
    _KAPS_GoToIdx->_I2C1_Write
    _Parse->_SendNack
    _SendNack->_SendMsg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44057
                                             49 BANK0      1     1      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                         _ProcessMsg
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     632
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     196
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     196
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessMsg                                           3     2      1   39235
                                             46 BANK0      3     2      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (2) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SSPA_setMute                                         4     3      1     245
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SSPA_getTemp                                         6     6      0    2184
                                             40 BANK0      6     6      0
                        _ADC2Celsius
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _ADC2Celsius                                         14    12      2    1850
                                             26 BANK0     14    12      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SSPA_getPOut                                         6     6      0    4350
                                             38 BANK0      5     5      0
                            _ADC2Amp
                            _ADC2dBm
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                         10     8      2     201
                                              2 BANK0     10     8      2
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversion                                    4     2      2      31
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADC2dBm                                             10     8      2    1850
                                             26 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ADC2Amp                                             12     8      4    1940
                                             26 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     985
                                              4 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _KAPS_setRelPos                                       5     5      0    3218
                                              5 BANK0      5     5      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_setAbsPos                                      11     7      4    4328
                                             13 BANK0     11     7      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _KAPS_getStatus                                       4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_getPos                                          7     7      0    4638
                                             13 BANK0      7     7      0
                          _I2C1_Read
                         _I2C1_Write
                           _packLong
 ---------------------------------------------------------------------------------
 (2) _packLong                                            13     9      4     428
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _KAPS_getIndex                                        4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read                                            6     1      5     977
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                     _I2C1_ReadStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadStart                                       0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (2) _KAPS_StorePos                                       12     8      4    4396
                                             13 BANK0     12     8      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _unpackLong                                           9     4      5     968
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _KAPS_GoToIdx                                         4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write                                           6     1      5    3113
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteStart                                      0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (5) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_IsBusy                                          1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parse                                                3     3      0    4153
                                              6 BANK0      3     3      0
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    2019
                                              5 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _SendMsg                                              5     3      2    1979
                                              0 BANK0      5     3      2
                           _SendSync
 ---------------------------------------------------------------------------------
 (3) _SendSync                                             1     1      0     279
                                              5 COMMON     1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     211
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_IsTxReady                                     1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_EventHandler                                    2     2      0     164
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_ErrorEventHandler                               2     2      0     164
                                              2 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_TX                                        1     1      0      48
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _SendMsg
       _SendSync
         _EUSART_IsTxReady
         _EUSART_Write
     _SendNack
       _SendMsg
   _ProcessMsg
     _KAPS_GoToIdx
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_StartSend
     _KAPS_StorePos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_getIndex
       _I2C1_Read
         _I2C1_IsBusy
         _I2C1_ReadStart
           _I2C1_StartSend
       _I2C1_Write
     _KAPS_getPos
       _I2C1_Read
       _I2C1_Write
       _packLong
     _KAPS_getStatus
       _I2C1_Read
       _I2C1_Write
     _KAPS_setAbsPos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_setRelPos
       _I2C1_Write
     _SSPA_getPOut
       _ADC2Amp
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _ADC2dBm
         ___aldiv
         ___lmul
       _getADCValue
         _ADC_GetConversion
     _SSPA_getTemp
       _ADC2Celsius
         ___aldiv
         ___lmul
       _getADCValue
     _SSPA_setMute
     _SendMsg
     _packLong
     _unpackLong
     _unpackWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      86       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      86      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 15:33:46 2024

                                    I2C1_Write@data 0022                              ??_I2C1_DefaultCallback 0070  
                                                l42 0EE9                                                  l27 0E6A  
                                                l45 0EF1                                                  l55 0D5F  
       __end_of_EUSART_OverrunErrorCallbackRegister 0DE7               ??_EUSART_OverrunErrorCallbackRegister 0076  
              ?_EUSART_OverrunErrorCallbackRegister 0074                 _EUSART_OverrunErrorCallbackRegister 0DDB  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                                     ?_KAPS_GoToIdx 0070                                       _KAPS_StorePos 0534  
                                      _SSPA_getPOut 02F4                                        _SSPA_getTemp 05B2  
                                               l200 0E1F                                     __end_of_ADC2Amp 0534  
                                               l204 0DF2                                                 l213 0D8E  
                                               l216 0D87                                                 l312 0D33  
                                               l410 046B                                                 l333 0DAD  
                                               l184 0ED3                                                 l177 0E80  
                                               l610 0FD5                                                 l442 0DCE  
                                               l188 0F35                                                 l613 0D2F  
                                               l623 0DC3                                                 l616 0003  
                                               l288 0D07                                                 l465 0D47  
                                               l722 0F83                                                 l619 0D2B  
                                               l627 0DE6                                                 l483 0E56  
                                               l804 0263                                                 l716 0F5B  
                                               l548 0EB5                                                 l725 0573  
                                               l733 07CE                                                 l742 03D4  
                                               l719 0742                                                 l831 0533  
                                               l751 0DDA                                                 l592 0D42  
                                               l840 066F                                                 l729 07A0  
                                               l825 0FFF                                                 l834 062B  
                                               l771 0667                                                 l739 05B1  
                                               l851 067D                                                 l843 0672  
                                               l748 04B0                                                 l828 0420  
                                               l597 0E0F                                                 l765 0E22  
                                               l693 01AB                                                 l767 0E30  
                                               l855 06A2                                                 l776 0DB8  
                                               l792 01CD                                                 l864 05EE  
                                               l848 067A                                                 l873 037D  
                                               l955 070F                                                 l699 0FA8  
                                               l868 02F7                                     __end_of_ADC2dBm 062C  
                                               u910 0DED                                                 u911 0DEC  
                                               u990 0DBF                                                 u991 0DBE  
                                      ?_KAPS_getPos 0070                           __end_of_I2C1_DataTransmit 0D39  
                                   __end_of_ADC_ISR 0E01                     __end_of_ADC_SetInterruptHandler 0D60  
                                               wreg 0009                                        ADC2dBm@value 003C  
                          _I2C1_ErrorInterruptClear 0CF0                                        _SSPA_setMute 0668  
                      ?_ADC_DefaultInterruptHandler 0070                                       SendMsg@msg_id 0024  
                                     _KAPS_getIndex 07A1                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                    __end_of_I2C1_ISR 0D28  
                                              l1006 0277                                                l1016 02F3  
                                              l4003 0240                                                l4011 0262  
                                              l4005 0245                                                l3151 0FAC  
                                              l3161 0FC1                                                l3153 0FAF  
                                              l4009 024A                                                l3145 0E44  
                                              l4041 0F87                                                l3147 0D3E  
                                              l3163 0FC6                                                l3155 0FB4  
                                              l4051 0F96                                                l4043 0F88  
                                              l3165 0FC8                                                l3157 0FB6  
                                              l2621 0D30                                                l4053 0F9F  
                                              l4045 0F89                                                l3167 0FCE  
                                              l3159 0FBC                                                l3511 0E0C  
                                              l3503 0D05                                                l2623 0DE7  
                                              l4047 0F89                                                l4039 0F84  
                                              l3169 0FD3                                                l3513 0E0E  
                                              l3505 0E01                                                l3601 02D5  
                                              l3521 0EE2                                                l2625 0DED  
                                              l4049 0F91                                                l3507 0E02  
                                              l3531 0E10                                                l3611 0EB6  
                                              l3603 02DB                                                l3523 0EE3  
                                              l2619 0D5A                                                l3509 0E07  
                                              l3517 0D2C                                                l3533 0E12  
                                              l3621 0EC8                                                l3613 0EB6  
                                              l3701 0397                                                l3605 02E0  
                                              l3525 0EE7                                                l3551 0E21  
                                              l3535 0E18                                                l3543 0D81  
                                              l3631 0ED3                                                l3623 0ECC  
                                              l3615 0EBE                                                l3703 03AE  
                                              l3607 02EB                                                l3527 0EED  
                                              l3519 0ED6                                                l4191 05C3  
                                              l3553 0E23                                                l3537 0E1D  
                                              l3545 0D84                                                l3625 0ECD  
                                              l3617 0EC5                                                l3641 0F24  
                                              l3705 03C6                                                l3561 06E9  
                                              l3721 0FEC                                                l4193 0372  
                                              l3555 0E2B                                                l4195 0254  
                                              l3539 0E1E                                                l3627 0ECF  
                                              l3619 0EC6                                                l3547 0D88  
                                              l3651 0F2E                                                l3643 0F25  
                                              l3635 0F14                                                l3811 0787  
                                              l3571 0264                                                l3563 06F1  
                                              l3723 0FF2                                                l3715 0FDB  
                                              l3731 041C                                                l2923 0DA6  
                                              l2931 0423                                                l3661 062E  
                                              l3629 0ED0                                                l3549 0D8B  
                                              l3653 0F2F                                                l3645 0F27  
                                              l3637 0F15                                                l3821 058E  
                                              l3813 079D                                                l3805 0773  
                                              l3581 028A                                                l3573 0266  
                                              l3565 06F8                                                l3557 06DC  
                                              l3717 0FE4                                                l3709 0FD8  
                                              l4189 0689                                                l3901 00B3  
                                              l2925 0DA9                                                l2781 0DE1  
                                              l2773 0D43                                                l2941 0440  
                                              l2933 0425                                                l3663 062F  
                                              l3655 0F32                                                l3647 0F2B  
                                              l3639 0F1D                                                l3831 07B5  
                                              l3823 05A4                                                l3815 0574  
                                              l3807 0776                                                l3591 02AC  
                                              l3583 0292                                                l3575 026A  
                                              l3567 0707                                                l3559 06E5  
                                              l3735 04F4                                                l3743 05EF  
                                              l3719 0FE8                                                l3727 03D5  
                                              l3751 05B4                                                l3911 00F9  
                                              l3903 00BD                                                l2927 0DAB  
                                              l2775 0DB9                                                l2951 044B  
                                              l2943 0441                                                l2935 043B  
                                              l3681 065C                                                l3673 0647  
                                              l3665 0633                                                l3649 0F2C  
                                              l3657 0F34                                                l3833 07CB  
                                              l3825 07A1                                                l3817 0576  
                                              l3809 0777                                                l3593 02B3  
                                              l3585 029A                                                l3577 027B  
                                              l3737 04FB                                                l3745 05F6  
                                              l3729 03DC                                                l3761 05CE  
                                              l3753 05B5                                                l3921 0133  
                                              l3913 0103                                                l3905 00C4  
                                              l2881 0E5D                                                l2873 0E57  
                                              l2777 0DBF                                                l2961 0458  
                                              l2953 044D                                                l2945 0444  
                                              l2937 043D                                                l2929 0421  
                                              l3683 0660                                                l3667 0638  
                                              l3691 0472                                                l3827 07A4  
                                              l3819 057E                                                l3595 02C5  
                                              l3587 029D                                                l3579 0286  
                                              l3739 052B                                                l3747 062A  
                                              l3763 05D7                                                l3755 05B8  
                                              l3843 0680                                                l3835 0669  
                                              l3771 0DCF                                                l3931 0159  
                                              l3923 0136                                                l3915 0106  
                                              l3907 00CB                                                l2883 0E5F  
                                              l2875 0E5A                                                l2779 0DDB  
                                              l2891 0E70                                                l2971 0464  
                                              l2963 045B                                                l2955 044F  
                                              l2947 0446                                                l2939 043F  
                                              l3677 064D                                                l3669 063F  
                                              l3941 01AE                                                l3853 0F38  
                                              l3693 0486                                                l3829 07A5  
                                              l3861 0713                                                l3597 02CD  
                                              l3589 02A8                                                l3781 031B  
                                              l3845 0694                                                l3837 066A  
                                              l3773 0DD5                                                l3933 016A  
                                              l3925 013A                                                l3917 010A  
                                              l3909 00DD                                                l2885 0E61  
                                              l2877 0E5B                                                l2893 0E71  
                                              l2981 0469                                                l2973 0465  
                                              l2965 045E                                                l2957 0452  
                                              l2949 0448                                                l3679 0654  
                                              l3687 0663                                                l3951 01BF  
                                              l3943 01AF                                                l3855 0F3A  
                                              l3695 049B                                                l3863 0720  
                                              l3871 0F72                                                l3599 02CE  
                                              l3791 034D                                                l3783 0329  
                                              l3775 02F6                                                l3759 05BB  
                                              l3839 0675                                                l3935 0172  
                                              l3927 0144                                                l3919 0114  
                                              l2887 0E68                                                l2879 0E5C  
                                              l2991 0EA4                                                l2895 0E74  
                                              l2983 046A                                                l2975 0466  
                                              l2967 0461                                                l2959 0455  
                                              l3961 01CE                                                l3953 01C2  
                                              l3945 01B4                                                l3857 0F4A  
                                              l3689 046C                                                l3881 0551  
                                              l3873 0536                                                l3697 0380  
                                              l3865 0731                                                l3793 0356  
                                              l3785 0329                                                l3777 02F7  
                                              l3929 0151                                                l2993 0EAB  
                                              l2897 0E7E                                                l2889 0E6B  
                                              l2985 0DC4                                                l2977 0467  
                                              l2969 0463                                                l3971 01E2  
                                              l3963 01D0                                                l3955 01C7  
                                              l3947 01B7                                                l3883 0562  
                                              l3875 0538                                                l3699 0380  
                                              l3859 0710                                                l3867 0F5E  
                                              l3787 0332                                                l3779 0300  
                                              l3891 0071                                                l3939 0188  
                                              l2995 0EB2                                                l2987 0DC7  
                                              l2979 0468                                                l2997 0D28  
                                              l3885 0DB0                                                l3981 021B  
                                              l3965 01D3                                                l3957 01CA  
                                              l3973 01E5                                                l3949 01BA  
                                              l3877 0542                                                l3869 0F62  
                                              l3789 034D                                                l3797 036A  
                                              l3893 0083                                                l2989 0E99  
                                              l3991 0227                                                l3983 021D  
                                              l3975 0208                                                l3967 01D8  
                                              l3959 01CD                                                l3879 0544  
                                              l3895 008D                                                l3887 006A  
                                              l3993 022D                                                l3977 0210  
                                              l3969 01DD                                                l3897 0094  
                                              l3889 006B                                                l3995 0232  
                                              l3987 0223                                                l3979 0215  
                                              l3899 009B                                                l3997 023E  
                                              l3989 0226                                   _I2C1_Deinitialize 0000  
                                              u1000 0DE1                                                u1001 0DE0  
                                              u2000 01B4                                                u2001 01B3  
                                              u2010 0222                                                u2011 0221  
                                              u1300 0FC6                                                u2020 022D  
                                              u1301 0FC5                                                u2021 022C  
                                              u1310 0FCE                                                u2030 0232  
                                              u1311 0FCD                                                u2031 0231  
                                              u2050 0F91                                                u2051 0F90  
                                              u2060 0F9F                                                u2061 0F9E  
                                              _LATA 010C                                                _LATB 010D  
                                              _LATC 010E                                                u1280 0FB4  
                                              u1520 0E07                                                u1281 0FB3  
                                              u1521 0E06                                                u1290 0FBC  
                                              u1530 0E0C                                                u1610 0707  
                                              u1291 0FBB                                                u1531 0E0B  
                                              u1611 0706                                                u1700 02DB  
                                              u1620 026A                                                u1540 0EED  
                                              u1701 02DA                                                u1621 0269  
                                              u1605 06F9                                                u1541 0EEC  
                                              u1550 0E18                                                u1710 02E0  
                                              u1630 027B                                                u1551 0E17  
                                              u1711 02DF                                                u1631 027A  
                                              u1560 0E1D                                                u1720 0EBE  
                                              u1800 03A4                                                u1640 029A  
                                              u1561 0E1C                                                u1721 0EBD  
                                              u1641 0299                                                u2097 0EE4  
                                              u1570 0E2B                                                u1730 0F1D  
                                              u1810 03BC                                                u1571 0E2A  
                                              u1731 0F1C                                                u1740 063F  
                                              u1900 05A4                                                u1660 02AC  
                                              u1580 06E9                                                u1820 0FF2  
                                              u1741 063E                                                u1805 03A0  
                                              u1901 05A3                                                u1661 02AB  
                                              u1581 06E8                                                u1821 0FF1  
                                              u1750 064C                                                u1910 07CB  
                                              u1751 064B                                                u1911 07CA  
                                              u1815 03B8                                                u1655 029E  
                                              u1760 0482                                                u1680 02C5  
                                              u1920 066F                                                u1681 02C4  
                                              u1921 066E                                                u1770 0497  
                                              u1930 067A                                                u1675 02AD  
                                              u1595 06F2                                                u1835 0FF7  
                                              u1931 0679                                                u1780 04AC  
                                              u1765 047E                                                u1685 02C1  
                                              u1845 05E2                                                u1790 038D  
                                              u1775 0493                                                u1695 02CF  
                                              u1855 030B                                                u1785 04A8  
                                              u1865 031E                                                u1945 0698  
                                              u1890 079D                                                u1955 053B  
                                              u1795 0389                                                u1891 079C  
                                              u1875 033D                                                u1885 0359  
                                              u1965 0078                                                u1975 00A2  
                                              u1985 00D2                                                u1995 00E4  
                                              i1l52 0E00                                                i1l58 0CEE  
                                              _UART 0743                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                                  ??_I2C1_ReadStart 0074                                     ??_I2C1_StopSend 0070  
                                 I2C1_Write@address 0020                                                _main 0F84  
                                              _kaps 0064                                    __end_of_I2C_Host 080F  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                              start 0036          __end_of_EUSART_DefaultOverrunErrorCallback 0D2C  
              ??_EUSART_DefaultOverrunErrorCallback 0074                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 0D28                                       ADC2dBm@result 0040  
                   __end_of_INT_SetInterruptHandler 0D48                                     _I2C1_EVENT_IDLE 0D1C  
                                   _I2C1_EVENT_NACK 0D48                                          _i2c1Status 0052  
                                   _I2C1_EVENT_STOP 0D9E                                     __end_of_SendMsg 0668  
                                    ??_KAPS_GoToIdx 0025                                      ?_KAPS_StorePos 002D  
                                    _KAPS_getStatus 0773                                       ?_EUSART_Write 0074  
                                 __end_of_I2C1_Read 0F36                                     __end_of___aldiv 02F4  
                                             ?_main 0070                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             i1l210 0D23                                               i1l300 0D59  
                                             i1l231 0CEF                                               i1l303 0D3D  
                                             i1l207 0D27                                               i1l240 0D72  
                                             i1l321 0CF2                                               i1l225 04F3  
                                             i1l234 0D1F                                               i1l306 0D80  
                                             i1l219 0E43                                               i1l324 0D0F  
                                             i1l228 0F13                                               i1l309 0D17  
                                             i1l237 0D9D                                               i1l261 0D53  
                                             i1l318 0CF5                                               i1l270 0CFB  
                                             i1l247 07FA                                               i1l255 06DB  
                                             i1l264 0DA5                                               i1l273 0D38  
                                             i1l282 0D04                                               i1l258 0D4D  
                                             i1l450 0026                                               i1l291 0CF8  
                                             i1l267 0D79                                               i1l276 0D0B  
                                             i1l285 0D01                                               i1l294 0D13  
                                             i1l279 0CFE                                               i1l455 0034  
                                             i1l448 0018                                               i1l297 0D1B  
                                             i1l449 0034                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             u94_20 07D6                                               u94_21 07D5  
                                             u95_20 07EE                                               u95_21 07ED  
                                             u96_20 06AD                                               u96_21 06AC  
                                             _RXPPS 0E24                                               u97_20 06B4  
                                             u97_21 06B3                                               u98_20 06CA  
                                             u98_21 06C9                                    ??_I2C1_StartSend 0074  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                 ___lmul@multiplicand 0024  
                                             _Parse 01AC                                      ?_KAPS_getIndex 0070  
                                 ??_I2C1_Initialize 0076                                     SendMsg@data_len 0021  
                           ??_I2C1_CallbackRegister 0076                                   ?_I2C1_IsRxBufFull 0070  
                                  ProcessMsg@msg_id 0050                            ?_I2C1_EVENT_SEND_WR_ADDR 0070  
                                             _sspas 00A0                                               pclath 000A  
                             I2C1_DataTransmit@data 0070                                      _KAPS_setAbsPos 0710  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                      _KAPS_setRelPos 0F5C  
                                      ??_I2C1_Close 0070                                          SendMsg@sum 0023  
                                      __end_of_UART 0773                                        ??_I2C1_Write 0075  
                                   __initialization 0038                            ??_I2C1_ErrorEventHandler 0072  
                                 getADCValue@sample 0027                                        __end_of_main 0FAC  
                            __end_of_KAPS_getStatus 07A1                                           ??_ADC2Amp 0075  
                                         ??_ADC2dBm 0075                                      getADCValue@sum 0029  
                                  _I2C1_EVENT_ERROR 0D4E                                      ??_EUSART_Write 0075  
                                  _I2C1_EVENT_RESET 0D73                                           ??_ADC_ISR 0070  
                       ?_INTERRUPT_InterruptManager 0070                                    __end_of_SendNack 0DB9  
                                            ??_main 0076                                    __end_of_SendSync 0E31  
                                  SSPA_setMute@band 0075                                    SSPA_setMute@mute 0074  
EUSART_OverrunErrorCallbackRegister@callbackHandler 0074  EUSART_FramingErrorCallbackRegister@callbackHandler 0074  
              I2C1_CallbackRegister@callbackHandler 0074                                              ?_Parse 0070  
                                __end_of_I2C1_Close 0E44                                              _ADCON0 009D  
                                            _ADCON1 009E                                              _ADCON2 009F  
                        _EUSART_OverrunErrorHandler 005E                               _I2C1_InterruptsEnable 0D30  
                                            _ADRESH 009C                                              _ADRESL 009B  
                            __end_of_KAPS_setAbsPos 0743                                  __end_of_I2C1_Write 0ED4  
                                            _ANSELA 018C                                              _ANSELB 018D  
                                            _ANSELC 018E                                              _BORCON 0116  
                                 KAPS_setAbsPos@reg 0037                                   KAPS_setAbsPos@pos 002D  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RC2PPS 0EA2                                              _RB5PPS 0E9D  
                                            _RB6PPS 0E9E                                              u111_20 04BC  
                                            u111_21 04BB                                              u112_20 04C4  
                                            u112_21 04C3                                              _ODCONA 028C  
                                            _ODCONB 028D                                              _ODCONC 028E  
                                            i1l3141 0D24                                              i1l3135 0DF3  
                                            i1l3143 0D20                                              u113_20 04D2  
                                            i1l3137 0DF5                                              u113_21 04D1  
                                            i1l3139 0DFB                                              i1l2531 0DA4  
                                            i1l2461 0D0C                                              i1l2525 0D35  
                                            i1l2701 0D6C                                              i1l3341 000F  
                                            i1l2471 0E3D                                              i1l2543 0D10  
                                            i1l2535 0D14                                              i1l2527 0D02  
                                            i1l2711 07D6                                              i1l2703 0D71  
                                            i1l2551 0D73                                              i1l3351 0030  
                                            i1l3343 0014                                              u114_20 04DA  
                                            i1l2457 0CF3                                              i1l2473 0E40  
                                            i1l2465 0E31                                              i1l2545 0CFF  
                                            i1l2721 07EF                                              i1l2713 07DA  
                                            i1l2529 0D9E                                              i1l2553 0D76  
                                            u114_21 04D9                                              i1l3345 001D  
                                            i1l3337 0006                                              i1l2459 0CF0  
                                            i1l2467 0E33                                              i1l2475 0CF6  
                                            i1l2539 0CF9                                              i1l2547 0D18  
                                            i1l2723 07F2                                              i1l2715 07E6  
                                            i1l2707 07CF                                              i1l2731 06A3  
                                            i1l2555 0D78                                              i1l3347 0022  
                                            i1l3339 000A                                              i1l2477 0D08  
                                            i1l2469 0E3A                                              i1l2549 0CFC  
                                            i1l2725 07F5                                              i1l2717 07E9  
                                            i1l2709 07CF                                              i1l2741 06C0  
                                            i1l2733 06A5                                              i1l2901 04B4  
                                            i1l3349 002B                                              i1l2719 07EE  
                                            i1l2727 07F9                                              i1l2743 06C4  
                                            i1l2735 06AD                                              i1l2751 06D7  
                                            i1l2911 04DA                                              i1l2903 04BC  
                                            i1l2753 06DA                                              i1l2745 06CA  
                                            i1l2737 06B4                                              i1l2761 0D4C  
                                            i1l2921 0F0E                                              i1l2681 0D54  
                                            i1l2913 04DF                                              i1l2905 04C4  
                                            i1l2691 0D1E                                              i1l2747 06CE  
                                            i1l2739 06BB                                              i1l2915 0EF2  
                                            i1l2907 04CA                                              i1l2749 06D4  
                                            i1l2757 0D48                                              i1l2765 0D4E  
                                            i1l2917 0EF7                                              i1l2677 0D7A  
                                            i1l2685 0D39                                              i1l2909 04D2  
                                            i1l2695 0D96                                              i1l2759 0D48  
                                            i1l2767 0D4E                                              i1l2919 0EFA  
                                            i1l2689 0D1C                                              i1l2697 0D9C  
                                            i1l2769 0D52                                              u141_20 000A  
                                            u141_21 0009                                              i1l2899 04B1  
                                            u142_20 000F                                              u142_21 000E  
                                            u127_20 0DFB                                              u143_20 0014  
                                            u127_21 0DFA                                              u143_21 0013  
                                            u144_20 001D                                              u144_21 001C  
                                            _INLVLA 038C                                              _INLVLB 038D  
                                            _INLVLC 038E                                              u145_20 0022  
                                            u145_21 0021                                              u146_20 002B  
                                            u146_21 002A                                              u147_20 0030  
                                            u147_21 002F                                              _OSCCON 0099  
                            __end_of_KAPS_setRelPos 0F84                                              _SPBRGH 019C  
                                            _SPBRGL 019B                                              _TX1REG 019A  
                                            _TX1STA 019E                             __end_of_I2C1_EVENT_IDLE 0D20  
                           __end_of_I2C1_EVENT_NACK 0D4E                                  KAPS_getStatus@data 0028  
                           __end_of_I2C1_EVENT_STOP 0DA6                               SSPA_getPOut@adc_value 0048  
                                         ??_SendMsg 0022                         __end_of_I2C1_InterruptClear 0CF6  
                                   ??_KAPS_StorePos 0031                                              ___lmul 06DC  
                                         ??___aldiv 0074                                     ?_KAPS_getStatus 0070  
                                  __end_of_packLong 03D5                                  _I2C1_RestartEnable 0D02  
                                         ?_I2C1_ISR 0070                                              _parser 00B8  
                                 ?_EUSART_IsRxReady 0070                     __end_of_I2C1_EVENT_SEND_RD_ADDR 0D9E  
                                 ?_EUSART_IsTxReady 0070                                   ProcessMsg@payload 00C4  
                                        _ProcessMsg 0068                                        packLong@data 002C  
                                 ?_CLOCK_Initialize 0070                                  ??_EUSART_IsRxReady 0074  
                                   ??_KAPS_getIndex 0025                                  ??_EUSART_IsTxReady 0074  
                                ??_CLOCK_Initialize 0074                     __end_of_I2C1_EVENT_SEND_WR_ADDR 0D73  
                               ?_I2C1_RestartEnable 0070                                   ??_I2C1_WriteStart 0074  
                          ADC_GetConversion@channel 0021             INT_SetInterruptHandler@InterruptHandler 0074  
           ADC_SetInterruptHandler@InterruptHandler 0074                                     ?_KAPS_setAbsPos 002D  
                              __end_of_KAPS_GoToIdx 0F5C                                   _SYSTEM_Initialize 0E44  
                           __end_of__initialization 0064                                     ?_KAPS_setRelPos 0070  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                     ??_I2C1_IsNack 0070                                       ??_I2C1_IsBusy 0074  
                                ?_SYSTEM_Initialize 0070                                         SendMsg@data 0020  
                                getADCValue@channel 0026                                       ??_ADC2Celsius 003C  
                              ??_I2C1_RestartEnable 0070                                      __pcstackCOMMON 0070  
                                     __end_of_Parse 0264                                        __pidataBANK0 0D8F  
                                      __pidataBANK1 0E81                                 ??_SYSTEM_Initialize 0076  
                               KAPS_setRelPos@value 0029                          ??_I2C1_ErrorInterruptClear 0070  
                                   _I2C1_IsBusy$646 0074                                          ??_I2C1_ISR 0074  
                                    _OPTION_REGbits 0095                               __end_of_I2C1_EVENT_RX 06DC  
                             __end_of_I2C1_EVENT_TX 07FB                                             ??_Parse 0026  
                            ?_I2C1_InterruptsEnable 0070                                   _I2C1_EventHandler 04B1  
                         __end_of_SYSTEM_Initialize 0E57                                          __pbssBANK0 0052  
                                        __pbssBANK1 00B8                                __end_of_EUSART_Write 0D30  
                                ?_I2C1_EventHandler 0070                                   KAPS_setRelPos@reg 0028  
                             _I2C1_StatusFlagsClear 0D0C                                    ?_I2C1_EVENT_IDLE 0070  
                                  ?_I2C1_EVENT_NACK 0070                                           ?_SendNack 0070  
                                  ?_I2C1_EVENT_STOP 0070                                           ?_SendSync 0070  
                               ??_I2C1_EventHandler 0072                                          __pmaintext 0F84  
                               __end_of_I2C1_IsAddr 0D81                                 __end_of_I2C1_IsData 0D3E  
                               __end_of_I2C1_IsNack 0D5A                                             ?___lmul 0020  
                               __end_of_I2C1_IsBusy 0E20                                             _ADC2Amp 04F4  
                                           _ADC2dBm 05EF                                          __pintentry 0004  
                                   _I2C1_Initialize 0E6B                                _EUSART_AutoBaudQuery 0000  
                               __end_of_ADC2Celsius 0421                                             _ADC_ISR 0DF3  
                                    ___lmul@product 0028                                         ?_ProcessMsg 004E  
                                KAPS_setAbsPos@data 0033                               __end_of_I2C1_NackSend 0D1C  
                             __end_of_I2C1_BusReset 0D0C                                     _EUSART_IsTxDone 0000  
                                   _EUSART_ErrorGet 0000                                           _I2C1_Read 0F14  
                         __end_of_I2C1_EventHandler 04F4                              _I2C1_ErrorEventHandler 0EF2  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                          __end_of_I2C1_EVENT_ERROR 0D54                            __end_of_I2C1_EVENT_RESET 0D7A  
                                         ?_packLong 0020                       __end_of_I2C1_CallbackRegister 0DF3  
                                   KAPS_getPos@data 002F                               __end_of_I2C1_StopSend 0CF9  
                                        ??_SendNack 0076                                          ??_SendSync 0075  
                              _ADC_InterruptHandler 006B                                             _SendMsg 062C  
                           _ADC_SetInterruptHandler 0D5A                                       ??_getADCValue 0024  
                                           ___aldiv 0264                                    KAPS_StorePos@idx 0038  
                                  KAPS_StorePos@reg 0037                                    KAPS_StorePos@pos 002D  
                                           __ptext1 0E44                                             __ptext2 0421  
                                           __ptext3 0DC4                                             __ptext4 0D43  
                                           __ptext5 0E6B                                             __ptext6 0D30  
                                           __ptext7 0DE7                                             __ptext8 0E99  
                                           __ptext9 0DDB                                I2C1_Write@dataLength 0023  
                               _I2C1_RestartDisable 0CFF                                    ___aldiv@dividend 0030  
                          ??_PIN_MANAGER_Initialize 0074                                          ?_I2C1_Read 0020  
                                     ?_I2C1_AckSend 0070                             _INT_SetInterruptHandler 0D43  
                                   _i2c1_eventTable 080F                                             clrloop0 0D61  
                              end_of_initialization 0064                                          ??_packLong 0024  
                            ?_I2C1_StatusFlagsClear 0070                                             init_ram 0D66  
                                           initloop 0D67                                         _I2C1_IsAddr 0D7A  
                                       _I2C1_IsData 0D39                                         _I2C1_IsNack 0D54  
                                       _I2C1_IsBusy 0E10                                    ??_KAPS_getStatus 0025  
                                 _EUSART_Initialize 0E99                                ?_I2C1_RestartDisable 0070  
                                  I2C1_Read@address 0020                             __end_of_I2C1_Initialize 0E81  
                                       _ADC2Celsius 03D5                                  ?_EUSART_Initialize 0070  
                                 KAPS_getIndex@data 0028                                    ___aldiv@quotient 0036  
                                  _I2C1_DataReceive 0CF9                                     _I2C1_WriteStart 0D81  
                               __end_of_getADCValue 1000                                 ??_EUSART_Initialize 0076  
                                      _KAPS_GoToIdx 0F36                                           _SSPDATPPS 0E21  
                                         _SSPCLKPPS 0E20                                    ??_KAPS_setAbsPos 0031  
                                    ??_I2C1_AckSend 0070                 __end_of_ADC_DefaultInterruptHandler 0CEF  
                       _ADC_DefaultInterruptHandler 0CEE                                    ??_KAPS_setRelPos 0025  
                               _EUSART_Deinitialize 0000                                          _unpackLong 046C  
                                        _unpackWord 0DCF                           __end_of_EUSART_Initialize 0EB6  
                     ??_ADC_DefaultInterruptHandler 0070                           ??_ADC_SetInterruptHandler 0076  
                             ??_I2C1_RestartDisable 0070                                      ProcessMsg@data 004E  
                                      getADCValue@i 002B                        __end_of_INTERRUPT_Initialize 0DCF  
                                    _I2C1_ERROR_ISR 0D20                                      __end_of___lmul 0710  
                             __end_of_KAPS_StorePos 0574                                           Parse@data 0028  
                                     ?_SSPA_getPOut 0070                          __end_of_I2C1_ReceiveEnable 0CFF  
                                      _EUSART_Write 0D2C                                       ?_SSPA_getTemp 0070  
                           __end_of_i2c1_eventTable 0821                                      _ADC_Initialize 0E57  
                              KAPS_setRelPos@offset 0027                           ??_INT_SetInterruptHandler 0076  
                           ??_I2C1_InterruptsEnable 0074                                       ??_KAPS_getPos 002D  
                                          ADC2Amp@v 003A                                 start_initialization 0038  
                                     ?_SSPA_setMute 0074                                         ??_I2C1_Read 0075  
                                          ADC2dBm@v 003A                               __end_of_KAPS_getIndex 07CF  
                                      SendSync@data 0075                                       ??_EUSART_Read 0074  
                           _I2C1_EVENT_SEND_RD_ADDR 0D96                             __end_of_I2C1_WriteStart 0D88  
                                  ?_I2C1_Initialize 0070                                   KAPS_getStatus@reg 0027  
                           _I2C1_EVENT_SEND_WR_ADDR 0D6C                                         _getADCValue 0FD6  
                            __end_of_I2C1_ERROR_ISR 0D24                          _EUSART_FramingErrorHandler 0076  
                                  _I2C1_IsRxBufFull 0D14                                            ??___lmul 0074  
                                          ?_ADC2Amp 003A                                            ?_ADC2dBm 003A  
                            __end_of_ADC_Initialize 0E6B                                         __pdataBANK0 0064  
                                       __pdataBANK1 00A0                                      ??_SSPA_getPOut 0046  
                                    ??_SSPA_getTemp 0048                                            ?_ADC_ISR 0070  
                                   unpackLong@value 0020                                        ??_ProcessMsg 004F  
                           ?_I2C1_ErrorEventHandler 0070                                      ??_SSPA_setMute 0020  
                                       __pbssCOMMON 0076                                           ___latbits 0001  
                                     __pcstackBANK0 0020                                         ?_unpackLong 0020  
                               __end_of_KAPS_getPos 05B2                                         ?_unpackWord 0020  
                         ?_I2C1_ErrorInterruptClear 0070                        __end_of_I2C1_DefaultCallback 0CF0  
                                 ?_I2C1_EVENT_ERROR 0070                                   ?_I2C1_EVENT_RESET 0070  
                               __end_of_EUSART_Read 0FD6                                  ??_I2C1_EVENT_ERROR 0070  
                                ??_I2C1_EVENT_RESET 0070                                           __pnvBANK0 006B  
                                __end_of_ProcessMsg 01AC                                            ?_SendMsg 0020  
                              __end_of_I2C1_AckSend 0D14                              _PIN_MANAGER_Initialize 0421  
                                   ?_I2C1_ERROR_ISR 0070                                   ADC2Celsius@result 0044  
                                    _I2C1_ReadStart 0D88                                            ?___aldiv 002C  
                                   ?_ADC_Initialize 0070                                            _I2C1_ISR 0D24  
                      ??_INTERRUPT_InterruptManager 0074                      __end_of_I2C1_ErrorEventHandler 0F14  
                                          _BAUD1CON 019F                                      KAPS_getPos@reg 0033  
                            _EUSART_TransmitDisable 0000                                    SSPA_getPOut@band 004A  
                                          _I2C_Host 07FB                                 I2C1_Read@dataLength 0023  
                     I2C1_EVENT_ERROR@retEventState 0070                             ??_I2C1_StatusFlagsClear 0070  
                          __end_of_I2C1_DataReceive 0CFC                           ??_I2C1_EVENT_SEND_RD_ADDR 0070  
                                  _EUSART_IsRxReady 0D3E                                _INTERRUPT_Initialize 0DC4  
                                   unpackWord@value 0020                                    _EUSART_IsTxReady 0E01  
                                   ___aldiv@divisor 002C                                    _CLOCK_Initialize 0DA6  
                                    _I2C1_StartSend 0D05                                     ___aldiv@counter 0034  
                                      ?_I2C1_IsAddr 0070                                        ?_I2C1_IsData 0070  
                                          _LATCbits 010E                                        ?_I2C1_IsNack 0070  
                         ??_I2C1_EVENT_SEND_WR_ADDR 0071                                        ?_I2C1_IsBusy 0070  
                             _I2C1_CallbackRegister 0DE7                                           clear_ram0 0D60  
                                          _PIE1bits 0090                                            _PIE2bits 0091  
                                  ?_I2C1_WriteStart 0070                                   _eusartRxLastError 0060  
                                        _I2C1_Close 0E31                              __end_of_I2C1_ReadStart 0D8F  
                                      ?_ADC2Celsius 003A                                            _PIR1bits 0010  
                                          _PIR2bits 0011                                          _I2C1_Write 0EB6  
                                  KAPS_getIndex@reg 0027                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                  KAPS_getPos@F9702 00C0                                    SSPA_getTemp@band 004D  
                                        _ADCON0bits 009D                                         _KAPS_getPos 0574  
                      I2C1_EVENT_NACK@retEventState 0070                                       _I2C1_EVENT_RX 06A3  
                                     _I2C1_EVENT_TX 07CF                                         _EUSART_Read 0FAC  
                                 ___lmul@multiplier 0020                               ?_INTERRUPT_Initialize 0070  
                            __end_of_I2C1_StartSend 0D08                                __end_of_SSPA_getPOut 037E  
                              __end_of_SSPA_getTemp 05EF                                 _I2C1_InterruptClear 0CF3  
                                          _SendNack 0DAE                                            _SendSync 0E20  
                              __end_of_SSPA_setMute 06A3                                     ?_I2C1_ReadStart 0070  
                                 _ADC_GetConversion 0ED4                               _EUSART_IsTxReady$1324 0074  
                                    unpackLong@data 0024                                       _I2C1_Callback 0062  
                                ?_ADC_GetConversion 0074                                   KAPS_StorePos@data 0033  
                              _I2C1_DefaultCallback 0CEF                                     KAPS_GoToIdx@idx 0027  
                                   KAPS_GoToIdx@reg 0028                                ?_I2C1_InterruptClear 0070  
                                     _I2C1_NackSend 0D18                                       _I2C1_BusReset 0D08  
                               ??_ADC_GetConversion 0020                                   ??_I2C1_EVENT_IDLE 0070  
                                 ??_I2C1_EVENT_NACK 0070                                   ??_I2C1_EVENT_STOP 0070  
                     __end_of_I2C1_InterruptsEnable 0D34                                      ?_I2C1_EVENT_RX 0070  
                                    ?_I2C1_EVENT_TX 0070                                    ADC2Celsius@value 0040  
                                     _I2C1_ErrorGet 0000                                  _EUSART_AutoBaudSet 0000  
                                          __ptext10 0DB9                                            __ptext11 0DA6  
                                          __ptext20 0FD6                                            __ptext12 0E57  
                                          __ptext21 0ED4                                            __ptext13 0D5A  
                                          __ptext30 037E                                            __ptext22 05EF  
                                          __ptext14 0068                                            __ptext31 07A1  
                                          __ptext23 04F4                                            __ptext15 0DCF  
                                          __ptext40 0E10                                            __ptext32 0F14  
                                          __ptext24 06DC                                            __ptext16 0668  
                                          __ptext41 01AC                                            __ptext33 0D88  
                                          __ptext25 0264                                            __ptext17 05B2  
                                          __ptext50 0D3E                                            __ptext42 0DAE  
                                          __ptext34 0534                                            __ptext26 0F5C  
                                          __ptext18 03D5                                            __ptext43 062C  
                                          __ptext35 046C                                            __ptext27 0710  
                                          __ptext19 02F4                                            __ptext60 0D9E  
                                          __ptext52 0D24                                            __ptext44 0E20  
                                          __ptext36 0F36                                            __ptext28 0773  
                                          __ptext61 0D4E                                            __ptext53 04B1  
                                          __ptext45 0D2C                                            __ptext37 0EB6  
                                          __ptext29 0574                                            __ptext70 0CFF  
                                          __ptext62 0D48                                            __ptext54 0D54  
                                          __ptext46 0E01                                            __ptext38 0D81  
                                          __ptext71 0CFC                                            __ptext63 06A3  
                                          __ptext55 0D39                                            __ptext47 0FAC  
                                          __ptext39 0D05                                            __ptext80 0CF0  
                                          __ptext72 0D18                                            __ptext64 0D6C  
                                          __ptext56 0D7A                                            __ptext48 0D28  
                                          __ptext81 0D08                                            __ptext73 0D14  
                                          __ptext65 0D96                                            __ptext57 0D20  
                                          __ptext49 0003                                            __ptext82 0CEF  
                                          __ptext74 0CF9                                            __ptext66 0D1C  
                                          __ptext58 0EF2                                            __ptext83 0DF3  
                                          __ptext75 0D10                                            __ptext67 07CF  
                                          __ptext59 0D73                                            __ptext84 0CEE  
                                          __ptext76 0CF6                                            __ptext68 0D02  
                                          __ptext77 0E31                                            __ptext69 0D34  
                                          __ptext78 0D0C                                            __ptext79 0CF3  
                          __end_of_I2C1_IsRxBufFull 0D18                                        _SSP1CON1bits 0215  
                                      _SSP1CON2bits 0216                         __end_of_I2C1_RestartDisable 0D02  
                                _I2C1_ReceiveEnable 0CFC                                     ?_I2C1_StartSend 0070  
                             _EUSART_TransmitEnable 0000                                            _packLong 037E  
                            ?_I2C1_CallbackRegister 0074                                      unpackWord@data 0022  
                               ?_I2C1_ReceiveEnable 0070                           __end_of_ADC_GetConversion 0EF2  
                                  _parserDataBuffer 00CA                                         ?_I2C1_Close 0070  
                                     _I2C1_StopSend 0CF6                                        ?_getADCValue 0022  
                                        _RC1STAbits 019D                                         ?_I2C1_Write 0020  
                                          int$flags 007E                  __end_of_INTERRUPT_InterruptManager 0036  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 0DC4  
             ??_EUSART_FramingErrorCallbackRegister 0076                ?_EUSART_FramingErrorCallbackRegister 0074  
               _EUSART_FramingErrorCallbackRegister 0DB9                               ?_I2C1_DefaultCallback 0070  
                                          main@data 0051                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0070                    __end_of_I2C1_ErrorInterruptClear 0CF3  
                             SSPA_getTemp@adc_value 004A                                      ?_I2C1_NackSend 0070  
                                    ?_I2C1_BusReset 0070                                ??_I2C1_ReceiveEnable 0070  
                                    packLong@result 0028                                          _INTCONbits 000B  
                                      _I2C1_AckSend 0D10                                _INT_InterruptHandler 0078  
                            ??_INTERRUPT_Initialize 0076                                        ??_unpackLong 0025  
                        I2C1_EVENT_RX@retEventState 0071                            ?_ADC_SetInterruptHandler 0074  
                                      ??_unpackWord 0074                                            intlevel1 0000  
                                  ??_I2C1_ERROR_ISR 0074                                  I2C1_Read@retStatus 0075  
                           ?_PIN_MANAGER_Initialize 0070                          __end_of_I2C1_RestartEnable 0D05  
        __end_of_EUSART_DefaultFramingErrorCallback 0004                ??_EUSART_DefaultFramingErrorCallback 0074  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 0003  
                                    ?_I2C1_StopSend 0070                                    ??_ADC_Initialize 0076  
                                     I2C1_Read@data 0022                            ?_INT_SetInterruptHandler 0074  
                          __end_of_EUSART_IsRxReady 0D43                            __end_of_EUSART_IsTxReady 0E10  
                                __end_of_unpackLong 04B1                            __end_of_CLOCK_Initialize 0DAE  
                                __end_of_unpackWord 0DDB                                       __pstringtext1 0743  
                                     __pstringtext2 07FB                                       __pstringtext3 080F  
                                     ADC2Amp@result 0042                                     ??_I2C1_EVENT_RX 0070  
                                   ??_I2C1_EVENT_TX 0071                                        ___aldiv@sign 0035  
                                 _I2C1_DataTransmit 0D34                                          _TX1STAbits 019E  
                                ?_I2C1_DataTransmit 0070                                 SSPA_getTemp@channel 004C  
                                      ADC2Amp@value 003E                                   ?_I2C1_DataReceive 0070  
                                EUSART_Write@txData 0074                                       SendNack@error 0025  
                    __end_of_PIN_MANAGER_Initialize 046C                       __end_of_I2C1_StatusFlagsClear 0D10  
                                ??_I2C1_DataReceive 0070                                        ADC2Celsius@v 003A  
                        I2C1_EVENT_TX@retEventState 0071                                 ??_I2C1_DataTransmit 0070  
