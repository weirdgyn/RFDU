

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 17:01:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	text87,local,class=CODE,merge=1,delta=2
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110     0000                     
   111                           ; Generated 07/09/2023 GMT
   112                           ; 
   113                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F1618 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     0111                     	;# 
   202     0112                     	;# 
   203     0113                     	;# 
   204     0114                     	;# 
   205     0115                     	;# 
   206     0116                     	;# 
   207     0117                     	;# 
   208     0118                     	;# 
   209     0119                     	;# 
   210     011C                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     018E                     	;# 
   214     0191                     	;# 
   215     0191                     	;# 
   216     0192                     	;# 
   217     0193                     	;# 
   218     0193                     	;# 
   219     0194                     	;# 
   220     0195                     	;# 
   221     0196                     	;# 
   222     0197                     	;# 
   223     0199                     	;# 
   224     0199                     	;# 
   225     0199                     	;# 
   226     019A                     	;# 
   227     019A                     	;# 
   228     019A                     	;# 
   229     019B                     	;# 
   230     019B                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019B                     	;# 
   234     019C                     	;# 
   235     019C                     	;# 
   236     019C                     	;# 
   237     019D                     	;# 
   238     019D                     	;# 
   239     019D                     	;# 
   240     019E                     	;# 
   241     019E                     	;# 
   242     019E                     	;# 
   243     019F                     	;# 
   244     019F                     	;# 
   245     019F                     	;# 
   246     019F                     	;# 
   247     019F                     	;# 
   248     020C                     	;# 
   249     020D                     	;# 
   250     020E                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0215                     	;# 
   263     0216                     	;# 
   264     0216                     	;# 
   265     0217                     	;# 
   266     0217                     	;# 
   267     028C                     	;# 
   268     028D                     	;# 
   269     028E                     	;# 
   270     0291                     	;# 
   271     0291                     	;# 
   272     0292                     	;# 
   273     0293                     	;# 
   274     0294                     	;# 
   275     0298                     	;# 
   276     0298                     	;# 
   277     0299                     	;# 
   278     029A                     	;# 
   279     029B                     	;# 
   280     029E                     	;# 
   281     030C                     	;# 
   282     030D                     	;# 
   283     030E                     	;# 
   284     038C                     	;# 
   285     038D                     	;# 
   286     038E                     	;# 
   287     0391                     	;# 
   288     0392                     	;# 
   289     0393                     	;# 
   290     0394                     	;# 
   291     0395                     	;# 
   292     0396                     	;# 
   293     0397                     	;# 
   294     0398                     	;# 
   295     0399                     	;# 
   296     040E                     	;# 
   297     0413                     	;# 
   298     0413                     	;# 
   299     0414                     	;# 
   300     0414                     	;# 
   301     0415                     	;# 
   302     0416                     	;# 
   303     0417                     	;# 
   304     0418                     	;# 
   305     041A                     	;# 
   306     041A                     	;# 
   307     041B                     	;# 
   308     041B                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     041F                     	;# 
   313     0493                     	;# 
   314     0494                     	;# 
   315     0495                     	;# 
   316     0496                     	;# 
   317     049A                     	;# 
   318     049B                     	;# 
   319     049C                     	;# 
   320     049D                     	;# 
   321     058C                     	;# 
   322     058C                     	;# 
   323     058D                     	;# 
   324     058E                     	;# 
   325     058E                     	;# 
   326     058F                     	;# 
   327     0590                     	;# 
   328     0590                     	;# 
   329     0591                     	;# 
   330     0592                     	;# 
   331     0592                     	;# 
   332     0593                     	;# 
   333     0594                     	;# 
   334     0594                     	;# 
   335     0595                     	;# 
   336     0596                     	;# 
   337     0596                     	;# 
   338     0597                     	;# 
   339     0598                     	;# 
   340     0599                     	;# 
   341     059A                     	;# 
   342     059B                     	;# 
   343     059B                     	;# 
   344     059C                     	;# 
   345     059D                     	;# 
   346     060C                     	;# 
   347     060C                     	;# 
   348     060D                     	;# 
   349     060E                     	;# 
   350     060F                     	;# 
   351     060F                     	;# 
   352     0610                     	;# 
   353     0611                     	;# 
   354     0612                     	;# 
   355     0613                     	;# 
   356     0614                     	;# 
   357     0617                     	;# 
   358     0617                     	;# 
   359     0618                     	;# 
   360     0619                     	;# 
   361     061A                     	;# 
   362     061A                     	;# 
   363     061B                     	;# 
   364     061C                     	;# 
   365     0691                     	;# 
   366     0692                     	;# 
   367     0693                     	;# 
   368     0694                     	;# 
   369     0695                     	;# 
   370     0696                     	;# 
   371     0697                     	;# 
   372     0699                     	;# 
   373     069A                     	;# 
   374     0711                     	;# 
   375     0712                     	;# 
   376     0713                     	;# 
   377     0714                     	;# 
   378     0715                     	;# 
   379     0718                     	;# 
   380     0718                     	;# 
   381     0719                     	;# 
   382     071A                     	;# 
   383     071A                     	;# 
   384     071B                     	;# 
   385     071C                     	;# 
   386     071D                     	;# 
   387     0791                     	;# 
   388     0791                     	;# 
   389     0792                     	;# 
   390     0793                     	;# 
   391     0793                     	;# 
   392     0794                     	;# 
   393     0795                     	;# 
   394     0795                     	;# 
   395     0796                     	;# 
   396     0797                     	;# 
   397     0797                     	;# 
   398     0798                     	;# 
   399     0799                     	;# 
   400     079A                     	;# 
   401     080C                     	;# 
   402     080C                     	;# 
   403     080D                     	;# 
   404     080E                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0810                     	;# 
   409     0811                     	;# 
   410     0812                     	;# 
   411     0812                     	;# 
   412     0813                     	;# 
   413     0814                     	;# 
   414     0815                     	;# 
   415     0816                     	;# 
   416     0817                     	;# 
   417     0818                     	;# 
   418     0819                     	;# 
   419     081A                     	;# 
   420     081A                     	;# 
   421     081B                     	;# 
   422     081C                     	;# 
   423     081C                     	;# 
   424     081D                     	;# 
   425     088C                     	;# 
   426     088D                     	;# 
   427     088E                     	;# 
   428     088F                     	;# 
   429     088F                     	;# 
   430     0890                     	;# 
   431     0891                     	;# 
   432     0892                     	;# 
   433     0893                     	;# 
   434     0893                     	;# 
   435     0894                     	;# 
   436     0895                     	;# 
   437     0896                     	;# 
   438     0897                     	;# 
   439     0897                     	;# 
   440     0898                     	;# 
   441     0899                     	;# 
   442     0D8C                     	;# 
   443     0D8C                     	;# 
   444     0D8D                     	;# 
   445     0D8E                     	;# 
   446     0D8F                     	;# 
   447     0D8F                     	;# 
   448     0D90                     	;# 
   449     0D91                     	;# 
   450     0D92                     	;# 
   451     0D92                     	;# 
   452     0D93                     	;# 
   453     0D94                     	;# 
   454     0D95                     	;# 
   455     0D95                     	;# 
   456     0D96                     	;# 
   457     0D97                     	;# 
   458     0D98                     	;# 
   459     0D99                     	;# 
   460     0D9A                     	;# 
   461     0D9B                     	;# 
   462     0D9C                     	;# 
   463     0D9D                     	;# 
   464     0D9E                     	;# 
   465     0D9E                     	;# 
   466     0D9F                     	;# 
   467     0DA0                     	;# 
   468     0DA1                     	;# 
   469     0DA1                     	;# 
   470     0DA2                     	;# 
   471     0DA3                     	;# 
   472     0DA4                     	;# 
   473     0DA4                     	;# 
   474     0DA5                     	;# 
   475     0DA6                     	;# 
   476     0DA7                     	;# 
   477     0DA7                     	;# 
   478     0DA8                     	;# 
   479     0DA9                     	;# 
   480     0DAA                     	;# 
   481     0DAB                     	;# 
   482     0DAC                     	;# 
   483     0DAD                     	;# 
   484     0DAE                     	;# 
   485     0DAF                     	;# 
   486     0E0F                     	;# 
   487     0E10                     	;# 
   488     0E11                     	;# 
   489     0E12                     	;# 
   490     0E13                     	;# 
   491     0E14                     	;# 
   492     0E15                     	;# 
   493     0E16                     	;# 
   494     0E17                     	;# 
   495     0E17                     	;# 
   496     0E18                     	;# 
   497     0E18                     	;# 
   498     0E19                     	;# 
   499     0E1A                     	;# 
   500     0E1B                     	;# 
   501     0E1B                     	;# 
   502     0E1C                     	;# 
   503     0E1D                     	;# 
   504     0E1E                     	;# 
   505     0E1E                     	;# 
   506     0E1F                     	;# 
   507     0E20                     	;# 
   508     0E21                     	;# 
   509     0E22                     	;# 
   510     0E23                     	;# 
   511     0E24                     	;# 
   512     0E25                     	;# 
   513     0E26                     	;# 
   514     0E27                     	;# 
   515     0E28                     	;# 
   516     0E29                     	;# 
   517     0E2A                     	;# 
   518     0E2B                     	;# 
   519     0E2C                     	;# 
   520     0E2D                     	;# 
   521     0E2E                     	;# 
   522     0E90                     	;# 
   523     0E91                     	;# 
   524     0E92                     	;# 
   525     0E94                     	;# 
   526     0E95                     	;# 
   527     0E9C                     	;# 
   528     0E9D                     	;# 
   529     0E9E                     	;# 
   530     0E9F                     	;# 
   531     0EA0                     	;# 
   532     0EA1                     	;# 
   533     0EA2                     	;# 
   534     0EA3                     	;# 
   535     0EA4                     	;# 
   536     0EA5                     	;# 
   537     0EA6                     	;# 
   538     0EA7                     	;# 
   539     0F0F                     	;# 
   540     0F10                     	;# 
   541     0F11                     	;# 
   542     0F12                     	;# 
   543     0F13                     	;# 
   544     0F14                     	;# 
   545     0F15                     	;# 
   546     0F16                     	;# 
   547     0F17                     	;# 
   548     0F18                     	;# 
   549     0F19                     	;# 
   550     0F1A                     	;# 
   551     0F1B                     	;# 
   552     0F1C                     	;# 
   553     0F1D                     	;# 
   554     0F1E                     	;# 
   555     0F1F                     	;# 
   556     0F20                     	;# 
   557     0F21                     	;# 
   558     0F22                     	;# 
   559     0F23                     	;# 
   560     0FE4                     	;# 
   561     0FE5                     	;# 
   562     0FE6                     	;# 
   563     0FE7                     	;# 
   564     0FE8                     	;# 
   565     0FE9                     	;# 
   566     0FEA                     	;# 
   567     0FEB                     	;# 
   568     0FED                     	;# 
   569     0FEE                     	;# 
   570     0FEF                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000D                     	;# 
   585     000E                     	;# 
   586     0010                     	;# 
   587     0011                     	;# 
   588     0012                     	;# 
   589     0013                     	;# 
   590     0014                     	;# 
   591     0015                     	;# 
   592     0016                     	;# 
   593     0016                     	;# 
   594     0017                     	;# 
   595     0018                     	;# 
   596     0019                     	;# 
   597     001A                     	;# 
   598     001A                     	;# 
   599     001B                     	;# 
   600     001B                     	;# 
   601     001C                     	;# 
   602     001D                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     008E                     	;# 
   608     0090                     	;# 
   609     0091                     	;# 
   610     0092                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0098                     	;# 
   616     0099                     	;# 
   617     009A                     	;# 
   618     009B                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     009F                     	;# 
   624     010C                     	;# 
   625     010D                     	;# 
   626     010E                     	;# 
   627     0111                     	;# 
   628     0112                     	;# 
   629     0113                     	;# 
   630     0114                     	;# 
   631     0115                     	;# 
   632     0116                     	;# 
   633     0117                     	;# 
   634     0118                     	;# 
   635     0119                     	;# 
   636     011C                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     018E                     	;# 
   640     0191                     	;# 
   641     0191                     	;# 
   642     0192                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0197                     	;# 
   649     0199                     	;# 
   650     0199                     	;# 
   651     0199                     	;# 
   652     019A                     	;# 
   653     019A                     	;# 
   654     019A                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019B                     	;# 
   659     019B                     	;# 
   660     019C                     	;# 
   661     019C                     	;# 
   662     019C                     	;# 
   663     019D                     	;# 
   664     019D                     	;# 
   665     019D                     	;# 
   666     019E                     	;# 
   667     019E                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     019F                     	;# 
   671     019F                     	;# 
   672     019F                     	;# 
   673     019F                     	;# 
   674     020C                     	;# 
   675     020D                     	;# 
   676     020E                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0216                     	;# 
   690     0216                     	;# 
   691     0217                     	;# 
   692     0217                     	;# 
   693     028C                     	;# 
   694     028D                     	;# 
   695     028E                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0298                     	;# 
   702     0298                     	;# 
   703     0299                     	;# 
   704     029A                     	;# 
   705     029B                     	;# 
   706     029E                     	;# 
   707     030C                     	;# 
   708     030D                     	;# 
   709     030E                     	;# 
   710     038C                     	;# 
   711     038D                     	;# 
   712     038E                     	;# 
   713     0391                     	;# 
   714     0392                     	;# 
   715     0393                     	;# 
   716     0394                     	;# 
   717     0395                     	;# 
   718     0396                     	;# 
   719     0397                     	;# 
   720     0398                     	;# 
   721     0399                     	;# 
   722     040E                     	;# 
   723     0413                     	;# 
   724     0413                     	;# 
   725     0414                     	;# 
   726     0414                     	;# 
   727     0415                     	;# 
   728     0416                     	;# 
   729     0417                     	;# 
   730     0418                     	;# 
   731     041A                     	;# 
   732     041A                     	;# 
   733     041B                     	;# 
   734     041B                     	;# 
   735     041C                     	;# 
   736     041D                     	;# 
   737     041E                     	;# 
   738     041F                     	;# 
   739     0493                     	;# 
   740     0494                     	;# 
   741     0495                     	;# 
   742     0496                     	;# 
   743     049A                     	;# 
   744     049B                     	;# 
   745     049C                     	;# 
   746     049D                     	;# 
   747     058C                     	;# 
   748     058C                     	;# 
   749     058D                     	;# 
   750     058E                     	;# 
   751     058E                     	;# 
   752     058F                     	;# 
   753     0590                     	;# 
   754     0590                     	;# 
   755     0591                     	;# 
   756     0592                     	;# 
   757     0592                     	;# 
   758     0593                     	;# 
   759     0594                     	;# 
   760     0594                     	;# 
   761     0595                     	;# 
   762     0596                     	;# 
   763     0596                     	;# 
   764     0597                     	;# 
   765     0598                     	;# 
   766     0599                     	;# 
   767     059A                     	;# 
   768     059B                     	;# 
   769     059B                     	;# 
   770     059C                     	;# 
   771     059D                     	;# 
   772     060C                     	;# 
   773     060C                     	;# 
   774     060D                     	;# 
   775     060E                     	;# 
   776     060F                     	;# 
   777     060F                     	;# 
   778     0610                     	;# 
   779     0611                     	;# 
   780     0612                     	;# 
   781     0613                     	;# 
   782     0614                     	;# 
   783     0617                     	;# 
   784     0617                     	;# 
   785     0618                     	;# 
   786     0619                     	;# 
   787     061A                     	;# 
   788     061A                     	;# 
   789     061B                     	;# 
   790     061C                     	;# 
   791     0691                     	;# 
   792     0692                     	;# 
   793     0693                     	;# 
   794     0694                     	;# 
   795     0695                     	;# 
   796     0696                     	;# 
   797     0697                     	;# 
   798     0699                     	;# 
   799     069A                     	;# 
   800     0711                     	;# 
   801     0712                     	;# 
   802     0713                     	;# 
   803     0714                     	;# 
   804     0715                     	;# 
   805     0718                     	;# 
   806     0718                     	;# 
   807     0719                     	;# 
   808     071A                     	;# 
   809     071A                     	;# 
   810     071B                     	;# 
   811     071C                     	;# 
   812     071D                     	;# 
   813     0791                     	;# 
   814     0791                     	;# 
   815     0792                     	;# 
   816     0793                     	;# 
   817     0793                     	;# 
   818     0794                     	;# 
   819     0795                     	;# 
   820     0795                     	;# 
   821     0796                     	;# 
   822     0797                     	;# 
   823     0797                     	;# 
   824     0798                     	;# 
   825     0799                     	;# 
   826     079A                     	;# 
   827     080C                     	;# 
   828     080C                     	;# 
   829     080D                     	;# 
   830     080E                     	;# 
   831     080E                     	;# 
   832     080F                     	;# 
   833     0810                     	;# 
   834     0810                     	;# 
   835     0811                     	;# 
   836     0812                     	;# 
   837     0812                     	;# 
   838     0813                     	;# 
   839     0814                     	;# 
   840     0815                     	;# 
   841     0816                     	;# 
   842     0817                     	;# 
   843     0818                     	;# 
   844     0819                     	;# 
   845     081A                     	;# 
   846     081A                     	;# 
   847     081B                     	;# 
   848     081C                     	;# 
   849     081C                     	;# 
   850     081D                     	;# 
   851     088C                     	;# 
   852     088D                     	;# 
   853     088E                     	;# 
   854     088F                     	;# 
   855     088F                     	;# 
   856     0890                     	;# 
   857     0891                     	;# 
   858     0892                     	;# 
   859     0893                     	;# 
   860     0893                     	;# 
   861     0894                     	;# 
   862     0895                     	;# 
   863     0896                     	;# 
   864     0897                     	;# 
   865     0897                     	;# 
   866     0898                     	;# 
   867     0899                     	;# 
   868     0D8C                     	;# 
   869     0D8C                     	;# 
   870     0D8D                     	;# 
   871     0D8E                     	;# 
   872     0D8F                     	;# 
   873     0D8F                     	;# 
   874     0D90                     	;# 
   875     0D91                     	;# 
   876     0D92                     	;# 
   877     0D92                     	;# 
   878     0D93                     	;# 
   879     0D94                     	;# 
   880     0D95                     	;# 
   881     0D95                     	;# 
   882     0D96                     	;# 
   883     0D97                     	;# 
   884     0D98                     	;# 
   885     0D99                     	;# 
   886     0D9A                     	;# 
   887     0D9B                     	;# 
   888     0D9C                     	;# 
   889     0D9D                     	;# 
   890     0D9E                     	;# 
   891     0D9E                     	;# 
   892     0D9F                     	;# 
   893     0DA0                     	;# 
   894     0DA1                     	;# 
   895     0DA1                     	;# 
   896     0DA2                     	;# 
   897     0DA3                     	;# 
   898     0DA4                     	;# 
   899     0DA4                     	;# 
   900     0DA5                     	;# 
   901     0DA6                     	;# 
   902     0DA7                     	;# 
   903     0DA7                     	;# 
   904     0DA8                     	;# 
   905     0DA9                     	;# 
   906     0DAA                     	;# 
   907     0DAB                     	;# 
   908     0DAC                     	;# 
   909     0DAD                     	;# 
   910     0DAE                     	;# 
   911     0DAF                     	;# 
   912     0E0F                     	;# 
   913     0E10                     	;# 
   914     0E11                     	;# 
   915     0E12                     	;# 
   916     0E13                     	;# 
   917     0E14                     	;# 
   918     0E15                     	;# 
   919     0E16                     	;# 
   920     0E17                     	;# 
   921     0E17                     	;# 
   922     0E18                     	;# 
   923     0E18                     	;# 
   924     0E19                     	;# 
   925     0E1A                     	;# 
   926     0E1B                     	;# 
   927     0E1B                     	;# 
   928     0E1C                     	;# 
   929     0E1D                     	;# 
   930     0E1E                     	;# 
   931     0E1E                     	;# 
   932     0E1F                     	;# 
   933     0E20                     	;# 
   934     0E21                     	;# 
   935     0E22                     	;# 
   936     0E23                     	;# 
   937     0E24                     	;# 
   938     0E25                     	;# 
   939     0E26                     	;# 
   940     0E27                     	;# 
   941     0E28                     	;# 
   942     0E29                     	;# 
   943     0E2A                     	;# 
   944     0E2B                     	;# 
   945     0E2C                     	;# 
   946     0E2D                     	;# 
   947     0E2E                     	;# 
   948     0E90                     	;# 
   949     0E91                     	;# 
   950     0E92                     	;# 
   951     0E94                     	;# 
   952     0E95                     	;# 
   953     0E9C                     	;# 
   954     0E9D                     	;# 
   955     0E9E                     	;# 
   956     0E9F                     	;# 
   957     0EA0                     	;# 
   958     0EA1                     	;# 
   959     0EA2                     	;# 
   960     0EA3                     	;# 
   961     0EA4                     	;# 
   962     0EA5                     	;# 
   963     0EA6                     	;# 
   964     0EA7                     	;# 
   965     0F0F                     	;# 
   966     0F10                     	;# 
   967     0F11                     	;# 
   968     0F12                     	;# 
   969     0F13                     	;# 
   970     0F14                     	;# 
   971     0F15                     	;# 
   972     0F16                     	;# 
   973     0F17                     	;# 
   974     0F18                     	;# 
   975     0F19                     	;# 
   976     0F1A                     	;# 
   977     0F1B                     	;# 
   978     0F1C                     	;# 
   979     0F1D                     	;# 
   980     0F1E                     	;# 
   981     0F1F                     	;# 
   982     0F20                     	;# 
   983     0F21                     	;# 
   984     0F22                     	;# 
   985     0F23                     	;# 
   986     0FE4                     	;# 
   987     0FE5                     	;# 
   988     0FE6                     	;# 
   989     0FE7                     	;# 
   990     0FE8                     	;# 
   991     0FE9                     	;# 
   992     0FEA                     	;# 
   993     0FEB                     	;# 
   994     0FED                     	;# 
   995     0FEE                     	;# 
   996     0FEF                     	;# 
   997     0000                     	;# 
   998     0001                     	;# 
   999     0002                     	;# 
  1000     0003                     	;# 
  1001     0004                     	;# 
  1002     0005                     	;# 
  1003     0006                     	;# 
  1004     0007                     	;# 
  1005     0008                     	;# 
  1006     0009                     	;# 
  1007     000A                     	;# 
  1008     000B                     	;# 
  1009     000C                     	;# 
  1010     000D                     	;# 
  1011     000E                     	;# 
  1012     0010                     	;# 
  1013     0011                     	;# 
  1014     0012                     	;# 
  1015     0013                     	;# 
  1016     0014                     	;# 
  1017     0015                     	;# 
  1018     0016                     	;# 
  1019     0016                     	;# 
  1020     0017                     	;# 
  1021     0018                     	;# 
  1022     0019                     	;# 
  1023     001A                     	;# 
  1024     001A                     	;# 
  1025     001B                     	;# 
  1026     001B                     	;# 
  1027     001C                     	;# 
  1028     001D                     	;# 
  1029     001E                     	;# 
  1030     001F                     	;# 
  1031     008C                     	;# 
  1032     008D                     	;# 
  1033     008E                     	;# 
  1034     0090                     	;# 
  1035     0091                     	;# 
  1036     0092                     	;# 
  1037     0093                     	;# 
  1038     0094                     	;# 
  1039     0095                     	;# 
  1040     0096                     	;# 
  1041     0098                     	;# 
  1042     0099                     	;# 
  1043     009A                     	;# 
  1044     009B                     	;# 
  1045     009B                     	;# 
  1046     009C                     	;# 
  1047     009D                     	;# 
  1048     009E                     	;# 
  1049     009F                     	;# 
  1050     010C                     	;# 
  1051     010D                     	;# 
  1052     010E                     	;# 
  1053     0111                     	;# 
  1054     0112                     	;# 
  1055     0113                     	;# 
  1056     0114                     	;# 
  1057     0115                     	;# 
  1058     0116                     	;# 
  1059     0117                     	;# 
  1060     0118                     	;# 
  1061     0119                     	;# 
  1062     011C                     	;# 
  1063     018C                     	;# 
  1064     018D                     	;# 
  1065     018E                     	;# 
  1066     0191                     	;# 
  1067     0191                     	;# 
  1068     0192                     	;# 
  1069     0193                     	;# 
  1070     0193                     	;# 
  1071     0194                     	;# 
  1072     0195                     	;# 
  1073     0196                     	;# 
  1074     0197                     	;# 
  1075     0199                     	;# 
  1076     0199                     	;# 
  1077     0199                     	;# 
  1078     019A                     	;# 
  1079     019A                     	;# 
  1080     019A                     	;# 
  1081     019B                     	;# 
  1082     019B                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019B                     	;# 
  1086     019C                     	;# 
  1087     019C                     	;# 
  1088     019C                     	;# 
  1089     019D                     	;# 
  1090     019D                     	;# 
  1091     019D                     	;# 
  1092     019E                     	;# 
  1093     019E                     	;# 
  1094     019E                     	;# 
  1095     019F                     	;# 
  1096     019F                     	;# 
  1097     019F                     	;# 
  1098     019F                     	;# 
  1099     019F                     	;# 
  1100     020C                     	;# 
  1101     020D                     	;# 
  1102     020E                     	;# 
  1103     0211                     	;# 
  1104     0211                     	;# 
  1105     0212                     	;# 
  1106     0212                     	;# 
  1107     0213                     	;# 
  1108     0213                     	;# 
  1109     0214                     	;# 
  1110     0214                     	;# 
  1111     0215                     	;# 
  1112     0215                     	;# 
  1113     0215                     	;# 
  1114     0215                     	;# 
  1115     0216                     	;# 
  1116     0216                     	;# 
  1117     0217                     	;# 
  1118     0217                     	;# 
  1119     028C                     	;# 
  1120     028D                     	;# 
  1121     028E                     	;# 
  1122     0291                     	;# 
  1123     0291                     	;# 
  1124     0292                     	;# 
  1125     0293                     	;# 
  1126     0294                     	;# 
  1127     0298                     	;# 
  1128     0298                     	;# 
  1129     0299                     	;# 
  1130     029A                     	;# 
  1131     029B                     	;# 
  1132     029E                     	;# 
  1133     030C                     	;# 
  1134     030D                     	;# 
  1135     030E                     	;# 
  1136     038C                     	;# 
  1137     038D                     	;# 
  1138     038E                     	;# 
  1139     0391                     	;# 
  1140     0392                     	;# 
  1141     0393                     	;# 
  1142     0394                     	;# 
  1143     0395                     	;# 
  1144     0396                     	;# 
  1145     0397                     	;# 
  1146     0398                     	;# 
  1147     0399                     	;# 
  1148     040E                     	;# 
  1149     0413                     	;# 
  1150     0413                     	;# 
  1151     0414                     	;# 
  1152     0414                     	;# 
  1153     0415                     	;# 
  1154     0416                     	;# 
  1155     0417                     	;# 
  1156     0418                     	;# 
  1157     041A                     	;# 
  1158     041A                     	;# 
  1159     041B                     	;# 
  1160     041B                     	;# 
  1161     041C                     	;# 
  1162     041D                     	;# 
  1163     041E                     	;# 
  1164     041F                     	;# 
  1165     0493                     	;# 
  1166     0494                     	;# 
  1167     0495                     	;# 
  1168     0496                     	;# 
  1169     049A                     	;# 
  1170     049B                     	;# 
  1171     049C                     	;# 
  1172     049D                     	;# 
  1173     058C                     	;# 
  1174     058C                     	;# 
  1175     058D                     	;# 
  1176     058E                     	;# 
  1177     058E                     	;# 
  1178     058F                     	;# 
  1179     0590                     	;# 
  1180     0590                     	;# 
  1181     0591                     	;# 
  1182     0592                     	;# 
  1183     0592                     	;# 
  1184     0593                     	;# 
  1185     0594                     	;# 
  1186     0594                     	;# 
  1187     0595                     	;# 
  1188     0596                     	;# 
  1189     0596                     	;# 
  1190     0597                     	;# 
  1191     0598                     	;# 
  1192     0599                     	;# 
  1193     059A                     	;# 
  1194     059B                     	;# 
  1195     059B                     	;# 
  1196     059C                     	;# 
  1197     059D                     	;# 
  1198     060C                     	;# 
  1199     060C                     	;# 
  1200     060D                     	;# 
  1201     060E                     	;# 
  1202     060F                     	;# 
  1203     060F                     	;# 
  1204     0610                     	;# 
  1205     0611                     	;# 
  1206     0612                     	;# 
  1207     0613                     	;# 
  1208     0614                     	;# 
  1209     0617                     	;# 
  1210     0617                     	;# 
  1211     0618                     	;# 
  1212     0619                     	;# 
  1213     061A                     	;# 
  1214     061A                     	;# 
  1215     061B                     	;# 
  1216     061C                     	;# 
  1217     0691                     	;# 
  1218     0692                     	;# 
  1219     0693                     	;# 
  1220     0694                     	;# 
  1221     0695                     	;# 
  1222     0696                     	;# 
  1223     0697                     	;# 
  1224     0699                     	;# 
  1225     069A                     	;# 
  1226     0711                     	;# 
  1227     0712                     	;# 
  1228     0713                     	;# 
  1229     0714                     	;# 
  1230     0715                     	;# 
  1231     0718                     	;# 
  1232     0718                     	;# 
  1233     0719                     	;# 
  1234     071A                     	;# 
  1235     071A                     	;# 
  1236     071B                     	;# 
  1237     071C                     	;# 
  1238     071D                     	;# 
  1239     0791                     	;# 
  1240     0791                     	;# 
  1241     0792                     	;# 
  1242     0793                     	;# 
  1243     0793                     	;# 
  1244     0794                     	;# 
  1245     0795                     	;# 
  1246     0795                     	;# 
  1247     0796                     	;# 
  1248     0797                     	;# 
  1249     0797                     	;# 
  1250     0798                     	;# 
  1251     0799                     	;# 
  1252     079A                     	;# 
  1253     080C                     	;# 
  1254     080C                     	;# 
  1255     080D                     	;# 
  1256     080E                     	;# 
  1257     080E                     	;# 
  1258     080F                     	;# 
  1259     0810                     	;# 
  1260     0810                     	;# 
  1261     0811                     	;# 
  1262     0812                     	;# 
  1263     0812                     	;# 
  1264     0813                     	;# 
  1265     0814                     	;# 
  1266     0815                     	;# 
  1267     0816                     	;# 
  1268     0817                     	;# 
  1269     0818                     	;# 
  1270     0819                     	;# 
  1271     081A                     	;# 
  1272     081A                     	;# 
  1273     081B                     	;# 
  1274     081C                     	;# 
  1275     081C                     	;# 
  1276     081D                     	;# 
  1277     088C                     	;# 
  1278     088D                     	;# 
  1279     088E                     	;# 
  1280     088F                     	;# 
  1281     088F                     	;# 
  1282     0890                     	;# 
  1283     0891                     	;# 
  1284     0892                     	;# 
  1285     0893                     	;# 
  1286     0893                     	;# 
  1287     0894                     	;# 
  1288     0895                     	;# 
  1289     0896                     	;# 
  1290     0897                     	;# 
  1291     0897                     	;# 
  1292     0898                     	;# 
  1293     0899                     	;# 
  1294     0D8C                     	;# 
  1295     0D8C                     	;# 
  1296     0D8D                     	;# 
  1297     0D8E                     	;# 
  1298     0D8F                     	;# 
  1299     0D8F                     	;# 
  1300     0D90                     	;# 
  1301     0D91                     	;# 
  1302     0D92                     	;# 
  1303     0D92                     	;# 
  1304     0D93                     	;# 
  1305     0D94                     	;# 
  1306     0D95                     	;# 
  1307     0D95                     	;# 
  1308     0D96                     	;# 
  1309     0D97                     	;# 
  1310     0D98                     	;# 
  1311     0D99                     	;# 
  1312     0D9A                     	;# 
  1313     0D9B                     	;# 
  1314     0D9C                     	;# 
  1315     0D9D                     	;# 
  1316     0D9E                     	;# 
  1317     0D9E                     	;# 
  1318     0D9F                     	;# 
  1319     0DA0                     	;# 
  1320     0DA1                     	;# 
  1321     0DA1                     	;# 
  1322     0DA2                     	;# 
  1323     0DA3                     	;# 
  1324     0DA4                     	;# 
  1325     0DA4                     	;# 
  1326     0DA5                     	;# 
  1327     0DA6                     	;# 
  1328     0DA7                     	;# 
  1329     0DA7                     	;# 
  1330     0DA8                     	;# 
  1331     0DA9                     	;# 
  1332     0DAA                     	;# 
  1333     0DAB                     	;# 
  1334     0DAC                     	;# 
  1335     0DAD                     	;# 
  1336     0DAE                     	;# 
  1337     0DAF                     	;# 
  1338     0E0F                     	;# 
  1339     0E10                     	;# 
  1340     0E11                     	;# 
  1341     0E12                     	;# 
  1342     0E13                     	;# 
  1343     0E14                     	;# 
  1344     0E15                     	;# 
  1345     0E16                     	;# 
  1346     0E17                     	;# 
  1347     0E17                     	;# 
  1348     0E18                     	;# 
  1349     0E18                     	;# 
  1350     0E19                     	;# 
  1351     0E1A                     	;# 
  1352     0E1B                     	;# 
  1353     0E1B                     	;# 
  1354     0E1C                     	;# 
  1355     0E1D                     	;# 
  1356     0E1E                     	;# 
  1357     0E1E                     	;# 
  1358     0E1F                     	;# 
  1359     0E20                     	;# 
  1360     0E21                     	;# 
  1361     0E22                     	;# 
  1362     0E23                     	;# 
  1363     0E24                     	;# 
  1364     0E25                     	;# 
  1365     0E26                     	;# 
  1366     0E27                     	;# 
  1367     0E28                     	;# 
  1368     0E29                     	;# 
  1369     0E2A                     	;# 
  1370     0E2B                     	;# 
  1371     0E2C                     	;# 
  1372     0E2D                     	;# 
  1373     0E2E                     	;# 
  1374     0E90                     	;# 
  1375     0E91                     	;# 
  1376     0E92                     	;# 
  1377     0E94                     	;# 
  1378     0E95                     	;# 
  1379     0E9C                     	;# 
  1380     0E9D                     	;# 
  1381     0E9E                     	;# 
  1382     0E9F                     	;# 
  1383     0EA0                     	;# 
  1384     0EA1                     	;# 
  1385     0EA2                     	;# 
  1386     0EA3                     	;# 
  1387     0EA4                     	;# 
  1388     0EA5                     	;# 
  1389     0EA6                     	;# 
  1390     0EA7                     	;# 
  1391     0F0F                     	;# 
  1392     0F10                     	;# 
  1393     0F11                     	;# 
  1394     0F12                     	;# 
  1395     0F13                     	;# 
  1396     0F14                     	;# 
  1397     0F15                     	;# 
  1398     0F16                     	;# 
  1399     0F17                     	;# 
  1400     0F18                     	;# 
  1401     0F19                     	;# 
  1402     0F1A                     	;# 
  1403     0F1B                     	;# 
  1404     0F1C                     	;# 
  1405     0F1D                     	;# 
  1406     0F1E                     	;# 
  1407     0F1F                     	;# 
  1408     0F20                     	;# 
  1409     0F21                     	;# 
  1410     0F22                     	;# 
  1411     0F23                     	;# 
  1412     0FE4                     	;# 
  1413     0FE5                     	;# 
  1414     0FE6                     	;# 
  1415     0FE7                     	;# 
  1416     0FE8                     	;# 
  1417     0FE9                     	;# 
  1418     0FEA                     	;# 
  1419     0FEB                     	;# 
  1420     0FED                     	;# 
  1421     0FEE                     	;# 
  1422     0FEF                     	;# 
  1423     0000                     	;# 
  1424     0001                     	;# 
  1425     0002                     	;# 
  1426     0003                     	;# 
  1427     0004                     	;# 
  1428     0005                     	;# 
  1429     0006                     	;# 
  1430     0007                     	;# 
  1431     0008                     	;# 
  1432     0009                     	;# 
  1433     000A                     	;# 
  1434     000B                     	;# 
  1435     000C                     	;# 
  1436     000D                     	;# 
  1437     000E                     	;# 
  1438     0010                     	;# 
  1439     0011                     	;# 
  1440     0012                     	;# 
  1441     0013                     	;# 
  1442     0014                     	;# 
  1443     0015                     	;# 
  1444     0016                     	;# 
  1445     0016                     	;# 
  1446     0017                     	;# 
  1447     0018                     	;# 
  1448     0019                     	;# 
  1449     001A                     	;# 
  1450     001A                     	;# 
  1451     001B                     	;# 
  1452     001B                     	;# 
  1453     001C                     	;# 
  1454     001D                     	;# 
  1455     001E                     	;# 
  1456     001F                     	;# 
  1457     008C                     	;# 
  1458     008D                     	;# 
  1459     008E                     	;# 
  1460     0090                     	;# 
  1461     0091                     	;# 
  1462     0092                     	;# 
  1463     0093                     	;# 
  1464     0094                     	;# 
  1465     0095                     	;# 
  1466     0096                     	;# 
  1467     0098                     	;# 
  1468     0099                     	;# 
  1469     009A                     	;# 
  1470     009B                     	;# 
  1471     009B                     	;# 
  1472     009C                     	;# 
  1473     009D                     	;# 
  1474     009E                     	;# 
  1475     009F                     	;# 
  1476     010C                     	;# 
  1477     010D                     	;# 
  1478     010E                     	;# 
  1479     0111                     	;# 
  1480     0112                     	;# 
  1481     0113                     	;# 
  1482     0114                     	;# 
  1483     0115                     	;# 
  1484     0116                     	;# 
  1485     0117                     	;# 
  1486     0118                     	;# 
  1487     0119                     	;# 
  1488     011C                     	;# 
  1489     018C                     	;# 
  1490     018D                     	;# 
  1491     018E                     	;# 
  1492     0191                     	;# 
  1493     0191                     	;# 
  1494     0192                     	;# 
  1495     0193                     	;# 
  1496     0193                     	;# 
  1497     0194                     	;# 
  1498     0195                     	;# 
  1499     0196                     	;# 
  1500     0197                     	;# 
  1501     0199                     	;# 
  1502     0199                     	;# 
  1503     0199                     	;# 
  1504     019A                     	;# 
  1505     019A                     	;# 
  1506     019A                     	;# 
  1507     019B                     	;# 
  1508     019B                     	;# 
  1509     019B                     	;# 
  1510     019B                     	;# 
  1511     019B                     	;# 
  1512     019C                     	;# 
  1513     019C                     	;# 
  1514     019C                     	;# 
  1515     019D                     	;# 
  1516     019D                     	;# 
  1517     019D                     	;# 
  1518     019E                     	;# 
  1519     019E                     	;# 
  1520     019E                     	;# 
  1521     019F                     	;# 
  1522     019F                     	;# 
  1523     019F                     	;# 
  1524     019F                     	;# 
  1525     019F                     	;# 
  1526     020C                     	;# 
  1527     020D                     	;# 
  1528     020E                     	;# 
  1529     0211                     	;# 
  1530     0211                     	;# 
  1531     0212                     	;# 
  1532     0212                     	;# 
  1533     0213                     	;# 
  1534     0213                     	;# 
  1535     0214                     	;# 
  1536     0214                     	;# 
  1537     0215                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0215                     	;# 
  1541     0216                     	;# 
  1542     0216                     	;# 
  1543     0217                     	;# 
  1544     0217                     	;# 
  1545     028C                     	;# 
  1546     028D                     	;# 
  1547     028E                     	;# 
  1548     0291                     	;# 
  1549     0291                     	;# 
  1550     0292                     	;# 
  1551     0293                     	;# 
  1552     0294                     	;# 
  1553     0298                     	;# 
  1554     0298                     	;# 
  1555     0299                     	;# 
  1556     029A                     	;# 
  1557     029B                     	;# 
  1558     029E                     	;# 
  1559     030C                     	;# 
  1560     030D                     	;# 
  1561     030E                     	;# 
  1562     038C                     	;# 
  1563     038D                     	;# 
  1564     038E                     	;# 
  1565     0391                     	;# 
  1566     0392                     	;# 
  1567     0393                     	;# 
  1568     0394                     	;# 
  1569     0395                     	;# 
  1570     0396                     	;# 
  1571     0397                     	;# 
  1572     0398                     	;# 
  1573     0399                     	;# 
  1574     040E                     	;# 
  1575     0413                     	;# 
  1576     0413                     	;# 
  1577     0414                     	;# 
  1578     0414                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     0418                     	;# 
  1583     041A                     	;# 
  1584     041A                     	;# 
  1585     041B                     	;# 
  1586     041B                     	;# 
  1587     041C                     	;# 
  1588     041D                     	;# 
  1589     041E                     	;# 
  1590     041F                     	;# 
  1591     0493                     	;# 
  1592     0494                     	;# 
  1593     0495                     	;# 
  1594     0496                     	;# 
  1595     049A                     	;# 
  1596     049B                     	;# 
  1597     049C                     	;# 
  1598     049D                     	;# 
  1599     058C                     	;# 
  1600     058C                     	;# 
  1601     058D                     	;# 
  1602     058E                     	;# 
  1603     058E                     	;# 
  1604     058F                     	;# 
  1605     0590                     	;# 
  1606     0590                     	;# 
  1607     0591                     	;# 
  1608     0592                     	;# 
  1609     0592                     	;# 
  1610     0593                     	;# 
  1611     0594                     	;# 
  1612     0594                     	;# 
  1613     0595                     	;# 
  1614     0596                     	;# 
  1615     0596                     	;# 
  1616     0597                     	;# 
  1617     0598                     	;# 
  1618     0599                     	;# 
  1619     059A                     	;# 
  1620     059B                     	;# 
  1621     059B                     	;# 
  1622     059C                     	;# 
  1623     059D                     	;# 
  1624     060C                     	;# 
  1625     060C                     	;# 
  1626     060D                     	;# 
  1627     060E                     	;# 
  1628     060F                     	;# 
  1629     060F                     	;# 
  1630     0610                     	;# 
  1631     0611                     	;# 
  1632     0612                     	;# 
  1633     0613                     	;# 
  1634     0614                     	;# 
  1635     0617                     	;# 
  1636     0617                     	;# 
  1637     0618                     	;# 
  1638     0619                     	;# 
  1639     061A                     	;# 
  1640     061A                     	;# 
  1641     061B                     	;# 
  1642     061C                     	;# 
  1643     0691                     	;# 
  1644     0692                     	;# 
  1645     0693                     	;# 
  1646     0694                     	;# 
  1647     0695                     	;# 
  1648     0696                     	;# 
  1649     0697                     	;# 
  1650     0699                     	;# 
  1651     069A                     	;# 
  1652     0711                     	;# 
  1653     0712                     	;# 
  1654     0713                     	;# 
  1655     0714                     	;# 
  1656     0715                     	;# 
  1657     0718                     	;# 
  1658     0718                     	;# 
  1659     0719                     	;# 
  1660     071A                     	;# 
  1661     071A                     	;# 
  1662     071B                     	;# 
  1663     071C                     	;# 
  1664     071D                     	;# 
  1665     0791                     	;# 
  1666     0791                     	;# 
  1667     0792                     	;# 
  1668     0793                     	;# 
  1669     0793                     	;# 
  1670     0794                     	;# 
  1671     0795                     	;# 
  1672     0795                     	;# 
  1673     0796                     	;# 
  1674     0797                     	;# 
  1675     0797                     	;# 
  1676     0798                     	;# 
  1677     0799                     	;# 
  1678     079A                     	;# 
  1679     080C                     	;# 
  1680     080C                     	;# 
  1681     080D                     	;# 
  1682     080E                     	;# 
  1683     080E                     	;# 
  1684     080F                     	;# 
  1685     0810                     	;# 
  1686     0810                     	;# 
  1687     0811                     	;# 
  1688     0812                     	;# 
  1689     0812                     	;# 
  1690     0813                     	;# 
  1691     0814                     	;# 
  1692     0815                     	;# 
  1693     0816                     	;# 
  1694     0817                     	;# 
  1695     0818                     	;# 
  1696     0819                     	;# 
  1697     081A                     	;# 
  1698     081A                     	;# 
  1699     081B                     	;# 
  1700     081C                     	;# 
  1701     081C                     	;# 
  1702     081D                     	;# 
  1703     088C                     	;# 
  1704     088D                     	;# 
  1705     088E                     	;# 
  1706     088F                     	;# 
  1707     088F                     	;# 
  1708     0890                     	;# 
  1709     0891                     	;# 
  1710     0892                     	;# 
  1711     0893                     	;# 
  1712     0893                     	;# 
  1713     0894                     	;# 
  1714     0895                     	;# 
  1715     0896                     	;# 
  1716     0897                     	;# 
  1717     0897                     	;# 
  1718     0898                     	;# 
  1719     0899                     	;# 
  1720     0D8C                     	;# 
  1721     0D8C                     	;# 
  1722     0D8D                     	;# 
  1723     0D8E                     	;# 
  1724     0D8F                     	;# 
  1725     0D8F                     	;# 
  1726     0D90                     	;# 
  1727     0D91                     	;# 
  1728     0D92                     	;# 
  1729     0D92                     	;# 
  1730     0D93                     	;# 
  1731     0D94                     	;# 
  1732     0D95                     	;# 
  1733     0D95                     	;# 
  1734     0D96                     	;# 
  1735     0D97                     	;# 
  1736     0D98                     	;# 
  1737     0D99                     	;# 
  1738     0D9A                     	;# 
  1739     0D9B                     	;# 
  1740     0D9C                     	;# 
  1741     0D9D                     	;# 
  1742     0D9E                     	;# 
  1743     0D9E                     	;# 
  1744     0D9F                     	;# 
  1745     0DA0                     	;# 
  1746     0DA1                     	;# 
  1747     0DA1                     	;# 
  1748     0DA2                     	;# 
  1749     0DA3                     	;# 
  1750     0DA4                     	;# 
  1751     0DA4                     	;# 
  1752     0DA5                     	;# 
  1753     0DA6                     	;# 
  1754     0DA7                     	;# 
  1755     0DA7                     	;# 
  1756     0DA8                     	;# 
  1757     0DA9                     	;# 
  1758     0DAA                     	;# 
  1759     0DAB                     	;# 
  1760     0DAC                     	;# 
  1761     0DAD                     	;# 
  1762     0DAE                     	;# 
  1763     0DAF                     	;# 
  1764     0E0F                     	;# 
  1765     0E10                     	;# 
  1766     0E11                     	;# 
  1767     0E12                     	;# 
  1768     0E13                     	;# 
  1769     0E14                     	;# 
  1770     0E15                     	;# 
  1771     0E16                     	;# 
  1772     0E17                     	;# 
  1773     0E17                     	;# 
  1774     0E18                     	;# 
  1775     0E18                     	;# 
  1776     0E19                     	;# 
  1777     0E1A                     	;# 
  1778     0E1B                     	;# 
  1779     0E1B                     	;# 
  1780     0E1C                     	;# 
  1781     0E1D                     	;# 
  1782     0E1E                     	;# 
  1783     0E1E                     	;# 
  1784     0E1F                     	;# 
  1785     0E20                     	;# 
  1786     0E21                     	;# 
  1787     0E22                     	;# 
  1788     0E23                     	;# 
  1789     0E24                     	;# 
  1790     0E25                     	;# 
  1791     0E26                     	;# 
  1792     0E27                     	;# 
  1793     0E28                     	;# 
  1794     0E29                     	;# 
  1795     0E2A                     	;# 
  1796     0E2B                     	;# 
  1797     0E2C                     	;# 
  1798     0E2D                     	;# 
  1799     0E2E                     	;# 
  1800     0E90                     	;# 
  1801     0E91                     	;# 
  1802     0E92                     	;# 
  1803     0E94                     	;# 
  1804     0E95                     	;# 
  1805     0E9C                     	;# 
  1806     0E9D                     	;# 
  1807     0E9E                     	;# 
  1808     0E9F                     	;# 
  1809     0EA0                     	;# 
  1810     0EA1                     	;# 
  1811     0EA2                     	;# 
  1812     0EA3                     	;# 
  1813     0EA4                     	;# 
  1814     0EA5                     	;# 
  1815     0EA6                     	;# 
  1816     0EA7                     	;# 
  1817     0F0F                     	;# 
  1818     0F10                     	;# 
  1819     0F11                     	;# 
  1820     0F12                     	;# 
  1821     0F13                     	;# 
  1822     0F14                     	;# 
  1823     0F15                     	;# 
  1824     0F16                     	;# 
  1825     0F17                     	;# 
  1826     0F18                     	;# 
  1827     0F19                     	;# 
  1828     0F1A                     	;# 
  1829     0F1B                     	;# 
  1830     0F1C                     	;# 
  1831     0F1D                     	;# 
  1832     0F1E                     	;# 
  1833     0F1F                     	;# 
  1834     0F20                     	;# 
  1835     0F21                     	;# 
  1836     0F22                     	;# 
  1837     0F23                     	;# 
  1838     0FE4                     	;# 
  1839     0FE5                     	;# 
  1840     0FE6                     	;# 
  1841     0FE7                     	;# 
  1842     0FE8                     	;# 
  1843     0FE9                     	;# 
  1844     0FEA                     	;# 
  1845     0FEB                     	;# 
  1846     0FED                     	;# 
  1847     0FEE                     	;# 
  1848     0FEF                     	;# 
  1849     0000                     	;# 
  1850     0001                     	;# 
  1851     0002                     	;# 
  1852     0003                     	;# 
  1853     0004                     	;# 
  1854     0005                     	;# 
  1855     0006                     	;# 
  1856     0007                     	;# 
  1857     0008                     	;# 
  1858     0009                     	;# 
  1859     000A                     	;# 
  1860     000B                     	;# 
  1861     000C                     	;# 
  1862     000D                     	;# 
  1863     000E                     	;# 
  1864     0010                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001A                     	;# 
  1877     001B                     	;# 
  1878     001B                     	;# 
  1879     001C                     	;# 
  1880     001D                     	;# 
  1881     001E                     	;# 
  1882     001F                     	;# 
  1883     008C                     	;# 
  1884     008D                     	;# 
  1885     008E                     	;# 
  1886     0090                     	;# 
  1887     0091                     	;# 
  1888     0092                     	;# 
  1889     0093                     	;# 
  1890     0094                     	;# 
  1891     0095                     	;# 
  1892     0096                     	;# 
  1893     0098                     	;# 
  1894     0099                     	;# 
  1895     009A                     	;# 
  1896     009B                     	;# 
  1897     009B                     	;# 
  1898     009C                     	;# 
  1899     009D                     	;# 
  1900     009E                     	;# 
  1901     009F                     	;# 
  1902     010C                     	;# 
  1903     010D                     	;# 
  1904     010E                     	;# 
  1905     0111                     	;# 
  1906     0112                     	;# 
  1907     0113                     	;# 
  1908     0114                     	;# 
  1909     0115                     	;# 
  1910     0116                     	;# 
  1911     0117                     	;# 
  1912     0118                     	;# 
  1913     0119                     	;# 
  1914     011C                     	;# 
  1915     018C                     	;# 
  1916     018D                     	;# 
  1917     018E                     	;# 
  1918     0191                     	;# 
  1919     0191                     	;# 
  1920     0192                     	;# 
  1921     0193                     	;# 
  1922     0193                     	;# 
  1923     0194                     	;# 
  1924     0195                     	;# 
  1925     0196                     	;# 
  1926     0197                     	;# 
  1927     0199                     	;# 
  1928     0199                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019A                     	;# 
  1932     019A                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019B                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019C                     	;# 
  1941     019D                     	;# 
  1942     019D                     	;# 
  1943     019D                     	;# 
  1944     019E                     	;# 
  1945     019E                     	;# 
  1946     019E                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     019F                     	;# 
  1952     020C                     	;# 
  1953     020D                     	;# 
  1954     020E                     	;# 
  1955     0211                     	;# 
  1956     0211                     	;# 
  1957     0212                     	;# 
  1958     0212                     	;# 
  1959     0213                     	;# 
  1960     0213                     	;# 
  1961     0214                     	;# 
  1962     0214                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0215                     	;# 
  1967     0216                     	;# 
  1968     0216                     	;# 
  1969     0217                     	;# 
  1970     0217                     	;# 
  1971     028C                     	;# 
  1972     028D                     	;# 
  1973     028E                     	;# 
  1974     0291                     	;# 
  1975     0291                     	;# 
  1976     0292                     	;# 
  1977     0293                     	;# 
  1978     0294                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     029A                     	;# 
  1983     029B                     	;# 
  1984     029E                     	;# 
  1985     030C                     	;# 
  1986     030D                     	;# 
  1987     030E                     	;# 
  1988     038C                     	;# 
  1989     038D                     	;# 
  1990     038E                     	;# 
  1991     0391                     	;# 
  1992     0392                     	;# 
  1993     0393                     	;# 
  1994     0394                     	;# 
  1995     0395                     	;# 
  1996     0396                     	;# 
  1997     0397                     	;# 
  1998     0398                     	;# 
  1999     0399                     	;# 
  2000     040E                     	;# 
  2001     0413                     	;# 
  2002     0413                     	;# 
  2003     0414                     	;# 
  2004     0414                     	;# 
  2005     0415                     	;# 
  2006     0416                     	;# 
  2007     0417                     	;# 
  2008     0418                     	;# 
  2009     041A                     	;# 
  2010     041A                     	;# 
  2011     041B                     	;# 
  2012     041B                     	;# 
  2013     041C                     	;# 
  2014     041D                     	;# 
  2015     041E                     	;# 
  2016     041F                     	;# 
  2017     0493                     	;# 
  2018     0494                     	;# 
  2019     0495                     	;# 
  2020     0496                     	;# 
  2021     049A                     	;# 
  2022     049B                     	;# 
  2023     049C                     	;# 
  2024     049D                     	;# 
  2025     058C                     	;# 
  2026     058C                     	;# 
  2027     058D                     	;# 
  2028     058E                     	;# 
  2029     058E                     	;# 
  2030     058F                     	;# 
  2031     0590                     	;# 
  2032     0590                     	;# 
  2033     0591                     	;# 
  2034     0592                     	;# 
  2035     0592                     	;# 
  2036     0593                     	;# 
  2037     0594                     	;# 
  2038     0594                     	;# 
  2039     0595                     	;# 
  2040     0596                     	;# 
  2041     0596                     	;# 
  2042     0597                     	;# 
  2043     0598                     	;# 
  2044     0599                     	;# 
  2045     059A                     	;# 
  2046     059B                     	;# 
  2047     059B                     	;# 
  2048     059C                     	;# 
  2049     059D                     	;# 
  2050     060C                     	;# 
  2051     060C                     	;# 
  2052     060D                     	;# 
  2053     060E                     	;# 
  2054     060F                     	;# 
  2055     060F                     	;# 
  2056     0610                     	;# 
  2057     0611                     	;# 
  2058     0612                     	;# 
  2059     0613                     	;# 
  2060     0614                     	;# 
  2061     0617                     	;# 
  2062     0617                     	;# 
  2063     0618                     	;# 
  2064     0619                     	;# 
  2065     061A                     	;# 
  2066     061A                     	;# 
  2067     061B                     	;# 
  2068     061C                     	;# 
  2069     0691                     	;# 
  2070     0692                     	;# 
  2071     0693                     	;# 
  2072     0694                     	;# 
  2073     0695                     	;# 
  2074     0696                     	;# 
  2075     0697                     	;# 
  2076     0699                     	;# 
  2077     069A                     	;# 
  2078     0711                     	;# 
  2079     0712                     	;# 
  2080     0713                     	;# 
  2081     0714                     	;# 
  2082     0715                     	;# 
  2083     0718                     	;# 
  2084     0718                     	;# 
  2085     0719                     	;# 
  2086     071A                     	;# 
  2087     071A                     	;# 
  2088     071B                     	;# 
  2089     071C                     	;# 
  2090     071D                     	;# 
  2091     0791                     	;# 
  2092     0791                     	;# 
  2093     0792                     	;# 
  2094     0793                     	;# 
  2095     0793                     	;# 
  2096     0794                     	;# 
  2097     0795                     	;# 
  2098     0795                     	;# 
  2099     0796                     	;# 
  2100     0797                     	;# 
  2101     0797                     	;# 
  2102     0798                     	;# 
  2103     0799                     	;# 
  2104     079A                     	;# 
  2105     080C                     	;# 
  2106     080C                     	;# 
  2107     080D                     	;# 
  2108     080E                     	;# 
  2109     080E                     	;# 
  2110     080F                     	;# 
  2111     0810                     	;# 
  2112     0810                     	;# 
  2113     0811                     	;# 
  2114     0812                     	;# 
  2115     0812                     	;# 
  2116     0813                     	;# 
  2117     0814                     	;# 
  2118     0815                     	;# 
  2119     0816                     	;# 
  2120     0817                     	;# 
  2121     0818                     	;# 
  2122     0819                     	;# 
  2123     081A                     	;# 
  2124     081A                     	;# 
  2125     081B                     	;# 
  2126     081C                     	;# 
  2127     081C                     	;# 
  2128     081D                     	;# 
  2129     088C                     	;# 
  2130     088D                     	;# 
  2131     088E                     	;# 
  2132     088F                     	;# 
  2133     088F                     	;# 
  2134     0890                     	;# 
  2135     0891                     	;# 
  2136     0892                     	;# 
  2137     0893                     	;# 
  2138     0893                     	;# 
  2139     0894                     	;# 
  2140     0895                     	;# 
  2141     0896                     	;# 
  2142     0897                     	;# 
  2143     0897                     	;# 
  2144     0898                     	;# 
  2145     0899                     	;# 
  2146     0D8C                     	;# 
  2147     0D8C                     	;# 
  2148     0D8D                     	;# 
  2149     0D8E                     	;# 
  2150     0D8F                     	;# 
  2151     0D8F                     	;# 
  2152     0D90                     	;# 
  2153     0D91                     	;# 
  2154     0D92                     	;# 
  2155     0D92                     	;# 
  2156     0D93                     	;# 
  2157     0D94                     	;# 
  2158     0D95                     	;# 
  2159     0D95                     	;# 
  2160     0D96                     	;# 
  2161     0D97                     	;# 
  2162     0D98                     	;# 
  2163     0D99                     	;# 
  2164     0D9A                     	;# 
  2165     0D9B                     	;# 
  2166     0D9C                     	;# 
  2167     0D9D                     	;# 
  2168     0D9E                     	;# 
  2169     0D9E                     	;# 
  2170     0D9F                     	;# 
  2171     0DA0                     	;# 
  2172     0DA1                     	;# 
  2173     0DA1                     	;# 
  2174     0DA2                     	;# 
  2175     0DA3                     	;# 
  2176     0DA4                     	;# 
  2177     0DA4                     	;# 
  2178     0DA5                     	;# 
  2179     0DA6                     	;# 
  2180     0DA7                     	;# 
  2181     0DA7                     	;# 
  2182     0DA8                     	;# 
  2183     0DA9                     	;# 
  2184     0DAA                     	;# 
  2185     0DAB                     	;# 
  2186     0DAC                     	;# 
  2187     0DAD                     	;# 
  2188     0DAE                     	;# 
  2189     0DAF                     	;# 
  2190     0E0F                     	;# 
  2191     0E10                     	;# 
  2192     0E11                     	;# 
  2193     0E12                     	;# 
  2194     0E13                     	;# 
  2195     0E14                     	;# 
  2196     0E15                     	;# 
  2197     0E16                     	;# 
  2198     0E17                     	;# 
  2199     0E17                     	;# 
  2200     0E18                     	;# 
  2201     0E18                     	;# 
  2202     0E19                     	;# 
  2203     0E1A                     	;# 
  2204     0E1B                     	;# 
  2205     0E1B                     	;# 
  2206     0E1C                     	;# 
  2207     0E1D                     	;# 
  2208     0E1E                     	;# 
  2209     0E1E                     	;# 
  2210     0E1F                     	;# 
  2211     0E20                     	;# 
  2212     0E21                     	;# 
  2213     0E22                     	;# 
  2214     0E23                     	;# 
  2215     0E24                     	;# 
  2216     0E25                     	;# 
  2217     0E26                     	;# 
  2218     0E27                     	;# 
  2219     0E28                     	;# 
  2220     0E29                     	;# 
  2221     0E2A                     	;# 
  2222     0E2B                     	;# 
  2223     0E2C                     	;# 
  2224     0E2D                     	;# 
  2225     0E2E                     	;# 
  2226     0E90                     	;# 
  2227     0E91                     	;# 
  2228     0E92                     	;# 
  2229     0E94                     	;# 
  2230     0E95                     	;# 
  2231     0E9C                     	;# 
  2232     0E9D                     	;# 
  2233     0E9E                     	;# 
  2234     0E9F                     	;# 
  2235     0EA0                     	;# 
  2236     0EA1                     	;# 
  2237     0EA2                     	;# 
  2238     0EA3                     	;# 
  2239     0EA4                     	;# 
  2240     0EA5                     	;# 
  2241     0EA6                     	;# 
  2242     0EA7                     	;# 
  2243     0F0F                     	;# 
  2244     0F10                     	;# 
  2245     0F11                     	;# 
  2246     0F12                     	;# 
  2247     0F13                     	;# 
  2248     0F14                     	;# 
  2249     0F15                     	;# 
  2250     0F16                     	;# 
  2251     0F17                     	;# 
  2252     0F18                     	;# 
  2253     0F19                     	;# 
  2254     0F1A                     	;# 
  2255     0F1B                     	;# 
  2256     0F1C                     	;# 
  2257     0F1D                     	;# 
  2258     0F1E                     	;# 
  2259     0F1F                     	;# 
  2260     0F20                     	;# 
  2261     0F21                     	;# 
  2262     0F22                     	;# 
  2263     0F23                     	;# 
  2264     0FE4                     	;# 
  2265     0FE5                     	;# 
  2266     0FE6                     	;# 
  2267     0FE7                     	;# 
  2268     0FE8                     	;# 
  2269     0FE9                     	;# 
  2270     0FEA                     	;# 
  2271     0FEB                     	;# 
  2272     0FED                     	;# 
  2273     0FEE                     	;# 
  2274     0FEF                     	;# 
  2275     0000                     	;# 
  2276     0001                     	;# 
  2277     0002                     	;# 
  2278     0003                     	;# 
  2279     0004                     	;# 
  2280     0005                     	;# 
  2281     0006                     	;# 
  2282     0007                     	;# 
  2283     0008                     	;# 
  2284     0009                     	;# 
  2285     000A                     	;# 
  2286     000B                     	;# 
  2287     000C                     	;# 
  2288     000D                     	;# 
  2289     000E                     	;# 
  2290     0010                     	;# 
  2291     0011                     	;# 
  2292     0012                     	;# 
  2293     0013                     	;# 
  2294     0014                     	;# 
  2295     0015                     	;# 
  2296     0016                     	;# 
  2297     0016                     	;# 
  2298     0017                     	;# 
  2299     0018                     	;# 
  2300     0019                     	;# 
  2301     001A                     	;# 
  2302     001A                     	;# 
  2303     001B                     	;# 
  2304     001B                     	;# 
  2305     001C                     	;# 
  2306     001D                     	;# 
  2307     001E                     	;# 
  2308     001F                     	;# 
  2309     008C                     	;# 
  2310     008D                     	;# 
  2311     008E                     	;# 
  2312     0090                     	;# 
  2313     0091                     	;# 
  2314     0092                     	;# 
  2315     0093                     	;# 
  2316     0094                     	;# 
  2317     0095                     	;# 
  2318     0096                     	;# 
  2319     0098                     	;# 
  2320     0099                     	;# 
  2321     009A                     	;# 
  2322     009B                     	;# 
  2323     009B                     	;# 
  2324     009C                     	;# 
  2325     009D                     	;# 
  2326     009E                     	;# 
  2327     009F                     	;# 
  2328     010C                     	;# 
  2329     010D                     	;# 
  2330     010E                     	;# 
  2331     0111                     	;# 
  2332     0112                     	;# 
  2333     0113                     	;# 
  2334     0114                     	;# 
  2335     0115                     	;# 
  2336     0116                     	;# 
  2337     0117                     	;# 
  2338     0118                     	;# 
  2339     0119                     	;# 
  2340     011C                     	;# 
  2341     018C                     	;# 
  2342     018D                     	;# 
  2343     018E                     	;# 
  2344     0191                     	;# 
  2345     0191                     	;# 
  2346     0192                     	;# 
  2347     0193                     	;# 
  2348     0193                     	;# 
  2349     0194                     	;# 
  2350     0195                     	;# 
  2351     0196                     	;# 
  2352     0197                     	;# 
  2353     0199                     	;# 
  2354     0199                     	;# 
  2355     0199                     	;# 
  2356     019A                     	;# 
  2357     019A                     	;# 
  2358     019A                     	;# 
  2359     019B                     	;# 
  2360     019B                     	;# 
  2361     019B                     	;# 
  2362     019B                     	;# 
  2363     019B                     	;# 
  2364     019C                     	;# 
  2365     019C                     	;# 
  2366     019C                     	;# 
  2367     019D                     	;# 
  2368     019D                     	;# 
  2369     019D                     	;# 
  2370     019E                     	;# 
  2371     019E                     	;# 
  2372     019E                     	;# 
  2373     019F                     	;# 
  2374     019F                     	;# 
  2375     019F                     	;# 
  2376     019F                     	;# 
  2377     019F                     	;# 
  2378     020C                     	;# 
  2379     020D                     	;# 
  2380     020E                     	;# 
  2381     0211                     	;# 
  2382     0211                     	;# 
  2383     0212                     	;# 
  2384     0212                     	;# 
  2385     0213                     	;# 
  2386     0213                     	;# 
  2387     0214                     	;# 
  2388     0214                     	;# 
  2389     0215                     	;# 
  2390     0215                     	;# 
  2391     0215                     	;# 
  2392     0215                     	;# 
  2393     0216                     	;# 
  2394     0216                     	;# 
  2395     0217                     	;# 
  2396     0217                     	;# 
  2397     028C                     	;# 
  2398     028D                     	;# 
  2399     028E                     	;# 
  2400     0291                     	;# 
  2401     0291                     	;# 
  2402     0292                     	;# 
  2403     0293                     	;# 
  2404     0294                     	;# 
  2405     0298                     	;# 
  2406     0298                     	;# 
  2407     0299                     	;# 
  2408     029A                     	;# 
  2409     029B                     	;# 
  2410     029E                     	;# 
  2411     030C                     	;# 
  2412     030D                     	;# 
  2413     030E                     	;# 
  2414     038C                     	;# 
  2415     038D                     	;# 
  2416     038E                     	;# 
  2417     0391                     	;# 
  2418     0392                     	;# 
  2419     0393                     	;# 
  2420     0394                     	;# 
  2421     0395                     	;# 
  2422     0396                     	;# 
  2423     0397                     	;# 
  2424     0398                     	;# 
  2425     0399                     	;# 
  2426     040E                     	;# 
  2427     0413                     	;# 
  2428     0413                     	;# 
  2429     0414                     	;# 
  2430     0414                     	;# 
  2431     0415                     	;# 
  2432     0416                     	;# 
  2433     0417                     	;# 
  2434     0418                     	;# 
  2435     041A                     	;# 
  2436     041A                     	;# 
  2437     041B                     	;# 
  2438     041B                     	;# 
  2439     041C                     	;# 
  2440     041D                     	;# 
  2441     041E                     	;# 
  2442     041F                     	;# 
  2443     0493                     	;# 
  2444     0494                     	;# 
  2445     0495                     	;# 
  2446     0496                     	;# 
  2447     049A                     	;# 
  2448     049B                     	;# 
  2449     049C                     	;# 
  2450     049D                     	;# 
  2451     058C                     	;# 
  2452     058C                     	;# 
  2453     058D                     	;# 
  2454     058E                     	;# 
  2455     058E                     	;# 
  2456     058F                     	;# 
  2457     0590                     	;# 
  2458     0590                     	;# 
  2459     0591                     	;# 
  2460     0592                     	;# 
  2461     0592                     	;# 
  2462     0593                     	;# 
  2463     0594                     	;# 
  2464     0594                     	;# 
  2465     0595                     	;# 
  2466     0596                     	;# 
  2467     0596                     	;# 
  2468     0597                     	;# 
  2469     0598                     	;# 
  2470     0599                     	;# 
  2471     059A                     	;# 
  2472     059B                     	;# 
  2473     059B                     	;# 
  2474     059C                     	;# 
  2475     059D                     	;# 
  2476     060C                     	;# 
  2477     060C                     	;# 
  2478     060D                     	;# 
  2479     060E                     	;# 
  2480     060F                     	;# 
  2481     060F                     	;# 
  2482     0610                     	;# 
  2483     0611                     	;# 
  2484     0612                     	;# 
  2485     0613                     	;# 
  2486     0614                     	;# 
  2487     0617                     	;# 
  2488     0617                     	;# 
  2489     0618                     	;# 
  2490     0619                     	;# 
  2491     061A                     	;# 
  2492     061A                     	;# 
  2493     061B                     	;# 
  2494     061C                     	;# 
  2495     0691                     	;# 
  2496     0692                     	;# 
  2497     0693                     	;# 
  2498     0694                     	;# 
  2499     0695                     	;# 
  2500     0696                     	;# 
  2501     0697                     	;# 
  2502     0699                     	;# 
  2503     069A                     	;# 
  2504     0711                     	;# 
  2505     0712                     	;# 
  2506     0713                     	;# 
  2507     0714                     	;# 
  2508     0715                     	;# 
  2509     0718                     	;# 
  2510     0718                     	;# 
  2511     0719                     	;# 
  2512     071A                     	;# 
  2513     071A                     	;# 
  2514     071B                     	;# 
  2515     071C                     	;# 
  2516     071D                     	;# 
  2517     0791                     	;# 
  2518     0791                     	;# 
  2519     0792                     	;# 
  2520     0793                     	;# 
  2521     0793                     	;# 
  2522     0794                     	;# 
  2523     0795                     	;# 
  2524     0795                     	;# 
  2525     0796                     	;# 
  2526     0797                     	;# 
  2527     0797                     	;# 
  2528     0798                     	;# 
  2529     0799                     	;# 
  2530     079A                     	;# 
  2531     080C                     	;# 
  2532     080C                     	;# 
  2533     080D                     	;# 
  2534     080E                     	;# 
  2535     080E                     	;# 
  2536     080F                     	;# 
  2537     0810                     	;# 
  2538     0810                     	;# 
  2539     0811                     	;# 
  2540     0812                     	;# 
  2541     0812                     	;# 
  2542     0813                     	;# 
  2543     0814                     	;# 
  2544     0815                     	;# 
  2545     0816                     	;# 
  2546     0817                     	;# 
  2547     0818                     	;# 
  2548     0819                     	;# 
  2549     081A                     	;# 
  2550     081A                     	;# 
  2551     081B                     	;# 
  2552     081C                     	;# 
  2553     081C                     	;# 
  2554     081D                     	;# 
  2555     088C                     	;# 
  2556     088D                     	;# 
  2557     088E                     	;# 
  2558     088F                     	;# 
  2559     088F                     	;# 
  2560     0890                     	;# 
  2561     0891                     	;# 
  2562     0892                     	;# 
  2563     0893                     	;# 
  2564     0893                     	;# 
  2565     0894                     	;# 
  2566     0895                     	;# 
  2567     0896                     	;# 
  2568     0897                     	;# 
  2569     0897                     	;# 
  2570     0898                     	;# 
  2571     0899                     	;# 
  2572     0D8C                     	;# 
  2573     0D8C                     	;# 
  2574     0D8D                     	;# 
  2575     0D8E                     	;# 
  2576     0D8F                     	;# 
  2577     0D8F                     	;# 
  2578     0D90                     	;# 
  2579     0D91                     	;# 
  2580     0D92                     	;# 
  2581     0D92                     	;# 
  2582     0D93                     	;# 
  2583     0D94                     	;# 
  2584     0D95                     	;# 
  2585     0D95                     	;# 
  2586     0D96                     	;# 
  2587     0D97                     	;# 
  2588     0D98                     	;# 
  2589     0D99                     	;# 
  2590     0D9A                     	;# 
  2591     0D9B                     	;# 
  2592     0D9C                     	;# 
  2593     0D9D                     	;# 
  2594     0D9E                     	;# 
  2595     0D9E                     	;# 
  2596     0D9F                     	;# 
  2597     0DA0                     	;# 
  2598     0DA1                     	;# 
  2599     0DA1                     	;# 
  2600     0DA2                     	;# 
  2601     0DA3                     	;# 
  2602     0DA4                     	;# 
  2603     0DA4                     	;# 
  2604     0DA5                     	;# 
  2605     0DA6                     	;# 
  2606     0DA7                     	;# 
  2607     0DA7                     	;# 
  2608     0DA8                     	;# 
  2609     0DA9                     	;# 
  2610     0DAA                     	;# 
  2611     0DAB                     	;# 
  2612     0DAC                     	;# 
  2613     0DAD                     	;# 
  2614     0DAE                     	;# 
  2615     0DAF                     	;# 
  2616     0E0F                     	;# 
  2617     0E10                     	;# 
  2618     0E11                     	;# 
  2619     0E12                     	;# 
  2620     0E13                     	;# 
  2621     0E14                     	;# 
  2622     0E15                     	;# 
  2623     0E16                     	;# 
  2624     0E17                     	;# 
  2625     0E17                     	;# 
  2626     0E18                     	;# 
  2627     0E18                     	;# 
  2628     0E19                     	;# 
  2629     0E1A                     	;# 
  2630     0E1B                     	;# 
  2631     0E1B                     	;# 
  2632     0E1C                     	;# 
  2633     0E1D                     	;# 
  2634     0E1E                     	;# 
  2635     0E1E                     	;# 
  2636     0E1F                     	;# 
  2637     0E20                     	;# 
  2638     0E21                     	;# 
  2639     0E22                     	;# 
  2640     0E23                     	;# 
  2641     0E24                     	;# 
  2642     0E25                     	;# 
  2643     0E26                     	;# 
  2644     0E27                     	;# 
  2645     0E28                     	;# 
  2646     0E29                     	;# 
  2647     0E2A                     	;# 
  2648     0E2B                     	;# 
  2649     0E2C                     	;# 
  2650     0E2D                     	;# 
  2651     0E2E                     	;# 
  2652     0E90                     	;# 
  2653     0E91                     	;# 
  2654     0E92                     	;# 
  2655     0E94                     	;# 
  2656     0E95                     	;# 
  2657     0E9C                     	;# 
  2658     0E9D                     	;# 
  2659     0E9E                     	;# 
  2660     0E9F                     	;# 
  2661     0EA0                     	;# 
  2662     0EA1                     	;# 
  2663     0EA2                     	;# 
  2664     0EA3                     	;# 
  2665     0EA4                     	;# 
  2666     0EA5                     	;# 
  2667     0EA6                     	;# 
  2668     0EA7                     	;# 
  2669     0F0F                     	;# 
  2670     0F10                     	;# 
  2671     0F11                     	;# 
  2672     0F12                     	;# 
  2673     0F13                     	;# 
  2674     0F14                     	;# 
  2675     0F15                     	;# 
  2676     0F16                     	;# 
  2677     0F17                     	;# 
  2678     0F18                     	;# 
  2679     0F19                     	;# 
  2680     0F1A                     	;# 
  2681     0F1B                     	;# 
  2682     0F1C                     	;# 
  2683     0F1D                     	;# 
  2684     0F1E                     	;# 
  2685     0F1F                     	;# 
  2686     0F20                     	;# 
  2687     0F21                     	;# 
  2688     0F22                     	;# 
  2689     0F23                     	;# 
  2690     0FE4                     	;# 
  2691     0FE5                     	;# 
  2692     0FE6                     	;# 
  2693     0FE7                     	;# 
  2694     0FE8                     	;# 
  2695     0FE9                     	;# 
  2696     0FEA                     	;# 
  2697     0FEB                     	;# 
  2698     0FED                     	;# 
  2699     0FEE                     	;# 
  2700     0FEF                     	;# 
  2701     0000                     	;# 
  2702     0001                     	;# 
  2703     0002                     	;# 
  2704     0003                     	;# 
  2705     0004                     	;# 
  2706     0005                     	;# 
  2707     0006                     	;# 
  2708     0007                     	;# 
  2709     0008                     	;# 
  2710     0009                     	;# 
  2711     000A                     	;# 
  2712     000B                     	;# 
  2713     000C                     	;# 
  2714     000D                     	;# 
  2715     000E                     	;# 
  2716     0010                     	;# 
  2717     0011                     	;# 
  2718     0012                     	;# 
  2719     0013                     	;# 
  2720     0014                     	;# 
  2721     0015                     	;# 
  2722     0016                     	;# 
  2723     0016                     	;# 
  2724     0017                     	;# 
  2725     0018                     	;# 
  2726     0019                     	;# 
  2727     001A                     	;# 
  2728     001A                     	;# 
  2729     001B                     	;# 
  2730     001B                     	;# 
  2731     001C                     	;# 
  2732     001D                     	;# 
  2733     001E                     	;# 
  2734     001F                     	;# 
  2735     008C                     	;# 
  2736     008D                     	;# 
  2737     008E                     	;# 
  2738     0090                     	;# 
  2739     0091                     	;# 
  2740     0092                     	;# 
  2741     0093                     	;# 
  2742     0094                     	;# 
  2743     0095                     	;# 
  2744     0096                     	;# 
  2745     0098                     	;# 
  2746     0099                     	;# 
  2747     009A                     	;# 
  2748     009B                     	;# 
  2749     009B                     	;# 
  2750     009C                     	;# 
  2751     009D                     	;# 
  2752     009E                     	;# 
  2753     009F                     	;# 
  2754     010C                     	;# 
  2755     010D                     	;# 
  2756     010E                     	;# 
  2757     0111                     	;# 
  2758     0112                     	;# 
  2759     0113                     	;# 
  2760     0114                     	;# 
  2761     0115                     	;# 
  2762     0116                     	;# 
  2763     0117                     	;# 
  2764     0118                     	;# 
  2765     0119                     	;# 
  2766     011C                     	;# 
  2767     018C                     	;# 
  2768     018D                     	;# 
  2769     018E                     	;# 
  2770     0191                     	;# 
  2771     0191                     	;# 
  2772     0192                     	;# 
  2773     0193                     	;# 
  2774     0193                     	;# 
  2775     0194                     	;# 
  2776     0195                     	;# 
  2777     0196                     	;# 
  2778     0197                     	;# 
  2779     0199                     	;# 
  2780     0199                     	;# 
  2781     0199                     	;# 
  2782     019A                     	;# 
  2783     019A                     	;# 
  2784     019A                     	;# 
  2785     019B                     	;# 
  2786     019B                     	;# 
  2787     019B                     	;# 
  2788     019B                     	;# 
  2789     019B                     	;# 
  2790     019C                     	;# 
  2791     019C                     	;# 
  2792     019C                     	;# 
  2793     019D                     	;# 
  2794     019D                     	;# 
  2795     019D                     	;# 
  2796     019E                     	;# 
  2797     019E                     	;# 
  2798     019E                     	;# 
  2799     019F                     	;# 
  2800     019F                     	;# 
  2801     019F                     	;# 
  2802     019F                     	;# 
  2803     019F                     	;# 
  2804     020C                     	;# 
  2805     020D                     	;# 
  2806     020E                     	;# 
  2807     0211                     	;# 
  2808     0211                     	;# 
  2809     0212                     	;# 
  2810     0212                     	;# 
  2811     0213                     	;# 
  2812     0213                     	;# 
  2813     0214                     	;# 
  2814     0214                     	;# 
  2815     0215                     	;# 
  2816     0215                     	;# 
  2817     0215                     	;# 
  2818     0215                     	;# 
  2819     0216                     	;# 
  2820     0216                     	;# 
  2821     0217                     	;# 
  2822     0217                     	;# 
  2823     028C                     	;# 
  2824     028D                     	;# 
  2825     028E                     	;# 
  2826     0291                     	;# 
  2827     0291                     	;# 
  2828     0292                     	;# 
  2829     0293                     	;# 
  2830     0294                     	;# 
  2831     0298                     	;# 
  2832     0298                     	;# 
  2833     0299                     	;# 
  2834     029A                     	;# 
  2835     029B                     	;# 
  2836     029E                     	;# 
  2837     030C                     	;# 
  2838     030D                     	;# 
  2839     030E                     	;# 
  2840     038C                     	;# 
  2841     038D                     	;# 
  2842     038E                     	;# 
  2843     0391                     	;# 
  2844     0392                     	;# 
  2845     0393                     	;# 
  2846     0394                     	;# 
  2847     0395                     	;# 
  2848     0396                     	;# 
  2849     0397                     	;# 
  2850     0398                     	;# 
  2851     0399                     	;# 
  2852     040E                     	;# 
  2853     0413                     	;# 
  2854     0413                     	;# 
  2855     0414                     	;# 
  2856     0414                     	;# 
  2857     0415                     	;# 
  2858     0416                     	;# 
  2859     0417                     	;# 
  2860     0418                     	;# 
  2861     041A                     	;# 
  2862     041A                     	;# 
  2863     041B                     	;# 
  2864     041B                     	;# 
  2865     041C                     	;# 
  2866     041D                     	;# 
  2867     041E                     	;# 
  2868     041F                     	;# 
  2869     0493                     	;# 
  2870     0494                     	;# 
  2871     0495                     	;# 
  2872     0496                     	;# 
  2873     049A                     	;# 
  2874     049B                     	;# 
  2875     049C                     	;# 
  2876     049D                     	;# 
  2877     058C                     	;# 
  2878     058C                     	;# 
  2879     058D                     	;# 
  2880     058E                     	;# 
  2881     058E                     	;# 
  2882     058F                     	;# 
  2883     0590                     	;# 
  2884     0590                     	;# 
  2885     0591                     	;# 
  2886     0592                     	;# 
  2887     0592                     	;# 
  2888     0593                     	;# 
  2889     0594                     	;# 
  2890     0594                     	;# 
  2891     0595                     	;# 
  2892     0596                     	;# 
  2893     0596                     	;# 
  2894     0597                     	;# 
  2895     0598                     	;# 
  2896     0599                     	;# 
  2897     059A                     	;# 
  2898     059B                     	;# 
  2899     059B                     	;# 
  2900     059C                     	;# 
  2901     059D                     	;# 
  2902     060C                     	;# 
  2903     060C                     	;# 
  2904     060D                     	;# 
  2905     060E                     	;# 
  2906     060F                     	;# 
  2907     060F                     	;# 
  2908     0610                     	;# 
  2909     0611                     	;# 
  2910     0612                     	;# 
  2911     0613                     	;# 
  2912     0614                     	;# 
  2913     0617                     	;# 
  2914     0617                     	;# 
  2915     0618                     	;# 
  2916     0619                     	;# 
  2917     061A                     	;# 
  2918     061A                     	;# 
  2919     061B                     	;# 
  2920     061C                     	;# 
  2921     0691                     	;# 
  2922     0692                     	;# 
  2923     0693                     	;# 
  2924     0694                     	;# 
  2925     0695                     	;# 
  2926     0696                     	;# 
  2927     0697                     	;# 
  2928     0699                     	;# 
  2929     069A                     	;# 
  2930     0711                     	;# 
  2931     0712                     	;# 
  2932     0713                     	;# 
  2933     0714                     	;# 
  2934     0715                     	;# 
  2935     0718                     	;# 
  2936     0718                     	;# 
  2937     0719                     	;# 
  2938     071A                     	;# 
  2939     071A                     	;# 
  2940     071B                     	;# 
  2941     071C                     	;# 
  2942     071D                     	;# 
  2943     0791                     	;# 
  2944     0791                     	;# 
  2945     0792                     	;# 
  2946     0793                     	;# 
  2947     0793                     	;# 
  2948     0794                     	;# 
  2949     0795                     	;# 
  2950     0795                     	;# 
  2951     0796                     	;# 
  2952     0797                     	;# 
  2953     0797                     	;# 
  2954     0798                     	;# 
  2955     0799                     	;# 
  2956     079A                     	;# 
  2957     080C                     	;# 
  2958     080C                     	;# 
  2959     080D                     	;# 
  2960     080E                     	;# 
  2961     080E                     	;# 
  2962     080F                     	;# 
  2963     0810                     	;# 
  2964     0810                     	;# 
  2965     0811                     	;# 
  2966     0812                     	;# 
  2967     0812                     	;# 
  2968     0813                     	;# 
  2969     0814                     	;# 
  2970     0815                     	;# 
  2971     0816                     	;# 
  2972     0817                     	;# 
  2973     0818                     	;# 
  2974     0819                     	;# 
  2975     081A                     	;# 
  2976     081A                     	;# 
  2977     081B                     	;# 
  2978     081C                     	;# 
  2979     081C                     	;# 
  2980     081D                     	;# 
  2981     088C                     	;# 
  2982     088D                     	;# 
  2983     088E                     	;# 
  2984     088F                     	;# 
  2985     088F                     	;# 
  2986     0890                     	;# 
  2987     0891                     	;# 
  2988     0892                     	;# 
  2989     0893                     	;# 
  2990     0893                     	;# 
  2991     0894                     	;# 
  2992     0895                     	;# 
  2993     0896                     	;# 
  2994     0897                     	;# 
  2995     0897                     	;# 
  2996     0898                     	;# 
  2997     0899                     	;# 
  2998     0D8C                     	;# 
  2999     0D8C                     	;# 
  3000     0D8D                     	;# 
  3001     0D8E                     	;# 
  3002     0D8F                     	;# 
  3003     0D8F                     	;# 
  3004     0D90                     	;# 
  3005     0D91                     	;# 
  3006     0D92                     	;# 
  3007     0D92                     	;# 
  3008     0D93                     	;# 
  3009     0D94                     	;# 
  3010     0D95                     	;# 
  3011     0D95                     	;# 
  3012     0D96                     	;# 
  3013     0D97                     	;# 
  3014     0D98                     	;# 
  3015     0D99                     	;# 
  3016     0D9A                     	;# 
  3017     0D9B                     	;# 
  3018     0D9C                     	;# 
  3019     0D9D                     	;# 
  3020     0D9E                     	;# 
  3021     0D9E                     	;# 
  3022     0D9F                     	;# 
  3023     0DA0                     	;# 
  3024     0DA1                     	;# 
  3025     0DA1                     	;# 
  3026     0DA2                     	;# 
  3027     0DA3                     	;# 
  3028     0DA4                     	;# 
  3029     0DA4                     	;# 
  3030     0DA5                     	;# 
  3031     0DA6                     	;# 
  3032     0DA7                     	;# 
  3033     0DA7                     	;# 
  3034     0DA8                     	;# 
  3035     0DA9                     	;# 
  3036     0DAA                     	;# 
  3037     0DAB                     	;# 
  3038     0DAC                     	;# 
  3039     0DAD                     	;# 
  3040     0DAE                     	;# 
  3041     0DAF                     	;# 
  3042     0E0F                     	;# 
  3043     0E10                     	;# 
  3044     0E11                     	;# 
  3045     0E12                     	;# 
  3046     0E13                     	;# 
  3047     0E14                     	;# 
  3048     0E15                     	;# 
  3049     0E16                     	;# 
  3050     0E17                     	;# 
  3051     0E17                     	;# 
  3052     0E18                     	;# 
  3053     0E18                     	;# 
  3054     0E19                     	;# 
  3055     0E1A                     	;# 
  3056     0E1B                     	;# 
  3057     0E1B                     	;# 
  3058     0E1C                     	;# 
  3059     0E1D                     	;# 
  3060     0E1E                     	;# 
  3061     0E1E                     	;# 
  3062     0E1F                     	;# 
  3063     0E20                     	;# 
  3064     0E21                     	;# 
  3065     0E22                     	;# 
  3066     0E23                     	;# 
  3067     0E24                     	;# 
  3068     0E25                     	;# 
  3069     0E26                     	;# 
  3070     0E27                     	;# 
  3071     0E28                     	;# 
  3072     0E29                     	;# 
  3073     0E2A                     	;# 
  3074     0E2B                     	;# 
  3075     0E2C                     	;# 
  3076     0E2D                     	;# 
  3077     0E2E                     	;# 
  3078     0E90                     	;# 
  3079     0E91                     	;# 
  3080     0E92                     	;# 
  3081     0E94                     	;# 
  3082     0E95                     	;# 
  3083     0E9C                     	;# 
  3084     0E9D                     	;# 
  3085     0E9E                     	;# 
  3086     0E9F                     	;# 
  3087     0EA0                     	;# 
  3088     0EA1                     	;# 
  3089     0EA2                     	;# 
  3090     0EA3                     	;# 
  3091     0EA4                     	;# 
  3092     0EA5                     	;# 
  3093     0EA6                     	;# 
  3094     0EA7                     	;# 
  3095     0F0F                     	;# 
  3096     0F10                     	;# 
  3097     0F11                     	;# 
  3098     0F12                     	;# 
  3099     0F13                     	;# 
  3100     0F14                     	;# 
  3101     0F15                     	;# 
  3102     0F16                     	;# 
  3103     0F17                     	;# 
  3104     0F18                     	;# 
  3105     0F19                     	;# 
  3106     0F1A                     	;# 
  3107     0F1B                     	;# 
  3108     0F1C                     	;# 
  3109     0F1D                     	;# 
  3110     0F1E                     	;# 
  3111     0F1F                     	;# 
  3112     0F20                     	;# 
  3113     0F21                     	;# 
  3114     0F22                     	;# 
  3115     0F23                     	;# 
  3116     0FE4                     	;# 
  3117     0FE5                     	;# 
  3118     0FE6                     	;# 
  3119     0FE7                     	;# 
  3120     0FE8                     	;# 
  3121     0FE9                     	;# 
  3122     0FEA                     	;# 
  3123     0FEB                     	;# 
  3124     0FED                     	;# 
  3125     0FEE                     	;# 
  3126     0FEF                     	;# 
  3127     0000                     	;# 
  3128     0001                     	;# 
  3129     0002                     	;# 
  3130     0003                     	;# 
  3131     0004                     	;# 
  3132     0005                     	;# 
  3133     0006                     	;# 
  3134     0007                     	;# 
  3135     0008                     	;# 
  3136     0009                     	;# 
  3137     000A                     	;# 
  3138     000B                     	;# 
  3139     000C                     	;# 
  3140     000D                     	;# 
  3141     000E                     	;# 
  3142     0010                     	;# 
  3143     0011                     	;# 
  3144     0012                     	;# 
  3145     0013                     	;# 
  3146     0014                     	;# 
  3147     0015                     	;# 
  3148     0016                     	;# 
  3149     0016                     	;# 
  3150     0017                     	;# 
  3151     0018                     	;# 
  3152     0019                     	;# 
  3153     001A                     	;# 
  3154     001A                     	;# 
  3155     001B                     	;# 
  3156     001B                     	;# 
  3157     001C                     	;# 
  3158     001D                     	;# 
  3159     001E                     	;# 
  3160     001F                     	;# 
  3161     008C                     	;# 
  3162     008D                     	;# 
  3163     008E                     	;# 
  3164     0090                     	;# 
  3165     0091                     	;# 
  3166     0092                     	;# 
  3167     0093                     	;# 
  3168     0094                     	;# 
  3169     0095                     	;# 
  3170     0096                     	;# 
  3171     0098                     	;# 
  3172     0099                     	;# 
  3173     009A                     	;# 
  3174     009B                     	;# 
  3175     009B                     	;# 
  3176     009C                     	;# 
  3177     009D                     	;# 
  3178     009E                     	;# 
  3179     009F                     	;# 
  3180     010C                     	;# 
  3181     010D                     	;# 
  3182     010E                     	;# 
  3183     0111                     	;# 
  3184     0112                     	;# 
  3185     0113                     	;# 
  3186     0114                     	;# 
  3187     0115                     	;# 
  3188     0116                     	;# 
  3189     0117                     	;# 
  3190     0118                     	;# 
  3191     0119                     	;# 
  3192     011C                     	;# 
  3193     018C                     	;# 
  3194     018D                     	;# 
  3195     018E                     	;# 
  3196     0191                     	;# 
  3197     0191                     	;# 
  3198     0192                     	;# 
  3199     0193                     	;# 
  3200     0193                     	;# 
  3201     0194                     	;# 
  3202     0195                     	;# 
  3203     0196                     	;# 
  3204     0197                     	;# 
  3205     0199                     	;# 
  3206     0199                     	;# 
  3207     0199                     	;# 
  3208     019A                     	;# 
  3209     019A                     	;# 
  3210     019A                     	;# 
  3211     019B                     	;# 
  3212     019B                     	;# 
  3213     019B                     	;# 
  3214     019B                     	;# 
  3215     019B                     	;# 
  3216     019C                     	;# 
  3217     019C                     	;# 
  3218     019C                     	;# 
  3219     019D                     	;# 
  3220     019D                     	;# 
  3221     019D                     	;# 
  3222     019E                     	;# 
  3223     019E                     	;# 
  3224     019E                     	;# 
  3225     019F                     	;# 
  3226     019F                     	;# 
  3227     019F                     	;# 
  3228     019F                     	;# 
  3229     019F                     	;# 
  3230     020C                     	;# 
  3231     020D                     	;# 
  3232     020E                     	;# 
  3233     0211                     	;# 
  3234     0211                     	;# 
  3235     0212                     	;# 
  3236     0212                     	;# 
  3237     0213                     	;# 
  3238     0213                     	;# 
  3239     0214                     	;# 
  3240     0214                     	;# 
  3241     0215                     	;# 
  3242     0215                     	;# 
  3243     0215                     	;# 
  3244     0215                     	;# 
  3245     0216                     	;# 
  3246     0216                     	;# 
  3247     0217                     	;# 
  3248     0217                     	;# 
  3249     028C                     	;# 
  3250     028D                     	;# 
  3251     028E                     	;# 
  3252     0291                     	;# 
  3253     0291                     	;# 
  3254     0292                     	;# 
  3255     0293                     	;# 
  3256     0294                     	;# 
  3257     0298                     	;# 
  3258     0298                     	;# 
  3259     0299                     	;# 
  3260     029A                     	;# 
  3261     029B                     	;# 
  3262     029E                     	;# 
  3263     030C                     	;# 
  3264     030D                     	;# 
  3265     030E                     	;# 
  3266     038C                     	;# 
  3267     038D                     	;# 
  3268     038E                     	;# 
  3269     0391                     	;# 
  3270     0392                     	;# 
  3271     0393                     	;# 
  3272     0394                     	;# 
  3273     0395                     	;# 
  3274     0396                     	;# 
  3275     0397                     	;# 
  3276     0398                     	;# 
  3277     0399                     	;# 
  3278     040E                     	;# 
  3279     0413                     	;# 
  3280     0413                     	;# 
  3281     0414                     	;# 
  3282     0414                     	;# 
  3283     0415                     	;# 
  3284     0416                     	;# 
  3285     0417                     	;# 
  3286     0418                     	;# 
  3287     041A                     	;# 
  3288     041A                     	;# 
  3289     041B                     	;# 
  3290     041B                     	;# 
  3291     041C                     	;# 
  3292     041D                     	;# 
  3293     041E                     	;# 
  3294     041F                     	;# 
  3295     0493                     	;# 
  3296     0494                     	;# 
  3297     0495                     	;# 
  3298     0496                     	;# 
  3299     049A                     	;# 
  3300     049B                     	;# 
  3301     049C                     	;# 
  3302     049D                     	;# 
  3303     058C                     	;# 
  3304     058C                     	;# 
  3305     058D                     	;# 
  3306     058E                     	;# 
  3307     058E                     	;# 
  3308     058F                     	;# 
  3309     0590                     	;# 
  3310     0590                     	;# 
  3311     0591                     	;# 
  3312     0592                     	;# 
  3313     0592                     	;# 
  3314     0593                     	;# 
  3315     0594                     	;# 
  3316     0594                     	;# 
  3317     0595                     	;# 
  3318     0596                     	;# 
  3319     0596                     	;# 
  3320     0597                     	;# 
  3321     0598                     	;# 
  3322     0599                     	;# 
  3323     059A                     	;# 
  3324     059B                     	;# 
  3325     059B                     	;# 
  3326     059C                     	;# 
  3327     059D                     	;# 
  3328     060C                     	;# 
  3329     060C                     	;# 
  3330     060D                     	;# 
  3331     060E                     	;# 
  3332     060F                     	;# 
  3333     060F                     	;# 
  3334     0610                     	;# 
  3335     0611                     	;# 
  3336     0612                     	;# 
  3337     0613                     	;# 
  3338     0614                     	;# 
  3339     0617                     	;# 
  3340     0617                     	;# 
  3341     0618                     	;# 
  3342     0619                     	;# 
  3343     061A                     	;# 
  3344     061A                     	;# 
  3345     061B                     	;# 
  3346     061C                     	;# 
  3347     0691                     	;# 
  3348     0692                     	;# 
  3349     0693                     	;# 
  3350     0694                     	;# 
  3351     0695                     	;# 
  3352     0696                     	;# 
  3353     0697                     	;# 
  3354     0699                     	;# 
  3355     069A                     	;# 
  3356     0711                     	;# 
  3357     0712                     	;# 
  3358     0713                     	;# 
  3359     0714                     	;# 
  3360     0715                     	;# 
  3361     0718                     	;# 
  3362     0718                     	;# 
  3363     0719                     	;# 
  3364     071A                     	;# 
  3365     071A                     	;# 
  3366     071B                     	;# 
  3367     071C                     	;# 
  3368     071D                     	;# 
  3369     0791                     	;# 
  3370     0791                     	;# 
  3371     0792                     	;# 
  3372     0793                     	;# 
  3373     0793                     	;# 
  3374     0794                     	;# 
  3375     0795                     	;# 
  3376     0795                     	;# 
  3377     0796                     	;# 
  3378     0797                     	;# 
  3379     0797                     	;# 
  3380     0798                     	;# 
  3381     0799                     	;# 
  3382     079A                     	;# 
  3383     080C                     	;# 
  3384     080C                     	;# 
  3385     080D                     	;# 
  3386     080E                     	;# 
  3387     080E                     	;# 
  3388     080F                     	;# 
  3389     0810                     	;# 
  3390     0810                     	;# 
  3391     0811                     	;# 
  3392     0812                     	;# 
  3393     0812                     	;# 
  3394     0813                     	;# 
  3395     0814                     	;# 
  3396     0815                     	;# 
  3397     0816                     	;# 
  3398     0817                     	;# 
  3399     0818                     	;# 
  3400     0819                     	;# 
  3401     081A                     	;# 
  3402     081A                     	;# 
  3403     081B                     	;# 
  3404     081C                     	;# 
  3405     081C                     	;# 
  3406     081D                     	;# 
  3407     088C                     	;# 
  3408     088D                     	;# 
  3409     088E                     	;# 
  3410     088F                     	;# 
  3411     088F                     	;# 
  3412     0890                     	;# 
  3413     0891                     	;# 
  3414     0892                     	;# 
  3415     0893                     	;# 
  3416     0893                     	;# 
  3417     0894                     	;# 
  3418     0895                     	;# 
  3419     0896                     	;# 
  3420     0897                     	;# 
  3421     0897                     	;# 
  3422     0898                     	;# 
  3423     0899                     	;# 
  3424     0D8C                     	;# 
  3425     0D8C                     	;# 
  3426     0D8D                     	;# 
  3427     0D8E                     	;# 
  3428     0D8F                     	;# 
  3429     0D8F                     	;# 
  3430     0D90                     	;# 
  3431     0D91                     	;# 
  3432     0D92                     	;# 
  3433     0D92                     	;# 
  3434     0D93                     	;# 
  3435     0D94                     	;# 
  3436     0D95                     	;# 
  3437     0D95                     	;# 
  3438     0D96                     	;# 
  3439     0D97                     	;# 
  3440     0D98                     	;# 
  3441     0D99                     	;# 
  3442     0D9A                     	;# 
  3443     0D9B                     	;# 
  3444     0D9C                     	;# 
  3445     0D9D                     	;# 
  3446     0D9E                     	;# 
  3447     0D9E                     	;# 
  3448     0D9F                     	;# 
  3449     0DA0                     	;# 
  3450     0DA1                     	;# 
  3451     0DA1                     	;# 
  3452     0DA2                     	;# 
  3453     0DA3                     	;# 
  3454     0DA4                     	;# 
  3455     0DA4                     	;# 
  3456     0DA5                     	;# 
  3457     0DA6                     	;# 
  3458     0DA7                     	;# 
  3459     0DA7                     	;# 
  3460     0DA8                     	;# 
  3461     0DA9                     	;# 
  3462     0DAA                     	;# 
  3463     0DAB                     	;# 
  3464     0DAC                     	;# 
  3465     0DAD                     	;# 
  3466     0DAE                     	;# 
  3467     0DAF                     	;# 
  3468     0E0F                     	;# 
  3469     0E10                     	;# 
  3470     0E11                     	;# 
  3471     0E12                     	;# 
  3472     0E13                     	;# 
  3473     0E14                     	;# 
  3474     0E15                     	;# 
  3475     0E16                     	;# 
  3476     0E17                     	;# 
  3477     0E17                     	;# 
  3478     0E18                     	;# 
  3479     0E18                     	;# 
  3480     0E19                     	;# 
  3481     0E1A                     	;# 
  3482     0E1B                     	;# 
  3483     0E1B                     	;# 
  3484     0E1C                     	;# 
  3485     0E1D                     	;# 
  3486     0E1E                     	;# 
  3487     0E1E                     	;# 
  3488     0E1F                     	;# 
  3489     0E20                     	;# 
  3490     0E21                     	;# 
  3491     0E22                     	;# 
  3492     0E23                     	;# 
  3493     0E24                     	;# 
  3494     0E25                     	;# 
  3495     0E26                     	;# 
  3496     0E27                     	;# 
  3497     0E28                     	;# 
  3498     0E29                     	;# 
  3499     0E2A                     	;# 
  3500     0E2B                     	;# 
  3501     0E2C                     	;# 
  3502     0E2D                     	;# 
  3503     0E2E                     	;# 
  3504     0E90                     	;# 
  3505     0E91                     	;# 
  3506     0E92                     	;# 
  3507     0E94                     	;# 
  3508     0E95                     	;# 
  3509     0E9C                     	;# 
  3510     0E9D                     	;# 
  3511     0E9E                     	;# 
  3512     0E9F                     	;# 
  3513     0EA0                     	;# 
  3514     0EA1                     	;# 
  3515     0EA2                     	;# 
  3516     0EA3                     	;# 
  3517     0EA4                     	;# 
  3518     0EA5                     	;# 
  3519     0EA6                     	;# 
  3520     0EA7                     	;# 
  3521     0F0F                     	;# 
  3522     0F10                     	;# 
  3523     0F11                     	;# 
  3524     0F12                     	;# 
  3525     0F13                     	;# 
  3526     0F14                     	;# 
  3527     0F15                     	;# 
  3528     0F16                     	;# 
  3529     0F17                     	;# 
  3530     0F18                     	;# 
  3531     0F19                     	;# 
  3532     0F1A                     	;# 
  3533     0F1B                     	;# 
  3534     0F1C                     	;# 
  3535     0F1D                     	;# 
  3536     0F1E                     	;# 
  3537     0F1F                     	;# 
  3538     0F20                     	;# 
  3539     0F21                     	;# 
  3540     0F22                     	;# 
  3541     0F23                     	;# 
  3542     0FE4                     	;# 
  3543     0FE5                     	;# 
  3544     0FE6                     	;# 
  3545     0FE7                     	;# 
  3546     0FE8                     	;# 
  3547     0FE9                     	;# 
  3548     0FEA                     	;# 
  3549     0FEB                     	;# 
  3550     0FED                     	;# 
  3551     0FEE                     	;# 
  3552     0FEF                     	;# 
  3553     0000                     	;# 
  3554     0001                     	;# 
  3555     0002                     	;# 
  3556     0003                     	;# 
  3557     0004                     	;# 
  3558     0005                     	;# 
  3559     0006                     	;# 
  3560     0007                     	;# 
  3561     0008                     	;# 
  3562     0009                     	;# 
  3563     000A                     	;# 
  3564     000B                     	;# 
  3565     000C                     	;# 
  3566     000D                     	;# 
  3567     000E                     	;# 
  3568     0010                     	;# 
  3569     0011                     	;# 
  3570     0012                     	;# 
  3571     0013                     	;# 
  3572     0014                     	;# 
  3573     0015                     	;# 
  3574     0016                     	;# 
  3575     0016                     	;# 
  3576     0017                     	;# 
  3577     0018                     	;# 
  3578     0019                     	;# 
  3579     001A                     	;# 
  3580     001A                     	;# 
  3581     001B                     	;# 
  3582     001B                     	;# 
  3583     001C                     	;# 
  3584     001D                     	;# 
  3585     001E                     	;# 
  3586     001F                     	;# 
  3587     008C                     	;# 
  3588     008D                     	;# 
  3589     008E                     	;# 
  3590     0090                     	;# 
  3591     0091                     	;# 
  3592     0092                     	;# 
  3593     0093                     	;# 
  3594     0094                     	;# 
  3595     0095                     	;# 
  3596     0096                     	;# 
  3597     0098                     	;# 
  3598     0099                     	;# 
  3599     009A                     	;# 
  3600     009B                     	;# 
  3601     009B                     	;# 
  3602     009C                     	;# 
  3603     009D                     	;# 
  3604     009E                     	;# 
  3605     009F                     	;# 
  3606     010C                     	;# 
  3607     010D                     	;# 
  3608     010E                     	;# 
  3609     0111                     	;# 
  3610     0112                     	;# 
  3611     0113                     	;# 
  3612     0114                     	;# 
  3613     0115                     	;# 
  3614     0116                     	;# 
  3615     0117                     	;# 
  3616     0118                     	;# 
  3617     0119                     	;# 
  3618     011C                     	;# 
  3619     018C                     	;# 
  3620     018D                     	;# 
  3621     018E                     	;# 
  3622     0191                     	;# 
  3623     0191                     	;# 
  3624     0192                     	;# 
  3625     0193                     	;# 
  3626     0193                     	;# 
  3627     0194                     	;# 
  3628     0195                     	;# 
  3629     0196                     	;# 
  3630     0197                     	;# 
  3631     0199                     	;# 
  3632     0199                     	;# 
  3633     0199                     	;# 
  3634     019A                     	;# 
  3635     019A                     	;# 
  3636     019A                     	;# 
  3637     019B                     	;# 
  3638     019B                     	;# 
  3639     019B                     	;# 
  3640     019B                     	;# 
  3641     019B                     	;# 
  3642     019C                     	;# 
  3643     019C                     	;# 
  3644     019C                     	;# 
  3645     019D                     	;# 
  3646     019D                     	;# 
  3647     019D                     	;# 
  3648     019E                     	;# 
  3649     019E                     	;# 
  3650     019E                     	;# 
  3651     019F                     	;# 
  3652     019F                     	;# 
  3653     019F                     	;# 
  3654     019F                     	;# 
  3655     019F                     	;# 
  3656     020C                     	;# 
  3657     020D                     	;# 
  3658     020E                     	;# 
  3659     0211                     	;# 
  3660     0211                     	;# 
  3661     0212                     	;# 
  3662     0212                     	;# 
  3663     0213                     	;# 
  3664     0213                     	;# 
  3665     0214                     	;# 
  3666     0214                     	;# 
  3667     0215                     	;# 
  3668     0215                     	;# 
  3669     0215                     	;# 
  3670     0215                     	;# 
  3671     0216                     	;# 
  3672     0216                     	;# 
  3673     0217                     	;# 
  3674     0217                     	;# 
  3675     028C                     	;# 
  3676     028D                     	;# 
  3677     028E                     	;# 
  3678     0291                     	;# 
  3679     0291                     	;# 
  3680     0292                     	;# 
  3681     0293                     	;# 
  3682     0294                     	;# 
  3683     0298                     	;# 
  3684     0298                     	;# 
  3685     0299                     	;# 
  3686     029A                     	;# 
  3687     029B                     	;# 
  3688     029E                     	;# 
  3689     030C                     	;# 
  3690     030D                     	;# 
  3691     030E                     	;# 
  3692     038C                     	;# 
  3693     038D                     	;# 
  3694     038E                     	;# 
  3695     0391                     	;# 
  3696     0392                     	;# 
  3697     0393                     	;# 
  3698     0394                     	;# 
  3699     0395                     	;# 
  3700     0396                     	;# 
  3701     0397                     	;# 
  3702     0398                     	;# 
  3703     0399                     	;# 
  3704     040E                     	;# 
  3705     0413                     	;# 
  3706     0413                     	;# 
  3707     0414                     	;# 
  3708     0414                     	;# 
  3709     0415                     	;# 
  3710     0416                     	;# 
  3711     0417                     	;# 
  3712     0418                     	;# 
  3713     041A                     	;# 
  3714     041A                     	;# 
  3715     041B                     	;# 
  3716     041B                     	;# 
  3717     041C                     	;# 
  3718     041D                     	;# 
  3719     041E                     	;# 
  3720     041F                     	;# 
  3721     0493                     	;# 
  3722     0494                     	;# 
  3723     0495                     	;# 
  3724     0496                     	;# 
  3725     049A                     	;# 
  3726     049B                     	;# 
  3727     049C                     	;# 
  3728     049D                     	;# 
  3729     058C                     	;# 
  3730     058C                     	;# 
  3731     058D                     	;# 
  3732     058E                     	;# 
  3733     058E                     	;# 
  3734     058F                     	;# 
  3735     0590                     	;# 
  3736     0590                     	;# 
  3737     0591                     	;# 
  3738     0592                     	;# 
  3739     0592                     	;# 
  3740     0593                     	;# 
  3741     0594                     	;# 
  3742     0594                     	;# 
  3743     0595                     	;# 
  3744     0596                     	;# 
  3745     0596                     	;# 
  3746     0597                     	;# 
  3747     0598                     	;# 
  3748     0599                     	;# 
  3749     059A                     	;# 
  3750     059B                     	;# 
  3751     059B                     	;# 
  3752     059C                     	;# 
  3753     059D                     	;# 
  3754     060C                     	;# 
  3755     060C                     	;# 
  3756     060D                     	;# 
  3757     060E                     	;# 
  3758     060F                     	;# 
  3759     060F                     	;# 
  3760     0610                     	;# 
  3761     0611                     	;# 
  3762     0612                     	;# 
  3763     0613                     	;# 
  3764     0614                     	;# 
  3765     0617                     	;# 
  3766     0617                     	;# 
  3767     0618                     	;# 
  3768     0619                     	;# 
  3769     061A                     	;# 
  3770     061A                     	;# 
  3771     061B                     	;# 
  3772     061C                     	;# 
  3773     0691                     	;# 
  3774     0692                     	;# 
  3775     0693                     	;# 
  3776     0694                     	;# 
  3777     0695                     	;# 
  3778     0696                     	;# 
  3779     0697                     	;# 
  3780     0699                     	;# 
  3781     069A                     	;# 
  3782     0711                     	;# 
  3783     0712                     	;# 
  3784     0713                     	;# 
  3785     0714                     	;# 
  3786     0715                     	;# 
  3787     0718                     	;# 
  3788     0718                     	;# 
  3789     0719                     	;# 
  3790     071A                     	;# 
  3791     071A                     	;# 
  3792     071B                     	;# 
  3793     071C                     	;# 
  3794     071D                     	;# 
  3795     0791                     	;# 
  3796     0791                     	;# 
  3797     0792                     	;# 
  3798     0793                     	;# 
  3799     0793                     	;# 
  3800     0794                     	;# 
  3801     0795                     	;# 
  3802     0795                     	;# 
  3803     0796                     	;# 
  3804     0797                     	;# 
  3805     0797                     	;# 
  3806     0798                     	;# 
  3807     0799                     	;# 
  3808     079A                     	;# 
  3809     080C                     	;# 
  3810     080C                     	;# 
  3811     080D                     	;# 
  3812     080E                     	;# 
  3813     080E                     	;# 
  3814     080F                     	;# 
  3815     0810                     	;# 
  3816     0810                     	;# 
  3817     0811                     	;# 
  3818     0812                     	;# 
  3819     0812                     	;# 
  3820     0813                     	;# 
  3821     0814                     	;# 
  3822     0815                     	;# 
  3823     0816                     	;# 
  3824     0817                     	;# 
  3825     0818                     	;# 
  3826     0819                     	;# 
  3827     081A                     	;# 
  3828     081A                     	;# 
  3829     081B                     	;# 
  3830     081C                     	;# 
  3831     081C                     	;# 
  3832     081D                     	;# 
  3833     088C                     	;# 
  3834     088D                     	;# 
  3835     088E                     	;# 
  3836     088F                     	;# 
  3837     088F                     	;# 
  3838     0890                     	;# 
  3839     0891                     	;# 
  3840     0892                     	;# 
  3841     0893                     	;# 
  3842     0893                     	;# 
  3843     0894                     	;# 
  3844     0895                     	;# 
  3845     0896                     	;# 
  3846     0897                     	;# 
  3847     0897                     	;# 
  3848     0898                     	;# 
  3849     0899                     	;# 
  3850     0D8C                     	;# 
  3851     0D8C                     	;# 
  3852     0D8D                     	;# 
  3853     0D8E                     	;# 
  3854     0D8F                     	;# 
  3855     0D8F                     	;# 
  3856     0D90                     	;# 
  3857     0D91                     	;# 
  3858     0D92                     	;# 
  3859     0D92                     	;# 
  3860     0D93                     	;# 
  3861     0D94                     	;# 
  3862     0D95                     	;# 
  3863     0D95                     	;# 
  3864     0D96                     	;# 
  3865     0D97                     	;# 
  3866     0D98                     	;# 
  3867     0D99                     	;# 
  3868     0D9A                     	;# 
  3869     0D9B                     	;# 
  3870     0D9C                     	;# 
  3871     0D9D                     	;# 
  3872     0D9E                     	;# 
  3873     0D9E                     	;# 
  3874     0D9F                     	;# 
  3875     0DA0                     	;# 
  3876     0DA1                     	;# 
  3877     0DA1                     	;# 
  3878     0DA2                     	;# 
  3879     0DA3                     	;# 
  3880     0DA4                     	;# 
  3881     0DA4                     	;# 
  3882     0DA5                     	;# 
  3883     0DA6                     	;# 
  3884     0DA7                     	;# 
  3885     0DA7                     	;# 
  3886     0DA8                     	;# 
  3887     0DA9                     	;# 
  3888     0DAA                     	;# 
  3889     0DAB                     	;# 
  3890     0DAC                     	;# 
  3891     0DAD                     	;# 
  3892     0DAE                     	;# 
  3893     0DAF                     	;# 
  3894     0E0F                     	;# 
  3895     0E10                     	;# 
  3896     0E11                     	;# 
  3897     0E12                     	;# 
  3898     0E13                     	;# 
  3899     0E14                     	;# 
  3900     0E15                     	;# 
  3901     0E16                     	;# 
  3902     0E17                     	;# 
  3903     0E17                     	;# 
  3904     0E18                     	;# 
  3905     0E18                     	;# 
  3906     0E19                     	;# 
  3907     0E1A                     	;# 
  3908     0E1B                     	;# 
  3909     0E1B                     	;# 
  3910     0E1C                     	;# 
  3911     0E1D                     	;# 
  3912     0E1E                     	;# 
  3913     0E1E                     	;# 
  3914     0E1F                     	;# 
  3915     0E20                     	;# 
  3916     0E21                     	;# 
  3917     0E22                     	;# 
  3918     0E23                     	;# 
  3919     0E24                     	;# 
  3920     0E25                     	;# 
  3921     0E26                     	;# 
  3922     0E27                     	;# 
  3923     0E28                     	;# 
  3924     0E29                     	;# 
  3925     0E2A                     	;# 
  3926     0E2B                     	;# 
  3927     0E2C                     	;# 
  3928     0E2D                     	;# 
  3929     0E2E                     	;# 
  3930     0E90                     	;# 
  3931     0E91                     	;# 
  3932     0E92                     	;# 
  3933     0E94                     	;# 
  3934     0E95                     	;# 
  3935     0E9C                     	;# 
  3936     0E9D                     	;# 
  3937     0E9E                     	;# 
  3938     0E9F                     	;# 
  3939     0EA0                     	;# 
  3940     0EA1                     	;# 
  3941     0EA2                     	;# 
  3942     0EA3                     	;# 
  3943     0EA4                     	;# 
  3944     0EA5                     	;# 
  3945     0EA6                     	;# 
  3946     0EA7                     	;# 
  3947     0F0F                     	;# 
  3948     0F10                     	;# 
  3949     0F11                     	;# 
  3950     0F12                     	;# 
  3951     0F13                     	;# 
  3952     0F14                     	;# 
  3953     0F15                     	;# 
  3954     0F16                     	;# 
  3955     0F17                     	;# 
  3956     0F18                     	;# 
  3957     0F19                     	;# 
  3958     0F1A                     	;# 
  3959     0F1B                     	;# 
  3960     0F1C                     	;# 
  3961     0F1D                     	;# 
  3962     0F1E                     	;# 
  3963     0F1F                     	;# 
  3964     0F20                     	;# 
  3965     0F21                     	;# 
  3966     0F22                     	;# 
  3967     0F23                     	;# 
  3968     0FE4                     	;# 
  3969     0FE5                     	;# 
  3970     0FE6                     	;# 
  3971     0FE7                     	;# 
  3972     0FE8                     	;# 
  3973     0FE9                     	;# 
  3974     0FEA                     	;# 
  3975     0FEB                     	;# 
  3976     0FED                     	;# 
  3977     0FEE                     	;# 
  3978     0FEF                     	;# 
  3979     0000                     	;# 
  3980     0001                     	;# 
  3981     0002                     	;# 
  3982     0003                     	;# 
  3983     0004                     	;# 
  3984     0005                     	;# 
  3985     0006                     	;# 
  3986     0007                     	;# 
  3987     0008                     	;# 
  3988     0009                     	;# 
  3989     000A                     	;# 
  3990     000B                     	;# 
  3991     000C                     	;# 
  3992     000D                     	;# 
  3993     000E                     	;# 
  3994     0010                     	;# 
  3995     0011                     	;# 
  3996     0012                     	;# 
  3997     0013                     	;# 
  3998     0014                     	;# 
  3999     0015                     	;# 
  4000     0016                     	;# 
  4001     0016                     	;# 
  4002     0017                     	;# 
  4003     0018                     	;# 
  4004     0019                     	;# 
  4005     001A                     	;# 
  4006     001A                     	;# 
  4007     001B                     	;# 
  4008     001B                     	;# 
  4009     001C                     	;# 
  4010     001D                     	;# 
  4011     001E                     	;# 
  4012     001F                     	;# 
  4013     008C                     	;# 
  4014     008D                     	;# 
  4015     008E                     	;# 
  4016     0090                     	;# 
  4017     0091                     	;# 
  4018     0092                     	;# 
  4019     0093                     	;# 
  4020     0094                     	;# 
  4021     0095                     	;# 
  4022     0096                     	;# 
  4023     0098                     	;# 
  4024     0099                     	;# 
  4025     009A                     	;# 
  4026     009B                     	;# 
  4027     009B                     	;# 
  4028     009C                     	;# 
  4029     009D                     	;# 
  4030     009E                     	;# 
  4031     009F                     	;# 
  4032     010C                     	;# 
  4033     010D                     	;# 
  4034     010E                     	;# 
  4035     0111                     	;# 
  4036     0112                     	;# 
  4037     0113                     	;# 
  4038     0114                     	;# 
  4039     0115                     	;# 
  4040     0116                     	;# 
  4041     0117                     	;# 
  4042     0118                     	;# 
  4043     0119                     	;# 
  4044     011C                     	;# 
  4045     018C                     	;# 
  4046     018D                     	;# 
  4047     018E                     	;# 
  4048     0191                     	;# 
  4049     0191                     	;# 
  4050     0192                     	;# 
  4051     0193                     	;# 
  4052     0193                     	;# 
  4053     0194                     	;# 
  4054     0195                     	;# 
  4055     0196                     	;# 
  4056     0197                     	;# 
  4057     0199                     	;# 
  4058     0199                     	;# 
  4059     0199                     	;# 
  4060     019A                     	;# 
  4061     019A                     	;# 
  4062     019A                     	;# 
  4063     019B                     	;# 
  4064     019B                     	;# 
  4065     019B                     	;# 
  4066     019B                     	;# 
  4067     019B                     	;# 
  4068     019C                     	;# 
  4069     019C                     	;# 
  4070     019C                     	;# 
  4071     019D                     	;# 
  4072     019D                     	;# 
  4073     019D                     	;# 
  4074     019E                     	;# 
  4075     019E                     	;# 
  4076     019E                     	;# 
  4077     019F                     	;# 
  4078     019F                     	;# 
  4079     019F                     	;# 
  4080     019F                     	;# 
  4081     019F                     	;# 
  4082     020C                     	;# 
  4083     020D                     	;# 
  4084     020E                     	;# 
  4085     0211                     	;# 
  4086     0211                     	;# 
  4087     0212                     	;# 
  4088     0212                     	;# 
  4089     0213                     	;# 
  4090     0213                     	;# 
  4091     0214                     	;# 
  4092     0214                     	;# 
  4093     0215                     	;# 
  4094     0215                     	;# 
  4095     0215                     	;# 
  4096     0215                     	;# 
  4097     0216                     	;# 
  4098     0216                     	;# 
  4099     0217                     	;# 
  4100     0217                     	;# 
  4101     028C                     	;# 
  4102     028D                     	;# 
  4103     028E                     	;# 
  4104     0291                     	;# 
  4105     0291                     	;# 
  4106     0292                     	;# 
  4107     0293                     	;# 
  4108     0294                     	;# 
  4109     0298                     	;# 
  4110     0298                     	;# 
  4111     0299                     	;# 
  4112     029A                     	;# 
  4113     029B                     	;# 
  4114     029E                     	;# 
  4115     030C                     	;# 
  4116     030D                     	;# 
  4117     030E                     	;# 
  4118     038C                     	;# 
  4119     038D                     	;# 
  4120     038E                     	;# 
  4121     0391                     	;# 
  4122     0392                     	;# 
  4123     0393                     	;# 
  4124     0394                     	;# 
  4125     0395                     	;# 
  4126     0396                     	;# 
  4127     0397                     	;# 
  4128     0398                     	;# 
  4129     0399                     	;# 
  4130     040E                     	;# 
  4131     0413                     	;# 
  4132     0413                     	;# 
  4133     0414                     	;# 
  4134     0414                     	;# 
  4135     0415                     	;# 
  4136     0416                     	;# 
  4137     0417                     	;# 
  4138     0418                     	;# 
  4139     041A                     	;# 
  4140     041A                     	;# 
  4141     041B                     	;# 
  4142     041B                     	;# 
  4143     041C                     	;# 
  4144     041D                     	;# 
  4145     041E                     	;# 
  4146     041F                     	;# 
  4147     0493                     	;# 
  4148     0494                     	;# 
  4149     0495                     	;# 
  4150     0496                     	;# 
  4151     049A                     	;# 
  4152     049B                     	;# 
  4153     049C                     	;# 
  4154     049D                     	;# 
  4155     058C                     	;# 
  4156     058C                     	;# 
  4157     058D                     	;# 
  4158     058E                     	;# 
  4159     058E                     	;# 
  4160     058F                     	;# 
  4161     0590                     	;# 
  4162     0590                     	;# 
  4163     0591                     	;# 
  4164     0592                     	;# 
  4165     0592                     	;# 
  4166     0593                     	;# 
  4167     0594                     	;# 
  4168     0594                     	;# 
  4169     0595                     	;# 
  4170     0596                     	;# 
  4171     0596                     	;# 
  4172     0597                     	;# 
  4173     0598                     	;# 
  4174     0599                     	;# 
  4175     059A                     	;# 
  4176     059B                     	;# 
  4177     059B                     	;# 
  4178     059C                     	;# 
  4179     059D                     	;# 
  4180     060C                     	;# 
  4181     060C                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     060F                     	;# 
  4186     0610                     	;# 
  4187     0611                     	;# 
  4188     0612                     	;# 
  4189     0613                     	;# 
  4190     0614                     	;# 
  4191     0617                     	;# 
  4192     0617                     	;# 
  4193     0618                     	;# 
  4194     0619                     	;# 
  4195     061A                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     0691                     	;# 
  4200     0692                     	;# 
  4201     0693                     	;# 
  4202     0694                     	;# 
  4203     0695                     	;# 
  4204     0696                     	;# 
  4205     0697                     	;# 
  4206     0699                     	;# 
  4207     069A                     	;# 
  4208     0711                     	;# 
  4209     0712                     	;# 
  4210     0713                     	;# 
  4211     0714                     	;# 
  4212     0715                     	;# 
  4213     0718                     	;# 
  4214     0718                     	;# 
  4215     0719                     	;# 
  4216     071A                     	;# 
  4217     071A                     	;# 
  4218     071B                     	;# 
  4219     071C                     	;# 
  4220     071D                     	;# 
  4221     0791                     	;# 
  4222     0791                     	;# 
  4223     0792                     	;# 
  4224     0793                     	;# 
  4225     0793                     	;# 
  4226     0794                     	;# 
  4227     0795                     	;# 
  4228     0795                     	;# 
  4229     0796                     	;# 
  4230     0797                     	;# 
  4231     0797                     	;# 
  4232     0798                     	;# 
  4233     0799                     	;# 
  4234     079A                     	;# 
  4235     080C                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080E                     	;# 
  4240     080F                     	;# 
  4241     0810                     	;# 
  4242     0810                     	;# 
  4243     0811                     	;# 
  4244     0812                     	;# 
  4245     0812                     	;# 
  4246     0813                     	;# 
  4247     0814                     	;# 
  4248     0815                     	;# 
  4249     0816                     	;# 
  4250     0817                     	;# 
  4251     0818                     	;# 
  4252     0819                     	;# 
  4253     081A                     	;# 
  4254     081A                     	;# 
  4255     081B                     	;# 
  4256     081C                     	;# 
  4257     081C                     	;# 
  4258     081D                     	;# 
  4259     088C                     	;# 
  4260     088D                     	;# 
  4261     088E                     	;# 
  4262     088F                     	;# 
  4263     088F                     	;# 
  4264     0890                     	;# 
  4265     0891                     	;# 
  4266     0892                     	;# 
  4267     0893                     	;# 
  4268     0893                     	;# 
  4269     0894                     	;# 
  4270     0895                     	;# 
  4271     0896                     	;# 
  4272     0897                     	;# 
  4273     0897                     	;# 
  4274     0898                     	;# 
  4275     0899                     	;# 
  4276     0D8C                     	;# 
  4277     0D8C                     	;# 
  4278     0D8D                     	;# 
  4279     0D8E                     	;# 
  4280     0D8F                     	;# 
  4281     0D8F                     	;# 
  4282     0D90                     	;# 
  4283     0D91                     	;# 
  4284     0D92                     	;# 
  4285     0D92                     	;# 
  4286     0D93                     	;# 
  4287     0D94                     	;# 
  4288     0D95                     	;# 
  4289     0D95                     	;# 
  4290     0D96                     	;# 
  4291     0D97                     	;# 
  4292     0D98                     	;# 
  4293     0D99                     	;# 
  4294     0D9A                     	;# 
  4295     0D9B                     	;# 
  4296     0D9C                     	;# 
  4297     0D9D                     	;# 
  4298     0D9E                     	;# 
  4299     0D9E                     	;# 
  4300     0D9F                     	;# 
  4301     0DA0                     	;# 
  4302     0DA1                     	;# 
  4303     0DA1                     	;# 
  4304     0DA2                     	;# 
  4305     0DA3                     	;# 
  4306     0DA4                     	;# 
  4307     0DA4                     	;# 
  4308     0DA5                     	;# 
  4309     0DA6                     	;# 
  4310     0DA7                     	;# 
  4311     0DA7                     	;# 
  4312     0DA8                     	;# 
  4313     0DA9                     	;# 
  4314     0DAA                     	;# 
  4315     0DAB                     	;# 
  4316     0DAC                     	;# 
  4317     0DAD                     	;# 
  4318     0DAE                     	;# 
  4319     0DAF                     	;# 
  4320     0E0F                     	;# 
  4321     0E10                     	;# 
  4322     0E11                     	;# 
  4323     0E12                     	;# 
  4324     0E13                     	;# 
  4325     0E14                     	;# 
  4326     0E15                     	;# 
  4327     0E16                     	;# 
  4328     0E17                     	;# 
  4329     0E17                     	;# 
  4330     0E18                     	;# 
  4331     0E18                     	;# 
  4332     0E19                     	;# 
  4333     0E1A                     	;# 
  4334     0E1B                     	;# 
  4335     0E1B                     	;# 
  4336     0E1C                     	;# 
  4337     0E1D                     	;# 
  4338     0E1E                     	;# 
  4339     0E1E                     	;# 
  4340     0E1F                     	;# 
  4341     0E20                     	;# 
  4342     0E21                     	;# 
  4343     0E22                     	;# 
  4344     0E23                     	;# 
  4345     0E24                     	;# 
  4346     0E25                     	;# 
  4347     0E26                     	;# 
  4348     0E27                     	;# 
  4349     0E28                     	;# 
  4350     0E29                     	;# 
  4351     0E2A                     	;# 
  4352     0E2B                     	;# 
  4353     0E2C                     	;# 
  4354     0E2D                     	;# 
  4355     0E2E                     	;# 
  4356     0E90                     	;# 
  4357     0E91                     	;# 
  4358     0E92                     	;# 
  4359     0E94                     	;# 
  4360     0E95                     	;# 
  4361     0E9C                     	;# 
  4362     0E9D                     	;# 
  4363     0E9E                     	;# 
  4364     0E9F                     	;# 
  4365     0EA0                     	;# 
  4366     0EA1                     	;# 
  4367     0EA2                     	;# 
  4368     0EA3                     	;# 
  4369     0EA4                     	;# 
  4370     0EA5                     	;# 
  4371     0EA6                     	;# 
  4372     0EA7                     	;# 
  4373     0F0F                     	;# 
  4374     0F10                     	;# 
  4375     0F11                     	;# 
  4376     0F12                     	;# 
  4377     0F13                     	;# 
  4378     0F14                     	;# 
  4379     0F15                     	;# 
  4380     0F16                     	;# 
  4381     0F17                     	;# 
  4382     0F18                     	;# 
  4383     0F19                     	;# 
  4384     0F1A                     	;# 
  4385     0F1B                     	;# 
  4386     0F1C                     	;# 
  4387     0F1D                     	;# 
  4388     0F1E                     	;# 
  4389     0F1F                     	;# 
  4390     0F20                     	;# 
  4391     0F21                     	;# 
  4392     0F22                     	;# 
  4393     0F23                     	;# 
  4394     0FE4                     	;# 
  4395     0FE5                     	;# 
  4396     0FE6                     	;# 
  4397     0FE7                     	;# 
  4398     0FE8                     	;# 
  4399     0FE9                     	;# 
  4400     0FEA                     	;# 
  4401     0FEB                     	;# 
  4402     0FED                     	;# 
  4403     0FEE                     	;# 
  4404     0FEF                     	;# 
  4405     0000                     	;# 
  4406     0001                     	;# 
  4407     0002                     	;# 
  4408     0003                     	;# 
  4409     0004                     	;# 
  4410     0005                     	;# 
  4411     0006                     	;# 
  4412     0007                     	;# 
  4413     0008                     	;# 
  4414     0009                     	;# 
  4415     000A                     	;# 
  4416     000B                     	;# 
  4417     000C                     	;# 
  4418     000D                     	;# 
  4419     000E                     	;# 
  4420     0010                     	;# 
  4421     0011                     	;# 
  4422     0012                     	;# 
  4423     0013                     	;# 
  4424     0014                     	;# 
  4425     0015                     	;# 
  4426     0016                     	;# 
  4427     0016                     	;# 
  4428     0017                     	;# 
  4429     0018                     	;# 
  4430     0019                     	;# 
  4431     001A                     	;# 
  4432     001A                     	;# 
  4433     001B                     	;# 
  4434     001B                     	;# 
  4435     001C                     	;# 
  4436     001D                     	;# 
  4437     001E                     	;# 
  4438     001F                     	;# 
  4439     008C                     	;# 
  4440     008D                     	;# 
  4441     008E                     	;# 
  4442     0090                     	;# 
  4443     0091                     	;# 
  4444     0092                     	;# 
  4445     0093                     	;# 
  4446     0094                     	;# 
  4447     0095                     	;# 
  4448     0096                     	;# 
  4449     0098                     	;# 
  4450     0099                     	;# 
  4451     009A                     	;# 
  4452     009B                     	;# 
  4453     009B                     	;# 
  4454     009C                     	;# 
  4455     009D                     	;# 
  4456     009E                     	;# 
  4457     009F                     	;# 
  4458     010C                     	;# 
  4459     010D                     	;# 
  4460     010E                     	;# 
  4461     0111                     	;# 
  4462     0112                     	;# 
  4463     0113                     	;# 
  4464     0114                     	;# 
  4465     0115                     	;# 
  4466     0116                     	;# 
  4467     0117                     	;# 
  4468     0118                     	;# 
  4469     0119                     	;# 
  4470     011C                     	;# 
  4471     018C                     	;# 
  4472     018D                     	;# 
  4473     018E                     	;# 
  4474     0191                     	;# 
  4475     0191                     	;# 
  4476     0192                     	;# 
  4477     0193                     	;# 
  4478     0193                     	;# 
  4479     0194                     	;# 
  4480     0195                     	;# 
  4481     0196                     	;# 
  4482     0197                     	;# 
  4483     0199                     	;# 
  4484     0199                     	;# 
  4485     0199                     	;# 
  4486     019A                     	;# 
  4487     019A                     	;# 
  4488     019A                     	;# 
  4489     019B                     	;# 
  4490     019B                     	;# 
  4491     019B                     	;# 
  4492     019B                     	;# 
  4493     019B                     	;# 
  4494     019C                     	;# 
  4495     019C                     	;# 
  4496     019C                     	;# 
  4497     019D                     	;# 
  4498     019D                     	;# 
  4499     019D                     	;# 
  4500     019E                     	;# 
  4501     019E                     	;# 
  4502     019E                     	;# 
  4503     019F                     	;# 
  4504     019F                     	;# 
  4505     019F                     	;# 
  4506     019F                     	;# 
  4507     019F                     	;# 
  4508     020C                     	;# 
  4509     020D                     	;# 
  4510     020E                     	;# 
  4511     0211                     	;# 
  4512     0211                     	;# 
  4513     0212                     	;# 
  4514     0212                     	;# 
  4515     0213                     	;# 
  4516     0213                     	;# 
  4517     0214                     	;# 
  4518     0214                     	;# 
  4519     0215                     	;# 
  4520     0215                     	;# 
  4521     0215                     	;# 
  4522     0215                     	;# 
  4523     0216                     	;# 
  4524     0216                     	;# 
  4525     0217                     	;# 
  4526     0217                     	;# 
  4527     028C                     	;# 
  4528     028D                     	;# 
  4529     028E                     	;# 
  4530     0291                     	;# 
  4531     0291                     	;# 
  4532     0292                     	;# 
  4533     0293                     	;# 
  4534     0294                     	;# 
  4535     0298                     	;# 
  4536     0298                     	;# 
  4537     0299                     	;# 
  4538     029A                     	;# 
  4539     029B                     	;# 
  4540     029E                     	;# 
  4541     030C                     	;# 
  4542     030D                     	;# 
  4543     030E                     	;# 
  4544     038C                     	;# 
  4545     038D                     	;# 
  4546     038E                     	;# 
  4547     0391                     	;# 
  4548     0392                     	;# 
  4549     0393                     	;# 
  4550     0394                     	;# 
  4551     0395                     	;# 
  4552     0396                     	;# 
  4553     0397                     	;# 
  4554     0398                     	;# 
  4555     0399                     	;# 
  4556     040E                     	;# 
  4557     0413                     	;# 
  4558     0413                     	;# 
  4559     0414                     	;# 
  4560     0414                     	;# 
  4561     0415                     	;# 
  4562     0416                     	;# 
  4563     0417                     	;# 
  4564     0418                     	;# 
  4565     041A                     	;# 
  4566     041A                     	;# 
  4567     041B                     	;# 
  4568     041B                     	;# 
  4569     041C                     	;# 
  4570     041D                     	;# 
  4571     041E                     	;# 
  4572     041F                     	;# 
  4573     0493                     	;# 
  4574     0494                     	;# 
  4575     0495                     	;# 
  4576     0496                     	;# 
  4577     049A                     	;# 
  4578     049B                     	;# 
  4579     049C                     	;# 
  4580     049D                     	;# 
  4581     058C                     	;# 
  4582     058C                     	;# 
  4583     058D                     	;# 
  4584     058E                     	;# 
  4585     058E                     	;# 
  4586     058F                     	;# 
  4587     0590                     	;# 
  4588     0590                     	;# 
  4589     0591                     	;# 
  4590     0592                     	;# 
  4591     0592                     	;# 
  4592     0593                     	;# 
  4593     0594                     	;# 
  4594     0594                     	;# 
  4595     0595                     	;# 
  4596     0596                     	;# 
  4597     0596                     	;# 
  4598     0597                     	;# 
  4599     0598                     	;# 
  4600     0599                     	;# 
  4601     059A                     	;# 
  4602     059B                     	;# 
  4603     059B                     	;# 
  4604     059C                     	;# 
  4605     059D                     	;# 
  4606     060C                     	;# 
  4607     060C                     	;# 
  4608     060D                     	;# 
  4609     060E                     	;# 
  4610     060F                     	;# 
  4611     060F                     	;# 
  4612     0610                     	;# 
  4613     0611                     	;# 
  4614     0612                     	;# 
  4615     0613                     	;# 
  4616     0614                     	;# 
  4617     0617                     	;# 
  4618     0617                     	;# 
  4619     0618                     	;# 
  4620     0619                     	;# 
  4621     061A                     	;# 
  4622     061A                     	;# 
  4623     061B                     	;# 
  4624     061C                     	;# 
  4625     0691                     	;# 
  4626     0692                     	;# 
  4627     0693                     	;# 
  4628     0694                     	;# 
  4629     0695                     	;# 
  4630     0696                     	;# 
  4631     0697                     	;# 
  4632     0699                     	;# 
  4633     069A                     	;# 
  4634     0711                     	;# 
  4635     0712                     	;# 
  4636     0713                     	;# 
  4637     0714                     	;# 
  4638     0715                     	;# 
  4639     0718                     	;# 
  4640     0718                     	;# 
  4641     0719                     	;# 
  4642     071A                     	;# 
  4643     071A                     	;# 
  4644     071B                     	;# 
  4645     071C                     	;# 
  4646     071D                     	;# 
  4647     0791                     	;# 
  4648     0791                     	;# 
  4649     0792                     	;# 
  4650     0793                     	;# 
  4651     0793                     	;# 
  4652     0794                     	;# 
  4653     0795                     	;# 
  4654     0795                     	;# 
  4655     0796                     	;# 
  4656     0797                     	;# 
  4657     0797                     	;# 
  4658     0798                     	;# 
  4659     0799                     	;# 
  4660     079A                     	;# 
  4661     080C                     	;# 
  4662     080C                     	;# 
  4663     080D                     	;# 
  4664     080E                     	;# 
  4665     080E                     	;# 
  4666     080F                     	;# 
  4667     0810                     	;# 
  4668     0810                     	;# 
  4669     0811                     	;# 
  4670     0812                     	;# 
  4671     0812                     	;# 
  4672     0813                     	;# 
  4673     0814                     	;# 
  4674     0815                     	;# 
  4675     0816                     	;# 
  4676     0817                     	;# 
  4677     0818                     	;# 
  4678     0819                     	;# 
  4679     081A                     	;# 
  4680     081A                     	;# 
  4681     081B                     	;# 
  4682     081C                     	;# 
  4683     081C                     	;# 
  4684     081D                     	;# 
  4685     088C                     	;# 
  4686     088D                     	;# 
  4687     088E                     	;# 
  4688     088F                     	;# 
  4689     088F                     	;# 
  4690     0890                     	;# 
  4691     0891                     	;# 
  4692     0892                     	;# 
  4693     0893                     	;# 
  4694     0893                     	;# 
  4695     0894                     	;# 
  4696     0895                     	;# 
  4697     0896                     	;# 
  4698     0897                     	;# 
  4699     0897                     	;# 
  4700     0898                     	;# 
  4701     0899                     	;# 
  4702     0D8C                     	;# 
  4703     0D8C                     	;# 
  4704     0D8D                     	;# 
  4705     0D8E                     	;# 
  4706     0D8F                     	;# 
  4707     0D8F                     	;# 
  4708     0D90                     	;# 
  4709     0D91                     	;# 
  4710     0D92                     	;# 
  4711     0D92                     	;# 
  4712     0D93                     	;# 
  4713     0D94                     	;# 
  4714     0D95                     	;# 
  4715     0D95                     	;# 
  4716     0D96                     	;# 
  4717     0D97                     	;# 
  4718     0D98                     	;# 
  4719     0D99                     	;# 
  4720     0D9A                     	;# 
  4721     0D9B                     	;# 
  4722     0D9C                     	;# 
  4723     0D9D                     	;# 
  4724     0D9E                     	;# 
  4725     0D9E                     	;# 
  4726     0D9F                     	;# 
  4727     0DA0                     	;# 
  4728     0DA1                     	;# 
  4729     0DA1                     	;# 
  4730     0DA2                     	;# 
  4731     0DA3                     	;# 
  4732     0DA4                     	;# 
  4733     0DA4                     	;# 
  4734     0DA5                     	;# 
  4735     0DA6                     	;# 
  4736     0DA7                     	;# 
  4737     0DA7                     	;# 
  4738     0DA8                     	;# 
  4739     0DA9                     	;# 
  4740     0DAA                     	;# 
  4741     0DAB                     	;# 
  4742     0DAC                     	;# 
  4743     0DAD                     	;# 
  4744     0DAE                     	;# 
  4745     0DAF                     	;# 
  4746     0E0F                     	;# 
  4747     0E10                     	;# 
  4748     0E11                     	;# 
  4749     0E12                     	;# 
  4750     0E13                     	;# 
  4751     0E14                     	;# 
  4752     0E15                     	;# 
  4753     0E16                     	;# 
  4754     0E17                     	;# 
  4755     0E17                     	;# 
  4756     0E18                     	;# 
  4757     0E18                     	;# 
  4758     0E19                     	;# 
  4759     0E1A                     	;# 
  4760     0E1B                     	;# 
  4761     0E1B                     	;# 
  4762     0E1C                     	;# 
  4763     0E1D                     	;# 
  4764     0E1E                     	;# 
  4765     0E1E                     	;# 
  4766     0E1F                     	;# 
  4767     0E20                     	;# 
  4768     0E21                     	;# 
  4769     0E22                     	;# 
  4770     0E23                     	;# 
  4771     0E24                     	;# 
  4772     0E25                     	;# 
  4773     0E26                     	;# 
  4774     0E27                     	;# 
  4775     0E28                     	;# 
  4776     0E29                     	;# 
  4777     0E2A                     	;# 
  4778     0E2B                     	;# 
  4779     0E2C                     	;# 
  4780     0E2D                     	;# 
  4781     0E2E                     	;# 
  4782     0E90                     	;# 
  4783     0E91                     	;# 
  4784     0E92                     	;# 
  4785     0E94                     	;# 
  4786     0E95                     	;# 
  4787     0E9C                     	;# 
  4788     0E9D                     	;# 
  4789     0E9E                     	;# 
  4790     0E9F                     	;# 
  4791     0EA0                     	;# 
  4792     0EA1                     	;# 
  4793     0EA2                     	;# 
  4794     0EA3                     	;# 
  4795     0EA4                     	;# 
  4796     0EA5                     	;# 
  4797     0EA6                     	;# 
  4798     0EA7                     	;# 
  4799     0F0F                     	;# 
  4800     0F10                     	;# 
  4801     0F11                     	;# 
  4802     0F12                     	;# 
  4803     0F13                     	;# 
  4804     0F14                     	;# 
  4805     0F15                     	;# 
  4806     0F16                     	;# 
  4807     0F17                     	;# 
  4808     0F18                     	;# 
  4809     0F19                     	;# 
  4810     0F1A                     	;# 
  4811     0F1B                     	;# 
  4812     0F1C                     	;# 
  4813     0F1D                     	;# 
  4814     0F1E                     	;# 
  4815     0F1F                     	;# 
  4816     0F20                     	;# 
  4817     0F21                     	;# 
  4818     0F22                     	;# 
  4819     0F23                     	;# 
  4820     0FE4                     	;# 
  4821     0FE5                     	;# 
  4822     0FE6                     	;# 
  4823     0FE7                     	;# 
  4824     0FE8                     	;# 
  4825     0FE9                     	;# 
  4826     0FEA                     	;# 
  4827     0FEB                     	;# 
  4828     0FED                     	;# 
  4829     0FEE                     	;# 
  4830     0FEF                     	;# 
  4831                           
  4832 ;; Function _I2C1_Deinitialize is unused but had its address taken
  4833     0000                     
  4834 ;; Function _I2C1_WriteRead is unused but had its address taken
  4835     0000                     
  4836 ;; Function _I2C1_ErrorGet is unused but had its address taken
  4837     0000                     
  4838 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  4839     0000                     
  4840 ;; Function _EUSART_Deinitialize is unused but had its address taken
  4841     0000                     
  4842 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  4843     0000                     
  4844 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  4845     0000                     
  4846 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  4847     0000                     
  4848 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  4849     0000                     
  4850 ;; Function _EUSART_IsTxDone is unused but had its address taken
  4851     0000                     
  4852 ;; Function _EUSART_ErrorGet is unused but had its address taken
  4853     0000                     
  4854                           	psect	idataBANK0
  4855     0D99                     __pidataBANK0:
  4856                           
  4857                           ;initializer for _kaps
  4858     0D99  3451               	retlw	81
  4859     0D9A  3400               	retlw	0
  4860     0D9B  3400               	retlw	0
  4861     0D9C  3400               	retlw	0
  4862     0D9D  3400               	retlw	0
  4863     0D9E  3400               	retlw	0
  4864     0D9F  3400               	retlw	0
  4865                           
  4866                           	psect	idataBANK1
  4867     0E87                     __pidataBANK1:
  4868                           
  4869                           ;initializer for _sspas
  4870     0E87  3401               	retlw	1
  4871     0E88  3400               	retlw	0
  4872     0E89  3400               	retlw	0
  4873     0E8A  3400               	retlw	0
  4874     0E8B  3400               	retlw	0
  4875     0E8C  3400               	retlw	0
  4876     0E8D  3400               	retlw	0
  4877     0E8E  3400               	retlw	0
  4878     0E8F  3401               	retlw	1
  4879     0E90  3400               	retlw	0
  4880     0E91  3400               	retlw	0
  4881     0E92  3400               	retlw	0
  4882     0E93  3400               	retlw	0
  4883     0E94  3400               	retlw	0
  4884     0E95  3400               	retlw	0
  4885     0E96  3400               	retlw	0
  4886     0E97  3401               	retlw	1
  4887     0E98  3400               	retlw	0
  4888     0E99  3400               	retlw	0
  4889     0E9A  3400               	retlw	0
  4890     0E9B  3400               	retlw	0
  4891     0E9C  3400               	retlw	0
  4892     0E9D  3400               	retlw	0
  4893     0E9E  3400               	retlw	0
  4894                           
  4895                           	psect	stringtext1
  4896     076F                     __pstringtext1:
  4897     076F                     _UART:
  4898     076F  34B9               	retlw	low _EUSART_Initialize
  4899     0770  340E               	retlw	high _EUSART_Initialize
  4900     0771  3400               	retlw	0
  4901     0772  3400               	retlw	0
  4902     0773  34AA               	retlw	low _EUSART_Read
  4903     0774  340F               	retlw	high _EUSART_Read
  4904     0775  3429               	retlw	low _EUSART_Write
  4905     0776  340D               	retlw	high _EUSART_Write
  4906     0777  343B               	retlw	low _EUSART_IsRxReady
  4907     0778  340D               	retlw	high _EUSART_IsRxReady
  4908     0779  3418               	retlw	low _EUSART_IsTxReady
  4909     077A  340E               	retlw	high _EUSART_IsTxReady
  4910     077B  3400               	retlw	0
  4911     077C  3400               	retlw	0
  4912     077D  3400               	retlw	0
  4913     077E  3400               	retlw	0
  4914     077F  3400               	retlw	0
  4915     0780  3400               	retlw	0
  4916     0781  3400               	retlw	0
  4917     0782  3400               	retlw	0
  4918     0783  3400               	retlw	0
  4919     0784  3400               	retlw	0
  4920     0785  3400               	retlw	0
  4921     0786  3400               	retlw	0
  4922     0787  3400               	retlw	0
  4923     0788  3400               	retlw	0
  4924     0789  3400               	retlw	0
  4925     078A  3400               	retlw	0
  4926     078B  3400               	retlw	0
  4927     078C  3400               	retlw	0
  4928     078D  3400               	retlw	0
  4929     078E  3400               	retlw	0
  4930     078F  3400               	retlw	0
  4931     0790  3400               	retlw	0
  4932     0791  3400               	retlw	0
  4933     0792  3400               	retlw	0
  4934     0793  3400               	retlw	0
  4935     0794  3400               	retlw	0
  4936     0795  3400               	retlw	0
  4937     0796  3400               	retlw	0
  4938     0797  34C3               	retlw	low _EUSART_FramingErrorCallbackRegister
  4939     0798  340D               	retlw	high _EUSART_FramingErrorCallbackRegister
  4940     0799  34F1               	retlw	low _EUSART_OverrunErrorCallbackRegister
  4941     079A  340D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  4942     079B  3400               	retlw	0
  4943     079C  3400               	retlw	0
  4944     079D  3400               	retlw	0
  4945     079E  3400               	retlw	0
  4946     079F                     __end_of_UART:
  4947                           
  4948                           	psect	stringtext2
  4949     07FB                     __pstringtext2:
  4950     07FB                     _I2C_Host:
  4951     07FB  3471               	retlw	low _I2C1_Initialize
  4952     07FC  340E               	retlw	high _I2C1_Initialize
  4953     07FD  3400               	retlw	0
  4954     07FE  3400               	retlw	0
  4955     07FF  34D6               	retlw	low _I2C1_Write
  4956     0800  340E               	retlw	high _I2C1_Write
  4957     0801  34F4               	retlw	low _I2C1_Read
  4958     0802  340E               	retlw	high _I2C1_Read
  4959     0803  3400               	retlw	0
  4960     0804  3400               	retlw	0
  4961     0805  3400               	retlw	0
  4962     0806  3400               	retlw	0
  4963     0807  3400               	retlw	0
  4964     0808  3400               	retlw	0
  4965     0809  3427               	retlw	low _I2C1_IsBusy
  4966     080A  340E               	retlw	high _I2C1_IsBusy
  4967     080B  34FD               	retlw	low _I2C1_CallbackRegister
  4968     080C  340D               	retlw	high _I2C1_CallbackRegister
  4969     080D  3400               	retlw	0
  4970     080E  3400               	retlw	0
  4971     080F                     __end_of_I2C_Host:
  4972                           
  4973                           	psect	stringtext3
  4974     080F                     __pstringtext3:
  4975     080F                     _i2c1_eventTable:
  4976     080F  3419               	retlw	low _I2C1_EVENT_IDLE
  4977     0810  340D               	retlw	high _I2C1_EVENT_IDLE
  4978     0811  34A0               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  4979     0812  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  4980     0813  346F               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  4981     0814  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  4982     0815  34D4               	retlw	low _I2C1_EVENT_TX
  4983     0816  340F               	retlw	high _I2C1_EVENT_TX
  4984     0817  3463               	retlw	low _I2C1_EVENT_RX
  4985     0818  3406               	retlw	high _I2C1_EVENT_RX
  4986     0819  3445               	retlw	low _I2C1_EVENT_NACK
  4987     081A  340D               	retlw	high _I2C1_EVENT_NACK
  4988     081B  344B               	retlw	low _I2C1_EVENT_ERROR
  4989     081C  340D               	retlw	high _I2C1_EVENT_ERROR
  4990     081D  34A8               	retlw	low _I2C1_EVENT_STOP
  4991     081E  340D               	retlw	high _I2C1_EVENT_STOP
  4992     081F  3476               	retlw	low _I2C1_EVENT_RESET
  4993     0820  340D               	retlw	high _I2C1_EVENT_RESET
  4994     0821                     __end_of_i2c1_eventTable:
  4995                           
  4996                           	psect	nvBANK1
  4997     00CD                     __pnvBANK1:
  4998     00CD                     _ADC_InterruptHandler:
  4999     00CD                     	ds	2
  5000     000B                     _INTCONbits	set	11
  5001     0011                     _PIR2bits	set	17
  5002     0010                     _PIR1bits	set	16
  5003     0095                     _OPTION_REGbits	set	149
  5004     008E                     _TRISC	set	142
  5005     008D                     _TRISB	set	141
  5006     008C                     _TRISA	set	140
  5007     0098                     _OSCTUNE	set	152
  5008     0099                     _OSCCON	set	153
  5009     0091                     _PIE2bits	set	145
  5010     009D                     _ADCON0bits	set	157
  5011     0090                     _PIE1bits	set	144
  5012     009D                     _ADCON0	set	157
  5013     009F                     _ADCON2	set	159
  5014     009C                     _ADRESH	set	156
  5015     009B                     _ADRESL	set	155
  5016     009E                     _ADCON1	set	158
  5017     010E                     _LATCbits	set	270
  5018     010E                     _LATC	set	270
  5019     010D                     _LATB	set	269
  5020     010C                     _LATA	set	268
  5021     0116                     _BORCON	set	278
  5022     019A                     _TX1REG	set	410
  5023     0199                     _RC1REG	set	409
  5024     019F                     _BAUD1CONbits	set	415
  5025     019E                     _TX1STAbits	set	414
  5026     019D                     _RC1STAbits	set	413
  5027     019C                     _SPBRGH	set	412
  5028     019B                     _SPBRGL	set	411
  5029     019E                     _TX1STA	set	414
  5030     019D                     _RC1STA	set	413
  5031     019F                     _BAUD1CON	set	415
  5032     018E                     _ANSELC	set	398
  5033     018D                     _ANSELB	set	397
  5034     018C                     _ANSELA	set	396
  5035     020E                     _WPUC	set	526
  5036     020D                     _WPUB	set	525
  5037     020C                     _WPUA	set	524
  5038     0216                     _SSP1CON2bits	set	534
  5039     0211                     _SSP1BUF	set	529
  5040     0214                     _SSP1STATbits	set	532
  5041     0215                     _SSP1CON1bits	set	533
  5042     0212                     _SSP1ADD	set	530
  5043     0217                     _SSP1CON3	set	535
  5044     0216                     _SSP1CON2	set	534
  5045     0215                     _SSP1CON1	set	533
  5046     0214                     _SSP1STAT	set	532
  5047     028E                     _ODCONC	set	654
  5048     028D                     _ODCONB	set	653
  5049     028C                     _ODCONA	set	652
  5050     030E                     _SLRCONC	set	782
  5051     030D                     _SLRCONB	set	781
  5052     030C                     _SLRCONA	set	780
  5053     0399                     _IOCCF	set	921
  5054     0398                     _IOCCN	set	920
  5055     0397                     _IOCCP	set	919
  5056     0396                     _IOCBF	set	918
  5057     0395                     _IOCBN	set	917
  5058     0394                     _IOCBP	set	916
  5059     0393                     _IOCAF	set	915
  5060     0392                     _IOCAN	set	914
  5061     0391                     _IOCAP	set	913
  5062     038E                     _INLVLC	set	910
  5063     038D                     _INLVLB	set	909
  5064     038C                     _INLVLA	set	908
  5065     0E21                     _SSPDATPPS	set	3617
  5066     0E20                     _SSPCLKPPS	set	3616
  5067     0E24                     _RXPPS	set	3620
  5068     0E9D                     _RB5PPS	set	3741
  5069     0E9E                     _RB6PPS	set	3742
  5070     0EA2                     _RC2PPS	set	3746
  5071                           
  5072                           	psect	cinit
  5073     0038                     start_initialization:	
  5074                           ; #config settings
  5075                           
  5076     0038                     __initialization:
  5077                           
  5078                           ; Initialize objects allocated to BANK0
  5079     0038  3099               	movlw	low __pidataBANK0
  5080     0039  0084               	movwf	4
  5081     003A  308D               	movlw	(high __pidataBANK0)| (0+128)
  5082     003B  0085               	movwf	5
  5083     003C  3066               	movlw	low __pdataBANK0
  5084     003D  0086               	movwf	6
  5085     003E  3000               	movlw	high __pdataBANK0
  5086     003F  0087               	movwf	7
  5087     0040  3007               	movlw	7
  5088     0041  318D  2569  3180   	fcall	init_ram
  5089                           
  5090                           ; Initialize objects allocated to BANK1
  5091     0044  3087               	movlw	low __pidataBANK1
  5092     0045  0084               	movwf	4
  5093     0046  308E               	movlw	(high __pidataBANK1)| (0+128)
  5094     0047  0085               	movwf	5
  5095     0048  30A0               	movlw	low __pdataBANK1
  5096     0049  0086               	movwf	6
  5097     004A  3000               	movlw	high __pdataBANK1
  5098     004B  0087               	movwf	7
  5099     004C  3018               	movlw	24
  5100     004D  318D  2569  3180   	fcall	init_ram
  5101                           
  5102                           ; Clear objects allocated to COMMON
  5103     0050  01F6               	clrf	__pbssCOMMON& (0+127)
  5104     0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5105     0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5106     0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5107                           
  5108                           ; Clear objects allocated to BANK0
  5109     0054  3052               	movlw	low __pbssBANK0
  5110     0055  0084               	movwf	4
  5111     0056  3000               	movlw	high __pbssBANK0
  5112     0057  0085               	movwf	5
  5113     0058  3014               	movlw	20
  5114     0059  318D  2563  3180   	fcall	clear_ram0
  5115                           
  5116                           ; Clear objects allocated to BANK1
  5117     005C  30B8               	movlw	low __pbssBANK1
  5118     005D  0084               	movwf	4
  5119     005E  3000               	movlw	high __pbssBANK1
  5120     005F  0085               	movwf	5
  5121     0060  3015               	movlw	21
  5122     0061  318D  2563  3180   	fcall	clear_ram0
  5123     0064                     end_of_initialization:	
  5124                           ;End of C runtime variable initialization code
  5125                           
  5126     0064                     __end_of__initialization:
  5127     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5128     0065  0020               	movlb	0
  5129     0066  318F  2F39         	ljmp	_main	;jump to C main() function
  5130                           
  5131                           	psect	bssCOMMON
  5132     0076                     __pbssCOMMON:
  5133     0076                     _EUSART_FramingErrorHandler:
  5134     0076                     	ds	2
  5135     0078                     _INT_InterruptHandler:
  5136     0078                     	ds	2
  5137                           
  5138                           	psect	bssBANK0
  5139     0052                     __pbssBANK0:
  5140     0052                     _i2c1Status:
  5141     0052                     	ds	12
  5142     005E                     _parser:
  5143     005E                     	ds	8
  5144                           
  5145                           	psect	dataBANK0
  5146     0066                     __pdataBANK0:
  5147     0066                     _kaps:
  5148     0066                     	ds	7
  5149                           
  5150                           	psect	bssBANK1
  5151     00B8                     __pbssBANK1:
  5152     00B8                     KAPS_getPos@F9701:
  5153     00B8                     	ds	4
  5154     00BC                     _EUSART_OverrunErrorHandler:
  5155     00BC                     	ds	2
  5156     00BE                     _eusartRxLastError:
  5157     00BE                     	ds	2
  5158     00C0                     _I2C1_Callback:
  5159     00C0                     	ds	2
  5160     00C2                     ProcessMsg@payload:
  5161     00C2                     	ds	6
  5162     00C8                     _parserDataBuffer:
  5163     00C8                     	ds	5
  5164                           
  5165                           	psect	dataBANK1
  5166     00A0                     __pdataBANK1:
  5167     00A0                     _sspas:
  5168     00A0                     	ds	24
  5169                           
  5170                           	psect	inittext
  5171     0D69                     init_ram:
  5172     0D69  00FE               	movwf	btemp
  5173     0D6A                     initloop:
  5174     0D6A  0012               	moviw fsr0++
  5175     0D6B  001E               	movwi fsr1++
  5176     0D6C  0BFE               	decfsz	btemp,f
  5177     0D6D  2D6A               	goto	initloop
  5178     0D6E  3400               	retlw	0
  5179                           
  5180                           	psect	clrtext
  5181     0D63                     clear_ram0:	
  5182                           ;	Called with FSR0 containing the base address, and
  5183                           ;	WREG with the size to clear
  5184                           
  5185     0D63  0064               	clrwdt	;clear the watchdog before getting into this loop
  5186     0D64                     clrloop0:
  5187     0D64  0180               	clrf	0	;clear RAM location pointed to by FSR
  5188     0D65  3101               	addfsr 0,1
  5189     0D66  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5190     0D67  2D64               	goto	clrloop0	;have we reached the end yet?
  5191     0D68  3400               	retlw	0	;all done for this memory range, return
  5192                           
  5193                           	psect	cstackCOMMON
  5194     0070                     __pcstackCOMMON:
  5195     0070                     ?_ADC_DefaultInterruptHandler:
  5196     0070                     ??_ADC_DefaultInterruptHandler:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199     0070                     ?_I2C1_Initialize:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202     0070                     ?_I2C1_IsBusy:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205     0070                     ?_I2C1_EVENT_IDLE:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208     0070                     ??_I2C1_EVENT_IDLE:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220     0070                     ?_I2C1_EVENT_TX:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223     0070                     ?_I2C1_EVENT_RX:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226     0070                     ??_I2C1_EVENT_RX:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229     0070                     ?_I2C1_EVENT_NACK:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232     0070                     ??_I2C1_EVENT_NACK:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235     0070                     ?_I2C1_EVENT_ERROR:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238     0070                     ??_I2C1_EVENT_ERROR:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241     0070                     ?_I2C1_EVENT_STOP:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244     0070                     ??_I2C1_EVENT_STOP:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247     0070                     ?_I2C1_EVENT_RESET:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250     0070                     ??_I2C1_EVENT_RESET:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253     0070                     ?_I2C1_InterruptsEnable:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256     0070                     ?_I2C1_DefaultCallback:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259     0070                     ??_I2C1_DefaultCallback:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262     0070                     ?_I2C1_WriteStart:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265     0070                     ?_I2C1_ReadStart:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268     0070                     ?_I2C1_EventHandler:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271     0070                     ?_I2C1_ErrorEventHandler:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274     0070                     ?_I2C1_StartSend:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277     0070                     ?_I2C1_InterruptClear:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280     0070                     ??_I2C1_InterruptClear:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283     0070                     ?_I2C1_ErrorInterruptClear:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286     0070                     ??_I2C1_ErrorInterruptClear:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289     0070                     ?_I2C1_StatusFlagsClear:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292     0070                     ??_I2C1_StatusFlagsClear:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295     0070                     ?_I2C1_IsAddr:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298     0070                     ??_I2C1_IsAddr:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301     0070                     ?_I2C1_IsNack:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304     0070                     ??_I2C1_IsNack:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307     0070                     ?_I2C1_IsData:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310     0070                     ??_I2C1_IsData:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313     0070                     ?_I2C1_DataTransmit:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316     0070                     ??_I2C1_DataTransmit:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319     0070                     ?_I2C1_RestartEnable:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322     0070                     ??_I2C1_RestartEnable:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325     0070                     ?_I2C1_IsRxBufFull:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328     0070                     ??_I2C1_IsRxBufFull:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331     0070                     ?_I2C1_DataReceive:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334     0070                     ??_I2C1_DataReceive:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337     0070                     ?_I2C1_AckSend:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340     0070                     ??_I2C1_AckSend:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343     0070                     ?_I2C1_RestartDisable:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346     0070                     ??_I2C1_RestartDisable:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349     0070                     ?_I2C1_NackSend:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352     0070                     ??_I2C1_NackSend:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355     0070                     ?_I2C1_ReceiveEnable:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358     0070                     ??_I2C1_ReceiveEnable:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361     0070                     ?_I2C1_StopSend:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364     0070                     ??_I2C1_StopSend:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367     0070                     ?_I2C1_BusReset:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370     0070                     ??_I2C1_BusReset:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373     0070                     ?_EUSART_Initialize:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376     0070                     ?_EUSART_Read:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379     0070                     ?_EUSART_IsRxReady:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382     0070                     ?_EUSART_IsTxReady:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391     0070                     ?_SSPA_getTemp:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394     0070                     ?_SSPA_getPOut:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397     0070                     ?_KAPS_getStatus:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400     0070                     ?_KAPS_getPos:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403     0070                     ?_KAPS_getIndex:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406     0070                     ?_KAPS_GoToIdx:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409     0070                     ?_KAPS_setRelPos:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412     0070                     ?_Parse:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415     0070                     ?_ADC_Initialize:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418     0070                     ?_ADC_SelectChannel:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421     0070                     ?_ADC_StartConversion:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424     0070                     ?_ADC_IsConversionDone:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427     0070                     ?_ADC_ISR:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430     0070                     ??_ADC_ISR:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433     0070                     ?_I2C1_ISR:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436     0070                     ?_I2C1_ERROR_ISR:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439     0070                     ?_I2C1_Close:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442     0070                     ??_I2C1_Close:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445     0070                     ?_CLOCK_Initialize:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448     0070                     ?_PIN_MANAGER_Initialize:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451     0070                     ?_INTERRUPT_Initialize:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454     0070                     ?_INTERRUPT_InterruptManager:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457     0070                     ?_SYSTEM_Initialize:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460     0070                     ?_SendSync:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463     0070                     ?_SendNack:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466     0070                     ?_main:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469     0070                     I2C1_EVENT_NACK@retEventState:	
  5470                           ; 2 bytes @ 0x0
  5471                           
  5472     0070                     I2C1_EVENT_ERROR@retEventState:	
  5473                           ; 1 bytes @ 0x0
  5474                           
  5475     0070                     I2C1_DataTransmit@data:	
  5476                           ; 1 bytes @ 0x0
  5477                           
  5478                           
  5479                           ; 1 bytes @ 0x0
  5480     0070                     	ds	1
  5481     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  5482     0071                     ??_I2C1_EVENT_TX:	
  5483                           ; 1 bytes @ 0x1
  5484                           
  5485     0071                     I2C1_EVENT_TX@retEventState:	
  5486                           ; 1 bytes @ 0x1
  5487                           
  5488     0071                     I2C1_EVENT_RX@retEventState:	
  5489                           ; 1 bytes @ 0x1
  5490                           
  5491                           
  5492                           ; 1 bytes @ 0x1
  5493     0071                     	ds	1
  5494     0072                     ??_I2C1_EventHandler:
  5495     0072                     ??_I2C1_ErrorEventHandler:	
  5496                           ; 1 bytes @ 0x2
  5497                           
  5498                           
  5499                           ; 1 bytes @ 0x2
  5500     0072                     	ds	2
  5501     0074                     ?_ADC_SetInterruptHandler:
  5502     0074                     ??_I2C1_IsBusy:	
  5503                           ; 1 bytes @ 0x4
  5504                           
  5505     0074                     ?_I2C1_CallbackRegister:	
  5506                           ; 1 bytes @ 0x4
  5507                           
  5508     0074                     ??_I2C1_InterruptsEnable:	
  5509                           ; 1 bytes @ 0x4
  5510                           
  5511     0074                     ??_I2C1_WriteStart:	
  5512                           ; 1 bytes @ 0x4
  5513                           
  5514     0074                     ??_I2C1_ReadStart:	
  5515                           ; 1 bytes @ 0x4
  5516                           
  5517     0074                     ??_I2C1_StartSend:	
  5518                           ; 1 bytes @ 0x4
  5519                           
  5520     0074                     ?_INT_SetInterruptHandler:	
  5521                           ; 1 bytes @ 0x4
  5522                           
  5523     0074                     ??_EUSART_Read:	
  5524                           ; 1 bytes @ 0x4
  5525                           
  5526     0074                     ?_EUSART_Write:	
  5527                           ; 1 bytes @ 0x4
  5528                           
  5529     0074                     ??_EUSART_IsRxReady:	
  5530                           ; 1 bytes @ 0x4
  5531                           
  5532     0074                     ??_EUSART_IsTxReady:	
  5533                           ; 1 bytes @ 0x4
  5534                           
  5535     0074                     ?_EUSART_FramingErrorCallbackRegister:	
  5536                           ; 1 bytes @ 0x4
  5537                           
  5538     0074                     ?_EUSART_OverrunErrorCallbackRegister:	
  5539                           ; 1 bytes @ 0x4
  5540                           
  5541     0074                     ??_EUSART_DefaultFramingErrorCallback:	
  5542                           ; 1 bytes @ 0x4
  5543                           
  5544     0074                     ??_EUSART_DefaultOverrunErrorCallback:	
  5545                           ; 1 bytes @ 0x4
  5546                           
  5547     0074                     ??_unpackWord:	
  5548                           ; 1 bytes @ 0x4
  5549                           
  5550     0074                     ?_SSPA_setMute:	
  5551                           ; 1 bytes @ 0x4
  5552                           
  5553     0074                     ??_ADC_SelectChannel:	
  5554                           ; 1 bytes @ 0x4
  5555                           
  5556     0074                     ??_ADC_StartConversion:	
  5557                           ; 1 bytes @ 0x4
  5558                           
  5559     0074                     ??_ADC_IsConversionDone:	
  5560                           ; 1 bytes @ 0x4
  5561                           
  5562     0074                     ??_I2C1_ISR:	
  5563                           ; 1 bytes @ 0x4
  5564                           
  5565     0074                     ??_I2C1_ERROR_ISR:	
  5566                           ; 1 bytes @ 0x4
  5567                           
  5568     0074                     ??_CLOCK_Initialize:	
  5569                           ; 1 bytes @ 0x4
  5570                           
  5571     0074                     ??_PIN_MANAGER_Initialize:	
  5572                           ; 1 bytes @ 0x4
  5573                           
  5574     0074                     ??_INTERRUPT_InterruptManager:	
  5575                           ; 1 bytes @ 0x4
  5576                           
  5577     0074                     ??___lmul:	
  5578                           ; 1 bytes @ 0x4
  5579                           
  5580     0074                     ??___aldiv:	
  5581                           ; 1 bytes @ 0x4
  5582                           
  5583     0074                     ?_ADC_GetConversionResult:	
  5584                           ; 1 bytes @ 0x4
  5585                           
  5586     0074                     _I2C1_IsBusy$646:	
  5587                           ; 2 bytes @ 0x4
  5588                           
  5589     0074                     _EUSART_IsTxReady$1324:	
  5590                           ; 1 bytes @ 0x4
  5591                           
  5592     0074                     EUSART_Write@txData:	
  5593                           ; 1 bytes @ 0x4
  5594                           
  5595     0074                     SSPA_setMute@mute:	
  5596                           ; 1 bytes @ 0x4
  5597                           
  5598     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  5599                           ; 1 bytes @ 0x4
  5600                           
  5601     0074                     I2C1_CallbackRegister@callbackHandler:	
  5602                           ; 2 bytes @ 0x4
  5603                           
  5604     0074                     INT_SetInterruptHandler@InterruptHandler:	
  5605                           ; 2 bytes @ 0x4
  5606                           
  5607     0074                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  5608                           ; 2 bytes @ 0x4
  5609                           
  5610     0074                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  5611                           ; 2 bytes @ 0x4
  5612                           
  5613                           
  5614                           ; 2 bytes @ 0x4
  5615     0074                     	ds	1
  5616     0075                     ??_I2C1_Write:
  5617     0075                     ??_I2C1_Read:	
  5618                           ; 1 bytes @ 0x5
  5619                           
  5620     0075                     ??_EUSART_Write:	
  5621                           ; 1 bytes @ 0x5
  5622                           
  5623     0075                     ??_SendSync:	
  5624                           ; 1 bytes @ 0x5
  5625                           
  5626     0075                     ??_ADC2Amp:	
  5627                           ; 1 bytes @ 0x5
  5628                           
  5629     0075                     ??_ADC2dBm:	
  5630                           ; 1 bytes @ 0x5
  5631                           
  5632     0075                     ADC_SelectChannel@channel:	
  5633                           ; 1 bytes @ 0x5
  5634                           
  5635     0075                     I2C1_Read@retStatus:	
  5636                           ; 1 bytes @ 0x5
  5637                           
  5638     0075                     SSPA_setMute@band:	
  5639                           ; 1 bytes @ 0x5
  5640                           
  5641                           
  5642                           ; 1 bytes @ 0x5
  5643     0075                     	ds	1
  5644     0076                     ??_ADC_SetInterruptHandler:
  5645     0076                     ??_I2C1_Initialize:	
  5646                           ; 1 bytes @ 0x6
  5647                           
  5648     0076                     ??_I2C1_CallbackRegister:	
  5649                           ; 1 bytes @ 0x6
  5650                           
  5651     0076                     ??_INT_SetInterruptHandler:	
  5652                           ; 1 bytes @ 0x6
  5653                           
  5654     0076                     ??_EUSART_Initialize:	
  5655                           ; 1 bytes @ 0x6
  5656                           
  5657     0076                     ??_EUSART_FramingErrorCallbackRegister:	
  5658                           ; 1 bytes @ 0x6
  5659                           
  5660     0076                     ??_EUSART_OverrunErrorCallbackRegister:	
  5661                           ; 1 bytes @ 0x6
  5662                           
  5663     0076                     ??_ADC_Initialize:	
  5664                           ; 1 bytes @ 0x6
  5665                           
  5666     0076                     ??_ADC_GetConversionResult:	
  5667                           ; 1 bytes @ 0x6
  5668                           
  5669     0076                     ??_INTERRUPT_Initialize:	
  5670                           ; 1 bytes @ 0x6
  5671                           
  5672     0076                     ??_SYSTEM_Initialize:	
  5673                           ; 1 bytes @ 0x6
  5674                           
  5675     0076                     ??_main:	
  5676                           ; 1 bytes @ 0x6
  5677                           
  5678     0076                     ??_SendNack:	
  5679                           ; 1 bytes @ 0x6
  5680                           
  5681                           
  5682                           	psect	cstackBANK0
  5683     0020                     __pcstackBANK0:	
  5684                           ; 1 bytes @ 0x6
  5685                           
  5686     0020                     ?_I2C1_Write:
  5687     0020                     ?_I2C1_Read:	
  5688                           ; 1 bytes @ 0x0
  5689                           
  5690     0020                     ?_unpackWord:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693     0020                     ?_unpackLong:	
  5694                           ; 1 bytes @ 0x0
  5695                           
  5696     0020                     ??_SSPA_setMute:	
  5697                           ; 1 bytes @ 0x0
  5698                           
  5699     0020                     ?_getADCValue:	
  5700                           ; 1 bytes @ 0x0
  5701                           
  5702     0020                     ?_packLong:	
  5703                           ; 2 bytes @ 0x0
  5704                           
  5705     0020                     ?___lmul:	
  5706                           ; 4 bytes @ 0x0
  5707                           
  5708     0020                     SendSync@data:	
  5709                           ; 4 bytes @ 0x0
  5710                           
  5711     0020                     I2C1_Write@address:	
  5712                           ; 1 bytes @ 0x0
  5713                           
  5714     0020                     I2C1_Read@address:	
  5715                           ; 2 bytes @ 0x0
  5716                           
  5717     0020                     unpackWord@value:	
  5718                           ; 2 bytes @ 0x0
  5719                           
  5720     0020                     unpackLong@value:	
  5721                           ; 2 bytes @ 0x0
  5722                           
  5723     0020                     ___lmul@multiplier:	
  5724                           ; 4 bytes @ 0x0
  5725                           
  5726                           
  5727                           ; 4 bytes @ 0x0
  5728     0020                     	ds	1
  5729     0021                     ?_SendMsg:
  5730     0021                     SendMsg@data:	
  5731                           ; 1 bytes @ 0x1
  5732                           
  5733                           
  5734                           ; 1 bytes @ 0x1
  5735     0021                     	ds	1
  5736     0022                     ??_getADCValue:
  5737     0022                     I2C1_Write@data:	
  5738                           ; 1 bytes @ 0x2
  5739                           
  5740     0022                     I2C1_Read@data:	
  5741                           ; 1 bytes @ 0x2
  5742                           
  5743     0022                     unpackWord@data:	
  5744                           ; 1 bytes @ 0x2
  5745                           
  5746     0022                     SendMsg@data_len:	
  5747                           ; 1 bytes @ 0x2
  5748                           
  5749                           
  5750                           ; 1 bytes @ 0x2
  5751     0022                     	ds	1
  5752     0023                     ??_SendMsg:
  5753     0023                     I2C1_Write@dataLength:	
  5754                           ; 1 bytes @ 0x3
  5755                           
  5756     0023                     I2C1_Read@dataLength:	
  5757                           ; 2 bytes @ 0x3
  5758                           
  5759                           
  5760                           ; 2 bytes @ 0x3
  5761     0023                     	ds	1
  5762     0024                     ??_packLong:
  5763     0024                     unpackLong@data:	
  5764                           ; 1 bytes @ 0x4
  5765                           
  5766     0024                     SendMsg@sum:	
  5767                           ; 1 bytes @ 0x4
  5768                           
  5769     0024                     getADCValue@channel:	
  5770                           ; 1 bytes @ 0x4
  5771                           
  5772     0024                     ___lmul@multiplicand:	
  5773                           ; 1 bytes @ 0x4
  5774                           
  5775                           
  5776                           ; 4 bytes @ 0x4
  5777     0024                     	ds	1
  5778     0025                     ??_unpackLong:
  5779     0025                     ??_KAPS_getStatus:	
  5780                           ; 1 bytes @ 0x5
  5781                           
  5782     0025                     ??_KAPS_getIndex:	
  5783                           ; 1 bytes @ 0x5
  5784                           
  5785     0025                     ??_KAPS_GoToIdx:	
  5786                           ; 1 bytes @ 0x5
  5787                           
  5788     0025                     ??_KAPS_setRelPos:	
  5789                           ; 1 bytes @ 0x5
  5790                           
  5791     0025                     SendMsg@msg_id:	
  5792                           ; 1 bytes @ 0x5
  5793                           
  5794     0025                     getADCValue@sum:	
  5795                           ; 1 bytes @ 0x5
  5796                           
  5797                           
  5798                           ; 2 bytes @ 0x5
  5799     0025                     	ds	1
  5800     0026                     SendNack@error:
  5801                           
  5802                           ; 1 bytes @ 0x6
  5803     0026                     	ds	1
  5804     0027                     ??_Parse:
  5805     0027                     KAPS_GoToIdx@idx:	
  5806                           ; 1 bytes @ 0x7
  5807                           
  5808     0027                     KAPS_setRelPos@offset:	
  5809                           ; 1 bytes @ 0x7
  5810                           
  5811     0027                     KAPS_getStatus@reg:	
  5812                           ; 1 bytes @ 0x7
  5813                           
  5814     0027                     KAPS_getIndex@reg:	
  5815                           ; 1 bytes @ 0x7
  5816                           
  5817     0027                     getADCValue@i:	
  5818                           ; 1 bytes @ 0x7
  5819                           
  5820                           
  5821                           ; 1 bytes @ 0x7
  5822     0027                     	ds	1
  5823     0028                     KAPS_GoToIdx@reg:
  5824     0028                     KAPS_setRelPos@reg:	
  5825                           ; 1 bytes @ 0x8
  5826                           
  5827     0028                     KAPS_getStatus@data:	
  5828                           ; 1 bytes @ 0x8
  5829                           
  5830     0028                     KAPS_getIndex@data:	
  5831                           ; 1 bytes @ 0x8
  5832                           
  5833     0028                     packLong@result:	
  5834                           ; 1 bytes @ 0x8
  5835                           
  5836     0028                     ___lmul@product:	
  5837                           ; 4 bytes @ 0x8
  5838                           
  5839                           
  5840                           ; 4 bytes @ 0x8
  5841     0028                     	ds	1
  5842     0029                     Parse@data:
  5843                           
  5844                           ; 1 bytes @ 0x9
  5845     0029                     	ds	3
  5846     002C                     ?___aldiv:
  5847     002C                     packLong@data:	
  5848                           ; 4 bytes @ 0xC
  5849                           
  5850     002C                     ___aldiv@divisor:	
  5851                           ; 1 bytes @ 0xC
  5852                           
  5853                           
  5854                           ; 4 bytes @ 0xC
  5855     002C                     	ds	1
  5856     002D                     ??_KAPS_getPos:
  5857     002D                     ?_KAPS_setAbsPos:	
  5858                           ; 1 bytes @ 0xD
  5859                           
  5860     002D                     ?_KAPS_StorePos:	
  5861                           ; 1 bytes @ 0xD
  5862                           
  5863     002D                     KAPS_setAbsPos@pos:	
  5864                           ; 1 bytes @ 0xD
  5865                           
  5866     002D                     KAPS_StorePos@pos:	
  5867                           ; 4 bytes @ 0xD
  5868                           
  5869                           
  5870                           ; 4 bytes @ 0xD
  5871     002D                     	ds	2
  5872     002F                     KAPS_getPos@data:
  5873                           
  5874                           ; 4 bytes @ 0xF
  5875     002F                     	ds	1
  5876     0030                     ___aldiv@dividend:
  5877                           
  5878                           ; 4 bytes @ 0x10
  5879     0030                     	ds	1
  5880     0031                     ??_KAPS_setAbsPos:
  5881     0031                     ??_KAPS_StorePos:	
  5882                           ; 1 bytes @ 0x11
  5883                           
  5884                           
  5885                           ; 1 bytes @ 0x11
  5886     0031                     	ds	2
  5887     0033                     KAPS_getPos@reg:
  5888     0033                     KAPS_setAbsPos@data:	
  5889                           ; 1 bytes @ 0x13
  5890                           
  5891     0033                     KAPS_StorePos@data:	
  5892                           ; 4 bytes @ 0x13
  5893                           
  5894                           
  5895                           ; 5 bytes @ 0x13
  5896     0033                     	ds	1
  5897     0034                     ___aldiv@counter:
  5898                           
  5899                           ; 1 bytes @ 0x14
  5900     0034                     	ds	1
  5901     0035                     ___aldiv@sign:
  5902                           
  5903                           ; 1 bytes @ 0x15
  5904     0035                     	ds	1
  5905     0036                     ___aldiv@quotient:
  5906                           
  5907                           ; 4 bytes @ 0x16
  5908     0036                     	ds	1
  5909     0037                     KAPS_setAbsPos@reg:
  5910                           
  5911                           ; 1 bytes @ 0x17
  5912     0037                     	ds	1
  5913     0038                     KAPS_StorePos@reg:
  5914                           
  5915                           ; 1 bytes @ 0x18
  5916     0038                     	ds	1
  5917     0039                     KAPS_StorePos@idx:
  5918                           
  5919                           ; 1 bytes @ 0x19
  5920     0039                     	ds	1
  5921     003A                     ?_ADC2dBm:
  5922     003A                     ?_ADC2Celsius:	
  5923                           ; 1 bytes @ 0x1A
  5924                           
  5925     003A                     ?_ADC2Amp:	
  5926                           ; 2 bytes @ 0x1A
  5927                           
  5928     003A                     ADC2Celsius@v:	
  5929                           ; 4 bytes @ 0x1A
  5930                           
  5931     003A                     ADC2Amp@v:	
  5932                           ; 2 bytes @ 0x1A
  5933                           
  5934     003A                     ADC2dBm@v:	
  5935                           ; 2 bytes @ 0x1A
  5936                           
  5937                           
  5938                           ; 2 bytes @ 0x1A
  5939     003A                     	ds	2
  5940     003C                     ??_ADC2Celsius:
  5941     003C                     ADC2dBm@value:	
  5942                           ; 1 bytes @ 0x1C
  5943                           
  5944                           
  5945                           ; 4 bytes @ 0x1C
  5946     003C                     	ds	2
  5947     003E                     ADC2Amp@value:
  5948                           
  5949                           ; 4 bytes @ 0x1E
  5950     003E                     	ds	2
  5951     0040                     ADC2Celsius@value:
  5952     0040                     ADC2dBm@result:	
  5953                           ; 4 bytes @ 0x20
  5954                           
  5955                           
  5956                           ; 4 bytes @ 0x20
  5957     0040                     	ds	2
  5958     0042                     ADC2Amp@result:
  5959                           
  5960                           ; 4 bytes @ 0x22
  5961     0042                     	ds	2
  5962     0044                     ADC2Celsius@result:
  5963                           
  5964                           ; 4 bytes @ 0x24
  5965     0044                     	ds	2
  5966     0046                     ??_SSPA_getPOut:
  5967                           
  5968                           ; 1 bytes @ 0x26
  5969     0046                     	ds	2
  5970     0048                     ??_SSPA_getTemp:
  5971     0048                     SSPA_getPOut@adc_value:	
  5972                           ; 1 bytes @ 0x28
  5973                           
  5974                           
  5975                           ; 2 bytes @ 0x28
  5976     0048                     	ds	2
  5977     004A                     SSPA_getPOut@band:
  5978     004A                     SSPA_getTemp@adc_value:	
  5979                           ; 1 bytes @ 0x2A
  5980                           
  5981                           
  5982                           ; 2 bytes @ 0x2A
  5983     004A                     	ds	2
  5984     004C                     SSPA_getTemp@channel:
  5985                           
  5986                           ; 1 bytes @ 0x2C
  5987     004C                     	ds	1
  5988     004D                     SSPA_getTemp@band:
  5989                           
  5990                           ; 1 bytes @ 0x2D
  5991     004D                     	ds	1
  5992     004E                     ?_ProcessMsg:
  5993     004E                     ProcessMsg@data:	
  5994                           ; 1 bytes @ 0x2E
  5995                           
  5996                           
  5997                           ; 1 bytes @ 0x2E
  5998     004E                     	ds	1
  5999     004F                     ??_ProcessMsg:
  6000                           
  6001                           ; 1 bytes @ 0x2F
  6002     004F                     	ds	1
  6003     0050                     ProcessMsg@msg_id:
  6004                           
  6005                           ; 1 bytes @ 0x30
  6006     0050                     	ds	1
  6007     0051                     main@data:
  6008                           
  6009                           ; 1 bytes @ 0x31
  6010     0051                     	ds	1
  6011                           
  6012                           	psect	maintext
  6013     0F39                     __pmaintext:	
  6014 ;;
  6015 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6016 ;;
  6017 ;; *************** function _main *****************
  6018 ;; Defined at:
  6019 ;;		line 115 in file "main.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  data            1   49[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2  695[None  ] int 
  6026 ;; Registers used:
  6027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : B1F/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6033 ;;      Params:         0       0       0       0       0       0       0       0
  6034 ;;      Locals:         0       1       0       0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0
  6036 ;;      Totals:         0       1       0       0       0       0       0       0
  6037 ;;Total ram usage:        1 bytes
  6038 ;; Hardware stack levels required when called: 12
  6039 ;; This function calls:
  6040 ;;		_EUSART_IsRxReady
  6041 ;;		_EUSART_Read
  6042 ;;		_Parse
  6043 ;;		_ProcessMsg
  6044 ;;		_SYSTEM_Initialize
  6045 ;; This function is called by:
  6046 ;;		Startup code after reset
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050     0F39                     _main:	
  6051                           ;psect for function _main
  6052                           
  6053     0F39                     l4073:	
  6054                           ;incstack = 0
  6055                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6056                           
  6057                           
  6058                           ;main.c: 116:     SYSTEM_Initialize();
  6059     0F39  318E  264A  318F   	fcall	_SYSTEM_Initialize
  6060     0F3C                     l4075:
  6061                           
  6062                           ;main.c: 118:     (INTCONbits.GIE = 1);
  6063     0F3C  178B               	bsf	11,7	;volatile
  6064     0F3D                     l4077:
  6065                           
  6066                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6067     0F3D  170B               	bsf	11,6	;volatile
  6068     0F3E                     l4079:
  6069     0F3E                     l4081:
  6070                           
  6071                           ;main.c: 133:         if (EUSART_IsRxReady()) {
  6072     0F3E  318D  253B  318F   	fcall	_EUSART_IsRxReady
  6073     0F41  3A00               	xorlw	0
  6074     0F42  1903               	skipnz
  6075     0F43  2F45               	goto	u2061
  6076     0F44  2F46               	goto	u2060
  6077     0F45                     u2061:
  6078     0F45  2F3E               	goto	l4079
  6079     0F46                     u2060:
  6080     0F46                     l4083:
  6081                           
  6082                           ;main.c: 134:             data = EUSART_Read();
  6083     0F46  318F  27AA  318F   	fcall	_EUSART_Read
  6084     0F49  0020               	movlb	0	; select bank0
  6085     0F4A  00D1               	movwf	main@data
  6086     0F4B                     l4085:
  6087                           
  6088                           ;main.c: 136:             if (Parse(data))
  6089     0F4B  0851               	movf	main@data,w
  6090     0F4C  3181  21AC  318F   	fcall	_Parse
  6091     0F4F  3A00               	xorlw	0
  6092     0F50  1903               	skipnz
  6093     0F51  2F53               	goto	u2071
  6094     0F52  2F54               	goto	u2070
  6095     0F53                     u2071:
  6096     0F53  2F3E               	goto	l4079
  6097     0F54                     u2070:
  6098     0F54                     l4087:
  6099                           
  6100                           ;main.c: 137:                 ProcessMsg(parser.m_MsgID, parserDataBuffer);
  6101     0F54  30C8               	movlw	(low (_parserDataBuffer| 0))& (0+255)
  6102     0F55  0020               	movlb	0	; select bank0
  6103     0F56  00CE               	movwf	ProcessMsg@data
  6104     0F57  085F               	movf	_parser+1,w
  6105     0F58  3180  2068  318F   	fcall	_ProcessMsg
  6106     0F5B  2F3E               	goto	l4079
  6107     0F5C  3180  2836         	ljmp	start
  6108     0F5E                     __end_of_main:
  6109                           
  6110                           	psect	text1
  6111     0E4A                     __ptext1:	
  6112 ;; *************** function _SYSTEM_Initialize *****************
  6113 ;; Defined at:
  6114 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, pclath, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6128 ;;      Params:         0       0       0       0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 9
  6135 ;; This function calls:
  6136 ;;		_ADC_Initialize
  6137 ;;		_CLOCK_Initialize
  6138 ;;		_EUSART_Initialize
  6139 ;;		_I2C1_Initialize
  6140 ;;		_INTERRUPT_Initialize
  6141 ;;		_PIN_MANAGER_Initialize
  6142 ;; This function is called by:
  6143 ;;		_main
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147     0E4A                     _SYSTEM_Initialize:	
  6148                           ;psect for function _SYSTEM_Initialize
  6149                           
  6150     0E4A                     l3167:	
  6151                           ;incstack = 0
  6152                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6153                           
  6154                           
  6155                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  6156     0E4A  318D  25B0  318E   	fcall	_CLOCK_Initialize
  6157                           
  6158                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  6159     0E4D  3184  241D  318E   	fcall	_PIN_MANAGER_Initialize
  6160                           
  6161                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  6162     0E50  318E  265D  318E   	fcall	_ADC_Initialize
  6163                           
  6164                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  6165     0E53  318E  26B9  318E   	fcall	_EUSART_Initialize
  6166                           
  6167                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  6168     0E56  318E  2671  318E   	fcall	_I2C1_Initialize
  6169                           
  6170                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  6171     0E59  318D  25CE  318E   	fcall	_INTERRUPT_Initialize
  6172     0E5C                     l483:
  6173     0E5C  0008               	return
  6174     0E5D                     __end_of_SYSTEM_Initialize:
  6175                           
  6176                           	psect	text2
  6177     041D                     __ptext2:	
  6178 ;; *************** function _PIN_MANAGER_Initialize *****************
  6179 ;; Defined at:
  6180 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6194 ;;      Params:         0       0       0       0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0
  6196 ;;      Temps:          0       0       0       0       0       0       0       0
  6197 ;;      Totals:         0       0       0       0       0       0       0       0
  6198 ;;Total ram usage:        0 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 7
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_SYSTEM_Initialize
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208     041D                     _PIN_MANAGER_Initialize:	
  6209                           ;psect for function _PIN_MANAGER_Initialize
  6210                           
  6211     041D                     l2951:	
  6212                           ;incstack = 0
  6213                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6214                           
  6215                           
  6216                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  6217     041D  0022               	movlb	2	; select bank2
  6218     041E  018C               	clrf	12	;volatile
  6219     041F                     l2953:
  6220                           
  6221                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  6222     041F  3060               	movlw	96
  6223     0420  008D               	movwf	13	;volatile
  6224     0421                     l2955:
  6225                           
  6226                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  6227     0421  018E               	clrf	14	;volatile
  6228                           
  6229                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  6230     0422  303F               	movlw	63
  6231     0423  0021               	movlb	1	; select bank1
  6232     0424  008C               	movwf	12	;volatile
  6233                           
  6234                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  6235     0425  30F0               	movlw	240
  6236     0426  008D               	movwf	13	;volatile
  6237                           
  6238                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  6239     0427  303B               	movlw	59
  6240     0428  008E               	movwf	14	;volatile
  6241                           
  6242                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  6243     0429  3017               	movlw	23
  6244     042A  0023               	movlb	3	; select bank3
  6245     042B  008C               	movwf	12	;volatile
  6246                           
  6247                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  6248     042C  3010               	movlw	16
  6249     042D  008D               	movwf	13	;volatile
  6250                           
  6251                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  6252     042E  300D               	movlw	13
  6253     042F  008E               	movwf	14	;volatile
  6254                           
  6255                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  6256     0430  302C               	movlw	44
  6257     0431  0024               	movlb	4	; select bank4
  6258     0432  008C               	movwf	12	;volatile
  6259                           
  6260                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  6261     0433  30E0               	movlw	224
  6262     0434  008D               	movwf	13	;volatile
  6263                           
  6264                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  6265     0435  30F7               	movlw	247
  6266     0436  008E               	movwf	14	;volatile
  6267     0437                     l2957:
  6268                           
  6269                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  6270     0437  0021               	movlb	1	; select bank1
  6271     0438  1395               	bcf	21,7	;volatile
  6272     0439                     l2959:
  6273                           
  6274                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  6275     0439  0025               	movlb	5	; select bank5
  6276     043A  018C               	clrf	12	;volatile
  6277     043B                     l2961:
  6278                           
  6279                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  6280     043B  018D               	clrf	13	;volatile
  6281     043C                     l2963:
  6282                           
  6283                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  6284     043C  018E               	clrf	14	;volatile
  6285     043D                     l2965:
  6286                           
  6287                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  6288     043D  3037               	movlw	55
  6289     043E  0026               	movlb	6	; select bank6
  6290     043F  008C               	movwf	12	;volatile
  6291     0440                     l2967:
  6292                           
  6293                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  6294     0440  30F0               	movlw	240
  6295     0441  008D               	movwf	13	;volatile
  6296     0442                     l2969:
  6297                           
  6298                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  6299     0442  30FF               	movlw	255
  6300     0443  008E               	movwf	14	;volatile
  6301     0444                     l2971:
  6302                           
  6303                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  6304     0444  303F               	movlw	63
  6305     0445  0027               	movlb	7	; select bank7
  6306     0446  008C               	movwf	12	;volatile
  6307     0447                     l2973:
  6308                           
  6309                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  6310     0447  30F0               	movlw	240
  6311     0448  008D               	movwf	13	;volatile
  6312     0449                     l2975:
  6313                           
  6314                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  6315     0449  30FF               	movlw	255
  6316     044A  008E               	movwf	14	;volatile
  6317     044B                     l2977:
  6318                           
  6319                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  6320     044B  3011               	movlw	17
  6321     044C  003C               	movlb	28	; select bank28
  6322     044D  00A4               	movwf	36	;volatile
  6323     044E                     l2979:
  6324                           
  6325                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  6326     044E  3006               	movlw	6
  6327     044F  003D               	movlb	29	; select bank29
  6328     0450  00A2               	movwf	34	;volatile
  6329     0451                     l2981:
  6330                           
  6331                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  6332     0451  300E               	movlw	14
  6333     0452  003C               	movlb	28	; select bank28
  6334     0453  00A0               	movwf	32	;volatile
  6335     0454                     l2983:
  6336                           
  6337                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  6338     0454  3010               	movlw	16
  6339     0455  003D               	movlb	29	; select bank29
  6340     0456  009E               	movwf	30	;volatile
  6341     0457                     l2985:
  6342                           
  6343                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  6344     0457  300D               	movlw	13
  6345     0458  003C               	movlb	28	; select bank28
  6346     0459  00A1               	movwf	33	;volatile
  6347     045A                     l2987:
  6348                           
  6349                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  6350     045A  3011               	movlw	17
  6351     045B  003D               	movlb	29	; select bank29
  6352     045C  009D               	movwf	29	;volatile
  6353     045D                     l2989:
  6354                           
  6355                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  6356     045D  0027               	movlb	7	; select bank7
  6357     045E  0191               	clrf	17	;volatile
  6358     045F                     l2991:
  6359                           
  6360                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  6361     045F  0192               	clrf	18	;volatile
  6362     0460                     l2993:
  6363                           
  6364                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  6365     0460  0193               	clrf	19	;volatile
  6366     0461                     l2995:
  6367                           
  6368                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  6369     0461  0194               	clrf	20	;volatile
  6370     0462                     l2997:
  6371                           
  6372                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  6373     0462  0195               	clrf	21	;volatile
  6374     0463                     l2999:
  6375                           
  6376                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  6377     0463  0196               	clrf	22	;volatile
  6378     0464                     l3001:
  6379                           
  6380                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  6381     0464  0197               	clrf	23	;volatile
  6382     0465                     l3003:
  6383                           
  6384                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  6385     0465  0198               	clrf	24	;volatile
  6386     0466                     l3005:
  6387                           
  6388                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  6389     0466  0199               	clrf	25	;volatile
  6390     0467                     l410:
  6391     0467  0008               	return
  6392     0468                     __end_of_PIN_MANAGER_Initialize:
  6393                           
  6394                           	psect	text3
  6395     0DCE                     __ptext3:	
  6396 ;; *************** function _INTERRUPT_Initialize *****************
  6397 ;; Defined at:
  6398 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;		None
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0, pclath, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6412 ;;      Params:         0       0       0       0       0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0
  6415 ;;      Totals:         0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:        0 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 8
  6419 ;; This function calls:
  6420 ;;		_INT_SetInterruptHandler
  6421 ;; This function is called by:
  6422 ;;		_SYSTEM_Initialize
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426     0DCE                     _INTERRUPT_Initialize:	
  6427                           ;psect for function _INTERRUPT_Initialize
  6428                           
  6429     0DCE                     l3007:	
  6430                           ;incstack = 0
  6431                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6432                           
  6433                           
  6434                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  6435     0DCE  108B               	bcf	11,1	;volatile
  6436                           
  6437                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  6438     0DCF  0021               	movlb	1	; select bank1
  6439     0DD0  1715               	bsf	21,6	;volatile
  6440     0DD1                     l3009:
  6441                           
  6442                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  6443     0DD1  3000               	movlw	0
  6444     0DD2  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  6445     0DD3  3000               	movlw	0
  6446     0DD4  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6447     0DD5  318D  2540  318D   	fcall	_INT_SetInterruptHandler
  6448     0DD8                     l442:
  6449     0DD8  0008               	return
  6450     0DD9                     __end_of_INTERRUPT_Initialize:
  6451                           
  6452                           	psect	text4
  6453     0D40                     __ptext4:	
  6454 ;; *************** function _INT_SetInterruptHandler *****************
  6455 ;; Defined at:
  6456 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6459 ;;		 -> INT_DefaultInterruptHandler(1), 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6471 ;;      Params:         2       0       0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0
  6474 ;;      Totals:         2       0       0       0       0       0       0       0
  6475 ;;Total ram usage:        2 bytes
  6476 ;; Hardware stack levels used: 1
  6477 ;; Hardware stack levels required when called: 7
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_INTERRUPT_Initialize
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485     0D40                     _INT_SetInterruptHandler:	
  6486                           ;psect for function _INT_SetInterruptHandler
  6487                           
  6488     0D40                     l2793:	
  6489                           ;incstack = 0
  6490                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6491                           
  6492                           
  6493                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  6494     0D40  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6495     0D41  00F9               	movwf	_INT_InterruptHandler+1
  6496     0D42  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6497     0D43  00F8               	movwf	_INT_InterruptHandler
  6498     0D44                     l465:
  6499     0D44  0008               	return
  6500     0D45                     __end_of_INT_SetInterruptHandler:
  6501                           
  6502                           	psect	text5
  6503     0E71                     __ptext5:	
  6504 ;; *************** function _I2C1_Initialize *****************
  6505 ;; Defined at:
  6506 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;		None
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0, pclath, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6520 ;;      Params:         0       0       0       0       0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0
  6523 ;;      Totals:         0       0       0       0       0       0       0       0
  6524 ;;Total ram usage:        0 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 8
  6527 ;; This function calls:
  6528 ;;		_I2C1_CallbackRegister
  6529 ;;		_I2C1_InterruptsEnable
  6530 ;; This function is called by:
  6531 ;;		_SYSTEM_Initialize
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535     0E71                     _I2C1_Initialize:	
  6536                           ;psect for function _I2C1_Initialize
  6537                           
  6538     0E71                     l2911:	
  6539                           ;incstack = 0
  6540                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6541                           
  6542                           
  6543                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  6544     0E71  3080               	movlw	128
  6545     0E72  0024               	movlb	4	; select bank4
  6546     0E73  0094               	movwf	20	;volatile
  6547                           
  6548                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  6549     0E74  3008               	movlw	8
  6550     0E75  0095               	movwf	21	;volatile
  6551     0E76                     l2913:
  6552                           
  6553                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  6554     0E76  0196               	clrf	22	;volatile
  6555     0E77                     l2915:
  6556                           
  6557                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  6558     0E77  0197               	clrf	23	;volatile
  6559                           
  6560                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  6561     0E78  3027               	movlw	39
  6562     0E79  0092               	movwf	18	;volatile
  6563     0E7A                     l2917:
  6564                           
  6565                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  6566     0E7A  318D  252D  318E   	fcall	_I2C1_InterruptsEnable
  6567                           
  6568                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  6569     0E7D  30E9               	movlw	low _I2C1_DefaultCallback
  6570     0E7E  00F4               	movwf	I2C1_CallbackRegister@callbackHandler
  6571     0E7F  300C               	movlw	high _I2C1_DefaultCallback
  6572     0E80  00F5               	movwf	I2C1_CallbackRegister@callbackHandler+1
  6573     0E81  318D  25FD  318E   	fcall	_I2C1_CallbackRegister
  6574     0E84                     l2919:
  6575                           
  6576                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  6577     0E84  0024               	movlb	4	; select bank4
  6578     0E85  1695               	bsf	21,5	;volatile
  6579     0E86                     l177:
  6580     0E86  0008               	return
  6581     0E87                     __end_of_I2C1_Initialize:
  6582                           
  6583                           	psect	text6
  6584     0D2D                     __ptext6:	
  6585 ;; *************** function _I2C1_InterruptsEnable *****************
  6586 ;; Defined at:
  6587 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;		None
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  1    wreg      void 
  6594 ;; Registers used:
  6595 ;;		None
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6601 ;;      Params:         0       0       0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0
  6604 ;;      Totals:         0       0       0       0       0       0       0       0
  6605 ;;Total ram usage:        0 bytes
  6606 ;; Hardware stack levels used: 1
  6607 ;; Hardware stack levels required when called: 7
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_I2C1_Initialize
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615     0D2D                     _I2C1_InterruptsEnable:	
  6616                           ;psect for function _I2C1_InterruptsEnable
  6617                           
  6618     0D2D                     l2641:	
  6619                           ;incstack = 0
  6620                           ; Regs used in _I2C1_InterruptsEnable: []
  6621                           
  6622                           
  6623                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  6624     0D2D  0021               	movlb	1	; select bank1
  6625     0D2E  1590               	bsf	16,3	;volatile
  6626                           
  6627                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  6628     0D2F  1591               	bsf	17,3	;volatile
  6629     0D30                     l312:
  6630     0D30  0008               	return
  6631     0D31                     __end_of_I2C1_InterruptsEnable:
  6632                           
  6633                           	psect	text7
  6634     0DFD                     __ptext7:	
  6635 ;; *************** function _I2C1_CallbackRegister *****************
  6636 ;; Defined at:
  6637 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6640 ;;		 -> I2C1_DefaultCallback(1), 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, status,2, status,0
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6652 ;;      Params:         2       0       0       0       0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0
  6655 ;;      Totals:         2       0       0       0       0       0       0       0
  6656 ;;Total ram usage:        2 bytes
  6657 ;; Hardware stack levels used: 1
  6658 ;; Hardware stack levels required when called: 7
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_I2C1_Initialize
  6663 ;;		_I2C1_Deinitialize
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667     0DFD                     _I2C1_CallbackRegister:	
  6668                           ;psect for function _I2C1_CallbackRegister
  6669                           
  6670     0DFD                     l2643:	
  6671                           ;incstack = 0
  6672                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  6673                           
  6674                           
  6675                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  6676     0DFD  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6677     0DFE  0475               	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  6678     0DFF  1903               	btfsc	3,2
  6679     0E00  2E02               	goto	u911
  6680     0E01  2E03               	goto	u910
  6681     0E02                     u911:
  6682     0E02  2E08               	goto	l204
  6683     0E03                     u910:
  6684     0E03                     l2645:
  6685                           
  6686                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  6687     0E03  0875               	movf	I2C1_CallbackRegister@callbackHandler+1,w
  6688     0E04  0021               	movlb	1	; select bank1
  6689     0E05  00C1               	movwf	(_I2C1_Callback+1)^(0+128)
  6690     0E06  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6691     0E07  00C0               	movwf	_I2C1_Callback^(0+128)
  6692     0E08                     l204:
  6693     0E08  0008               	return
  6694     0E09                     __end_of_I2C1_CallbackRegister:
  6695                           
  6696                           	psect	text8
  6697     0EB9                     __ptext8:	
  6698 ;; *************** function _EUSART_Initialize *****************
  6699 ;; Defined at:
  6700 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      void 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0, pclath, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6714 ;;      Params:         0       0       0       0       0       0       0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0
  6717 ;;      Totals:         0       0       0       0       0       0       0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 8
  6721 ;; This function calls:
  6722 ;;		_EUSART_FramingErrorCallbackRegister
  6723 ;;		_EUSART_OverrunErrorCallbackRegister
  6724 ;; This function is called by:
  6725 ;;		_SYSTEM_Initialize
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729     0EB9                     _EUSART_Initialize:	
  6730                           ;psect for function _EUSART_Initialize
  6731                           
  6732     0EB9                     l3011:	
  6733                           ;incstack = 0
  6734                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6735                           
  6736                           
  6737                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  6738     0EB9  3048               	movlw	72
  6739     0EBA  0023               	movlb	3	; select bank3
  6740     0EBB  009F               	movwf	31	;volatile
  6741                           
  6742                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  6743     0EBC  3090               	movlw	144
  6744     0EBD  009D               	movwf	29	;volatile
  6745                           
  6746                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  6747     0EBE  3026               	movlw	38
  6748     0EBF  009E               	movwf	30	;volatile
  6749                           
  6750                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  6751     0EC0  30A0               	movlw	160
  6752     0EC1  009B               	movwf	27	;volatile
  6753                           
  6754                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  6755     0EC2  3001               	movlw	1
  6756     0EC3  009C               	movwf	28	;volatile
  6757     0EC4                     l3013:
  6758                           
  6759                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  6760     0EC4  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  6761     0EC5  00F4               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  6762     0EC6  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  6763     0EC7  00F5               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  6764     0EC8  318D  25C3  318E   	fcall	_EUSART_FramingErrorCallbackRegister
  6765     0ECB                     l3015:
  6766                           
  6767                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  6768     0ECB  3025               	movlw	low _EUSART_DefaultOverrunErrorCallback
  6769     0ECC  00F4               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  6770     0ECD  300D               	movlw	high _EUSART_DefaultOverrunErrorCallback
  6771     0ECE  00F5               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  6772     0ECF  318D  25F1  318E   	fcall	_EUSART_OverrunErrorCallbackRegister
  6773     0ED2                     l3017:
  6774                           
  6775                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  6776     0ED2  0021               	movlb	1	; select bank1
  6777     0ED3  01BE               	clrf	_eusartRxLastError^(0+128)	;volatile
  6778     0ED4  01BF               	clrf	(_eusartRxLastError+1)^(0+128)	;volatile
  6779     0ED5                     l548:
  6780     0ED5  0008               	return
  6781     0ED6                     __end_of_EUSART_Initialize:
  6782                           
  6783                           	psect	text9
  6784     0DF1                     __ptext9:	
  6785 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  6786 ;; Defined at:
  6787 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6790 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      void 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6802 ;;      Params:         2       0       0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0
  6805 ;;      Totals:         2       0       0       0       0       0       0       0
  6806 ;;Total ram usage:        2 bytes
  6807 ;; Hardware stack levels used: 1
  6808 ;; Hardware stack levels required when called: 7
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_EUSART_Initialize
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816     0DF1                     _EUSART_OverrunErrorCallbackRegister:	
  6817                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  6818                           
  6819     0DF1                     l2799:	
  6820                           ;incstack = 0
  6821                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  6822                           
  6823                           
  6824                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  6825     0DF1  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6826     0DF2  0475               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6827     0DF3  1903               	btfsc	3,2
  6828     0DF4  2DF6               	goto	u1001
  6829     0DF5  2DF7               	goto	u1000
  6830     0DF6                     u1001:
  6831     0DF6  2DFC               	goto	l627
  6832     0DF7                     u1000:
  6833     0DF7                     l2801:
  6834                           
  6835                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6836     0DF7  0875               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6837     0DF8  0021               	movlb	1	; select bank1
  6838     0DF9  00BD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6839     0DFA  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6840     0DFB  00BC               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6841     0DFC                     l627:
  6842     0DFC  0008               	return
  6843     0DFD                     __end_of_EUSART_OverrunErrorCallbackRegister:
  6844                           
  6845                           	psect	text10
  6846     0DC3                     __ptext10:	
  6847 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6848 ;; Defined at:
  6849 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6852 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  1    wreg      void 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6864 ;;      Params:         2       0       0       0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0
  6867 ;;      Totals:         2       0       0       0       0       0       0       0
  6868 ;;Total ram usage:        2 bytes
  6869 ;; Hardware stack levels used: 1
  6870 ;; Hardware stack levels required when called: 7
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_EUSART_Initialize
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878     0DC3                     _EUSART_FramingErrorCallbackRegister:	
  6879                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6880                           
  6881     0DC3                     l2795:	
  6882                           ;incstack = 0
  6883                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6884                           
  6885                           
  6886                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6887     0DC3  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6888     0DC4  0475               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6889     0DC5  1903               	btfsc	3,2
  6890     0DC6  2DC8               	goto	u991
  6891     0DC7  2DC9               	goto	u990
  6892     0DC8                     u991:
  6893     0DC8  2DCD               	goto	l623
  6894     0DC9                     u990:
  6895     0DC9                     l2797:
  6896                           
  6897                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6898     0DC9  0875               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6899     0DCA  00F7               	movwf	_EUSART_FramingErrorHandler+1
  6900     0DCB  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6901     0DCC  00F6               	movwf	_EUSART_FramingErrorHandler
  6902     0DCD                     l623:
  6903     0DCD  0008               	return
  6904     0DCE                     __end_of_EUSART_FramingErrorCallbackRegister:
  6905                           
  6906                           	psect	text11
  6907     0DB0                     __ptext11:	
  6908 ;; *************** function _CLOCK_Initialize *****************
  6909 ;; Defined at:
  6910 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      void 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6924 ;;      Params:         0       0       0       0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0
  6927 ;;      Totals:         0       0       0       0       0       0       0       0
  6928 ;;Total ram usage:        0 bytes
  6929 ;; Hardware stack levels used: 1
  6930 ;; Hardware stack levels required when called: 7
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_SYSTEM_Initialize
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938     0DB0                     _CLOCK_Initialize:	
  6939                           ;psect for function _CLOCK_Initialize
  6940                           
  6941     0DB0                     l2945:	
  6942                           ;incstack = 0
  6943                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6944                           
  6945                           
  6946                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6947     0DB0  307A               	movlw	122
  6948     0DB1  0021               	movlb	1	; select bank1
  6949     0DB2  0099               	movwf	25	;volatile
  6950     0DB3                     l2947:
  6951                           
  6952                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6953     0DB3  0022               	movlb	2	; select bank2
  6954     0DB4  0196               	clrf	22	;volatile
  6955     0DB5                     l2949:
  6956                           
  6957                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6958     0DB5  0021               	movlb	1	; select bank1
  6959     0DB6  0198               	clrf	24	;volatile
  6960     0DB7                     l333:
  6961     0DB7  0008               	return
  6962     0DB8                     __end_of_CLOCK_Initialize:
  6963                           
  6964                           	psect	text12
  6965     0E5D                     __ptext12:	
  6966 ;; *************** function _ADC_Initialize *****************
  6967 ;; Defined at:
  6968 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0, pclath, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6982 ;;      Params:         0       0       0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used: 1
  6988 ;; Hardware stack levels required when called: 8
  6989 ;; This function calls:
  6990 ;;		_ADC_SetInterruptHandler
  6991 ;; This function is called by:
  6992 ;;		_SYSTEM_Initialize
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996     0E5D                     _ADC_Initialize:	
  6997                           ;psect for function _ADC_Initialize
  6998                           
  6999     0E5D                     l2895:	
  7000                           ;incstack = 0
  7001                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7002                           
  7003                           
  7004                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  7005     0E5D  3060               	movlw	96
  7006     0E5E  0021               	movlb	1	; select bank1
  7007     0E5F  009E               	movwf	30	;volatile
  7008     0E60                     l2897:
  7009                           
  7010                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  7011     0E60  019B               	clrf	27	;volatile
  7012     0E61                     l2899:
  7013                           
  7014                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  7015     0E61  019C               	clrf	28	;volatile
  7016     0E62                     l2901:
  7017                           
  7018                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  7019     0E62  019F               	clrf	31	;volatile
  7020     0E63                     l2903:
  7021                           
  7022                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  7023     0E63  3001               	movlw	1
  7024     0E64  009D               	movwf	29	;volatile
  7025     0E65                     l2905:
  7026                           
  7027                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  7028     0E65  0020               	movlb	0	; select bank0
  7029     0E66  1310               	bcf	16,6	;volatile
  7030     0E67                     l2907:
  7031                           
  7032                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  7033     0E67  30E8               	movlw	low _ADC_DefaultInterruptHandler
  7034     0E68  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7035     0E69  300C               	movlw	high _ADC_DefaultInterruptHandler
  7036     0E6A  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7037     0E6B  318D  255D  318E   	fcall	_ADC_SetInterruptHandler
  7038     0E6E                     l2909:
  7039                           
  7040                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  7041     0E6E  0021               	movlb	1	; select bank1
  7042     0E6F  1710               	bsf	16,6	;volatile
  7043     0E70                     l27:
  7044     0E70  0008               	return
  7045     0E71                     __end_of_ADC_Initialize:
  7046                           
  7047                           	psect	text13
  7048     0D5D                     __ptext13:	
  7049 ;; *************** function _ADC_SetInterruptHandler *****************
  7050 ;; Defined at:
  7051 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7054 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7066 ;;      Params:         2       0       0       0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0
  7069 ;;      Totals:         2       0       0       0       0       0       0       0
  7070 ;;Total ram usage:        2 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; Hardware stack levels required when called: 7
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_ADC_Initialize
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080     0D5D                     _ADC_SetInterruptHandler:	
  7081                           ;psect for function _ADC_SetInterruptHandler
  7082                           
  7083     0D5D                     l2639:	
  7084                           ;incstack = 0
  7085                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7086                           
  7087                           
  7088                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  7089     0D5D  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7090     0D5E  0021               	movlb	1	; select bank1
  7091     0D5F  00CE               	movwf	(_ADC_InterruptHandler+1)^(0+128)
  7092     0D60  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7093     0D61  00CD               	movwf	_ADC_InterruptHandler^(0+128)
  7094     0D62                     l55:
  7095     0D62  0008               	return
  7096     0D63                     __end_of_ADC_SetInterruptHandler:
  7097                           
  7098                           	psect	text14
  7099     0068                     __ptext14:	
  7100 ;; *************** function _ProcessMsg *****************
  7101 ;; Defined at:
  7102 ;;		line 47 in file "main.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  msg_id          1    wreg     unsigned char 
  7105 ;;  data            1   46[BANK0 ] PTR unsigned char 
  7106 ;;		 -> parserDataBuffer(5), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  msg_id          1   48[BANK0 ] unsigned char 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7118 ;;      Params:         0       1       0       0       0       0       0       0
  7119 ;;      Locals:         0       1       0       0       0       0       0       0
  7120 ;;      Temps:          0       1       0       0       0       0       0       0
  7121 ;;      Totals:         0       3       0       0       0       0       0       0
  7122 ;;Total ram usage:        3 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 11
  7125 ;; This function calls:
  7126 ;;		_KAPS_GoToIdx
  7127 ;;		_KAPS_StorePos
  7128 ;;		_KAPS_getIndex
  7129 ;;		_KAPS_getPos
  7130 ;;		_KAPS_getStatus
  7131 ;;		_KAPS_setAbsPos
  7132 ;;		_KAPS_setRelPos
  7133 ;;		_SSPA_getPOut
  7134 ;;		_SSPA_getTemp
  7135 ;;		_SSPA_setMute
  7136 ;;		_SendMsg
  7137 ;;		_packLong
  7138 ;;		_unpackLong
  7139 ;;		_unpackWord
  7140 ;; This function is called by:
  7141 ;;		_main
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145     0068                     _ProcessMsg:	
  7146                           ;psect for function _ProcessMsg
  7147                           
  7148                           
  7149                           ;incstack = 0
  7150                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7151                           ;ProcessMsg@msg_id stored from wreg
  7152     0068  0020               	movlb	0	; select bank0
  7153     0069  00D0               	movwf	ProcessMsg@msg_id
  7154     006A                     l3917:
  7155                           
  7156                           ;main.c: 48:     static uint8_t payload[6];;main.c: 50:     switch (msg_id) {
  7157     006A  2988               	goto	l3969
  7158     006B                     l3919:
  7159                           
  7160                           ;main.c: 52:             payload[0] = data[0];
  7161     006B  084E               	movf	ProcessMsg@data,w
  7162     006C  0086               	movwf	6
  7163     006D  0187               	clrf	7
  7164     006E  0801               	movf	1,w
  7165     006F  0021               	movlb	1	; select bank1
  7166     0070  00C2               	movwf	ProcessMsg@payload^(0+128)
  7167     0071                     l3921:
  7168                           
  7169                           ;main.c: 53:             payload[1] = (uint8_t) sspas[data[0]].m_Mute;
  7170     0071  0020               	movlb	0	; select bank0
  7171     0072  084E               	movf	ProcessMsg@data,w
  7172     0073  0086               	movwf	6
  7173     0074  0187               	clrf	7
  7174     0075  0801               	movf	1,w
  7175     0076  00CF               	movwf	??_ProcessMsg
  7176     0077  3002               	movlw	2
  7177     0078                     u1975:
  7178     0078  35CF               	lslf	??_ProcessMsg,f
  7179     0079  3EFF               	addlw	-1
  7180     007A  1D03               	skipz
  7181     007B  2878               	goto	u1975
  7182     007C  354F               	lslf	??_ProcessMsg,w
  7183     007D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7184     007E  0086               	movwf	6
  7185     007F  0187               	clrf	7
  7186     0080  0801               	movf	1,w
  7187     0081  0021               	movlb	1	; select bank1
  7188     0082  00C3               	movwf	(ProcessMsg@payload^(0+128)+1)
  7189     0083                     l3923:
  7190                           
  7191                           ;main.c: 54:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  7192     0083  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7193     0084  0020               	movlb	0	; select bank0
  7194     0085  00A1               	movwf	SendMsg@data
  7195     0086  3002               	movlw	2
  7196     0087  00A2               	movwf	SendMsg@data_len
  7197     0088  300C               	movlw	12
  7198     0089  3186  26D3  3180   	fcall	_SendMsg
  7199                           
  7200                           ;main.c: 55:             break;
  7201     008C  29AB               	goto	l691
  7202     008D                     l3925:
  7203                           
  7204                           ;main.c: 58:             SSPA_getTemp((antenna_band_t) data[0]);
  7205     008D  084E               	movf	ProcessMsg@data,w
  7206     008E  0086               	movwf	6
  7207     008F  0187               	clrf	7
  7208     0090  0801               	movf	1,w
  7209     0091  3185  25AE  3180   	fcall	_SSPA_getTemp
  7210     0094                     l3927:
  7211                           
  7212                           ;main.c: 59:             payload[0] = data[0];
  7213     0094  0020               	movlb	0	; select bank0
  7214     0095  084E               	movf	ProcessMsg@data,w
  7215     0096  0086               	movwf	6
  7216     0097  0187               	clrf	7
  7217     0098  0801               	movf	1,w
  7218     0099  0021               	movlb	1	; select bank1
  7219     009A  00C2               	movwf	ProcessMsg@payload^(0+128)
  7220     009B                     l3929:
  7221                           
  7222                           ;main.c: 60:             unpackWord((uint16_t) sspas[data[0]].m_wTemp, &payload[1]);
  7223     009B  0020               	movlb	0	; select bank0
  7224     009C  084E               	movf	ProcessMsg@data,w
  7225     009D  0086               	movwf	6
  7226     009E  0187               	clrf	7
  7227     009F  0801               	movf	1,w
  7228     00A0  00CF               	movwf	??_ProcessMsg
  7229     00A1  3002               	movlw	2
  7230     00A2                     u1985:
  7231     00A2  35CF               	lslf	??_ProcessMsg,f
  7232     00A3  3EFF               	addlw	-1
  7233     00A4  1D03               	skipz
  7234     00A5  28A2               	goto	u1985
  7235     00A6  354F               	lslf	??_ProcessMsg,w
  7236     00A7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7237     00A8  0086               	movwf	6
  7238     00A9  0187               	clrf	7
  7239     00AA  3F40               	moviw [0]fsr1
  7240     00AB  00A0               	movwf	unpackWord@value
  7241     00AC  3F41               	moviw [1]fsr1
  7242     00AD  00A1               	movwf	unpackWord@value+1
  7243     00AE  30C3               	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7244     00AF  00A2               	movwf	unpackWord@data
  7245     00B0  318D  25E5  3180   	fcall	_unpackWord
  7246     00B3                     l3931:
  7247                           
  7248                           ;main.c: 61:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7249     00B3  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7250     00B4  0020               	movlb	0	; select bank0
  7251     00B5  00A1               	movwf	SendMsg@data
  7252     00B6  3003               	movlw	3
  7253     00B7  00A2               	movwf	SendMsg@data_len
  7254     00B8  300D               	movlw	13
  7255     00B9  3186  26D3  3180   	fcall	_SendMsg
  7256                           
  7257                           ;main.c: 62:             break;
  7258     00BC  29AB               	goto	l691
  7259     00BD                     l3933:
  7260                           
  7261                           ;main.c: 65:             SSPA_getPOut((antenna_band_t) data[0]);
  7262     00BD  084E               	movf	ProcessMsg@data,w
  7263     00BE  0086               	movwf	6
  7264     00BF  0187               	clrf	7
  7265     00C0  0801               	movf	1,w
  7266     00C1  3182  22F0  3180   	fcall	_SSPA_getPOut
  7267     00C4                     l3935:
  7268                           
  7269                           ;main.c: 66:             payload[0] = data[0];
  7270     00C4  0020               	movlb	0	; select bank0
  7271     00C5  084E               	movf	ProcessMsg@data,w
  7272     00C6  0086               	movwf	6
  7273     00C7  0187               	clrf	7
  7274     00C8  0801               	movf	1,w
  7275     00C9  0021               	movlb	1	; select bank1
  7276     00CA  00C2               	movwf	ProcessMsg@payload^(0+128)
  7277     00CB                     l3937:
  7278                           
  7279                           ;main.c: 67:             payload[1] = sspas[data[0]].m_bPOut;
  7280     00CB  0020               	movlb	0	; select bank0
  7281     00CC  084E               	movf	ProcessMsg@data,w
  7282     00CD  0086               	movwf	6
  7283     00CE  0187               	clrf	7
  7284     00CF  0801               	movf	1,w
  7285     00D0  00CF               	movwf	??_ProcessMsg
  7286     00D1  3002               	movlw	2
  7287     00D2                     u1995:
  7288     00D2  35CF               	lslf	??_ProcessMsg,f
  7289     00D3  3EFF               	addlw	-1
  7290     00D4  1D03               	skipz
  7291     00D5  28D2               	goto	u1995
  7292     00D6  354F               	lslf	??_ProcessMsg,w
  7293     00D7  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  7294     00D8  0086               	movwf	6
  7295     00D9  0187               	clrf	7
  7296     00DA  0801               	movf	1,w
  7297     00DB  0021               	movlb	1	; select bank1
  7298     00DC  00C3               	movwf	(ProcessMsg@payload^(0+128)+1)
  7299     00DD                     l3939:
  7300                           
  7301                           ;main.c: 68:             unpackLong(sspas[data[0]].m_lCurrent, &payload[2]);
  7302     00DD  0020               	movlb	0	; select bank0
  7303     00DE  084E               	movf	ProcessMsg@data,w
  7304     00DF  0086               	movwf	6
  7305     00E0  0187               	clrf	7
  7306     00E1  0801               	movf	1,w
  7307     00E2  00CF               	movwf	??_ProcessMsg
  7308     00E3  3002               	movlw	2
  7309     00E4                     u2005:
  7310     00E4  35CF               	lslf	??_ProcessMsg,f
  7311     00E5  3EFF               	addlw	-1
  7312     00E6  1D03               	skipz
  7313     00E7  28E4               	goto	u2005
  7314     00E8  354F               	lslf	??_ProcessMsg,w
  7315     00E9  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  7316     00EA  0086               	movwf	6
  7317     00EB  0187               	clrf	7
  7318     00EC  3F40               	moviw [0]fsr1
  7319     00ED  00A0               	movwf	unpackLong@value
  7320     00EE  3F41               	moviw [1]fsr1
  7321     00EF  00A1               	movwf	unpackLong@value+1
  7322     00F0  3F42               	moviw [2]fsr1
  7323     00F1  00A2               	movwf	unpackLong@value+2
  7324     00F2  3F43               	moviw [3]fsr1
  7325     00F3  00A3               	movwf	unpackLong@value+3
  7326     00F4  30C4               	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7327     00F5  00A4               	movwf	unpackLong@data
  7328     00F6  3184  2468  3180   	fcall	_unpackLong
  7329     00F9                     l3941:
  7330                           
  7331                           ;main.c: 69:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7332     00F9  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7333     00FA  0020               	movlb	0	; select bank0
  7334     00FB  00A1               	movwf	SendMsg@data
  7335     00FC  3006               	movlw	6
  7336     00FD  00A2               	movwf	SendMsg@data_len
  7337     00FE  300E               	movlw	14
  7338     00FF  3186  26D3  3180   	fcall	_SendMsg
  7339                           
  7340                           ;main.c: 70:             break;
  7341     0102  29AB               	goto	l691
  7342     0103                     l3943:
  7343                           
  7344                           ;main.c: 73:             KAPS_getStatus();
  7345     0103  3187  279F  3180   	fcall	_KAPS_getStatus
  7346     0106                     l3945:
  7347                           
  7348                           ;main.c: 74:             payload[0] = (uint8_t) kaps.m_Status;
  7349     0106  0020               	movlb	0	; select bank0
  7350     0107  0867               	movf	_kaps+1,w
  7351     0108  0021               	movlb	1	; select bank1
  7352     0109  00C2               	movwf	ProcessMsg@payload^(0+128)
  7353     010A                     l3947:
  7354                           
  7355                           ;main.c: 75:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7356     010A  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7357     010B  0020               	movlb	0	; select bank0
  7358     010C  00A1               	movwf	SendMsg@data
  7359     010D  01A2               	clrf	SendMsg@data_len
  7360     010E  0AA2               	incf	SendMsg@data_len,f
  7361     010F  300F               	movlw	15
  7362     0110  3186  26D3  3180   	fcall	_SendMsg
  7363                           
  7364                           ;main.c: 76:             break;
  7365     0113  29AB               	goto	l691
  7366     0114                     l3949:
  7367                           
  7368                           ;main.c: 79:             KAPS_getPos();
  7369     0114  3185  2570  3180   	fcall	_KAPS_getPos
  7370                           
  7371                           ;main.c: 80:             unpackLong(kaps.m_lAbsPos, payload);
  7372     0117  3002               	movlw	2
  7373     0118  3E66               	addlw	(low (_kaps| 0))& (0+255)
  7374     0119  0086               	movwf	6
  7375     011A  0187               	clrf	7
  7376     011B  3F40               	moviw [0]fsr1
  7377     011C  0020               	movlb	0	; select bank0
  7378     011D  00A0               	movwf	unpackLong@value
  7379     011E  3F41               	moviw [1]fsr1
  7380     011F  00A1               	movwf	unpackLong@value+1
  7381     0120  3F42               	moviw [2]fsr1
  7382     0121  00A2               	movwf	unpackLong@value+2
  7383     0122  3F43               	moviw [3]fsr1
  7384     0123  00A3               	movwf	unpackLong@value+3
  7385     0124  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7386     0125  00A4               	movwf	unpackLong@data
  7387     0126  3184  2468  3180   	fcall	_unpackLong
  7388                           
  7389                           ;main.c: 81:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7390     0129  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7391     012A  0020               	movlb	0	; select bank0
  7392     012B  00A1               	movwf	SendMsg@data
  7393     012C  3004               	movlw	4
  7394     012D  00A2               	movwf	SendMsg@data_len
  7395     012E  3010               	movlw	16
  7396     012F  3186  26D3  3180   	fcall	_SendMsg
  7397                           
  7398                           ;main.c: 82:             break;
  7399     0132  29AB               	goto	l691
  7400     0133                     l3951:
  7401                           
  7402                           ;main.c: 85:             KAPS_getIndex();
  7403     0133  3187  27CD  3180   	fcall	_KAPS_getIndex
  7404     0136                     l3953:
  7405                           
  7406                           ;main.c: 86:             payload[0] = kaps.m_bIdxPos;
  7407     0136  0020               	movlb	0	; select bank0
  7408     0137  086C               	movf	_kaps+6,w
  7409     0138  0021               	movlb	1	; select bank1
  7410     0139  00C2               	movwf	ProcessMsg@payload^(0+128)
  7411     013A                     l3955:
  7412                           
  7413                           ;main.c: 87:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7414     013A  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7415     013B  0020               	movlb	0	; select bank0
  7416     013C  00A1               	movwf	SendMsg@data
  7417     013D  01A2               	clrf	SendMsg@data_len
  7418     013E  0AA2               	incf	SendMsg@data_len,f
  7419     013F  3012               	movlw	18
  7420     0140  3186  26D3  3180   	fcall	_SendMsg
  7421                           
  7422                           ;main.c: 88:             break;
  7423     0143  29AB               	goto	l691
  7424     0144                     l3957:
  7425                           
  7426                           ;main.c: 91:             SSPA_setMute((antenna_band_t) data[0], (mute_t) data[1]);
  7427     0144  084E               	movf	ProcessMsg@data,w
  7428     0145  0086               	movwf	6
  7429     0146  0187               	clrf	7
  7430     0147  3F41               	moviw [1]fsr1
  7431     0148  00F4               	movwf	SSPA_setMute@mute
  7432     0149  084E               	movf	ProcessMsg@data,w
  7433     014A  0086               	movwf	6
  7434     014B  0187               	clrf	7
  7435     014C  0801               	movf	1,w
  7436     014D  3186  2628  3180   	fcall	_SSPA_setMute
  7437                           
  7438                           ;main.c: 92:             break;
  7439     0150  29AB               	goto	l691
  7440     0151                     l3959:
  7441                           
  7442                           ;main.c: 95:             KAPS_GoToIdx(data[0]);
  7443     0151  084E               	movf	ProcessMsg@data,w
  7444     0152  0086               	movwf	6
  7445     0153  0187               	clrf	7
  7446     0154  0801               	movf	1,w
  7447     0155  318F  275E  3180   	fcall	_KAPS_GoToIdx
  7448                           
  7449                           ;main.c: 96:             break;
  7450     0158  29AB               	goto	l691
  7451     0159                     l3961:
  7452                           
  7453                           ;main.c: 99:             KAPS_setAbsPos(packLong(data));
  7454     0159  084E               	movf	ProcessMsg@data,w
  7455     015A  3183  237A  3180   	fcall	_packLong
  7456     015D  0020               	movlb	0	; select bank0
  7457     015E  0823               	movf	?_packLong+3,w
  7458     015F  00B0               	movwf	KAPS_setAbsPos@pos+3
  7459     0160  0822               	movf	?_packLong+2,w
  7460     0161  00AF               	movwf	KAPS_setAbsPos@pos+2
  7461     0162  0821               	movf	?_packLong+1,w
  7462     0163  00AE               	movwf	KAPS_setAbsPos@pos+1
  7463     0164  0820               	movf	?_packLong,w
  7464     0165  00AD               	movwf	KAPS_setAbsPos@pos
  7465     0166  3187  273C  3180   	fcall	_KAPS_setAbsPos
  7466                           
  7467                           ;main.c: 100:             break;
  7468     0169  29AB               	goto	l691
  7469     016A                     l3963:
  7470                           
  7471                           ;main.c: 103:             KAPS_setRelPos((int8_t) data[0]);
  7472     016A  084E               	movf	ProcessMsg@data,w
  7473     016B  0086               	movwf	6
  7474     016C  0187               	clrf	7
  7475     016D  0801               	movf	1,w
  7476     016E  318F  2784  3180   	fcall	_KAPS_setRelPos
  7477                           
  7478                           ;main.c: 104:             break;
  7479     0171  29AB               	goto	l691
  7480     0172                     l3965:
  7481                           
  7482                           ;main.c: 107:             KAPS_StorePos(data[4], packLong(data));
  7483     0172  084E               	movf	ProcessMsg@data,w
  7484     0173  3183  237A  3180   	fcall	_packLong
  7485     0176  0020               	movlb	0	; select bank0
  7486     0177  0823               	movf	?_packLong+3,w
  7487     0178  00B0               	movwf	KAPS_StorePos@pos+3
  7488     0179  0822               	movf	?_packLong+2,w
  7489     017A  00AF               	movwf	KAPS_StorePos@pos+2
  7490     017B  0821               	movf	?_packLong+1,w
  7491     017C  00AE               	movwf	KAPS_StorePos@pos+1
  7492     017D  0820               	movf	?_packLong,w
  7493     017E  00AD               	movwf	KAPS_StorePos@pos
  7494     017F  084E               	movf	ProcessMsg@data,w
  7495     0180  3E04               	addlw	4
  7496     0181  0086               	movwf	6
  7497     0182  0187               	clrf	7
  7498     0183  0801               	movf	1,w
  7499     0184  3185  2530  3180   	fcall	_KAPS_StorePos
  7500                           
  7501                           ;main.c: 108:             break;
  7502     0187  29AB               	goto	l691
  7503     0188                     l3969:
  7504     0188  0850               	movf	ProcessMsg@msg_id,w
  7505                           
  7506                           ; Switch size 1, requested type "simple"
  7507                           ; Number of cases is 11, Range of values is 1 to 17
  7508                           ; switch strategies available:
  7509                           ; Name         Instructions Cycles
  7510                           ; simple_byte           34    18 (average)
  7511                           ; direct_byte           43     9 (fixed)
  7512                           ; jumptable            263     9 (fixed)
  7513                           ;	Chosen strategy is simple_byte
  7514     0189  3A01               	xorlw	1	; case 1
  7515     018A  1903               	skipnz
  7516     018B  2944               	goto	l3957
  7517     018C  3A03               	xorlw	3	; case 2
  7518     018D  1903               	skipnz
  7519     018E  286B               	goto	l3919
  7520     018F  3A01               	xorlw	1	; case 3
  7521     0190  1903               	skipnz
  7522     0191  288D               	goto	l3925
  7523     0192  3A07               	xorlw	7	; case 4
  7524     0193  1903               	skipnz
  7525     0194  28BD               	goto	l3933
  7526     0195  3A01               	xorlw	1	; case 5
  7527     0196  1903               	skipnz
  7528     0197  2903               	goto	l3943
  7529     0198  3A03               	xorlw	3	; case 6
  7530     0199  1903               	skipnz
  7531     019A  2914               	goto	l3949
  7532     019B  3A01               	xorlw	1	; case 7
  7533     019C  1903               	skipnz
  7534     019D  2951               	goto	l3959
  7535     019E  3A0F               	xorlw	15	; case 8
  7536     019F  1903               	skipnz
  7537     01A0  2959               	goto	l3961
  7538     01A1  3A01               	xorlw	1	; case 9
  7539     01A2  1903               	skipnz
  7540     01A3  296A               	goto	l3963
  7541     01A4  3A03               	xorlw	3	; case 10
  7542     01A5  1903               	skipnz
  7543     01A6  2972               	goto	l3965
  7544     01A7  3A1B               	xorlw	27	; case 17
  7545     01A8  1903               	skipnz
  7546     01A9  2933               	goto	l3951
  7547     01AA  29AB               	goto	l691
  7548     01AB                     l691:
  7549     01AB  0008               	return
  7550     01AC                     __end_of_ProcessMsg:
  7551                           
  7552                           	psect	text15
  7553     0DE5                     __ptext15:	
  7554 ;; *************** function _unpackWord *****************
  7555 ;; Defined at:
  7556 ;;		line 71 in file "utils.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  value           2    0[BANK0 ] unsigned short 
  7559 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7560 ;;		 -> ProcessMsg@payload(6), 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr1l, fsr1h, status,2
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7572 ;;      Params:         0       3       0       0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0
  7575 ;;      Totals:         0       3       0       0       0       0       0       0
  7576 ;;Total ram usage:        3 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; Hardware stack levels required when called: 7
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_ProcessMsg
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586     0DE5                     _unpackWord:	
  7587                           ;psect for function _unpackWord
  7588                           
  7589     0DE5                     l3801:	
  7590                           ;incstack = 0
  7591                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7592                           
  7593                           
  7594                           ;utils.c: 73:     data[0] = value & 0xFF;
  7595     0DE5  0020               	movlb	0	; select bank0
  7596     0DE6  0822               	movf	unpackWord@data,w
  7597     0DE7  0086               	movwf	6
  7598     0DE8  0187               	clrf	7
  7599     0DE9  0820               	movf	unpackWord@value,w
  7600     0DEA  0081               	movwf	1
  7601     0DEB                     l3803:
  7602                           
  7603                           ;utils.c: 74:     data[1] = (value >> 8) & 0xFF;
  7604     0DEB  0A22               	incf	unpackWord@data,w
  7605     0DEC  0086               	movwf	6
  7606     0DED  0187               	clrf	7
  7607     0DEE  0821               	movf	unpackWord@value+1,w
  7608     0DEF  0081               	movwf	1
  7609     0DF0                     l748:
  7610     0DF0  0008               	return
  7611     0DF1                     __end_of_unpackWord:
  7612                           
  7613                           	psect	text16
  7614     0628                     __ptext16:	
  7615 ;; *************** function _SSPA_setMute *****************
  7616 ;; Defined at:
  7617 ;;		line 76 in file "sspa.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  band            1    wreg     enum E40
  7620 ;;  mute            1    4[COMMON] enum E36
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  band            1    5[COMMON] enum E40
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7632 ;;      Params:         1       0       0       0       0       0       0       0
  7633 ;;      Locals:         1       0       0       0       0       0       0       0
  7634 ;;      Temps:          0       2       0       0       0       0       0       0
  7635 ;;      Totals:         2       2       0       0       0       0       0       0
  7636 ;;Total ram usage:        4 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; Hardware stack levels required when called: 7
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_ProcessMsg
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646     0628                     _SSPA_setMute:	
  7647                           ;psect for function _SSPA_setMute
  7648                           
  7649                           
  7650                           ;incstack = 0
  7651                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7652                           ;SSPA_setMute@band stored from wreg
  7653     0628  00F5               	movwf	SSPA_setMute@band
  7654     0629                     l3865:
  7655                           
  7656                           ;sspa.c: 77:     switch (band) {
  7657     0629  2E40               	goto	l3873
  7658     062A                     l3867:
  7659                           
  7660                           ;sspa.c: 79:             if (mute == UNMUTE)
  7661     062A  0874               	movf	SSPA_setMute@mute,w
  7662     062B  1D03               	btfss	3,2
  7663     062C  2E2E               	goto	u1931
  7664     062D  2E2F               	goto	u1930
  7665     062E                     u1931:
  7666     062E  2E32               	goto	l845
  7667     062F                     u1930:
  7668     062F                     l842:	
  7669                           ;sspa.c: 80:                 do { LATCbits.LATC7 = 1; } while(0);
  7670                           
  7671     062F  0022               	movlb	2	; select bank2
  7672     0630  178E               	bsf	14,7	;volatile
  7673     0631  2E54               	goto	l3875
  7674     0632                     l845:	
  7675                           ;sspa.c: 82:                 do { LATCbits.LATC7 = 0; } while(0);
  7676                           
  7677     0632  0022               	movlb	2	; select bank2
  7678     0633  138E               	bcf	14,7	;volatile
  7679     0634  2E54               	goto	l3875
  7680     0635                     l3869:
  7681                           
  7682                           ;sspa.c: 86:             if (mute == UNMUTE)
  7683     0635  0874               	movf	SSPA_setMute@mute,w
  7684     0636  1D03               	btfss	3,2
  7685     0637  2E39               	goto	u1941
  7686     0638  2E3A               	goto	u1940
  7687     0639                     u1941:
  7688     0639  2E3D               	goto	l853
  7689     063A                     u1940:
  7690     063A                     l850:	
  7691                           ;sspa.c: 87:                 do { LATCbits.LATC6 = 1; } while(0);
  7692                           
  7693     063A  0022               	movlb	2	; select bank2
  7694     063B  170E               	bsf	14,6	;volatile
  7695     063C  2E54               	goto	l3875
  7696     063D                     l853:	
  7697                           ;sspa.c: 89:                 do { LATCbits.LATC6 = 0; } while(0);
  7698                           
  7699     063D  0022               	movlb	2	; select bank2
  7700     063E  130E               	bcf	14,6	;volatile
  7701     063F  2E54               	goto	l3875
  7702     0640                     l3873:
  7703     0640  0875               	movf	SSPA_setMute@band,w
  7704     0641  0020               	movlb	0	; select bank0
  7705     0642  00A0               	movwf	??_SSPA_setMute
  7706     0643  01A1               	clrf	??_SSPA_setMute+1
  7707                           
  7708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7709                           ; Switch size 1, requested type "simple"
  7710                           ; Number of cases is 1, Range of values is 0 to 0
  7711                           ; switch strategies available:
  7712                           ; Name         Instructions Cycles
  7713                           ; simple_byte            4     3 (average)
  7714                           ; direct_byte            8     6 (fixed)
  7715                           ; jumptable            260     6 (fixed)
  7716                           ;	Chosen strategy is simple_byte
  7717     0644  0821               	movf	??_SSPA_setMute+1,w
  7718     0645  3A00               	xorlw	0	; case 0
  7719     0646  1903               	skipnz
  7720     0647  2E49               	goto	l4223
  7721     0648  2E54               	goto	l3875
  7722     0649                     l4223:
  7723                           
  7724                           ; Switch size 1, requested type "simple"
  7725                           ; Number of cases is 3, Range of values is 0 to 2
  7726                           ; switch strategies available:
  7727                           ; Name         Instructions Cycles
  7728                           ; simple_byte           10     6 (average)
  7729                           ; direct_byte           12     6 (fixed)
  7730                           ; jumptable            260     6 (fixed)
  7731                           ;	Chosen strategy is simple_byte
  7732     0649  0820               	movf	??_SSPA_setMute,w
  7733     064A  3A00               	xorlw	0	; case 0
  7734     064B  1903               	skipnz
  7735     064C  2E54               	goto	l3875
  7736     064D  3A01               	xorlw	1	; case 1
  7737     064E  1903               	skipnz
  7738     064F  2E2A               	goto	l3867
  7739     0650  3A03               	xorlw	3	; case 2
  7740     0651  1903               	skipnz
  7741     0652  2E35               	goto	l3869
  7742     0653  2E54               	goto	l3875
  7743     0654                     l3875:
  7744                           
  7745                           ;sspa.c: 97:     sspas[band].m_Mute = mute;
  7746     0654  0875               	movf	SSPA_setMute@band,w
  7747     0655  0020               	movlb	0	; select bank0
  7748     0656  00A0               	movwf	??_SSPA_setMute
  7749     0657  3002               	movlw	2
  7750     0658                     u1955:
  7751     0658  35A0               	lslf	??_SSPA_setMute,f
  7752     0659  3EFF               	addlw	-1
  7753     065A  1D03               	skipz
  7754     065B  2E58               	goto	u1955
  7755     065C  3520               	lslf	??_SSPA_setMute,w
  7756     065D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7757     065E  0086               	movwf	6
  7758     065F  0187               	clrf	7
  7759     0660  0874               	movf	SSPA_setMute@mute,w
  7760     0661  0081               	movwf	1
  7761     0662                     l857:
  7762     0662  0008               	return
  7763     0663                     __end_of_SSPA_setMute:
  7764                           
  7765                           	psect	text17
  7766     05AE                     __ptext17:	
  7767 ;; *************** function _SSPA_getTemp *****************
  7768 ;; Defined at:
  7769 ;;		line 104 in file "sspa.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;  band            1    wreg     enum E40
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  band            1   45[BANK0 ] enum E40
  7774 ;;  adc_value       2   42[BANK0 ] unsigned short 
  7775 ;;  channel         1   44[BANK0 ] enum E9257
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7785 ;;      Params:         0       0       0       0       0       0       0       0
  7786 ;;      Locals:         0       4       0       0       0       0       0       0
  7787 ;;      Temps:          0       2       0       0       0       0       0       0
  7788 ;;      Totals:         0       6       0       0       0       0       0       0
  7789 ;;Total ram usage:        6 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; Hardware stack levels required when called: 9
  7792 ;; This function calls:
  7793 ;;		_ADC2Celsius
  7794 ;;		_getADCValue
  7795 ;; This function is called by:
  7796 ;;		_ProcessMsg
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800     05AE                     _SSPA_getTemp:	
  7801                           ;psect for function _SSPA_getTemp
  7802                           
  7803                           
  7804                           ;incstack = 0
  7805                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7806                           ;SSPA_getTemp@band stored from wreg
  7807     05AE  0020               	movlb	0	; select bank0
  7808     05AF  00CD               	movwf	SSPA_getTemp@band
  7809     05B0                     l3781:
  7810                           
  7811                           ;sspa.c: 105:     adc_channel_t channel;;sspa.c: 106:     adc_result_t adc_value;;sspa.c
      +                          : 108:     switch (band) {
  7812     05B0  2DB7               	goto	l3789
  7813     05B1                     l3783:
  7814                           
  7815                           ;sspa.c: 110:             channel = TM_Ka;
  7816     05B1  3003               	movlw	3
  7817     05B2  00CC               	movwf	SSPA_getTemp@channel
  7818                           
  7819                           ;sspa.c: 112:             break;
  7820     05B3  2DCA               	goto	l3791
  7821     05B4                     l3785:
  7822                           
  7823                           ;sspa.c: 114:             channel = TM_X;
  7824     05B4  3007               	movlw	7
  7825     05B5  00CC               	movwf	SSPA_getTemp@channel
  7826                           
  7827                           ;sspa.c: 115:             break;
  7828     05B6  2DCA               	goto	l3791
  7829     05B7                     l3789:
  7830     05B7  084D               	movf	SSPA_getTemp@band,w
  7831     05B8  00C8               	movwf	??_SSPA_getTemp
  7832     05B9  01C9               	clrf	??_SSPA_getTemp+1
  7833                           
  7834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7835                           ; Switch size 1, requested type "simple"
  7836                           ; Number of cases is 1, Range of values is 0 to 0
  7837                           ; switch strategies available:
  7838                           ; Name         Instructions Cycles
  7839                           ; simple_byte            4     3 (average)
  7840                           ; direct_byte            8     6 (fixed)
  7841                           ; jumptable            260     6 (fixed)
  7842                           ;	Chosen strategy is simple_byte
  7843     05BA  0849               	movf	??_SSPA_getTemp+1,w
  7844     05BB  3A00               	xorlw	0	; case 0
  7845     05BC  1903               	skipnz
  7846     05BD  2DBF               	goto	l4225
  7847     05BE  2DCA               	goto	l3791
  7848     05BF                     l4225:
  7849                           
  7850                           ; Switch size 1, requested type "simple"
  7851                           ; Number of cases is 3, Range of values is 0 to 2
  7852                           ; switch strategies available:
  7853                           ; Name         Instructions Cycles
  7854                           ; simple_byte           10     6 (average)
  7855                           ; direct_byte           12     6 (fixed)
  7856                           ; jumptable            260     6 (fixed)
  7857                           ;	Chosen strategy is simple_byte
  7858     05BF  0848               	movf	??_SSPA_getTemp,w
  7859     05C0  3A00               	xorlw	0	; case 0
  7860     05C1  1903               	skipnz
  7861     05C2  2DCA               	goto	l3791
  7862     05C3  3A01               	xorlw	1	; case 1
  7863     05C4  1903               	skipnz
  7864     05C5  2DB1               	goto	l3783
  7865     05C6  3A03               	xorlw	3	; case 2
  7866     05C7  1903               	skipnz
  7867     05C8  2DB4               	goto	l3785
  7868     05C9  2DCA               	goto	l3791
  7869     05CA                     l3791:
  7870                           
  7871                           ;sspa.c: 122:     adc_value = getADCValue(channel);
  7872     05CA  084C               	movf	SSPA_getTemp@channel,w
  7873     05CB  3186  269C  3185   	fcall	_getADCValue
  7874     05CE  0020               	movlb	0	; select bank0
  7875     05CF  0821               	movf	?_getADCValue+1,w
  7876     05D0  00CB               	movwf	SSPA_getTemp@adc_value+1
  7877     05D1  0820               	movf	?_getADCValue,w
  7878     05D2  00CA               	movwf	SSPA_getTemp@adc_value
  7879     05D3                     l3793:
  7880                           
  7881                           ;sspa.c: 124:     sspas[band].m_wTemp = ADC2Celsius(adc_value);
  7882     05D3  084B               	movf	SSPA_getTemp@adc_value+1,w
  7883     05D4  00BB               	movwf	ADC2Celsius@v+1
  7884     05D5  084A               	movf	SSPA_getTemp@adc_value,w
  7885     05D6  00BA               	movwf	ADC2Celsius@v
  7886     05D7  3183  23D1  3185   	fcall	_ADC2Celsius
  7887     05DA  0020               	movlb	0	; select bank0
  7888     05DB  084D               	movf	SSPA_getTemp@band,w
  7889     05DC  00C8               	movwf	??_SSPA_getTemp
  7890     05DD  3002               	movlw	2
  7891     05DE                     u1855:
  7892     05DE  35C8               	lslf	??_SSPA_getTemp,f
  7893     05DF  3EFF               	addlw	-1
  7894     05E0  1D03               	skipz
  7895     05E1  2DDE               	goto	u1855
  7896     05E2  3548               	lslf	??_SSPA_getTemp,w
  7897     05E3  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7898     05E4  0086               	movwf	6
  7899     05E5  0187               	clrf	7
  7900     05E6  083A               	movf	?_ADC2Celsius,w
  7901     05E7  3FC0               	movwi [0]fsr1
  7902     05E8  083B               	movf	?_ADC2Celsius+1,w
  7903     05E9  3FC1               	movwi [1]fsr1
  7904     05EA                     l866:
  7905     05EA  0008               	return
  7906     05EB                     __end_of_SSPA_getTemp:
  7907                           
  7908                           	psect	text18
  7909     03D1                     __ptext18:	
  7910 ;; *************** function _ADC2Celsius *****************
  7911 ;; Defined at:
  7912 ;;		line 50 in file "sspa.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  v               2   26[BANK0 ] unsigned short 
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;  result          4   36[BANK0 ] long 
  7917 ;;  value           4   32[BANK0 ] long 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  2   26[BANK0 ] short 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0, pclath, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7927 ;;      Params:         0       2       0       0       0       0       0       0
  7928 ;;      Locals:         0       8       0       0       0       0       0       0
  7929 ;;      Temps:          0       4       0       0       0       0       0       0
  7930 ;;      Totals:         0      14       0       0       0       0       0       0
  7931 ;;Total ram usage:       14 bytes
  7932 ;; Hardware stack levels used: 1
  7933 ;; Hardware stack levels required when called: 8
  7934 ;; This function calls:
  7935 ;;		___aldiv
  7936 ;;		___lmul
  7937 ;; This function is called by:
  7938 ;;		_SSPA_getTemp
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942     03D1                     _ADC2Celsius:	
  7943                           ;psect for function _ADC2Celsius
  7944                           
  7945     03D1                     l3757:	
  7946                           ;incstack = 0
  7947                           ; Regs used in _ADC2Celsius: [wreg+status,2+status,0+pclath+cstack]
  7948                           
  7949                           
  7950                           ;sspa.c: 51:     int32_t value = (int32_t) v;
  7951     03D1  0020               	movlb	0	; select bank0
  7952     03D2  083A               	movf	ADC2Celsius@v,w
  7953     03D3  00C0               	movwf	ADC2Celsius@value
  7954     03D4  083B               	movf	ADC2Celsius@v+1,w
  7955     03D5  00C1               	movwf	ADC2Celsius@value+1
  7956     03D6  01C2               	clrf	ADC2Celsius@value+2
  7957     03D7  01C3               	clrf	ADC2Celsius@value+3
  7958     03D8                     l3759:
  7959                           
  7960                           ;sspa.c: 52:     int32_t result = (int16_t)(160) - (value * (int16_t)(367822)) / (int16_
      +                          t)(1024000);
  7961     03D8  30FF               	movlw	255
  7962     03D9  00AF               	movwf	___aldiv@divisor+3
  7963     03DA  30FF               	movlw	255
  7964     03DB  00AE               	movwf	___aldiv@divisor+2
  7965     03DC  30A0               	movlw	160
  7966     03DD  00AD               	movwf	___aldiv@divisor+1
  7967     03DE  3000               	movlw	0
  7968     03DF  00AC               	movwf	___aldiv@divisor
  7969     03E0  0843               	movf	ADC2Celsius@value+3,w
  7970     03E1  00A3               	movwf	___lmul@multiplier+3
  7971     03E2  0842               	movf	ADC2Celsius@value+2,w
  7972     03E3  00A2               	movwf	___lmul@multiplier+2
  7973     03E4  0841               	movf	ADC2Celsius@value+1,w
  7974     03E5  00A1               	movwf	___lmul@multiplier+1
  7975     03E6  0840               	movf	ADC2Celsius@value,w
  7976     03E7  00A0               	movwf	___lmul@multiplier
  7977     03E8  30FF               	movlw	255
  7978     03E9  00A7               	movwf	___lmul@multiplicand+3
  7979     03EA  30FF               	movlw	255
  7980     03EB  00A6               	movwf	___lmul@multiplicand+2
  7981     03EC  309C               	movlw	156
  7982     03ED  00A5               	movwf	___lmul@multiplicand+1
  7983     03EE  30CE               	movlw	206
  7984     03EF  00A4               	movwf	___lmul@multiplicand
  7985     03F0  3187  2708  3183   	fcall	___lmul
  7986     03F3  0020               	movlb	0	; select bank0
  7987     03F4  0823               	movf	?___lmul+3,w
  7988     03F5  00B3               	movwf	___aldiv@dividend+3
  7989     03F6  0822               	movf	?___lmul+2,w
  7990     03F7  00B2               	movwf	___aldiv@dividend+2
  7991     03F8  0821               	movf	?___lmul+1,w
  7992     03F9  00B1               	movwf	___aldiv@dividend+1
  7993     03FA  0820               	movf	?___lmul,w
  7994     03FB  00B0               	movwf	___aldiv@dividend
  7995     03FC  3182  2260  3183   	fcall	___aldiv
  7996     03FF  30A0               	movlw	160
  7997     0400  0020               	movlb	0	; select bank0
  7998     0401  00BC               	movwf	??_ADC2Celsius
  7999     0402  3000               	movlw	0
  8000     0403  00BD               	movwf	??_ADC2Celsius+1
  8001     0404  3000               	movlw	0
  8002     0405  00BE               	movwf	??_ADC2Celsius+2
  8003     0406  3000               	movlw	0
  8004     0407  00BF               	movwf	??_ADC2Celsius+3
  8005     0408  082C               	movf	?___aldiv,w
  8006     0409  02BC               	subwf	??_ADC2Celsius,f
  8007     040A  082D               	movf	?___aldiv+1,w
  8008     040B  3BBD               	subwfb	??_ADC2Celsius+1,f
  8009     040C  082E               	movf	?___aldiv+2,w
  8010     040D  3BBE               	subwfb	??_ADC2Celsius+2,f
  8011     040E  082F               	movf	?___aldiv+3,w
  8012     040F  3BBF               	subwfb	??_ADC2Celsius+3,f
  8013     0410  083F               	movf	??_ADC2Celsius+3,w
  8014     0411  00C7               	movwf	ADC2Celsius@result+3
  8015     0412  083E               	movf	??_ADC2Celsius+2,w
  8016     0413  00C6               	movwf	ADC2Celsius@result+2
  8017     0414  083D               	movf	??_ADC2Celsius+1,w
  8018     0415  00C5               	movwf	ADC2Celsius@result+1
  8019     0416  083C               	movf	??_ADC2Celsius,w
  8020     0417  00C4               	movwf	ADC2Celsius@result
  8021     0418                     l3761:
  8022                           
  8023                           ;sspa.c: 54:     return (int16_t) result;
  8024     0418  0845               	movf	ADC2Celsius@result+1,w
  8025     0419  00BB               	movwf	?_ADC2Celsius+1
  8026     041A  0844               	movf	ADC2Celsius@result,w
  8027     041B  00BA               	movwf	?_ADC2Celsius
  8028     041C                     l830:
  8029     041C  0008               	return
  8030     041D                     __end_of_ADC2Celsius:
  8031                           
  8032                           	psect	text19
  8033     02F0                     __ptext19:	
  8034 ;; *************** function _SSPA_getPOut *****************
  8035 ;; Defined at:
  8036 ;;		line 131 in file "sspa.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  band            1    wreg     enum E40
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  band            1   42[BANK0 ] enum E40
  8041 ;;  adc_value       2   40[BANK0 ] unsigned short 
  8042 ;;  channel         1    0        enum E9257
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8052 ;;      Params:         0       0       0       0       0       0       0       0
  8053 ;;      Locals:         0       3       0       0       0       0       0       0
  8054 ;;      Temps:          0       2       0       0       0       0       0       0
  8055 ;;      Totals:         0       5       0       0       0       0       0       0
  8056 ;;Total ram usage:        5 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; Hardware stack levels required when called: 9
  8059 ;; This function calls:
  8060 ;;		_ADC2Amp
  8061 ;;		_ADC2dBm
  8062 ;;		_getADCValue
  8063 ;; This function is called by:
  8064 ;;		_ProcessMsg
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068     02F0                     _SSPA_getPOut:	
  8069                           ;psect for function _SSPA_getPOut
  8070                           
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8074                           ;SSPA_getPOut@band stored from wreg
  8075     02F0  0020               	movlb	0	; select bank0
  8076     02F1  00CA               	movwf	SSPA_getPOut@band
  8077     02F2                     l3805:
  8078                           
  8079                           ;sspa.c: 132:     adc_channel_t channel;;sspa.c: 133:     adc_result_t adc_value;;sspa.c
      +                          : 135:     switch (band) {
  8080     02F2  2B66               	goto	l3827
  8081     02F3                     l870:	
  8082                           ;sspa.c: 136:         case ANTENNABAND_KA:
  8083                           
  8084     02F3                     l3807:
  8085                           
  8086                           ;sspa.c: 138:             adc_value = getADCValue(channel);
  8087     02F3  3001               	movlw	1
  8088     02F4  3186  269C  3182   	fcall	_getADCValue
  8089     02F7  0020               	movlb	0	; select bank0
  8090     02F8  0821               	movf	?_getADCValue+1,w
  8091     02F9  00C9               	movwf	SSPA_getPOut@adc_value+1
  8092     02FA  0820               	movf	?_getADCValue,w
  8093     02FB  00C8               	movwf	SSPA_getPOut@adc_value
  8094     02FC                     l3809:
  8095                           
  8096                           ;sspa.c: 139:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8097     02FC  0849               	movf	SSPA_getPOut@adc_value+1,w
  8098     02FD  00BB               	movwf	ADC2Amp@v+1
  8099     02FE  0848               	movf	SSPA_getPOut@adc_value,w
  8100     02FF  00BA               	movwf	ADC2Amp@v
  8101     0300  3184  24F0  3182   	fcall	_ADC2Amp
  8102     0303  0020               	movlb	0	; select bank0
  8103     0304  084A               	movf	SSPA_getPOut@band,w
  8104     0305  00C6               	movwf	??_SSPA_getPOut
  8105     0306  3002               	movlw	2
  8106     0307                     u1865:
  8107     0307  35C6               	lslf	??_SSPA_getPOut,f
  8108     0308  3EFF               	addlw	-1
  8109     0309  1D03               	skipz
  8110     030A  2B07               	goto	u1865
  8111     030B  3546               	lslf	??_SSPA_getPOut,w
  8112     030C  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8113     030D  0086               	movwf	6
  8114     030E  0187               	clrf	7
  8115     030F  083A               	movf	?_ADC2Amp,w
  8116     0310  3FC0               	movwi [0]fsr1
  8117     0311  083B               	movf	?_ADC2Amp+1,w
  8118     0312  3FC1               	movwi [1]fsr1
  8119     0313  083C               	movf	?_ADC2Amp+2,w
  8120     0314  3FC2               	movwi [2]fsr1
  8121     0315  083D               	movf	?_ADC2Amp+3,w
  8122     0316  3FC3               	movwi [3]fsr1
  8123     0317                     l3811:
  8124                           
  8125                           ;sspa.c: 140:             sspas[band].m_bPOut = 0xFF;
  8126     0317  084A               	movf	SSPA_getPOut@band,w
  8127     0318  00C6               	movwf	??_SSPA_getPOut
  8128     0319  3002               	movlw	2
  8129     031A                     u1875:
  8130     031A  35C6               	lslf	??_SSPA_getPOut,f
  8131     031B  3EFF               	addlw	-1
  8132     031C  1D03               	skipz
  8133     031D  2B1A               	goto	u1875
  8134     031E  3546               	lslf	??_SSPA_getPOut,w
  8135     031F  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8136     0320  0086               	movwf	6
  8137     0321  0187               	clrf	7
  8138     0322  30FF               	movlw	255
  8139     0323  0081               	movwf	1
  8140                           
  8141                           ;sspa.c: 141:             break;
  8142     0324  2B79               	goto	l875
  8143     0325                     l3813:
  8144     0325                     l3815:
  8145                           
  8146                           ;sspa.c: 145:             adc_value = getADCValue(channel);
  8147     0325  300A               	movlw	10
  8148     0326  3186  269C  3182   	fcall	_getADCValue
  8149     0329  0020               	movlb	0	; select bank0
  8150     032A  0821               	movf	?_getADCValue+1,w
  8151     032B  00C9               	movwf	SSPA_getPOut@adc_value+1
  8152     032C  0820               	movf	?_getADCValue,w
  8153     032D  00C8               	movwf	SSPA_getPOut@adc_value
  8154     032E                     l3817:
  8155                           
  8156                           ;sspa.c: 146:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8157     032E  0849               	movf	SSPA_getPOut@adc_value+1,w
  8158     032F  00BB               	movwf	ADC2Amp@v+1
  8159     0330  0848               	movf	SSPA_getPOut@adc_value,w
  8160     0331  00BA               	movwf	ADC2Amp@v
  8161     0332  3184  24F0  3182   	fcall	_ADC2Amp
  8162     0335  0020               	movlb	0	; select bank0
  8163     0336  084A               	movf	SSPA_getPOut@band,w
  8164     0337  00C6               	movwf	??_SSPA_getPOut
  8165     0338  3002               	movlw	2
  8166     0339                     u1885:
  8167     0339  35C6               	lslf	??_SSPA_getPOut,f
  8168     033A  3EFF               	addlw	-1
  8169     033B  1D03               	skipz
  8170     033C  2B39               	goto	u1885
  8171     033D  3546               	lslf	??_SSPA_getPOut,w
  8172     033E  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8173     033F  0086               	movwf	6
  8174     0340  0187               	clrf	7
  8175     0341  083A               	movf	?_ADC2Amp,w
  8176     0342  3FC0               	movwi [0]fsr1
  8177     0343  083B               	movf	?_ADC2Amp+1,w
  8178     0344  3FC1               	movwi [1]fsr1
  8179     0345  083C               	movf	?_ADC2Amp+2,w
  8180     0346  3FC2               	movwi [2]fsr1
  8181     0347  083D               	movf	?_ADC2Amp+3,w
  8182     0348  3FC3               	movwi [3]fsr1
  8183     0349                     l3819:
  8184     0349                     l3821:
  8185                           
  8186                           ;sspa.c: 148:             adc_value = getADCValue(channel);
  8187     0349  3000               	movlw	0
  8188     034A  3186  269C  3182   	fcall	_getADCValue
  8189     034D  0020               	movlb	0	; select bank0
  8190     034E  0821               	movf	?_getADCValue+1,w
  8191     034F  00C9               	movwf	SSPA_getPOut@adc_value+1
  8192     0350  0820               	movf	?_getADCValue,w
  8193     0351  00C8               	movwf	SSPA_getPOut@adc_value
  8194     0352                     l3823:
  8195                           
  8196                           ;sspa.c: 149:             sspas[band].m_bPOut = (uint8_t) ADC2dBm(adc_value);
  8197     0352  084A               	movf	SSPA_getPOut@band,w
  8198     0353  00C6               	movwf	??_SSPA_getPOut
  8199     0354  3002               	movlw	2
  8200     0355                     u1895:
  8201     0355  35C6               	lslf	??_SSPA_getPOut,f
  8202     0356  3EFF               	addlw	-1
  8203     0357  1D03               	skipz
  8204     0358  2B55               	goto	u1895
  8205     0359  3546               	lslf	??_SSPA_getPOut,w
  8206     035A  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8207     035B  0086               	movwf	6
  8208     035C  0187               	clrf	7
  8209     035D  0849               	movf	SSPA_getPOut@adc_value+1,w
  8210     035E  00BB               	movwf	ADC2dBm@v+1
  8211     035F  0848               	movf	SSPA_getPOut@adc_value,w
  8212     0360  00BA               	movwf	ADC2dBm@v
  8213     0361  3185  25EB  3182   	fcall	_ADC2dBm
  8214     0364  0081               	movwf	1
  8215                           
  8216                           ;sspa.c: 150:             break;
  8217     0365  2B79               	goto	l875
  8218     0366                     l3827:
  8219     0366  084A               	movf	SSPA_getPOut@band,w
  8220     0367  00C6               	movwf	??_SSPA_getPOut
  8221     0368  01C7               	clrf	??_SSPA_getPOut+1
  8222                           
  8223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8224                           ; Switch size 1, requested type "simple"
  8225                           ; Number of cases is 1, Range of values is 0 to 0
  8226                           ; switch strategies available:
  8227                           ; Name         Instructions Cycles
  8228                           ; simple_byte            4     3 (average)
  8229                           ; direct_byte            8     6 (fixed)
  8230                           ; jumptable            260     6 (fixed)
  8231                           ;	Chosen strategy is simple_byte
  8232     0369  0847               	movf	??_SSPA_getPOut+1,w
  8233     036A  3A00               	xorlw	0	; case 0
  8234     036B  1903               	skipnz
  8235     036C  2B6E               	goto	l4227
  8236     036D  2B79               	goto	l875
  8237     036E                     l4227:
  8238                           
  8239                           ; Switch size 1, requested type "simple"
  8240                           ; Number of cases is 3, Range of values is 0 to 2
  8241                           ; switch strategies available:
  8242                           ; Name         Instructions Cycles
  8243                           ; simple_byte           10     6 (average)
  8244                           ; direct_byte           12     6 (fixed)
  8245                           ; jumptable            260     6 (fixed)
  8246                           ;	Chosen strategy is simple_byte
  8247     036E  0846               	movf	??_SSPA_getPOut,w
  8248     036F  3A00               	xorlw	0	; case 0
  8249     0370  1903               	skipnz
  8250     0371  2B79               	goto	l875
  8251     0372  3A01               	xorlw	1	; case 1
  8252     0373  1903               	skipnz
  8253     0374  2AF3               	goto	l870
  8254     0375  3A03               	xorlw	3	; case 2
  8255     0376  1903               	skipnz
  8256     0377  2B25               	goto	l3813
  8257     0378  2B79               	goto	l875
  8258     0379                     l875:
  8259     0379  0008               	return
  8260     037A                     __end_of_SSPA_getPOut:
  8261                           
  8262                           	psect	text20
  8263     069C                     __ptext20:	
  8264 ;; *************** function _getADCValue *****************
  8265 ;; Defined at:
  8266 ;;		line 37 in file "sspa.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  channel         1    wreg     enum E9257
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  channel         1    4[BANK0 ] enum E9257
  8271 ;;  i               1    7[BANK0 ] unsigned char 
  8272 ;;  sum             2    5[BANK0 ] unsigned short 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  2    0[BANK0 ] unsigned short 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0, pclath, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8282 ;;      Params:         0       2       0       0       0       0       0       0
  8283 ;;      Locals:         0       4       0       0       0       0       0       0
  8284 ;;      Temps:          0       2       0       0       0       0       0       0
  8285 ;;      Totals:         0       8       0       0       0       0       0       0
  8286 ;;Total ram usage:        8 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; Hardware stack levels required when called: 8
  8289 ;; This function calls:
  8290 ;;		_ADC_GetConversionResult
  8291 ;;		_ADC_IsConversionDone
  8292 ;;		_ADC_SelectChannel
  8293 ;;		_ADC_StartConversion
  8294 ;; This function is called by:
  8295 ;;		_SSPA_getTemp
  8296 ;;		_SSPA_getPOut
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300     069C                     _getADCValue:	
  8301                           ;psect for function _getADCValue
  8302                           
  8303                           
  8304                           ;incstack = 0
  8305                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8306                           ;getADCValue@channel stored from wreg
  8307     069C  0020               	movlb	0	; select bank0
  8308     069D  00A4               	movwf	getADCValue@channel
  8309     069E                     l3735:
  8310                           
  8311                           ;sspa.c: 38:     adc_result_t sum = 0;
  8312     069E  01A5               	clrf	getADCValue@sum
  8313     069F  01A6               	clrf	getADCValue@sum+1
  8314     06A0                     l3737:
  8315                           
  8316                           ;sspa.c: 40:     ADC_StartConversion();
  8317     06A0  318D  2502  3186   	fcall	_ADC_StartConversion
  8318     06A3                     l3739:
  8319                           
  8320                           ;sspa.c: 41:     ADC_SelectChannel(channel);
  8321     06A3  0020               	movlb	0	; select bank0
  8322     06A4  0824               	movf	getADCValue@channel,w
  8323     06A5  318D  25D9  3186   	fcall	_ADC_SelectChannel
  8324     06A8                     l3741:
  8325                           
  8326                           ;sspa.c: 43:     for (uint8_t i = 0; i < 32; i++)
  8327     06A8  0020               	movlb	0	; select bank0
  8328     06A9  01A7               	clrf	getADCValue@i
  8329     06AA                     l3745:
  8330                           
  8331                           ;sspa.c: 44:         if (ADC_IsConversionDone())
  8332     06AA  318D  2592  3186   	fcall	_ADC_IsConversionDone
  8333     06AD  3A00               	xorlw	0
  8334     06AE  1903               	skipnz
  8335     06AF  2EB1               	goto	u1821
  8336     06B0  2EB2               	goto	u1820
  8337     06B1                     u1821:
  8338     06B1  2EBA               	goto	l3749
  8339     06B2                     u1820:
  8340     06B2                     l3747:
  8341                           
  8342                           ;sspa.c: 45:             sum += ADC_GetConversionResult();
  8343     06B2  318D  2557  3186   	fcall	_ADC_GetConversionResult
  8344     06B5  0874               	movf	?_ADC_GetConversionResult,w
  8345     06B6  0020               	movlb	0	; select bank0
  8346     06B7  07A5               	addwf	getADCValue@sum,f
  8347     06B8  0875               	movf	?_ADC_GetConversionResult+1,w
  8348     06B9  3DA6               	addwfc	getADCValue@sum+1,f
  8349     06BA                     l3749:
  8350     06BA  3001               	movlw	1
  8351     06BB  0020               	movlb	0	; select bank0
  8352     06BC  00A2               	movwf	??_getADCValue
  8353     06BD  0822               	movf	??_getADCValue,w
  8354     06BE  07A7               	addwf	getADCValue@i,f
  8355     06BF                     l3751:
  8356     06BF  3020               	movlw	32
  8357     06C0  0227               	subwf	getADCValue@i,w
  8358     06C1  1C03               	skipc
  8359     06C2  2EC4               	goto	u1831
  8360     06C3  2EC5               	goto	u1830
  8361     06C4                     u1831:
  8362     06C4  2EAA               	goto	l3745
  8363     06C5                     u1830:
  8364     06C5                     l3753:
  8365                           
  8366                           ;sspa.c: 47:     return sum >> 5;
  8367     06C5  0826               	movf	getADCValue@sum+1,w
  8368     06C6  00A3               	movwf	??_getADCValue+1
  8369     06C7  0825               	movf	getADCValue@sum,w
  8370     06C8  00A2               	movwf	??_getADCValue
  8371     06C9  3005               	movlw	5
  8372     06CA                     u1845:
  8373     06CA  36A3               	lsrf	??_getADCValue+1,f
  8374     06CB  0CA2               	rrf	??_getADCValue,f
  8375     06CC  0B89               	decfsz	9,f
  8376     06CD  2ECA               	goto	u1845
  8377     06CE  0822               	movf	??_getADCValue,w
  8378     06CF  00A0               	movwf	?_getADCValue
  8379     06D0  0823               	movf	??_getADCValue+1,w
  8380     06D1  00A1               	movwf	?_getADCValue+1
  8381     06D2                     l827:
  8382     06D2  0008               	return
  8383     06D3                     __end_of_getADCValue:
  8384                           
  8385                           	psect	text21
  8386     0D02                     __ptext21:	
  8387 ;; *************** function _ADC_StartConversion *****************
  8388 ;; Defined at:
  8389 ;;		line 88 in file "mcc_generated_files/adc/src/adc.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		None
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8403 ;;      Params:         0       0       0       0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0
  8406 ;;      Totals:         0       0       0       0       0       0       0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 7
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_getADCValue
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417     0D02                     _ADC_StartConversion:	
  8418                           ;psect for function _ADC_StartConversion
  8419                           
  8420     0D02                     l3547:	
  8421                           ;incstack = 0
  8422                           ; Regs used in _ADC_StartConversion: []
  8423                           
  8424                           
  8425                           ;mcc_generated_files/adc/src/adc.c: 91:     ADCON0bits.GO_nDONE = 1;
  8426     0D02  0021               	movlb	1	; select bank1
  8427     0D03  149D               	bsf	29,1	;volatile
  8428     0D04                     l33:
  8429     0D04  0008               	return
  8430     0D05                     __end_of_ADC_StartConversion:
  8431                           
  8432                           	psect	text22
  8433     0DD9                     __ptext22:	
  8434 ;; *************** function _ADC_SelectChannel *****************
  8435 ;; Defined at:
  8436 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  channel         1    wreg     enum E9234
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  channel         1    5[COMMON] enum E9234
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8450 ;;      Params:         0       0       0       0       0       0       0       0
  8451 ;;      Locals:         1       0       0       0       0       0       0       0
  8452 ;;      Temps:          1       0       0       0       0       0       0       0
  8453 ;;      Totals:         2       0       0       0       0       0       0       0
  8454 ;;Total ram usage:        2 bytes
  8455 ;; Hardware stack levels used: 1
  8456 ;; Hardware stack levels required when called: 7
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_getADCValue
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464     0DD9                     _ADC_SelectChannel:	
  8465                           ;psect for function _ADC_SelectChannel
  8466                           
  8467                           
  8468                           ;incstack = 0
  8469                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8470                           ;ADC_SelectChannel@channel stored from wreg
  8471     0DD9  00F5               	movwf	ADC_SelectChannel@channel
  8472     0DDA                     l3545:
  8473                           
  8474                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
  8475     0DDA  0875               	movf	ADC_SelectChannel@channel,w
  8476     0DDB  00F4               	movwf	??_ADC_SelectChannel
  8477     0DDC  0DF4               	rlf	??_ADC_SelectChannel,f
  8478     0DDD  0DF4               	rlf	??_ADC_SelectChannel,f
  8479     0DDE  0021               	movlb	1	; select bank1
  8480     0DDF  081D               	movf	29,w	;volatile
  8481     0DE0  0674               	xorwf	??_ADC_SelectChannel,w
  8482     0DE1  3983               	andlw	-125
  8483     0DE2  0674               	xorwf	??_ADC_SelectChannel,w
  8484     0DE3  009D               	movwf	29	;volatile
  8485     0DE4                     l30:
  8486     0DE4  0008               	return
  8487     0DE5                     __end_of_ADC_SelectChannel:
  8488                           
  8489                           	psect	text23
  8490     0D92                     __ptext23:	
  8491 ;; *************** function _ADC_IsConversionDone *****************
  8492 ;; Defined at:
  8493 ;;		line 94 in file "mcc_generated_files/adc/src/adc.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;		None
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      _Bool 
  8500 ;; Registers used:
  8501 ;;		wreg, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8507 ;;      Params:         0       0       0       0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0
  8510 ;;      Totals:         0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        0 bytes
  8512 ;; Hardware stack levels used: 1
  8513 ;; Hardware stack levels required when called: 7
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_getADCValue
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521     0D92                     _ADC_IsConversionDone:	
  8522                           ;psect for function _ADC_IsConversionDone
  8523                           
  8524     0D92                     l3549:	
  8525                           ;incstack = 0
  8526                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  8527                           
  8528                           
  8529                           ;mcc_generated_files/adc/src/adc.c: 97:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8530     0D92  1003               	clrc
  8531     0D93  0021               	movlb	1	; select bank1
  8532     0D94  1C9D               	btfss	29,1	;volatile
  8533     0D95  1403               	setc
  8534     0D96  3000               	movlw	0
  8535     0D97  3D09               	addwfc	9,w
  8536     0D98                     l36:
  8537     0D98  0008               	return
  8538     0D99                     __end_of_ADC_IsConversionDone:
  8539                           
  8540                           	psect	text24
  8541     0D57                     __ptext24:	
  8542 ;; *************** function _ADC_GetConversionResult *****************
  8543 ;; Defined at:
  8544 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;		None
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  2    4[COMMON] unsigned short 
  8551 ;; Registers used:
  8552 ;;		wreg
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8558 ;;      Params:         2       0       0       0       0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0
  8561 ;;      Totals:         2       0       0       0       0       0       0       0
  8562 ;;Total ram usage:        2 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 7
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_getADCValue
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572     0D57                     _ADC_GetConversionResult:	
  8573                           ;psect for function _ADC_GetConversionResult
  8574                           
  8575     0D57                     l3553:	
  8576                           ;incstack = 0
  8577                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8578                           
  8579                           
  8580                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
  8581     0D57  0021               	movlb	1	; select bank1
  8582     0D58  081C               	movf	28,w	;volatile
  8583     0D59  00F5               	movwf	?_ADC_GetConversionResult+1
  8584     0D5A  081B               	movf	27,w	;volatile
  8585     0D5B  00F4               	movwf	?_ADC_GetConversionResult
  8586     0D5C                     l39:
  8587     0D5C  0008               	return
  8588     0D5D                     __end_of_ADC_GetConversionResult:
  8589                           
  8590                           	psect	text25
  8591     05EB                     __ptext25:	
  8592 ;; *************** function _ADC2dBm *****************
  8593 ;; Defined at:
  8594 ;;		line 64 in file "sspa.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  v               2   26[BANK0 ] unsigned short 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  result          4   32[BANK0 ] long 
  8599 ;;  value           4   28[BANK0 ] long 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      unsigned char 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0, pclath, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8609 ;;      Params:         0       2       0       0       0       0       0       0
  8610 ;;      Locals:         0       8       0       0       0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0
  8612 ;;      Totals:         0      10       0       0       0       0       0       0
  8613 ;;Total ram usage:       10 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 8
  8616 ;; This function calls:
  8617 ;;		___aldiv
  8618 ;;		___lmul
  8619 ;; This function is called by:
  8620 ;;		_SSPA_getPOut
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624     05EB                     _ADC2dBm:	
  8625                           ;psect for function _ADC2dBm
  8626                           
  8627     05EB                     l3773:	
  8628                           ;incstack = 0
  8629                           ; Regs used in _ADC2dBm: [wreg+status,2+status,0+pclath+cstack]
  8630                           
  8631                           
  8632                           ;sspa.c: 65:     int32_t value = (int32_t) v;
  8633     05EB  0020               	movlb	0	; select bank0
  8634     05EC  083A               	movf	ADC2dBm@v,w
  8635     05ED  00BC               	movwf	ADC2dBm@value
  8636     05EE  083B               	movf	ADC2dBm@v+1,w
  8637     05EF  00BD               	movwf	ADC2dBm@value+1
  8638     05F0  01BE               	clrf	ADC2dBm@value+2
  8639     05F1  01BF               	clrf	ADC2dBm@value+3
  8640     05F2                     l3775:
  8641                           
  8642                           ;sspa.c: 66:     int32_t result = (uint16_t)(34) + (value * (uint16_t)(14319)) / (uint16
      +                          _t)(1024000);
  8643     05F2  3000               	movlw	0
  8644     05F3  00AF               	movwf	___aldiv@divisor+3
  8645     05F4  3000               	movlw	0
  8646     05F5  00AE               	movwf	___aldiv@divisor+2
  8647     05F6  30A0               	movlw	160
  8648     05F7  00AD               	movwf	___aldiv@divisor+1
  8649     05F8  3000               	movlw	0
  8650     05F9  00AC               	movwf	___aldiv@divisor
  8651     05FA  083F               	movf	ADC2dBm@value+3,w
  8652     05FB  00A3               	movwf	___lmul@multiplier+3
  8653     05FC  083E               	movf	ADC2dBm@value+2,w
  8654     05FD  00A2               	movwf	___lmul@multiplier+2
  8655     05FE  083D               	movf	ADC2dBm@value+1,w
  8656     05FF  00A1               	movwf	___lmul@multiplier+1
  8657     0600  083C               	movf	ADC2dBm@value,w
  8658     0601  00A0               	movwf	___lmul@multiplier
  8659     0602  3000               	movlw	0
  8660     0603  00A7               	movwf	___lmul@multiplicand+3
  8661     0604  3000               	movlw	0
  8662     0605  00A6               	movwf	___lmul@multiplicand+2
  8663     0606  3037               	movlw	55
  8664     0607  00A5               	movwf	___lmul@multiplicand+1
  8665     0608  30EF               	movlw	239
  8666     0609  00A4               	movwf	___lmul@multiplicand
  8667     060A  3187  2708  3185   	fcall	___lmul
  8668     060D  0020               	movlb	0	; select bank0
  8669     060E  0823               	movf	?___lmul+3,w
  8670     060F  00B3               	movwf	___aldiv@dividend+3
  8671     0610  0822               	movf	?___lmul+2,w
  8672     0611  00B2               	movwf	___aldiv@dividend+2
  8673     0612  0821               	movf	?___lmul+1,w
  8674     0613  00B1               	movwf	___aldiv@dividend+1
  8675     0614  0820               	movf	?___lmul,w
  8676     0615  00B0               	movwf	___aldiv@dividend
  8677     0616  3182  2260  3185   	fcall	___aldiv
  8678     0619  3022               	movlw	34
  8679     061A  0020               	movlb	0	; select bank0
  8680     061B  072C               	addwf	?___aldiv,w
  8681     061C  00C0               	movwf	ADC2dBm@result
  8682     061D  3000               	movlw	0
  8683     061E  3D2D               	addwfc	?___aldiv+1,w
  8684     061F  00C1               	movwf	ADC2dBm@result+1
  8685     0620  3000               	movlw	0
  8686     0621  3D2E               	addwfc	?___aldiv+2,w
  8687     0622  00C2               	movwf	ADC2dBm@result+2
  8688     0623  3000               	movlw	0
  8689     0624  3D2F               	addwfc	?___aldiv+3,w
  8690     0625  00C3               	movwf	ADC2dBm@result+3
  8691     0626                     l3777:
  8692                           
  8693                           ;sspa.c: 68:     return (uint8_t) result;
  8694     0626  0840               	movf	ADC2dBm@result,w
  8695     0627                     l836:
  8696     0627  0008               	return
  8697     0628                     __end_of_ADC2dBm:
  8698                           
  8699                           	psect	text26
  8700     04F0                     __ptext26:	
  8701 ;; *************** function _ADC2Amp *****************
  8702 ;; Defined at:
  8703 ;;		line 57 in file "sspa.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  v               2   26[BANK0 ] unsigned short 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  result          4   34[BANK0 ] long 
  8708 ;;  value           4   30[BANK0 ] long 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  4   26[BANK0 ] unsigned long 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, status,0, pclath, cstack
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8718 ;;      Params:         0       4       0       0       0       0       0       0
  8719 ;;      Locals:         0       8       0       0       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0
  8721 ;;      Totals:         0      12       0       0       0       0       0       0
  8722 ;;Total ram usage:       12 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; Hardware stack levels required when called: 8
  8725 ;; This function calls:
  8726 ;;		___aldiv
  8727 ;;		___lmul
  8728 ;; This function is called by:
  8729 ;;		_SSPA_getPOut
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733     04F0                     _ADC2Amp:	
  8734                           ;psect for function _ADC2Amp
  8735                           
  8736     04F0                     l3765:	
  8737                           ;incstack = 0
  8738                           ; Regs used in _ADC2Amp: [wreg+status,2+status,0+pclath+cstack]
  8739                           
  8740                           
  8741                           ;sspa.c: 58:     int32_t value = (int32_t) v;
  8742     04F0  0020               	movlb	0	; select bank0
  8743     04F1  083A               	movf	ADC2Amp@v,w
  8744     04F2  00BE               	movwf	ADC2Amp@value
  8745     04F3  083B               	movf	ADC2Amp@v+1,w
  8746     04F4  00BF               	movwf	ADC2Amp@value+1
  8747     04F5  01C0               	clrf	ADC2Amp@value+2
  8748     04F6  01C1               	clrf	ADC2Amp@value+3
  8749     04F7                     l3767:
  8750                           
  8751                           ;sspa.c: 59:     int32_t result = (uint16_t)(0) + (value * (uint16_t)(430)) / (uint16_t)
      +                          (10240);
  8752     04F7  3000               	movlw	0
  8753     04F8  00AF               	movwf	___aldiv@divisor+3
  8754     04F9  3000               	movlw	0
  8755     04FA  00AE               	movwf	___aldiv@divisor+2
  8756     04FB  3028               	movlw	40
  8757     04FC  00AD               	movwf	___aldiv@divisor+1
  8758     04FD  3000               	movlw	0
  8759     04FE  00AC               	movwf	___aldiv@divisor
  8760     04FF  0841               	movf	ADC2Amp@value+3,w
  8761     0500  00A3               	movwf	___lmul@multiplier+3
  8762     0501  0840               	movf	ADC2Amp@value+2,w
  8763     0502  00A2               	movwf	___lmul@multiplier+2
  8764     0503  083F               	movf	ADC2Amp@value+1,w
  8765     0504  00A1               	movwf	___lmul@multiplier+1
  8766     0505  083E               	movf	ADC2Amp@value,w
  8767     0506  00A0               	movwf	___lmul@multiplier
  8768     0507  3000               	movlw	0
  8769     0508  00A7               	movwf	___lmul@multiplicand+3
  8770     0509  3000               	movlw	0
  8771     050A  00A6               	movwf	___lmul@multiplicand+2
  8772     050B  3001               	movlw	1
  8773     050C  00A5               	movwf	___lmul@multiplicand+1
  8774     050D  30AE               	movlw	174
  8775     050E  00A4               	movwf	___lmul@multiplicand
  8776     050F  3187  2708  3184   	fcall	___lmul
  8777     0512  0020               	movlb	0	; select bank0
  8778     0513  0823               	movf	?___lmul+3,w
  8779     0514  00B3               	movwf	___aldiv@dividend+3
  8780     0515  0822               	movf	?___lmul+2,w
  8781     0516  00B2               	movwf	___aldiv@dividend+2
  8782     0517  0821               	movf	?___lmul+1,w
  8783     0518  00B1               	movwf	___aldiv@dividend+1
  8784     0519  0820               	movf	?___lmul,w
  8785     051A  00B0               	movwf	___aldiv@dividend
  8786     051B  3182  2260  3184   	fcall	___aldiv
  8787     051E  0020               	movlb	0	; select bank0
  8788     051F  082F               	movf	?___aldiv+3,w
  8789     0520  00C5               	movwf	ADC2Amp@result+3
  8790     0521  082E               	movf	?___aldiv+2,w
  8791     0522  00C4               	movwf	ADC2Amp@result+2
  8792     0523  082D               	movf	?___aldiv+1,w
  8793     0524  00C3               	movwf	ADC2Amp@result+1
  8794     0525  082C               	movf	?___aldiv,w
  8795     0526  00C2               	movwf	ADC2Amp@result
  8796     0527                     l3769:
  8797                           
  8798                           ;sspa.c: 61:     return (uint32_t) result;
  8799     0527  0845               	movf	ADC2Amp@result+3,w
  8800     0528  00BD               	movwf	?_ADC2Amp+3
  8801     0529  0844               	movf	ADC2Amp@result+2,w
  8802     052A  00BC               	movwf	?_ADC2Amp+2
  8803     052B  0843               	movf	ADC2Amp@result+1,w
  8804     052C  00BB               	movwf	?_ADC2Amp+1
  8805     052D  0842               	movf	ADC2Amp@result,w
  8806     052E  00BA               	movwf	?_ADC2Amp
  8807     052F                     l833:
  8808     052F  0008               	return
  8809     0530                     __end_of_ADC2Amp:
  8810                           
  8811                           	psect	text27
  8812     0708                     __ptext27:	
  8813 ;; *************** function ___lmul *****************
  8814 ;; Defined at:
  8815 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8818 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  product         4    8[BANK0 ] unsigned long 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  4    0[BANK0 ] unsigned long 
  8823 ;; Registers used:
  8824 ;;		wreg, status,2, status,0
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8830 ;;      Params:         0       8       0       0       0       0       0       0
  8831 ;;      Locals:         0       4       0       0       0       0       0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0
  8833 ;;      Totals:         0      12       0       0       0       0       0       0
  8834 ;;Total ram usage:       12 bytes
  8835 ;; Hardware stack levels used: 1
  8836 ;; Hardware stack levels required when called: 7
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_ADC2Celsius
  8841 ;;		_ADC2Amp
  8842 ;;		_ADC2dBm
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846     0708                     ___lmul:	
  8847                           ;psect for function ___lmul
  8848                           
  8849     0708                     l3585:	
  8850                           ;incstack = 0
  8851                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8852                           
  8853     0708  3000               	movlw	0
  8854     0709  0020               	movlb	0	; select bank0
  8855     070A  00AB               	movwf	___lmul@product+3
  8856     070B  3000               	movlw	0
  8857     070C  00AA               	movwf	___lmul@product+2
  8858     070D  3000               	movlw	0
  8859     070E  00A9               	movwf	___lmul@product+1
  8860     070F  3000               	movlw	0
  8861     0710  00A8               	movwf	___lmul@product
  8862     0711                     l3587:
  8863     0711  1C20               	btfss	___lmul@multiplier,0
  8864     0712  2F14               	goto	u1581
  8865     0713  2F15               	goto	u1580
  8866     0714                     u1581:
  8867     0714  2F1D               	goto	l3591
  8868     0715                     u1580:
  8869     0715                     l3589:
  8870     0715  0824               	movf	___lmul@multiplicand,w
  8871     0716  07A8               	addwf	___lmul@product,f
  8872     0717  0825               	movf	___lmul@multiplicand+1,w
  8873     0718  3DA9               	addwfc	___lmul@product+1,f
  8874     0719  0826               	movf	___lmul@multiplicand+2,w
  8875     071A  3DAA               	addwfc	___lmul@product+2,f
  8876     071B  0827               	movf	___lmul@multiplicand+3,w
  8877     071C  3DAB               	addwfc	___lmul@product+3,f
  8878     071D                     l3591:
  8879     071D  3001               	movlw	1
  8880     071E                     u1595:
  8881     071E  35A4               	lslf	___lmul@multiplicand,f
  8882     071F  0DA5               	rlf	___lmul@multiplicand+1,f
  8883     0720  0DA6               	rlf	___lmul@multiplicand+2,f
  8884     0721  0DA7               	rlf	___lmul@multiplicand+3,f
  8885     0722  0B89               	decfsz	9,f
  8886     0723  2F1E               	goto	u1595
  8887     0724                     l3593:
  8888     0724  3001               	movlw	1
  8889     0725                     u1605:
  8890     0725  36A3               	lsrf	___lmul@multiplier+3,f
  8891     0726  0CA2               	rrf	___lmul@multiplier+2,f
  8892     0727  0CA1               	rrf	___lmul@multiplier+1,f
  8893     0728  0CA0               	rrf	___lmul@multiplier,f
  8894     0729  0B89               	decfsz	9,f
  8895     072A  2F25               	goto	u1605
  8896     072B  0823               	movf	___lmul@multiplier+3,w
  8897     072C  0422               	iorwf	___lmul@multiplier+2,w
  8898     072D  0421               	iorwf	___lmul@multiplier+1,w
  8899     072E  0420               	iorwf	___lmul@multiplier,w
  8900     072F  1D03               	skipz
  8901     0730  2F32               	goto	u1611
  8902     0731  2F33               	goto	u1610
  8903     0732                     u1611:
  8904     0732  2F11               	goto	l3587
  8905     0733                     u1610:
  8906     0733                     l3595:
  8907     0733  082B               	movf	___lmul@product+3,w
  8908     0734  00A3               	movwf	?___lmul+3
  8909     0735  082A               	movf	___lmul@product+2,w
  8910     0736  00A2               	movwf	?___lmul+2
  8911     0737  0829               	movf	___lmul@product+1,w
  8912     0738  00A1               	movwf	?___lmul+1
  8913     0739  0828               	movf	___lmul@product,w
  8914     073A  00A0               	movwf	?___lmul
  8915     073B                     l957:
  8916     073B  0008               	return
  8917     073C                     __end_of___lmul:
  8918                           
  8919                           	psect	text28
  8920     0260                     __ptext28:	
  8921 ;; *************** function ___aldiv *****************
  8922 ;; Defined at:
  8923 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  divisor         4   12[BANK0 ] long 
  8926 ;;  dividend        4   16[BANK0 ] long 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  quotient        4   22[BANK0 ] long 
  8929 ;;  sign            1   21[BANK0 ] unsigned char 
  8930 ;;  counter         1   20[BANK0 ] unsigned char 
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  4   12[BANK0 ] long 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8940 ;;      Params:         0       8       0       0       0       0       0       0
  8941 ;;      Locals:         0       6       0       0       0       0       0       0
  8942 ;;      Temps:          1       0       0       0       0       0       0       0
  8943 ;;      Totals:         1      14       0       0       0       0       0       0
  8944 ;;Total ram usage:       15 bytes
  8945 ;; Hardware stack levels used: 1
  8946 ;; Hardware stack levels required when called: 7
  8947 ;; This function calls:
  8948 ;;		Nothing
  8949 ;; This function is called by:
  8950 ;;		_ADC2Celsius
  8951 ;;		_ADC2Amp
  8952 ;;		_ADC2dBm
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956     0260                     ___aldiv:	
  8957                           ;psect for function ___aldiv
  8958                           
  8959     0260                     l3599:	
  8960                           ;incstack = 0
  8961                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8962                           
  8963     0260  0020               	movlb	0	; select bank0
  8964     0261  01B5               	clrf	___aldiv@sign
  8965     0262                     l3601:
  8966     0262  1FAF               	btfss	___aldiv@divisor+3,7
  8967     0263  2A65               	goto	u1621
  8968     0264  2A66               	goto	u1620
  8969     0265                     u1621:
  8970     0265  2A73               	goto	l1008
  8971     0266                     u1620:
  8972     0266                     l3603:
  8973     0266  09AC               	comf	___aldiv@divisor,f
  8974     0267  09AD               	comf	___aldiv@divisor+1,f
  8975     0268  09AE               	comf	___aldiv@divisor+2,f
  8976     0269  09AF               	comf	___aldiv@divisor+3,f
  8977     026A  0AAC               	incf	___aldiv@divisor,f
  8978     026B  1903               	skipnz
  8979     026C  0AAD               	incf	___aldiv@divisor+1,f
  8980     026D  1903               	skipnz
  8981     026E  0AAE               	incf	___aldiv@divisor+2,f
  8982     026F  1903               	skipnz
  8983     0270  0AAF               	incf	___aldiv@divisor+3,f
  8984     0271  01B5               	clrf	___aldiv@sign
  8985     0272  0AB5               	incf	___aldiv@sign,f
  8986     0273                     l1008:
  8987     0273  1FB3               	btfss	___aldiv@dividend+3,7
  8988     0274  2A76               	goto	u1631
  8989     0275  2A77               	goto	u1630
  8990     0276                     u1631:
  8991     0276  2A86               	goto	l3609
  8992     0277                     u1630:
  8993     0277                     l3605:
  8994     0277  09B0               	comf	___aldiv@dividend,f
  8995     0278  09B1               	comf	___aldiv@dividend+1,f
  8996     0279  09B2               	comf	___aldiv@dividend+2,f
  8997     027A  09B3               	comf	___aldiv@dividend+3,f
  8998     027B  0AB0               	incf	___aldiv@dividend,f
  8999     027C  1903               	skipnz
  9000     027D  0AB1               	incf	___aldiv@dividend+1,f
  9001     027E  1903               	skipnz
  9002     027F  0AB2               	incf	___aldiv@dividend+2,f
  9003     0280  1903               	skipnz
  9004     0281  0AB3               	incf	___aldiv@dividend+3,f
  9005     0282                     l3607:
  9006     0282  3001               	movlw	1
  9007     0283  00F4               	movwf	??___aldiv
  9008     0284  0874               	movf	??___aldiv,w
  9009     0285  06B5               	xorwf	___aldiv@sign,f
  9010     0286                     l3609:
  9011     0286  3000               	movlw	0
  9012     0287  00B9               	movwf	___aldiv@quotient+3
  9013     0288  3000               	movlw	0
  9014     0289  00B8               	movwf	___aldiv@quotient+2
  9015     028A  3000               	movlw	0
  9016     028B  00B7               	movwf	___aldiv@quotient+1
  9017     028C  3000               	movlw	0
  9018     028D  00B6               	movwf	___aldiv@quotient
  9019     028E                     l3611:
  9020     028E  082F               	movf	___aldiv@divisor+3,w
  9021     028F  042E               	iorwf	___aldiv@divisor+2,w
  9022     0290  042D               	iorwf	___aldiv@divisor+1,w
  9023     0291  042C               	iorwf	___aldiv@divisor,w
  9024     0292  1903               	skipnz
  9025     0293  2A95               	goto	u1641
  9026     0294  2A96               	goto	u1640
  9027     0295                     u1641:
  9028     0295  2AD7               	goto	l3631
  9029     0296                     u1640:
  9030     0296                     l3613:
  9031     0296  01B4               	clrf	___aldiv@counter
  9032     0297  0AB4               	incf	___aldiv@counter,f
  9033     0298  2AA4               	goto	l3617
  9034     0299                     l3615:
  9035     0299  3001               	movlw	1
  9036     029A                     u1655:
  9037     029A  35AC               	lslf	___aldiv@divisor,f
  9038     029B  0DAD               	rlf	___aldiv@divisor+1,f
  9039     029C  0DAE               	rlf	___aldiv@divisor+2,f
  9040     029D  0DAF               	rlf	___aldiv@divisor+3,f
  9041     029E  0B89               	decfsz	9,f
  9042     029F  2A9A               	goto	u1655
  9043     02A0  3001               	movlw	1
  9044     02A1  00F4               	movwf	??___aldiv
  9045     02A2  0874               	movf	??___aldiv,w
  9046     02A3  07B4               	addwf	___aldiv@counter,f
  9047     02A4                     l3617:
  9048     02A4  1FAF               	btfss	___aldiv@divisor+3,7
  9049     02A5  2AA7               	goto	u1661
  9050     02A6  2AA8               	goto	u1660
  9051     02A7                     u1661:
  9052     02A7  2A99               	goto	l3615
  9053     02A8                     u1660:
  9054     02A8                     l3619:
  9055     02A8  3001               	movlw	1
  9056     02A9                     u1675:
  9057     02A9  35B6               	lslf	___aldiv@quotient,f
  9058     02AA  0DB7               	rlf	___aldiv@quotient+1,f
  9059     02AB  0DB8               	rlf	___aldiv@quotient+2,f
  9060     02AC  0DB9               	rlf	___aldiv@quotient+3,f
  9061     02AD  0B89               	decfsz	9,f
  9062     02AE  2AA9               	goto	u1675
  9063     02AF                     l3621:
  9064     02AF  082F               	movf	___aldiv@divisor+3,w
  9065     02B0  0233               	subwf	___aldiv@dividend+3,w
  9066     02B1  1D03               	skipz
  9067     02B2  2ABD               	goto	u1685
  9068     02B3  082E               	movf	___aldiv@divisor+2,w
  9069     02B4  0232               	subwf	___aldiv@dividend+2,w
  9070     02B5  1D03               	skipz
  9071     02B6  2ABD               	goto	u1685
  9072     02B7  082D               	movf	___aldiv@divisor+1,w
  9073     02B8  0231               	subwf	___aldiv@dividend+1,w
  9074     02B9  1D03               	skipz
  9075     02BA  2ABD               	goto	u1685
  9076     02BB  082C               	movf	___aldiv@divisor,w
  9077     02BC  0230               	subwf	___aldiv@dividend,w
  9078     02BD                     u1685:
  9079     02BD  1C03               	skipc
  9080     02BE  2AC0               	goto	u1681
  9081     02BF  2AC1               	goto	u1680
  9082     02C0                     u1681:
  9083     02C0  2ACA               	goto	l3627
  9084     02C1                     u1680:
  9085     02C1                     l3623:
  9086     02C1  082C               	movf	___aldiv@divisor,w
  9087     02C2  02B0               	subwf	___aldiv@dividend,f
  9088     02C3  082D               	movf	___aldiv@divisor+1,w
  9089     02C4  3BB1               	subwfb	___aldiv@dividend+1,f
  9090     02C5  082E               	movf	___aldiv@divisor+2,w
  9091     02C6  3BB2               	subwfb	___aldiv@dividend+2,f
  9092     02C7  082F               	movf	___aldiv@divisor+3,w
  9093     02C8  3BB3               	subwfb	___aldiv@dividend+3,f
  9094     02C9                     l3625:
  9095     02C9  1436               	bsf	___aldiv@quotient,0
  9096     02CA                     l3627:
  9097     02CA  3001               	movlw	1
  9098     02CB                     u1695:
  9099     02CB  36AF               	lsrf	___aldiv@divisor+3,f
  9100     02CC  0CAE               	rrf	___aldiv@divisor+2,f
  9101     02CD  0CAD               	rrf	___aldiv@divisor+1,f
  9102     02CE  0CAC               	rrf	___aldiv@divisor,f
  9103     02CF  0B89               	decfsz	9,f
  9104     02D0  2ACB               	goto	u1695
  9105     02D1                     l3629:
  9106     02D1  3001               	movlw	1
  9107     02D2  02B4               	subwf	___aldiv@counter,f
  9108     02D3  1D03               	btfss	3,2
  9109     02D4  2AD6               	goto	u1701
  9110     02D5  2AD7               	goto	u1700
  9111     02D6                     u1701:
  9112     02D6  2AA8               	goto	l3619
  9113     02D7                     u1700:
  9114     02D7                     l3631:
  9115     02D7  0835               	movf	___aldiv@sign,w
  9116     02D8  1903               	btfsc	3,2
  9117     02D9  2ADB               	goto	u1711
  9118     02DA  2ADC               	goto	u1710
  9119     02DB                     u1711:
  9120     02DB  2AE7               	goto	l3635
  9121     02DC                     u1710:
  9122     02DC                     l3633:
  9123     02DC  09B6               	comf	___aldiv@quotient,f
  9124     02DD  09B7               	comf	___aldiv@quotient+1,f
  9125     02DE  09B8               	comf	___aldiv@quotient+2,f
  9126     02DF  09B9               	comf	___aldiv@quotient+3,f
  9127     02E0  0AB6               	incf	___aldiv@quotient,f
  9128     02E1  1903               	skipnz
  9129     02E2  0AB7               	incf	___aldiv@quotient+1,f
  9130     02E3  1903               	skipnz
  9131     02E4  0AB8               	incf	___aldiv@quotient+2,f
  9132     02E5  1903               	skipnz
  9133     02E6  0AB9               	incf	___aldiv@quotient+3,f
  9134     02E7                     l3635:
  9135     02E7  0839               	movf	___aldiv@quotient+3,w
  9136     02E8  00AF               	movwf	?___aldiv+3
  9137     02E9  0838               	movf	___aldiv@quotient+2,w
  9138     02EA  00AE               	movwf	?___aldiv+2
  9139     02EB  0837               	movf	___aldiv@quotient+1,w
  9140     02EC  00AD               	movwf	?___aldiv+1
  9141     02ED  0836               	movf	___aldiv@quotient,w
  9142     02EE  00AC               	movwf	?___aldiv
  9143     02EF                     l1018:
  9144     02EF  0008               	return
  9145     02F0                     __end_of___aldiv:
  9146                           
  9147                           	psect	text29
  9148     0F84                     __ptext29:	
  9149 ;; *************** function _KAPS_setRelPos *****************
  9150 ;; Defined at:
  9151 ;;		line 51 in file "kaps.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  offset          1    wreg     char 
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  offset          1    7[BANK0 ] char 
  9156 ;;  reg             1    8[BANK0 ] unsigned char 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, status,2, status,0, pclath, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9166 ;;      Params:         0       0       0       0       0       0       0       0
  9167 ;;      Locals:         0       2       0       0       0       0       0       0
  9168 ;;      Temps:          0       2       0       0       0       0       0       0
  9169 ;;      Totals:         0       4       0       0       0       0       0       0
  9170 ;;Total ram usage:        4 bytes
  9171 ;; Hardware stack levels used: 1
  9172 ;; Hardware stack levels required when called: 10
  9173 ;; This function calls:
  9174 ;;		_I2C1_Write
  9175 ;; This function is called by:
  9176 ;;		_ProcessMsg
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180     0F84                     _KAPS_setRelPos:	
  9181                           ;psect for function _KAPS_setRelPos
  9182                           
  9183                           
  9184                           ;incstack = 0
  9185                           ; Regs used in _KAPS_setRelPos: [wreg+status,2+status,0+pclath+cstack]
  9186                           ;KAPS_setRelPos@offset stored from wreg
  9187     0F84  0020               	movlb	0	; select bank0
  9188     0F85  00A7               	movwf	KAPS_setRelPos@offset
  9189     0F86                     l3897:
  9190                           
  9191                           ;kaps.c: 52:     uint8_t reg = 0x02;
  9192     0F86  3002               	movlw	2
  9193     0F87  00A8               	movwf	KAPS_setRelPos@reg
  9194     0F88                     l3899:
  9195                           
  9196                           ;kaps.c: 54:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9197     0F88  0866               	movf	_kaps,w
  9198     0F89  00A5               	movwf	??_KAPS_setRelPos
  9199     0F8A  01A6               	clrf	??_KAPS_setRelPos+1
  9200     0F8B  0825               	movf	??_KAPS_setRelPos,w
  9201     0F8C  00A0               	movwf	I2C1_Write@address
  9202     0F8D  0826               	movf	??_KAPS_setRelPos+1,w
  9203     0F8E  00A1               	movwf	I2C1_Write@address+1
  9204     0F8F  3028               	movlw	(low (KAPS_setRelPos@reg| 0))& (0+255)
  9205     0F90  00A2               	movwf	I2C1_Write@data
  9206     0F91  3001               	movlw	1
  9207     0F92  00A3               	movwf	I2C1_Write@dataLength
  9208     0F93  3000               	movlw	0
  9209     0F94  00A4               	movwf	I2C1_Write@dataLength+1
  9210     0F95  318E  26D6  318F   	fcall	_I2C1_Write
  9211     0F98                     l3901:
  9212                           
  9213                           ;kaps.c: 55:     I2C1_Write(kaps.m_bAddr, (uint8_t*)&offset, 1);
  9214     0F98  0020               	movlb	0	; select bank0
  9215     0F99  0866               	movf	_kaps,w
  9216     0F9A  00A5               	movwf	??_KAPS_setRelPos
  9217     0F9B  01A6               	clrf	??_KAPS_setRelPos+1
  9218     0F9C  0825               	movf	??_KAPS_setRelPos,w
  9219     0F9D  00A0               	movwf	I2C1_Write@address
  9220     0F9E  0826               	movf	??_KAPS_setRelPos+1,w
  9221     0F9F  00A1               	movwf	I2C1_Write@address+1
  9222     0FA0  3027               	movlw	(low (KAPS_setRelPos@offset| 0))& (0+255)
  9223     0FA1  00A2               	movwf	I2C1_Write@data
  9224     0FA2  3001               	movlw	1
  9225     0FA3  00A3               	movwf	I2C1_Write@dataLength
  9226     0FA4  3000               	movlw	0
  9227     0FA5  00A4               	movwf	I2C1_Write@dataLength+1
  9228     0FA6  318E  26D6  318F   	fcall	_I2C1_Write
  9229     0FA9                     l719:
  9230     0FA9  0008               	return
  9231     0FAA                     __end_of_KAPS_setRelPos:
  9232                           
  9233                           	psect	text30
  9234     073C                     __ptext30:	
  9235 ;; *************** function _KAPS_setAbsPos *****************
  9236 ;; Defined at:
  9237 ;;		line 36 in file "kaps.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  pos             4   13[BANK0 ] unsigned long 
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;  data            4   19[BANK0 ] unsigned char [4]
  9242 ;;  reg             1   23[BANK0 ] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9252 ;;      Params:         0       4       0       0       0       0       0       0
  9253 ;;      Locals:         0       5       0       0       0       0       0       0
  9254 ;;      Temps:          0       2       0       0       0       0       0       0
  9255 ;;      Totals:         0      11       0       0       0       0       0       0
  9256 ;;Total ram usage:       11 bytes
  9257 ;; Hardware stack levels used: 1
  9258 ;; Hardware stack levels required when called: 10
  9259 ;; This function calls:
  9260 ;;		_I2C1_Write
  9261 ;;		_unpackLong
  9262 ;; This function is called by:
  9263 ;;		_ProcessMsg
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267     073C                     _KAPS_setAbsPos:	
  9268                           ;psect for function _KAPS_setAbsPos
  9269                           
  9270     073C                     l3889:	
  9271                           ;incstack = 0
  9272                           ; Regs used in _KAPS_setAbsPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9273                           
  9274                           
  9275                           ;kaps.c: 37:     uint8_t reg = 0x01;
  9276     073C  0020               	movlb	0	; select bank0
  9277     073D  01B7               	clrf	KAPS_setAbsPos@reg
  9278     073E  0AB7               	incf	KAPS_setAbsPos@reg,f
  9279     073F                     l3891:
  9280                           
  9281                           ;kaps.c: 38:     uint8_t data[4];;kaps.c: 40:     unpackLong(pos, data);
  9282     073F  0830               	movf	KAPS_setAbsPos@pos+3,w
  9283     0740  00A3               	movwf	unpackLong@value+3
  9284     0741  082F               	movf	KAPS_setAbsPos@pos+2,w
  9285     0742  00A2               	movwf	unpackLong@value+2
  9286     0743  082E               	movf	KAPS_setAbsPos@pos+1,w
  9287     0744  00A1               	movwf	unpackLong@value+1
  9288     0745  082D               	movf	KAPS_setAbsPos@pos,w
  9289     0746  00A0               	movwf	unpackLong@value
  9290     0747  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9291     0748  00A4               	movwf	unpackLong@data
  9292     0749  3184  2468  3187   	fcall	_unpackLong
  9293     074C                     l3893:
  9294                           
  9295                           ;kaps.c: 42:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9296     074C  0020               	movlb	0	; select bank0
  9297     074D  0866               	movf	_kaps,w
  9298     074E  00B1               	movwf	??_KAPS_setAbsPos
  9299     074F  01B2               	clrf	??_KAPS_setAbsPos+1
  9300     0750  0831               	movf	??_KAPS_setAbsPos,w
  9301     0751  00A0               	movwf	I2C1_Write@address
  9302     0752  0832               	movf	??_KAPS_setAbsPos+1,w
  9303     0753  00A1               	movwf	I2C1_Write@address+1
  9304     0754  3037               	movlw	(low (KAPS_setAbsPos@reg| 0))& (0+255)
  9305     0755  00A2               	movwf	I2C1_Write@data
  9306     0756  3001               	movlw	1
  9307     0757  00A3               	movwf	I2C1_Write@dataLength
  9308     0758  3000               	movlw	0
  9309     0759  00A4               	movwf	I2C1_Write@dataLength+1
  9310     075A  318E  26D6  3187   	fcall	_I2C1_Write
  9311     075D                     l3895:
  9312                           
  9313                           ;kaps.c: 43:     I2C1_Write(kaps.m_bAddr, data, 4);
  9314     075D  0020               	movlb	0	; select bank0
  9315     075E  0866               	movf	_kaps,w
  9316     075F  00B1               	movwf	??_KAPS_setAbsPos
  9317     0760  01B2               	clrf	??_KAPS_setAbsPos+1
  9318     0761  0831               	movf	??_KAPS_setAbsPos,w
  9319     0762  00A0               	movwf	I2C1_Write@address
  9320     0763  0832               	movf	??_KAPS_setAbsPos+1,w
  9321     0764  00A1               	movwf	I2C1_Write@address+1
  9322     0765  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9323     0766  00A2               	movwf	I2C1_Write@data
  9324     0767  3004               	movlw	4
  9325     0768  00A3               	movwf	I2C1_Write@dataLength
  9326     0769  3000               	movlw	0
  9327     076A  00A4               	movwf	I2C1_Write@dataLength+1
  9328     076B  318E  26D6  3187   	fcall	_I2C1_Write
  9329     076E                     l716:
  9330     076E  0008               	return
  9331     076F                     __end_of_KAPS_setAbsPos:
  9332                           
  9333                           	psect	text31
  9334     079F                     __ptext31:	
  9335 ;; *************** function _KAPS_getStatus *****************
  9336 ;; Defined at:
  9337 ;;		line 80 in file "kaps.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;		None
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  data            1    8[BANK0 ] unsigned char 
  9342 ;;  reg             1    7[BANK0 ] unsigned char 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0, pclath, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9352 ;;      Params:         0       0       0       0       0       0       0       0
  9353 ;;      Locals:         0       2       0       0       0       0       0       0
  9354 ;;      Temps:          0       2       0       0       0       0       0       0
  9355 ;;      Totals:         0       4       0       0       0       0       0       0
  9356 ;;Total ram usage:        4 bytes
  9357 ;; Hardware stack levels used: 1
  9358 ;; Hardware stack levels required when called: 10
  9359 ;; This function calls:
  9360 ;;		_I2C1_Read
  9361 ;;		_I2C1_Write
  9362 ;; This function is called by:
  9363 ;;		_ProcessMsg
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367     079F                     _KAPS_getStatus:	
  9368                           ;psect for function _KAPS_getStatus
  9369                           
  9370     079F                     l3835:	
  9371                           ;incstack = 0
  9372                           ; Regs used in _KAPS_getStatus: [wreg+status,2+status,0+pclath+cstack]
  9373                           
  9374                           
  9375                           ;kaps.c: 81:     uint8_t reg = 0xFF;
  9376     079F  30FF               	movlw	255
  9377     07A0  0020               	movlb	0	; select bank0
  9378     07A1  00A7               	movwf	KAPS_getStatus@reg
  9379     07A2                     l3837:
  9380                           
  9381                           ;kaps.c: 82:     uint8_t data = 0x00;
  9382     07A2  01A8               	clrf	KAPS_getStatus@data
  9383     07A3                     l3839:
  9384                           
  9385                           ;kaps.c: 84:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9386     07A3  0866               	movf	_kaps,w
  9387     07A4  00A5               	movwf	??_KAPS_getStatus
  9388     07A5  01A6               	clrf	??_KAPS_getStatus+1
  9389     07A6  0825               	movf	??_KAPS_getStatus,w
  9390     07A7  00A0               	movwf	I2C1_Write@address
  9391     07A8  0826               	movf	??_KAPS_getStatus+1,w
  9392     07A9  00A1               	movwf	I2C1_Write@address+1
  9393     07AA  3027               	movlw	(low (KAPS_getStatus@reg| 0))& (0+255)
  9394     07AB  00A2               	movwf	I2C1_Write@data
  9395     07AC  3001               	movlw	1
  9396     07AD  00A3               	movwf	I2C1_Write@dataLength
  9397     07AE  3000               	movlw	0
  9398     07AF  00A4               	movwf	I2C1_Write@dataLength+1
  9399     07B0  318E  26D6  3187   	fcall	_I2C1_Write
  9400     07B3                     l3841:
  9401                           
  9402                           ;kaps.c: 86:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9403     07B3  0020               	movlb	0	; select bank0
  9404     07B4  0866               	movf	_kaps,w
  9405     07B5  00A5               	movwf	??_KAPS_getStatus
  9406     07B6  01A6               	clrf	??_KAPS_getStatus+1
  9407     07B7  0825               	movf	??_KAPS_getStatus,w
  9408     07B8  00A0               	movwf	I2C1_Read@address
  9409     07B9  0826               	movf	??_KAPS_getStatus+1,w
  9410     07BA  00A1               	movwf	I2C1_Read@address+1
  9411     07BB  3028               	movlw	(low (KAPS_getStatus@data| 0))& (0+255)
  9412     07BC  00A2               	movwf	I2C1_Read@data
  9413     07BD  3001               	movlw	1
  9414     07BE  00A3               	movwf	I2C1_Read@dataLength
  9415     07BF  3000               	movlw	0
  9416     07C0  00A4               	movwf	I2C1_Read@dataLength+1
  9417     07C1  318E  26F4  3187   	fcall	_I2C1_Read
  9418     07C4  3A00               	xorlw	0
  9419     07C5  1903               	skipnz
  9420     07C6  2FC8               	goto	u1901
  9421     07C7  2FC9               	goto	u1900
  9422     07C8                     u1901:
  9423     07C8  2FCC               	goto	l726
  9424     07C9                     u1900:
  9425     07C9                     l3843:
  9426                           
  9427                           ;kaps.c: 87:         kaps.m_Status = (kaps_status_t) data;
  9428     07C9  0020               	movlb	0	; select bank0
  9429     07CA  0828               	movf	KAPS_getStatus@data,w
  9430     07CB  00E7               	movwf	_kaps+1
  9431     07CC                     l726:
  9432     07CC  0008               	return
  9433     07CD                     __end_of_KAPS_getStatus:
  9434                           
  9435                           	psect	text32
  9436     0570                     __ptext32:	
  9437 ;; *************** function _KAPS_getPos *****************
  9438 ;; Defined at:
  9439 ;;		line 106 in file "kaps.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;		None
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;  data            4   15[BANK0 ] unsigned char [4]
  9444 ;;  reg             1   19[BANK0 ] unsigned char 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9454 ;;      Params:         0       0       0       0       0       0       0       0
  9455 ;;      Locals:         0       5       0       0       0       0       0       0
  9456 ;;      Temps:          0       2       0       0       0       0       0       0
  9457 ;;      Totals:         0       7       0       0       0       0       0       0
  9458 ;;Total ram usage:        7 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 10
  9461 ;; This function calls:
  9462 ;;		_I2C1_Read
  9463 ;;		_I2C1_Write
  9464 ;;		_packLong
  9465 ;; This function is called by:
  9466 ;;		_ProcessMsg
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470     0570                     _KAPS_getPos:	
  9471                           ;psect for function _KAPS_getPos
  9472                           
  9473     0570                     l3845:	
  9474                           ;incstack = 0
  9475                           ; Regs used in _KAPS_getPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9476                           
  9477                           
  9478                           ;kaps.c: 107:     uint8_t reg = 0x00;
  9479     0570  0020               	movlb	0	; select bank0
  9480     0571  01B3               	clrf	KAPS_getPos@reg
  9481     0572                     l3847:
  9482                           
  9483                           ;kaps.c: 108:     uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
  9484     0572  3000               	movlw	0
  9485     0573  00B2               	movwf	KAPS_getPos@data+3
  9486     0574  3000               	movlw	0
  9487     0575  00B1               	movwf	KAPS_getPos@data+2
  9488     0576  3000               	movlw	0
  9489     0577  00B0               	movwf	KAPS_getPos@data+1
  9490     0578  3000               	movlw	0
  9491     0579  00AF               	movwf	KAPS_getPos@data
  9492     057A                     l3849:
  9493                           
  9494                           ;kaps.c: 110:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9495     057A  0866               	movf	_kaps,w
  9496     057B  00AD               	movwf	??_KAPS_getPos
  9497     057C  01AE               	clrf	??_KAPS_getPos+1
  9498     057D  082D               	movf	??_KAPS_getPos,w
  9499     057E  00A0               	movwf	I2C1_Write@address
  9500     057F  082E               	movf	??_KAPS_getPos+1,w
  9501     0580  00A1               	movwf	I2C1_Write@address+1
  9502     0581  3033               	movlw	(low (KAPS_getPos@reg| 0))& (0+255)
  9503     0582  00A2               	movwf	I2C1_Write@data
  9504     0583  3001               	movlw	1
  9505     0584  00A3               	movwf	I2C1_Write@dataLength
  9506     0585  3000               	movlw	0
  9507     0586  00A4               	movwf	I2C1_Write@dataLength+1
  9508     0587  318E  26D6  3185   	fcall	_I2C1_Write
  9509     058A                     l3851:
  9510                           
  9511                           ;kaps.c: 112:     if (I2C1_Read(kaps.m_bAddr, data, 4))
  9512     058A  0020               	movlb	0	; select bank0
  9513     058B  0866               	movf	_kaps,w
  9514     058C  00AD               	movwf	??_KAPS_getPos
  9515     058D  01AE               	clrf	??_KAPS_getPos+1
  9516     058E  082D               	movf	??_KAPS_getPos,w
  9517     058F  00A0               	movwf	I2C1_Read@address
  9518     0590  082E               	movf	??_KAPS_getPos+1,w
  9519     0591  00A1               	movwf	I2C1_Read@address+1
  9520     0592  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9521     0593  00A2               	movwf	I2C1_Read@data
  9522     0594  3004               	movlw	4
  9523     0595  00A3               	movwf	I2C1_Read@dataLength
  9524     0596  3000               	movlw	0
  9525     0597  00A4               	movwf	I2C1_Read@dataLength+1
  9526     0598  318E  26F4  3185   	fcall	_I2C1_Read
  9527     059B  3A00               	xorlw	0
  9528     059C  1903               	skipnz
  9529     059D  2D9F               	goto	u1911
  9530     059E  2DA0               	goto	u1910
  9531     059F                     u1911:
  9532     059F  2DAD               	goto	l736
  9533     05A0                     u1910:
  9534     05A0                     l3853:
  9535                           
  9536                           ;kaps.c: 113:         kaps.m_lAbsPos = packLong(data);
  9537     05A0  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9538     05A1  3183  237A  3185   	fcall	_packLong
  9539     05A4  0020               	movlb	0	; select bank0
  9540     05A5  0823               	movf	?_packLong+3,w
  9541     05A6  00EB               	movwf	_kaps+5
  9542     05A7  0822               	movf	?_packLong+2,w
  9543     05A8  00EA               	movwf	_kaps+4
  9544     05A9  0821               	movf	?_packLong+1,w
  9545     05AA  00E9               	movwf	_kaps+3
  9546     05AB  0820               	movf	?_packLong,w
  9547     05AC  00E8               	movwf	_kaps+2
  9548     05AD                     l736:
  9549     05AD  0008               	return
  9550     05AE                     __end_of_KAPS_getPos:
  9551                           
  9552                           	psect	text33
  9553     037A                     __ptext33:	
  9554 ;; *************** function _packLong *****************
  9555 ;; Defined at:
  9556 ;;		line 20 in file "utils.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  data            1    wreg     PTR unsigned char 
  9559 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  data            1   12[BANK0 ] PTR unsigned char 
  9562 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9563 ;;  result          4    8[BANK0 ] unsigned long 
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  4    0[BANK0 ] unsigned long 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9573 ;;      Params:         0       4       0       0       0       0       0       0
  9574 ;;      Locals:         0       5       0       0       0       0       0       0
  9575 ;;      Temps:          0       4       0       0       0       0       0       0
  9576 ;;      Totals:         0      13       0       0       0       0       0       0
  9577 ;;Total ram usage:       13 bytes
  9578 ;; Hardware stack levels used: 1
  9579 ;; Hardware stack levels required when called: 7
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_ProcessMsg
  9584 ;;		_KAPS_getPos
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588     037A                     _packLong:	
  9589                           ;psect for function _packLong
  9590                           
  9591                           
  9592                           ;incstack = 0
  9593                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  9594                           ;packLong@data stored from wreg
  9595     037A  0020               	movlb	0	; select bank0
  9596     037B  00AC               	movwf	packLong@data
  9597     037C                     l3723:
  9598     037C                     l3725:
  9599                           
  9600                           ;utils.c: 26:     result = (uint32_t) data[0] << 24;
  9601     037C  082C               	movf	packLong@data,w
  9602     037D  0086               	movwf	6
  9603     037E  0187               	clrf	7
  9604     037F  0801               	movf	1,w
  9605     0380  00A4               	movwf	??_packLong
  9606     0381  01A5               	clrf	??_packLong+1
  9607     0382  01A6               	clrf	??_packLong+2
  9608     0383  01A7               	clrf	??_packLong+3
  9609     0384  3018               	movlw	24
  9610     0385                     u1795:
  9611     0385  35A4               	lslf	??_packLong,f
  9612     0386  0DA5               	rlf	??_packLong+1,f
  9613     0387  0DA6               	rlf	??_packLong+2,f
  9614     0388  0DA7               	rlf	??_packLong+3,f
  9615     0389                     u1790:
  9616     0389  0B89               	decfsz	9,f
  9617     038A  2B85               	goto	u1795
  9618     038B  0827               	movf	??_packLong+3,w
  9619     038C  00AB               	movwf	packLong@result+3
  9620     038D  0826               	movf	??_packLong+2,w
  9621     038E  00AA               	movwf	packLong@result+2
  9622     038F  0825               	movf	??_packLong+1,w
  9623     0390  00A9               	movwf	packLong@result+1
  9624     0391  0824               	movf	??_packLong,w
  9625     0392  00A8               	movwf	packLong@result
  9626     0393                     l3727:
  9627                           
  9628                           ;utils.c: 27:     result |= (uint32_t) data[1] << 16;
  9629     0393  0A2C               	incf	packLong@data,w
  9630     0394  0086               	movwf	6
  9631     0395  0187               	clrf	7
  9632     0396  0801               	movf	1,w
  9633     0397  00A4               	movwf	??_packLong
  9634     0398  01A5               	clrf	??_packLong+1
  9635     0399  01A6               	clrf	??_packLong+2
  9636     039A  01A7               	clrf	??_packLong+3
  9637     039B  3010               	movlw	16
  9638     039C                     u1805:
  9639     039C  35A4               	lslf	??_packLong,f
  9640     039D  0DA5               	rlf	??_packLong+1,f
  9641     039E  0DA6               	rlf	??_packLong+2,f
  9642     039F  0DA7               	rlf	??_packLong+3,f
  9643     03A0                     u1800:
  9644     03A0  0B89               	decfsz	9,f
  9645     03A1  2B9C               	goto	u1805
  9646     03A2  0824               	movf	??_packLong,w
  9647     03A3  04A8               	iorwf	packLong@result,f
  9648     03A4  0825               	movf	??_packLong+1,w
  9649     03A5  04A9               	iorwf	packLong@result+1,f
  9650     03A6  0826               	movf	??_packLong+2,w
  9651     03A7  04AA               	iorwf	packLong@result+2,f
  9652     03A8  0827               	movf	??_packLong+3,w
  9653     03A9  04AB               	iorwf	packLong@result+3,f
  9654     03AA                     l3729:
  9655                           
  9656                           ;utils.c: 28:     result |= (uint32_t) data[2] << 8;
  9657     03AA  082C               	movf	packLong@data,w
  9658     03AB  3E02               	addlw	2
  9659     03AC  0086               	movwf	6
  9660     03AD  0187               	clrf	7
  9661     03AE  0801               	movf	1,w
  9662     03AF  00A4               	movwf	??_packLong
  9663     03B0  01A5               	clrf	??_packLong+1
  9664     03B1  01A6               	clrf	??_packLong+2
  9665     03B2  01A7               	clrf	??_packLong+3
  9666     03B3  3008               	movlw	8
  9667     03B4                     u1815:
  9668     03B4  35A4               	lslf	??_packLong,f
  9669     03B5  0DA5               	rlf	??_packLong+1,f
  9670     03B6  0DA6               	rlf	??_packLong+2,f
  9671     03B7  0DA7               	rlf	??_packLong+3,f
  9672     03B8                     u1810:
  9673     03B8  0B89               	decfsz	9,f
  9674     03B9  2BB4               	goto	u1815
  9675     03BA  0824               	movf	??_packLong,w
  9676     03BB  04A8               	iorwf	packLong@result,f
  9677     03BC  0825               	movf	??_packLong+1,w
  9678     03BD  04A9               	iorwf	packLong@result+1,f
  9679     03BE  0826               	movf	??_packLong+2,w
  9680     03BF  04AA               	iorwf	packLong@result+2,f
  9681     03C0  0827               	movf	??_packLong+3,w
  9682     03C1  04AB               	iorwf	packLong@result+3,f
  9683     03C2                     l3731:
  9684                           
  9685                           ;utils.c: 29:     result |= (uint32_t) data[3];
  9686     03C2  082C               	movf	packLong@data,w
  9687     03C3  3E03               	addlw	3
  9688     03C4  0086               	movwf	6
  9689     03C5  0187               	clrf	7
  9690     03C6  0801               	movf	1,w
  9691     03C7  04A8               	iorwf	packLong@result,f
  9692                           
  9693                           ;utils.c: 31:     return result;
  9694     03C8  082B               	movf	packLong@result+3,w
  9695     03C9  00A3               	movwf	?_packLong+3
  9696     03CA  082A               	movf	packLong@result+2,w
  9697     03CB  00A2               	movwf	?_packLong+2
  9698     03CC  0829               	movf	packLong@result+1,w
  9699     03CD  00A1               	movwf	?_packLong+1
  9700     03CE  0828               	movf	packLong@result,w
  9701     03CF  00A0               	movwf	?_packLong
  9702     03D0                     l739:
  9703     03D0  0008               	return
  9704     03D1                     __end_of_packLong:
  9705                           
  9706                           	psect	text34
  9707     07CD                     __ptext34:	
  9708 ;; *************** function _KAPS_getIndex *****************
  9709 ;; Defined at:
  9710 ;;		line 93 in file "kaps.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  data            1    8[BANK0 ] unsigned char 
  9715 ;;  reg             1    7[BANK0 ] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1    wreg      void 
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0, pclath, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9725 ;;      Params:         0       0       0       0       0       0       0       0
  9726 ;;      Locals:         0       2       0       0       0       0       0       0
  9727 ;;      Temps:          0       2       0       0       0       0       0       0
  9728 ;;      Totals:         0       4       0       0       0       0       0       0
  9729 ;;Total ram usage:        4 bytes
  9730 ;; Hardware stack levels used: 1
  9731 ;; Hardware stack levels required when called: 10
  9732 ;; This function calls:
  9733 ;;		_I2C1_Read
  9734 ;;		_I2C1_Write
  9735 ;; This function is called by:
  9736 ;;		_ProcessMsg
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740     07CD                     _KAPS_getIndex:	
  9741                           ;psect for function _KAPS_getIndex
  9742                           
  9743     07CD                     l3855:	
  9744                           ;incstack = 0
  9745                           ; Regs used in _KAPS_getIndex: [wreg+status,2+status,0+pclath+cstack]
  9746                           
  9747                           
  9748                           ;kaps.c: 94:     uint8_t reg = 0xFE;
  9749     07CD  30FE               	movlw	254
  9750     07CE  0020               	movlb	0	; select bank0
  9751     07CF  00A7               	movwf	KAPS_getIndex@reg
  9752     07D0                     l3857:
  9753                           
  9754                           ;kaps.c: 95:     uint8_t data = 0x00;
  9755     07D0  01A8               	clrf	KAPS_getIndex@data
  9756     07D1                     l3859:
  9757                           
  9758                           ;kaps.c: 97:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9759     07D1  0866               	movf	_kaps,w
  9760     07D2  00A5               	movwf	??_KAPS_getIndex
  9761     07D3  01A6               	clrf	??_KAPS_getIndex+1
  9762     07D4  0825               	movf	??_KAPS_getIndex,w
  9763     07D5  00A0               	movwf	I2C1_Write@address
  9764     07D6  0826               	movf	??_KAPS_getIndex+1,w
  9765     07D7  00A1               	movwf	I2C1_Write@address+1
  9766     07D8  3027               	movlw	(low (KAPS_getIndex@reg| 0))& (0+255)
  9767     07D9  00A2               	movwf	I2C1_Write@data
  9768     07DA  3001               	movlw	1
  9769     07DB  00A3               	movwf	I2C1_Write@dataLength
  9770     07DC  3000               	movlw	0
  9771     07DD  00A4               	movwf	I2C1_Write@dataLength+1
  9772     07DE  318E  26D6  3187   	fcall	_I2C1_Write
  9773     07E1                     l3861:
  9774                           
  9775                           ;kaps.c: 99:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9776     07E1  0020               	movlb	0	; select bank0
  9777     07E2  0866               	movf	_kaps,w
  9778     07E3  00A5               	movwf	??_KAPS_getIndex
  9779     07E4  01A6               	clrf	??_KAPS_getIndex+1
  9780     07E5  0825               	movf	??_KAPS_getIndex,w
  9781     07E6  00A0               	movwf	I2C1_Read@address
  9782     07E7  0826               	movf	??_KAPS_getIndex+1,w
  9783     07E8  00A1               	movwf	I2C1_Read@address+1
  9784     07E9  3028               	movlw	(low (KAPS_getIndex@data| 0))& (0+255)
  9785     07EA  00A2               	movwf	I2C1_Read@data
  9786     07EB  3001               	movlw	1
  9787     07EC  00A3               	movwf	I2C1_Read@dataLength
  9788     07ED  3000               	movlw	0
  9789     07EE  00A4               	movwf	I2C1_Read@dataLength+1
  9790     07EF  318E  26F4  3187   	fcall	_I2C1_Read
  9791     07F2  3A00               	xorlw	0
  9792     07F3  1903               	skipnz
  9793     07F4  2FF6               	goto	u1921
  9794     07F5  2FF7               	goto	u1920
  9795     07F6                     u1921:
  9796     07F6  2FFA               	goto	l730
  9797     07F7                     u1920:
  9798     07F7                     l3863:
  9799                           
  9800                           ;kaps.c: 100:         kaps.m_bIdxPos = data;
  9801     07F7  0020               	movlb	0	; select bank0
  9802     07F8  0828               	movf	KAPS_getIndex@data,w
  9803     07F9  00EC               	movwf	_kaps+6
  9804     07FA                     l730:
  9805     07FA  0008               	return
  9806     07FB                     __end_of_KAPS_getIndex:
  9807                           
  9808                           	psect	text35
  9809     0EF4                     __ptext35:	
  9810 ;; *************** function _I2C1_Read *****************
  9811 ;; Defined at:
  9812 ;;		line 161 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  address         2    0[BANK0 ] unsigned short 
  9815 ;;  data            1    2[BANK0 ] PTR unsigned char 
  9816 ;;		 -> KAPS_getPos@data(4), KAPS_getIndex@data(1), KAPS_getStatus@data(1), 
  9817 ;;  dataLength      2    3[BANK0 ] unsigned int 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  retStatus       1    5[COMMON] _Bool 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      _Bool 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2, status,0, pclath, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9829 ;;      Params:         0       5       0       0       0       0       0       0
  9830 ;;      Locals:         1       0       0       0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0       0
  9832 ;;      Totals:         1       5       0       0       0       0       0       0
  9833 ;;Total ram usage:        6 bytes
  9834 ;; Hardware stack levels used: 1
  9835 ;; Hardware stack levels required when called: 9
  9836 ;; This function calls:
  9837 ;;		_I2C1_IsBusy
  9838 ;;		_I2C1_ReadStart
  9839 ;; This function is called by:
  9840 ;;		_KAPS_getStatus
  9841 ;;		_KAPS_getIndex
  9842 ;;		_KAPS_getPos
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846     0EF4                     _I2C1_Read:	
  9847                           ;psect for function _I2C1_Read
  9848                           
  9849     0EF4                     l3663:	
  9850                           ;incstack = 0
  9851                           ; Regs used in _I2C1_Read: [wreg+status,2+status,0+pclath+cstack]
  9852                           
  9853                           
  9854                           ;mcc_generated_files/i2c_host/src/mssp.c: 161: _Bool I2C1_Read(uint16_t address, uint8_t
      +                           *data, size_t dataLength);mcc_generated_files/i2c_host/src/mssp.c: 162: {;mcc_generated
      +                          _files/i2c_host/src/mssp.c: 163:     _Bool retStatus = 0;
  9855     0EF4  01F5               	clrf	I2C1_Read@retStatus
  9856     0EF5                     l3665:
  9857                           
  9858                           ;mcc_generated_files/i2c_host/src/mssp.c: 164:     if (!I2C1_IsBusy())
  9859     0EF5  318E  2627  318E   	fcall	_I2C1_IsBusy
  9860     0EF8  3A00               	xorlw	0
  9861     0EF9  1D03               	skipz
  9862     0EFA  2EFC               	goto	u1731
  9863     0EFB  2EFD               	goto	u1730
  9864     0EFC                     u1731:
  9865     0EFC  2F14               	goto	l3685
  9866     0EFD                     u1730:
  9867     0EFD                     l3667:
  9868                           
  9869                           ;mcc_generated_files/i2c_host/src/mssp.c: 165:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 166:         i2c1Status.busy = 1;
  9870     0EFD  3001               	movlw	1
  9871     0EFE  0020               	movlb	0	; select bank0
  9872     0EFF  00D2               	movwf	_i2c1Status	;volatile
  9873                           
  9874                           ;mcc_generated_files/i2c_host/src/mssp.c: 167:         i2c1Status.address = address;
  9875     0F00  0821               	movf	I2C1_Read@address+1,w
  9876     0F01  00D4               	movwf	_i2c1Status+2	;volatile
  9877     0F02  0820               	movf	I2C1_Read@address,w
  9878     0F03  00D3               	movwf	_i2c1Status+1	;volatile
  9879     0F04                     l3669:
  9880                           
  9881                           ;mcc_generated_files/i2c_host/src/mssp.c: 168:         i2c1Status.switchToRead = 0;
  9882     0F04  01DB               	clrf	_i2c1Status+9	;volatile
  9883     0F05                     l3671:
  9884                           
  9885                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:         i2c1Status.readPtr = data;
  9886     0F05  0822               	movf	I2C1_Read@data,w
  9887     0F06  00D8               	movwf	low ((_i2c1Status| 0+6))	;volatile
  9888     0F07                     l3673:
  9889                           
  9890                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:         i2c1Status.readLength = dataLengt
      +                          h;
  9891     0F07  0824               	movf	I2C1_Read@dataLength+1,w
  9892     0F08  00DA               	movwf	_i2c1Status+8	;volatile
  9893     0F09  0823               	movf	I2C1_Read@dataLength,w
  9894     0F0A  00D9               	movwf	_i2c1Status+7	;volatile
  9895     0F0B                     l3675:
  9896                           
  9897                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:         i2c1Status.writePtr = ((void*)0);
  9898     0F0B  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
  9899     0F0C                     l3677:
  9900                           
  9901                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:         i2c1Status.writeLength = 0;
  9902     0F0C  01D6               	clrf	_i2c1Status+4	;volatile
  9903     0F0D  01D7               	clrf	_i2c1Status+5	;volatile
  9904     0F0E                     l3679:
  9905                           
  9906                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
  9907     0F0E  01DC               	clrf	_i2c1Status+10	;volatile
  9908     0F0F                     l3681:
  9909                           
  9910                           ;mcc_generated_files/i2c_host/src/mssp.c: 174:         I2C1_ReadStart();
  9911     0F0F  318D  258B  318E   	fcall	_I2C1_ReadStart
  9912     0F12                     l3683:
  9913                           
  9914                           ;mcc_generated_files/i2c_host/src/mssp.c: 175:         retStatus = 1;
  9915     0F12  01F5               	clrf	I2C1_Read@retStatus
  9916     0F13  0AF5               	incf	I2C1_Read@retStatus,f
  9917     0F14                     l3685:
  9918                           
  9919                           ;mcc_generated_files/i2c_host/src/mssp.c: 177:     return retStatus;
  9920     0F14  0875               	movf	I2C1_Read@retStatus,w
  9921     0F15                     l188:
  9922     0F15  0008               	return
  9923     0F16                     __end_of_I2C1_Read:
  9924                           
  9925                           	psect	text36
  9926     0D8B                     __ptext36:	
  9927 ;; *************** function _I2C1_ReadStart *****************
  9928 ;; Defined at:
  9929 ;;		line 232 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      void 
  9936 ;; Registers used:
  9937 ;;		wreg, status,2, status,0, pclath, cstack
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9943 ;;      Params:         0       0       0       0       0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0       0
  9946 ;;      Totals:         0       0       0       0       0       0       0       0
  9947 ;;Total ram usage:        0 bytes
  9948 ;; Hardware stack levels used: 1
  9949 ;; Hardware stack levels required when called: 8
  9950 ;; This function calls:
  9951 ;;		_I2C1_StartSend
  9952 ;; This function is called by:
  9953 ;;		_I2C1_Read
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957     0D8B                     _I2C1_ReadStart:	
  9958                           ;psect for function _I2C1_ReadStart
  9959                           
  9960     0D8B                     l3573:	
  9961                           ;incstack = 0
  9962                           ; Regs used in _I2C1_ReadStart: [wreg+status,2+status,0+pclath+cstack]
  9963                           
  9964                           
  9965                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:     I2C1_StartSend();
  9966     0D8B  318C  24FF  318D   	fcall	_I2C1_StartSend
  9967     0D8E                     l3575:
  9968                           
  9969                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:     i2c1Status.state = I2C_STATE_SEND_RD_
      +                          ADDR;
  9970     0D8E  3001               	movlw	1
  9971     0D8F  0020               	movlb	0	; select bank0
  9972     0D90  00DD               	movwf	_i2c1Status+11	;volatile
  9973     0D91                     l213:
  9974     0D91  0008               	return
  9975     0D92                     __end_of_I2C1_ReadStart:
  9976                           
  9977                           	psect	text37
  9978     0530                     __ptext37:	
  9979 ;; *************** function _KAPS_StorePos *****************
  9980 ;; Defined at:
  9981 ;;		line 64 in file "kaps.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  idx             1    wreg     unsigned char 
  9984 ;;  pos             4   13[BANK0 ] unsigned long 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  idx             1   25[BANK0 ] unsigned char 
  9987 ;;  data            5   19[BANK0 ] unsigned char [5]
  9988 ;;  reg             1   24[BANK0 ] unsigned char 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9998 ;;      Params:         0       4       0       0       0       0       0       0
  9999 ;;      Locals:         0       7       0       0       0       0       0       0
 10000 ;;      Temps:          0       2       0       0       0       0       0       0
 10001 ;;      Totals:         0      13       0       0       0       0       0       0
 10002 ;;Total ram usage:       13 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; Hardware stack levels required when called: 10
 10005 ;; This function calls:
 10006 ;;		_I2C1_Write
 10007 ;;		_unpackLong
 10008 ;; This function is called by:
 10009 ;;		_ProcessMsg
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013     0530                     _KAPS_StorePos:	
 10014                           ;psect for function _KAPS_StorePos
 10015                           
 10016                           
 10017                           ;incstack = 0
 10018                           ; Regs used in _KAPS_StorePos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10019                           ;KAPS_StorePos@idx stored from wreg
 10020     0530  0020               	movlb	0	; select bank0
 10021     0531  00B9               	movwf	KAPS_StorePos@idx
 10022     0532                     l3903:
 10023                           
 10024                           ;kaps.c: 65:     idx--;
 10025     0532  3001               	movlw	1
 10026     0533  02B9               	subwf	KAPS_StorePos@idx,f
 10027     0534                     l3905:
 10028                           
 10029                           ;kaps.c: 67:     uint8_t reg = (idx)*4 + 0x04;
 10030     0534  0839               	movf	KAPS_StorePos@idx,w
 10031     0535  00B1               	movwf	??_KAPS_StorePos
 10032     0536  3001               	movlw	1
 10033     0537                     u1965:
 10034     0537  35B1               	lslf	??_KAPS_StorePos,f
 10035     0538  3EFF               	addlw	-1
 10036     0539  1D03               	skipz
 10037     053A  2D37               	goto	u1965
 10038     053B  3531               	lslf	??_KAPS_StorePos,w
 10039     053C  3E04               	addlw	4
 10040     053D  00B8               	movwf	KAPS_StorePos@reg
 10041     053E                     l3907:
 10042                           
 10043                           ;kaps.c: 68:     uint8_t data[5];;kaps.c: 70:     data[0] = idx;
 10044     053E  0839               	movf	KAPS_StorePos@idx,w
 10045     053F  00B3               	movwf	KAPS_StorePos@data
 10046     0540                     l3909:
 10047                           
 10048                           ;kaps.c: 71:     unpackLong(pos, &data[1]);
 10049     0540  0830               	movf	KAPS_StorePos@pos+3,w
 10050     0541  00A3               	movwf	unpackLong@value+3
 10051     0542  082F               	movf	KAPS_StorePos@pos+2,w
 10052     0543  00A2               	movwf	unpackLong@value+2
 10053     0544  082E               	movf	KAPS_StorePos@pos+1,w
 10054     0545  00A1               	movwf	unpackLong@value+1
 10055     0546  082D               	movf	KAPS_StorePos@pos,w
 10056     0547  00A0               	movwf	unpackLong@value
 10057     0548  3034               	movlw	(low ((KAPS_StorePos@data| 0+1)))& (0+255)
 10058     0549  00A4               	movwf	unpackLong@data
 10059     054A  3184  2468  3185   	fcall	_unpackLong
 10060     054D                     l3911:
 10061                           
 10062                           ;kaps.c: 73:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10063     054D  0020               	movlb	0	; select bank0
 10064     054E  0866               	movf	_kaps,w
 10065     054F  00B1               	movwf	??_KAPS_StorePos
 10066     0550  01B2               	clrf	??_KAPS_StorePos+1
 10067     0551  0831               	movf	??_KAPS_StorePos,w
 10068     0552  00A0               	movwf	I2C1_Write@address
 10069     0553  0832               	movf	??_KAPS_StorePos+1,w
 10070     0554  00A1               	movwf	I2C1_Write@address+1
 10071     0555  3038               	movlw	(low (KAPS_StorePos@reg| 0))& (0+255)
 10072     0556  00A2               	movwf	I2C1_Write@data
 10073     0557  3001               	movlw	1
 10074     0558  00A3               	movwf	I2C1_Write@dataLength
 10075     0559  3000               	movlw	0
 10076     055A  00A4               	movwf	I2C1_Write@dataLength+1
 10077     055B  318E  26D6  3185   	fcall	_I2C1_Write
 10078     055E                     l3913:
 10079                           
 10080                           ;kaps.c: 74:     I2C1_Write(kaps.m_bAddr, data, 5);
 10081     055E  0020               	movlb	0	; select bank0
 10082     055F  0866               	movf	_kaps,w
 10083     0560  00B1               	movwf	??_KAPS_StorePos
 10084     0561  01B2               	clrf	??_KAPS_StorePos+1
 10085     0562  0831               	movf	??_KAPS_StorePos,w
 10086     0563  00A0               	movwf	I2C1_Write@address
 10087     0564  0832               	movf	??_KAPS_StorePos+1,w
 10088     0565  00A1               	movwf	I2C1_Write@address+1
 10089     0566  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10090     0567  00A2               	movwf	I2C1_Write@data
 10091     0568  3005               	movlw	5
 10092     0569  00A3               	movwf	I2C1_Write@dataLength
 10093     056A  3000               	movlw	0
 10094     056B  00A4               	movwf	I2C1_Write@dataLength+1
 10095     056C  318E  26D6  3185   	fcall	_I2C1_Write
 10096     056F                     l722:
 10097     056F  0008               	return
 10098     0570                     __end_of_KAPS_StorePos:
 10099                           
 10100                           	psect	text38
 10101     0468                     __ptext38:	
 10102 ;; *************** function _unpackLong *****************
 10103 ;; Defined at:
 10104 ;;		line 57 in file "utils.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  value           4    0[BANK0 ] unsigned long 
 10107 ;;  data            1    4[BANK0 ] PTR unsigned char 
 10108 ;;		 -> KAPS_StorePos@data(5), KAPS_setAbsPos@data(4), ProcessMsg@payload(6), 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;		None
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10120 ;;      Params:         0       5       0       0       0       0       0       0
 10121 ;;      Locals:         0       0       0       0       0       0       0       0
 10122 ;;      Temps:          0       4       0       0       0       0       0       0
 10123 ;;      Totals:         0       9       0       0       0       0       0       0
 10124 ;;Total ram usage:        9 bytes
 10125 ;; Hardware stack levels used: 1
 10126 ;; Hardware stack levels required when called: 7
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_ProcessMsg
 10131 ;;		_KAPS_setAbsPos
 10132 ;;		_KAPS_StorePos
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136     0468                     _unpackLong:	
 10137                           ;psect for function _unpackLong
 10138                           
 10139     0468                     l3715:	
 10140                           ;incstack = 0
 10141                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
 10142                           
 10143                           
 10144                           ;utils.c: 59:     data[0] = (value & 0XFF);
 10145     0468  0020               	movlb	0	; select bank0
 10146     0469  0824               	movf	unpackLong@data,w
 10147     046A  0086               	movwf	6
 10148     046B  0187               	clrf	7
 10149     046C  0820               	movf	unpackLong@value,w
 10150     046D  0081               	movwf	1
 10151     046E                     l3717:
 10152                           
 10153                           ;utils.c: 60:     data[1] = (value >> 8) & 0xFF;
 10154     046E  0A24               	incf	unpackLong@data,w
 10155     046F  0086               	movwf	6
 10156     0470  0187               	clrf	7
 10157     0471  0820               	movf	unpackLong@value,w
 10158     0472  00A5               	movwf	??_unpackLong
 10159     0473  0821               	movf	unpackLong@value+1,w
 10160     0474  00A6               	movwf	??_unpackLong+1
 10161     0475  0822               	movf	unpackLong@value+2,w
 10162     0476  00A7               	movwf	??_unpackLong+2
 10163     0477  0823               	movf	unpackLong@value+3,w
 10164     0478  00A8               	movwf	??_unpackLong+3
 10165     0479  3008               	movlw	8
 10166     047A                     u1765:
 10167     047A  36A8               	lsrf	??_unpackLong+3,f
 10168     047B  0CA7               	rrf	??_unpackLong+2,f
 10169     047C  0CA6               	rrf	??_unpackLong+1,f
 10170     047D  0CA5               	rrf	??_unpackLong,f
 10171     047E                     u1760:
 10172     047E  0B89               	decfsz	9,f
 10173     047F  2C7A               	goto	u1765
 10174     0480  0825               	movf	??_unpackLong,w
 10175     0481  0081               	movwf	1
 10176     0482                     l3719:
 10177                           
 10178                           ;utils.c: 61:     data[2] = (value >> 16) & 0xFF;
 10179     0482  0824               	movf	unpackLong@data,w
 10180     0483  3E02               	addlw	2
 10181     0484  0086               	movwf	6
 10182     0485  0187               	clrf	7
 10183     0486  0820               	movf	unpackLong@value,w
 10184     0487  00A5               	movwf	??_unpackLong
 10185     0488  0821               	movf	unpackLong@value+1,w
 10186     0489  00A6               	movwf	??_unpackLong+1
 10187     048A  0822               	movf	unpackLong@value+2,w
 10188     048B  00A7               	movwf	??_unpackLong+2
 10189     048C  0823               	movf	unpackLong@value+3,w
 10190     048D  00A8               	movwf	??_unpackLong+3
 10191     048E  3010               	movlw	16
 10192     048F                     u1775:
 10193     048F  36A8               	lsrf	??_unpackLong+3,f
 10194     0490  0CA7               	rrf	??_unpackLong+2,f
 10195     0491  0CA6               	rrf	??_unpackLong+1,f
 10196     0492  0CA5               	rrf	??_unpackLong,f
 10197     0493                     u1770:
 10198     0493  0B89               	decfsz	9,f
 10199     0494  2C8F               	goto	u1775
 10200     0495  0825               	movf	??_unpackLong,w
 10201     0496  0081               	movwf	1
 10202     0497                     l3721:
 10203                           
 10204                           ;utils.c: 62:     data[3] = (value >> 24) & 0xFF;
 10205     0497  0824               	movf	unpackLong@data,w
 10206     0498  3E03               	addlw	3
 10207     0499  0086               	movwf	6
 10208     049A  0187               	clrf	7
 10209     049B  0820               	movf	unpackLong@value,w
 10210     049C  00A5               	movwf	??_unpackLong
 10211     049D  0821               	movf	unpackLong@value+1,w
 10212     049E  00A6               	movwf	??_unpackLong+1
 10213     049F  0822               	movf	unpackLong@value+2,w
 10214     04A0  00A7               	movwf	??_unpackLong+2
 10215     04A1  0823               	movf	unpackLong@value+3,w
 10216     04A2  00A8               	movwf	??_unpackLong+3
 10217     04A3  3018               	movlw	24
 10218     04A4                     u1785:
 10219     04A4  36A8               	lsrf	??_unpackLong+3,f
 10220     04A5  0CA7               	rrf	??_unpackLong+2,f
 10221     04A6  0CA6               	rrf	??_unpackLong+1,f
 10222     04A7  0CA5               	rrf	??_unpackLong,f
 10223     04A8                     u1780:
 10224     04A8  0B89               	decfsz	9,f
 10225     04A9  2CA4               	goto	u1785
 10226     04AA  0825               	movf	??_unpackLong,w
 10227     04AB  0081               	movwf	1
 10228     04AC                     l745:
 10229     04AC  0008               	return
 10230     04AD                     __end_of_unpackLong:
 10231                           
 10232                           	psect	text39
 10233     0F5E                     __ptext39:	
 10234 ;; *************** function _KAPS_GoToIdx *****************
 10235 ;; Defined at:
 10236 ;;		line 24 in file "kaps.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  idx             1    wreg     unsigned char 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;  idx             1    7[BANK0 ] unsigned char 
 10241 ;;  reg             1    8[BANK0 ] unsigned char 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  1    wreg      void 
 10244 ;; Registers used:
 10245 ;;		wreg, status,2, status,0, pclath, cstack
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10251 ;;      Params:         0       0       0       0       0       0       0       0
 10252 ;;      Locals:         0       2       0       0       0       0       0       0
 10253 ;;      Temps:          0       2       0       0       0       0       0       0
 10254 ;;      Totals:         0       4       0       0       0       0       0       0
 10255 ;;Total ram usage:        4 bytes
 10256 ;; Hardware stack levels used: 1
 10257 ;; Hardware stack levels required when called: 10
 10258 ;; This function calls:
 10259 ;;		_I2C1_Write
 10260 ;; This function is called by:
 10261 ;;		_ProcessMsg
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265     0F5E                     _KAPS_GoToIdx:	
 10266                           ;psect for function _KAPS_GoToIdx
 10267                           
 10268                           
 10269                           ;incstack = 0
 10270                           ; Regs used in _KAPS_GoToIdx: [wreg+status,2+status,0+pclath+cstack]
 10271                           ;KAPS_GoToIdx@idx stored from wreg
 10272     0F5E  0020               	movlb	0	; select bank0
 10273     0F5F  00A7               	movwf	KAPS_GoToIdx@idx
 10274     0F60                     l3883:
 10275                           
 10276                           ;kaps.c: 25:     uint8_t reg = 0xFE;
 10277     0F60  30FE               	movlw	254
 10278     0F61  00A8               	movwf	KAPS_GoToIdx@reg
 10279     0F62                     l3885:
 10280                           
 10281                           ;kaps.c: 27:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10282     0F62  0866               	movf	_kaps,w
 10283     0F63  00A5               	movwf	??_KAPS_GoToIdx
 10284     0F64  01A6               	clrf	??_KAPS_GoToIdx+1
 10285     0F65  0825               	movf	??_KAPS_GoToIdx,w
 10286     0F66  00A0               	movwf	I2C1_Write@address
 10287     0F67  0826               	movf	??_KAPS_GoToIdx+1,w
 10288     0F68  00A1               	movwf	I2C1_Write@address+1
 10289     0F69  3028               	movlw	(low (KAPS_GoToIdx@reg| 0))& (0+255)
 10290     0F6A  00A2               	movwf	I2C1_Write@data
 10291     0F6B  3001               	movlw	1
 10292     0F6C  00A3               	movwf	I2C1_Write@dataLength
 10293     0F6D  3000               	movlw	0
 10294     0F6E  00A4               	movwf	I2C1_Write@dataLength+1
 10295     0F6F  318E  26D6  318F   	fcall	_I2C1_Write
 10296     0F72                     l3887:
 10297                           
 10298                           ;kaps.c: 28:     I2C1_Write(kaps.m_bAddr, &idx, 1);
 10299     0F72  0020               	movlb	0	; select bank0
 10300     0F73  0866               	movf	_kaps,w
 10301     0F74  00A5               	movwf	??_KAPS_GoToIdx
 10302     0F75  01A6               	clrf	??_KAPS_GoToIdx+1
 10303     0F76  0825               	movf	??_KAPS_GoToIdx,w
 10304     0F77  00A0               	movwf	I2C1_Write@address
 10305     0F78  0826               	movf	??_KAPS_GoToIdx+1,w
 10306     0F79  00A1               	movwf	I2C1_Write@address+1
 10307     0F7A  3027               	movlw	(low (KAPS_GoToIdx@idx| 0))& (0+255)
 10308     0F7B  00A2               	movwf	I2C1_Write@data
 10309     0F7C  3001               	movlw	1
 10310     0F7D  00A3               	movwf	I2C1_Write@dataLength
 10311     0F7E  3000               	movlw	0
 10312     0F7F  00A4               	movwf	I2C1_Write@dataLength+1
 10313     0F80  318E  26D6  318F   	fcall	_I2C1_Write
 10314     0F83                     l713:
 10315     0F83  0008               	return
 10316     0F84                     __end_of_KAPS_GoToIdx:
 10317                           
 10318                           	psect	text40
 10319     0ED6                     __ptext40:	
 10320 ;; *************** function _I2C1_Write *****************
 10321 ;; Defined at:
 10322 ;;		line 142 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;  address         2    0[BANK0 ] unsigned short 
 10325 ;;  data            1    2[BANK0 ] PTR unsigned char 
 10326 ;;		 -> KAPS_getPos@reg(1), KAPS_getIndex@reg(1), KAPS_getStatus@reg(1), KAPS_StorePos@data(5), 
 10327 ;;		 -> KAPS_StorePos@reg(1), KAPS_setRelPos@offset(1), KAPS_setRelPos@reg(1), KAPS_setAbsPos@data(4), 
 10328 ;;		 -> KAPS_setAbsPos@reg(1), KAPS_GoToIdx@idx(1), KAPS_GoToIdx@reg(1), 
 10329 ;;  dataLength      2    3[BANK0 ] unsigned int 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  retStatus       1    0        _Bool 
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  1    wreg      _Bool 
 10334 ;; Registers used:
 10335 ;;		wreg, status,2, status,0, pclath, cstack
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10341 ;;      Params:         0       5       0       0       0       0       0       0
 10342 ;;      Locals:         0       0       0       0       0       0       0       0
 10343 ;;      Temps:          0       0       0       0       0       0       0       0
 10344 ;;      Totals:         0       5       0       0       0       0       0       0
 10345 ;;Total ram usage:        5 bytes
 10346 ;; Hardware stack levels used: 1
 10347 ;; Hardware stack levels required when called: 9
 10348 ;; This function calls:
 10349 ;;		_I2C1_IsBusy
 10350 ;;		_I2C1_WriteStart
 10351 ;; This function is called by:
 10352 ;;		_KAPS_GoToIdx
 10353 ;;		_KAPS_setAbsPos
 10354 ;;		_KAPS_setRelPos
 10355 ;;		_KAPS_StorePos
 10356 ;;		_KAPS_getStatus
 10357 ;;		_KAPS_getIndex
 10358 ;;		_KAPS_getPos
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362     0ED6                     _I2C1_Write:	
 10363                           ;psect for function _I2C1_Write
 10364                           
 10365     0ED6                     l3639:	
 10366                           ;incstack = 0
 10367                           ; Regs used in _I2C1_Write: [wreg+status,2+status,0+pclath+cstack]
 10368                           
 10369     0ED6                     l3641:
 10370                           
 10371                           ;mcc_generated_files/i2c_host/src/mssp.c: 145:     if (!I2C1_IsBusy())
 10372     0ED6  318E  2627  318E   	fcall	_I2C1_IsBusy
 10373     0ED9  3A00               	xorlw	0
 10374     0EDA  1D03               	skipz
 10375     0EDB  2EDD               	goto	u1721
 10376     0EDC  2EDE               	goto	u1720
 10377     0EDD                     u1721:
 10378     0EDD  2EF3               	goto	l184
 10379     0EDE                     u1720:
 10380     0EDE                     l3643:
 10381                           
 10382                           ;mcc_generated_files/i2c_host/src/mssp.c: 146:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 147:         i2c1Status.busy = 1;
 10383     0EDE  3001               	movlw	1
 10384     0EDF  0020               	movlb	0	; select bank0
 10385     0EE0  00D2               	movwf	_i2c1Status	;volatile
 10386                           
 10387                           ;mcc_generated_files/i2c_host/src/mssp.c: 148:         i2c1Status.address = address;
 10388     0EE1  0821               	movf	I2C1_Write@address+1,w
 10389     0EE2  00D4               	movwf	_i2c1Status+2	;volatile
 10390     0EE3  0820               	movf	I2C1_Write@address,w
 10391     0EE4  00D3               	movwf	_i2c1Status+1	;volatile
 10392     0EE5                     l3645:
 10393                           
 10394                           ;mcc_generated_files/i2c_host/src/mssp.c: 149:         i2c1Status.switchToRead = 0;
 10395     0EE5  01DB               	clrf	_i2c1Status+9	;volatile
 10396     0EE6                     l3647:
 10397                           
 10398                           ;mcc_generated_files/i2c_host/src/mssp.c: 150:         i2c1Status.writePtr = data;
 10399     0EE6  0822               	movf	I2C1_Write@data,w
 10400     0EE7  00D5               	movwf	low ((_i2c1Status| 0+3))	;volatile
 10401     0EE8                     l3649:
 10402                           
 10403                           ;mcc_generated_files/i2c_host/src/mssp.c: 151:         i2c1Status.writeLength = dataLeng
      +                          th;
 10404     0EE8  0824               	movf	I2C1_Write@dataLength+1,w
 10405     0EE9  00D7               	movwf	_i2c1Status+5	;volatile
 10406     0EEA  0823               	movf	I2C1_Write@dataLength,w
 10407     0EEB  00D6               	movwf	_i2c1Status+4	;volatile
 10408     0EEC                     l3651:
 10409                           
 10410                           ;mcc_generated_files/i2c_host/src/mssp.c: 152:         i2c1Status.readPtr = ((void*)0);
 10411     0EEC  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 10412     0EED                     l3653:
 10413                           
 10414                           ;mcc_generated_files/i2c_host/src/mssp.c: 153:         i2c1Status.readLength = 0;
 10415     0EED  01D9               	clrf	_i2c1Status+7	;volatile
 10416     0EEE  01DA               	clrf	_i2c1Status+8	;volatile
 10417     0EEF                     l3655:
 10418                           
 10419                           ;mcc_generated_files/i2c_host/src/mssp.c: 154:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 10420     0EEF  01DC               	clrf	_i2c1Status+10	;volatile
 10421     0EF0                     l3657:
 10422                           
 10423                           ;mcc_generated_files/i2c_host/src/mssp.c: 155:         I2C1_WriteStart();
 10424     0EF0  318D  2584  318E   	fcall	_I2C1_WriteStart
 10425     0EF3                     l3659:
 10426     0EF3                     l184:
 10427     0EF3  0008               	return
 10428     0EF4                     __end_of_I2C1_Write:
 10429                           
 10430                           	psect	text41
 10431     0D84                     __ptext41:	
 10432 ;; *************** function _I2C1_WriteStart *****************
 10433 ;; Defined at:
 10434 ;;		line 238 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;		None
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0, pclath, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10448 ;;      Params:         0       0       0       0       0       0       0       0
 10449 ;;      Locals:         0       0       0       0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0
 10451 ;;      Totals:         0       0       0       0       0       0       0       0
 10452 ;;Total ram usage:        0 bytes
 10453 ;; Hardware stack levels used: 1
 10454 ;; Hardware stack levels required when called: 8
 10455 ;; This function calls:
 10456 ;;		_I2C1_StartSend
 10457 ;; This function is called by:
 10458 ;;		_I2C1_Write
 10459 ;;		_I2C1_WriteRead
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463     0D84                     _I2C1_WriteStart:	
 10464                           ;psect for function _I2C1_WriteStart
 10465                           
 10466     0D84                     l3569:	
 10467                           ;incstack = 0
 10468                           ; Regs used in _I2C1_WriteStart: [wreg+status,2+status,0+pclath+cstack]
 10469                           
 10470                           
 10471                           ;mcc_generated_files/i2c_host/src/mssp.c: 240:     I2C1_StartSend();
 10472     0D84  318C  24FF  318D   	fcall	_I2C1_StartSend
 10473     0D87                     l3571:
 10474                           
 10475                           ;mcc_generated_files/i2c_host/src/mssp.c: 241:     i2c1Status.state = I2C_STATE_SEND_WR_
      +                          ADDR;
 10476     0D87  3002               	movlw	2
 10477     0D88  0020               	movlb	0	; select bank0
 10478     0D89  00DD               	movwf	_i2c1Status+11	;volatile
 10479     0D8A                     l216:
 10480     0D8A  0008               	return
 10481     0D8B                     __end_of_I2C1_WriteStart:
 10482                           
 10483                           	psect	text42
 10484     0CFF                     __ptext42:	
 10485 ;; *************** function _I2C1_StartSend *****************
 10486 ;; Defined at:
 10487 ;;		line 425 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;		None
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  1    wreg      void 
 10494 ;; Registers used:
 10495 ;;		None
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10501 ;;      Params:         0       0       0       0       0       0       0       0
 10502 ;;      Locals:         0       0       0       0       0       0       0       0
 10503 ;;      Temps:          0       0       0       0       0       0       0       0
 10504 ;;      Totals:         0       0       0       0       0       0       0       0
 10505 ;;Total ram usage:        0 bytes
 10506 ;; Hardware stack levels used: 1
 10507 ;; Hardware stack levels required when called: 7
 10508 ;; This function calls:
 10509 ;;		Nothing
 10510 ;; This function is called by:
 10511 ;;		_I2C1_ReadStart
 10512 ;;		_I2C1_WriteStart
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516     0CFF                     _I2C1_StartSend:	
 10517                           ;psect for function _I2C1_StartSend
 10518                           
 10519     0CFF                     l3529:	
 10520                           ;incstack = 0
 10521                           ; Regs used in _I2C1_StartSend: []
 10522                           
 10523                           
 10524                           ;mcc_generated_files/i2c_host/src/mssp.c: 427:     SSP1CON2bits.SEN = 1;
 10525     0CFF  0024               	movlb	4	; select bank4
 10526     0D00  1416               	bsf	22,0	;volatile
 10527     0D01                     l288:
 10528     0D01  0008               	return
 10529     0D02                     __end_of_I2C1_StartSend:
 10530                           
 10531                           	psect	text43
 10532     0E27                     __ptext43:	
 10533 ;; *************** function _I2C1_IsBusy *****************
 10534 ;; Defined at:
 10535 ;;		line 206 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;		None
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      _Bool 
 10542 ;; Registers used:
 10543 ;;		wreg, status,2, status,0
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10549 ;;      Params:         0       0       0       0       0       0       0       0
 10550 ;;      Locals:         1       0       0       0       0       0       0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0
 10552 ;;      Totals:         1       0       0       0       0       0       0       0
 10553 ;;Total ram usage:        1 bytes
 10554 ;; Hardware stack levels used: 1
 10555 ;; Hardware stack levels required when called: 7
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_I2C1_Write
 10560 ;;		_I2C1_Read
 10561 ;;		_I2C1_WriteRead
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565     0E27                     _I2C1_IsBusy:	
 10566                           ;psect for function _I2C1_IsBusy
 10567                           
 10568     0E27                     l3557:	
 10569                           ;incstack = 0
 10570                           ; Regs used in _I2C1_IsBusy: [wreg+status,2+status,0]
 10571                           
 10572                           
 10573                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return i2c1Status.busy || SSP1STATbit
      +                          s.S;
 10574     0E27  01F4               	clrf	_I2C1_IsBusy$646
 10575     0E28  0AF4               	incf	_I2C1_IsBusy$646,f
 10576     0E29                     l3559:
 10577     0E29  0020               	movlb	0	; select bank0
 10578     0E2A  0852               	movf	_i2c1Status,w	;volatile
 10579     0E2B  1D03               	btfss	3,2
 10580     0E2C  2E2E               	goto	u1551
 10581     0E2D  2E2F               	goto	u1550
 10582     0E2E                     u1551:
 10583     0E2E  2E35               	goto	l3565
 10584     0E2F                     u1550:
 10585     0E2F                     l3561:
 10586     0E2F  0024               	movlb	4	; select bank4
 10587     0E30  1994               	btfsc	20,3	;volatile
 10588     0E31  2E33               	goto	u1561
 10589     0E32  2E34               	goto	u1560
 10590     0E33                     u1561:
 10591     0E33  2E35               	goto	l3565
 10592     0E34                     u1560:
 10593     0E34                     l3563:
 10594     0E34  01F4               	clrf	_I2C1_IsBusy$646
 10595     0E35                     l3565:
 10596     0E35  0874               	movf	_I2C1_IsBusy$646,w
 10597     0E36                     l200:
 10598     0E36  0008               	return
 10599     0E37                     __end_of_I2C1_IsBusy:
 10600                           
 10601                           	psect	text44
 10602     01AC                     __ptext44:	
 10603 ;; *************** function _Parse *****************
 10604 ;; Defined at:
 10605 ;;		line 71 in file "parser.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  data            1    wreg     unsigned char 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  data            1    9[BANK0 ] unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      _Bool 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10619 ;;      Params:         0       0       0       0       0       0       0       0
 10620 ;;      Locals:         0       1       0       0       0       0       0       0
 10621 ;;      Temps:          0       2       0       0       0       0       0       0
 10622 ;;      Totals:         0       3       0       0       0       0       0       0
 10623 ;;Total ram usage:        3 bytes
 10624 ;; Hardware stack levels used: 1
 10625 ;; Hardware stack levels required when called: 11
 10626 ;; This function calls:
 10627 ;;		_SendMsg
 10628 ;;		_SendNack
 10629 ;; This function is called by:
 10630 ;;		_main
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634     01AC                     _Parse:	
 10635                           ;psect for function _Parse
 10636                           
 10637                           
 10638                           ;incstack = 0
 10639                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10640                           ;Parse@data stored from wreg
 10641     01AC  0020               	movlb	0	; select bank0
 10642     01AD  00A9               	movwf	Parse@data
 10643     01AE                     l3971:
 10644                           
 10645                           ;parser.c: 72:     switch (parser.m_State) {
 10646     01AE  2A48               	goto	l4043
 10647     01AF                     l3973:
 10648                           
 10649                           ;parser.c: 74:             if (data == 0x01) {
 10650     01AF  0329               	decf	Parse@data,w
 10651     01B0  1D03               	btfss	3,2
 10652     01B1  29B3               	goto	u2011
 10653     01B2  29B4               	goto	u2010
 10654     01B3                     u2011:
 10655     01B3  29B9               	goto	l3979
 10656     01B4                     u2010:
 10657     01B4                     l3975:
 10658                           
 10659                           ;parser.c: 75:                 parser.m_State = WAIT_ID;
 10660     01B4  01DE               	clrf	_parser
 10661     01B5  0ADE               	incf	_parser,f
 10662     01B6                     l3977:
 10663                           
 10664                           ;parser.c: 76:                 parser.m_bSum = 0x00;
 10665     01B6  01E4               	clrf	_parser+6
 10666                           
 10667                           ;parser.c: 77:                 parser.m_bDataIndex = 0;
 10668     01B7  01E0               	clrf	_parser+2
 10669                           
 10670                           ;parser.c: 78:             } else
 10671     01B8  2A5E               	goto	l4045
 10672     01B9                     l3979:
 10673                           
 10674                           ;parser.c: 79:                 SendNack(WRONG_MESSAGE);
 10675     01B9  3002               	movlw	2
 10676     01BA  318D  25B8  3181   	fcall	_SendNack
 10677     01BD  2A5E               	goto	l4045
 10678     01BE                     l3981:
 10679                           
 10680                           ;parser.c: 83:             parser.m_MsgID = data;
 10681     01BE  0829               	movf	Parse@data,w
 10682     01BF  00DF               	movwf	_parser+1
 10683     01C0                     l3983:
 10684                           
 10685                           ;parser.c: 84:             parser.m_bEcho = 1;
 10686     01C0  01E5               	clrf	_parser+7
 10687     01C1  0AE5               	incf	_parser+7,f
 10688                           
 10689                           ;parser.c: 86:             switch ((uint8_t) parser.m_MsgID) {
 10690     01C2  29EB               	goto	l4007
 10691     01C3                     l3985:
 10692                           
 10693                           ;parser.c: 90:                     parser.m_bEcho = 0;
 10694     01C3  01E5               	clrf	_parser+7
 10695                           
 10696                           ;parser.c: 91:                     parser.m_bReplySize = 0;
 10697     01C4  01E2               	clrf	_parser+4
 10698                           
 10699                           ;parser.c: 92:                     parser.m_bDataSize = 0;
 10700     01C5  01E1               	clrf	_parser+3
 10701     01C6                     l3987:
 10702                           
 10703                           ;parser.c: 93:                     parser.m_State = WAIT_CKSUM;
 10704     01C6  3003               	movlw	3
 10705     01C7  00DE               	movwf	_parser
 10706                           
 10707                           ;parser.c: 94:                     break;
 10708     01C8  2A5E               	goto	l4045
 10709     01C9                     l787:	
 10710                           ;parser.c: 96:                 case NVT_RFDU_GoToPos:
 10711                           
 10712                           
 10713                           ;parser.c: 97:                     parser.m_bReplySize = 1;
 10714     01C9  01E2               	clrf	_parser+4
 10715     01CA  0AE2               	incf	_parser+4,f
 10716                           
 10717                           ;parser.c: 98:                     parser.m_bDataSize = 1;
 10718     01CB  01E1               	clrf	_parser+3
 10719     01CC  0AE1               	incf	_parser+3,f
 10720     01CD                     l3989:
 10721                           
 10722                           ;parser.c: 99:                     parser.m_State = WAIT_VALUE;
 10723     01CD  3002               	movlw	2
 10724     01CE  00DE               	movwf	_parser
 10725                           
 10726                           ;parser.c: 100:                     break;
 10727     01CF  2A5E               	goto	l4045
 10728     01D0                     l790:	
 10729                           ;parser.c: 104:                 case NVT_RFDU_SSPAPout:
 10730                           
 10731     01D0                     l3991:
 10732                           
 10733                           ;parser.c: 106:                     parser.m_bEcho = 0;
 10734     01D0  01E5               	clrf	_parser+7
 10735     01D1                     l3993:
 10736                           
 10737                           ;parser.c: 107:                     parser.m_bReplySize = 1;
 10738     01D1  01E2               	clrf	_parser+4
 10739     01D2  0AE2               	incf	_parser+4,f
 10740     01D3                     l3995:
 10741                           
 10742                           ;parser.c: 108:                     parser.m_bDataSize = 1;
 10743     01D3  01E1               	clrf	_parser+3
 10744     01D4  0AE1               	incf	_parser+3,f
 10745     01D5  29CD               	goto	l3989
 10746     01D6                     l3999:
 10747                           
 10748                           ;parser.c: 113:                     parser.m_bReplySize = 2;
 10749     01D6  3002               	movlw	2
 10750     01D7  00E2               	movwf	_parser+4
 10751                           
 10752                           ;parser.c: 114:                     parser.m_bDataSize = 2;
 10753     01D8  3002               	movlw	2
 10754     01D9  00E1               	movwf	_parser+3
 10755                           
 10756                           ;parser.c: 115:                     parser.m_State = WAIT_VALUE;
 10757     01DA  3002               	movlw	2
 10758     01DB  00DE               	movwf	_parser
 10759                           
 10760                           ;parser.c: 116:                     break;
 10761     01DC  2A5E               	goto	l4045
 10762     01DD                     l4001:
 10763                           
 10764                           ;parser.c: 119:                     parser.m_bReplySize = 4;
 10765     01DD  3004               	movlw	4
 10766     01DE  00E2               	movwf	_parser+4
 10767                           
 10768                           ;parser.c: 120:                     parser.m_bDataSize = 4;
 10769     01DF  3004               	movlw	4
 10770     01E0  00E1               	movwf	_parser+3
 10771                           
 10772                           ;parser.c: 121:                     parser.m_State = WAIT_VALUE;
 10773     01E1  3002               	movlw	2
 10774     01E2  00DE               	movwf	_parser
 10775                           
 10776                           ;parser.c: 122:                     break;
 10777     01E3  2A5E               	goto	l4045
 10778     01E4                     l4003:
 10779                           
 10780                           ;parser.c: 125:                     parser.m_bReplySize = 5;
 10781     01E4  3005               	movlw	5
 10782     01E5  00E2               	movwf	_parser+4
 10783                           
 10784                           ;parser.c: 126:                     parser.m_bDataSize = 5;
 10785     01E6  3005               	movlw	5
 10786     01E7  00E1               	movwf	_parser+3
 10787                           
 10788                           ;parser.c: 127:                     parser.m_State = WAIT_VALUE;
 10789     01E8  3002               	movlw	2
 10790     01E9  00DE               	movwf	_parser
 10791                           
 10792                           ;parser.c: 128:                     break;
 10793     01EA  2A5E               	goto	l4045
 10794     01EB                     l4007:
 10795     01EB  085F               	movf	_parser+1,w
 10796                           
 10797                           ; Switch size 1, requested type "simple"
 10798                           ; Number of cases is 11, Range of values is 1 to 17
 10799                           ; switch strategies available:
 10800                           ; Name         Instructions Cycles
 10801                           ; simple_byte           34    18 (average)
 10802                           ; direct_byte           43     9 (fixed)
 10803                           ; jumptable            263     9 (fixed)
 10804                           ;	Chosen strategy is simple_byte
 10805     01EC  3A01               	xorlw	1	; case 1
 10806     01ED  1903               	skipnz
 10807     01EE  29D6               	goto	l3999
 10808     01EF  3A03               	xorlw	3	; case 2
 10809     01F0  1903               	skipnz
 10810     01F1  29D0               	goto	l790
 10811     01F2  3A01               	xorlw	1	; case 3
 10812     01F3  1903               	skipnz
 10813     01F4  29D0               	goto	l3991
 10814     01F5  3A07               	xorlw	7	; case 4
 10815     01F6  1903               	skipnz
 10816     01F7  29D0               	goto	l3991
 10817     01F8  3A01               	xorlw	1	; case 5
 10818     01F9  1903               	skipnz
 10819     01FA  29C3               	goto	l3985
 10820     01FB  3A03               	xorlw	3	; case 6
 10821     01FC  1903               	skipnz
 10822     01FD  29C3               	goto	l3985
 10823     01FE  3A01               	xorlw	1	; case 7
 10824     01FF  1903               	skipnz
 10825     0200  29C9               	goto	l787
 10826     0201  3A0F               	xorlw	15	; case 8
 10827     0202  1903               	skipnz
 10828     0203  29DD               	goto	l4001
 10829     0204  3A01               	xorlw	1	; case 9
 10830     0205  1903               	skipnz
 10831     0206  29D0               	goto	l3991
 10832     0207  3A03               	xorlw	3	; case 10
 10833     0208  1903               	skipnz
 10834     0209  29E4               	goto	l4003
 10835     020A  3A1B               	xorlw	27	; case 17
 10836     020B  1903               	skipnz
 10837     020C  29C3               	goto	l3985
 10838     020D  2A5E               	goto	l4045
 10839     020E                     l4009:
 10840                           
 10841                           ;parser.c: 133:             parserDataBuffer[parser.m_bDataIndex] = data;
 10842     020E  0860               	movf	_parser+2,w
 10843     020F  3EC8               	addlw	(low (_parserDataBuffer| 0))& (0+255)
 10844     0210  0086               	movwf	6
 10845     0211  0187               	clrf	7
 10846     0212  0829               	movf	Parse@data,w
 10847     0213  0081               	movwf	1
 10848     0214                     l4011:
 10849                           
 10850                           ;parser.c: 134:             parser.m_bSum += data;
 10851     0214  0829               	movf	Parse@data,w
 10852     0215  00A7               	movwf	??_Parse
 10853     0216  0827               	movf	??_Parse,w
 10854     0217  07E4               	addwf	_parser+6,f
 10855     0218                     l4013:
 10856                           
 10857                           ;parser.c: 135:             parser.m_bDataIndex++;
 10858     0218  3001               	movlw	1
 10859     0219  00A7               	movwf	??_Parse
 10860     021A  0827               	movf	??_Parse,w
 10861     021B  07E0               	addwf	_parser+2,f
 10862     021C                     l4015:
 10863                           
 10864                           ;parser.c: 136:             parser.m_bDataSize--;
 10865     021C  3001               	movlw	1
 10866     021D  02E1               	subwf	_parser+3,f
 10867     021E                     l4017:
 10868                           
 10869                           ;parser.c: 137:             if (parser.m_bDataSize == 0)
 10870     021E  0861               	movf	_parser+3,w
 10871     021F  1D03               	btfss	3,2
 10872     0220  2A22               	goto	u2021
 10873     0221  2A23               	goto	u2020
 10874     0222                     u2021:
 10875     0222  2A5E               	goto	l4045
 10876     0223                     u2020:
 10877     0223  29C6               	goto	l3987
 10878     0224                     l4021:
 10879                           
 10880                           ;parser.c: 142:             parser.m_bCkSum = data;
 10881     0224  0829               	movf	Parse@data,w
 10882     0225  00E3               	movwf	_parser+5
 10883     0226                     l4023:
 10884                           
 10885                           ;parser.c: 143:             parser.m_State = WAIT_SOM;
 10886     0226  01DE               	clrf	_parser
 10887     0227                     l4025:
 10888                           
 10889                           ;parser.c: 145:             if (parser.m_bSum == parser.m_bCkSum) {
 10890     0227  0864               	movf	_parser+6,w
 10891     0228  0663               	xorwf	_parser+5,w
 10892     0229  1D03               	skipz
 10893     022A  2A2C               	goto	u2031
 10894     022B  2A2D               	goto	u2030
 10895     022C                     u2031:
 10896     022C  2A3C               	goto	l4037
 10897     022D                     u2030:
 10898     022D                     l4027:
 10899                           
 10900                           ;parser.c: 146:                 if (parser.m_bEcho)
 10901     022D  0865               	movf	_parser+7,w
 10902     022E  1903               	btfsc	3,2
 10903     022F  2A31               	goto	u2041
 10904     0230  2A32               	goto	u2040
 10905     0231                     u2041:
 10906     0231  2A3A               	goto	l4031
 10907     0232                     u2040:
 10908     0232                     l4029:
 10909                           
 10910                           ;parser.c: 147:                     SendMsg(parser.m_MsgID, parserDataBuffer, parser.m_b
      +                          ReplySize);
 10911     0232  30C8               	movlw	(low (_parserDataBuffer| 0))& (0+255)
 10912     0233  00A1               	movwf	SendMsg@data
 10913     0234  0862               	movf	_parser+4,w
 10914     0235  00A2               	movwf	SendMsg@data_len
 10915     0236  085F               	movf	_parser+1,w
 10916     0237  3186  26D3  3181   	fcall	_SendMsg
 10917     023A                     l4031:
 10918                           
 10919                           ;parser.c: 149:                 return 1;
 10920     023A  3001               	movlw	1
 10921     023B  2A5F               	goto	l800
 10922     023C                     l4037:
 10923                           
 10924                           ;parser.c: 151:                 SendNack(CKSUM_ERR);
 10925     023C  3001               	movlw	1
 10926     023D  318D  25B8  3181   	fcall	_SendNack
 10927     0240  2A5E               	goto	l4045
 10928     0241                     l4039:
 10929                           
 10930                           ;parser.c: 155:             SendNack(WRONG_MESSAGE);
 10931     0241  3002               	movlw	2
 10932     0242  318D  25B8  3181   	fcall	_SendNack
 10933     0245                     l4041:
 10934                           
 10935                           ;parser.c: 156:             parser.m_State = WAIT_SOM;
 10936     0245  0020               	movlb	0	; select bank0
 10937     0246  01DE               	clrf	_parser
 10938                           
 10939                           ;parser.c: 157:     }
 10940     0247  2A5E               	goto	l4045
 10941     0248                     l4043:
 10942     0248  085E               	movf	_parser,w
 10943     0249  00A7               	movwf	??_Parse
 10944     024A  01A8               	clrf	??_Parse+1
 10945                           
 10946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10947                           ; Switch size 1, requested type "simple"
 10948                           ; Number of cases is 1, Range of values is 0 to 0
 10949                           ; switch strategies available:
 10950                           ; Name         Instructions Cycles
 10951                           ; simple_byte            4     3 (average)
 10952                           ; direct_byte            8     6 (fixed)
 10953                           ; jumptable            260     6 (fixed)
 10954                           ;	Chosen strategy is simple_byte
 10955     024B  0828               	movf	??_Parse+1,w
 10956     024C  3A00               	xorlw	0	; case 0
 10957     024D  1903               	skipnz
 10958     024E  2A50               	goto	l4229
 10959     024F  2A41               	goto	l4039
 10960     0250                     l4229:
 10961                           
 10962                           ; Switch size 1, requested type "simple"
 10963                           ; Number of cases is 4, Range of values is 0 to 3
 10964                           ; switch strategies available:
 10965                           ; Name         Instructions Cycles
 10966                           ; simple_byte           13     7 (average)
 10967                           ; direct_byte           14     6 (fixed)
 10968                           ; jumptable            260     6 (fixed)
 10969                           ;	Chosen strategy is simple_byte
 10970     0250  0827               	movf	??_Parse,w
 10971     0251  3A00               	xorlw	0	; case 0
 10972     0252  1903               	skipnz
 10973     0253  29AF               	goto	l3973
 10974     0254  3A01               	xorlw	1	; case 1
 10975     0255  1903               	skipnz
 10976     0256  29BE               	goto	l3981
 10977     0257  3A03               	xorlw	3	; case 2
 10978     0258  1903               	skipnz
 10979     0259  2A0E               	goto	l4009
 10980     025A  3A01               	xorlw	1	; case 3
 10981     025B  1903               	skipnz
 10982     025C  2A24               	goto	l4021
 10983     025D  2A41               	goto	l4039
 10984     025E                     l4045:
 10985                           
 10986                           ;parser.c: 159:     return 0;
 10987     025E  3000               	movlw	0
 10988     025F                     l800:
 10989     025F  0008               	return
 10990     0260                     __end_of_Parse:
 10991                           
 10992                           	psect	text45
 10993     0DB8                     __ptext45:	
 10994 ;; *************** function _SendNack *****************
 10995 ;; Defined at:
 10996 ;;		line 59 in file "parser.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  error           1    wreg     unsigned char 
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;  error           1    6[BANK0 ] unsigned char 
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  1    wreg      void 
 11003 ;; Registers used:
 11004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11010 ;;      Params:         0       0       0       0       0       0       0       0
 11011 ;;      Locals:         0       1       0       0       0       0       0       0
 11012 ;;      Temps:          0       0       0       0       0       0       0       0
 11013 ;;      Totals:         0       1       0       0       0       0       0       0
 11014 ;;Total ram usage:        1 bytes
 11015 ;; Hardware stack levels used: 1
 11016 ;; Hardware stack levels required when called: 10
 11017 ;; This function calls:
 11018 ;;		_SendMsg
 11019 ;; This function is called by:
 11020 ;;		_Parse
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024     0DB8                     _SendNack:	
 11025                           ;psect for function _SendNack
 11026                           
 11027                           
 11028                           ;incstack = 0
 11029                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11030                           ;SendNack@error stored from wreg
 11031     0DB8  0020               	movlb	0	; select bank0
 11032     0DB9  00A6               	movwf	SendNack@error
 11033     0DBA                     l3915:
 11034                           
 11035                           ;parser.c: 60:     SendMsg(RFDU_NVT_NACK, &error, 1);
 11036     0DBA  3026               	movlw	(low (SendNack@error| 0))& (0+255)
 11037     0DBB  00A1               	movwf	SendMsg@data
 11038     0DBC  01A2               	clrf	SendMsg@data_len
 11039     0DBD  0AA2               	incf	SendMsg@data_len,f
 11040     0DBE  300B               	movlw	11
 11041     0DBF  3186  26D3  318D   	fcall	_SendMsg
 11042     0DC2                     l773:
 11043     0DC2  0008               	return
 11044     0DC3                     __end_of_SendNack:
 11045                           
 11046                           	psect	text46
 11047     06D3                     __ptext46:	
 11048 ;; *************** function _SendMsg *****************
 11049 ;; Defined at:
 11050 ;;		line 36 in file "parser.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;  msg_id          1    wreg     unsigned char 
 11053 ;;  data            1    1[BANK0 ] PTR unsigned char 
 11054 ;;		 -> SendNack@error(1), parserDataBuffer(5), ProcessMsg@payload(6), 
 11055 ;;  data_len        1    2[BANK0 ] unsigned char 
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;  msg_id          1    5[BANK0 ] unsigned char 
 11058 ;;  sum             1    4[BANK0 ] unsigned char 
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  1    wreg      void 
 11061 ;; Registers used:
 11062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/0
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11068 ;;      Params:         0       2       0       0       0       0       0       0
 11069 ;;      Locals:         0       2       0       0       0       0       0       0
 11070 ;;      Temps:          0       1       0       0       0       0       0       0
 11071 ;;      Totals:         0       5       0       0       0       0       0       0
 11072 ;;Total ram usage:        5 bytes
 11073 ;; Hardware stack levels used: 1
 11074 ;; Hardware stack levels required when called: 9
 11075 ;; This function calls:
 11076 ;;		_SendSync
 11077 ;; This function is called by:
 11078 ;;		_ProcessMsg
 11079 ;;		_SendNack
 11080 ;;		_Parse
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084     06D3                     _SendMsg:	
 11085                           ;psect for function _SendMsg
 11086                           
 11087                           
 11088                           ;incstack = 0
 11089                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11090                           ;SendMsg@msg_id stored from wreg
 11091     06D3  0020               	movlb	0	; select bank0
 11092     06D4  00A5               	movwf	SendMsg@msg_id
 11093     06D5                     l3689:
 11094                           
 11095                           ;parser.c: 37:     uint8_t sum = 0x00;
 11096     06D5  01A4               	clrf	SendMsg@sum
 11097     06D6                     l3691:
 11098                           
 11099                           ;parser.c: 39:     SendSync(0x01);
 11100     06D6  3001               	movlw	1
 11101     06D7  318E  269F  3186   	fcall	_SendSync
 11102     06DA                     l3693:
 11103                           
 11104                           ;parser.c: 41:     SendSync(msg_id);
 11105     06DA  0020               	movlb	0	; select bank0
 11106     06DB  0825               	movf	SendMsg@msg_id,w
 11107     06DC  318E  269F  3186   	fcall	_SendSync
 11108     06DF                     l3695:
 11109                           
 11110                           ;parser.c: 43:     if (msg_id == RFDU_NVT_NACK)
 11111     06DF  300B               	movlw	11
 11112     06E0  0020               	movlb	0	; select bank0
 11113     06E1  0625               	xorwf	SendMsg@msg_id,w
 11114     06E2  1D03               	btfss	3,2
 11115     06E3  2EE5               	goto	u1741
 11116     06E4  2EE6               	goto	u1740
 11117     06E5                     u1741:
 11118     06E5  2EE7               	goto	l3699
 11119     06E6                     u1740:
 11120     06E6  2F07               	goto	l768
 11121     06E7                     l3699:
 11122                           
 11123                           ;parser.c: 46:     for (; data_len > 0; data_len--) {
 11124     06E7  0822               	movf	SendMsg@data_len,w
 11125     06E8  1D03               	btfss	3,2
 11126     06E9  2EEB               	goto	u1751
 11127     06EA  2EEC               	goto	u1750
 11128     06EB                     u1751:
 11129     06EB  2EED               	goto	l3703
 11130     06EC                     u1750:
 11131     06EC  2F03               	goto	l3713
 11132     06ED                     l3703:
 11133                           
 11134                           ;parser.c: 47:         SendSync(*data);
 11135     06ED  0821               	movf	SendMsg@data,w
 11136     06EE  0086               	movwf	6
 11137     06EF  0187               	clrf	7
 11138     06F0  0801               	movf	1,w
 11139     06F1  318E  269F  3186   	fcall	_SendSync
 11140     06F4                     l3705:
 11141                           
 11142                           ;parser.c: 48:         sum += *data;
 11143     06F4  0020               	movlb	0	; select bank0
 11144     06F5  0821               	movf	SendMsg@data,w
 11145     06F6  0086               	movwf	6
 11146     06F7  0187               	clrf	7
 11147     06F8  0801               	movf	1,w
 11148     06F9  00A3               	movwf	??_SendMsg
 11149     06FA  0823               	movf	??_SendMsg,w
 11150     06FB  07A4               	addwf	SendMsg@sum,f
 11151     06FC                     l3707:
 11152                           
 11153                           ;parser.c: 49:         data++;
 11154     06FC  3001               	movlw	1
 11155     06FD  00A3               	movwf	??_SendMsg
 11156     06FE  0823               	movf	??_SendMsg,w
 11157     06FF  07A1               	addwf	SendMsg@data,f
 11158     0700                     l3709:
 11159                           
 11160                           ;parser.c: 50:     }
 11161     0700  3001               	movlw	1
 11162     0701  02A2               	subwf	SendMsg@data_len,f
 11163     0702  2EE7               	goto	l3699
 11164     0703                     l3713:
 11165                           
 11166                           ;parser.c: 52:     SendSync(sum);
 11167     0703  0824               	movf	SendMsg@sum,w
 11168     0704  318E  269F  3186   	fcall	_SendSync
 11169     0707                     l768:
 11170     0707  0008               	return
 11171     0708                     __end_of_SendMsg:
 11172                           
 11173                           	psect	text47
 11174     0E9F                     __ptext47:	
 11175 ;; *************** function _SendSync *****************
 11176 ;; Defined at:
 11177 ;;		line 23 in file "parser.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;  data            1    wreg     unsigned char 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  data            1    0[BANK0 ] unsigned char 
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  1    wreg      void 
 11184 ;; Registers used:
 11185 ;;		wreg, status,2, status,0, pclath, cstack
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11191 ;;      Params:         0       0       0       0       0       0       0       0
 11192 ;;      Locals:         0       1       0       0       0       0       0       0
 11193 ;;      Temps:          1       0       0       0       0       0       0       0
 11194 ;;      Totals:         1       1       0       0       0       0       0       0
 11195 ;;Total ram usage:        2 bytes
 11196 ;; Hardware stack levels used: 1
 11197 ;; Hardware stack levels required when called: 8
 11198 ;; This function calls:
 11199 ;;		_EUSART_IsTxReady
 11200 ;;		_EUSART_Write
 11201 ;; This function is called by:
 11202 ;;		_SendMsg
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206     0E9F                     _SendSync:	
 11207                           ;psect for function _SendSync
 11208                           
 11209                           
 11210                           ;incstack = 0
 11211                           ; Regs used in _SendSync: [wreg+status,2+status,0+pclath+cstack]
 11212                           ;SendSync@data stored from wreg
 11213     0E9F  0020               	movlb	0	; select bank0
 11214     0EA0  00A0               	movwf	SendSync@data
 11215     0EA1                     l3577:
 11216                           
 11217                           ;parser.c: 23: void SendSync(uint8_t data);parser.c: 24: {;parser.c: 25:     while(!EUSA
      +                          RT_IsTxReady())
 11218     0EA1  2EAA               	goto	l3581
 11219     0EA2                     l3579:
 11220                           
 11221                           ;parser.c: 26:         _delay((unsigned long)((1)*(16000000/4000.0)));
 11222     0EA2  3006               	movlw	6
 11223     0EA3  00F5               	movwf	??_SendSync
 11224     0EA4  3030               	movlw	48
 11225     0EA5                     u2107:
 11226     0EA5  0B89               	decfsz	9,f
 11227     0EA6  2EA5               	goto	u2107
 11228     0EA7  0BF5               	decfsz	??_SendSync,f
 11229     0EA8  2EA5               	goto	u2107
 11230     0EA9  3200               	nop2
 11231     0EAA                     l3581:
 11232                           
 11233                           ;parser.c: 25:     while(!EUSART_IsTxReady())
 11234     0EAA  318E  2618  318E   	fcall	_EUSART_IsTxReady
 11235     0EAD  3A00               	xorlw	0
 11236     0EAE  1903               	skipnz
 11237     0EAF  2EB1               	goto	u1571
 11238     0EB0  2EB2               	goto	u1570
 11239     0EB1                     u1571:
 11240     0EB1  2EA2               	goto	l3579
 11241     0EB2                     u1570:
 11242     0EB2                     l3583:
 11243                           
 11244                           ;parser.c: 27:     EUSART_Write(data);
 11245     0EB2  0020               	movlb	0	; select bank0
 11246     0EB3  0820               	movf	SendSync@data,w
 11247     0EB4  00F4               	movwf	EUSART_Write@txData
 11248     0EB5  318D  2529  318E   	fcall	_EUSART_Write
 11249     0EB8                     l764:
 11250     0EB8  0008               	return
 11251     0EB9                     __end_of_SendSync:
 11252                           
 11253                           	psect	text48
 11254     0D29                     __ptext48:	
 11255 ;; *************** function _EUSART_Write *****************
 11256 ;; Defined at:
 11257 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  txData          1    4[COMMON] unsigned char 
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1    wreg      void 
 11264 ;; Registers used:
 11265 ;;		wreg
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11271 ;;      Params:         1       0       0       0       0       0       0       0
 11272 ;;      Locals:         0       0       0       0       0       0       0       0
 11273 ;;      Temps:          0       0       0       0       0       0       0       0
 11274 ;;      Totals:         1       0       0       0       0       0       0       0
 11275 ;;Total ram usage:        1 bytes
 11276 ;; Hardware stack levels used: 1
 11277 ;; Hardware stack levels required when called: 7
 11278 ;; This function calls:
 11279 ;;		Nothing
 11280 ;; This function is called by:
 11281 ;;		_SendSync
 11282 ;;		_EUSART_sendMsg
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286     0D29                     _EUSART_Write:	
 11287                           ;psect for function _EUSART_Write
 11288                           
 11289     0D29                     l3543:	
 11290                           ;incstack = 0
 11291                           ; Regs used in _EUSART_Write: [wreg]
 11292                           
 11293                           
 11294                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
 11295     0D29  0874               	movf	EUSART_Write@txData,w
 11296     0D2A  0023               	movlb	3	; select bank3
 11297     0D2B  009A               	movwf	26	;volatile
 11298     0D2C                     l613:
 11299     0D2C  0008               	return
 11300     0D2D                     __end_of_EUSART_Write:
 11301                           
 11302                           	psect	text49
 11303     0E18                     __ptext49:	
 11304 ;; *************** function _EUSART_IsTxReady *****************
 11305 ;; Defined at:
 11306 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;		None
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;		None
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  1    wreg      _Bool 
 11313 ;; Registers used:
 11314 ;;		wreg, status,2
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11320 ;;      Params:         0       0       0       0       0       0       0       0
 11321 ;;      Locals:         1       0       0       0       0       0       0       0
 11322 ;;      Temps:          0       0       0       0       0       0       0       0
 11323 ;;      Totals:         1       0       0       0       0       0       0       0
 11324 ;;Total ram usage:        1 bytes
 11325 ;; Hardware stack levels used: 1
 11326 ;; Hardware stack levels required when called: 7
 11327 ;; This function calls:
 11328 ;;		Nothing
 11329 ;; This function is called by:
 11330 ;;		_SendSync
 11331 ;;		_EUSART_sendMsg
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335     0E18                     _EUSART_IsTxReady:	
 11336                           ;psect for function _EUSART_IsTxReady
 11337                           
 11338     0E18                     l3531:	
 11339                           ;incstack = 0
 11340                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2]
 11341                           
 11342                           
 11343                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TXIF && TX1STAb
      +                          its.TXEN);
 11344     0E18  01F4               	clrf	_EUSART_IsTxReady$1324
 11345     0E19                     l3533:
 11346     0E19  0020               	movlb	0	; select bank0
 11347     0E1A  1E10               	btfss	16,4	;volatile
 11348     0E1B  2E1D               	goto	u1531
 11349     0E1C  2E1E               	goto	u1530
 11350     0E1D                     u1531:
 11351     0E1D  2E25               	goto	l3539
 11352     0E1E                     u1530:
 11353     0E1E                     l3535:
 11354     0E1E  0023               	movlb	3	; select bank3
 11355     0E1F  1E9E               	btfss	30,5	;volatile
 11356     0E20  2E22               	goto	u1541
 11357     0E21  2E23               	goto	u1540
 11358     0E22                     u1541:
 11359     0E22  2E25               	goto	l3539
 11360     0E23                     u1540:
 11361     0E23                     l3537:
 11362     0E23  01F4               	clrf	_EUSART_IsTxReady$1324
 11363     0E24  0AF4               	incf	_EUSART_IsTxReady$1324,f
 11364     0E25                     l3539:
 11365     0E25  0874               	movf	_EUSART_IsTxReady$1324,w
 11366     0E26                     l597:
 11367     0E26  0008               	return
 11368     0E27                     __end_of_EUSART_IsTxReady:
 11369                           
 11370                           	psect	text50
 11371     0FAA                     __ptext50:	
 11372 ;; *************** function _EUSART_Read *****************
 11373 ;; Defined at:
 11374 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;		None
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      unsigned char 
 11381 ;; Registers used:
 11382 ;;		wreg, status,2, status,0, pclath, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11388 ;;      Params:         0       0       0       0       0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0
 11391 ;;      Totals:         0       0       0       0       0       0       0       0
 11392 ;;Total ram usage:        0 bytes
 11393 ;; Hardware stack levels used: 1
 11394 ;; Hardware stack levels required when called: 8
 11395 ;; This function calls:
 11396 ;;		NULL
 11397 ;;		_EUSART_DefaultFramingErrorCallback
 11398 ;;		_EUSART_DefaultOverrunErrorCallback
 11399 ;; This function is called by:
 11400 ;;		_main
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404     0FAA                     _EUSART_Read:	
 11405                           ;psect for function _EUSART_Read
 11406                           
 11407     0FAA                     l3173:	
 11408                           ;incstack = 0
 11409                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 11410                           
 11411                           
 11412                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 11413     0FAA  0021               	movlb	1	; select bank1
 11414     0FAB  01BE               	clrf	_eusartRxLastError^(0+128)	;volatile
 11415     0FAC  01BF               	clrf	(_eusartRxLastError+1)^(0+128)	;volatile
 11416     0FAD                     l3175:
 11417                           
 11418                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 11419     0FAD  0023               	movlb	3	; select bank3
 11420     0FAE  1C9D               	btfss	29,1	;volatile
 11421     0FAF  2FB1               	goto	u1291
 11422     0FB0  2FB2               	goto	u1290
 11423     0FB1                     u1291:
 11424     0FB1  2FBF               	goto	l3183
 11425     0FB2                     u1290:
 11426     0FB2                     l3177:
 11427                           
 11428                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 11429     0FB2  0021               	movlb	1	; select bank1
 11430     0FB3  153E               	bsf	_eusartRxLastError^(0+128),2	;volatile
 11431     0FB4                     l3179:
 11432                           
 11433                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 11434     0FB4  083C               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11435     0FB5  043D               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11436     0FB6  1903               	btfsc	3,2
 11437     0FB7  2FB9               	goto	u1301
 11438     0FB8  2FBA               	goto	u1300
 11439     0FB9                     u1301:
 11440     0FB9  2FBF               	goto	l3183
 11441     0FBA                     u1300:
 11442     0FBA                     l3181:
 11443                           
 11444                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 11445     0FBA  083D               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11446     0FBB  008A               	movwf	10
 11447     0FBC  083C               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11448     0FBD  000A               	callw
 11449     0FBE  318F               	pagesel	$
 11450     0FBF                     l3183:
 11451                           
 11452                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 11453     0FBF  0023               	movlb	3	; select bank3
 11454     0FC0  1D1D               	btfss	29,2	;volatile
 11455     0FC1  2FC3               	goto	u1311
 11456     0FC2  2FC4               	goto	u1310
 11457     0FC3                     u1311:
 11458     0FC3  2FD1               	goto	l3191
 11459     0FC4                     u1310:
 11460     0FC4                     l3185:
 11461                           
 11462                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 11463     0FC4  0021               	movlb	1	; select bank1
 11464     0FC5  14BE               	bsf	_eusartRxLastError^(0+128),1	;volatile
 11465     0FC6                     l3187:
 11466                           
 11467                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 11468     0FC6  0876               	movf	_EUSART_FramingErrorHandler,w
 11469     0FC7  0477               	iorwf	_EUSART_FramingErrorHandler+1,w
 11470     0FC8  1903               	btfsc	3,2
 11471     0FC9  2FCB               	goto	u1321
 11472     0FCA  2FCC               	goto	u1320
 11473     0FCB                     u1321:
 11474     0FCB  2FD1               	goto	l3191
 11475     0FCC                     u1320:
 11476     0FCC                     l3189:
 11477                           
 11478                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 11479     0FCC  0877               	movf	_EUSART_FramingErrorHandler+1,w
 11480     0FCD  008A               	movwf	10
 11481     0FCE  0876               	movf	_EUSART_FramingErrorHandler,w
 11482     0FCF  000A               	callw
 11483     0FD0  318F               	pagesel	$
 11484     0FD1                     l3191:
 11485                           
 11486                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 11487     0FD1  0023               	movlb	3	; select bank3
 11488     0FD2  0819               	movf	25,w	;volatile
 11489     0FD3                     l610:
 11490     0FD3  0008               	return
 11491     0FD4                     __end_of_EUSART_Read:
 11492                           
 11493                           	psect	text51
 11494     0D25                     __ptext51:	
 11495 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 11496 ;; Defined at:
 11497 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;		None
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;		None
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  1    wreg      void 
 11504 ;; Registers used:
 11505 ;;		None
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11511 ;;      Params:         0       0       0       0       0       0       0       0
 11512 ;;      Locals:         0       0       0       0       0       0       0       0
 11513 ;;      Temps:          0       0       0       0       0       0       0       0
 11514 ;;      Totals:         0       0       0       0       0       0       0       0
 11515 ;;Total ram usage:        0 bytes
 11516 ;; Hardware stack levels used: 1
 11517 ;; Hardware stack levels required when called: 7
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_EUSART_Initialize
 11522 ;;		_EUSART_Read
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526     0D25                     _EUSART_DefaultOverrunErrorCallback:	
 11527                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11528                           
 11529     0D25                     l3019:	
 11530                           ;incstack = 0
 11531                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11532                           
 11533                           
 11534                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 11535     0D25  0023               	movlb	3	; select bank3
 11536     0D26  121D               	bcf	29,4	;volatile
 11537                           
 11538                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 11539     0D27  161D               	bsf	29,4	;volatile
 11540     0D28                     l619:
 11541     0D28  0008               	return
 11542     0D29                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11543                           
 11544                           	psect	text52
 11545     0003                     __ptext52:	
 11546 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11547 ;; Defined at:
 11548 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;		None
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;		None
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		None
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11562 ;;      Params:         0       0       0       0       0       0       0       0
 11563 ;;      Locals:         0       0       0       0       0       0       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0
 11565 ;;      Totals:         0       0       0       0       0       0       0       0
 11566 ;;Total ram usage:        0 bytes
 11567 ;; Hardware stack levels used: 1
 11568 ;; Hardware stack levels required when called: 7
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_EUSART_Initialize
 11573 ;;		_EUSART_Read
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577     0003                     _EUSART_DefaultFramingErrorCallback:	
 11578                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11579                           
 11580     0003                     l616:	
 11581                           ;incstack = 0
 11582                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11583                           
 11584     0003  0008               	return
 11585     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11586                           
 11587                           	psect	text53
 11588     0D3B                     __ptext53:	
 11589 ;; *************** function _EUSART_IsRxReady *****************
 11590 ;; Defined at:
 11591 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;		None
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;		None
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      _Bool 
 11598 ;; Registers used:
 11599 ;;		wreg, status,2, status,0
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11605 ;;      Params:         0       0       0       0       0       0       0       0
 11606 ;;      Locals:         0       0       0       0       0       0       0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0
 11608 ;;      Totals:         0       0       0       0       0       0       0       0
 11609 ;;Total ram usage:        0 bytes
 11610 ;; Hardware stack levels used: 1
 11611 ;; Hardware stack levels required when called: 7
 11612 ;; This function calls:
 11613 ;;		Nothing
 11614 ;; This function is called by:
 11615 ;;		_main
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619     0D3B                     _EUSART_IsRxReady:	
 11620                           ;psect for function _EUSART_IsRxReady
 11621                           
 11622     0D3B                     l3169:	
 11623                           ;incstack = 0
 11624                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11625                           
 11626                           
 11627                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 11628     0D3B  0020               	movlb	0	; select bank0
 11629     0D3C  0E10               	swapf	16,w	;volatile
 11630     0D3D  0C89               	rrf	9,f
 11631     0D3E  3901               	andlw	1
 11632     0D3F                     l592:
 11633     0D3F  0008               	return
 11634     0D40                     __end_of_EUSART_IsRxReady:
 11635                           
 11636                           	psect	intentry
 11637     0004                     __pintentry:	
 11638 ;; *************** function _INTERRUPT_InterruptManager *****************
 11639 ;; Defined at:
 11640 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;		None
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;		None
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      void 
 11647 ;; Registers used:
 11648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11654 ;;      Params:         0       0       0       0       0       0       0       0
 11655 ;;      Locals:         0       0       0       0       0       0       0       0
 11656 ;;      Temps:          0       0       0       0       0       0       0       0
 11657 ;;      Totals:         0       0       0       0       0       0       0       0
 11658 ;;Total ram usage:        0 bytes
 11659 ;; Hardware stack levels used: 1
 11660 ;; Hardware stack levels required when called: 6
 11661 ;; This function calls:
 11662 ;;		_ADC_ISR
 11663 ;;		_I2C1_ERROR_ISR
 11664 ;;		_I2C1_ISR
 11665 ;; This function is called by:
 11666 ;;		Interrupt level 1
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670     0004                     _INTERRUPT_InterruptManager:
 11671                           
 11672                           ;incstack = 0
 11673     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11674                           
 11675                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11676     0005  3180               	pagesel	$
 11677     0006                     i1l3363:
 11678                           
 11679                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11680     0006  1F0B               	btfss	11,6	;volatile
 11681     0007  2809               	goto	u142_21
 11682     0008  280A               	goto	u142_20
 11683     0009                     u142_21:
 11684     0009  2834               	goto	i1l455
 11685     000A                     u142_20:
 11686     000A                     i1l3365:
 11687                           
 11688                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11689     000A  0021               	movlb	1	; select bank1
 11690     000B  1F10               	btfss	16,6	;volatile
 11691     000C  280E               	goto	u143_21
 11692     000D  280F               	goto	u143_20
 11693     000E                     u143_21:
 11694     000E  2818               	goto	i1l448
 11695     000F                     u143_20:
 11696     000F                     i1l3367:
 11697     000F  0020               	movlb	0	; select bank0
 11698     0010  1F10               	btfss	16,6	;volatile
 11699     0011  2813               	goto	u144_21
 11700     0012  2814               	goto	u144_20
 11701     0013                     u144_21:
 11702     0013  2818               	goto	i1l448
 11703     0014                     u144_20:
 11704     0014                     i1l3369:
 11705                           
 11706                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 11707     0014  318E  2609  3180   	fcall	_ADC_ISR
 11708                           
 11709                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 11710     0017  2834               	goto	i1l455
 11711     0018                     i1l448:	
 11712                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 11713                           
 11714     0018  0021               	movlb	1	; select bank1
 11715     0019  1D91               	btfss	17,3	;volatile
 11716     001A  281C               	goto	u145_21
 11717     001B  281D               	goto	u145_20
 11718     001C                     u145_21:
 11719     001C  2826               	goto	i1l450
 11720     001D                     u145_20:
 11721     001D                     i1l3371:
 11722     001D  0020               	movlb	0	; select bank0
 11723     001E  1D91               	btfss	17,3	;volatile
 11724     001F  2821               	goto	u146_21
 11725     0020  2822               	goto	u146_20
 11726     0021                     u146_21:
 11727     0021  2826               	goto	i1l450
 11728     0022                     u146_20:
 11729     0022                     i1l3373:
 11730                           
 11731                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 11732     0022  318D  251D  3180   	fcall	_I2C1_ERROR_ISR
 11733                           
 11734                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 11735     0025  2834               	goto	i1l455
 11736     0026                     i1l450:	
 11737                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 11738                           
 11739     0026  0021               	movlb	1	; select bank1
 11740     0027  1D90               	btfss	16,3	;volatile
 11741     0028  282A               	goto	u147_21
 11742     0029  282B               	goto	u147_20
 11743     002A                     u147_21:
 11744     002A  2834               	goto	i1l449
 11745     002B                     u147_20:
 11746     002B                     i1l3375:
 11747     002B  0020               	movlb	0	; select bank0
 11748     002C  1D90               	btfss	16,3	;volatile
 11749     002D  282F               	goto	u148_21
 11750     002E  2830               	goto	u148_20
 11751     002F                     u148_21:
 11752     002F  2834               	goto	i1l449
 11753     0030                     u148_20:
 11754     0030                     i1l3377:
 11755                           
 11756                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 11757     0030  318D  2521  3180   	fcall	_I2C1_ISR
 11758                           
 11759                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 11760     0033  2834               	goto	i1l455
 11761     0034                     i1l449:
 11762     0034                     i1l455:	
 11763                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 11764                           
 11765     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11766     0035  0009               	retfie
 11767     0036                     __end_of_INTERRUPT_InterruptManager:
 11768                           
 11769                           	psect	text55
 11770     0D21                     __ptext55:	
 11771 ;; *************** function _I2C1_ISR *****************
 11772 ;; Defined at:
 11773 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11787 ;;      Params:         0       0       0       0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0       0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0       0
 11790 ;;      Totals:         0       0       0       0       0       0       0       0
 11791 ;;Total ram usage:        0 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; Hardware stack levels required when called: 5
 11794 ;; This function calls:
 11795 ;;		_I2C1_EventHandler
 11796 ;; This function is called by:
 11797 ;;		_INTERRUPT_InterruptManager
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801     0D21                     _I2C1_ISR:	
 11802                           ;psect for function _I2C1_ISR
 11803                           
 11804     0D21                     i1l3163:	
 11805                           ;incstack = 0
 11806                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11807                           
 11808                           
 11809                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 11810     0D21  3184  24AD  318D   	fcall	_I2C1_EventHandler
 11811     0D24                     i1l207:
 11812     0D24  0008               	return
 11813     0D25                     __end_of_I2C1_ISR:
 11814                           
 11815                           	psect	text56
 11816     04AD                     __ptext56:	
 11817 ;; *************** function _I2C1_EventHandler *****************
 11818 ;; Defined at:
 11819 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;		None
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;		None
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11833 ;;      Params:         0       0       0       0       0       0       0       0
 11834 ;;      Locals:         0       0       0       0       0       0       0       0
 11835 ;;      Temps:          2       0       0       0       0       0       0       0
 11836 ;;      Totals:         2       0       0       0       0       0       0       0
 11837 ;;Total ram usage:        2 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 4
 11840 ;; This function calls:
 11841 ;;		_I2C1_EVENT_ERROR
 11842 ;;		_I2C1_EVENT_IDLE
 11843 ;;		_I2C1_EVENT_NACK
 11844 ;;		_I2C1_EVENT_RESET
 11845 ;;		_I2C1_EVENT_RX
 11846 ;;		_I2C1_EVENT_SEND_RD_ADDR
 11847 ;;		_I2C1_EVENT_SEND_WR_ADDR
 11848 ;;		_I2C1_EVENT_STOP
 11849 ;;		_I2C1_EVENT_TX
 11850 ;;		_I2C1_InterruptClear
 11851 ;;		_I2C1_IsAddr
 11852 ;;		_I2C1_IsData
 11853 ;;		_I2C1_IsNack
 11854 ;; This function is called by:
 11855 ;;		_I2C1_ISR
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859     04AD                     _I2C1_EventHandler:	
 11860                           ;psect for function _I2C1_EventHandler
 11861                           
 11862     04AD                     i1l2921:	
 11863                           ;incstack = 0
 11864                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11865                           
 11866                           
 11867                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 11868     04AD  318C  24ED  3184   	fcall	_I2C1_InterruptClear
 11869     04B0                     i1l2923:
 11870                           
 11871                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 11872     04B0  318D  257D  3184   	fcall	_I2C1_IsAddr
 11873     04B3  3A00               	xorlw	0
 11874     04B4  1903               	skipnz
 11875     04B5  2CB7               	goto	u112_21
 11876     04B6  2CB8               	goto	u112_20
 11877     04B7                     u112_21:
 11878     04B7  2CC6               	goto	i1l2929
 11879     04B8                     u112_20:
 11880     04B8                     i1l2925:
 11881     04B8  318D  2551  3184   	fcall	_I2C1_IsNack
 11882     04BB  3A00               	xorlw	0
 11883     04BC  1903               	skipnz
 11884     04BD  2CBF               	goto	u113_21
 11885     04BE  2CC0               	goto	u113_20
 11886     04BF                     u113_21:
 11887     04BF  2CC6               	goto	i1l2929
 11888     04C0                     u113_20:
 11889     04C0                     i1l2927:
 11890                           
 11891                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 11892     04C0  3005               	movlw	5
 11893     04C1  0020               	movlb	0	; select bank0
 11894     04C2  00DD               	movwf	_i2c1Status+11	;volatile
 11895                           
 11896                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 11897     04C3  3001               	movlw	1
 11898     04C4  00DC               	movwf	_i2c1Status+10	;volatile
 11899                           
 11900                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 11901     04C5  2CDB               	goto	i1l2935
 11902     04C6                     i1l2929:
 11903     04C6  318D  2536  3184   	fcall	_I2C1_IsData
 11904     04C9  3A00               	xorlw	0
 11905     04CA  1903               	skipnz
 11906     04CB  2CCD               	goto	u114_21
 11907     04CC  2CCE               	goto	u114_20
 11908     04CD                     u114_21:
 11909     04CD  2CDB               	goto	i1l2935
 11910     04CE                     u114_20:
 11911     04CE                     i1l2931:
 11912     04CE  318D  2551  3184   	fcall	_I2C1_IsNack
 11913     04D1  3A00               	xorlw	0
 11914     04D2  1903               	skipnz
 11915     04D3  2CD5               	goto	u115_21
 11916     04D4  2CD6               	goto	u115_20
 11917     04D5                     u115_21:
 11918     04D5  2CDB               	goto	i1l2935
 11919     04D6                     u115_20:
 11920     04D6                     i1l2933:
 11921                           
 11922                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 11923     04D6  3005               	movlw	5
 11924     04D7  0020               	movlb	0	; select bank0
 11925     04D8  00DD               	movwf	_i2c1Status+11	;volatile
 11926                           
 11927                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 11928     04D9  3002               	movlw	2
 11929     04DA  00DC               	movwf	_i2c1Status+10	;volatile
 11930     04DB                     i1l2935:
 11931                           
 11932                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 11933     04DB  0020               	movlb	0	; select bank0
 11934     04DC  085D               	movf	_i2c1Status+11,w	;volatile
 11935     04DD  00F2               	movwf	??_I2C1_EventHandler
 11936     04DE  01F3               	clrf	??_I2C1_EventHandler+1
 11937     04DF  35F2               	lslf	??_I2C1_EventHandler,f
 11938     04E0  0DF3               	rlf	??_I2C1_EventHandler+1,f
 11939     04E1  300F               	movlw	low _i2c1_eventTable
 11940     04E2  0772               	addwf	??_I2C1_EventHandler,w
 11941     04E3  0084               	movwf	4
 11942     04E4  3008               	movlw	high _i2c1_eventTable
 11943     04E5  3D73               	addwfc	??_I2C1_EventHandler+1,w
 11944     04E6  3880               	iorlw	128
 11945     04E7  0085               	movwf	5
 11946     04E8  3F01               	moviw [1]fsr0
 11947     04E9  008A               	movwf	10
 11948     04EA  3F00               	moviw [0]fsr0
 11949     04EB  000A               	callw
 11950     04EC  3184               	pagesel	$
 11951     04ED  0020               	movlb	0	; select bank0
 11952     04EE  00DD               	movwf	_i2c1Status+11	;volatile
 11953     04EF                     i1l225:
 11954     04EF  0008               	return
 11955     04F0                     __end_of_I2C1_EventHandler:
 11956                           
 11957                           	psect	text57
 11958     0D51                     __ptext57:	
 11959 ;; *************** function _I2C1_IsNack *****************
 11960 ;; Defined at:
 11961 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11962 ;; Parameters:    Size  Location     Type
 11963 ;;		None
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      _Bool 
 11968 ;; Registers used:
 11969 ;;		wreg, status,2, status,0
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11975 ;;      Params:         0       0       0       0       0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0       0
 11978 ;;      Totals:         0       0       0       0       0       0       0       0
 11979 ;;Total ram usage:        0 bytes
 11980 ;; Hardware stack levels used: 1
 11981 ;; This function calls:
 11982 ;;		Nothing
 11983 ;; This function is called by:
 11984 ;;		_I2C1_EventHandler
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988     0D51                     _I2C1_IsNack:	
 11989                           ;psect for function _I2C1_IsNack
 11990                           
 11991     0D51                     i1l2701:	
 11992                           ;incstack = 0
 11993                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 11994                           
 11995                           
 11996                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 11997     0D51  0024               	movlb	4	; select bank4
 11998     0D52  0E16               	swapf	22,w	;volatile
 11999     0D53  0C89               	rrf	9,f
 12000     0D54  0C89               	rrf	9,f
 12001     0D55  3901               	andlw	1
 12002     0D56                     i1l300:
 12003     0D56  0008               	return
 12004     0D57                     __end_of_I2C1_IsNack:
 12005                           
 12006                           	psect	text58
 12007     0D36                     __ptext58:	
 12008 ;; *************** function _I2C1_IsData *****************
 12009 ;; Defined at:
 12010 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;		None
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;		None
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  1    wreg      _Bool 
 12017 ;; Registers used:
 12018 ;;		wreg, status,2, status,0
 12019 ;; Tracked objects:
 12020 ;;		On entry : 0/0
 12021 ;;		On exit  : 0/0
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12024 ;;      Params:         0       0       0       0       0       0       0       0
 12025 ;;      Locals:         0       0       0       0       0       0       0       0
 12026 ;;      Temps:          0       0       0       0       0       0       0       0
 12027 ;;      Totals:         0       0       0       0       0       0       0       0
 12028 ;;Total ram usage:        0 bytes
 12029 ;; Hardware stack levels used: 1
 12030 ;; This function calls:
 12031 ;;		Nothing
 12032 ;; This function is called by:
 12033 ;;		_I2C1_EventHandler
 12034 ;; This function uses a non-reentrant model
 12035 ;;
 12036                           
 12037     0D36                     _I2C1_IsData:	
 12038                           ;psect for function _I2C1_IsData
 12039                           
 12040     0D36                     i1l2705:	
 12041                           ;incstack = 0
 12042                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 12043                           
 12044                           
 12045                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 12046     0D36  0024               	movlb	4	; select bank4
 12047     0D37  0E14               	swapf	20,w	;volatile
 12048     0D38  0C89               	rrf	9,f
 12049     0D39  3901               	andlw	1
 12050     0D3A                     i1l303:
 12051     0D3A  0008               	return
 12052     0D3B                     __end_of_I2C1_IsData:
 12053                           
 12054                           	psect	text59
 12055     0D7D                     __ptext59:	
 12056 ;; *************** function _I2C1_IsAddr *****************
 12057 ;; Defined at:
 12058 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      _Bool 
 12065 ;; Registers used:
 12066 ;;		wreg, status,0
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12072 ;;      Params:         0       0       0       0       0       0       0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0
 12075 ;;      Totals:         0       0       0       0       0       0       0       0
 12076 ;;Total ram usage:        0 bytes
 12077 ;; Hardware stack levels used: 1
 12078 ;; This function calls:
 12079 ;;		Nothing
 12080 ;; This function is called by:
 12081 ;;		_I2C1_EventHandler
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085     0D7D                     _I2C1_IsAddr:	
 12086                           ;psect for function _I2C1_IsAddr
 12087                           
 12088     0D7D                     i1l2697:	
 12089                           ;incstack = 0
 12090                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12091                           
 12092                           
 12093                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12094     0D7D  1003               	clrc
 12095     0D7E  0024               	movlb	4	; select bank4
 12096     0D7F  1E94               	btfss	20,5	;volatile
 12097     0D80  1403               	setc
 12098     0D81  3000               	movlw	0
 12099     0D82  3D09               	addwfc	9,w
 12100     0D83                     i1l306:
 12101     0D83  0008               	return
 12102     0D84                     __end_of_I2C1_IsAddr:
 12103                           
 12104                           	psect	text60
 12105     0D1D                     __ptext60:	
 12106 ;; *************** function _I2C1_ERROR_ISR *****************
 12107 ;; Defined at:
 12108 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;		None
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  1    wreg      void 
 12115 ;; Registers used:
 12116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/0
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12122 ;;      Params:         0       0       0       0       0       0       0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0
 12125 ;;      Totals:         0       0       0       0       0       0       0       0
 12126 ;;Total ram usage:        0 bytes
 12127 ;; Hardware stack levels used: 1
 12128 ;; Hardware stack levels required when called: 5
 12129 ;; This function calls:
 12130 ;;		_I2C1_ErrorEventHandler
 12131 ;; This function is called by:
 12132 ;;		_INTERRUPT_InterruptManager
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136     0D1D                     _I2C1_ERROR_ISR:	
 12137                           ;psect for function _I2C1_ERROR_ISR
 12138                           
 12139     0D1D                     i1l3165:	
 12140                           ;incstack = 0
 12141                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12142                           
 12143                           
 12144                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12145     0D1D  318F  2716  318D   	fcall	_I2C1_ErrorEventHandler
 12146     0D20                     i1l210:
 12147     0D20  0008               	return
 12148     0D21                     __end_of_I2C1_ERROR_ISR:
 12149                           
 12150                           	psect	text61
 12151     0F16                     __ptext61:	
 12152 ;; *************** function _I2C1_ErrorEventHandler *****************
 12153 ;; Defined at:
 12154 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;		None
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;		None
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12168 ;;      Params:         0       0       0       0       0       0       0       0
 12169 ;;      Locals:         0       0       0       0       0       0       0       0
 12170 ;;      Temps:          2       0       0       0       0       0       0       0
 12171 ;;      Totals:         2       0       0       0       0       0       0       0
 12172 ;;Total ram usage:        2 bytes
 12173 ;; Hardware stack levels used: 1
 12174 ;; Hardware stack levels required when called: 4
 12175 ;; This function calls:
 12176 ;;		NULL
 12177 ;;		_I2C1_DefaultCallback
 12178 ;;		_I2C1_EVENT_ERROR
 12179 ;;		_I2C1_EVENT_IDLE
 12180 ;;		_I2C1_EVENT_NACK
 12181 ;;		_I2C1_EVENT_RESET
 12182 ;;		_I2C1_EVENT_RX
 12183 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12184 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12185 ;;		_I2C1_EVENT_STOP
 12186 ;;		_I2C1_EVENT_TX
 12187 ;;		_I2C1_ErrorInterruptClear
 12188 ;; This function is called by:
 12189 ;;		_I2C1_ERROR_ISR
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193     0F16                     _I2C1_ErrorEventHandler:	
 12194                           ;psect for function _I2C1_ErrorEventHandler
 12195                           
 12196     0F16                     i1l2937:	
 12197                           ;incstack = 0
 12198                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12199                           
 12200                           
 12201                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12202     0F16  3006               	movlw	6
 12203     0F17  0020               	movlb	0	; select bank0
 12204     0F18  00DD               	movwf	_i2c1Status+11	;volatile
 12205                           
 12206                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12207     0F19  3003               	movlw	3
 12208     0F1A  00DC               	movwf	_i2c1Status+10	;volatile
 12209     0F1B                     i1l2939:
 12210                           
 12211                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12212     0F1B  318C  24EA  318F   	fcall	_I2C1_ErrorInterruptClear
 12213     0F1E                     i1l2941:
 12214                           
 12215                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12216     0F1E  0020               	movlb	0	; select bank0
 12217     0F1F  085D               	movf	_i2c1Status+11,w	;volatile
 12218     0F20  00F2               	movwf	??_I2C1_ErrorEventHandler
 12219     0F21  01F3               	clrf	??_I2C1_ErrorEventHandler+1
 12220     0F22  35F2               	lslf	??_I2C1_ErrorEventHandler,f
 12221     0F23  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
 12222     0F24  300F               	movlw	low _i2c1_eventTable
 12223     0F25  0772               	addwf	??_I2C1_ErrorEventHandler,w
 12224     0F26  0084               	movwf	4
 12225     0F27  3008               	movlw	high _i2c1_eventTable
 12226     0F28  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12227     0F29  3880               	iorlw	128
 12228     0F2A  0085               	movwf	5
 12229     0F2B  3F01               	moviw [1]fsr0
 12230     0F2C  008A               	movwf	10
 12231     0F2D  3F00               	moviw [0]fsr0
 12232     0F2E  000A               	callw
 12233     0F2F  318F               	pagesel	$
 12234     0F30  0020               	movlb	0	; select bank0
 12235     0F31  00DD               	movwf	_i2c1Status+11	;volatile
 12236     0F32                     i1l2943:
 12237                           
 12238                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12239     0F32  0021               	movlb	1	; select bank1
 12240     0F33  0841               	movf	(_I2C1_Callback+1)^(0+128),w
 12241     0F34  008A               	movwf	10
 12242     0F35  0840               	movf	_I2C1_Callback^(0+128),w
 12243     0F36  000A               	callw
 12244     0F37  318F               	pagesel	$
 12245     0F38                     i1l228:
 12246     0F38  0008               	return
 12247     0F39                     __end_of_I2C1_ErrorEventHandler:
 12248                           
 12249                           	psect	text62
 12250     0D76                     __ptext62:	
 12251 ;; *************** function _I2C1_EVENT_RESET *****************
 12252 ;; Defined at:
 12253 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  1    wreg      enum E9559
 12260 ;; Registers used:
 12261 ;;		wreg, status,2, status,0, pclath, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12267 ;;      Params:         0       0       0       0       0       0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used: 1
 12273 ;; Hardware stack levels required when called: 1
 12274 ;; This function calls:
 12275 ;;		_I2C1_BusReset
 12276 ;; This function is called by:
 12277 ;;		_I2C1_EVENT_ERROR
 12278 ;;		_I2C1_EventHandler
 12279 ;;		_I2C1_ErrorEventHandler
 12280 ;; This function uses a non-reentrant model
 12281 ;;
 12282                           
 12283     0D76                     _I2C1_EVENT_RESET:	
 12284                           ;psect for function _I2C1_EVENT_RESET
 12285                           
 12286     0D76                     i1l2569:	
 12287                           ;incstack = 0
 12288                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12289                           
 12290                           
 12291                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12292     0D76  318D  2505  318D   	fcall	_I2C1_BusReset
 12293     0D79                     i1l2571:
 12294                           
 12295                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12296     0D79  0020               	movlb	0	; select bank0
 12297     0D7A  01D2               	clrf	_i2c1Status	;volatile
 12298     0D7B                     i1l2573:
 12299                           
 12300                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12301     0D7B  3000               	movlw	0
 12302     0D7C                     i1l267:
 12303     0D7C  0008               	return
 12304     0D7D                     __end_of_I2C1_EVENT_RESET:
 12305                           
 12306                           	psect	text63
 12307     0DA8                     __ptext63:	
 12308 ;; *************** function _I2C1_EVENT_STOP *****************
 12309 ;; Defined at:
 12310 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12311 ;; Parameters:    Size  Location     Type
 12312 ;;		None
 12313 ;; Auto vars:     Size  Location     Type
 12314 ;;		None
 12315 ;; Return value:  Size  Location     Type
 12316 ;;                  1    wreg      enum E9559
 12317 ;; Registers used:
 12318 ;;		wreg, status,2, status,0, pclath, cstack
 12319 ;; Tracked objects:
 12320 ;;		On entry : 0/0
 12321 ;;		On exit  : 0/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12324 ;;      Params:         0       0       0       0       0       0       0       0
 12325 ;;      Locals:         0       0       0       0       0       0       0       0
 12326 ;;      Temps:          0       0       0       0       0       0       0       0
 12327 ;;      Totals:         0       0       0       0       0       0       0       0
 12328 ;;Total ram usage:        0 bytes
 12329 ;; Hardware stack levels used: 1
 12330 ;; Hardware stack levels required when called: 2
 12331 ;; This function calls:
 12332 ;;		_I2C1_Close
 12333 ;;		_I2C1_StopSend
 12334 ;; This function is called by:
 12335 ;;		_I2C1_EVENT_TX
 12336 ;;		_I2C1_EVENT_NACK
 12337 ;;		_I2C1_EventHandler
 12338 ;;		_I2C1_ErrorEventHandler
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342     0DA8                     _I2C1_EVENT_STOP:	
 12343                           ;psect for function _I2C1_EVENT_STOP
 12344                           
 12345     0DA8                     i1l2547:	
 12346                           ;incstack = 0
 12347                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12348                           
 12349                           
 12350                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12351     0DA8  318C  24F0  318D   	fcall	_I2C1_StopSend
 12352                           
 12353                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12354     0DAB  318E  2637  318D   	fcall	_I2C1_Close
 12355     0DAE                     i1l2549:
 12356                           
 12357                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12358     0DAE  3000               	movlw	0
 12359     0DAF                     i1l264:
 12360     0DAF  0008               	return
 12361     0DB0                     __end_of_I2C1_EVENT_STOP:
 12362                           
 12363                           	psect	text64
 12364     0D4B                     __ptext64:	
 12365 ;; *************** function _I2C1_EVENT_ERROR *****************
 12366 ;; Defined at:
 12367 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;		None
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;  retEventStat    1    0[COMMON] enum E9559
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      enum E9559
 12374 ;; Registers used:
 12375 ;;		wreg, status,2, status,0, pclath, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12381 ;;      Params:         0       0       0       0       0       0       0       0
 12382 ;;      Locals:         1       0       0       0       0       0       0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0
 12384 ;;      Totals:         1       0       0       0       0       0       0       0
 12385 ;;Total ram usage:        1 bytes
 12386 ;; Hardware stack levels used: 1
 12387 ;; Hardware stack levels required when called: 2
 12388 ;; This function calls:
 12389 ;;		_I2C1_EVENT_RESET
 12390 ;; This function is called by:
 12391 ;;		_I2C1_EventHandler
 12392 ;;		_I2C1_ErrorEventHandler
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396     0D4B                     _I2C1_EVENT_ERROR:	
 12397                           ;psect for function _I2C1_EVENT_ERROR
 12398                           
 12399     0D4B                     i1l2785:	
 12400                           ;incstack = 0
 12401                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12402                           
 12403     0D4B                     i1l2787:
 12404                           
 12405                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12406     0D4B  318D  2576  318D   	fcall	_I2C1_EVENT_RESET
 12407     0D4E  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12408     0D4F                     i1l2789:
 12409                           
 12410                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12411     0D4F  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12412     0D50                     i1l261:
 12413     0D50  0008               	return
 12414     0D51                     __end_of_I2C1_EVENT_ERROR:
 12415                           
 12416                           	psect	text65
 12417     0D45                     __ptext65:	
 12418 ;; *************** function _I2C1_EVENT_NACK *****************
 12419 ;; Defined at:
 12420 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;		None
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;  retEventStat    1    0[COMMON] enum E9559
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  1    wreg      enum E9559
 12427 ;; Registers used:
 12428 ;;		wreg, status,2, status,0, pclath, cstack
 12429 ;; Tracked objects:
 12430 ;;		On entry : 0/0
 12431 ;;		On exit  : 0/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12434 ;;      Params:         0       0       0       0       0       0       0       0
 12435 ;;      Locals:         1       0       0       0       0       0       0       0
 12436 ;;      Temps:          0       0       0       0       0       0       0       0
 12437 ;;      Totals:         1       0       0       0       0       0       0       0
 12438 ;;Total ram usage:        1 bytes
 12439 ;; Hardware stack levels used: 1
 12440 ;; Hardware stack levels required when called: 3
 12441 ;; This function calls:
 12442 ;;		_I2C1_EVENT_STOP
 12443 ;; This function is called by:
 12444 ;;		_I2C1_EventHandler
 12445 ;;		_I2C1_ErrorEventHandler
 12446 ;; This function uses a non-reentrant model
 12447 ;;
 12448                           
 12449     0D45                     _I2C1_EVENT_NACK:	
 12450                           ;psect for function _I2C1_EVENT_NACK
 12451                           
 12452     0D45                     i1l2777:	
 12453                           ;incstack = 0
 12454                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12455                           
 12456     0D45                     i1l2779:
 12457                           
 12458                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12459     0D45  318D  25A8  318D   	fcall	_I2C1_EVENT_STOP
 12460     0D48  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12461     0D49                     i1l2781:
 12462                           
 12463                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12464     0D49  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12465     0D4A                     i1l258:
 12466     0D4A  0008               	return
 12467     0D4B                     __end_of_I2C1_EVENT_NACK:
 12468                           
 12469                           	psect	text66
 12470     0663                     __ptext66:	
 12471 ;; *************** function _I2C1_EVENT_RX *****************
 12472 ;; Defined at:
 12473 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;		None
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;  retEventStat    1    1[COMMON] enum E9559
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      enum E9559
 12480 ;; Registers used:
 12481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12487 ;;      Params:         0       0       0       0       0       0       0       0
 12488 ;;      Locals:         1       0       0       0       0       0       0       0
 12489 ;;      Temps:          1       0       0       0       0       0       0       0
 12490 ;;      Totals:         2       0       0       0       0       0       0       0
 12491 ;;Total ram usage:        2 bytes
 12492 ;; Hardware stack levels used: 1
 12493 ;; Hardware stack levels required when called: 1
 12494 ;; This function calls:
 12495 ;;		_I2C1_AckSend
 12496 ;;		_I2C1_DataReceive
 12497 ;;		_I2C1_IsRxBufFull
 12498 ;;		_I2C1_NackSend
 12499 ;;		_I2C1_ReceiveEnable
 12500 ;;		_I2C1_RestartDisable
 12501 ;; This function is called by:
 12502 ;;		_I2C1_EventHandler
 12503 ;;		_I2C1_ErrorEventHandler
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507     0663                     _I2C1_EVENT_RX:	
 12508                           ;psect for function _I2C1_EVENT_RX
 12509                           
 12510     0663                     i1l2751:	
 12511                           ;incstack = 0
 12512                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12513                           
 12514                           
 12515                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12516     0663  3004               	movlw	4
 12517     0664  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12518     0665                     i1l2753:
 12519                           
 12520                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12521     0665  318D  2511  3186   	fcall	_I2C1_IsRxBufFull
 12522     0668  3A00               	xorlw	0
 12523     0669  1903               	skipnz
 12524     066A  2E6C               	goto	u96_21
 12525     066B  2E6D               	goto	u96_20
 12526     066C                     u96_21:
 12527     066C  2E97               	goto	i1l2771
 12528     066D                     u96_20:
 12529     066D                     i1l2755:
 12530                           
 12531                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12532     066D  0020               	movlb	0	; select bank0
 12533     066E  0859               	movf	_i2c1Status+7,w	;volatile
 12534     066F  045A               	iorwf	_i2c1Status+8,w	;volatile
 12535     0670  1903               	btfsc	3,2
 12536     0671  2E73               	goto	u97_21
 12537     0672  2E74               	goto	u97_20
 12538     0673                     u97_21:
 12539     0673  2E84               	goto	i1l2763
 12540     0674                     u97_20:
 12541     0674                     i1l2757:
 12542                           
 12543                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12544     0674  0858               	movf	low ((_i2c1Status| 0+6)),w	;volatile
 12545     0675  0086               	movwf	6
 12546     0676  0187               	clrf	7
 12547     0677  318C  24F3  3186   	fcall	_I2C1_DataReceive
 12548     067A  0081               	movwf	1
 12549     067B                     i1l2759:
 12550     067B  3001               	movlw	1
 12551     067C  00F0               	movwf	??_I2C1_EVENT_RX
 12552     067D  0870               	movf	??_I2C1_EVENT_RX,w
 12553     067E  0020               	movlb	0	; select bank0
 12554     067F  07D8               	addwf	low ((_i2c1Status| 0+6)),f	;volatile
 12555     0680                     i1l2761:
 12556                           
 12557                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12558     0680  3001               	movlw	1
 12559     0681  02D9               	subwf	_i2c1Status+7,f	;volatile
 12560     0682  3000               	movlw	0
 12561     0683  3BDA               	subwfb	_i2c1Status+8,f	;volatile
 12562     0684                     i1l2763:
 12563                           
 12564                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12565     0684  0859               	movf	_i2c1Status+7,w	;volatile
 12566     0685  045A               	iorwf	_i2c1Status+8,w	;volatile
 12567     0686  1903               	btfsc	3,2
 12568     0687  2E89               	goto	u98_21
 12569     0688  2E8A               	goto	u98_20
 12570     0689                     u98_21:
 12571     0689  2E8E               	goto	i1l2767
 12572     068A                     u98_20:
 12573     068A                     i1l2765:
 12574                           
 12575                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12576     068A  318D  250D  3186   	fcall	_I2C1_AckSend
 12577                           
 12578                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12579     068D  2E9A               	goto	i1l2773
 12580     068E                     i1l2767:
 12581                           
 12582                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12583     068E  318C  24F9  3186   	fcall	_I2C1_RestartDisable
 12584                           
 12585                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12586     0691  318D  2515  3186   	fcall	_I2C1_NackSend
 12587     0694                     i1l2769:
 12588                           
 12589                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12590     0694  3007               	movlw	7
 12591     0695  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12592     0696  2E9A               	goto	i1l2773
 12593     0697                     i1l2771:
 12594                           
 12595                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12596     0697  318C  24F6  3186   	fcall	_I2C1_ReceiveEnable
 12597     069A                     i1l2773:
 12598                           
 12599                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12600     069A  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12601     069B                     i1l255:
 12602     069B  0008               	return
 12603     069C                     __end_of_I2C1_EVENT_RX:
 12604                           
 12605                           	psect	text67
 12606     0D6F                     __ptext67:	
 12607 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12608 ;; Defined at:
 12609 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;		None
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      enum E9559
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0, pclath, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12623 ;;      Params:         0       0       0       0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0
 12626 ;;      Totals:         0       0       0       0       0       0       0       0
 12627 ;;Total ram usage:        0 bytes
 12628 ;; Hardware stack levels used: 1
 12629 ;; Hardware stack levels required when called: 1
 12630 ;; This function calls:
 12631 ;;		_I2C1_DataTransmit
 12632 ;; This function is called by:
 12633 ;;		_I2C1_EventHandler
 12634 ;;		_I2C1_ErrorEventHandler
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638     0D6F                     _I2C1_EVENT_SEND_WR_ADDR:	
 12639                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12640                           
 12641     0D6F                     i1l2721:	
 12642                           ;incstack = 0
 12643                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12644                           
 12645                           
 12646                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12647     0D6F  0020               	movlb	0	; select bank0
 12648     0D70  3553               	lslf	_i2c1Status+1,w	;volatile
 12649     0D71  318D  2531  318D   	fcall	_I2C1_DataTransmit
 12650     0D74                     i1l2723:
 12651                           
 12652                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12653     0D74  3003               	movlw	3
 12654     0D75                     i1l240:
 12655     0D75  0008               	return
 12656     0D76                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12657                           
 12658                           	psect	text68
 12659     0DA0                     __ptext68:	
 12660 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12661 ;; Defined at:
 12662 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12663 ;; Parameters:    Size  Location     Type
 12664 ;;		None
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;		None
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  1    wreg      enum E9559
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0, pclath, cstack
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12676 ;;      Params:         0       0       0       0       0       0       0       0
 12677 ;;      Locals:         0       0       0       0       0       0       0       0
 12678 ;;      Temps:          0       0       0       0       0       0       0       0
 12679 ;;      Totals:         0       0       0       0       0       0       0       0
 12680 ;;Total ram usage:        0 bytes
 12681 ;; Hardware stack levels used: 1
 12682 ;; Hardware stack levels required when called: 1
 12683 ;; This function calls:
 12684 ;;		_I2C1_DataTransmit
 12685 ;; This function is called by:
 12686 ;;		_I2C1_EventHandler
 12687 ;;		_I2C1_ErrorEventHandler
 12688 ;; This function uses a non-reentrant model
 12689 ;;
 12690                           
 12691     0DA0                     _I2C1_EVENT_SEND_RD_ADDR:	
 12692                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12693                           
 12694     0DA0                     i1l2715:	
 12695                           ;incstack = 0
 12696                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12697                           
 12698                           
 12699                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12700     0DA0  1403               	setc
 12701     0DA1  0020               	movlb	0	; select bank0
 12702     0DA2  0D53               	rlf	_i2c1Status+1,w	;volatile
 12703     0DA3  318D  2531  318D   	fcall	_I2C1_DataTransmit
 12704     0DA6                     i1l2717:
 12705                           
 12706                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 12707     0DA6  3004               	movlw	4
 12708     0DA7                     i1l237:
 12709     0DA7  0008               	return
 12710     0DA8                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 12711                           
 12712                           	psect	text69
 12713     0D19                     __ptext69:	
 12714 ;; *************** function _I2C1_EVENT_IDLE *****************
 12715 ;; Defined at:
 12716 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;		None
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      enum E9559
 12723 ;; Registers used:
 12724 ;;		wreg, status,2
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12730 ;;      Params:         0       0       0       0       0       0       0       0
 12731 ;;      Locals:         0       0       0       0       0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0
 12733 ;;      Totals:         0       0       0       0       0       0       0       0
 12734 ;;Total ram usage:        0 bytes
 12735 ;; Hardware stack levels used: 1
 12736 ;; This function calls:
 12737 ;;		Nothing
 12738 ;; This function is called by:
 12739 ;;		_I2C1_EventHandler
 12740 ;;		_I2C1_ErrorEventHandler
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744     0D19                     _I2C1_EVENT_IDLE:	
 12745                           ;psect for function _I2C1_EVENT_IDLE
 12746                           
 12747     0D19                     i1l2709:	
 12748                           ;incstack = 0
 12749                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 12750                           
 12751                           
 12752                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 12753     0D19  0020               	movlb	0	; select bank0
 12754     0D1A  01D2               	clrf	_i2c1Status	;volatile
 12755     0D1B                     i1l2711:
 12756                           
 12757                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 12758     0D1B  3008               	movlw	8
 12759     0D1C                     i1l234:
 12760     0D1C  0008               	return
 12761     0D1D                     __end_of_I2C1_EVENT_IDLE:
 12762                           
 12763                           	psect	text70
 12764     0FD4                     __ptext70:	
 12765 ;; *************** function _I2C1_EVENT_TX *****************
 12766 ;; Defined at:
 12767 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;		None
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;  retEventStat    1    1[COMMON] enum E9559
 12772 ;; Return value:  Size  Location     Type
 12773 ;;                  1    wreg      enum E9559
 12774 ;; Registers used:
 12775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12781 ;;      Params:         0       0       0       0       0       0       0       0
 12782 ;;      Locals:         1       0       0       0       0       0       0       0
 12783 ;;      Temps:          0       0       0       0       0       0       0       0
 12784 ;;      Totals:         1       0       0       0       0       0       0       0
 12785 ;;Total ram usage:        1 bytes
 12786 ;; Hardware stack levels used: 1
 12787 ;; Hardware stack levels required when called: 3
 12788 ;; This function calls:
 12789 ;;		_I2C1_DataTransmit
 12790 ;;		_I2C1_EVENT_STOP
 12791 ;;		_I2C1_RestartEnable
 12792 ;; This function is called by:
 12793 ;;		_I2C1_EventHandler
 12794 ;;		_I2C1_ErrorEventHandler
 12795 ;; This function uses a non-reentrant model
 12796 ;;
 12797                           
 12798     0FD4                     _I2C1_EVENT_TX:	
 12799                           ;psect for function _I2C1_EVENT_TX
 12800                           
 12801     0FD4                     i1l2727:	
 12802                           ;incstack = 0
 12803                           ; Regs used in _I2C1_EVENT_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12804                           
 12805     0FD4                     i1l2729:
 12806                           
 12807                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 12808     0FD4  0020               	movlb	0	; select bank0
 12809     0FD5  0856               	movf	_i2c1Status+4,w	;volatile
 12810     0FD6  0457               	iorwf	_i2c1Status+5,w	;volatile
 12811     0FD7  1903               	btfsc	3,2
 12812     0FD8  2FDA               	goto	u94_21
 12813     0FD9  2FDB               	goto	u94_20
 12814     0FDA                     u94_21:
 12815     0FDA  2FEE               	goto	i1l2737
 12816     0FDB                     u94_20:
 12817     0FDB                     i1l2731:
 12818                           
 12819                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 12820     0FDB  3001               	movlw	1
 12821     0FDC  02D6               	subwf	_i2c1Status+4,f	;volatile
 12822     0FDD  3000               	movlw	0
 12823     0FDE  3BD7               	subwfb	_i2c1Status+5,f	;volatile
 12824     0FDF                     i1l2733:
 12825                           
 12826                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 12827     0FDF  3003               	movlw	3
 12828     0FE0  3E52               	addlw	(low (_i2c1Status| 0))& (0+255)
 12829     0FE1  0086               	movwf	6
 12830     0FE2  0187               	clrf	7
 12831     0FE3  3F40               	moviw [0]fsr1
 12832     0FE4  0084               	movwf	4
 12833     0FE5  0185               	clrf	5
 12834     0FE6  0A81               	incf	1,f
 12835     0FE7  0800               	movf	0,w
 12836     0FE8  318D  2531  318F   	fcall	_I2C1_DataTransmit
 12837     0FEB                     i1l2735:
 12838                           
 12839                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 12840     0FEB  3003               	movlw	3
 12841     0FEC  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12842                           
 12843                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 12844     0FED  2FFE               	goto	i1l2747
 12845     0FEE                     i1l2737:
 12846                           
 12847                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 12848     0FEE  085B               	movf	_i2c1Status+9,w	;volatile
 12849     0FEF  1903               	btfsc	3,2
 12850     0FF0  2FF2               	goto	u95_21
 12851     0FF1  2FF3               	goto	u95_20
 12852     0FF2                     u95_21:
 12853     0FF2  2FFA               	goto	i1l2745
 12854     0FF3                     u95_20:
 12855     0FF3                     i1l2739:
 12856                           
 12857                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 12858     0FF3  01DB               	clrf	_i2c1Status+9	;volatile
 12859     0FF4                     i1l2741:
 12860                           
 12861                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 12862     0FF4  318C  24FC  318F   	fcall	_I2C1_RestartEnable
 12863     0FF7                     i1l2743:
 12864                           
 12865                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 12866     0FF7  01F1               	clrf	I2C1_EVENT_TX@retEventState
 12867     0FF8  0AF1               	incf	I2C1_EVENT_TX@retEventState,f
 12868                           
 12869                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 12870     0FF9  2FFE               	goto	i1l2747
 12871     0FFA                     i1l2745:
 12872                           
 12873                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 12874     0FFA  318D  25A8  318F   	fcall	_I2C1_EVENT_STOP
 12875     0FFD  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12876     0FFE                     i1l2747:
 12877                           
 12878                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 12879     0FFE  0871               	movf	I2C1_EVENT_TX@retEventState,w
 12880     0FFF                     i1l247:
 12881     0FFF  0008               	return
 12882     1000                     __end_of_I2C1_EVENT_TX:
 12883                           
 12884                           	psect	text71
 12885     0CFC                     __ptext71:	
 12886 ;; *************** function _I2C1_RestartEnable *****************
 12887 ;; Defined at:
 12888 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;		None
 12891 ;; Auto vars:     Size  Location     Type
 12892 ;;		None
 12893 ;; Return value:  Size  Location     Type
 12894 ;;                  1    wreg      void 
 12895 ;; Registers used:
 12896 ;;		None
 12897 ;; Tracked objects:
 12898 ;;		On entry : 0/0
 12899 ;;		On exit  : 0/0
 12900 ;;		Unchanged: 0/0
 12901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12902 ;;      Params:         0       0       0       0       0       0       0       0
 12903 ;;      Locals:         0       0       0       0       0       0       0       0
 12904 ;;      Temps:          0       0       0       0       0       0       0       0
 12905 ;;      Totals:         0       0       0       0       0       0       0       0
 12906 ;;Total ram usage:        0 bytes
 12907 ;; Hardware stack levels used: 1
 12908 ;; This function calls:
 12909 ;;		Nothing
 12910 ;; This function is called by:
 12911 ;;		_I2C1_EVENT_TX
 12912 ;; This function uses a non-reentrant model
 12913 ;;
 12914                           
 12915     0CFC                     _I2C1_RestartEnable:	
 12916                           ;psect for function _I2C1_RestartEnable
 12917                           
 12918     0CFC                     i1l2545:	
 12919                           ;incstack = 0
 12920                           ; Regs used in _I2C1_RestartEnable: []
 12921                           
 12922                           
 12923                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 12924     0CFC  0024               	movlb	4	; select bank4
 12925     0CFD  1496               	bsf	22,1	;volatile
 12926     0CFE                     i1l282:
 12927     0CFE  0008               	return
 12928     0CFF                     __end_of_I2C1_RestartEnable:
 12929                           
 12930                           	psect	text72
 12931     0D31                     __ptext72:	
 12932 ;; *************** function _I2C1_DataTransmit *****************
 12933 ;; Defined at:
 12934 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12935 ;; Parameters:    Size  Location     Type
 12936 ;;  data            1    wreg     unsigned char 
 12937 ;; Auto vars:     Size  Location     Type
 12938 ;;  data            1    0[COMMON] unsigned char 
 12939 ;; Return value:  Size  Location     Type
 12940 ;;                  1    wreg      void 
 12941 ;; Registers used:
 12942 ;;		wreg
 12943 ;; Tracked objects:
 12944 ;;		On entry : 0/0
 12945 ;;		On exit  : 0/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12948 ;;      Params:         0       0       0       0       0       0       0       0
 12949 ;;      Locals:         1       0       0       0       0       0       0       0
 12950 ;;      Temps:          0       0       0       0       0       0       0       0
 12951 ;;      Totals:         1       0       0       0       0       0       0       0
 12952 ;;Total ram usage:        1 bytes
 12953 ;; Hardware stack levels used: 1
 12954 ;; This function calls:
 12955 ;;		Nothing
 12956 ;; This function is called by:
 12957 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12958 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12959 ;;		_I2C1_EVENT_TX
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963     0D31                     _I2C1_DataTransmit:	
 12964                           ;psect for function _I2C1_DataTransmit
 12965                           
 12966                           
 12967                           ;incstack = 0
 12968                           ; Regs used in _I2C1_DataTransmit: [wreg]
 12969                           ;I2C1_DataTransmit@data stored from wreg
 12970     0D31  00F0               	movwf	I2C1_DataTransmit@data
 12971     0D32                     i1l2543:
 12972                           
 12973                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 12974     0D32  0870               	movf	I2C1_DataTransmit@data,w
 12975     0D33  0024               	movlb	4	; select bank4
 12976     0D34  0091               	movwf	17	;volatile
 12977     0D35                     i1l273:
 12978     0D35  0008               	return
 12979     0D36                     __end_of_I2C1_DataTransmit:
 12980                           
 12981                           	psect	text73
 12982     0CF9                     __ptext73:	
 12983 ;; *************** function _I2C1_RestartDisable *****************
 12984 ;; Defined at:
 12985 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;		None
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;		None
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      void 
 12992 ;; Registers used:
 12993 ;;		None
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12999 ;;      Params:         0       0       0       0       0       0       0       0
 13000 ;;      Locals:         0       0       0       0       0       0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0
 13002 ;;      Totals:         0       0       0       0       0       0       0       0
 13003 ;;Total ram usage:        0 bytes
 13004 ;; Hardware stack levels used: 1
 13005 ;; This function calls:
 13006 ;;		Nothing
 13007 ;; This function is called by:
 13008 ;;		_I2C1_EVENT_RX
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012     0CF9                     _I2C1_RestartDisable:	
 13013                           ;psect for function _I2C1_RestartDisable
 13014                           
 13015     0CF9                     i1l2563:	
 13016                           ;incstack = 0
 13017                           ; Regs used in _I2C1_RestartDisable: []
 13018                           
 13019                           
 13020                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 13021     0CF9  0024               	movlb	4	; select bank4
 13022     0CFA  1096               	bcf	22,1	;volatile
 13023     0CFB                     i1l285:
 13024     0CFB  0008               	return
 13025     0CFC                     __end_of_I2C1_RestartDisable:
 13026                           
 13027                           	psect	text74
 13028     0CF6                     __ptext74:	
 13029 ;; *************** function _I2C1_ReceiveEnable *****************
 13030 ;; Defined at:
 13031 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;		None
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;		None
 13036 ;; Return value:  Size  Location     Type
 13037 ;;                  1    wreg      void 
 13038 ;; Registers used:
 13039 ;;		None
 13040 ;; Tracked objects:
 13041 ;;		On entry : 0/0
 13042 ;;		On exit  : 0/0
 13043 ;;		Unchanged: 0/0
 13044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13045 ;;      Params:         0       0       0       0       0       0       0       0
 13046 ;;      Locals:         0       0       0       0       0       0       0       0
 13047 ;;      Temps:          0       0       0       0       0       0       0       0
 13048 ;;      Totals:         0       0       0       0       0       0       0       0
 13049 ;;Total ram usage:        0 bytes
 13050 ;; Hardware stack levels used: 1
 13051 ;; This function calls:
 13052 ;;		Nothing
 13053 ;; This function is called by:
 13054 ;;		_I2C1_EVENT_RX
 13055 ;; This function uses a non-reentrant model
 13056 ;;
 13057                           
 13058     0CF6                     _I2C1_ReceiveEnable:	
 13059                           ;psect for function _I2C1_ReceiveEnable
 13060                           
 13061     0CF6                     i1l2567:	
 13062                           ;incstack = 0
 13063                           ; Regs used in _I2C1_ReceiveEnable: []
 13064                           
 13065                           
 13066                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13067     0CF6  0024               	movlb	4	; select bank4
 13068     0CF7  1596               	bsf	22,3	;volatile
 13069     0CF8                     i1l279:
 13070     0CF8  0008               	return
 13071     0CF9                     __end_of_I2C1_ReceiveEnable:
 13072                           
 13073                           	psect	text75
 13074     0D15                     __ptext75:	
 13075 ;; *************** function _I2C1_NackSend *****************
 13076 ;; Defined at:
 13077 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;		None
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;		None
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  1    wreg      void 
 13084 ;; Registers used:
 13085 ;;		None
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13091 ;;      Params:         0       0       0       0       0       0       0       0
 13092 ;;      Locals:         0       0       0       0       0       0       0       0
 13093 ;;      Temps:          0       0       0       0       0       0       0       0
 13094 ;;      Totals:         0       0       0       0       0       0       0       0
 13095 ;;Total ram usage:        0 bytes
 13096 ;; Hardware stack levels used: 1
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_I2C1_EVENT_RX
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104     0D15                     _I2C1_NackSend:	
 13105                           ;psect for function _I2C1_NackSend
 13106                           
 13107     0D15                     i1l2565:	
 13108                           ;incstack = 0
 13109                           ; Regs used in _I2C1_NackSend: []
 13110                           
 13111                           
 13112                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13113     0D15  0024               	movlb	4	; select bank4
 13114     0D16  1696               	bsf	22,5	;volatile
 13115                           
 13116                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13117     0D17  1616               	bsf	22,4	;volatile
 13118     0D18                     i1l297:
 13119     0D18  0008               	return
 13120     0D19                     __end_of_I2C1_NackSend:
 13121                           
 13122                           	psect	text76
 13123     0D11                     __ptext76:	
 13124 ;; *************** function _I2C1_IsRxBufFull *****************
 13125 ;; Defined at:
 13126 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;		None
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;		None
 13131 ;; Return value:  Size  Location     Type
 13132 ;;                  1    wreg      _Bool 
 13133 ;; Registers used:
 13134 ;;		wreg, status,2, status,0
 13135 ;; Tracked objects:
 13136 ;;		On entry : 0/0
 13137 ;;		On exit  : 0/0
 13138 ;;		Unchanged: 0/0
 13139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13140 ;;      Params:         0       0       0       0       0       0       0       0
 13141 ;;      Locals:         0       0       0       0       0       0       0       0
 13142 ;;      Temps:          0       0       0       0       0       0       0       0
 13143 ;;      Totals:         0       0       0       0       0       0       0       0
 13144 ;;Total ram usage:        0 bytes
 13145 ;; Hardware stack levels used: 1
 13146 ;; This function calls:
 13147 ;;		Nothing
 13148 ;; This function is called by:
 13149 ;;		_I2C1_EVENT_RX
 13150 ;; This function uses a non-reentrant model
 13151 ;;
 13152                           
 13153     0D11                     _I2C1_IsRxBufFull:	
 13154                           ;psect for function _I2C1_IsRxBufFull
 13155                           
 13156     0D11                     i1l2553:	
 13157                           ;incstack = 0
 13158                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13159                           
 13160                           
 13161                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13162     0D11  0024               	movlb	4	; select bank4
 13163     0D12  0814               	movf	20,w	;volatile
 13164     0D13  3901               	andlw	1
 13165     0D14                     i1l309:
 13166     0D14  0008               	return
 13167     0D15                     __end_of_I2C1_IsRxBufFull:
 13168                           
 13169                           	psect	text77
 13170     0CF3                     __ptext77:	
 13171 ;; *************** function _I2C1_DataReceive *****************
 13172 ;; Defined at:
 13173 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      unsigned char 
 13180 ;; Registers used:
 13181 ;;		wreg
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13187 ;;      Params:         0       0       0       0       0       0       0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0
 13190 ;;      Totals:         0       0       0       0       0       0       0       0
 13191 ;;Total ram usage:        0 bytes
 13192 ;; Hardware stack levels used: 1
 13193 ;; This function calls:
 13194 ;;		Nothing
 13195 ;; This function is called by:
 13196 ;;		_I2C1_EVENT_RX
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200     0CF3                     _I2C1_DataReceive:	
 13201                           ;psect for function _I2C1_DataReceive
 13202                           
 13203     0CF3                     i1l2557:	
 13204                           ;incstack = 0
 13205                           ; Regs used in _I2C1_DataReceive: [wreg]
 13206                           
 13207                           
 13208                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13209     0CF3  0024               	movlb	4	; select bank4
 13210     0CF4  0811               	movf	17,w	;volatile
 13211     0CF5                     i1l270:
 13212     0CF5  0008               	return
 13213     0CF6                     __end_of_I2C1_DataReceive:
 13214                           
 13215                           	psect	text78
 13216     0D0D                     __ptext78:	
 13217 ;; *************** function _I2C1_AckSend *****************
 13218 ;; Defined at:
 13219 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;		None
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;		None
 13224 ;; Return value:  Size  Location     Type
 13225 ;;                  1    wreg      void 
 13226 ;; Registers used:
 13227 ;;		None
 13228 ;; Tracked objects:
 13229 ;;		On entry : 0/0
 13230 ;;		On exit  : 0/0
 13231 ;;		Unchanged: 0/0
 13232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13233 ;;      Params:         0       0       0       0       0       0       0       0
 13234 ;;      Locals:         0       0       0       0       0       0       0       0
 13235 ;;      Temps:          0       0       0       0       0       0       0       0
 13236 ;;      Totals:         0       0       0       0       0       0       0       0
 13237 ;;Total ram usage:        0 bytes
 13238 ;; Hardware stack levels used: 1
 13239 ;; This function calls:
 13240 ;;		Nothing
 13241 ;; This function is called by:
 13242 ;;		_I2C1_EVENT_RX
 13243 ;; This function uses a non-reentrant model
 13244 ;;
 13245                           
 13246     0D0D                     _I2C1_AckSend:	
 13247                           ;psect for function _I2C1_AckSend
 13248                           
 13249     0D0D                     i1l2561:	
 13250                           ;incstack = 0
 13251                           ; Regs used in _I2C1_AckSend: []
 13252                           
 13253                           
 13254                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13255     0D0D  0024               	movlb	4	; select bank4
 13256     0D0E  1296               	bcf	22,5	;volatile
 13257                           
 13258                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13259     0D0F  1616               	bsf	22,4	;volatile
 13260     0D10                     i1l294:
 13261     0D10  0008               	return
 13262     0D11                     __end_of_I2C1_AckSend:
 13263                           
 13264                           	psect	text79
 13265     0CF0                     __ptext79:	
 13266 ;; *************** function _I2C1_StopSend *****************
 13267 ;; Defined at:
 13268 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;		None
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;		None
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  1    wreg      void 
 13275 ;; Registers used:
 13276 ;;		None
 13277 ;; Tracked objects:
 13278 ;;		On entry : 0/0
 13279 ;;		On exit  : 0/0
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13282 ;;      Params:         0       0       0       0       0       0       0       0
 13283 ;;      Locals:         0       0       0       0       0       0       0       0
 13284 ;;      Temps:          0       0       0       0       0       0       0       0
 13285 ;;      Totals:         0       0       0       0       0       0       0       0
 13286 ;;Total ram usage:        0 bytes
 13287 ;; Hardware stack levels used: 1
 13288 ;; This function calls:
 13289 ;;		Nothing
 13290 ;; This function is called by:
 13291 ;;		_I2C1_EVENT_STOP
 13292 ;; This function uses a non-reentrant model
 13293 ;;
 13294                           
 13295     0CF0                     _I2C1_StopSend:	
 13296                           ;psect for function _I2C1_StopSend
 13297                           
 13298     0CF0                     i1l2493:	
 13299                           ;incstack = 0
 13300                           ; Regs used in _I2C1_StopSend: []
 13301                           
 13302                           
 13303                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13304     0CF0  0024               	movlb	4	; select bank4
 13305     0CF1  1516               	bsf	22,2	;volatile
 13306     0CF2                     i1l291:
 13307     0CF2  0008               	return
 13308     0CF3                     __end_of_I2C1_StopSend:
 13309                           
 13310                           	psect	text80
 13311     0E37                     __ptext80:	
 13312 ;; *************** function _I2C1_Close *****************
 13313 ;; Defined at:
 13314 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;		None
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  1    wreg      void 
 13321 ;; Registers used:
 13322 ;;		status,2, status,0, pclath, cstack
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13328 ;;      Params:         0       0       0       0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0       0
 13330 ;;      Temps:          0       0       0       0       0       0       0       0
 13331 ;;      Totals:         0       0       0       0       0       0       0       0
 13332 ;;Total ram usage:        0 bytes
 13333 ;; Hardware stack levels used: 1
 13334 ;; Hardware stack levels required when called: 1
 13335 ;; This function calls:
 13336 ;;		_I2C1_ErrorInterruptClear
 13337 ;;		_I2C1_InterruptClear
 13338 ;;		_I2C1_StatusFlagsClear
 13339 ;; This function is called by:
 13340 ;;		_I2C1_EVENT_STOP
 13341 ;; This function uses a non-reentrant model
 13342 ;;
 13343                           
 13344     0E37                     _I2C1_Close:	
 13345                           ;psect for function _I2C1_Close
 13346                           
 13347     0E37                     i1l2483:	
 13348                           ;incstack = 0
 13349                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13350                           
 13351                           
 13352                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13353     0E37  0020               	movlb	0	; select bank0
 13354     0E38  01D2               	clrf	_i2c1Status	;volatile
 13355     0E39                     i1l2485:
 13356                           
 13357                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13358     0E39  3000               	movlw	0
 13359     0E3A  00D4               	movwf	_i2c1Status+2	;volatile
 13360     0E3B  30FF               	movlw	255
 13361     0E3C  00D3               	movwf	_i2c1Status+1	;volatile
 13362                           
 13363                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13364     0E3D  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
 13365                           
 13366                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13367     0E3E  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 13368                           
 13369                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13370     0E3F  01DD               	clrf	_i2c1Status+11	;volatile
 13371     0E40                     i1l2487:
 13372                           
 13373                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13374     0E40  318C  24ED  318E   	fcall	_I2C1_InterruptClear
 13375     0E43                     i1l2489:
 13376                           
 13377                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13378     0E43  318C  24EA  318E   	fcall	_I2C1_ErrorInterruptClear
 13379     0E46                     i1l2491:
 13380                           
 13381                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13382     0E46  318D  2509  318E   	fcall	_I2C1_StatusFlagsClear
 13383     0E49                     i1l219:
 13384     0E49  0008               	return
 13385     0E4A                     __end_of_I2C1_Close:
 13386                           
 13387                           	psect	text81
 13388     0D09                     __ptext81:	
 13389 ;; *************** function _I2C1_StatusFlagsClear *****************
 13390 ;; Defined at:
 13391 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;		None
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;		None
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  1    wreg      void 
 13398 ;; Registers used:
 13399 ;;		None
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13405 ;;      Params:         0       0       0       0       0       0       0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0
 13407 ;;      Temps:          0       0       0       0       0       0       0       0
 13408 ;;      Totals:         0       0       0       0       0       0       0       0
 13409 ;;Total ram usage:        0 bytes
 13410 ;; Hardware stack levels used: 1
 13411 ;; This function calls:
 13412 ;;		Nothing
 13413 ;; This function is called by:
 13414 ;;		_I2C1_Close
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418     0D09                     _I2C1_StatusFlagsClear:	
 13419                           ;psect for function _I2C1_StatusFlagsClear
 13420                           
 13421     0D09                     i1l2479:	
 13422                           ;incstack = 0
 13423                           ; Regs used in _I2C1_StatusFlagsClear: []
 13424                           
 13425                           
 13426                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13427     0D09  0024               	movlb	4	; select bank4
 13428     0D0A  1395               	bcf	21,7	;volatile
 13429                           
 13430                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13431     0D0B  1315               	bcf	21,6	;volatile
 13432     0D0C                     i1l324:
 13433     0D0C  0008               	return
 13434     0D0D                     __end_of_I2C1_StatusFlagsClear:
 13435                           
 13436                           	psect	text82
 13437     0CED                     __ptext82:	
 13438 ;; *************** function _I2C1_InterruptClear *****************
 13439 ;; Defined at:
 13440 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13441 ;; Parameters:    Size  Location     Type
 13442 ;;		None
 13443 ;; Auto vars:     Size  Location     Type
 13444 ;;		None
 13445 ;; Return value:  Size  Location     Type
 13446 ;;                  1    wreg      void 
 13447 ;; Registers used:
 13448 ;;		None
 13449 ;; Tracked objects:
 13450 ;;		On entry : 0/0
 13451 ;;		On exit  : 0/0
 13452 ;;		Unchanged: 0/0
 13453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13454 ;;      Params:         0       0       0       0       0       0       0       0
 13455 ;;      Locals:         0       0       0       0       0       0       0       0
 13456 ;;      Temps:          0       0       0       0       0       0       0       0
 13457 ;;      Totals:         0       0       0       0       0       0       0       0
 13458 ;;Total ram usage:        0 bytes
 13459 ;; Hardware stack levels used: 1
 13460 ;; This function calls:
 13461 ;;		Nothing
 13462 ;; This function is called by:
 13463 ;;		_I2C1_Close
 13464 ;;		_I2C1_EventHandler
 13465 ;; This function uses a non-reentrant model
 13466 ;;
 13467                           
 13468     0CED                     _I2C1_InterruptClear:	
 13469                           ;psect for function _I2C1_InterruptClear
 13470                           
 13471     0CED                     i1l2475:	
 13472                           ;incstack = 0
 13473                           ; Regs used in _I2C1_InterruptClear: []
 13474                           
 13475                           
 13476                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13477     0CED  0020               	movlb	0	; select bank0
 13478     0CEE  1190               	bcf	16,3	;volatile
 13479     0CEF                     i1l318:
 13480     0CEF  0008               	return
 13481     0CF0                     __end_of_I2C1_InterruptClear:
 13482                           
 13483                           	psect	text83
 13484     0CEA                     __ptext83:	
 13485 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13486 ;; Defined at:
 13487 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		None
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13501 ;;      Params:         0       0       0       0       0       0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_I2C1_Close
 13511 ;;		_I2C1_ErrorEventHandler
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515     0CEA                     _I2C1_ErrorInterruptClear:	
 13516                           ;psect for function _I2C1_ErrorInterruptClear
 13517                           
 13518     0CEA                     i1l2477:	
 13519                           ;incstack = 0
 13520                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13521                           
 13522                           
 13523                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13524     0CEA  0020               	movlb	0	; select bank0
 13525     0CEB  1191               	bcf	17,3	;volatile
 13526     0CEC                     i1l321:
 13527     0CEC  0008               	return
 13528     0CED                     __end_of_I2C1_ErrorInterruptClear:
 13529                           
 13530                           	psect	text84
 13531     0D05                     __ptext84:	
 13532 ;; *************** function _I2C1_BusReset *****************
 13533 ;; Defined at:
 13534 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;		None
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;		None
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		None
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13548 ;;      Params:         0       0       0       0       0       0       0       0
 13549 ;;      Locals:         0       0       0       0       0       0       0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0
 13551 ;;      Totals:         0       0       0       0       0       0       0       0
 13552 ;;Total ram usage:        0 bytes
 13553 ;; Hardware stack levels used: 1
 13554 ;; This function calls:
 13555 ;;		Nothing
 13556 ;; This function is called by:
 13557 ;;		_I2C1_EVENT_RESET
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561     0D05                     _I2C1_BusReset:	
 13562                           ;psect for function _I2C1_BusReset
 13563                           
 13564     0D05                     i1l2495:	
 13565                           ;incstack = 0
 13566                           ; Regs used in _I2C1_BusReset: []
 13567                           
 13568                           
 13569                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13570     0D05  0024               	movlb	4	; select bank4
 13571     0D06  1295               	bcf	21,5	;volatile
 13572                           
 13573                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13574     0D07  1695               	bsf	21,5	;volatile
 13575     0D08                     i1l276:
 13576     0D08  0008               	return
 13577     0D09                     __end_of_I2C1_BusReset:
 13578                           
 13579                           	psect	text85
 13580     0CE9                     __ptext85:	
 13581 ;; *************** function _I2C1_DefaultCallback *****************
 13582 ;; Defined at:
 13583 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;		None
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;		None
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  1    wreg      void 
 13590 ;; Registers used:
 13591 ;;		None
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13597 ;;      Params:         0       0       0       0       0       0       0       0
 13598 ;;      Locals:         0       0       0       0       0       0       0       0
 13599 ;;      Temps:          0       0       0       0       0       0       0       0
 13600 ;;      Totals:         0       0       0       0       0       0       0       0
 13601 ;;Total ram usage:        0 bytes
 13602 ;; Hardware stack levels used: 1
 13603 ;; This function calls:
 13604 ;;		Nothing
 13605 ;; This function is called by:
 13606 ;;		_I2C1_Initialize
 13607 ;;		_I2C1_Deinitialize
 13608 ;;		_I2C1_ErrorEventHandler
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612     0CE9                     _I2C1_DefaultCallback:	
 13613                           ;psect for function _I2C1_DefaultCallback
 13614                           
 13615     0CE9                     i1l231:	
 13616                           ;incstack = 0
 13617                           ; Regs used in _I2C1_DefaultCallback: []
 13618                           
 13619     0CE9  0008               	return
 13620     0CEA                     __end_of_I2C1_DefaultCallback:
 13621                           
 13622                           	psect	text86
 13623     0E09                     __ptext86:	
 13624 ;; *************** function _ADC_ISR *****************
 13625 ;; Defined at:
 13626 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;		None
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;		None
 13631 ;; Return value:  Size  Location     Type
 13632 ;;                  1    wreg      void 
 13633 ;; Registers used:
 13634 ;;		wreg, status,2, status,0, pclath, cstack
 13635 ;; Tracked objects:
 13636 ;;		On entry : 0/0
 13637 ;;		On exit  : 0/0
 13638 ;;		Unchanged: 0/0
 13639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13640 ;;      Params:         0       0       0       0       0       0       0       0
 13641 ;;      Locals:         0       0       0       0       0       0       0       0
 13642 ;;      Temps:          0       0       0       0       0       0       0       0
 13643 ;;      Totals:         0       0       0       0       0       0       0       0
 13644 ;;Total ram usage:        0 bytes
 13645 ;; Hardware stack levels used: 1
 13646 ;; Hardware stack levels required when called: 1
 13647 ;; This function calls:
 13648 ;;		NULL
 13649 ;;		_ADC_DefaultInterruptHandler
 13650 ;; This function is called by:
 13651 ;;		_INTERRUPT_InterruptManager
 13652 ;; This function uses a non-reentrant model
 13653 ;;
 13654                           
 13655     0E09                     _ADC_ISR:	
 13656                           ;psect for function _ADC_ISR
 13657                           
 13658     0E09                     i1l3157:	
 13659                           ;incstack = 0
 13660                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 13661                           
 13662                           
 13663                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 13664     0E09  0020               	movlb	0	; select bank0
 13665     0E0A  1310               	bcf	16,6	;volatile
 13666     0E0B                     i1l3159:
 13667                           
 13668                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 13669     0E0B  0021               	movlb	1	; select bank1
 13670     0E0C  084D               	movf	_ADC_InterruptHandler^(0+128),w
 13671     0E0D  044E               	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
 13672     0E0E  1903               	btfsc	3,2
 13673     0E0F  2E11               	goto	u128_21
 13674     0E10  2E12               	goto	u128_20
 13675     0E11                     u128_21:
 13676     0E11  2E17               	goto	i1l52
 13677     0E12                     u128_20:
 13678     0E12                     i1l3161:
 13679                           
 13680                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 13681     0E12  084E               	movf	(_ADC_InterruptHandler+1)^(0+128),w
 13682     0E13  008A               	movwf	10
 13683     0E14  084D               	movf	_ADC_InterruptHandler^(0+128),w
 13684     0E15  000A               	callw
 13685     0E16  318E               	pagesel	$
 13686     0E17                     i1l52:
 13687     0E17  0008               	return
 13688     0E18                     __end_of_ADC_ISR:
 13689                           
 13690                           	psect	text87
 13691     0CE8                     __ptext87:	
 13692 ;; *************** function _ADC_DefaultInterruptHandler *****************
 13693 ;; Defined at:
 13694 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;		None
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;		None
 13699 ;; Return value:  Size  Location     Type
 13700 ;;                  1    wreg      void 
 13701 ;; Registers used:
 13702 ;;		None
 13703 ;; Tracked objects:
 13704 ;;		On entry : 0/0
 13705 ;;		On exit  : 0/0
 13706 ;;		Unchanged: 0/0
 13707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13708 ;;      Params:         0       0       0       0       0       0       0       0
 13709 ;;      Locals:         0       0       0       0       0       0       0       0
 13710 ;;      Temps:          0       0       0       0       0       0       0       0
 13711 ;;      Totals:         0       0       0       0       0       0       0       0
 13712 ;;Total ram usage:        0 bytes
 13713 ;; Hardware stack levels used: 1
 13714 ;; This function calls:
 13715 ;;		Nothing
 13716 ;; This function is called by:
 13717 ;;		_ADC_Initialize
 13718 ;;		_ADC_ISR
 13719 ;; This function uses a non-reentrant model
 13720 ;;
 13721                           
 13722     0CE8                     _ADC_DefaultInterruptHandler:	
 13723                           ;psect for function _ADC_DefaultInterruptHandler
 13724                           
 13725     0CE8                     i1l58:	
 13726                           ;incstack = 0
 13727                           ; Regs used in _ADC_DefaultInterruptHandler: []
 13728                           
 13729     0CE8  0008               	return
 13730     0CE9                     __end_of_ADC_DefaultInterruptHandler:
 13731     007E                     btemp	set	126	;btemp
 13732     007E                     int$flags	set	126
 13733     007E                     wtemp0	set	126
 13734                           
 13735                           	psect	config
 13736                           
 13737                           ;Config register CONFIG1 @ 0x8007
 13738                           ;	Oscillator Selection Bits
 13739                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13740                           ;	Power-up Timer Enable
 13741                           ;	PWRTE = OFF, PWRT disabled
 13742                           ;	MCLR Pin Function Select
 13743                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13744                           ;	Flash Program Memory Code Protection
 13745                           ;	CP = OFF, Program memory code protection is disabled
 13746                           ;	Brown-out Reset Enable
 13747                           ;	BOREN = ON, Brown-out Reset enabled
 13748                           ;	Clock Out Enable
 13749                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13750     8007                     	org	32775
 13751     8007  3FFC               	dw	16380
 13752                           
 13753                           ;Config register CONFIG2 @ 0x8008
 13754                           ;	Flash Memory Self-Write Protection
 13755                           ;	WRT = OFF, Write protection off
 13756                           ;	Peripheral Pin Select one-way control
 13757                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13758                           ;	Zero Cross Detect Disable Bit
 13759                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13760                           ;	PLL Enable Bit
 13761                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13762                           ;	Stack Overflow/Underflow Reset Enable
 13763                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13764                           ;	Brown-out Reset Voltage Selection
 13765                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13766                           ;	Low-Power Brown Out Reset
 13767                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13768                           ;	In-Circuit Debugger Mode
 13769                           ;	DEBUG = 0x1, unprogrammed default
 13770                           ;	Low-Voltage Programming Enable
 13771                           ;	LVP = ON, Low-voltage programming enabled
 13772     8008                     	org	32776
 13773     8008  3EFF               	dw	16127
 13774                           
 13775                           ;Config register CONFIG3 @ 0x8009
 13776                           ;	WDT Period Select
 13777                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13778                           ;	Watchdog Timer Enable
 13779                           ;	WDTE = OFF, WDT disabled
 13780                           ;	WDT Window Select
 13781                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13782                           ;	WDT Input Clock Selector
 13783                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13784     8009                     	org	32777
 13785     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    86
    Data        31
    BSS         45
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      77
    BANK1            80      0      47
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9559[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Read@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    I2C1_Write@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    packLong@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getPos@data(BANK0[4]), parserDataBuffer(BANK1[5]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 5
		 -> parserDataBuffer(BANK1[5]), 

    S189$2$1	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), 

    S189$3$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S288$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 6
		 -> parserDataBuffer(BANK1[5]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> KAPS_setAbsPos@data(BANK0[4]), KAPS_StorePos@data(BANK0[5]), ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 


Critical Paths under _main in COMMON

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ProcessMsg->_SSPA_setMute
    _ADC2Celsius->___aldiv
    _getADCValue->_ADC_GetConversionResult
    _getADCValue->_ADC_SelectChannel
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getPos->_I2C1_Read
    _KAPS_getIndex->_I2C1_Read
    _I2C1_Read->_I2C1_IsBusy
    _I2C1_Write->_I2C1_IsBusy
    _SendMsg->_SendSync
    _SendSync->_EUSART_IsTxReady
    _SendSync->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_RX
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_RX
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _main->_ProcessMsg
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->_ADC2Celsius
    _ADC2Celsius->___aldiv
    _SSPA_getPOut->_ADC2Amp
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    ___aldiv->___lmul
    _KAPS_setRelPos->_I2C1_Write
    _KAPS_setAbsPos->_packLong
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getStatus->_I2C1_Write
    _KAPS_getPos->_packLong
    _KAPS_getIndex->_I2C1_Read
    _KAPS_getIndex->_I2C1_Write
    _KAPS_StorePos->_packLong
    _KAPS_GoToIdx->_I2C1_Write
    _Parse->_SendNack
    _SendNack->_SendMsg
    _SendMsg->_SendSync

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   43859
                                             49 BANK0      1     1      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                         _ProcessMsg
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     632
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     196
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     196
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessMsg                                           3     2      1   39102
                                             46 BANK0      3     2      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (2) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SSPA_setMute                                         4     3      1     245
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SSPA_getTemp                                         6     6      0    2150
                                             40 BANK0      6     6      0
                        _ADC2Celsius
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _ADC2Celsius                                         14    12      2    1850
                                             26 BANK0     14    12      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SSPA_getPOut                                         6     6      0    4316
                                             38 BANK0      5     5      0
                            _ADC2Amp
                            _ADC2dBm
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                          8     6      2     167
                                              0 BANK0      8     6      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_SelectChannel                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC2dBm                                             10     8      2    1850
                                             26 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ADC2Amp                                             12     8      4    1940
                                             26 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     985
                                              4 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _KAPS_setRelPos                                       4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_setAbsPos                                      11     7      4    4328
                                             13 BANK0     11     7      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _KAPS_getStatus                                       4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_getPos                                          7     7      0    4638
                                             13 BANK0      7     7      0
                          _I2C1_Read
                         _I2C1_Write
                           _packLong
 ---------------------------------------------------------------------------------
 (2) _packLong                                            13     9      4     428
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _KAPS_getIndex                                        4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read                                            6     1      5     977
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                     _I2C1_ReadStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadStart                                       0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (2) _KAPS_StorePos                                       13     9      4    4396
                                             13 BANK0     13     9      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _unpackLong                                           9     4      5     968
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _KAPS_GoToIdx                                         4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write                                           6     1      5    3113
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteStart                                      0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (5) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_IsBusy                                          1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parse                                                3     3      0    4088
                                              7 BANK0      3     3      0
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    1985
                                              6 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _SendMsg                                              5     3      2    1948
                                              1 BANK0      5     3      2
                           _SendSync
 ---------------------------------------------------------------------------------
 (3) _SendSync                                             2     2      0     279
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     211
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_IsTxReady                                     1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_EventHandler                                    2     2      0     164
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_ErrorEventHandler                               2     2      0     164
                                              2 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_TX                                        1     1      0      48
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _SendMsg
       _SendSync
         _EUSART_IsTxReady
         _EUSART_Write
     _SendNack
       _SendMsg
   _ProcessMsg
     _KAPS_GoToIdx
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_StartSend
     _KAPS_StorePos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_getIndex
       _I2C1_Read
         _I2C1_IsBusy
         _I2C1_ReadStart
           _I2C1_StartSend
       _I2C1_Write
     _KAPS_getPos
       _I2C1_Read
       _I2C1_Write
       _packLong
     _KAPS_getStatus
       _I2C1_Read
       _I2C1_Write
     _KAPS_setAbsPos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_setRelPos
       _I2C1_Write
     _SSPA_getPOut
       _ADC2Amp
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _ADC2dBm
         ___aldiv
         ___lmul
       _getADCValue
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_SelectChannel
         _ADC_StartConversion
     _SSPA_getTemp
       _ADC2Celsius
         ___aldiv
         ___lmul
       _getADCValue
     _SSPA_setMute
     _SendMsg
     _packLong
     _unpackLong
     _unpackWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      86       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      86      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 17:01:05 2024

                                    I2C1_Write@data 0022                              ??_I2C1_DefaultCallback 0070  
                                                l30 0DE4                                                  l33 0D04  
                                                l27 0E70                                                  l36 0D98  
                                                l39 0D5C                                                  l55 0D62  
       __end_of_EUSART_OverrunErrorCallbackRegister 0DFD               ??_EUSART_OverrunErrorCallbackRegister 0076  
              ?_EUSART_OverrunErrorCallbackRegister 0074                 _EUSART_OverrunErrorCallbackRegister 0DF1  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                                     ?_KAPS_GoToIdx 0070                                       _KAPS_StorePos 0530  
                                      _SSPA_getPOut 02F0                                        _SSPA_getTemp 05AE  
                                               l200 0E36                                     __end_of_ADC2Amp 0530  
                                               l204 0E08                                                 l213 0D91  
                                               l216 0D8A                                                 l312 0D30  
                                               l410 0467                                                 l333 0DB7  
                                               l184 0EF3                                                 l177 0E86  
                                               l610 0FD3                                                 l442 0DD8  
                                               l188 0F15                                                 l613 0D2C  
                                               l623 0DCD                                                 l616 0003  
                                               l800 025F                                                 l288 0D01  
                                               l713 0F83                                                 l465 0D44  
                                               l722 056F                                                 l730 07FA  
                                               l619 0D28                                                 l627 0DFC  
                                               l483 0E5C                                                 l716 076E  
                                               l548 0ED5                                                 l726 07CC  
                                               l830 041C                                                 l719 0FA9  
                                               l592 0D3F                                                 l736 05AD  
                                               l745 04AC                                                 l833 052F  
                                               l850 063A                                                 l842 062F  
                                               l739 03D0                                                 l827 06D2  
                                               l691 01AB                                                 l764 0EB8  
                                               l836 0627                                                 l748 0DF0  
                                               l597 0E26                                                 l773 0DC2  
                                               l853 063D                                                 l845 0632  
                                               l790 01D0                                                 l870 02F3  
                                               l768 0707                                                 l857 0662  
                                               l866 05EA                                                 l787 01C9  
                                               l875 0379                                                 l957 073B  
                                   __end_of_ADC2dBm 0628                                                 u910 0E03  
                                               u911 0E02                                                 u990 0DC9  
                                               u991 0DC8                                        ?_KAPS_getPos 0070  
                         __end_of_I2C1_DataTransmit 0D36                                     __end_of_ADC_ISR 0E18  
                   __end_of_ADC_SetInterruptHandler 0D63                                                 wreg 0009  
                                      ADC2dBm@value 003C                            _I2C1_ErrorInterruptClear 0CEA  
                                      _SSPA_setMute 0628                        ?_ADC_DefaultInterruptHandler 0070  
                                     SendMsg@msg_id 0025                                       _KAPS_getIndex 07CD  
                                      ?_EUSART_Read 0070                                        _BAUD1CONbits 019F  
                                  __end_of_I2C1_ISR 0D25                                                l1008 0273  
                                              l1018 02EF                                                l3001 0464  
                                              l3011 0EB9                                                l3003 0465  
                                              l3013 0EC4                                                l3005 0466  
                                              l3015 0ECB                                                l3007 0DCE  
                                              l4001 01DD                                                l3017 0ED2  
                                              l3009 0DD1                                                l3019 0D25  
                                              l4011 0214                                                l4003 01E4  
                                              l4021 0224                                                l4013 0218  
                                              l4031 023A                                                l4023 0226  
                                              l4015 021C                                                l4007 01EB  
                                              l4041 0245                                                l4025 0227  
                                              l4017 021E                                                l4009 020E  
                                              l4027 022D                                                l4043 0248  
                                              l3181 0FBA                                                l3173 0FAA  
                                              l4029 0232                                                l4037 023C  
                                              l4045 025E                                                l3191 0FD1  
                                              l3183 0FBF                                                l3175 0FAD  
                                              l4039 0241                                                l4223 0649  
                                              l3167 0E4A                                                l3169 0D3B  
                                              l3185 0FC4                                                l3177 0FB2  
                                              l3601 0262                                                l4225 05BF  
                                              l2801 0DF7                                                l2641 0D2D  
                                              l4081 0F3E                                                l4073 0F39  
                                              l3187 0FC6                                                l3179 0FB4  
                                              l3531 0E18                                                l3611 028E  
                                              l3603 0266                                                l4227 036E  
                                              l2643 0DFD                                                l4083 0F46  
                                              l4075 0F3C                                                l3189 0FCC  
                                              l3533 0E19                                                l4229 0250  
                                              l3621 02AF                                                l3613 0296  
                                              l3605 0277                                                l2901 0E62  
                                              l2645 0E03                                                l4085 0F4B  
                                              l4077 0F3D                                                l3535 0E1E  
                                              l3543 0D29                                                l3703 06ED  
                                              l3623 02C1                                                l3615 0299  
                                              l3631 02D7                                                l3607 0282  
                                              l2639 0D5D                                                l2903 0E63  
                                              l2911 0E71                                                l4087 0F54  
                                              l4079 0F3E                                                l3537 0E23  
                                              l3705 06F4                                                l3713 0703  
                                              l3561 0E2F                                                l3529 0CFF  
                                              l3641 0ED6                                                l3721 0497  
                                              l3633 02DC                                                l3625 02C9  
                                              l3617 02A4                                                l3609 0286  
                                              l3553 0D57                                                l3545 0DDA  
                                              l3801 0DE5                                                l2905 0E65  
                                              l2913 0E76                                                l3539 0E25  
                                              l3707 06FC                                                l3563 0E34  
                                              l3571 0D87                                                l3651 0EEC  
                                              l3643 0EDE                                                l3715 0468  
                                              l3731 03C2                                                l3723 037C  
                                              l3635 02E7                                                l3627 02CA  
                                              l3619 02A8                                                l3547 0D02  
                                              l3811 0317                                                l3803 0DEB  
                                              l2907 0E67                                                l2915 0E77  
                                              l3581 0EAA                                                l3709 0700  
                                              l3565 0E35                                                l3557 0E27  
                                              l3653 0EED                                                l3645 0EE5  
                                              l3717 046E                                                l3573 0D8B  
                                              l3725 037C                                                l3901 0F98  
                                              l3629 02D1                                                l3549 0D92  
                                              l3741 06A8                                                l3821 0349  
                                              l3813 0325                                                l3805 02F2  
                                              l2909 0E6E                                                l2917 0E7A  
                                              l3583 0EB2                                                l3559 0E29  
                                              l3655 0EEF                                                l3647 0EE6  
                                              l3639 0ED6                                                l3719 0482  
                                              l3911 054D                                                l3903 0532  
                                              l3575 0D8E                                                l3671 0F05  
                                              l3663 0EF4                                                l3727 0393  
                                              l3591 071D                                                l3751 06BF  
                                              l3735 069E                                                l3823 0352  
                                              l3815 0325                                                l3807 02F3  
                                              l2919 0E84                                                l2951 041D  
                                              l3577 0EA1                                                l3569 0D84  
                                              l3657 0EF0                                                l3649 0EE8  
                                              l3913 055E                                                l3905 0534  
                                              l3681 0F0F                                                l3673 0F07  
                                              l3665 0EF5                                                l3729 03AA  
                                              l3841 07B3                                                l3593 0724  
                                              l3585 0708                                                l3753 06C5  
                                              l3745 06AA                                                l3737 06A0  
                                              l3817 032E                                                l3809 02FC  
                                              l3761 0418                                                l3921 0071  
                                              l2945 0DB0                                                l2793 0D40  
                                              l2961 043B                                                l2953 041F  
                                              l3579 0EA2                                                l3691 06D6  
                                              l3915 0DBA                                                l3659 0EF3  
                                              l3907 053E                                                l3683 0F12  
                                              l3675 0F0B                                                l3667 0EFD  
                                              l3851 058A                                                l3843 07C9  
                                              l3835 079F                                                l3595 0733  
                                              l3587 0711                                                l3747 06B2  
                                              l3739 06A3                                                l3819 0349  
                                              l3827 0366                                                l3931 00B3  
                                              l3923 0083                                                l2947 0DB3  
                                              l2795 0DC3                                                l2971 0444  
                                              l2963 043C                                                l2955 0421  
                                              l3693 06DA                                                l3909 0540  
                                              l3677 0F0C                                                l3669 0F04  
                                              l3685 0F14                                                l3861 07E1  
                                              l3853 05A0                                                l3845 0570  
                                              l3837 07A2                                                l3589 0715  
                                              l3765 04F0                                                l3773 05EB  
                                              l3749 06BA                                                l3757 03D1  
                                              l3781 05B0                                                l3941 00F9  
                                              l3933 00BD                                                l3925 008D  
                                              l3917 006A                                                l2949 0DB5  
                                              l2797 0DC9                                                l2981 0451  
                                              l2973 0447                                                l2965 043D  
                                              l2957 0437                                                l3695 06DF  
                                              l3679 0F0E                                                l3863 07F7  
                                              l3855 07CD                                                l3847 0572  
                                              l3839 07A3                                                l3599 0260  
                                              l3767 04F7                                                l3775 05F2  
                                              l3759 03D8                                                l3791 05CA  
                                              l3783 05B1                                                l3951 0133  
                                              l3943 0103                                                l3935 00C4  
                                              l3927 0094                                                l3919 006B  
                                              l2895 0E5D                                                l2799 0DF1  
                                              l2991 045F                                                l2983 0454  
                                              l2975 0449                                                l2967 0440  
                                              l2959 0439                                                l3689 06D5  
                                              l3857 07D0                                                l3849 057A  
                                              l3769 0527                                                l3777 0626  
                                              l3793 05D3                                                l3785 05B4  
                                              l3873 0640                                                l3865 0629  
                                              l3961 0159                                                l3953 0136  
                                              l3945 0106                                                l3937 00CB  
                                              l3929 009B                                                l2897 0E60  
                                              l2993 0460                                                l2985 0457  
                                              l2977 044B                                                l2969 0442  
                                              l3699 06E7                                                l3971 01AE  
                                              l3883 0F60                                                l3859 07D1  
                                              l3891 073F                                                l3875 0654  
                                              l3867 062A                                                l3963 016A  
                                              l3955 013A                                                l3947 010A  
                                              l3939 00DD                                                l2899 0E61  
                                              l2995 0461                                                l2987 045A  
                                              l2979 044E                                                l3981 01BE  
                                              l3973 01AF                                                l3885 0F62  
                                              l3893 074C                                                l3789 05B7  
                                              l3869 0635                                                l3965 0172  
                                              l3957 0144                                                l3949 0114  
                                              l2997 0462                                                l2989 045D  
                                              l3991 01D0                                                l3983 01C0  
                                              l3975 01B4                                                l3887 0F72  
                                              l3895 075D                                                l3959 0151  
                                              l2999 0463                                                l3993 01D1  
                                              l3985 01C3                                                l3977 01B6  
                                              l3889 073C                                                l3897 0F86  
                                              l3969 0188                                                l3995 01D3  
                                              l3987 01C6                                                l3979 01B9  
                                              l3899 0F88                                                l3989 01CD  
                                              l3999 01D6                                   _I2C1_Deinitialize 0000  
                                              u1000 0DF7                                                u1001 0DF6  
                                              u2010 01B4                                                u2011 01B3  
                                              u1300 0FBA                                                u2020 0223  
                                              u1301 0FB9                                                u2021 0222  
                                              u2005 00E4                                                u1310 0FC4  
                                              u2030 022D                                                u1311 0FC3  
                                              u2031 022C                                                u1320 0FCC  
                                              u2040 0232                                                u1321 0FCB  
                                              u2041 0231                                                u2107 0EA5  
                                              u2060 0F46                                                u2061 0F45  
                                              _LATA 010C                                                u2070 0F54  
                                              _LATB 010D                                                u2071 0F53  
                                              _LATC 010E                                                u1290 0FB2  
                                              u1530 0E1E                                                u1610 0733  
                                              u1291 0FB1                                                u1531 0E1D  
                                              u1611 0732                                                u1540 0E23  
                                              u1700 02D7                                                u1620 0266  
                                              u1541 0E22                                                u1701 02D6  
                                              u1621 0265                                                u1605 0725  
                                              u1550 0E2F                                                u1710 02DC  
                                              u1630 0277                                                u1551 0E2E  
                                              u1711 02DB                                                u1631 0276  
                                              u1560 0E34                                                u1720 0EDE  
                                              u1800 03A0                                                u1640 0296  
                                              u1561 0E33                                                u1721 0EDD  
                                              u1641 0295                                                u1570 0EB2  
                                              u1730 0EFD                                                u1810 03B8  
                                              u1571 0EB1                                                u1731 0EFC  
                                              u1740 06E6                                                u1900 07C9  
                                              u1660 02A8                                                u1580 0715  
                                              u1820 06B2                                                u1741 06E5  
                                              u1805 039C                                                u1901 07C8  
                                              u1661 02A7                                                u1581 0714  
                                              u1821 06B1                                                u1750 06EC  
                                              u1910 05A0                                                u1830 06C5  
                                              u1751 06EB                                                u1815 03B4  
                                              u1911 059F                                                u1655 029A  
                                              u1831 06C4                                                u1760 047E  
                                              u1920 07F7                                                u1680 02C1  
                                              u1921 07F6                                                u1681 02C0  
                                              u1770 0493                                                u1930 062F  
                                              u1675 02A9                                                u1595 071E  
                                              u1931 062E                                                u1780 04A8  
                                              u1940 063A                                                u1765 047A  
                                              u1685 02BD                                                u1845 06CA  
                                              u1941 0639                                                u1790 0389  
                                              u1775 048F                                                u1695 02CB  
                                              u1855 05DE                                                u1785 04A4  
                                              u1865 0307                                                u1795 0385  
                                              u1875 031A                                                u1955 0658  
                                              u1965 0537                                                u1885 0339  
                                              u1895 0355                                                u1975 0078  
                                              u1985 00A2                                                u1995 00D2  
                                              i1l52 0E17                                                i1l58 0CE8  
                                              _UART 076F                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                                  ??_I2C1_ReadStart 0074                                     ??_I2C1_StopSend 0070  
                                 I2C1_Write@address 0020                                                _main 0F39  
                                              _kaps 0066                                    __end_of_I2C_Host 080F  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                              start 0036          __end_of_EUSART_DefaultOverrunErrorCallback 0D29  
              ??_EUSART_DefaultOverrunErrorCallback 0074                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 0D25                                       ADC2dBm@result 0040  
                   __end_of_INT_SetInterruptHandler 0D45                                     _I2C1_EVENT_IDLE 0D19  
                                   _I2C1_EVENT_NACK 0D45                                          _i2c1Status 0052  
                                   _I2C1_EVENT_STOP 0DA8                                     __end_of_SendMsg 0708  
                                    ??_KAPS_GoToIdx 0025                                      ?_KAPS_StorePos 002D  
                                    _KAPS_getStatus 079F                                       ?_EUSART_Write 0074  
                                 __end_of_I2C1_Read 0F16                                     __end_of___aldiv 02F0  
                                             ?_main 0070                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             i1l210 0D20                                               i1l300 0D56  
                                             i1l231 0CE9                                               i1l303 0D3A  
                                             i1l207 0D24                                               i1l240 0D75  
                                             i1l321 0CEC                                               i1l225 04EF  
                                             i1l234 0D1C                                               i1l306 0D83  
                                             i1l219 0E49                                               i1l324 0D0C  
                                             i1l228 0F38                                               i1l309 0D14  
                                             i1l237 0DA7                                               i1l261 0D50  
                                             i1l318 0CEF                                               i1l270 0CF5  
                                             i1l247 0FFF                                               i1l255 069B  
                                             i1l264 0DAF                                               i1l273 0D35  
                                             i1l282 0CFE                                               i1l258 0D4A  
                                             i1l450 0026                                               i1l291 0CF2  
                                             i1l267 0D7C                                               i1l276 0D08  
                                             i1l285 0CFB                                               i1l294 0D10  
                                             i1l279 0CF8                                               i1l455 0034  
                                             i1l448 0018                                               i1l297 0D18  
                                             i1l449 0034                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             u94_20 0FDB                                               u94_21 0FDA  
                                             u95_20 0FF3                                               u95_21 0FF2  
                                             u96_20 066D                                               u96_21 066C  
                                             _RXPPS 0E24                                               u97_20 0674  
                                             u97_21 0673                                               u98_20 068A  
                                             u98_21 0689                                    ??_I2C1_StartSend 0074  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                 ___lmul@multiplicand 0024  
                                             _Parse 01AC                                      ?_KAPS_getIndex 0070  
                                 ??_I2C1_Initialize 0076                                     SendMsg@data_len 0022  
                           ??_I2C1_CallbackRegister 0076                                   ?_I2C1_IsRxBufFull 0070  
                                  ProcessMsg@msg_id 0050                            ?_I2C1_EVENT_SEND_WR_ADDR 0070  
                                             _sspas 00A0                                               pclath 000A  
                             I2C1_DataTransmit@data 0070                                      _KAPS_setAbsPos 073C  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                      _KAPS_setRelPos 0F84  
                                      ??_I2C1_Close 0070                                          SendMsg@sum 0024  
                                      __end_of_UART 079F                                        ??_I2C1_Write 0075  
                                   __initialization 0038                            ??_I2C1_ErrorEventHandler 0072  
                                      __end_of_main 0F5E                              __end_of_KAPS_getStatus 07CD  
                                         ??_ADC2Amp 0075                                           ??_ADC2dBm 0075  
                                    getADCValue@sum 0025                                    _I2C1_EVENT_ERROR 0D4B  
                                    ??_EUSART_Write 0075                                    _I2C1_EVENT_RESET 0D76  
                                         ??_ADC_ISR 0070                         ?_INTERRUPT_InterruptManager 0070  
                                  __end_of_SendNack 0DC3                                              ??_main 0076  
                                  __end_of_SendSync 0EB9                                    SSPA_setMute@band 0075  
                                  SSPA_setMute@mute 0074  EUSART_OverrunErrorCallbackRegister@callbackHandler 0074  
EUSART_FramingErrorCallbackRegister@callbackHandler 0074                I2C1_CallbackRegister@callbackHandler 0074  
                                            ?_Parse 0070                                  __end_of_I2C1_Close 0E4A  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 00BC  
                             _I2C1_InterruptsEnable 0D2D                                              _ADRESH 009C  
                                            _ADRESL 009B                              __end_of_KAPS_setAbsPos 076F  
                                __end_of_I2C1_Write 0EF4                                              _ANSELA 018C  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                            _BORCON 0116                                   KAPS_setAbsPos@reg 0037  
                                 KAPS_setAbsPos@pos 002D                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RC2PPS 0EA2  
                                            _RB5PPS 0E9D                                              _RB6PPS 0E9E  
                                            u112_20 04B8                                              u112_21 04B7  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            _ODCONC 028E                                              u113_20 04C0  
                                            i1l3161 0E12                                              u113_21 04BF  
                                            i1l3163 0D21                                              i1l3157 0E09  
                                            i1l3165 0D1D                                              i1l2701 0D51  
                                            i1l3159 0E0B                                              i1l2543 0D32  
                                            i1l2711 0D1B                                              u114_20 04CE  
                                            i1l2561 0D0D                                              i1l2553 0D11  
                                            i1l2545 0CFC                                              i1l2721 0D6F  
                                            i1l2705 0D36                                              u114_21 04CD  
                                            i1l2475 0CED                                              i1l2491 0E46  
                                            i1l2483 0E37                                              i1l2563 0CF9  
                                            i1l2731 0FDB                                              i1l2715 0DA0  
                                            i1l2723 0D74                                              i1l2547 0DA8  
                                            i1l2571 0D79                                              i1l3371 001D  
                                            i1l3363 0006                                              i1l2477 0CEA  
                                            i1l2485 0E39                                              i1l2493 0CF0  
                                            i1l2557 0CF3                                              i1l2565 0D15  
                                            i1l2741 0FF4                                              i1l2733 0FDF  
                                            i1l2709 0D19                                              i1l2717 0DA6  
                                            i1l2549 0DAE                                              i1l2573 0D7B  
                                            i1l3373 0022                                              i1l3365 000A  
                                            i1l2495 0D05                                              i1l2479 0D09  
                                            i1l2487 0E40                                              i1l2567 0CF6  
                                            i1l2743 0FF7                                              i1l2735 0FEB  
                                            i1l2727 0FD4                                              i1l2751 0663  
                                            i1l3375 002B                                              i1l3367 000F  
                                            u115_20 04D6                                              i1l2489 0E43  
                                            i1l2745 0FFA                                              i1l2737 0FEE  
                                            i1l2729 0FD4                                              i1l2761 0680  
                                            i1l2753 0665                                              i1l2569 0D76  
                                            u115_21 04D5                                              i1l2921 04AD  
                                            i1l3377 0030                                              i1l3369 0014  
                                            i1l2739 0FF3                                              i1l2747 0FFE  
                                            i1l2763 0684                                              i1l2755 066D  
                                            i1l2771 0697                                              i1l2931 04CE  
                                            i1l2923 04B0                                              i1l2773 069A  
                                            i1l2765 068A                                              i1l2757 0674  
                                            i1l2781 0D49                                              i1l2941 0F1E  
                                            i1l2933 04D6                                              i1l2925 04B8  
                                            i1l2767 068E                                              i1l2759 067B  
                                            i1l2943 0F32                                              i1l2935 04DB  
                                            i1l2927 04C0                                              i1l2769 0694  
                                            i1l2777 0D45                                              i1l2785 0D4B  
                                            i1l2937 0F16                                              i1l2697 0D7D  
                                            i1l2929 04C6                                              i1l2779 0D45  
                                            i1l2787 0D4B                                              i1l2939 0F1B  
                                            i1l2789 0D4F                                              u142_20 000A  
                                            u142_21 0009                                              u143_20 000F  
                                            u143_21 000E                                              u128_20 0E12  
                                            u144_20 0014                                              u128_21 0E11  
                                            u144_21 0013                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u145_20 001D                                              u145_21 001C  
                                            u146_20 0022                                              u146_21 0021  
                                            u147_20 002B                                              u147_21 002A  
                                            u148_20 0030                                              u148_21 002F  
                                            _OSCCON 0099                              __end_of_KAPS_setRelPos 0FAA  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                           __end_of_I2C1_EVENT_IDLE 0D1D                             __end_of_I2C1_EVENT_NACK 0D4B  
                                KAPS_getStatus@data 0028                             __end_of_I2C1_EVENT_STOP 0DB0  
                             SSPA_getPOut@adc_value 0048                                           ??_SendMsg 0023  
                       __end_of_I2C1_InterruptClear 0CF0                                     ??_KAPS_StorePos 0031  
                                            ___lmul 0708                                           ??___aldiv 0074  
                                   ?_KAPS_getStatus 0070                                    __end_of_packLong 03D1  
                                _I2C1_RestartEnable 0CFC                                           ?_I2C1_ISR 0070  
                                            _parser 005E                                   ?_EUSART_IsRxReady 0070  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 0DA8                                   ?_EUSART_IsTxReady 0070  
                                 ProcessMsg@payload 00C2                                          _ProcessMsg 0068  
                                      packLong@data 002C                                   ?_CLOCK_Initialize 0070  
                                ??_EUSART_IsRxReady 0074                                     ??_KAPS_getIndex 0025  
                                ??_EUSART_IsTxReady 0074                                  ??_CLOCK_Initialize 0074  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 0D76                                 ?_I2C1_RestartEnable 0070  
                                 ??_I2C1_WriteStart 0074             INT_SetInterruptHandler@InterruptHandler 0074  
           ADC_SetInterruptHandler@InterruptHandler 0074                                     ?_KAPS_setAbsPos 002D  
                              __end_of_KAPS_GoToIdx 0F84                                   _SYSTEM_Initialize 0E4A  
                           __end_of__initialization 0064                                     ?_KAPS_setRelPos 0070  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                     ??_I2C1_IsNack 0070                                       ??_I2C1_IsBusy 0074  
                                ?_SYSTEM_Initialize 0070                                         SendMsg@data 0021  
                                getADCValue@channel 0024                                       ??_ADC2Celsius 003C  
                              ??_I2C1_RestartEnable 0070                                      __pcstackCOMMON 0070  
                                     __end_of_Parse 0260                                        __pidataBANK0 0D99  
                                      __pidataBANK1 0E87                                 ??_SYSTEM_Initialize 0076  
                        ??_I2C1_ErrorInterruptClear 0070                                     _I2C1_IsBusy$646 0074  
                                        ??_I2C1_ISR 0074                             _ADC_GetConversionResult 0D57  
                                    _OPTION_REGbits 0095                               __end_of_I2C1_EVENT_RX 069C  
                             __end_of_I2C1_EVENT_TX 1000                                             ??_Parse 0027  
                            ?_I2C1_InterruptsEnable 0070                                   _I2C1_EventHandler 04AD  
                         __end_of_SYSTEM_Initialize 0E5D                                          __pbssBANK0 0052  
                                        __pbssBANK1 00B8                                __end_of_EUSART_Write 0D2D  
                                ?_I2C1_EventHandler 0070                                   KAPS_setRelPos@reg 0028  
                             _I2C1_StatusFlagsClear 0D09                                    ?_I2C1_EVENT_IDLE 0070  
                                  ?_I2C1_EVENT_NACK 0070                                           ?_SendNack 0070  
                                  ?_I2C1_EVENT_STOP 0070                                           ?_SendSync 0070  
                               ??_I2C1_EventHandler 0072                                          __pmaintext 0F39  
                               __end_of_I2C1_IsAddr 0D84                                 __end_of_I2C1_IsData 0D3B  
                               __end_of_I2C1_IsNack 0D57                                             ?___lmul 0020  
                               __end_of_I2C1_IsBusy 0E37                                             _ADC2Amp 04F0  
                                           _ADC2dBm 05EB                                          __pintentry 0004  
                                   _I2C1_Initialize 0E71                                _EUSART_AutoBaudQuery 0000  
                               __end_of_ADC2Celsius 041D                                             _ADC_ISR 0E09  
                                    ___lmul@product 0028                                         ?_ProcessMsg 004E  
                                KAPS_setAbsPos@data 0033                               __end_of_I2C1_NackSend 0D19  
                             __end_of_I2C1_BusReset 0D09                                     _EUSART_IsTxDone 0000  
                                   _EUSART_ErrorGet 0000                                           _I2C1_Read 0EF4  
                         __end_of_I2C1_EventHandler 04F0                              _I2C1_ErrorEventHandler 0F16  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                          __end_of_I2C1_EVENT_ERROR 0D51                            __end_of_I2C1_EVENT_RESET 0D7D  
                                         ?_packLong 0020                       __end_of_I2C1_CallbackRegister 0E09  
                                   KAPS_getPos@data 002F                               __end_of_I2C1_StopSend 0CF3  
                                        ??_SendNack 0076                                          ??_SendSync 0075  
                              _ADC_InterruptHandler 00CD                                             _SendMsg 06D3  
                           _ADC_SetInterruptHandler 0D5D                                       ??_getADCValue 0022  
                                           ___aldiv 0260                                    KAPS_StorePos@idx 0039  
                                  KAPS_StorePos@reg 0038                                    KAPS_StorePos@pos 002D  
                         ??_ADC_GetConversionResult 0076                                             __ptext1 0E4A  
                                           __ptext2 041D                                             __ptext3 0DCE  
                                           __ptext4 0D40                                             __ptext5 0E71  
                                           __ptext6 0D2D                                             __ptext7 0DFD  
                                           __ptext8 0EB9                                             __ptext9 0DF1  
                              I2C1_Write@dataLength 0023                                 _I2C1_RestartDisable 0CF9  
                                  ___aldiv@dividend 0030                            ??_PIN_MANAGER_Initialize 0074  
                                        ?_I2C1_Read 0020                                       ?_I2C1_AckSend 0070  
                           _INT_SetInterruptHandler 0D40                                     _i2c1_eventTable 080F  
                                           clrloop0 0D64                                end_of_initialization 0064  
                                        ??_packLong 0024                              ?_I2C1_StatusFlagsClear 0070  
                                           init_ram 0D69                                             initloop 0D6A  
                                       _I2C1_IsAddr 0D7D                                         _I2C1_IsData 0D36  
                                       _I2C1_IsNack 0D51                                         _I2C1_IsBusy 0E27  
                                  ??_KAPS_getStatus 0025                                   _EUSART_Initialize 0EB9  
                              ?_I2C1_RestartDisable 0070                                    I2C1_Read@address 0020  
                           __end_of_I2C1_Initialize 0E87                        __end_of_ADC_IsConversionDone 0D99  
                                       _ADC2Celsius 03D1                                  ?_EUSART_Initialize 0070  
                                 KAPS_getIndex@data 0028                                    ___aldiv@quotient 0036  
                                  _I2C1_DataReceive 0CF3                                     _I2C1_WriteStart 0D84  
                               __end_of_getADCValue 06D3                                 ??_EUSART_Initialize 0076  
                                      _KAPS_GoToIdx 0F5E                                           _SSPDATPPS 0E21  
                                         _SSPCLKPPS 0E20                                    ??_KAPS_setAbsPos 0031  
                                    ??_I2C1_AckSend 0070                 __end_of_ADC_DefaultInterruptHandler 0CE9  
                       _ADC_DefaultInterruptHandler 0CE8                                 _ADC_StartConversion 0D02  
                                  ??_KAPS_setRelPos 0025                                 _EUSART_Deinitialize 0000  
                                        _unpackLong 0468                                          _unpackWord 0DE5  
                         __end_of_EUSART_Initialize 0ED6                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 0076                               ??_I2C1_RestartDisable 0070  
                                    ProcessMsg@data 004E                                ?_ADC_StartConversion 0070  
                                      getADCValue@i 0027                        __end_of_INTERRUPT_Initialize 0DD9  
                                    _I2C1_ERROR_ISR 0D1D                                      __end_of___lmul 073C  
                             __end_of_KAPS_StorePos 0570                                           Parse@data 0029  
                                     ?_SSPA_getPOut 0070                          __end_of_I2C1_ReceiveEnable 0CF9  
                                      _EUSART_Write 0D29                                       ?_SSPA_getTemp 0070  
                           __end_of_i2c1_eventTable 0821                                      _ADC_Initialize 0E5D  
                              KAPS_setRelPos@offset 0027                           ??_INT_SetInterruptHandler 0076  
                           ??_I2C1_InterruptsEnable 0074                                       ??_KAPS_getPos 002D  
                                          ADC2Amp@v 003A                                 start_initialization 0038  
                                     ?_SSPA_setMute 0074                                         ??_I2C1_Read 0075  
                                          ADC2dBm@v 003A                               __end_of_KAPS_getIndex 07FB  
                                      SendSync@data 0020                                       ??_EUSART_Read 0074  
                           _I2C1_EVENT_SEND_RD_ADDR 0DA0                             __end_of_I2C1_WriteStart 0D8B  
                                  ?_I2C1_Initialize 0070                                   KAPS_getStatus@reg 0027  
                             ??_ADC_StartConversion 0074                             _I2C1_EVENT_SEND_WR_ADDR 0D6F  
                                       _getADCValue 069C                              __end_of_I2C1_ERROR_ISR 0D21  
                        _EUSART_FramingErrorHandler 0076                                    _I2C1_IsRxBufFull 0D11  
                                          ??___lmul 0074                                            ?_ADC2Amp 003A  
                                          ?_ADC2dBm 003A                              __end_of_ADC_Initialize 0E71  
                                       __pdataBANK0 0066                                         __pdataBANK1 00A0  
                                    ??_SSPA_getPOut 0046                                      ??_SSPA_getTemp 0048  
                                          ?_ADC_ISR 0070                                     unpackLong@value 0020  
                                      ??_ProcessMsg 004F                             ?_I2C1_ErrorEventHandler 0070  
                                    ??_SSPA_setMute 0020                                         __pbssCOMMON 0076  
                                         ___latbits 0001                                       __pcstackBANK0 0020  
                              _ADC_IsConversionDone 0D92                                         ?_unpackLong 0020  
                               __end_of_KAPS_getPos 05AE                                         ?_unpackWord 0020  
                         ?_I2C1_ErrorInterruptClear 0070                        __end_of_I2C1_DefaultCallback 0CEA  
                                 ?_I2C1_EVENT_ERROR 0070                                   ?_I2C1_EVENT_RESET 0070  
                               __end_of_EUSART_Read 0FD4                                  ??_I2C1_EVENT_ERROR 0070  
                                ??_I2C1_EVENT_RESET 0070                                           __pnvBANK1 00CD  
                                __end_of_ProcessMsg 01AC                                            ?_SendMsg 0021  
                              __end_of_I2C1_AckSend 0D11                              _PIN_MANAGER_Initialize 041D  
                                   ?_I2C1_ERROR_ISR 0070                                   ADC2Celsius@result 0044  
                                    _I2C1_ReadStart 0D8B                                   _ADC_SelectChannel 0DD9  
                                          ?___aldiv 002C                                     ?_ADC_Initialize 0070  
                                ?_ADC_SelectChannel 0070                                            _I2C1_ISR 0D21  
                      ??_INTERRUPT_InterruptManager 0074                      __end_of_I2C1_ErrorEventHandler 0F39  
                                          _BAUD1CON 019F                                      KAPS_getPos@reg 0033  
                            _EUSART_TransmitDisable 0000                                    SSPA_getPOut@band 004A  
                                          _I2C_Host 07FB                                 ??_ADC_SelectChannel 0074  
                             ?_ADC_IsConversionDone 0070                                 I2C1_Read@dataLength 0023  
                     I2C1_EVENT_ERROR@retEventState 0070                             ??_I2C1_StatusFlagsClear 0070  
                          __end_of_I2C1_DataReceive 0CF6                           ??_I2C1_EVENT_SEND_RD_ADDR 0070  
                                  _EUSART_IsRxReady 0D3B                                _INTERRUPT_Initialize 0DCE  
                                   unpackWord@value 0020                                    _EUSART_IsTxReady 0E18  
                                   ___aldiv@divisor 002C                                    _CLOCK_Initialize 0DB0  
                                    _I2C1_StartSend 0CFF                                     ___aldiv@counter 0034  
                                      ?_I2C1_IsAddr 0070                                        ?_I2C1_IsData 0070  
                                          _LATCbits 010E                                        ?_I2C1_IsNack 0070  
                         ??_I2C1_EVENT_SEND_WR_ADDR 0071                                        ?_I2C1_IsBusy 0070  
                             _I2C1_CallbackRegister 0DFD                                           clear_ram0 0D63  
                                          _PIE1bits 0090                                            _PIE2bits 0091  
                                  ?_I2C1_WriteStart 0070                                   _eusartRxLastError 00BE  
                                        _I2C1_Close 0E37                              __end_of_I2C1_ReadStart 0D92  
                         __end_of_ADC_SelectChannel 0DE5                                        ?_ADC2Celsius 003A  
                                          _PIR1bits 0010                                            _PIR2bits 0011  
                                        _I2C1_Write 0ED6                                    KAPS_getIndex@reg 0027  
                                    _I2C1_WriteRead 0000                                            _SSP1CON1 0215  
                                          _SSP1CON2 0216                                            _SSP1CON3 0217  
                                          _SSP1STAT 0214                                    KAPS_getPos@F9701 00B8  
                                  SSPA_getTemp@band 004D                                          _ADCON0bits 009D  
                          ADC_SelectChannel@channel 0075                                         _KAPS_getPos 0570  
                      I2C1_EVENT_NACK@retEventState 0070                                       _I2C1_EVENT_RX 0663  
                                     _I2C1_EVENT_TX 0FD4                                         _EUSART_Read 0FAA  
                                 ___lmul@multiplier 0020                               ?_INTERRUPT_Initialize 0070  
                            __end_of_I2C1_StartSend 0D02                                __end_of_SSPA_getPOut 037A  
                              __end_of_SSPA_getTemp 05EB                                 _I2C1_InterruptClear 0CED  
                                          _SendNack 0DB8                                            _SendSync 0E9F  
                              __end_of_SSPA_setMute 0663                                     ?_I2C1_ReadStart 0070  
                          ?_ADC_GetConversionResult 0074                               _EUSART_IsTxReady$1324 0074  
                                    unpackLong@data 0024                                       _I2C1_Callback 00C0  
                                 KAPS_StorePos@data 0033                                _I2C1_DefaultCallback 0CE9  
                                   KAPS_GoToIdx@idx 0027                                     KAPS_GoToIdx@reg 0028  
                              ?_I2C1_InterruptClear 0070                                       _I2C1_NackSend 0D15  
                            ??_ADC_IsConversionDone 0074                                       _I2C1_BusReset 0D05  
                                 ??_I2C1_EVENT_IDLE 0070                                   ??_I2C1_EVENT_NACK 0070  
                                 ??_I2C1_EVENT_STOP 0070                       __end_of_I2C1_InterruptsEnable 0D31  
                                    ?_I2C1_EVENT_RX 0070                                      ?_I2C1_EVENT_TX 0070  
                                  ADC2Celsius@value 0040                                       _I2C1_ErrorGet 0000  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 0DC3  
                                          __ptext11 0DB0                                            __ptext20 069C  
                                          __ptext12 0E5D                                            __ptext21 0D02  
                                          __ptext13 0D5D                                            __ptext30 073C  
                                          __ptext22 0DD9                                            __ptext14 0068  
                                          __ptext31 079F                                            __ptext23 0D92  
                                          __ptext15 0DE5                                            __ptext40 0ED6  
                                          __ptext32 0570                                            __ptext24 0D57  
                                          __ptext16 0628                                            __ptext41 0D84  
                                          __ptext33 037A                                            __ptext25 05EB  
                                          __ptext17 05AE                                            __ptext50 0FAA  
                                          __ptext42 0CFF                                            __ptext34 07CD  
                                          __ptext26 04F0                                            __ptext18 03D1  
                                          __ptext51 0D25                                            __ptext43 0E27  
                                          __ptext35 0EF4                                            __ptext27 0708  
                                          __ptext19 02F0                                            __ptext60 0D1D  
                                          __ptext52 0003                                            __ptext44 01AC  
                                          __ptext36 0D8B                                            __ptext28 0260  
                                          __ptext61 0F16                                            __ptext53 0D3B  
                                          __ptext45 0DB8                                            __ptext37 0530  
                                          __ptext29 0F84                                            __ptext70 0FD4  
                                          __ptext62 0D76                                            __ptext46 06D3  
                                          __ptext38 0468                                            __ptext71 0CFC  
                                          __ptext63 0DA8                                            __ptext55 0D21  
                                          __ptext47 0E9F                                            __ptext39 0F5E  
                                          __ptext80 0E37                                            __ptext72 0D31  
                                          __ptext64 0D4B                                            __ptext56 04AD  
                                          __ptext48 0D29                                            __ptext81 0D09  
                                          __ptext73 0CF9                                            __ptext65 0D45  
                                          __ptext57 0D51                                            __ptext49 0E18  
                                          __ptext82 0CED                                            __ptext74 0CF6  
                                          __ptext66 0663                                            __ptext58 0D36  
                                          __ptext83 0CEA                                            __ptext75 0D15  
                                          __ptext67 0D6F                                            __ptext59 0D7D  
                                          __ptext84 0D05                                            __ptext76 0D11  
                                          __ptext68 0DA0                                            __ptext85 0CE9  
                                          __ptext77 0CF3                                            __ptext69 0D19  
                                          __ptext86 0E09                                            __ptext78 0D0D  
                                          __ptext87 0CE8                                            __ptext79 0CF0  
                          __end_of_I2C1_IsRxBufFull 0D15                                        _SSP1CON1bits 0215  
                                      _SSP1CON2bits 0216                         __end_of_I2C1_RestartDisable 0CFC  
                                _I2C1_ReceiveEnable 0CF6                                     ?_I2C1_StartSend 0070  
                             _EUSART_TransmitEnable 0000                                            _packLong 037A  
                            ?_I2C1_CallbackRegister 0074                                      unpackWord@data 0022  
                               ?_I2C1_ReceiveEnable 0070                                    _parserDataBuffer 00C8  
                                       ?_I2C1_Close 0070                                       _I2C1_StopSend 0CF0  
                                      ?_getADCValue 0020                                          _RC1STAbits 019D  
                                       ?_I2C1_Write 0020                                            int$flags 007E  
                __end_of_INTERRUPT_InterruptManager 0036                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 0DCE               ??_EUSART_FramingErrorCallbackRegister 0076  
              ?_EUSART_FramingErrorCallbackRegister 0074                 _EUSART_FramingErrorCallbackRegister 0DC3  
                             ?_I2C1_DefaultCallback 0070                                            main@data 0051  
                                      _SSP1STATbits 0214                               ??_I2C1_InterruptClear 0070  
                  __end_of_I2C1_ErrorInterruptClear 0CED                               SSPA_getTemp@adc_value 004A  
                                    ?_I2C1_NackSend 0070                                      ?_I2C1_BusReset 0070  
                              ??_I2C1_ReceiveEnable 0070                                      packLong@result 0028  
                                        _INTCONbits 000B                                        _I2C1_AckSend 0D0D  
                              _INT_InterruptHandler 0078                              ??_INTERRUPT_Initialize 0076  
                                      ??_unpackLong 0025                          I2C1_EVENT_RX@retEventState 0071  
                          ?_ADC_SetInterruptHandler 0074                                        ??_unpackWord 0074  
                                          intlevel1 0000                         __end_of_ADC_StartConversion 0D05  
                                  ??_I2C1_ERROR_ISR 0074                                  I2C1_Read@retStatus 0075  
                           ?_PIN_MANAGER_Initialize 0070                          __end_of_I2C1_RestartEnable 0CFF  
        __end_of_EUSART_DefaultFramingErrorCallback 0004                ??_EUSART_DefaultFramingErrorCallback 0074  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 0003  
                   __end_of_ADC_GetConversionResult 0D5D                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 0076                                       I2C1_Read@data 0022  
                          ?_INT_SetInterruptHandler 0074                            __end_of_EUSART_IsRxReady 0D40  
                          __end_of_EUSART_IsTxReady 0E27                                  __end_of_unpackLong 04AD  
                          __end_of_CLOCK_Initialize 0DB8                                  __end_of_unpackWord 0DF1  
                                     __pstringtext1 076F                                       __pstringtext2 07FB  
                                     __pstringtext3 080F                                       ADC2Amp@result 0042  
                                   ??_I2C1_EVENT_RX 0070                                     ??_I2C1_EVENT_TX 0071  
                                      ___aldiv@sign 0035                                   _I2C1_DataTransmit 0D31  
                                        _TX1STAbits 019E                                  ?_I2C1_DataTransmit 0070  
                               SSPA_getTemp@channel 004C                                        ADC2Amp@value 003E  
                                 ?_I2C1_DataReceive 0070                                  EUSART_Write@txData 0074  
                                     SendNack@error 0026                      __end_of_PIN_MANAGER_Initialize 0468  
                     __end_of_I2C1_StatusFlagsClear 0D0D                                  ??_I2C1_DataReceive 0070  
                                      ADC2Celsius@v 003A                          I2C1_EVENT_TX@retEventState 0071  
                               ??_I2C1_DataTransmit 0070  
