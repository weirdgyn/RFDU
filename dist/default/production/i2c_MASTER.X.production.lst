

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 14:21:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   108                           	dabs	1,0x7E,2
   109     0000                     
   110                           ; Generated 07/09/2023 GMT
   111                           ; 
   112                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC16F1618 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     0111                     	;# 
   201     0112                     	;# 
   202     0113                     	;# 
   203     0114                     	;# 
   204     0115                     	;# 
   205     0116                     	;# 
   206     0117                     	;# 
   207     0118                     	;# 
   208     0119                     	;# 
   209     011C                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     018E                     	;# 
   213     0191                     	;# 
   214     0191                     	;# 
   215     0192                     	;# 
   216     0193                     	;# 
   217     0193                     	;# 
   218     0194                     	;# 
   219     0195                     	;# 
   220     0196                     	;# 
   221     0197                     	;# 
   222     0199                     	;# 
   223     0199                     	;# 
   224     0199                     	;# 
   225     019A                     	;# 
   226     019A                     	;# 
   227     019A                     	;# 
   228     019B                     	;# 
   229     019B                     	;# 
   230     019B                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019C                     	;# 
   234     019C                     	;# 
   235     019C                     	;# 
   236     019D                     	;# 
   237     019D                     	;# 
   238     019D                     	;# 
   239     019E                     	;# 
   240     019E                     	;# 
   241     019E                     	;# 
   242     019F                     	;# 
   243     019F                     	;# 
   244     019F                     	;# 
   245     019F                     	;# 
   246     019F                     	;# 
   247     020C                     	;# 
   248     020D                     	;# 
   249     020E                     	;# 
   250     0211                     	;# 
   251     0211                     	;# 
   252     0212                     	;# 
   253     0212                     	;# 
   254     0213                     	;# 
   255     0213                     	;# 
   256     0214                     	;# 
   257     0214                     	;# 
   258     0215                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0216                     	;# 
   263     0216                     	;# 
   264     0217                     	;# 
   265     0217                     	;# 
   266     028C                     	;# 
   267     028D                     	;# 
   268     028E                     	;# 
   269     0291                     	;# 
   270     0291                     	;# 
   271     0292                     	;# 
   272     0293                     	;# 
   273     0294                     	;# 
   274     0298                     	;# 
   275     0298                     	;# 
   276     0299                     	;# 
   277     029A                     	;# 
   278     029B                     	;# 
   279     029E                     	;# 
   280     030C                     	;# 
   281     030D                     	;# 
   282     030E                     	;# 
   283     038C                     	;# 
   284     038D                     	;# 
   285     038E                     	;# 
   286     0391                     	;# 
   287     0392                     	;# 
   288     0393                     	;# 
   289     0394                     	;# 
   290     0395                     	;# 
   291     0396                     	;# 
   292     0397                     	;# 
   293     0398                     	;# 
   294     0399                     	;# 
   295     040E                     	;# 
   296     0413                     	;# 
   297     0413                     	;# 
   298     0414                     	;# 
   299     0414                     	;# 
   300     0415                     	;# 
   301     0416                     	;# 
   302     0417                     	;# 
   303     0418                     	;# 
   304     041A                     	;# 
   305     041A                     	;# 
   306     041B                     	;# 
   307     041B                     	;# 
   308     041C                     	;# 
   309     041D                     	;# 
   310     041E                     	;# 
   311     041F                     	;# 
   312     0493                     	;# 
   313     0494                     	;# 
   314     0495                     	;# 
   315     0496                     	;# 
   316     049A                     	;# 
   317     049B                     	;# 
   318     049C                     	;# 
   319     049D                     	;# 
   320     058C                     	;# 
   321     058C                     	;# 
   322     058D                     	;# 
   323     058E                     	;# 
   324     058E                     	;# 
   325     058F                     	;# 
   326     0590                     	;# 
   327     0590                     	;# 
   328     0591                     	;# 
   329     0592                     	;# 
   330     0592                     	;# 
   331     0593                     	;# 
   332     0594                     	;# 
   333     0594                     	;# 
   334     0595                     	;# 
   335     0596                     	;# 
   336     0596                     	;# 
   337     0597                     	;# 
   338     0598                     	;# 
   339     0599                     	;# 
   340     059A                     	;# 
   341     059B                     	;# 
   342     059B                     	;# 
   343     059C                     	;# 
   344     059D                     	;# 
   345     060C                     	;# 
   346     060C                     	;# 
   347     060D                     	;# 
   348     060E                     	;# 
   349     060F                     	;# 
   350     060F                     	;# 
   351     0610                     	;# 
   352     0611                     	;# 
   353     0612                     	;# 
   354     0613                     	;# 
   355     0614                     	;# 
   356     0617                     	;# 
   357     0617                     	;# 
   358     0618                     	;# 
   359     0619                     	;# 
   360     061A                     	;# 
   361     061A                     	;# 
   362     061B                     	;# 
   363     061C                     	;# 
   364     0691                     	;# 
   365     0692                     	;# 
   366     0693                     	;# 
   367     0694                     	;# 
   368     0695                     	;# 
   369     0696                     	;# 
   370     0697                     	;# 
   371     0699                     	;# 
   372     069A                     	;# 
   373     0711                     	;# 
   374     0712                     	;# 
   375     0713                     	;# 
   376     0714                     	;# 
   377     0715                     	;# 
   378     0718                     	;# 
   379     0718                     	;# 
   380     0719                     	;# 
   381     071A                     	;# 
   382     071A                     	;# 
   383     071B                     	;# 
   384     071C                     	;# 
   385     071D                     	;# 
   386     0791                     	;# 
   387     0791                     	;# 
   388     0792                     	;# 
   389     0793                     	;# 
   390     0793                     	;# 
   391     0794                     	;# 
   392     0795                     	;# 
   393     0795                     	;# 
   394     0796                     	;# 
   395     0797                     	;# 
   396     0797                     	;# 
   397     0798                     	;# 
   398     0799                     	;# 
   399     079A                     	;# 
   400     080C                     	;# 
   401     080C                     	;# 
   402     080D                     	;# 
   403     080E                     	;# 
   404     080E                     	;# 
   405     080F                     	;# 
   406     0810                     	;# 
   407     0810                     	;# 
   408     0811                     	;# 
   409     0812                     	;# 
   410     0812                     	;# 
   411     0813                     	;# 
   412     0814                     	;# 
   413     0815                     	;# 
   414     0816                     	;# 
   415     0817                     	;# 
   416     0818                     	;# 
   417     0819                     	;# 
   418     081A                     	;# 
   419     081A                     	;# 
   420     081B                     	;# 
   421     081C                     	;# 
   422     081C                     	;# 
   423     081D                     	;# 
   424     088C                     	;# 
   425     088D                     	;# 
   426     088E                     	;# 
   427     088F                     	;# 
   428     088F                     	;# 
   429     0890                     	;# 
   430     0891                     	;# 
   431     0892                     	;# 
   432     0893                     	;# 
   433     0893                     	;# 
   434     0894                     	;# 
   435     0895                     	;# 
   436     0896                     	;# 
   437     0897                     	;# 
   438     0897                     	;# 
   439     0898                     	;# 
   440     0899                     	;# 
   441     0D8C                     	;# 
   442     0D8C                     	;# 
   443     0D8D                     	;# 
   444     0D8E                     	;# 
   445     0D8F                     	;# 
   446     0D8F                     	;# 
   447     0D90                     	;# 
   448     0D91                     	;# 
   449     0D92                     	;# 
   450     0D92                     	;# 
   451     0D93                     	;# 
   452     0D94                     	;# 
   453     0D95                     	;# 
   454     0D95                     	;# 
   455     0D96                     	;# 
   456     0D97                     	;# 
   457     0D98                     	;# 
   458     0D99                     	;# 
   459     0D9A                     	;# 
   460     0D9B                     	;# 
   461     0D9C                     	;# 
   462     0D9D                     	;# 
   463     0D9E                     	;# 
   464     0D9E                     	;# 
   465     0D9F                     	;# 
   466     0DA0                     	;# 
   467     0DA1                     	;# 
   468     0DA1                     	;# 
   469     0DA2                     	;# 
   470     0DA3                     	;# 
   471     0DA4                     	;# 
   472     0DA4                     	;# 
   473     0DA5                     	;# 
   474     0DA6                     	;# 
   475     0DA7                     	;# 
   476     0DA7                     	;# 
   477     0DA8                     	;# 
   478     0DA9                     	;# 
   479     0DAA                     	;# 
   480     0DAB                     	;# 
   481     0DAC                     	;# 
   482     0DAD                     	;# 
   483     0DAE                     	;# 
   484     0DAF                     	;# 
   485     0E0F                     	;# 
   486     0E10                     	;# 
   487     0E11                     	;# 
   488     0E12                     	;# 
   489     0E13                     	;# 
   490     0E14                     	;# 
   491     0E15                     	;# 
   492     0E16                     	;# 
   493     0E17                     	;# 
   494     0E17                     	;# 
   495     0E18                     	;# 
   496     0E18                     	;# 
   497     0E19                     	;# 
   498     0E1A                     	;# 
   499     0E1B                     	;# 
   500     0E1B                     	;# 
   501     0E1C                     	;# 
   502     0E1D                     	;# 
   503     0E1E                     	;# 
   504     0E1E                     	;# 
   505     0E1F                     	;# 
   506     0E20                     	;# 
   507     0E21                     	;# 
   508     0E22                     	;# 
   509     0E23                     	;# 
   510     0E24                     	;# 
   511     0E25                     	;# 
   512     0E26                     	;# 
   513     0E27                     	;# 
   514     0E28                     	;# 
   515     0E29                     	;# 
   516     0E2A                     	;# 
   517     0E2B                     	;# 
   518     0E2C                     	;# 
   519     0E2D                     	;# 
   520     0E2E                     	;# 
   521     0E90                     	;# 
   522     0E91                     	;# 
   523     0E92                     	;# 
   524     0E94                     	;# 
   525     0E95                     	;# 
   526     0E9C                     	;# 
   527     0E9D                     	;# 
   528     0E9E                     	;# 
   529     0E9F                     	;# 
   530     0EA0                     	;# 
   531     0EA1                     	;# 
   532     0EA2                     	;# 
   533     0EA3                     	;# 
   534     0EA4                     	;# 
   535     0EA5                     	;# 
   536     0EA6                     	;# 
   537     0EA7                     	;# 
   538     0F0F                     	;# 
   539     0F10                     	;# 
   540     0F11                     	;# 
   541     0F12                     	;# 
   542     0F13                     	;# 
   543     0F14                     	;# 
   544     0F15                     	;# 
   545     0F16                     	;# 
   546     0F17                     	;# 
   547     0F18                     	;# 
   548     0F19                     	;# 
   549     0F1A                     	;# 
   550     0F1B                     	;# 
   551     0F1C                     	;# 
   552     0F1D                     	;# 
   553     0F1E                     	;# 
   554     0F1F                     	;# 
   555     0F20                     	;# 
   556     0F21                     	;# 
   557     0F22                     	;# 
   558     0F23                     	;# 
   559     0FE4                     	;# 
   560     0FE5                     	;# 
   561     0FE6                     	;# 
   562     0FE7                     	;# 
   563     0FE8                     	;# 
   564     0FE9                     	;# 
   565     0FEA                     	;# 
   566     0FEB                     	;# 
   567     0FED                     	;# 
   568     0FEE                     	;# 
   569     0FEF                     	;# 
   570     0000                     	;# 
   571     0001                     	;# 
   572     0002                     	;# 
   573     0003                     	;# 
   574     0004                     	;# 
   575     0005                     	;# 
   576     0006                     	;# 
   577     0007                     	;# 
   578     0008                     	;# 
   579     0009                     	;# 
   580     000A                     	;# 
   581     000B                     	;# 
   582     000C                     	;# 
   583     000D                     	;# 
   584     000E                     	;# 
   585     0010                     	;# 
   586     0011                     	;# 
   587     0012                     	;# 
   588     0013                     	;# 
   589     0014                     	;# 
   590     0015                     	;# 
   591     0016                     	;# 
   592     0016                     	;# 
   593     0017                     	;# 
   594     0018                     	;# 
   595     0019                     	;# 
   596     001A                     	;# 
   597     001A                     	;# 
   598     001B                     	;# 
   599     001B                     	;# 
   600     001C                     	;# 
   601     001D                     	;# 
   602     001E                     	;# 
   603     001F                     	;# 
   604     008C                     	;# 
   605     008D                     	;# 
   606     008E                     	;# 
   607     0090                     	;# 
   608     0091                     	;# 
   609     0092                     	;# 
   610     0093                     	;# 
   611     0094                     	;# 
   612     0095                     	;# 
   613     0096                     	;# 
   614     0098                     	;# 
   615     0099                     	;# 
   616     009A                     	;# 
   617     009B                     	;# 
   618     009B                     	;# 
   619     009C                     	;# 
   620     009D                     	;# 
   621     009E                     	;# 
   622     009F                     	;# 
   623     010C                     	;# 
   624     010D                     	;# 
   625     010E                     	;# 
   626     0111                     	;# 
   627     0112                     	;# 
   628     0113                     	;# 
   629     0114                     	;# 
   630     0115                     	;# 
   631     0116                     	;# 
   632     0117                     	;# 
   633     0118                     	;# 
   634     0119                     	;# 
   635     011C                     	;# 
   636     018C                     	;# 
   637     018D                     	;# 
   638     018E                     	;# 
   639     0191                     	;# 
   640     0191                     	;# 
   641     0192                     	;# 
   642     0193                     	;# 
   643     0193                     	;# 
   644     0194                     	;# 
   645     0195                     	;# 
   646     0196                     	;# 
   647     0197                     	;# 
   648     0199                     	;# 
   649     0199                     	;# 
   650     0199                     	;# 
   651     019A                     	;# 
   652     019A                     	;# 
   653     019A                     	;# 
   654     019B                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019B                     	;# 
   659     019C                     	;# 
   660     019C                     	;# 
   661     019C                     	;# 
   662     019D                     	;# 
   663     019D                     	;# 
   664     019D                     	;# 
   665     019E                     	;# 
   666     019E                     	;# 
   667     019E                     	;# 
   668     019F                     	;# 
   669     019F                     	;# 
   670     019F                     	;# 
   671     019F                     	;# 
   672     019F                     	;# 
   673     020C                     	;# 
   674     020D                     	;# 
   675     020E                     	;# 
   676     0211                     	;# 
   677     0211                     	;# 
   678     0212                     	;# 
   679     0212                     	;# 
   680     0213                     	;# 
   681     0213                     	;# 
   682     0214                     	;# 
   683     0214                     	;# 
   684     0215                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0216                     	;# 
   689     0216                     	;# 
   690     0217                     	;# 
   691     0217                     	;# 
   692     028C                     	;# 
   693     028D                     	;# 
   694     028E                     	;# 
   695     0291                     	;# 
   696     0291                     	;# 
   697     0292                     	;# 
   698     0293                     	;# 
   699     0294                     	;# 
   700     0298                     	;# 
   701     0298                     	;# 
   702     0299                     	;# 
   703     029A                     	;# 
   704     029B                     	;# 
   705     029E                     	;# 
   706     030C                     	;# 
   707     030D                     	;# 
   708     030E                     	;# 
   709     038C                     	;# 
   710     038D                     	;# 
   711     038E                     	;# 
   712     0391                     	;# 
   713     0392                     	;# 
   714     0393                     	;# 
   715     0394                     	;# 
   716     0395                     	;# 
   717     0396                     	;# 
   718     0397                     	;# 
   719     0398                     	;# 
   720     0399                     	;# 
   721     040E                     	;# 
   722     0413                     	;# 
   723     0413                     	;# 
   724     0414                     	;# 
   725     0414                     	;# 
   726     0415                     	;# 
   727     0416                     	;# 
   728     0417                     	;# 
   729     0418                     	;# 
   730     041A                     	;# 
   731     041A                     	;# 
   732     041B                     	;# 
   733     041B                     	;# 
   734     041C                     	;# 
   735     041D                     	;# 
   736     041E                     	;# 
   737     041F                     	;# 
   738     0493                     	;# 
   739     0494                     	;# 
   740     0495                     	;# 
   741     0496                     	;# 
   742     049A                     	;# 
   743     049B                     	;# 
   744     049C                     	;# 
   745     049D                     	;# 
   746     058C                     	;# 
   747     058C                     	;# 
   748     058D                     	;# 
   749     058E                     	;# 
   750     058E                     	;# 
   751     058F                     	;# 
   752     0590                     	;# 
   753     0590                     	;# 
   754     0591                     	;# 
   755     0592                     	;# 
   756     0592                     	;# 
   757     0593                     	;# 
   758     0594                     	;# 
   759     0594                     	;# 
   760     0595                     	;# 
   761     0596                     	;# 
   762     0596                     	;# 
   763     0597                     	;# 
   764     0598                     	;# 
   765     0599                     	;# 
   766     059A                     	;# 
   767     059B                     	;# 
   768     059B                     	;# 
   769     059C                     	;# 
   770     059D                     	;# 
   771     060C                     	;# 
   772     060C                     	;# 
   773     060D                     	;# 
   774     060E                     	;# 
   775     060F                     	;# 
   776     060F                     	;# 
   777     0610                     	;# 
   778     0611                     	;# 
   779     0612                     	;# 
   780     0613                     	;# 
   781     0614                     	;# 
   782     0617                     	;# 
   783     0617                     	;# 
   784     0618                     	;# 
   785     0619                     	;# 
   786     061A                     	;# 
   787     061A                     	;# 
   788     061B                     	;# 
   789     061C                     	;# 
   790     0691                     	;# 
   791     0692                     	;# 
   792     0693                     	;# 
   793     0694                     	;# 
   794     0695                     	;# 
   795     0696                     	;# 
   796     0697                     	;# 
   797     0699                     	;# 
   798     069A                     	;# 
   799     0711                     	;# 
   800     0712                     	;# 
   801     0713                     	;# 
   802     0714                     	;# 
   803     0715                     	;# 
   804     0718                     	;# 
   805     0718                     	;# 
   806     0719                     	;# 
   807     071A                     	;# 
   808     071A                     	;# 
   809     071B                     	;# 
   810     071C                     	;# 
   811     071D                     	;# 
   812     0791                     	;# 
   813     0791                     	;# 
   814     0792                     	;# 
   815     0793                     	;# 
   816     0793                     	;# 
   817     0794                     	;# 
   818     0795                     	;# 
   819     0795                     	;# 
   820     0796                     	;# 
   821     0797                     	;# 
   822     0797                     	;# 
   823     0798                     	;# 
   824     0799                     	;# 
   825     079A                     	;# 
   826     080C                     	;# 
   827     080C                     	;# 
   828     080D                     	;# 
   829     080E                     	;# 
   830     080E                     	;# 
   831     080F                     	;# 
   832     0810                     	;# 
   833     0810                     	;# 
   834     0811                     	;# 
   835     0812                     	;# 
   836     0812                     	;# 
   837     0813                     	;# 
   838     0814                     	;# 
   839     0815                     	;# 
   840     0816                     	;# 
   841     0817                     	;# 
   842     0818                     	;# 
   843     0819                     	;# 
   844     081A                     	;# 
   845     081A                     	;# 
   846     081B                     	;# 
   847     081C                     	;# 
   848     081C                     	;# 
   849     081D                     	;# 
   850     088C                     	;# 
   851     088D                     	;# 
   852     088E                     	;# 
   853     088F                     	;# 
   854     088F                     	;# 
   855     0890                     	;# 
   856     0891                     	;# 
   857     0892                     	;# 
   858     0893                     	;# 
   859     0893                     	;# 
   860     0894                     	;# 
   861     0895                     	;# 
   862     0896                     	;# 
   863     0897                     	;# 
   864     0897                     	;# 
   865     0898                     	;# 
   866     0899                     	;# 
   867     0D8C                     	;# 
   868     0D8C                     	;# 
   869     0D8D                     	;# 
   870     0D8E                     	;# 
   871     0D8F                     	;# 
   872     0D8F                     	;# 
   873     0D90                     	;# 
   874     0D91                     	;# 
   875     0D92                     	;# 
   876     0D92                     	;# 
   877     0D93                     	;# 
   878     0D94                     	;# 
   879     0D95                     	;# 
   880     0D95                     	;# 
   881     0D96                     	;# 
   882     0D97                     	;# 
   883     0D98                     	;# 
   884     0D99                     	;# 
   885     0D9A                     	;# 
   886     0D9B                     	;# 
   887     0D9C                     	;# 
   888     0D9D                     	;# 
   889     0D9E                     	;# 
   890     0D9E                     	;# 
   891     0D9F                     	;# 
   892     0DA0                     	;# 
   893     0DA1                     	;# 
   894     0DA1                     	;# 
   895     0DA2                     	;# 
   896     0DA3                     	;# 
   897     0DA4                     	;# 
   898     0DA4                     	;# 
   899     0DA5                     	;# 
   900     0DA6                     	;# 
   901     0DA7                     	;# 
   902     0DA7                     	;# 
   903     0DA8                     	;# 
   904     0DA9                     	;# 
   905     0DAA                     	;# 
   906     0DAB                     	;# 
   907     0DAC                     	;# 
   908     0DAD                     	;# 
   909     0DAE                     	;# 
   910     0DAF                     	;# 
   911     0E0F                     	;# 
   912     0E10                     	;# 
   913     0E11                     	;# 
   914     0E12                     	;# 
   915     0E13                     	;# 
   916     0E14                     	;# 
   917     0E15                     	;# 
   918     0E16                     	;# 
   919     0E17                     	;# 
   920     0E17                     	;# 
   921     0E18                     	;# 
   922     0E18                     	;# 
   923     0E19                     	;# 
   924     0E1A                     	;# 
   925     0E1B                     	;# 
   926     0E1B                     	;# 
   927     0E1C                     	;# 
   928     0E1D                     	;# 
   929     0E1E                     	;# 
   930     0E1E                     	;# 
   931     0E1F                     	;# 
   932     0E20                     	;# 
   933     0E21                     	;# 
   934     0E22                     	;# 
   935     0E23                     	;# 
   936     0E24                     	;# 
   937     0E25                     	;# 
   938     0E26                     	;# 
   939     0E27                     	;# 
   940     0E28                     	;# 
   941     0E29                     	;# 
   942     0E2A                     	;# 
   943     0E2B                     	;# 
   944     0E2C                     	;# 
   945     0E2D                     	;# 
   946     0E2E                     	;# 
   947     0E90                     	;# 
   948     0E91                     	;# 
   949     0E92                     	;# 
   950     0E94                     	;# 
   951     0E95                     	;# 
   952     0E9C                     	;# 
   953     0E9D                     	;# 
   954     0E9E                     	;# 
   955     0E9F                     	;# 
   956     0EA0                     	;# 
   957     0EA1                     	;# 
   958     0EA2                     	;# 
   959     0EA3                     	;# 
   960     0EA4                     	;# 
   961     0EA5                     	;# 
   962     0EA6                     	;# 
   963     0EA7                     	;# 
   964     0F0F                     	;# 
   965     0F10                     	;# 
   966     0F11                     	;# 
   967     0F12                     	;# 
   968     0F13                     	;# 
   969     0F14                     	;# 
   970     0F15                     	;# 
   971     0F16                     	;# 
   972     0F17                     	;# 
   973     0F18                     	;# 
   974     0F19                     	;# 
   975     0F1A                     	;# 
   976     0F1B                     	;# 
   977     0F1C                     	;# 
   978     0F1D                     	;# 
   979     0F1E                     	;# 
   980     0F1F                     	;# 
   981     0F20                     	;# 
   982     0F21                     	;# 
   983     0F22                     	;# 
   984     0F23                     	;# 
   985     0FE4                     	;# 
   986     0FE5                     	;# 
   987     0FE6                     	;# 
   988     0FE7                     	;# 
   989     0FE8                     	;# 
   990     0FE9                     	;# 
   991     0FEA                     	;# 
   992     0FEB                     	;# 
   993     0FED                     	;# 
   994     0FEE                     	;# 
   995     0FEF                     	;# 
   996     0000                     	;# 
   997     0001                     	;# 
   998     0002                     	;# 
   999     0003                     	;# 
  1000     0004                     	;# 
  1001     0005                     	;# 
  1002     0006                     	;# 
  1003     0007                     	;# 
  1004     0008                     	;# 
  1005     0009                     	;# 
  1006     000A                     	;# 
  1007     000B                     	;# 
  1008     000C                     	;# 
  1009     000D                     	;# 
  1010     000E                     	;# 
  1011     0010                     	;# 
  1012     0011                     	;# 
  1013     0012                     	;# 
  1014     0013                     	;# 
  1015     0014                     	;# 
  1016     0015                     	;# 
  1017     0016                     	;# 
  1018     0016                     	;# 
  1019     0017                     	;# 
  1020     0018                     	;# 
  1021     0019                     	;# 
  1022     001A                     	;# 
  1023     001A                     	;# 
  1024     001B                     	;# 
  1025     001B                     	;# 
  1026     001C                     	;# 
  1027     001D                     	;# 
  1028     001E                     	;# 
  1029     001F                     	;# 
  1030     008C                     	;# 
  1031     008D                     	;# 
  1032     008E                     	;# 
  1033     0090                     	;# 
  1034     0091                     	;# 
  1035     0092                     	;# 
  1036     0093                     	;# 
  1037     0094                     	;# 
  1038     0095                     	;# 
  1039     0096                     	;# 
  1040     0098                     	;# 
  1041     0099                     	;# 
  1042     009A                     	;# 
  1043     009B                     	;# 
  1044     009B                     	;# 
  1045     009C                     	;# 
  1046     009D                     	;# 
  1047     009E                     	;# 
  1048     009F                     	;# 
  1049     010C                     	;# 
  1050     010D                     	;# 
  1051     010E                     	;# 
  1052     0111                     	;# 
  1053     0112                     	;# 
  1054     0113                     	;# 
  1055     0114                     	;# 
  1056     0115                     	;# 
  1057     0116                     	;# 
  1058     0117                     	;# 
  1059     0118                     	;# 
  1060     0119                     	;# 
  1061     011C                     	;# 
  1062     018C                     	;# 
  1063     018D                     	;# 
  1064     018E                     	;# 
  1065     0191                     	;# 
  1066     0191                     	;# 
  1067     0192                     	;# 
  1068     0193                     	;# 
  1069     0193                     	;# 
  1070     0194                     	;# 
  1071     0195                     	;# 
  1072     0196                     	;# 
  1073     0197                     	;# 
  1074     0199                     	;# 
  1075     0199                     	;# 
  1076     0199                     	;# 
  1077     019A                     	;# 
  1078     019A                     	;# 
  1079     019A                     	;# 
  1080     019B                     	;# 
  1081     019B                     	;# 
  1082     019B                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019C                     	;# 
  1086     019C                     	;# 
  1087     019C                     	;# 
  1088     019D                     	;# 
  1089     019D                     	;# 
  1090     019D                     	;# 
  1091     019E                     	;# 
  1092     019E                     	;# 
  1093     019E                     	;# 
  1094     019F                     	;# 
  1095     019F                     	;# 
  1096     019F                     	;# 
  1097     019F                     	;# 
  1098     019F                     	;# 
  1099     020C                     	;# 
  1100     020D                     	;# 
  1101     020E                     	;# 
  1102     0211                     	;# 
  1103     0211                     	;# 
  1104     0212                     	;# 
  1105     0212                     	;# 
  1106     0213                     	;# 
  1107     0213                     	;# 
  1108     0214                     	;# 
  1109     0214                     	;# 
  1110     0215                     	;# 
  1111     0215                     	;# 
  1112     0215                     	;# 
  1113     0215                     	;# 
  1114     0216                     	;# 
  1115     0216                     	;# 
  1116     0217                     	;# 
  1117     0217                     	;# 
  1118     028C                     	;# 
  1119     028D                     	;# 
  1120     028E                     	;# 
  1121     0291                     	;# 
  1122     0291                     	;# 
  1123     0292                     	;# 
  1124     0293                     	;# 
  1125     0294                     	;# 
  1126     0298                     	;# 
  1127     0298                     	;# 
  1128     0299                     	;# 
  1129     029A                     	;# 
  1130     029B                     	;# 
  1131     029E                     	;# 
  1132     030C                     	;# 
  1133     030D                     	;# 
  1134     030E                     	;# 
  1135     038C                     	;# 
  1136     038D                     	;# 
  1137     038E                     	;# 
  1138     0391                     	;# 
  1139     0392                     	;# 
  1140     0393                     	;# 
  1141     0394                     	;# 
  1142     0395                     	;# 
  1143     0396                     	;# 
  1144     0397                     	;# 
  1145     0398                     	;# 
  1146     0399                     	;# 
  1147     040E                     	;# 
  1148     0413                     	;# 
  1149     0413                     	;# 
  1150     0414                     	;# 
  1151     0414                     	;# 
  1152     0415                     	;# 
  1153     0416                     	;# 
  1154     0417                     	;# 
  1155     0418                     	;# 
  1156     041A                     	;# 
  1157     041A                     	;# 
  1158     041B                     	;# 
  1159     041B                     	;# 
  1160     041C                     	;# 
  1161     041D                     	;# 
  1162     041E                     	;# 
  1163     041F                     	;# 
  1164     0493                     	;# 
  1165     0494                     	;# 
  1166     0495                     	;# 
  1167     0496                     	;# 
  1168     049A                     	;# 
  1169     049B                     	;# 
  1170     049C                     	;# 
  1171     049D                     	;# 
  1172     058C                     	;# 
  1173     058C                     	;# 
  1174     058D                     	;# 
  1175     058E                     	;# 
  1176     058E                     	;# 
  1177     058F                     	;# 
  1178     0590                     	;# 
  1179     0590                     	;# 
  1180     0591                     	;# 
  1181     0592                     	;# 
  1182     0592                     	;# 
  1183     0593                     	;# 
  1184     0594                     	;# 
  1185     0594                     	;# 
  1186     0595                     	;# 
  1187     0596                     	;# 
  1188     0596                     	;# 
  1189     0597                     	;# 
  1190     0598                     	;# 
  1191     0599                     	;# 
  1192     059A                     	;# 
  1193     059B                     	;# 
  1194     059B                     	;# 
  1195     059C                     	;# 
  1196     059D                     	;# 
  1197     060C                     	;# 
  1198     060C                     	;# 
  1199     060D                     	;# 
  1200     060E                     	;# 
  1201     060F                     	;# 
  1202     060F                     	;# 
  1203     0610                     	;# 
  1204     0611                     	;# 
  1205     0612                     	;# 
  1206     0613                     	;# 
  1207     0614                     	;# 
  1208     0617                     	;# 
  1209     0617                     	;# 
  1210     0618                     	;# 
  1211     0619                     	;# 
  1212     061A                     	;# 
  1213     061A                     	;# 
  1214     061B                     	;# 
  1215     061C                     	;# 
  1216     0691                     	;# 
  1217     0692                     	;# 
  1218     0693                     	;# 
  1219     0694                     	;# 
  1220     0695                     	;# 
  1221     0696                     	;# 
  1222     0697                     	;# 
  1223     0699                     	;# 
  1224     069A                     	;# 
  1225     0711                     	;# 
  1226     0712                     	;# 
  1227     0713                     	;# 
  1228     0714                     	;# 
  1229     0715                     	;# 
  1230     0718                     	;# 
  1231     0718                     	;# 
  1232     0719                     	;# 
  1233     071A                     	;# 
  1234     071A                     	;# 
  1235     071B                     	;# 
  1236     071C                     	;# 
  1237     071D                     	;# 
  1238     0791                     	;# 
  1239     0791                     	;# 
  1240     0792                     	;# 
  1241     0793                     	;# 
  1242     0793                     	;# 
  1243     0794                     	;# 
  1244     0795                     	;# 
  1245     0795                     	;# 
  1246     0796                     	;# 
  1247     0797                     	;# 
  1248     0797                     	;# 
  1249     0798                     	;# 
  1250     0799                     	;# 
  1251     079A                     	;# 
  1252     080C                     	;# 
  1253     080C                     	;# 
  1254     080D                     	;# 
  1255     080E                     	;# 
  1256     080E                     	;# 
  1257     080F                     	;# 
  1258     0810                     	;# 
  1259     0810                     	;# 
  1260     0811                     	;# 
  1261     0812                     	;# 
  1262     0812                     	;# 
  1263     0813                     	;# 
  1264     0814                     	;# 
  1265     0815                     	;# 
  1266     0816                     	;# 
  1267     0817                     	;# 
  1268     0818                     	;# 
  1269     0819                     	;# 
  1270     081A                     	;# 
  1271     081A                     	;# 
  1272     081B                     	;# 
  1273     081C                     	;# 
  1274     081C                     	;# 
  1275     081D                     	;# 
  1276     088C                     	;# 
  1277     088D                     	;# 
  1278     088E                     	;# 
  1279     088F                     	;# 
  1280     088F                     	;# 
  1281     0890                     	;# 
  1282     0891                     	;# 
  1283     0892                     	;# 
  1284     0893                     	;# 
  1285     0893                     	;# 
  1286     0894                     	;# 
  1287     0895                     	;# 
  1288     0896                     	;# 
  1289     0897                     	;# 
  1290     0897                     	;# 
  1291     0898                     	;# 
  1292     0899                     	;# 
  1293     0D8C                     	;# 
  1294     0D8C                     	;# 
  1295     0D8D                     	;# 
  1296     0D8E                     	;# 
  1297     0D8F                     	;# 
  1298     0D8F                     	;# 
  1299     0D90                     	;# 
  1300     0D91                     	;# 
  1301     0D92                     	;# 
  1302     0D92                     	;# 
  1303     0D93                     	;# 
  1304     0D94                     	;# 
  1305     0D95                     	;# 
  1306     0D95                     	;# 
  1307     0D96                     	;# 
  1308     0D97                     	;# 
  1309     0D98                     	;# 
  1310     0D99                     	;# 
  1311     0D9A                     	;# 
  1312     0D9B                     	;# 
  1313     0D9C                     	;# 
  1314     0D9D                     	;# 
  1315     0D9E                     	;# 
  1316     0D9E                     	;# 
  1317     0D9F                     	;# 
  1318     0DA0                     	;# 
  1319     0DA1                     	;# 
  1320     0DA1                     	;# 
  1321     0DA2                     	;# 
  1322     0DA3                     	;# 
  1323     0DA4                     	;# 
  1324     0DA4                     	;# 
  1325     0DA5                     	;# 
  1326     0DA6                     	;# 
  1327     0DA7                     	;# 
  1328     0DA7                     	;# 
  1329     0DA8                     	;# 
  1330     0DA9                     	;# 
  1331     0DAA                     	;# 
  1332     0DAB                     	;# 
  1333     0DAC                     	;# 
  1334     0DAD                     	;# 
  1335     0DAE                     	;# 
  1336     0DAF                     	;# 
  1337     0E0F                     	;# 
  1338     0E10                     	;# 
  1339     0E11                     	;# 
  1340     0E12                     	;# 
  1341     0E13                     	;# 
  1342     0E14                     	;# 
  1343     0E15                     	;# 
  1344     0E16                     	;# 
  1345     0E17                     	;# 
  1346     0E17                     	;# 
  1347     0E18                     	;# 
  1348     0E18                     	;# 
  1349     0E19                     	;# 
  1350     0E1A                     	;# 
  1351     0E1B                     	;# 
  1352     0E1B                     	;# 
  1353     0E1C                     	;# 
  1354     0E1D                     	;# 
  1355     0E1E                     	;# 
  1356     0E1E                     	;# 
  1357     0E1F                     	;# 
  1358     0E20                     	;# 
  1359     0E21                     	;# 
  1360     0E22                     	;# 
  1361     0E23                     	;# 
  1362     0E24                     	;# 
  1363     0E25                     	;# 
  1364     0E26                     	;# 
  1365     0E27                     	;# 
  1366     0E28                     	;# 
  1367     0E29                     	;# 
  1368     0E2A                     	;# 
  1369     0E2B                     	;# 
  1370     0E2C                     	;# 
  1371     0E2D                     	;# 
  1372     0E2E                     	;# 
  1373     0E90                     	;# 
  1374     0E91                     	;# 
  1375     0E92                     	;# 
  1376     0E94                     	;# 
  1377     0E95                     	;# 
  1378     0E9C                     	;# 
  1379     0E9D                     	;# 
  1380     0E9E                     	;# 
  1381     0E9F                     	;# 
  1382     0EA0                     	;# 
  1383     0EA1                     	;# 
  1384     0EA2                     	;# 
  1385     0EA3                     	;# 
  1386     0EA4                     	;# 
  1387     0EA5                     	;# 
  1388     0EA6                     	;# 
  1389     0EA7                     	;# 
  1390     0F0F                     	;# 
  1391     0F10                     	;# 
  1392     0F11                     	;# 
  1393     0F12                     	;# 
  1394     0F13                     	;# 
  1395     0F14                     	;# 
  1396     0F15                     	;# 
  1397     0F16                     	;# 
  1398     0F17                     	;# 
  1399     0F18                     	;# 
  1400     0F19                     	;# 
  1401     0F1A                     	;# 
  1402     0F1B                     	;# 
  1403     0F1C                     	;# 
  1404     0F1D                     	;# 
  1405     0F1E                     	;# 
  1406     0F1F                     	;# 
  1407     0F20                     	;# 
  1408     0F21                     	;# 
  1409     0F22                     	;# 
  1410     0F23                     	;# 
  1411     0FE4                     	;# 
  1412     0FE5                     	;# 
  1413     0FE6                     	;# 
  1414     0FE7                     	;# 
  1415     0FE8                     	;# 
  1416     0FE9                     	;# 
  1417     0FEA                     	;# 
  1418     0FEB                     	;# 
  1419     0FED                     	;# 
  1420     0FEE                     	;# 
  1421     0FEF                     	;# 
  1422     0000                     	;# 
  1423     0001                     	;# 
  1424     0002                     	;# 
  1425     0003                     	;# 
  1426     0004                     	;# 
  1427     0005                     	;# 
  1428     0006                     	;# 
  1429     0007                     	;# 
  1430     0008                     	;# 
  1431     0009                     	;# 
  1432     000A                     	;# 
  1433     000B                     	;# 
  1434     000C                     	;# 
  1435     000D                     	;# 
  1436     000E                     	;# 
  1437     0010                     	;# 
  1438     0011                     	;# 
  1439     0012                     	;# 
  1440     0013                     	;# 
  1441     0014                     	;# 
  1442     0015                     	;# 
  1443     0016                     	;# 
  1444     0016                     	;# 
  1445     0017                     	;# 
  1446     0018                     	;# 
  1447     0019                     	;# 
  1448     001A                     	;# 
  1449     001A                     	;# 
  1450     001B                     	;# 
  1451     001B                     	;# 
  1452     001C                     	;# 
  1453     001D                     	;# 
  1454     001E                     	;# 
  1455     001F                     	;# 
  1456     008C                     	;# 
  1457     008D                     	;# 
  1458     008E                     	;# 
  1459     0090                     	;# 
  1460     0091                     	;# 
  1461     0092                     	;# 
  1462     0093                     	;# 
  1463     0094                     	;# 
  1464     0095                     	;# 
  1465     0096                     	;# 
  1466     0098                     	;# 
  1467     0099                     	;# 
  1468     009A                     	;# 
  1469     009B                     	;# 
  1470     009B                     	;# 
  1471     009C                     	;# 
  1472     009D                     	;# 
  1473     009E                     	;# 
  1474     009F                     	;# 
  1475     010C                     	;# 
  1476     010D                     	;# 
  1477     010E                     	;# 
  1478     0111                     	;# 
  1479     0112                     	;# 
  1480     0113                     	;# 
  1481     0114                     	;# 
  1482     0115                     	;# 
  1483     0116                     	;# 
  1484     0117                     	;# 
  1485     0118                     	;# 
  1486     0119                     	;# 
  1487     011C                     	;# 
  1488     018C                     	;# 
  1489     018D                     	;# 
  1490     018E                     	;# 
  1491     0191                     	;# 
  1492     0191                     	;# 
  1493     0192                     	;# 
  1494     0193                     	;# 
  1495     0193                     	;# 
  1496     0194                     	;# 
  1497     0195                     	;# 
  1498     0196                     	;# 
  1499     0197                     	;# 
  1500     0199                     	;# 
  1501     0199                     	;# 
  1502     0199                     	;# 
  1503     019A                     	;# 
  1504     019A                     	;# 
  1505     019A                     	;# 
  1506     019B                     	;# 
  1507     019B                     	;# 
  1508     019B                     	;# 
  1509     019B                     	;# 
  1510     019B                     	;# 
  1511     019C                     	;# 
  1512     019C                     	;# 
  1513     019C                     	;# 
  1514     019D                     	;# 
  1515     019D                     	;# 
  1516     019D                     	;# 
  1517     019E                     	;# 
  1518     019E                     	;# 
  1519     019E                     	;# 
  1520     019F                     	;# 
  1521     019F                     	;# 
  1522     019F                     	;# 
  1523     019F                     	;# 
  1524     019F                     	;# 
  1525     020C                     	;# 
  1526     020D                     	;# 
  1527     020E                     	;# 
  1528     0211                     	;# 
  1529     0211                     	;# 
  1530     0212                     	;# 
  1531     0212                     	;# 
  1532     0213                     	;# 
  1533     0213                     	;# 
  1534     0214                     	;# 
  1535     0214                     	;# 
  1536     0215                     	;# 
  1537     0215                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0216                     	;# 
  1541     0216                     	;# 
  1542     0217                     	;# 
  1543     0217                     	;# 
  1544     028C                     	;# 
  1545     028D                     	;# 
  1546     028E                     	;# 
  1547     0291                     	;# 
  1548     0291                     	;# 
  1549     0292                     	;# 
  1550     0293                     	;# 
  1551     0294                     	;# 
  1552     0298                     	;# 
  1553     0298                     	;# 
  1554     0299                     	;# 
  1555     029A                     	;# 
  1556     029B                     	;# 
  1557     029E                     	;# 
  1558     030C                     	;# 
  1559     030D                     	;# 
  1560     030E                     	;# 
  1561     038C                     	;# 
  1562     038D                     	;# 
  1563     038E                     	;# 
  1564     0391                     	;# 
  1565     0392                     	;# 
  1566     0393                     	;# 
  1567     0394                     	;# 
  1568     0395                     	;# 
  1569     0396                     	;# 
  1570     0397                     	;# 
  1571     0398                     	;# 
  1572     0399                     	;# 
  1573     040E                     	;# 
  1574     0413                     	;# 
  1575     0413                     	;# 
  1576     0414                     	;# 
  1577     0414                     	;# 
  1578     0415                     	;# 
  1579     0416                     	;# 
  1580     0417                     	;# 
  1581     0418                     	;# 
  1582     041A                     	;# 
  1583     041A                     	;# 
  1584     041B                     	;# 
  1585     041B                     	;# 
  1586     041C                     	;# 
  1587     041D                     	;# 
  1588     041E                     	;# 
  1589     041F                     	;# 
  1590     0493                     	;# 
  1591     0494                     	;# 
  1592     0495                     	;# 
  1593     0496                     	;# 
  1594     049A                     	;# 
  1595     049B                     	;# 
  1596     049C                     	;# 
  1597     049D                     	;# 
  1598     058C                     	;# 
  1599     058C                     	;# 
  1600     058D                     	;# 
  1601     058E                     	;# 
  1602     058E                     	;# 
  1603     058F                     	;# 
  1604     0590                     	;# 
  1605     0590                     	;# 
  1606     0591                     	;# 
  1607     0592                     	;# 
  1608     0592                     	;# 
  1609     0593                     	;# 
  1610     0594                     	;# 
  1611     0594                     	;# 
  1612     0595                     	;# 
  1613     0596                     	;# 
  1614     0596                     	;# 
  1615     0597                     	;# 
  1616     0598                     	;# 
  1617     0599                     	;# 
  1618     059A                     	;# 
  1619     059B                     	;# 
  1620     059B                     	;# 
  1621     059C                     	;# 
  1622     059D                     	;# 
  1623     060C                     	;# 
  1624     060C                     	;# 
  1625     060D                     	;# 
  1626     060E                     	;# 
  1627     060F                     	;# 
  1628     060F                     	;# 
  1629     0610                     	;# 
  1630     0611                     	;# 
  1631     0612                     	;# 
  1632     0613                     	;# 
  1633     0614                     	;# 
  1634     0617                     	;# 
  1635     0617                     	;# 
  1636     0618                     	;# 
  1637     0619                     	;# 
  1638     061A                     	;# 
  1639     061A                     	;# 
  1640     061B                     	;# 
  1641     061C                     	;# 
  1642     0691                     	;# 
  1643     0692                     	;# 
  1644     0693                     	;# 
  1645     0694                     	;# 
  1646     0695                     	;# 
  1647     0696                     	;# 
  1648     0697                     	;# 
  1649     0699                     	;# 
  1650     069A                     	;# 
  1651     0711                     	;# 
  1652     0712                     	;# 
  1653     0713                     	;# 
  1654     0714                     	;# 
  1655     0715                     	;# 
  1656     0718                     	;# 
  1657     0718                     	;# 
  1658     0719                     	;# 
  1659     071A                     	;# 
  1660     071A                     	;# 
  1661     071B                     	;# 
  1662     071C                     	;# 
  1663     071D                     	;# 
  1664     0791                     	;# 
  1665     0791                     	;# 
  1666     0792                     	;# 
  1667     0793                     	;# 
  1668     0793                     	;# 
  1669     0794                     	;# 
  1670     0795                     	;# 
  1671     0795                     	;# 
  1672     0796                     	;# 
  1673     0797                     	;# 
  1674     0797                     	;# 
  1675     0798                     	;# 
  1676     0799                     	;# 
  1677     079A                     	;# 
  1678     080C                     	;# 
  1679     080C                     	;# 
  1680     080D                     	;# 
  1681     080E                     	;# 
  1682     080E                     	;# 
  1683     080F                     	;# 
  1684     0810                     	;# 
  1685     0810                     	;# 
  1686     0811                     	;# 
  1687     0812                     	;# 
  1688     0812                     	;# 
  1689     0813                     	;# 
  1690     0814                     	;# 
  1691     0815                     	;# 
  1692     0816                     	;# 
  1693     0817                     	;# 
  1694     0818                     	;# 
  1695     0819                     	;# 
  1696     081A                     	;# 
  1697     081A                     	;# 
  1698     081B                     	;# 
  1699     081C                     	;# 
  1700     081C                     	;# 
  1701     081D                     	;# 
  1702     088C                     	;# 
  1703     088D                     	;# 
  1704     088E                     	;# 
  1705     088F                     	;# 
  1706     088F                     	;# 
  1707     0890                     	;# 
  1708     0891                     	;# 
  1709     0892                     	;# 
  1710     0893                     	;# 
  1711     0893                     	;# 
  1712     0894                     	;# 
  1713     0895                     	;# 
  1714     0896                     	;# 
  1715     0897                     	;# 
  1716     0897                     	;# 
  1717     0898                     	;# 
  1718     0899                     	;# 
  1719     0D8C                     	;# 
  1720     0D8C                     	;# 
  1721     0D8D                     	;# 
  1722     0D8E                     	;# 
  1723     0D8F                     	;# 
  1724     0D8F                     	;# 
  1725     0D90                     	;# 
  1726     0D91                     	;# 
  1727     0D92                     	;# 
  1728     0D92                     	;# 
  1729     0D93                     	;# 
  1730     0D94                     	;# 
  1731     0D95                     	;# 
  1732     0D95                     	;# 
  1733     0D96                     	;# 
  1734     0D97                     	;# 
  1735     0D98                     	;# 
  1736     0D99                     	;# 
  1737     0D9A                     	;# 
  1738     0D9B                     	;# 
  1739     0D9C                     	;# 
  1740     0D9D                     	;# 
  1741     0D9E                     	;# 
  1742     0D9E                     	;# 
  1743     0D9F                     	;# 
  1744     0DA0                     	;# 
  1745     0DA1                     	;# 
  1746     0DA1                     	;# 
  1747     0DA2                     	;# 
  1748     0DA3                     	;# 
  1749     0DA4                     	;# 
  1750     0DA4                     	;# 
  1751     0DA5                     	;# 
  1752     0DA6                     	;# 
  1753     0DA7                     	;# 
  1754     0DA7                     	;# 
  1755     0DA8                     	;# 
  1756     0DA9                     	;# 
  1757     0DAA                     	;# 
  1758     0DAB                     	;# 
  1759     0DAC                     	;# 
  1760     0DAD                     	;# 
  1761     0DAE                     	;# 
  1762     0DAF                     	;# 
  1763     0E0F                     	;# 
  1764     0E10                     	;# 
  1765     0E11                     	;# 
  1766     0E12                     	;# 
  1767     0E13                     	;# 
  1768     0E14                     	;# 
  1769     0E15                     	;# 
  1770     0E16                     	;# 
  1771     0E17                     	;# 
  1772     0E17                     	;# 
  1773     0E18                     	;# 
  1774     0E18                     	;# 
  1775     0E19                     	;# 
  1776     0E1A                     	;# 
  1777     0E1B                     	;# 
  1778     0E1B                     	;# 
  1779     0E1C                     	;# 
  1780     0E1D                     	;# 
  1781     0E1E                     	;# 
  1782     0E1E                     	;# 
  1783     0E1F                     	;# 
  1784     0E20                     	;# 
  1785     0E21                     	;# 
  1786     0E22                     	;# 
  1787     0E23                     	;# 
  1788     0E24                     	;# 
  1789     0E25                     	;# 
  1790     0E26                     	;# 
  1791     0E27                     	;# 
  1792     0E28                     	;# 
  1793     0E29                     	;# 
  1794     0E2A                     	;# 
  1795     0E2B                     	;# 
  1796     0E2C                     	;# 
  1797     0E2D                     	;# 
  1798     0E2E                     	;# 
  1799     0E90                     	;# 
  1800     0E91                     	;# 
  1801     0E92                     	;# 
  1802     0E94                     	;# 
  1803     0E95                     	;# 
  1804     0E9C                     	;# 
  1805     0E9D                     	;# 
  1806     0E9E                     	;# 
  1807     0E9F                     	;# 
  1808     0EA0                     	;# 
  1809     0EA1                     	;# 
  1810     0EA2                     	;# 
  1811     0EA3                     	;# 
  1812     0EA4                     	;# 
  1813     0EA5                     	;# 
  1814     0EA6                     	;# 
  1815     0EA7                     	;# 
  1816     0F0F                     	;# 
  1817     0F10                     	;# 
  1818     0F11                     	;# 
  1819     0F12                     	;# 
  1820     0F13                     	;# 
  1821     0F14                     	;# 
  1822     0F15                     	;# 
  1823     0F16                     	;# 
  1824     0F17                     	;# 
  1825     0F18                     	;# 
  1826     0F19                     	;# 
  1827     0F1A                     	;# 
  1828     0F1B                     	;# 
  1829     0F1C                     	;# 
  1830     0F1D                     	;# 
  1831     0F1E                     	;# 
  1832     0F1F                     	;# 
  1833     0F20                     	;# 
  1834     0F21                     	;# 
  1835     0F22                     	;# 
  1836     0F23                     	;# 
  1837     0FE4                     	;# 
  1838     0FE5                     	;# 
  1839     0FE6                     	;# 
  1840     0FE7                     	;# 
  1841     0FE8                     	;# 
  1842     0FE9                     	;# 
  1843     0FEA                     	;# 
  1844     0FEB                     	;# 
  1845     0FED                     	;# 
  1846     0FEE                     	;# 
  1847     0FEF                     	;# 
  1848     0000                     	;# 
  1849     0001                     	;# 
  1850     0002                     	;# 
  1851     0003                     	;# 
  1852     0004                     	;# 
  1853     0005                     	;# 
  1854     0006                     	;# 
  1855     0007                     	;# 
  1856     0008                     	;# 
  1857     0009                     	;# 
  1858     000A                     	;# 
  1859     000B                     	;# 
  1860     000C                     	;# 
  1861     000D                     	;# 
  1862     000E                     	;# 
  1863     0010                     	;# 
  1864     0011                     	;# 
  1865     0012                     	;# 
  1866     0013                     	;# 
  1867     0014                     	;# 
  1868     0015                     	;# 
  1869     0016                     	;# 
  1870     0016                     	;# 
  1871     0017                     	;# 
  1872     0018                     	;# 
  1873     0019                     	;# 
  1874     001A                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001B                     	;# 
  1878     001C                     	;# 
  1879     001D                     	;# 
  1880     001E                     	;# 
  1881     001F                     	;# 
  1882     008C                     	;# 
  1883     008D                     	;# 
  1884     008E                     	;# 
  1885     0090                     	;# 
  1886     0091                     	;# 
  1887     0092                     	;# 
  1888     0093                     	;# 
  1889     0094                     	;# 
  1890     0095                     	;# 
  1891     0096                     	;# 
  1892     0098                     	;# 
  1893     0099                     	;# 
  1894     009A                     	;# 
  1895     009B                     	;# 
  1896     009B                     	;# 
  1897     009C                     	;# 
  1898     009D                     	;# 
  1899     009E                     	;# 
  1900     009F                     	;# 
  1901     010C                     	;# 
  1902     010D                     	;# 
  1903     010E                     	;# 
  1904     0111                     	;# 
  1905     0112                     	;# 
  1906     0113                     	;# 
  1907     0114                     	;# 
  1908     0115                     	;# 
  1909     0116                     	;# 
  1910     0117                     	;# 
  1911     0118                     	;# 
  1912     0119                     	;# 
  1913     011C                     	;# 
  1914     018C                     	;# 
  1915     018D                     	;# 
  1916     018E                     	;# 
  1917     0191                     	;# 
  1918     0191                     	;# 
  1919     0192                     	;# 
  1920     0193                     	;# 
  1921     0193                     	;# 
  1922     0194                     	;# 
  1923     0195                     	;# 
  1924     0196                     	;# 
  1925     0197                     	;# 
  1926     0199                     	;# 
  1927     0199                     	;# 
  1928     0199                     	;# 
  1929     019A                     	;# 
  1930     019A                     	;# 
  1931     019A                     	;# 
  1932     019B                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019C                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019D                     	;# 
  1941     019D                     	;# 
  1942     019D                     	;# 
  1943     019E                     	;# 
  1944     019E                     	;# 
  1945     019E                     	;# 
  1946     019F                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     020C                     	;# 
  1952     020D                     	;# 
  1953     020E                     	;# 
  1954     0211                     	;# 
  1955     0211                     	;# 
  1956     0212                     	;# 
  1957     0212                     	;# 
  1958     0213                     	;# 
  1959     0213                     	;# 
  1960     0214                     	;# 
  1961     0214                     	;# 
  1962     0215                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0216                     	;# 
  1967     0216                     	;# 
  1968     0217                     	;# 
  1969     0217                     	;# 
  1970     028C                     	;# 
  1971     028D                     	;# 
  1972     028E                     	;# 
  1973     0291                     	;# 
  1974     0291                     	;# 
  1975     0292                     	;# 
  1976     0293                     	;# 
  1977     0294                     	;# 
  1978     0298                     	;# 
  1979     0298                     	;# 
  1980     0299                     	;# 
  1981     029A                     	;# 
  1982     029B                     	;# 
  1983     029E                     	;# 
  1984     030C                     	;# 
  1985     030D                     	;# 
  1986     030E                     	;# 
  1987     038C                     	;# 
  1988     038D                     	;# 
  1989     038E                     	;# 
  1990     0391                     	;# 
  1991     0392                     	;# 
  1992     0393                     	;# 
  1993     0394                     	;# 
  1994     0395                     	;# 
  1995     0396                     	;# 
  1996     0397                     	;# 
  1997     0398                     	;# 
  1998     0399                     	;# 
  1999     040E                     	;# 
  2000     0413                     	;# 
  2001     0413                     	;# 
  2002     0414                     	;# 
  2003     0414                     	;# 
  2004     0415                     	;# 
  2005     0416                     	;# 
  2006     0417                     	;# 
  2007     0418                     	;# 
  2008     041A                     	;# 
  2009     041A                     	;# 
  2010     041B                     	;# 
  2011     041B                     	;# 
  2012     041C                     	;# 
  2013     041D                     	;# 
  2014     041E                     	;# 
  2015     041F                     	;# 
  2016     0493                     	;# 
  2017     0494                     	;# 
  2018     0495                     	;# 
  2019     0496                     	;# 
  2020     049A                     	;# 
  2021     049B                     	;# 
  2022     049C                     	;# 
  2023     049D                     	;# 
  2024     058C                     	;# 
  2025     058C                     	;# 
  2026     058D                     	;# 
  2027     058E                     	;# 
  2028     058E                     	;# 
  2029     058F                     	;# 
  2030     0590                     	;# 
  2031     0590                     	;# 
  2032     0591                     	;# 
  2033     0592                     	;# 
  2034     0592                     	;# 
  2035     0593                     	;# 
  2036     0594                     	;# 
  2037     0594                     	;# 
  2038     0595                     	;# 
  2039     0596                     	;# 
  2040     0596                     	;# 
  2041     0597                     	;# 
  2042     0598                     	;# 
  2043     0599                     	;# 
  2044     059A                     	;# 
  2045     059B                     	;# 
  2046     059B                     	;# 
  2047     059C                     	;# 
  2048     059D                     	;# 
  2049     060C                     	;# 
  2050     060C                     	;# 
  2051     060D                     	;# 
  2052     060E                     	;# 
  2053     060F                     	;# 
  2054     060F                     	;# 
  2055     0610                     	;# 
  2056     0611                     	;# 
  2057     0612                     	;# 
  2058     0613                     	;# 
  2059     0614                     	;# 
  2060     0617                     	;# 
  2061     0617                     	;# 
  2062     0618                     	;# 
  2063     0619                     	;# 
  2064     061A                     	;# 
  2065     061A                     	;# 
  2066     061B                     	;# 
  2067     061C                     	;# 
  2068     0691                     	;# 
  2069     0692                     	;# 
  2070     0693                     	;# 
  2071     0694                     	;# 
  2072     0695                     	;# 
  2073     0696                     	;# 
  2074     0697                     	;# 
  2075     0699                     	;# 
  2076     069A                     	;# 
  2077     0711                     	;# 
  2078     0712                     	;# 
  2079     0713                     	;# 
  2080     0714                     	;# 
  2081     0715                     	;# 
  2082     0718                     	;# 
  2083     0718                     	;# 
  2084     0719                     	;# 
  2085     071A                     	;# 
  2086     071A                     	;# 
  2087     071B                     	;# 
  2088     071C                     	;# 
  2089     071D                     	;# 
  2090     0791                     	;# 
  2091     0791                     	;# 
  2092     0792                     	;# 
  2093     0793                     	;# 
  2094     0793                     	;# 
  2095     0794                     	;# 
  2096     0795                     	;# 
  2097     0795                     	;# 
  2098     0796                     	;# 
  2099     0797                     	;# 
  2100     0797                     	;# 
  2101     0798                     	;# 
  2102     0799                     	;# 
  2103     079A                     	;# 
  2104     080C                     	;# 
  2105     080C                     	;# 
  2106     080D                     	;# 
  2107     080E                     	;# 
  2108     080E                     	;# 
  2109     080F                     	;# 
  2110     0810                     	;# 
  2111     0810                     	;# 
  2112     0811                     	;# 
  2113     0812                     	;# 
  2114     0812                     	;# 
  2115     0813                     	;# 
  2116     0814                     	;# 
  2117     0815                     	;# 
  2118     0816                     	;# 
  2119     0817                     	;# 
  2120     0818                     	;# 
  2121     0819                     	;# 
  2122     081A                     	;# 
  2123     081A                     	;# 
  2124     081B                     	;# 
  2125     081C                     	;# 
  2126     081C                     	;# 
  2127     081D                     	;# 
  2128     088C                     	;# 
  2129     088D                     	;# 
  2130     088E                     	;# 
  2131     088F                     	;# 
  2132     088F                     	;# 
  2133     0890                     	;# 
  2134     0891                     	;# 
  2135     0892                     	;# 
  2136     0893                     	;# 
  2137     0893                     	;# 
  2138     0894                     	;# 
  2139     0895                     	;# 
  2140     0896                     	;# 
  2141     0897                     	;# 
  2142     0897                     	;# 
  2143     0898                     	;# 
  2144     0899                     	;# 
  2145     0D8C                     	;# 
  2146     0D8C                     	;# 
  2147     0D8D                     	;# 
  2148     0D8E                     	;# 
  2149     0D8F                     	;# 
  2150     0D8F                     	;# 
  2151     0D90                     	;# 
  2152     0D91                     	;# 
  2153     0D92                     	;# 
  2154     0D92                     	;# 
  2155     0D93                     	;# 
  2156     0D94                     	;# 
  2157     0D95                     	;# 
  2158     0D95                     	;# 
  2159     0D96                     	;# 
  2160     0D97                     	;# 
  2161     0D98                     	;# 
  2162     0D99                     	;# 
  2163     0D9A                     	;# 
  2164     0D9B                     	;# 
  2165     0D9C                     	;# 
  2166     0D9D                     	;# 
  2167     0D9E                     	;# 
  2168     0D9E                     	;# 
  2169     0D9F                     	;# 
  2170     0DA0                     	;# 
  2171     0DA1                     	;# 
  2172     0DA1                     	;# 
  2173     0DA2                     	;# 
  2174     0DA3                     	;# 
  2175     0DA4                     	;# 
  2176     0DA4                     	;# 
  2177     0DA5                     	;# 
  2178     0DA6                     	;# 
  2179     0DA7                     	;# 
  2180     0DA7                     	;# 
  2181     0DA8                     	;# 
  2182     0DA9                     	;# 
  2183     0DAA                     	;# 
  2184     0DAB                     	;# 
  2185     0DAC                     	;# 
  2186     0DAD                     	;# 
  2187     0DAE                     	;# 
  2188     0DAF                     	;# 
  2189     0E0F                     	;# 
  2190     0E10                     	;# 
  2191     0E11                     	;# 
  2192     0E12                     	;# 
  2193     0E13                     	;# 
  2194     0E14                     	;# 
  2195     0E15                     	;# 
  2196     0E16                     	;# 
  2197     0E17                     	;# 
  2198     0E17                     	;# 
  2199     0E18                     	;# 
  2200     0E18                     	;# 
  2201     0E19                     	;# 
  2202     0E1A                     	;# 
  2203     0E1B                     	;# 
  2204     0E1B                     	;# 
  2205     0E1C                     	;# 
  2206     0E1D                     	;# 
  2207     0E1E                     	;# 
  2208     0E1E                     	;# 
  2209     0E1F                     	;# 
  2210     0E20                     	;# 
  2211     0E21                     	;# 
  2212     0E22                     	;# 
  2213     0E23                     	;# 
  2214     0E24                     	;# 
  2215     0E25                     	;# 
  2216     0E26                     	;# 
  2217     0E27                     	;# 
  2218     0E28                     	;# 
  2219     0E29                     	;# 
  2220     0E2A                     	;# 
  2221     0E2B                     	;# 
  2222     0E2C                     	;# 
  2223     0E2D                     	;# 
  2224     0E2E                     	;# 
  2225     0E90                     	;# 
  2226     0E91                     	;# 
  2227     0E92                     	;# 
  2228     0E94                     	;# 
  2229     0E95                     	;# 
  2230     0E9C                     	;# 
  2231     0E9D                     	;# 
  2232     0E9E                     	;# 
  2233     0E9F                     	;# 
  2234     0EA0                     	;# 
  2235     0EA1                     	;# 
  2236     0EA2                     	;# 
  2237     0EA3                     	;# 
  2238     0EA4                     	;# 
  2239     0EA5                     	;# 
  2240     0EA6                     	;# 
  2241     0EA7                     	;# 
  2242     0F0F                     	;# 
  2243     0F10                     	;# 
  2244     0F11                     	;# 
  2245     0F12                     	;# 
  2246     0F13                     	;# 
  2247     0F14                     	;# 
  2248     0F15                     	;# 
  2249     0F16                     	;# 
  2250     0F17                     	;# 
  2251     0F18                     	;# 
  2252     0F19                     	;# 
  2253     0F1A                     	;# 
  2254     0F1B                     	;# 
  2255     0F1C                     	;# 
  2256     0F1D                     	;# 
  2257     0F1E                     	;# 
  2258     0F1F                     	;# 
  2259     0F20                     	;# 
  2260     0F21                     	;# 
  2261     0F22                     	;# 
  2262     0F23                     	;# 
  2263     0FE4                     	;# 
  2264     0FE5                     	;# 
  2265     0FE6                     	;# 
  2266     0FE7                     	;# 
  2267     0FE8                     	;# 
  2268     0FE9                     	;# 
  2269     0FEA                     	;# 
  2270     0FEB                     	;# 
  2271     0FED                     	;# 
  2272     0FEE                     	;# 
  2273     0FEF                     	;# 
  2274     0000                     	;# 
  2275     0001                     	;# 
  2276     0002                     	;# 
  2277     0003                     	;# 
  2278     0004                     	;# 
  2279     0005                     	;# 
  2280     0006                     	;# 
  2281     0007                     	;# 
  2282     0008                     	;# 
  2283     0009                     	;# 
  2284     000A                     	;# 
  2285     000B                     	;# 
  2286     000C                     	;# 
  2287     000D                     	;# 
  2288     000E                     	;# 
  2289     0010                     	;# 
  2290     0011                     	;# 
  2291     0012                     	;# 
  2292     0013                     	;# 
  2293     0014                     	;# 
  2294     0015                     	;# 
  2295     0016                     	;# 
  2296     0016                     	;# 
  2297     0017                     	;# 
  2298     0018                     	;# 
  2299     0019                     	;# 
  2300     001A                     	;# 
  2301     001A                     	;# 
  2302     001B                     	;# 
  2303     001B                     	;# 
  2304     001C                     	;# 
  2305     001D                     	;# 
  2306     001E                     	;# 
  2307     001F                     	;# 
  2308     008C                     	;# 
  2309     008D                     	;# 
  2310     008E                     	;# 
  2311     0090                     	;# 
  2312     0091                     	;# 
  2313     0092                     	;# 
  2314     0093                     	;# 
  2315     0094                     	;# 
  2316     0095                     	;# 
  2317     0096                     	;# 
  2318     0098                     	;# 
  2319     0099                     	;# 
  2320     009A                     	;# 
  2321     009B                     	;# 
  2322     009B                     	;# 
  2323     009C                     	;# 
  2324     009D                     	;# 
  2325     009E                     	;# 
  2326     009F                     	;# 
  2327     010C                     	;# 
  2328     010D                     	;# 
  2329     010E                     	;# 
  2330     0111                     	;# 
  2331     0112                     	;# 
  2332     0113                     	;# 
  2333     0114                     	;# 
  2334     0115                     	;# 
  2335     0116                     	;# 
  2336     0117                     	;# 
  2337     0118                     	;# 
  2338     0119                     	;# 
  2339     011C                     	;# 
  2340     018C                     	;# 
  2341     018D                     	;# 
  2342     018E                     	;# 
  2343     0191                     	;# 
  2344     0191                     	;# 
  2345     0192                     	;# 
  2346     0193                     	;# 
  2347     0193                     	;# 
  2348     0194                     	;# 
  2349     0195                     	;# 
  2350     0196                     	;# 
  2351     0197                     	;# 
  2352     0199                     	;# 
  2353     0199                     	;# 
  2354     0199                     	;# 
  2355     019A                     	;# 
  2356     019A                     	;# 
  2357     019A                     	;# 
  2358     019B                     	;# 
  2359     019B                     	;# 
  2360     019B                     	;# 
  2361     019B                     	;# 
  2362     019B                     	;# 
  2363     019C                     	;# 
  2364     019C                     	;# 
  2365     019C                     	;# 
  2366     019D                     	;# 
  2367     019D                     	;# 
  2368     019D                     	;# 
  2369     019E                     	;# 
  2370     019E                     	;# 
  2371     019E                     	;# 
  2372     019F                     	;# 
  2373     019F                     	;# 
  2374     019F                     	;# 
  2375     019F                     	;# 
  2376     019F                     	;# 
  2377     020C                     	;# 
  2378     020D                     	;# 
  2379     020E                     	;# 
  2380     0211                     	;# 
  2381     0211                     	;# 
  2382     0212                     	;# 
  2383     0212                     	;# 
  2384     0213                     	;# 
  2385     0213                     	;# 
  2386     0214                     	;# 
  2387     0214                     	;# 
  2388     0215                     	;# 
  2389     0215                     	;# 
  2390     0215                     	;# 
  2391     0215                     	;# 
  2392     0216                     	;# 
  2393     0216                     	;# 
  2394     0217                     	;# 
  2395     0217                     	;# 
  2396     028C                     	;# 
  2397     028D                     	;# 
  2398     028E                     	;# 
  2399     0291                     	;# 
  2400     0291                     	;# 
  2401     0292                     	;# 
  2402     0293                     	;# 
  2403     0294                     	;# 
  2404     0298                     	;# 
  2405     0298                     	;# 
  2406     0299                     	;# 
  2407     029A                     	;# 
  2408     029B                     	;# 
  2409     029E                     	;# 
  2410     030C                     	;# 
  2411     030D                     	;# 
  2412     030E                     	;# 
  2413     038C                     	;# 
  2414     038D                     	;# 
  2415     038E                     	;# 
  2416     0391                     	;# 
  2417     0392                     	;# 
  2418     0393                     	;# 
  2419     0394                     	;# 
  2420     0395                     	;# 
  2421     0396                     	;# 
  2422     0397                     	;# 
  2423     0398                     	;# 
  2424     0399                     	;# 
  2425     040E                     	;# 
  2426     0413                     	;# 
  2427     0413                     	;# 
  2428     0414                     	;# 
  2429     0414                     	;# 
  2430     0415                     	;# 
  2431     0416                     	;# 
  2432     0417                     	;# 
  2433     0418                     	;# 
  2434     041A                     	;# 
  2435     041A                     	;# 
  2436     041B                     	;# 
  2437     041B                     	;# 
  2438     041C                     	;# 
  2439     041D                     	;# 
  2440     041E                     	;# 
  2441     041F                     	;# 
  2442     0493                     	;# 
  2443     0494                     	;# 
  2444     0495                     	;# 
  2445     0496                     	;# 
  2446     049A                     	;# 
  2447     049B                     	;# 
  2448     049C                     	;# 
  2449     049D                     	;# 
  2450     058C                     	;# 
  2451     058C                     	;# 
  2452     058D                     	;# 
  2453     058E                     	;# 
  2454     058E                     	;# 
  2455     058F                     	;# 
  2456     0590                     	;# 
  2457     0590                     	;# 
  2458     0591                     	;# 
  2459     0592                     	;# 
  2460     0592                     	;# 
  2461     0593                     	;# 
  2462     0594                     	;# 
  2463     0594                     	;# 
  2464     0595                     	;# 
  2465     0596                     	;# 
  2466     0596                     	;# 
  2467     0597                     	;# 
  2468     0598                     	;# 
  2469     0599                     	;# 
  2470     059A                     	;# 
  2471     059B                     	;# 
  2472     059B                     	;# 
  2473     059C                     	;# 
  2474     059D                     	;# 
  2475     060C                     	;# 
  2476     060C                     	;# 
  2477     060D                     	;# 
  2478     060E                     	;# 
  2479     060F                     	;# 
  2480     060F                     	;# 
  2481     0610                     	;# 
  2482     0611                     	;# 
  2483     0612                     	;# 
  2484     0613                     	;# 
  2485     0614                     	;# 
  2486     0617                     	;# 
  2487     0617                     	;# 
  2488     0618                     	;# 
  2489     0619                     	;# 
  2490     061A                     	;# 
  2491     061A                     	;# 
  2492     061B                     	;# 
  2493     061C                     	;# 
  2494     0691                     	;# 
  2495     0692                     	;# 
  2496     0693                     	;# 
  2497     0694                     	;# 
  2498     0695                     	;# 
  2499     0696                     	;# 
  2500     0697                     	;# 
  2501     0699                     	;# 
  2502     069A                     	;# 
  2503     0711                     	;# 
  2504     0712                     	;# 
  2505     0713                     	;# 
  2506     0714                     	;# 
  2507     0715                     	;# 
  2508     0718                     	;# 
  2509     0718                     	;# 
  2510     0719                     	;# 
  2511     071A                     	;# 
  2512     071A                     	;# 
  2513     071B                     	;# 
  2514     071C                     	;# 
  2515     071D                     	;# 
  2516     0791                     	;# 
  2517     0791                     	;# 
  2518     0792                     	;# 
  2519     0793                     	;# 
  2520     0793                     	;# 
  2521     0794                     	;# 
  2522     0795                     	;# 
  2523     0795                     	;# 
  2524     0796                     	;# 
  2525     0797                     	;# 
  2526     0797                     	;# 
  2527     0798                     	;# 
  2528     0799                     	;# 
  2529     079A                     	;# 
  2530     080C                     	;# 
  2531     080C                     	;# 
  2532     080D                     	;# 
  2533     080E                     	;# 
  2534     080E                     	;# 
  2535     080F                     	;# 
  2536     0810                     	;# 
  2537     0810                     	;# 
  2538     0811                     	;# 
  2539     0812                     	;# 
  2540     0812                     	;# 
  2541     0813                     	;# 
  2542     0814                     	;# 
  2543     0815                     	;# 
  2544     0816                     	;# 
  2545     0817                     	;# 
  2546     0818                     	;# 
  2547     0819                     	;# 
  2548     081A                     	;# 
  2549     081A                     	;# 
  2550     081B                     	;# 
  2551     081C                     	;# 
  2552     081C                     	;# 
  2553     081D                     	;# 
  2554     088C                     	;# 
  2555     088D                     	;# 
  2556     088E                     	;# 
  2557     088F                     	;# 
  2558     088F                     	;# 
  2559     0890                     	;# 
  2560     0891                     	;# 
  2561     0892                     	;# 
  2562     0893                     	;# 
  2563     0893                     	;# 
  2564     0894                     	;# 
  2565     0895                     	;# 
  2566     0896                     	;# 
  2567     0897                     	;# 
  2568     0897                     	;# 
  2569     0898                     	;# 
  2570     0899                     	;# 
  2571     0D8C                     	;# 
  2572     0D8C                     	;# 
  2573     0D8D                     	;# 
  2574     0D8E                     	;# 
  2575     0D8F                     	;# 
  2576     0D8F                     	;# 
  2577     0D90                     	;# 
  2578     0D91                     	;# 
  2579     0D92                     	;# 
  2580     0D92                     	;# 
  2581     0D93                     	;# 
  2582     0D94                     	;# 
  2583     0D95                     	;# 
  2584     0D95                     	;# 
  2585     0D96                     	;# 
  2586     0D97                     	;# 
  2587     0D98                     	;# 
  2588     0D99                     	;# 
  2589     0D9A                     	;# 
  2590     0D9B                     	;# 
  2591     0D9C                     	;# 
  2592     0D9D                     	;# 
  2593     0D9E                     	;# 
  2594     0D9E                     	;# 
  2595     0D9F                     	;# 
  2596     0DA0                     	;# 
  2597     0DA1                     	;# 
  2598     0DA1                     	;# 
  2599     0DA2                     	;# 
  2600     0DA3                     	;# 
  2601     0DA4                     	;# 
  2602     0DA4                     	;# 
  2603     0DA5                     	;# 
  2604     0DA6                     	;# 
  2605     0DA7                     	;# 
  2606     0DA7                     	;# 
  2607     0DA8                     	;# 
  2608     0DA9                     	;# 
  2609     0DAA                     	;# 
  2610     0DAB                     	;# 
  2611     0DAC                     	;# 
  2612     0DAD                     	;# 
  2613     0DAE                     	;# 
  2614     0DAF                     	;# 
  2615     0E0F                     	;# 
  2616     0E10                     	;# 
  2617     0E11                     	;# 
  2618     0E12                     	;# 
  2619     0E13                     	;# 
  2620     0E14                     	;# 
  2621     0E15                     	;# 
  2622     0E16                     	;# 
  2623     0E17                     	;# 
  2624     0E17                     	;# 
  2625     0E18                     	;# 
  2626     0E18                     	;# 
  2627     0E19                     	;# 
  2628     0E1A                     	;# 
  2629     0E1B                     	;# 
  2630     0E1B                     	;# 
  2631     0E1C                     	;# 
  2632     0E1D                     	;# 
  2633     0E1E                     	;# 
  2634     0E1E                     	;# 
  2635     0E1F                     	;# 
  2636     0E20                     	;# 
  2637     0E21                     	;# 
  2638     0E22                     	;# 
  2639     0E23                     	;# 
  2640     0E24                     	;# 
  2641     0E25                     	;# 
  2642     0E26                     	;# 
  2643     0E27                     	;# 
  2644     0E28                     	;# 
  2645     0E29                     	;# 
  2646     0E2A                     	;# 
  2647     0E2B                     	;# 
  2648     0E2C                     	;# 
  2649     0E2D                     	;# 
  2650     0E2E                     	;# 
  2651     0E90                     	;# 
  2652     0E91                     	;# 
  2653     0E92                     	;# 
  2654     0E94                     	;# 
  2655     0E95                     	;# 
  2656     0E9C                     	;# 
  2657     0E9D                     	;# 
  2658     0E9E                     	;# 
  2659     0E9F                     	;# 
  2660     0EA0                     	;# 
  2661     0EA1                     	;# 
  2662     0EA2                     	;# 
  2663     0EA3                     	;# 
  2664     0EA4                     	;# 
  2665     0EA5                     	;# 
  2666     0EA6                     	;# 
  2667     0EA7                     	;# 
  2668     0F0F                     	;# 
  2669     0F10                     	;# 
  2670     0F11                     	;# 
  2671     0F12                     	;# 
  2672     0F13                     	;# 
  2673     0F14                     	;# 
  2674     0F15                     	;# 
  2675     0F16                     	;# 
  2676     0F17                     	;# 
  2677     0F18                     	;# 
  2678     0F19                     	;# 
  2679     0F1A                     	;# 
  2680     0F1B                     	;# 
  2681     0F1C                     	;# 
  2682     0F1D                     	;# 
  2683     0F1E                     	;# 
  2684     0F1F                     	;# 
  2685     0F20                     	;# 
  2686     0F21                     	;# 
  2687     0F22                     	;# 
  2688     0F23                     	;# 
  2689     0FE4                     	;# 
  2690     0FE5                     	;# 
  2691     0FE6                     	;# 
  2692     0FE7                     	;# 
  2693     0FE8                     	;# 
  2694     0FE9                     	;# 
  2695     0FEA                     	;# 
  2696     0FEB                     	;# 
  2697     0FED                     	;# 
  2698     0FEE                     	;# 
  2699     0FEF                     	;# 
  2700     0000                     	;# 
  2701     0001                     	;# 
  2702     0002                     	;# 
  2703     0003                     	;# 
  2704     0004                     	;# 
  2705     0005                     	;# 
  2706     0006                     	;# 
  2707     0007                     	;# 
  2708     0008                     	;# 
  2709     0009                     	;# 
  2710     000A                     	;# 
  2711     000B                     	;# 
  2712     000C                     	;# 
  2713     000D                     	;# 
  2714     000E                     	;# 
  2715     0010                     	;# 
  2716     0011                     	;# 
  2717     0012                     	;# 
  2718     0013                     	;# 
  2719     0014                     	;# 
  2720     0015                     	;# 
  2721     0016                     	;# 
  2722     0016                     	;# 
  2723     0017                     	;# 
  2724     0018                     	;# 
  2725     0019                     	;# 
  2726     001A                     	;# 
  2727     001A                     	;# 
  2728     001B                     	;# 
  2729     001B                     	;# 
  2730     001C                     	;# 
  2731     001D                     	;# 
  2732     001E                     	;# 
  2733     001F                     	;# 
  2734     008C                     	;# 
  2735     008D                     	;# 
  2736     008E                     	;# 
  2737     0090                     	;# 
  2738     0091                     	;# 
  2739     0092                     	;# 
  2740     0093                     	;# 
  2741     0094                     	;# 
  2742     0095                     	;# 
  2743     0096                     	;# 
  2744     0098                     	;# 
  2745     0099                     	;# 
  2746     009A                     	;# 
  2747     009B                     	;# 
  2748     009B                     	;# 
  2749     009C                     	;# 
  2750     009D                     	;# 
  2751     009E                     	;# 
  2752     009F                     	;# 
  2753     010C                     	;# 
  2754     010D                     	;# 
  2755     010E                     	;# 
  2756     0111                     	;# 
  2757     0112                     	;# 
  2758     0113                     	;# 
  2759     0114                     	;# 
  2760     0115                     	;# 
  2761     0116                     	;# 
  2762     0117                     	;# 
  2763     0118                     	;# 
  2764     0119                     	;# 
  2765     011C                     	;# 
  2766     018C                     	;# 
  2767     018D                     	;# 
  2768     018E                     	;# 
  2769     0191                     	;# 
  2770     0191                     	;# 
  2771     0192                     	;# 
  2772     0193                     	;# 
  2773     0193                     	;# 
  2774     0194                     	;# 
  2775     0195                     	;# 
  2776     0196                     	;# 
  2777     0197                     	;# 
  2778     0199                     	;# 
  2779     0199                     	;# 
  2780     0199                     	;# 
  2781     019A                     	;# 
  2782     019A                     	;# 
  2783     019A                     	;# 
  2784     019B                     	;# 
  2785     019B                     	;# 
  2786     019B                     	;# 
  2787     019B                     	;# 
  2788     019B                     	;# 
  2789     019C                     	;# 
  2790     019C                     	;# 
  2791     019C                     	;# 
  2792     019D                     	;# 
  2793     019D                     	;# 
  2794     019D                     	;# 
  2795     019E                     	;# 
  2796     019E                     	;# 
  2797     019E                     	;# 
  2798     019F                     	;# 
  2799     019F                     	;# 
  2800     019F                     	;# 
  2801     019F                     	;# 
  2802     019F                     	;# 
  2803     020C                     	;# 
  2804     020D                     	;# 
  2805     020E                     	;# 
  2806     0211                     	;# 
  2807     0211                     	;# 
  2808     0212                     	;# 
  2809     0212                     	;# 
  2810     0213                     	;# 
  2811     0213                     	;# 
  2812     0214                     	;# 
  2813     0214                     	;# 
  2814     0215                     	;# 
  2815     0215                     	;# 
  2816     0215                     	;# 
  2817     0215                     	;# 
  2818     0216                     	;# 
  2819     0216                     	;# 
  2820     0217                     	;# 
  2821     0217                     	;# 
  2822     028C                     	;# 
  2823     028D                     	;# 
  2824     028E                     	;# 
  2825     0291                     	;# 
  2826     0291                     	;# 
  2827     0292                     	;# 
  2828     0293                     	;# 
  2829     0294                     	;# 
  2830     0298                     	;# 
  2831     0298                     	;# 
  2832     0299                     	;# 
  2833     029A                     	;# 
  2834     029B                     	;# 
  2835     029E                     	;# 
  2836     030C                     	;# 
  2837     030D                     	;# 
  2838     030E                     	;# 
  2839     038C                     	;# 
  2840     038D                     	;# 
  2841     038E                     	;# 
  2842     0391                     	;# 
  2843     0392                     	;# 
  2844     0393                     	;# 
  2845     0394                     	;# 
  2846     0395                     	;# 
  2847     0396                     	;# 
  2848     0397                     	;# 
  2849     0398                     	;# 
  2850     0399                     	;# 
  2851     040E                     	;# 
  2852     0413                     	;# 
  2853     0413                     	;# 
  2854     0414                     	;# 
  2855     0414                     	;# 
  2856     0415                     	;# 
  2857     0416                     	;# 
  2858     0417                     	;# 
  2859     0418                     	;# 
  2860     041A                     	;# 
  2861     041A                     	;# 
  2862     041B                     	;# 
  2863     041B                     	;# 
  2864     041C                     	;# 
  2865     041D                     	;# 
  2866     041E                     	;# 
  2867     041F                     	;# 
  2868     0493                     	;# 
  2869     0494                     	;# 
  2870     0495                     	;# 
  2871     0496                     	;# 
  2872     049A                     	;# 
  2873     049B                     	;# 
  2874     049C                     	;# 
  2875     049D                     	;# 
  2876     058C                     	;# 
  2877     058C                     	;# 
  2878     058D                     	;# 
  2879     058E                     	;# 
  2880     058E                     	;# 
  2881     058F                     	;# 
  2882     0590                     	;# 
  2883     0590                     	;# 
  2884     0591                     	;# 
  2885     0592                     	;# 
  2886     0592                     	;# 
  2887     0593                     	;# 
  2888     0594                     	;# 
  2889     0594                     	;# 
  2890     0595                     	;# 
  2891     0596                     	;# 
  2892     0596                     	;# 
  2893     0597                     	;# 
  2894     0598                     	;# 
  2895     0599                     	;# 
  2896     059A                     	;# 
  2897     059B                     	;# 
  2898     059B                     	;# 
  2899     059C                     	;# 
  2900     059D                     	;# 
  2901     060C                     	;# 
  2902     060C                     	;# 
  2903     060D                     	;# 
  2904     060E                     	;# 
  2905     060F                     	;# 
  2906     060F                     	;# 
  2907     0610                     	;# 
  2908     0611                     	;# 
  2909     0612                     	;# 
  2910     0613                     	;# 
  2911     0614                     	;# 
  2912     0617                     	;# 
  2913     0617                     	;# 
  2914     0618                     	;# 
  2915     0619                     	;# 
  2916     061A                     	;# 
  2917     061A                     	;# 
  2918     061B                     	;# 
  2919     061C                     	;# 
  2920     0691                     	;# 
  2921     0692                     	;# 
  2922     0693                     	;# 
  2923     0694                     	;# 
  2924     0695                     	;# 
  2925     0696                     	;# 
  2926     0697                     	;# 
  2927     0699                     	;# 
  2928     069A                     	;# 
  2929     0711                     	;# 
  2930     0712                     	;# 
  2931     0713                     	;# 
  2932     0714                     	;# 
  2933     0715                     	;# 
  2934     0718                     	;# 
  2935     0718                     	;# 
  2936     0719                     	;# 
  2937     071A                     	;# 
  2938     071A                     	;# 
  2939     071B                     	;# 
  2940     071C                     	;# 
  2941     071D                     	;# 
  2942     0791                     	;# 
  2943     0791                     	;# 
  2944     0792                     	;# 
  2945     0793                     	;# 
  2946     0793                     	;# 
  2947     0794                     	;# 
  2948     0795                     	;# 
  2949     0795                     	;# 
  2950     0796                     	;# 
  2951     0797                     	;# 
  2952     0797                     	;# 
  2953     0798                     	;# 
  2954     0799                     	;# 
  2955     079A                     	;# 
  2956     080C                     	;# 
  2957     080C                     	;# 
  2958     080D                     	;# 
  2959     080E                     	;# 
  2960     080E                     	;# 
  2961     080F                     	;# 
  2962     0810                     	;# 
  2963     0810                     	;# 
  2964     0811                     	;# 
  2965     0812                     	;# 
  2966     0812                     	;# 
  2967     0813                     	;# 
  2968     0814                     	;# 
  2969     0815                     	;# 
  2970     0816                     	;# 
  2971     0817                     	;# 
  2972     0818                     	;# 
  2973     0819                     	;# 
  2974     081A                     	;# 
  2975     081A                     	;# 
  2976     081B                     	;# 
  2977     081C                     	;# 
  2978     081C                     	;# 
  2979     081D                     	;# 
  2980     088C                     	;# 
  2981     088D                     	;# 
  2982     088E                     	;# 
  2983     088F                     	;# 
  2984     088F                     	;# 
  2985     0890                     	;# 
  2986     0891                     	;# 
  2987     0892                     	;# 
  2988     0893                     	;# 
  2989     0893                     	;# 
  2990     0894                     	;# 
  2991     0895                     	;# 
  2992     0896                     	;# 
  2993     0897                     	;# 
  2994     0897                     	;# 
  2995     0898                     	;# 
  2996     0899                     	;# 
  2997     0D8C                     	;# 
  2998     0D8C                     	;# 
  2999     0D8D                     	;# 
  3000     0D8E                     	;# 
  3001     0D8F                     	;# 
  3002     0D8F                     	;# 
  3003     0D90                     	;# 
  3004     0D91                     	;# 
  3005     0D92                     	;# 
  3006     0D92                     	;# 
  3007     0D93                     	;# 
  3008     0D94                     	;# 
  3009     0D95                     	;# 
  3010     0D95                     	;# 
  3011     0D96                     	;# 
  3012     0D97                     	;# 
  3013     0D98                     	;# 
  3014     0D99                     	;# 
  3015     0D9A                     	;# 
  3016     0D9B                     	;# 
  3017     0D9C                     	;# 
  3018     0D9D                     	;# 
  3019     0D9E                     	;# 
  3020     0D9E                     	;# 
  3021     0D9F                     	;# 
  3022     0DA0                     	;# 
  3023     0DA1                     	;# 
  3024     0DA1                     	;# 
  3025     0DA2                     	;# 
  3026     0DA3                     	;# 
  3027     0DA4                     	;# 
  3028     0DA4                     	;# 
  3029     0DA5                     	;# 
  3030     0DA6                     	;# 
  3031     0DA7                     	;# 
  3032     0DA7                     	;# 
  3033     0DA8                     	;# 
  3034     0DA9                     	;# 
  3035     0DAA                     	;# 
  3036     0DAB                     	;# 
  3037     0DAC                     	;# 
  3038     0DAD                     	;# 
  3039     0DAE                     	;# 
  3040     0DAF                     	;# 
  3041     0E0F                     	;# 
  3042     0E10                     	;# 
  3043     0E11                     	;# 
  3044     0E12                     	;# 
  3045     0E13                     	;# 
  3046     0E14                     	;# 
  3047     0E15                     	;# 
  3048     0E16                     	;# 
  3049     0E17                     	;# 
  3050     0E17                     	;# 
  3051     0E18                     	;# 
  3052     0E18                     	;# 
  3053     0E19                     	;# 
  3054     0E1A                     	;# 
  3055     0E1B                     	;# 
  3056     0E1B                     	;# 
  3057     0E1C                     	;# 
  3058     0E1D                     	;# 
  3059     0E1E                     	;# 
  3060     0E1E                     	;# 
  3061     0E1F                     	;# 
  3062     0E20                     	;# 
  3063     0E21                     	;# 
  3064     0E22                     	;# 
  3065     0E23                     	;# 
  3066     0E24                     	;# 
  3067     0E25                     	;# 
  3068     0E26                     	;# 
  3069     0E27                     	;# 
  3070     0E28                     	;# 
  3071     0E29                     	;# 
  3072     0E2A                     	;# 
  3073     0E2B                     	;# 
  3074     0E2C                     	;# 
  3075     0E2D                     	;# 
  3076     0E2E                     	;# 
  3077     0E90                     	;# 
  3078     0E91                     	;# 
  3079     0E92                     	;# 
  3080     0E94                     	;# 
  3081     0E95                     	;# 
  3082     0E9C                     	;# 
  3083     0E9D                     	;# 
  3084     0E9E                     	;# 
  3085     0E9F                     	;# 
  3086     0EA0                     	;# 
  3087     0EA1                     	;# 
  3088     0EA2                     	;# 
  3089     0EA3                     	;# 
  3090     0EA4                     	;# 
  3091     0EA5                     	;# 
  3092     0EA6                     	;# 
  3093     0EA7                     	;# 
  3094     0F0F                     	;# 
  3095     0F10                     	;# 
  3096     0F11                     	;# 
  3097     0F12                     	;# 
  3098     0F13                     	;# 
  3099     0F14                     	;# 
  3100     0F15                     	;# 
  3101     0F16                     	;# 
  3102     0F17                     	;# 
  3103     0F18                     	;# 
  3104     0F19                     	;# 
  3105     0F1A                     	;# 
  3106     0F1B                     	;# 
  3107     0F1C                     	;# 
  3108     0F1D                     	;# 
  3109     0F1E                     	;# 
  3110     0F1F                     	;# 
  3111     0F20                     	;# 
  3112     0F21                     	;# 
  3113     0F22                     	;# 
  3114     0F23                     	;# 
  3115     0FE4                     	;# 
  3116     0FE5                     	;# 
  3117     0FE6                     	;# 
  3118     0FE7                     	;# 
  3119     0FE8                     	;# 
  3120     0FE9                     	;# 
  3121     0FEA                     	;# 
  3122     0FEB                     	;# 
  3123     0FED                     	;# 
  3124     0FEE                     	;# 
  3125     0FEF                     	;# 
  3126     0000                     	;# 
  3127     0001                     	;# 
  3128     0002                     	;# 
  3129     0003                     	;# 
  3130     0004                     	;# 
  3131     0005                     	;# 
  3132     0006                     	;# 
  3133     0007                     	;# 
  3134     0008                     	;# 
  3135     0009                     	;# 
  3136     000A                     	;# 
  3137     000B                     	;# 
  3138     000C                     	;# 
  3139     000D                     	;# 
  3140     000E                     	;# 
  3141     0010                     	;# 
  3142     0011                     	;# 
  3143     0012                     	;# 
  3144     0013                     	;# 
  3145     0014                     	;# 
  3146     0015                     	;# 
  3147     0016                     	;# 
  3148     0016                     	;# 
  3149     0017                     	;# 
  3150     0018                     	;# 
  3151     0019                     	;# 
  3152     001A                     	;# 
  3153     001A                     	;# 
  3154     001B                     	;# 
  3155     001B                     	;# 
  3156     001C                     	;# 
  3157     001D                     	;# 
  3158     001E                     	;# 
  3159     001F                     	;# 
  3160     008C                     	;# 
  3161     008D                     	;# 
  3162     008E                     	;# 
  3163     0090                     	;# 
  3164     0091                     	;# 
  3165     0092                     	;# 
  3166     0093                     	;# 
  3167     0094                     	;# 
  3168     0095                     	;# 
  3169     0096                     	;# 
  3170     0098                     	;# 
  3171     0099                     	;# 
  3172     009A                     	;# 
  3173     009B                     	;# 
  3174     009B                     	;# 
  3175     009C                     	;# 
  3176     009D                     	;# 
  3177     009E                     	;# 
  3178     009F                     	;# 
  3179     010C                     	;# 
  3180     010D                     	;# 
  3181     010E                     	;# 
  3182     0111                     	;# 
  3183     0112                     	;# 
  3184     0113                     	;# 
  3185     0114                     	;# 
  3186     0115                     	;# 
  3187     0116                     	;# 
  3188     0117                     	;# 
  3189     0118                     	;# 
  3190     0119                     	;# 
  3191     011C                     	;# 
  3192     018C                     	;# 
  3193     018D                     	;# 
  3194     018E                     	;# 
  3195     0191                     	;# 
  3196     0191                     	;# 
  3197     0192                     	;# 
  3198     0193                     	;# 
  3199     0193                     	;# 
  3200     0194                     	;# 
  3201     0195                     	;# 
  3202     0196                     	;# 
  3203     0197                     	;# 
  3204     0199                     	;# 
  3205     0199                     	;# 
  3206     0199                     	;# 
  3207     019A                     	;# 
  3208     019A                     	;# 
  3209     019A                     	;# 
  3210     019B                     	;# 
  3211     019B                     	;# 
  3212     019B                     	;# 
  3213     019B                     	;# 
  3214     019B                     	;# 
  3215     019C                     	;# 
  3216     019C                     	;# 
  3217     019C                     	;# 
  3218     019D                     	;# 
  3219     019D                     	;# 
  3220     019D                     	;# 
  3221     019E                     	;# 
  3222     019E                     	;# 
  3223     019E                     	;# 
  3224     019F                     	;# 
  3225     019F                     	;# 
  3226     019F                     	;# 
  3227     019F                     	;# 
  3228     019F                     	;# 
  3229     020C                     	;# 
  3230     020D                     	;# 
  3231     020E                     	;# 
  3232     0211                     	;# 
  3233     0211                     	;# 
  3234     0212                     	;# 
  3235     0212                     	;# 
  3236     0213                     	;# 
  3237     0213                     	;# 
  3238     0214                     	;# 
  3239     0214                     	;# 
  3240     0215                     	;# 
  3241     0215                     	;# 
  3242     0215                     	;# 
  3243     0215                     	;# 
  3244     0216                     	;# 
  3245     0216                     	;# 
  3246     0217                     	;# 
  3247     0217                     	;# 
  3248     028C                     	;# 
  3249     028D                     	;# 
  3250     028E                     	;# 
  3251     0291                     	;# 
  3252     0291                     	;# 
  3253     0292                     	;# 
  3254     0293                     	;# 
  3255     0294                     	;# 
  3256     0298                     	;# 
  3257     0298                     	;# 
  3258     0299                     	;# 
  3259     029A                     	;# 
  3260     029B                     	;# 
  3261     029E                     	;# 
  3262     030C                     	;# 
  3263     030D                     	;# 
  3264     030E                     	;# 
  3265     038C                     	;# 
  3266     038D                     	;# 
  3267     038E                     	;# 
  3268     0391                     	;# 
  3269     0392                     	;# 
  3270     0393                     	;# 
  3271     0394                     	;# 
  3272     0395                     	;# 
  3273     0396                     	;# 
  3274     0397                     	;# 
  3275     0398                     	;# 
  3276     0399                     	;# 
  3277     040E                     	;# 
  3278     0413                     	;# 
  3279     0413                     	;# 
  3280     0414                     	;# 
  3281     0414                     	;# 
  3282     0415                     	;# 
  3283     0416                     	;# 
  3284     0417                     	;# 
  3285     0418                     	;# 
  3286     041A                     	;# 
  3287     041A                     	;# 
  3288     041B                     	;# 
  3289     041B                     	;# 
  3290     041C                     	;# 
  3291     041D                     	;# 
  3292     041E                     	;# 
  3293     041F                     	;# 
  3294     0493                     	;# 
  3295     0494                     	;# 
  3296     0495                     	;# 
  3297     0496                     	;# 
  3298     049A                     	;# 
  3299     049B                     	;# 
  3300     049C                     	;# 
  3301     049D                     	;# 
  3302     058C                     	;# 
  3303     058C                     	;# 
  3304     058D                     	;# 
  3305     058E                     	;# 
  3306     058E                     	;# 
  3307     058F                     	;# 
  3308     0590                     	;# 
  3309     0590                     	;# 
  3310     0591                     	;# 
  3311     0592                     	;# 
  3312     0592                     	;# 
  3313     0593                     	;# 
  3314     0594                     	;# 
  3315     0594                     	;# 
  3316     0595                     	;# 
  3317     0596                     	;# 
  3318     0596                     	;# 
  3319     0597                     	;# 
  3320     0598                     	;# 
  3321     0599                     	;# 
  3322     059A                     	;# 
  3323     059B                     	;# 
  3324     059B                     	;# 
  3325     059C                     	;# 
  3326     059D                     	;# 
  3327     060C                     	;# 
  3328     060C                     	;# 
  3329     060D                     	;# 
  3330     060E                     	;# 
  3331     060F                     	;# 
  3332     060F                     	;# 
  3333     0610                     	;# 
  3334     0611                     	;# 
  3335     0612                     	;# 
  3336     0613                     	;# 
  3337     0614                     	;# 
  3338     0617                     	;# 
  3339     0617                     	;# 
  3340     0618                     	;# 
  3341     0619                     	;# 
  3342     061A                     	;# 
  3343     061A                     	;# 
  3344     061B                     	;# 
  3345     061C                     	;# 
  3346     0691                     	;# 
  3347     0692                     	;# 
  3348     0693                     	;# 
  3349     0694                     	;# 
  3350     0695                     	;# 
  3351     0696                     	;# 
  3352     0697                     	;# 
  3353     0699                     	;# 
  3354     069A                     	;# 
  3355     0711                     	;# 
  3356     0712                     	;# 
  3357     0713                     	;# 
  3358     0714                     	;# 
  3359     0715                     	;# 
  3360     0718                     	;# 
  3361     0718                     	;# 
  3362     0719                     	;# 
  3363     071A                     	;# 
  3364     071A                     	;# 
  3365     071B                     	;# 
  3366     071C                     	;# 
  3367     071D                     	;# 
  3368     0791                     	;# 
  3369     0791                     	;# 
  3370     0792                     	;# 
  3371     0793                     	;# 
  3372     0793                     	;# 
  3373     0794                     	;# 
  3374     0795                     	;# 
  3375     0795                     	;# 
  3376     0796                     	;# 
  3377     0797                     	;# 
  3378     0797                     	;# 
  3379     0798                     	;# 
  3380     0799                     	;# 
  3381     079A                     	;# 
  3382     080C                     	;# 
  3383     080C                     	;# 
  3384     080D                     	;# 
  3385     080E                     	;# 
  3386     080E                     	;# 
  3387     080F                     	;# 
  3388     0810                     	;# 
  3389     0810                     	;# 
  3390     0811                     	;# 
  3391     0812                     	;# 
  3392     0812                     	;# 
  3393     0813                     	;# 
  3394     0814                     	;# 
  3395     0815                     	;# 
  3396     0816                     	;# 
  3397     0817                     	;# 
  3398     0818                     	;# 
  3399     0819                     	;# 
  3400     081A                     	;# 
  3401     081A                     	;# 
  3402     081B                     	;# 
  3403     081C                     	;# 
  3404     081C                     	;# 
  3405     081D                     	;# 
  3406     088C                     	;# 
  3407     088D                     	;# 
  3408     088E                     	;# 
  3409     088F                     	;# 
  3410     088F                     	;# 
  3411     0890                     	;# 
  3412     0891                     	;# 
  3413     0892                     	;# 
  3414     0893                     	;# 
  3415     0893                     	;# 
  3416     0894                     	;# 
  3417     0895                     	;# 
  3418     0896                     	;# 
  3419     0897                     	;# 
  3420     0897                     	;# 
  3421     0898                     	;# 
  3422     0899                     	;# 
  3423     0D8C                     	;# 
  3424     0D8C                     	;# 
  3425     0D8D                     	;# 
  3426     0D8E                     	;# 
  3427     0D8F                     	;# 
  3428     0D8F                     	;# 
  3429     0D90                     	;# 
  3430     0D91                     	;# 
  3431     0D92                     	;# 
  3432     0D92                     	;# 
  3433     0D93                     	;# 
  3434     0D94                     	;# 
  3435     0D95                     	;# 
  3436     0D95                     	;# 
  3437     0D96                     	;# 
  3438     0D97                     	;# 
  3439     0D98                     	;# 
  3440     0D99                     	;# 
  3441     0D9A                     	;# 
  3442     0D9B                     	;# 
  3443     0D9C                     	;# 
  3444     0D9D                     	;# 
  3445     0D9E                     	;# 
  3446     0D9E                     	;# 
  3447     0D9F                     	;# 
  3448     0DA0                     	;# 
  3449     0DA1                     	;# 
  3450     0DA1                     	;# 
  3451     0DA2                     	;# 
  3452     0DA3                     	;# 
  3453     0DA4                     	;# 
  3454     0DA4                     	;# 
  3455     0DA5                     	;# 
  3456     0DA6                     	;# 
  3457     0DA7                     	;# 
  3458     0DA7                     	;# 
  3459     0DA8                     	;# 
  3460     0DA9                     	;# 
  3461     0DAA                     	;# 
  3462     0DAB                     	;# 
  3463     0DAC                     	;# 
  3464     0DAD                     	;# 
  3465     0DAE                     	;# 
  3466     0DAF                     	;# 
  3467     0E0F                     	;# 
  3468     0E10                     	;# 
  3469     0E11                     	;# 
  3470     0E12                     	;# 
  3471     0E13                     	;# 
  3472     0E14                     	;# 
  3473     0E15                     	;# 
  3474     0E16                     	;# 
  3475     0E17                     	;# 
  3476     0E17                     	;# 
  3477     0E18                     	;# 
  3478     0E18                     	;# 
  3479     0E19                     	;# 
  3480     0E1A                     	;# 
  3481     0E1B                     	;# 
  3482     0E1B                     	;# 
  3483     0E1C                     	;# 
  3484     0E1D                     	;# 
  3485     0E1E                     	;# 
  3486     0E1E                     	;# 
  3487     0E1F                     	;# 
  3488     0E20                     	;# 
  3489     0E21                     	;# 
  3490     0E22                     	;# 
  3491     0E23                     	;# 
  3492     0E24                     	;# 
  3493     0E25                     	;# 
  3494     0E26                     	;# 
  3495     0E27                     	;# 
  3496     0E28                     	;# 
  3497     0E29                     	;# 
  3498     0E2A                     	;# 
  3499     0E2B                     	;# 
  3500     0E2C                     	;# 
  3501     0E2D                     	;# 
  3502     0E2E                     	;# 
  3503     0E90                     	;# 
  3504     0E91                     	;# 
  3505     0E92                     	;# 
  3506     0E94                     	;# 
  3507     0E95                     	;# 
  3508     0E9C                     	;# 
  3509     0E9D                     	;# 
  3510     0E9E                     	;# 
  3511     0E9F                     	;# 
  3512     0EA0                     	;# 
  3513     0EA1                     	;# 
  3514     0EA2                     	;# 
  3515     0EA3                     	;# 
  3516     0EA4                     	;# 
  3517     0EA5                     	;# 
  3518     0EA6                     	;# 
  3519     0EA7                     	;# 
  3520     0F0F                     	;# 
  3521     0F10                     	;# 
  3522     0F11                     	;# 
  3523     0F12                     	;# 
  3524     0F13                     	;# 
  3525     0F14                     	;# 
  3526     0F15                     	;# 
  3527     0F16                     	;# 
  3528     0F17                     	;# 
  3529     0F18                     	;# 
  3530     0F19                     	;# 
  3531     0F1A                     	;# 
  3532     0F1B                     	;# 
  3533     0F1C                     	;# 
  3534     0F1D                     	;# 
  3535     0F1E                     	;# 
  3536     0F1F                     	;# 
  3537     0F20                     	;# 
  3538     0F21                     	;# 
  3539     0F22                     	;# 
  3540     0F23                     	;# 
  3541     0FE4                     	;# 
  3542     0FE5                     	;# 
  3543     0FE6                     	;# 
  3544     0FE7                     	;# 
  3545     0FE8                     	;# 
  3546     0FE9                     	;# 
  3547     0FEA                     	;# 
  3548     0FEB                     	;# 
  3549     0FED                     	;# 
  3550     0FEE                     	;# 
  3551     0FEF                     	;# 
  3552     0000                     	;# 
  3553     0001                     	;# 
  3554     0002                     	;# 
  3555     0003                     	;# 
  3556     0004                     	;# 
  3557     0005                     	;# 
  3558     0006                     	;# 
  3559     0007                     	;# 
  3560     0008                     	;# 
  3561     0009                     	;# 
  3562     000A                     	;# 
  3563     000B                     	;# 
  3564     000C                     	;# 
  3565     000D                     	;# 
  3566     000E                     	;# 
  3567     0010                     	;# 
  3568     0011                     	;# 
  3569     0012                     	;# 
  3570     0013                     	;# 
  3571     0014                     	;# 
  3572     0015                     	;# 
  3573     0016                     	;# 
  3574     0016                     	;# 
  3575     0017                     	;# 
  3576     0018                     	;# 
  3577     0019                     	;# 
  3578     001A                     	;# 
  3579     001A                     	;# 
  3580     001B                     	;# 
  3581     001B                     	;# 
  3582     001C                     	;# 
  3583     001D                     	;# 
  3584     001E                     	;# 
  3585     001F                     	;# 
  3586     008C                     	;# 
  3587     008D                     	;# 
  3588     008E                     	;# 
  3589     0090                     	;# 
  3590     0091                     	;# 
  3591     0092                     	;# 
  3592     0093                     	;# 
  3593     0094                     	;# 
  3594     0095                     	;# 
  3595     0096                     	;# 
  3596     0098                     	;# 
  3597     0099                     	;# 
  3598     009A                     	;# 
  3599     009B                     	;# 
  3600     009B                     	;# 
  3601     009C                     	;# 
  3602     009D                     	;# 
  3603     009E                     	;# 
  3604     009F                     	;# 
  3605     010C                     	;# 
  3606     010D                     	;# 
  3607     010E                     	;# 
  3608     0111                     	;# 
  3609     0112                     	;# 
  3610     0113                     	;# 
  3611     0114                     	;# 
  3612     0115                     	;# 
  3613     0116                     	;# 
  3614     0117                     	;# 
  3615     0118                     	;# 
  3616     0119                     	;# 
  3617     011C                     	;# 
  3618     018C                     	;# 
  3619     018D                     	;# 
  3620     018E                     	;# 
  3621     0191                     	;# 
  3622     0191                     	;# 
  3623     0192                     	;# 
  3624     0193                     	;# 
  3625     0193                     	;# 
  3626     0194                     	;# 
  3627     0195                     	;# 
  3628     0196                     	;# 
  3629     0197                     	;# 
  3630     0199                     	;# 
  3631     0199                     	;# 
  3632     0199                     	;# 
  3633     019A                     	;# 
  3634     019A                     	;# 
  3635     019A                     	;# 
  3636     019B                     	;# 
  3637     019B                     	;# 
  3638     019B                     	;# 
  3639     019B                     	;# 
  3640     019B                     	;# 
  3641     019C                     	;# 
  3642     019C                     	;# 
  3643     019C                     	;# 
  3644     019D                     	;# 
  3645     019D                     	;# 
  3646     019D                     	;# 
  3647     019E                     	;# 
  3648     019E                     	;# 
  3649     019E                     	;# 
  3650     019F                     	;# 
  3651     019F                     	;# 
  3652     019F                     	;# 
  3653     019F                     	;# 
  3654     019F                     	;# 
  3655     020C                     	;# 
  3656     020D                     	;# 
  3657     020E                     	;# 
  3658     0211                     	;# 
  3659     0211                     	;# 
  3660     0212                     	;# 
  3661     0212                     	;# 
  3662     0213                     	;# 
  3663     0213                     	;# 
  3664     0214                     	;# 
  3665     0214                     	;# 
  3666     0215                     	;# 
  3667     0215                     	;# 
  3668     0215                     	;# 
  3669     0215                     	;# 
  3670     0216                     	;# 
  3671     0216                     	;# 
  3672     0217                     	;# 
  3673     0217                     	;# 
  3674     028C                     	;# 
  3675     028D                     	;# 
  3676     028E                     	;# 
  3677     0291                     	;# 
  3678     0291                     	;# 
  3679     0292                     	;# 
  3680     0293                     	;# 
  3681     0294                     	;# 
  3682     0298                     	;# 
  3683     0298                     	;# 
  3684     0299                     	;# 
  3685     029A                     	;# 
  3686     029B                     	;# 
  3687     029E                     	;# 
  3688     030C                     	;# 
  3689     030D                     	;# 
  3690     030E                     	;# 
  3691     038C                     	;# 
  3692     038D                     	;# 
  3693     038E                     	;# 
  3694     0391                     	;# 
  3695     0392                     	;# 
  3696     0393                     	;# 
  3697     0394                     	;# 
  3698     0395                     	;# 
  3699     0396                     	;# 
  3700     0397                     	;# 
  3701     0398                     	;# 
  3702     0399                     	;# 
  3703     040E                     	;# 
  3704     0413                     	;# 
  3705     0413                     	;# 
  3706     0414                     	;# 
  3707     0414                     	;# 
  3708     0415                     	;# 
  3709     0416                     	;# 
  3710     0417                     	;# 
  3711     0418                     	;# 
  3712     041A                     	;# 
  3713     041A                     	;# 
  3714     041B                     	;# 
  3715     041B                     	;# 
  3716     041C                     	;# 
  3717     041D                     	;# 
  3718     041E                     	;# 
  3719     041F                     	;# 
  3720     0493                     	;# 
  3721     0494                     	;# 
  3722     0495                     	;# 
  3723     0496                     	;# 
  3724     049A                     	;# 
  3725     049B                     	;# 
  3726     049C                     	;# 
  3727     049D                     	;# 
  3728     058C                     	;# 
  3729     058C                     	;# 
  3730     058D                     	;# 
  3731     058E                     	;# 
  3732     058E                     	;# 
  3733     058F                     	;# 
  3734     0590                     	;# 
  3735     0590                     	;# 
  3736     0591                     	;# 
  3737     0592                     	;# 
  3738     0592                     	;# 
  3739     0593                     	;# 
  3740     0594                     	;# 
  3741     0594                     	;# 
  3742     0595                     	;# 
  3743     0596                     	;# 
  3744     0596                     	;# 
  3745     0597                     	;# 
  3746     0598                     	;# 
  3747     0599                     	;# 
  3748     059A                     	;# 
  3749     059B                     	;# 
  3750     059B                     	;# 
  3751     059C                     	;# 
  3752     059D                     	;# 
  3753     060C                     	;# 
  3754     060C                     	;# 
  3755     060D                     	;# 
  3756     060E                     	;# 
  3757     060F                     	;# 
  3758     060F                     	;# 
  3759     0610                     	;# 
  3760     0611                     	;# 
  3761     0612                     	;# 
  3762     0613                     	;# 
  3763     0614                     	;# 
  3764     0617                     	;# 
  3765     0617                     	;# 
  3766     0618                     	;# 
  3767     0619                     	;# 
  3768     061A                     	;# 
  3769     061A                     	;# 
  3770     061B                     	;# 
  3771     061C                     	;# 
  3772     0691                     	;# 
  3773     0692                     	;# 
  3774     0693                     	;# 
  3775     0694                     	;# 
  3776     0695                     	;# 
  3777     0696                     	;# 
  3778     0697                     	;# 
  3779     0699                     	;# 
  3780     069A                     	;# 
  3781     0711                     	;# 
  3782     0712                     	;# 
  3783     0713                     	;# 
  3784     0714                     	;# 
  3785     0715                     	;# 
  3786     0718                     	;# 
  3787     0718                     	;# 
  3788     0719                     	;# 
  3789     071A                     	;# 
  3790     071A                     	;# 
  3791     071B                     	;# 
  3792     071C                     	;# 
  3793     071D                     	;# 
  3794     0791                     	;# 
  3795     0791                     	;# 
  3796     0792                     	;# 
  3797     0793                     	;# 
  3798     0793                     	;# 
  3799     0794                     	;# 
  3800     0795                     	;# 
  3801     0795                     	;# 
  3802     0796                     	;# 
  3803     0797                     	;# 
  3804     0797                     	;# 
  3805     0798                     	;# 
  3806     0799                     	;# 
  3807     079A                     	;# 
  3808     080C                     	;# 
  3809     080C                     	;# 
  3810     080D                     	;# 
  3811     080E                     	;# 
  3812     080E                     	;# 
  3813     080F                     	;# 
  3814     0810                     	;# 
  3815     0810                     	;# 
  3816     0811                     	;# 
  3817     0812                     	;# 
  3818     0812                     	;# 
  3819     0813                     	;# 
  3820     0814                     	;# 
  3821     0815                     	;# 
  3822     0816                     	;# 
  3823     0817                     	;# 
  3824     0818                     	;# 
  3825     0819                     	;# 
  3826     081A                     	;# 
  3827     081A                     	;# 
  3828     081B                     	;# 
  3829     081C                     	;# 
  3830     081C                     	;# 
  3831     081D                     	;# 
  3832     088C                     	;# 
  3833     088D                     	;# 
  3834     088E                     	;# 
  3835     088F                     	;# 
  3836     088F                     	;# 
  3837     0890                     	;# 
  3838     0891                     	;# 
  3839     0892                     	;# 
  3840     0893                     	;# 
  3841     0893                     	;# 
  3842     0894                     	;# 
  3843     0895                     	;# 
  3844     0896                     	;# 
  3845     0897                     	;# 
  3846     0897                     	;# 
  3847     0898                     	;# 
  3848     0899                     	;# 
  3849     0D8C                     	;# 
  3850     0D8C                     	;# 
  3851     0D8D                     	;# 
  3852     0D8E                     	;# 
  3853     0D8F                     	;# 
  3854     0D8F                     	;# 
  3855     0D90                     	;# 
  3856     0D91                     	;# 
  3857     0D92                     	;# 
  3858     0D92                     	;# 
  3859     0D93                     	;# 
  3860     0D94                     	;# 
  3861     0D95                     	;# 
  3862     0D95                     	;# 
  3863     0D96                     	;# 
  3864     0D97                     	;# 
  3865     0D98                     	;# 
  3866     0D99                     	;# 
  3867     0D9A                     	;# 
  3868     0D9B                     	;# 
  3869     0D9C                     	;# 
  3870     0D9D                     	;# 
  3871     0D9E                     	;# 
  3872     0D9E                     	;# 
  3873     0D9F                     	;# 
  3874     0DA0                     	;# 
  3875     0DA1                     	;# 
  3876     0DA1                     	;# 
  3877     0DA2                     	;# 
  3878     0DA3                     	;# 
  3879     0DA4                     	;# 
  3880     0DA4                     	;# 
  3881     0DA5                     	;# 
  3882     0DA6                     	;# 
  3883     0DA7                     	;# 
  3884     0DA7                     	;# 
  3885     0DA8                     	;# 
  3886     0DA9                     	;# 
  3887     0DAA                     	;# 
  3888     0DAB                     	;# 
  3889     0DAC                     	;# 
  3890     0DAD                     	;# 
  3891     0DAE                     	;# 
  3892     0DAF                     	;# 
  3893     0E0F                     	;# 
  3894     0E10                     	;# 
  3895     0E11                     	;# 
  3896     0E12                     	;# 
  3897     0E13                     	;# 
  3898     0E14                     	;# 
  3899     0E15                     	;# 
  3900     0E16                     	;# 
  3901     0E17                     	;# 
  3902     0E17                     	;# 
  3903     0E18                     	;# 
  3904     0E18                     	;# 
  3905     0E19                     	;# 
  3906     0E1A                     	;# 
  3907     0E1B                     	;# 
  3908     0E1B                     	;# 
  3909     0E1C                     	;# 
  3910     0E1D                     	;# 
  3911     0E1E                     	;# 
  3912     0E1E                     	;# 
  3913     0E1F                     	;# 
  3914     0E20                     	;# 
  3915     0E21                     	;# 
  3916     0E22                     	;# 
  3917     0E23                     	;# 
  3918     0E24                     	;# 
  3919     0E25                     	;# 
  3920     0E26                     	;# 
  3921     0E27                     	;# 
  3922     0E28                     	;# 
  3923     0E29                     	;# 
  3924     0E2A                     	;# 
  3925     0E2B                     	;# 
  3926     0E2C                     	;# 
  3927     0E2D                     	;# 
  3928     0E2E                     	;# 
  3929     0E90                     	;# 
  3930     0E91                     	;# 
  3931     0E92                     	;# 
  3932     0E94                     	;# 
  3933     0E95                     	;# 
  3934     0E9C                     	;# 
  3935     0E9D                     	;# 
  3936     0E9E                     	;# 
  3937     0E9F                     	;# 
  3938     0EA0                     	;# 
  3939     0EA1                     	;# 
  3940     0EA2                     	;# 
  3941     0EA3                     	;# 
  3942     0EA4                     	;# 
  3943     0EA5                     	;# 
  3944     0EA6                     	;# 
  3945     0EA7                     	;# 
  3946     0F0F                     	;# 
  3947     0F10                     	;# 
  3948     0F11                     	;# 
  3949     0F12                     	;# 
  3950     0F13                     	;# 
  3951     0F14                     	;# 
  3952     0F15                     	;# 
  3953     0F16                     	;# 
  3954     0F17                     	;# 
  3955     0F18                     	;# 
  3956     0F19                     	;# 
  3957     0F1A                     	;# 
  3958     0F1B                     	;# 
  3959     0F1C                     	;# 
  3960     0F1D                     	;# 
  3961     0F1E                     	;# 
  3962     0F1F                     	;# 
  3963     0F20                     	;# 
  3964     0F21                     	;# 
  3965     0F22                     	;# 
  3966     0F23                     	;# 
  3967     0FE4                     	;# 
  3968     0FE5                     	;# 
  3969     0FE6                     	;# 
  3970     0FE7                     	;# 
  3971     0FE8                     	;# 
  3972     0FE9                     	;# 
  3973     0FEA                     	;# 
  3974     0FEB                     	;# 
  3975     0FED                     	;# 
  3976     0FEE                     	;# 
  3977     0FEF                     	;# 
  3978     0000                     	;# 
  3979     0001                     	;# 
  3980     0002                     	;# 
  3981     0003                     	;# 
  3982     0004                     	;# 
  3983     0005                     	;# 
  3984     0006                     	;# 
  3985     0007                     	;# 
  3986     0008                     	;# 
  3987     0009                     	;# 
  3988     000A                     	;# 
  3989     000B                     	;# 
  3990     000C                     	;# 
  3991     000D                     	;# 
  3992     000E                     	;# 
  3993     0010                     	;# 
  3994     0011                     	;# 
  3995     0012                     	;# 
  3996     0013                     	;# 
  3997     0014                     	;# 
  3998     0015                     	;# 
  3999     0016                     	;# 
  4000     0016                     	;# 
  4001     0017                     	;# 
  4002     0018                     	;# 
  4003     0019                     	;# 
  4004     001A                     	;# 
  4005     001A                     	;# 
  4006     001B                     	;# 
  4007     001B                     	;# 
  4008     001C                     	;# 
  4009     001D                     	;# 
  4010     001E                     	;# 
  4011     001F                     	;# 
  4012     008C                     	;# 
  4013     008D                     	;# 
  4014     008E                     	;# 
  4015     0090                     	;# 
  4016     0091                     	;# 
  4017     0092                     	;# 
  4018     0093                     	;# 
  4019     0094                     	;# 
  4020     0095                     	;# 
  4021     0096                     	;# 
  4022     0098                     	;# 
  4023     0099                     	;# 
  4024     009A                     	;# 
  4025     009B                     	;# 
  4026     009B                     	;# 
  4027     009C                     	;# 
  4028     009D                     	;# 
  4029     009E                     	;# 
  4030     009F                     	;# 
  4031     010C                     	;# 
  4032     010D                     	;# 
  4033     010E                     	;# 
  4034     0111                     	;# 
  4035     0112                     	;# 
  4036     0113                     	;# 
  4037     0114                     	;# 
  4038     0115                     	;# 
  4039     0116                     	;# 
  4040     0117                     	;# 
  4041     0118                     	;# 
  4042     0119                     	;# 
  4043     011C                     	;# 
  4044     018C                     	;# 
  4045     018D                     	;# 
  4046     018E                     	;# 
  4047     0191                     	;# 
  4048     0191                     	;# 
  4049     0192                     	;# 
  4050     0193                     	;# 
  4051     0193                     	;# 
  4052     0194                     	;# 
  4053     0195                     	;# 
  4054     0196                     	;# 
  4055     0197                     	;# 
  4056     0199                     	;# 
  4057     0199                     	;# 
  4058     0199                     	;# 
  4059     019A                     	;# 
  4060     019A                     	;# 
  4061     019A                     	;# 
  4062     019B                     	;# 
  4063     019B                     	;# 
  4064     019B                     	;# 
  4065     019B                     	;# 
  4066     019B                     	;# 
  4067     019C                     	;# 
  4068     019C                     	;# 
  4069     019C                     	;# 
  4070     019D                     	;# 
  4071     019D                     	;# 
  4072     019D                     	;# 
  4073     019E                     	;# 
  4074     019E                     	;# 
  4075     019E                     	;# 
  4076     019F                     	;# 
  4077     019F                     	;# 
  4078     019F                     	;# 
  4079     019F                     	;# 
  4080     019F                     	;# 
  4081     020C                     	;# 
  4082     020D                     	;# 
  4083     020E                     	;# 
  4084     0211                     	;# 
  4085     0211                     	;# 
  4086     0212                     	;# 
  4087     0212                     	;# 
  4088     0213                     	;# 
  4089     0213                     	;# 
  4090     0214                     	;# 
  4091     0214                     	;# 
  4092     0215                     	;# 
  4093     0215                     	;# 
  4094     0215                     	;# 
  4095     0215                     	;# 
  4096     0216                     	;# 
  4097     0216                     	;# 
  4098     0217                     	;# 
  4099     0217                     	;# 
  4100     028C                     	;# 
  4101     028D                     	;# 
  4102     028E                     	;# 
  4103     0291                     	;# 
  4104     0291                     	;# 
  4105     0292                     	;# 
  4106     0293                     	;# 
  4107     0294                     	;# 
  4108     0298                     	;# 
  4109     0298                     	;# 
  4110     0299                     	;# 
  4111     029A                     	;# 
  4112     029B                     	;# 
  4113     029E                     	;# 
  4114     030C                     	;# 
  4115     030D                     	;# 
  4116     030E                     	;# 
  4117     038C                     	;# 
  4118     038D                     	;# 
  4119     038E                     	;# 
  4120     0391                     	;# 
  4121     0392                     	;# 
  4122     0393                     	;# 
  4123     0394                     	;# 
  4124     0395                     	;# 
  4125     0396                     	;# 
  4126     0397                     	;# 
  4127     0398                     	;# 
  4128     0399                     	;# 
  4129     040E                     	;# 
  4130     0413                     	;# 
  4131     0413                     	;# 
  4132     0414                     	;# 
  4133     0414                     	;# 
  4134     0415                     	;# 
  4135     0416                     	;# 
  4136     0417                     	;# 
  4137     0418                     	;# 
  4138     041A                     	;# 
  4139     041A                     	;# 
  4140     041B                     	;# 
  4141     041B                     	;# 
  4142     041C                     	;# 
  4143     041D                     	;# 
  4144     041E                     	;# 
  4145     041F                     	;# 
  4146     0493                     	;# 
  4147     0494                     	;# 
  4148     0495                     	;# 
  4149     0496                     	;# 
  4150     049A                     	;# 
  4151     049B                     	;# 
  4152     049C                     	;# 
  4153     049D                     	;# 
  4154     058C                     	;# 
  4155     058C                     	;# 
  4156     058D                     	;# 
  4157     058E                     	;# 
  4158     058E                     	;# 
  4159     058F                     	;# 
  4160     0590                     	;# 
  4161     0590                     	;# 
  4162     0591                     	;# 
  4163     0592                     	;# 
  4164     0592                     	;# 
  4165     0593                     	;# 
  4166     0594                     	;# 
  4167     0594                     	;# 
  4168     0595                     	;# 
  4169     0596                     	;# 
  4170     0596                     	;# 
  4171     0597                     	;# 
  4172     0598                     	;# 
  4173     0599                     	;# 
  4174     059A                     	;# 
  4175     059B                     	;# 
  4176     059B                     	;# 
  4177     059C                     	;# 
  4178     059D                     	;# 
  4179     060C                     	;# 
  4180     060C                     	;# 
  4181     060D                     	;# 
  4182     060E                     	;# 
  4183     060F                     	;# 
  4184     060F                     	;# 
  4185     0610                     	;# 
  4186     0611                     	;# 
  4187     0612                     	;# 
  4188     0613                     	;# 
  4189     0614                     	;# 
  4190     0617                     	;# 
  4191     0617                     	;# 
  4192     0618                     	;# 
  4193     0619                     	;# 
  4194     061A                     	;# 
  4195     061A                     	;# 
  4196     061B                     	;# 
  4197     061C                     	;# 
  4198     0691                     	;# 
  4199     0692                     	;# 
  4200     0693                     	;# 
  4201     0694                     	;# 
  4202     0695                     	;# 
  4203     0696                     	;# 
  4204     0697                     	;# 
  4205     0699                     	;# 
  4206     069A                     	;# 
  4207     0711                     	;# 
  4208     0712                     	;# 
  4209     0713                     	;# 
  4210     0714                     	;# 
  4211     0715                     	;# 
  4212     0718                     	;# 
  4213     0718                     	;# 
  4214     0719                     	;# 
  4215     071A                     	;# 
  4216     071A                     	;# 
  4217     071B                     	;# 
  4218     071C                     	;# 
  4219     071D                     	;# 
  4220     0791                     	;# 
  4221     0791                     	;# 
  4222     0792                     	;# 
  4223     0793                     	;# 
  4224     0793                     	;# 
  4225     0794                     	;# 
  4226     0795                     	;# 
  4227     0795                     	;# 
  4228     0796                     	;# 
  4229     0797                     	;# 
  4230     0797                     	;# 
  4231     0798                     	;# 
  4232     0799                     	;# 
  4233     079A                     	;# 
  4234     080C                     	;# 
  4235     080C                     	;# 
  4236     080D                     	;# 
  4237     080E                     	;# 
  4238     080E                     	;# 
  4239     080F                     	;# 
  4240     0810                     	;# 
  4241     0810                     	;# 
  4242     0811                     	;# 
  4243     0812                     	;# 
  4244     0812                     	;# 
  4245     0813                     	;# 
  4246     0814                     	;# 
  4247     0815                     	;# 
  4248     0816                     	;# 
  4249     0817                     	;# 
  4250     0818                     	;# 
  4251     0819                     	;# 
  4252     081A                     	;# 
  4253     081A                     	;# 
  4254     081B                     	;# 
  4255     081C                     	;# 
  4256     081C                     	;# 
  4257     081D                     	;# 
  4258     088C                     	;# 
  4259     088D                     	;# 
  4260     088E                     	;# 
  4261     088F                     	;# 
  4262     088F                     	;# 
  4263     0890                     	;# 
  4264     0891                     	;# 
  4265     0892                     	;# 
  4266     0893                     	;# 
  4267     0893                     	;# 
  4268     0894                     	;# 
  4269     0895                     	;# 
  4270     0896                     	;# 
  4271     0897                     	;# 
  4272     0897                     	;# 
  4273     0898                     	;# 
  4274     0899                     	;# 
  4275     0D8C                     	;# 
  4276     0D8C                     	;# 
  4277     0D8D                     	;# 
  4278     0D8E                     	;# 
  4279     0D8F                     	;# 
  4280     0D8F                     	;# 
  4281     0D90                     	;# 
  4282     0D91                     	;# 
  4283     0D92                     	;# 
  4284     0D92                     	;# 
  4285     0D93                     	;# 
  4286     0D94                     	;# 
  4287     0D95                     	;# 
  4288     0D95                     	;# 
  4289     0D96                     	;# 
  4290     0D97                     	;# 
  4291     0D98                     	;# 
  4292     0D99                     	;# 
  4293     0D9A                     	;# 
  4294     0D9B                     	;# 
  4295     0D9C                     	;# 
  4296     0D9D                     	;# 
  4297     0D9E                     	;# 
  4298     0D9E                     	;# 
  4299     0D9F                     	;# 
  4300     0DA0                     	;# 
  4301     0DA1                     	;# 
  4302     0DA1                     	;# 
  4303     0DA2                     	;# 
  4304     0DA3                     	;# 
  4305     0DA4                     	;# 
  4306     0DA4                     	;# 
  4307     0DA5                     	;# 
  4308     0DA6                     	;# 
  4309     0DA7                     	;# 
  4310     0DA7                     	;# 
  4311     0DA8                     	;# 
  4312     0DA9                     	;# 
  4313     0DAA                     	;# 
  4314     0DAB                     	;# 
  4315     0DAC                     	;# 
  4316     0DAD                     	;# 
  4317     0DAE                     	;# 
  4318     0DAF                     	;# 
  4319     0E0F                     	;# 
  4320     0E10                     	;# 
  4321     0E11                     	;# 
  4322     0E12                     	;# 
  4323     0E13                     	;# 
  4324     0E14                     	;# 
  4325     0E15                     	;# 
  4326     0E16                     	;# 
  4327     0E17                     	;# 
  4328     0E17                     	;# 
  4329     0E18                     	;# 
  4330     0E18                     	;# 
  4331     0E19                     	;# 
  4332     0E1A                     	;# 
  4333     0E1B                     	;# 
  4334     0E1B                     	;# 
  4335     0E1C                     	;# 
  4336     0E1D                     	;# 
  4337     0E1E                     	;# 
  4338     0E1E                     	;# 
  4339     0E1F                     	;# 
  4340     0E20                     	;# 
  4341     0E21                     	;# 
  4342     0E22                     	;# 
  4343     0E23                     	;# 
  4344     0E24                     	;# 
  4345     0E25                     	;# 
  4346     0E26                     	;# 
  4347     0E27                     	;# 
  4348     0E28                     	;# 
  4349     0E29                     	;# 
  4350     0E2A                     	;# 
  4351     0E2B                     	;# 
  4352     0E2C                     	;# 
  4353     0E2D                     	;# 
  4354     0E2E                     	;# 
  4355     0E90                     	;# 
  4356     0E91                     	;# 
  4357     0E92                     	;# 
  4358     0E94                     	;# 
  4359     0E95                     	;# 
  4360     0E9C                     	;# 
  4361     0E9D                     	;# 
  4362     0E9E                     	;# 
  4363     0E9F                     	;# 
  4364     0EA0                     	;# 
  4365     0EA1                     	;# 
  4366     0EA2                     	;# 
  4367     0EA3                     	;# 
  4368     0EA4                     	;# 
  4369     0EA5                     	;# 
  4370     0EA6                     	;# 
  4371     0EA7                     	;# 
  4372     0F0F                     	;# 
  4373     0F10                     	;# 
  4374     0F11                     	;# 
  4375     0F12                     	;# 
  4376     0F13                     	;# 
  4377     0F14                     	;# 
  4378     0F15                     	;# 
  4379     0F16                     	;# 
  4380     0F17                     	;# 
  4381     0F18                     	;# 
  4382     0F19                     	;# 
  4383     0F1A                     	;# 
  4384     0F1B                     	;# 
  4385     0F1C                     	;# 
  4386     0F1D                     	;# 
  4387     0F1E                     	;# 
  4388     0F1F                     	;# 
  4389     0F20                     	;# 
  4390     0F21                     	;# 
  4391     0F22                     	;# 
  4392     0F23                     	;# 
  4393     0FE4                     	;# 
  4394     0FE5                     	;# 
  4395     0FE6                     	;# 
  4396     0FE7                     	;# 
  4397     0FE8                     	;# 
  4398     0FE9                     	;# 
  4399     0FEA                     	;# 
  4400     0FEB                     	;# 
  4401     0FED                     	;# 
  4402     0FEE                     	;# 
  4403     0FEF                     	;# 
  4404     0000                     	;# 
  4405     0001                     	;# 
  4406     0002                     	;# 
  4407     0003                     	;# 
  4408     0004                     	;# 
  4409     0005                     	;# 
  4410     0006                     	;# 
  4411     0007                     	;# 
  4412     0008                     	;# 
  4413     0009                     	;# 
  4414     000A                     	;# 
  4415     000B                     	;# 
  4416     000C                     	;# 
  4417     000D                     	;# 
  4418     000E                     	;# 
  4419     0010                     	;# 
  4420     0011                     	;# 
  4421     0012                     	;# 
  4422     0013                     	;# 
  4423     0014                     	;# 
  4424     0015                     	;# 
  4425     0016                     	;# 
  4426     0016                     	;# 
  4427     0017                     	;# 
  4428     0018                     	;# 
  4429     0019                     	;# 
  4430     001A                     	;# 
  4431     001A                     	;# 
  4432     001B                     	;# 
  4433     001B                     	;# 
  4434     001C                     	;# 
  4435     001D                     	;# 
  4436     001E                     	;# 
  4437     001F                     	;# 
  4438     008C                     	;# 
  4439     008D                     	;# 
  4440     008E                     	;# 
  4441     0090                     	;# 
  4442     0091                     	;# 
  4443     0092                     	;# 
  4444     0093                     	;# 
  4445     0094                     	;# 
  4446     0095                     	;# 
  4447     0096                     	;# 
  4448     0098                     	;# 
  4449     0099                     	;# 
  4450     009A                     	;# 
  4451     009B                     	;# 
  4452     009B                     	;# 
  4453     009C                     	;# 
  4454     009D                     	;# 
  4455     009E                     	;# 
  4456     009F                     	;# 
  4457     010C                     	;# 
  4458     010D                     	;# 
  4459     010E                     	;# 
  4460     0111                     	;# 
  4461     0112                     	;# 
  4462     0113                     	;# 
  4463     0114                     	;# 
  4464     0115                     	;# 
  4465     0116                     	;# 
  4466     0117                     	;# 
  4467     0118                     	;# 
  4468     0119                     	;# 
  4469     011C                     	;# 
  4470     018C                     	;# 
  4471     018D                     	;# 
  4472     018E                     	;# 
  4473     0191                     	;# 
  4474     0191                     	;# 
  4475     0192                     	;# 
  4476     0193                     	;# 
  4477     0193                     	;# 
  4478     0194                     	;# 
  4479     0195                     	;# 
  4480     0196                     	;# 
  4481     0197                     	;# 
  4482     0199                     	;# 
  4483     0199                     	;# 
  4484     0199                     	;# 
  4485     019A                     	;# 
  4486     019A                     	;# 
  4487     019A                     	;# 
  4488     019B                     	;# 
  4489     019B                     	;# 
  4490     019B                     	;# 
  4491     019B                     	;# 
  4492     019B                     	;# 
  4493     019C                     	;# 
  4494     019C                     	;# 
  4495     019C                     	;# 
  4496     019D                     	;# 
  4497     019D                     	;# 
  4498     019D                     	;# 
  4499     019E                     	;# 
  4500     019E                     	;# 
  4501     019E                     	;# 
  4502     019F                     	;# 
  4503     019F                     	;# 
  4504     019F                     	;# 
  4505     019F                     	;# 
  4506     019F                     	;# 
  4507     020C                     	;# 
  4508     020D                     	;# 
  4509     020E                     	;# 
  4510     0211                     	;# 
  4511     0211                     	;# 
  4512     0212                     	;# 
  4513     0212                     	;# 
  4514     0213                     	;# 
  4515     0213                     	;# 
  4516     0214                     	;# 
  4517     0214                     	;# 
  4518     0215                     	;# 
  4519     0215                     	;# 
  4520     0215                     	;# 
  4521     0215                     	;# 
  4522     0216                     	;# 
  4523     0216                     	;# 
  4524     0217                     	;# 
  4525     0217                     	;# 
  4526     028C                     	;# 
  4527     028D                     	;# 
  4528     028E                     	;# 
  4529     0291                     	;# 
  4530     0291                     	;# 
  4531     0292                     	;# 
  4532     0293                     	;# 
  4533     0294                     	;# 
  4534     0298                     	;# 
  4535     0298                     	;# 
  4536     0299                     	;# 
  4537     029A                     	;# 
  4538     029B                     	;# 
  4539     029E                     	;# 
  4540     030C                     	;# 
  4541     030D                     	;# 
  4542     030E                     	;# 
  4543     038C                     	;# 
  4544     038D                     	;# 
  4545     038E                     	;# 
  4546     0391                     	;# 
  4547     0392                     	;# 
  4548     0393                     	;# 
  4549     0394                     	;# 
  4550     0395                     	;# 
  4551     0396                     	;# 
  4552     0397                     	;# 
  4553     0398                     	;# 
  4554     0399                     	;# 
  4555     040E                     	;# 
  4556     0413                     	;# 
  4557     0413                     	;# 
  4558     0414                     	;# 
  4559     0414                     	;# 
  4560     0415                     	;# 
  4561     0416                     	;# 
  4562     0417                     	;# 
  4563     0418                     	;# 
  4564     041A                     	;# 
  4565     041A                     	;# 
  4566     041B                     	;# 
  4567     041B                     	;# 
  4568     041C                     	;# 
  4569     041D                     	;# 
  4570     041E                     	;# 
  4571     041F                     	;# 
  4572     0493                     	;# 
  4573     0494                     	;# 
  4574     0495                     	;# 
  4575     0496                     	;# 
  4576     049A                     	;# 
  4577     049B                     	;# 
  4578     049C                     	;# 
  4579     049D                     	;# 
  4580     058C                     	;# 
  4581     058C                     	;# 
  4582     058D                     	;# 
  4583     058E                     	;# 
  4584     058E                     	;# 
  4585     058F                     	;# 
  4586     0590                     	;# 
  4587     0590                     	;# 
  4588     0591                     	;# 
  4589     0592                     	;# 
  4590     0592                     	;# 
  4591     0593                     	;# 
  4592     0594                     	;# 
  4593     0594                     	;# 
  4594     0595                     	;# 
  4595     0596                     	;# 
  4596     0596                     	;# 
  4597     0597                     	;# 
  4598     0598                     	;# 
  4599     0599                     	;# 
  4600     059A                     	;# 
  4601     059B                     	;# 
  4602     059B                     	;# 
  4603     059C                     	;# 
  4604     059D                     	;# 
  4605     060C                     	;# 
  4606     060C                     	;# 
  4607     060D                     	;# 
  4608     060E                     	;# 
  4609     060F                     	;# 
  4610     060F                     	;# 
  4611     0610                     	;# 
  4612     0611                     	;# 
  4613     0612                     	;# 
  4614     0613                     	;# 
  4615     0614                     	;# 
  4616     0617                     	;# 
  4617     0617                     	;# 
  4618     0618                     	;# 
  4619     0619                     	;# 
  4620     061A                     	;# 
  4621     061A                     	;# 
  4622     061B                     	;# 
  4623     061C                     	;# 
  4624     0691                     	;# 
  4625     0692                     	;# 
  4626     0693                     	;# 
  4627     0694                     	;# 
  4628     0695                     	;# 
  4629     0696                     	;# 
  4630     0697                     	;# 
  4631     0699                     	;# 
  4632     069A                     	;# 
  4633     0711                     	;# 
  4634     0712                     	;# 
  4635     0713                     	;# 
  4636     0714                     	;# 
  4637     0715                     	;# 
  4638     0718                     	;# 
  4639     0718                     	;# 
  4640     0719                     	;# 
  4641     071A                     	;# 
  4642     071A                     	;# 
  4643     071B                     	;# 
  4644     071C                     	;# 
  4645     071D                     	;# 
  4646     0791                     	;# 
  4647     0791                     	;# 
  4648     0792                     	;# 
  4649     0793                     	;# 
  4650     0793                     	;# 
  4651     0794                     	;# 
  4652     0795                     	;# 
  4653     0795                     	;# 
  4654     0796                     	;# 
  4655     0797                     	;# 
  4656     0797                     	;# 
  4657     0798                     	;# 
  4658     0799                     	;# 
  4659     079A                     	;# 
  4660     080C                     	;# 
  4661     080C                     	;# 
  4662     080D                     	;# 
  4663     080E                     	;# 
  4664     080E                     	;# 
  4665     080F                     	;# 
  4666     0810                     	;# 
  4667     0810                     	;# 
  4668     0811                     	;# 
  4669     0812                     	;# 
  4670     0812                     	;# 
  4671     0813                     	;# 
  4672     0814                     	;# 
  4673     0815                     	;# 
  4674     0816                     	;# 
  4675     0817                     	;# 
  4676     0818                     	;# 
  4677     0819                     	;# 
  4678     081A                     	;# 
  4679     081A                     	;# 
  4680     081B                     	;# 
  4681     081C                     	;# 
  4682     081C                     	;# 
  4683     081D                     	;# 
  4684     088C                     	;# 
  4685     088D                     	;# 
  4686     088E                     	;# 
  4687     088F                     	;# 
  4688     088F                     	;# 
  4689     0890                     	;# 
  4690     0891                     	;# 
  4691     0892                     	;# 
  4692     0893                     	;# 
  4693     0893                     	;# 
  4694     0894                     	;# 
  4695     0895                     	;# 
  4696     0896                     	;# 
  4697     0897                     	;# 
  4698     0897                     	;# 
  4699     0898                     	;# 
  4700     0899                     	;# 
  4701     0D8C                     	;# 
  4702     0D8C                     	;# 
  4703     0D8D                     	;# 
  4704     0D8E                     	;# 
  4705     0D8F                     	;# 
  4706     0D8F                     	;# 
  4707     0D90                     	;# 
  4708     0D91                     	;# 
  4709     0D92                     	;# 
  4710     0D92                     	;# 
  4711     0D93                     	;# 
  4712     0D94                     	;# 
  4713     0D95                     	;# 
  4714     0D95                     	;# 
  4715     0D96                     	;# 
  4716     0D97                     	;# 
  4717     0D98                     	;# 
  4718     0D99                     	;# 
  4719     0D9A                     	;# 
  4720     0D9B                     	;# 
  4721     0D9C                     	;# 
  4722     0D9D                     	;# 
  4723     0D9E                     	;# 
  4724     0D9E                     	;# 
  4725     0D9F                     	;# 
  4726     0DA0                     	;# 
  4727     0DA1                     	;# 
  4728     0DA1                     	;# 
  4729     0DA2                     	;# 
  4730     0DA3                     	;# 
  4731     0DA4                     	;# 
  4732     0DA4                     	;# 
  4733     0DA5                     	;# 
  4734     0DA6                     	;# 
  4735     0DA7                     	;# 
  4736     0DA7                     	;# 
  4737     0DA8                     	;# 
  4738     0DA9                     	;# 
  4739     0DAA                     	;# 
  4740     0DAB                     	;# 
  4741     0DAC                     	;# 
  4742     0DAD                     	;# 
  4743     0DAE                     	;# 
  4744     0DAF                     	;# 
  4745     0E0F                     	;# 
  4746     0E10                     	;# 
  4747     0E11                     	;# 
  4748     0E12                     	;# 
  4749     0E13                     	;# 
  4750     0E14                     	;# 
  4751     0E15                     	;# 
  4752     0E16                     	;# 
  4753     0E17                     	;# 
  4754     0E17                     	;# 
  4755     0E18                     	;# 
  4756     0E18                     	;# 
  4757     0E19                     	;# 
  4758     0E1A                     	;# 
  4759     0E1B                     	;# 
  4760     0E1B                     	;# 
  4761     0E1C                     	;# 
  4762     0E1D                     	;# 
  4763     0E1E                     	;# 
  4764     0E1E                     	;# 
  4765     0E1F                     	;# 
  4766     0E20                     	;# 
  4767     0E21                     	;# 
  4768     0E22                     	;# 
  4769     0E23                     	;# 
  4770     0E24                     	;# 
  4771     0E25                     	;# 
  4772     0E26                     	;# 
  4773     0E27                     	;# 
  4774     0E28                     	;# 
  4775     0E29                     	;# 
  4776     0E2A                     	;# 
  4777     0E2B                     	;# 
  4778     0E2C                     	;# 
  4779     0E2D                     	;# 
  4780     0E2E                     	;# 
  4781     0E90                     	;# 
  4782     0E91                     	;# 
  4783     0E92                     	;# 
  4784     0E94                     	;# 
  4785     0E95                     	;# 
  4786     0E9C                     	;# 
  4787     0E9D                     	;# 
  4788     0E9E                     	;# 
  4789     0E9F                     	;# 
  4790     0EA0                     	;# 
  4791     0EA1                     	;# 
  4792     0EA2                     	;# 
  4793     0EA3                     	;# 
  4794     0EA4                     	;# 
  4795     0EA5                     	;# 
  4796     0EA6                     	;# 
  4797     0EA7                     	;# 
  4798     0F0F                     	;# 
  4799     0F10                     	;# 
  4800     0F11                     	;# 
  4801     0F12                     	;# 
  4802     0F13                     	;# 
  4803     0F14                     	;# 
  4804     0F15                     	;# 
  4805     0F16                     	;# 
  4806     0F17                     	;# 
  4807     0F18                     	;# 
  4808     0F19                     	;# 
  4809     0F1A                     	;# 
  4810     0F1B                     	;# 
  4811     0F1C                     	;# 
  4812     0F1D                     	;# 
  4813     0F1E                     	;# 
  4814     0F1F                     	;# 
  4815     0F20                     	;# 
  4816     0F21                     	;# 
  4817     0F22                     	;# 
  4818     0F23                     	;# 
  4819     0FE4                     	;# 
  4820     0FE5                     	;# 
  4821     0FE6                     	;# 
  4822     0FE7                     	;# 
  4823     0FE8                     	;# 
  4824     0FE9                     	;# 
  4825     0FEA                     	;# 
  4826     0FEB                     	;# 
  4827     0FED                     	;# 
  4828     0FEE                     	;# 
  4829     0FEF                     	;# 
  4830                           
  4831 ;; Function _I2C1_Deinitialize is unused but had its address taken
  4832     0000                     
  4833 ;; Function _I2C1_WriteRead is unused but had its address taken
  4834     0000                     
  4835 ;; Function _I2C1_ErrorGet is unused but had its address taken
  4836     0000                     
  4837 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  4838     0000                     
  4839 ;; Function _EUSART_Deinitialize is unused but had its address taken
  4840     0000                     
  4841 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  4842     0000                     
  4843 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  4844     0000                     
  4845 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  4846     0000                     
  4847 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  4848     0000                     
  4849 ;; Function _EUSART_IsTxDone is unused but had its address taken
  4850     0000                     
  4851 ;; Function _EUSART_ErrorGet is unused but had its address taken
  4852     0000                     
  4853                           	psect	idataBANK0
  4854     0D99                     __pidataBANK0:
  4855                           
  4856                           ;initializer for _kaps
  4857     0D99  3451               	retlw	81
  4858     0D9A  3400               	retlw	0
  4859     0D9B  3400               	retlw	0
  4860     0D9C  3400               	retlw	0
  4861     0D9D  3400               	retlw	0
  4862     0D9E  3400               	retlw	0
  4863     0D9F  3400               	retlw	0
  4864                           
  4865                           	psect	idataBANK1
  4866     0E97                     __pidataBANK1:
  4867                           
  4868                           ;initializer for _sspas
  4869     0E97  3401               	retlw	1
  4870     0E98  3400               	retlw	0
  4871     0E99  3400               	retlw	0
  4872     0E9A  3400               	retlw	0
  4873     0E9B  3400               	retlw	0
  4874     0E9C  3400               	retlw	0
  4875     0E9D  3400               	retlw	0
  4876     0E9E  3400               	retlw	0
  4877     0E9F  3401               	retlw	1
  4878     0EA0  3400               	retlw	0
  4879     0EA1  3400               	retlw	0
  4880     0EA2  3400               	retlw	0
  4881     0EA3  3400               	retlw	0
  4882     0EA4  3400               	retlw	0
  4883     0EA5  3400               	retlw	0
  4884     0EA6  3400               	retlw	0
  4885     0EA7  3401               	retlw	1
  4886     0EA8  3400               	retlw	0
  4887     0EA9  3400               	retlw	0
  4888     0EAA  3400               	retlw	0
  4889     0EAB  3400               	retlw	0
  4890     0EAC  3400               	retlw	0
  4891     0EAD  3400               	retlw	0
  4892     0EAE  3400               	retlw	0
  4893                           
  4894                           	psect	stringtext1
  4895     0779                     __pstringtext1:
  4896     0779                     _UART:
  4897     0779  34AF               	retlw	low _EUSART_Initialize
  4898     077A  340E               	retlw	high _EUSART_Initialize
  4899     077B  3400               	retlw	0
  4900     077C  3400               	retlw	0
  4901     077D  347C               	retlw	low _EUSART_Read
  4902     077E  340F               	retlw	high _EUSART_Read
  4903     077F  342F               	retlw	low _EUSART_Write
  4904     0780  340D               	retlw	high _EUSART_Write
  4905     0781  3441               	retlw	low _EUSART_IsRxReady
  4906     0782  340D               	retlw	high _EUSART_IsRxReady
  4907     0783  3417               	retlw	low _EUSART_IsTxReady
  4908     0784  340E               	retlw	high _EUSART_IsTxReady
  4909     0785  3400               	retlw	0
  4910     0786  3400               	retlw	0
  4911     0787  3400               	retlw	0
  4912     0788  3400               	retlw	0
  4913     0789  3400               	retlw	0
  4914     078A  3400               	retlw	0
  4915     078B  3400               	retlw	0
  4916     078C  3400               	retlw	0
  4917     078D  3400               	retlw	0
  4918     078E  3400               	retlw	0
  4919     078F  3400               	retlw	0
  4920     0790  3400               	retlw	0
  4921     0791  3400               	retlw	0
  4922     0792  3400               	retlw	0
  4923     0793  3400               	retlw	0
  4924     0794  3400               	retlw	0
  4925     0795  3400               	retlw	0
  4926     0796  3400               	retlw	0
  4927     0797  3400               	retlw	0
  4928     0798  3400               	retlw	0
  4929     0799  3400               	retlw	0
  4930     079A  3400               	retlw	0
  4931     079B  3400               	retlw	0
  4932     079C  3400               	retlw	0
  4933     079D  3400               	retlw	0
  4934     079E  3400               	retlw	0
  4935     079F  3400               	retlw	0
  4936     07A0  3400               	retlw	0
  4937     07A1  34C3               	retlw	low _EUSART_FramingErrorCallbackRegister
  4938     07A2  340D               	retlw	high _EUSART_FramingErrorCallbackRegister
  4939     07A3  34F1               	retlw	low _EUSART_OverrunErrorCallbackRegister
  4940     07A4  340D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  4941     07A5  3400               	retlw	0
  4942     07A6  3400               	retlw	0
  4943     07A7  3400               	retlw	0
  4944     07A8  3400               	retlw	0
  4945     07A9                     __end_of_UART:
  4946                           
  4947                           	psect	stringtext2
  4948     07FF                     __pstringtext2:
  4949     07FF                     _I2C_Host:
  4950     07FF  3481               	retlw	low _I2C1_Initialize
  4951     0800  340E               	retlw	high _I2C1_Initialize
  4952     0801  3400               	retlw	0
  4953     0802  3400               	retlw	0
  4954     0803  34CC               	retlw	low _I2C1_Write
  4955     0804  340E               	retlw	high _I2C1_Write
  4956     0805  340C               	retlw	low _I2C1_Read
  4957     0806  340F               	retlw	high _I2C1_Read
  4958     0807  3400               	retlw	0
  4959     0808  3400               	retlw	0
  4960     0809  3400               	retlw	0
  4961     080A  3400               	retlw	0
  4962     080B  3400               	retlw	0
  4963     080C  3400               	retlw	0
  4964     080D  3426               	retlw	low _I2C1_IsBusy
  4965     080E  340E               	retlw	high _I2C1_IsBusy
  4966     080F  34FD               	retlw	low _I2C1_CallbackRegister
  4967     0810  340D               	retlw	high _I2C1_CallbackRegister
  4968     0811  3400               	retlw	0
  4969     0812  3400               	retlw	0
  4970     0813                     __end_of_I2C_Host:
  4971                           
  4972                           	psect	stringtext3
  4973     0813                     __pstringtext3:
  4974     0813                     _i2c1_eventTable:
  4975     0813  341F               	retlw	low _I2C1_EVENT_IDLE
  4976     0814  340D               	retlw	high _I2C1_EVENT_IDLE
  4977     0815  34A0               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  4978     0816  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  4979     0817  346F               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  4980     0818  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  4981     0819  34A6               	retlw	low _I2C1_EVENT_TX
  4982     081A  340F               	retlw	high _I2C1_EVENT_TX
  4983     081B  34A3               	retlw	low _I2C1_EVENT_RX
  4984     081C  3406               	retlw	high _I2C1_EVENT_RX
  4985     081D  344B               	retlw	low _I2C1_EVENT_NACK
  4986     081E  340D               	retlw	high _I2C1_EVENT_NACK
  4987     081F  3451               	retlw	low _I2C1_EVENT_ERROR
  4988     0820  340D               	retlw	high _I2C1_EVENT_ERROR
  4989     0821  34A8               	retlw	low _I2C1_EVENT_STOP
  4990     0822  340D               	retlw	high _I2C1_EVENT_STOP
  4991     0823  3476               	retlw	low _I2C1_EVENT_RESET
  4992     0824  340D               	retlw	high _I2C1_EVENT_RESET
  4993     0825                     __end_of_i2c1_eventTable:
  4994                           
  4995                           	psect	nvBANK0
  4996     006B                     __pnvBANK0:
  4997     006B                     _ADC_InterruptHandler:
  4998     006B                     	ds	2
  4999     000B                     _INTCONbits	set	11
  5000     0011                     _PIR2bits	set	17
  5001     0010                     _PIR1bits	set	16
  5002     0095                     _OPTION_REGbits	set	149
  5003     008E                     _TRISC	set	142
  5004     008D                     _TRISB	set	141
  5005     008C                     _TRISA	set	140
  5006     0098                     _OSCTUNE	set	152
  5007     0099                     _OSCCON	set	153
  5008     0091                     _PIE2bits	set	145
  5009     009D                     _ADCON0bits	set	157
  5010     0090                     _PIE1bits	set	144
  5011     009D                     _ADCON0	set	157
  5012     009F                     _ADCON2	set	159
  5013     009C                     _ADRESH	set	156
  5014     009B                     _ADRESL	set	155
  5015     009E                     _ADCON1	set	158
  5016     010E                     _LATCbits	set	270
  5017     010E                     _LATC	set	270
  5018     010D                     _LATB	set	269
  5019     010C                     _LATA	set	268
  5020     0116                     _BORCON	set	278
  5021     019A                     _TX1REG	set	410
  5022     0199                     _RC1REG	set	409
  5023     019F                     _BAUD1CONbits	set	415
  5024     019E                     _TX1STAbits	set	414
  5025     019D                     _RC1STAbits	set	413
  5026     019C                     _SPBRGH	set	412
  5027     019B                     _SPBRGL	set	411
  5028     019E                     _TX1STA	set	414
  5029     019D                     _RC1STA	set	413
  5030     019F                     _BAUD1CON	set	415
  5031     018E                     _ANSELC	set	398
  5032     018D                     _ANSELB	set	397
  5033     018C                     _ANSELA	set	396
  5034     020E                     _WPUC	set	526
  5035     020D                     _WPUB	set	525
  5036     020C                     _WPUA	set	524
  5037     0216                     _SSP1CON2bits	set	534
  5038     0211                     _SSP1BUF	set	529
  5039     0214                     _SSP1STATbits	set	532
  5040     0215                     _SSP1CON1bits	set	533
  5041     0212                     _SSP1ADD	set	530
  5042     0217                     _SSP1CON3	set	535
  5043     0216                     _SSP1CON2	set	534
  5044     0215                     _SSP1CON1	set	533
  5045     0214                     _SSP1STAT	set	532
  5046     028E                     _ODCONC	set	654
  5047     028D                     _ODCONB	set	653
  5048     028C                     _ODCONA	set	652
  5049     030E                     _SLRCONC	set	782
  5050     030D                     _SLRCONB	set	781
  5051     030C                     _SLRCONA	set	780
  5052     0399                     _IOCCF	set	921
  5053     0398                     _IOCCN	set	920
  5054     0397                     _IOCCP	set	919
  5055     0396                     _IOCBF	set	918
  5056     0395                     _IOCBN	set	917
  5057     0394                     _IOCBP	set	916
  5058     0393                     _IOCAF	set	915
  5059     0392                     _IOCAN	set	914
  5060     0391                     _IOCAP	set	913
  5061     038E                     _INLVLC	set	910
  5062     038D                     _INLVLB	set	909
  5063     038C                     _INLVLA	set	908
  5064     0E21                     _SSPDATPPS	set	3617
  5065     0E20                     _SSPCLKPPS	set	3616
  5066     0E24                     _RXPPS	set	3620
  5067     0E9D                     _RB5PPS	set	3741
  5068     0E9E                     _RB6PPS	set	3742
  5069     0EA2                     _RC2PPS	set	3746
  5070                           
  5071                           	psect	cinit
  5072     0038                     start_initialization:	
  5073                           ; #config settings
  5074                           
  5075     0038                     __initialization:
  5076                           
  5077                           ; Initialize objects allocated to BANK0
  5078     0038  3099               	movlw	low __pidataBANK0
  5079     0039  0084               	movwf	4
  5080     003A  308D               	movlw	(high __pidataBANK0)| (0+128)
  5081     003B  0085               	movwf	5
  5082     003C  3064               	movlw	low __pdataBANK0
  5083     003D  0086               	movwf	6
  5084     003E  3000               	movlw	high __pdataBANK0
  5085     003F  0087               	movwf	7
  5086     0040  3007               	movlw	7
  5087     0041  318D  2569  3180   	fcall	init_ram
  5088                           
  5089                           ; Initialize objects allocated to BANK1
  5090     0044  3097               	movlw	low __pidataBANK1
  5091     0045  0084               	movwf	4
  5092     0046  308E               	movlw	(high __pidataBANK1)| (0+128)
  5093     0047  0085               	movwf	5
  5094     0048  30A0               	movlw	low __pdataBANK1
  5095     0049  0086               	movwf	6
  5096     004A  3000               	movlw	high __pdataBANK1
  5097     004B  0087               	movwf	7
  5098     004C  3018               	movlw	24
  5099     004D  318D  2569  3180   	fcall	init_ram
  5100                           
  5101                           ; Clear objects allocated to COMMON
  5102     0050  01F6               	clrf	__pbssCOMMON& (0+127)
  5103     0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5104     0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5105     0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5106                           
  5107                           ; Clear objects allocated to BANK0
  5108     0054  3052               	movlw	low __pbssBANK0
  5109     0055  0084               	movwf	4
  5110     0056  3000               	movlw	high __pbssBANK0
  5111     0057  0085               	movwf	5
  5112     0058  3012               	movlw	18
  5113     0059  318D  2563  3180   	fcall	clear_ram0
  5114                           
  5115                           ; Clear objects allocated to BANK1
  5116     005C  30B8               	movlw	low __pbssBANK1
  5117     005D  0084               	movwf	4
  5118     005E  3000               	movlw	high __pbssBANK1
  5119     005F  0085               	movwf	5
  5120     0060  3017               	movlw	23
  5121     0061  318D  2563  3180   	fcall	clear_ram0
  5122     0064                     end_of_initialization:	
  5123                           ;End of C runtime variable initialization code
  5124                           
  5125     0064                     __end_of__initialization:
  5126     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5127     0065  0020               	movlb	0
  5128     0066  3187  2FD7         	ljmp	_main	;jump to C main() function
  5129                           
  5130                           	psect	bssCOMMON
  5131     0076                     __pbssCOMMON:
  5132     0076                     _EUSART_FramingErrorHandler:
  5133     0076                     	ds	2
  5134     0078                     _INT_InterruptHandler:
  5135     0078                     	ds	2
  5136                           
  5137                           	psect	bssBANK0
  5138     0052                     __pbssBANK0:
  5139     0052                     _i2c1Status:
  5140     0052                     	ds	12
  5141     005E                     _EUSART_OverrunErrorHandler:
  5142     005E                     	ds	2
  5143     0060                     _eusartRxLastError:
  5144     0060                     	ds	2
  5145     0062                     _I2C1_Callback:
  5146     0062                     	ds	2
  5147                           
  5148                           	psect	dataBANK0
  5149     0064                     __pdataBANK0:
  5150     0064                     _kaps:
  5151     0064                     	ds	7
  5152                           
  5153                           	psect	bssBANK1
  5154     00B8                     __pbssBANK1:
  5155     00B8                     _parser:
  5156     00B8                     	ds	8
  5157     00C0                     KAPS_getPos@F9702:
  5158     00C0                     	ds	4
  5159     00C4                     ProcessMsg@payload:
  5160     00C4                     	ds	6
  5161     00CA                     _parserDataBuffer:
  5162     00CA                     	ds	5
  5163                           
  5164                           	psect	dataBANK1
  5165     00A0                     __pdataBANK1:
  5166     00A0                     _sspas:
  5167     00A0                     	ds	24
  5168                           
  5169                           	psect	inittext
  5170     0D69                     init_ram:
  5171     0D69  00FE               	movwf	btemp
  5172     0D6A                     initloop:
  5173     0D6A  0012               	moviw fsr0++
  5174     0D6B  001E               	movwi fsr1++
  5175     0D6C  0BFE               	decfsz	btemp,f
  5176     0D6D  2D6A               	goto	initloop
  5177     0D6E  3400               	retlw	0
  5178                           
  5179                           	psect	clrtext
  5180     0D63                     clear_ram0:	
  5181                           ;	Called with FSR0 containing the base address, and
  5182                           ;	WREG with the size to clear
  5183                           
  5184     0D63  0064               	clrwdt	;clear the watchdog before getting into this loop
  5185     0D64                     clrloop0:
  5186     0D64  0180               	clrf	0	;clear RAM location pointed to by FSR
  5187     0D65  3101               	addfsr 0,1
  5188     0D66  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5189     0D67  2D64               	goto	clrloop0	;have we reached the end yet?
  5190     0D68  3400               	retlw	0	;all done for this memory range, return
  5191                           
  5192                           	psect	cstackCOMMON
  5193     0070                     __pcstackCOMMON:
  5194     0070                     ?_ADC_DefaultInterruptHandler:
  5195     0070                     ??_ADC_DefaultInterruptHandler:	
  5196                           ; 1 bytes @ 0x0
  5197                           
  5198     0070                     ?_I2C1_Initialize:	
  5199                           ; 1 bytes @ 0x0
  5200                           
  5201     0070                     ?_I2C1_IsBusy:	
  5202                           ; 1 bytes @ 0x0
  5203                           
  5204     0070                     ?_I2C1_EVENT_IDLE:	
  5205                           ; 1 bytes @ 0x0
  5206                           
  5207     0070                     ??_I2C1_EVENT_IDLE:	
  5208                           ; 1 bytes @ 0x0
  5209                           
  5210     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  5211                           ; 1 bytes @ 0x0
  5212                           
  5213     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  5214                           ; 1 bytes @ 0x0
  5215                           
  5216     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  5217                           ; 1 bytes @ 0x0
  5218                           
  5219     0070                     ?_I2C1_EVENT_TX:	
  5220                           ; 1 bytes @ 0x0
  5221                           
  5222     0070                     ?_I2C1_EVENT_RX:	
  5223                           ; 1 bytes @ 0x0
  5224                           
  5225     0070                     ??_I2C1_EVENT_RX:	
  5226                           ; 1 bytes @ 0x0
  5227                           
  5228     0070                     ?_I2C1_EVENT_NACK:	
  5229                           ; 1 bytes @ 0x0
  5230                           
  5231     0070                     ??_I2C1_EVENT_NACK:	
  5232                           ; 1 bytes @ 0x0
  5233                           
  5234     0070                     ?_I2C1_EVENT_ERROR:	
  5235                           ; 1 bytes @ 0x0
  5236                           
  5237     0070                     ??_I2C1_EVENT_ERROR:	
  5238                           ; 1 bytes @ 0x0
  5239                           
  5240     0070                     ?_I2C1_EVENT_STOP:	
  5241                           ; 1 bytes @ 0x0
  5242                           
  5243     0070                     ??_I2C1_EVENT_STOP:	
  5244                           ; 1 bytes @ 0x0
  5245                           
  5246     0070                     ?_I2C1_EVENT_RESET:	
  5247                           ; 1 bytes @ 0x0
  5248                           
  5249     0070                     ??_I2C1_EVENT_RESET:	
  5250                           ; 1 bytes @ 0x0
  5251                           
  5252     0070                     ?_I2C1_InterruptsEnable:	
  5253                           ; 1 bytes @ 0x0
  5254                           
  5255     0070                     ?_I2C1_DefaultCallback:	
  5256                           ; 1 bytes @ 0x0
  5257                           
  5258     0070                     ??_I2C1_DefaultCallback:	
  5259                           ; 1 bytes @ 0x0
  5260                           
  5261     0070                     ?_I2C1_WriteStart:	
  5262                           ; 1 bytes @ 0x0
  5263                           
  5264     0070                     ?_I2C1_ReadStart:	
  5265                           ; 1 bytes @ 0x0
  5266                           
  5267     0070                     ?_I2C1_EventHandler:	
  5268                           ; 1 bytes @ 0x0
  5269                           
  5270     0070                     ?_I2C1_ErrorEventHandler:	
  5271                           ; 1 bytes @ 0x0
  5272                           
  5273     0070                     ?_I2C1_StartSend:	
  5274                           ; 1 bytes @ 0x0
  5275                           
  5276     0070                     ?_I2C1_InterruptClear:	
  5277                           ; 1 bytes @ 0x0
  5278                           
  5279     0070                     ??_I2C1_InterruptClear:	
  5280                           ; 1 bytes @ 0x0
  5281                           
  5282     0070                     ?_I2C1_ErrorInterruptClear:	
  5283                           ; 1 bytes @ 0x0
  5284                           
  5285     0070                     ??_I2C1_ErrorInterruptClear:	
  5286                           ; 1 bytes @ 0x0
  5287                           
  5288     0070                     ?_I2C1_StatusFlagsClear:	
  5289                           ; 1 bytes @ 0x0
  5290                           
  5291     0070                     ??_I2C1_StatusFlagsClear:	
  5292                           ; 1 bytes @ 0x0
  5293                           
  5294     0070                     ?_I2C1_IsAddr:	
  5295                           ; 1 bytes @ 0x0
  5296                           
  5297     0070                     ??_I2C1_IsAddr:	
  5298                           ; 1 bytes @ 0x0
  5299                           
  5300     0070                     ?_I2C1_IsNack:	
  5301                           ; 1 bytes @ 0x0
  5302                           
  5303     0070                     ??_I2C1_IsNack:	
  5304                           ; 1 bytes @ 0x0
  5305                           
  5306     0070                     ?_I2C1_IsData:	
  5307                           ; 1 bytes @ 0x0
  5308                           
  5309     0070                     ??_I2C1_IsData:	
  5310                           ; 1 bytes @ 0x0
  5311                           
  5312     0070                     ?_I2C1_DataTransmit:	
  5313                           ; 1 bytes @ 0x0
  5314                           
  5315     0070                     ??_I2C1_DataTransmit:	
  5316                           ; 1 bytes @ 0x0
  5317                           
  5318     0070                     ?_I2C1_RestartEnable:	
  5319                           ; 1 bytes @ 0x0
  5320                           
  5321     0070                     ??_I2C1_RestartEnable:	
  5322                           ; 1 bytes @ 0x0
  5323                           
  5324     0070                     ?_I2C1_IsRxBufFull:	
  5325                           ; 1 bytes @ 0x0
  5326                           
  5327     0070                     ??_I2C1_IsRxBufFull:	
  5328                           ; 1 bytes @ 0x0
  5329                           
  5330     0070                     ?_I2C1_DataReceive:	
  5331                           ; 1 bytes @ 0x0
  5332                           
  5333     0070                     ??_I2C1_DataReceive:	
  5334                           ; 1 bytes @ 0x0
  5335                           
  5336     0070                     ?_I2C1_AckSend:	
  5337                           ; 1 bytes @ 0x0
  5338                           
  5339     0070                     ??_I2C1_AckSend:	
  5340                           ; 1 bytes @ 0x0
  5341                           
  5342     0070                     ?_I2C1_RestartDisable:	
  5343                           ; 1 bytes @ 0x0
  5344                           
  5345     0070                     ??_I2C1_RestartDisable:	
  5346                           ; 1 bytes @ 0x0
  5347                           
  5348     0070                     ?_I2C1_NackSend:	
  5349                           ; 1 bytes @ 0x0
  5350                           
  5351     0070                     ??_I2C1_NackSend:	
  5352                           ; 1 bytes @ 0x0
  5353                           
  5354     0070                     ?_I2C1_ReceiveEnable:	
  5355                           ; 1 bytes @ 0x0
  5356                           
  5357     0070                     ??_I2C1_ReceiveEnable:	
  5358                           ; 1 bytes @ 0x0
  5359                           
  5360     0070                     ?_I2C1_StopSend:	
  5361                           ; 1 bytes @ 0x0
  5362                           
  5363     0070                     ??_I2C1_StopSend:	
  5364                           ; 1 bytes @ 0x0
  5365                           
  5366     0070                     ?_I2C1_BusReset:	
  5367                           ; 1 bytes @ 0x0
  5368                           
  5369     0070                     ??_I2C1_BusReset:	
  5370                           ; 1 bytes @ 0x0
  5371                           
  5372     0070                     ?_EUSART_Initialize:	
  5373                           ; 1 bytes @ 0x0
  5374                           
  5375     0070                     ?_EUSART_Read:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378     0070                     ?_EUSART_IsRxReady:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381     0070                     ?_EUSART_IsTxReady:	
  5382                           ; 1 bytes @ 0x0
  5383                           
  5384     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  5385                           ; 1 bytes @ 0x0
  5386                           
  5387     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  5388                           ; 1 bytes @ 0x0
  5389                           
  5390     0070                     ?_SSPA_getTemp:	
  5391                           ; 1 bytes @ 0x0
  5392                           
  5393     0070                     ?_SSPA_getPOut:	
  5394                           ; 1 bytes @ 0x0
  5395                           
  5396     0070                     ?_KAPS_getStatus:	
  5397                           ; 1 bytes @ 0x0
  5398                           
  5399     0070                     ?_KAPS_getPos:	
  5400                           ; 1 bytes @ 0x0
  5401                           
  5402     0070                     ?_KAPS_getIndex:	
  5403                           ; 1 bytes @ 0x0
  5404                           
  5405     0070                     ?_KAPS_GoToIdx:	
  5406                           ; 1 bytes @ 0x0
  5407                           
  5408     0070                     ?_KAPS_setRelPos:	
  5409                           ; 1 bytes @ 0x0
  5410                           
  5411     0070                     ?_Parse:	
  5412                           ; 1 bytes @ 0x0
  5413                           
  5414     0070                     ?_ADC_Initialize:	
  5415                           ; 1 bytes @ 0x0
  5416                           
  5417     0070                     ?_ADC_SelectChannel:	
  5418                           ; 1 bytes @ 0x0
  5419                           
  5420     0070                     ?_ADC_StartConversion:	
  5421                           ; 1 bytes @ 0x0
  5422                           
  5423     0070                     ?_ADC_IsConversionDone:	
  5424                           ; 1 bytes @ 0x0
  5425                           
  5426     0070                     ?_ADC_ISR:	
  5427                           ; 1 bytes @ 0x0
  5428                           
  5429     0070                     ??_ADC_ISR:	
  5430                           ; 1 bytes @ 0x0
  5431                           
  5432     0070                     ?_I2C1_ISR:	
  5433                           ; 1 bytes @ 0x0
  5434                           
  5435     0070                     ?_I2C1_ERROR_ISR:	
  5436                           ; 1 bytes @ 0x0
  5437                           
  5438     0070                     ?_I2C1_Close:	
  5439                           ; 1 bytes @ 0x0
  5440                           
  5441     0070                     ??_I2C1_Close:	
  5442                           ; 1 bytes @ 0x0
  5443                           
  5444     0070                     ?_CLOCK_Initialize:	
  5445                           ; 1 bytes @ 0x0
  5446                           
  5447     0070                     ?_PIN_MANAGER_Initialize:	
  5448                           ; 1 bytes @ 0x0
  5449                           
  5450     0070                     ?_INTERRUPT_Initialize:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453     0070                     ?_INTERRUPT_InterruptManager:	
  5454                           ; 1 bytes @ 0x0
  5455                           
  5456     0070                     ?_SYSTEM_Initialize:	
  5457                           ; 1 bytes @ 0x0
  5458                           
  5459     0070                     ?_SendSync:	
  5460                           ; 1 bytes @ 0x0
  5461                           
  5462     0070                     ?_SendNack:	
  5463                           ; 1 bytes @ 0x0
  5464                           
  5465     0070                     ?_main:	
  5466                           ; 1 bytes @ 0x0
  5467                           
  5468     0070                     I2C1_EVENT_NACK@retEventState:	
  5469                           ; 2 bytes @ 0x0
  5470                           
  5471     0070                     I2C1_EVENT_ERROR@retEventState:	
  5472                           ; 1 bytes @ 0x0
  5473                           
  5474     0070                     I2C1_DataTransmit@data:	
  5475                           ; 1 bytes @ 0x0
  5476                           
  5477                           
  5478                           ; 1 bytes @ 0x0
  5479     0070                     	ds	1
  5480     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  5481     0071                     ??_I2C1_EVENT_TX:	
  5482                           ; 1 bytes @ 0x1
  5483                           
  5484     0071                     I2C1_EVENT_TX@retEventState:	
  5485                           ; 1 bytes @ 0x1
  5486                           
  5487     0071                     I2C1_EVENT_RX@retEventState:	
  5488                           ; 1 bytes @ 0x1
  5489                           
  5490                           
  5491                           ; 1 bytes @ 0x1
  5492     0071                     	ds	1
  5493     0072                     ??_I2C1_EventHandler:
  5494     0072                     ??_I2C1_ErrorEventHandler:	
  5495                           ; 1 bytes @ 0x2
  5496                           
  5497                           
  5498                           ; 1 bytes @ 0x2
  5499     0072                     	ds	2
  5500     0074                     ?_ADC_SetInterruptHandler:
  5501     0074                     ??_I2C1_IsBusy:	
  5502                           ; 1 bytes @ 0x4
  5503                           
  5504     0074                     ?_I2C1_CallbackRegister:	
  5505                           ; 1 bytes @ 0x4
  5506                           
  5507     0074                     ??_I2C1_InterruptsEnable:	
  5508                           ; 1 bytes @ 0x4
  5509                           
  5510     0074                     ??_I2C1_WriteStart:	
  5511                           ; 1 bytes @ 0x4
  5512                           
  5513     0074                     ??_I2C1_ReadStart:	
  5514                           ; 1 bytes @ 0x4
  5515                           
  5516     0074                     ??_I2C1_StartSend:	
  5517                           ; 1 bytes @ 0x4
  5518                           
  5519     0074                     ?_INT_SetInterruptHandler:	
  5520                           ; 1 bytes @ 0x4
  5521                           
  5522     0074                     ??_EUSART_Read:	
  5523                           ; 1 bytes @ 0x4
  5524                           
  5525     0074                     ?_EUSART_Write:	
  5526                           ; 1 bytes @ 0x4
  5527                           
  5528     0074                     ??_EUSART_IsRxReady:	
  5529                           ; 1 bytes @ 0x4
  5530                           
  5531     0074                     ??_EUSART_IsTxReady:	
  5532                           ; 1 bytes @ 0x4
  5533                           
  5534     0074                     ?_EUSART_FramingErrorCallbackRegister:	
  5535                           ; 1 bytes @ 0x4
  5536                           
  5537     0074                     ?_EUSART_OverrunErrorCallbackRegister:	
  5538                           ; 1 bytes @ 0x4
  5539                           
  5540     0074                     ??_EUSART_DefaultFramingErrorCallback:	
  5541                           ; 1 bytes @ 0x4
  5542                           
  5543     0074                     ??_EUSART_DefaultOverrunErrorCallback:	
  5544                           ; 1 bytes @ 0x4
  5545                           
  5546     0074                     ??_unpackWord:	
  5547                           ; 1 bytes @ 0x4
  5548                           
  5549     0074                     ?_SSPA_setMute:	
  5550                           ; 1 bytes @ 0x4
  5551                           
  5552     0074                     ??_ADC_SelectChannel:	
  5553                           ; 1 bytes @ 0x4
  5554                           
  5555     0074                     ??_ADC_StartConversion:	
  5556                           ; 1 bytes @ 0x4
  5557                           
  5558     0074                     ??_ADC_IsConversionDone:	
  5559                           ; 1 bytes @ 0x4
  5560                           
  5561     0074                     ??_I2C1_ISR:	
  5562                           ; 1 bytes @ 0x4
  5563                           
  5564     0074                     ??_I2C1_ERROR_ISR:	
  5565                           ; 1 bytes @ 0x4
  5566                           
  5567     0074                     ??_CLOCK_Initialize:	
  5568                           ; 1 bytes @ 0x4
  5569                           
  5570     0074                     ??_PIN_MANAGER_Initialize:	
  5571                           ; 1 bytes @ 0x4
  5572                           
  5573     0074                     ??_INTERRUPT_InterruptManager:	
  5574                           ; 1 bytes @ 0x4
  5575                           
  5576     0074                     ??___lmul:	
  5577                           ; 1 bytes @ 0x4
  5578                           
  5579     0074                     ??___aldiv:	
  5580                           ; 1 bytes @ 0x4
  5581                           
  5582     0074                     _I2C1_IsBusy$646:	
  5583                           ; 1 bytes @ 0x4
  5584                           
  5585     0074                     _EUSART_IsTxReady$1324:	
  5586                           ; 1 bytes @ 0x4
  5587                           
  5588     0074                     EUSART_Write@txData:	
  5589                           ; 1 bytes @ 0x4
  5590                           
  5591     0074                     SSPA_setMute@mute:	
  5592                           ; 1 bytes @ 0x4
  5593                           
  5594     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  5595                           ; 1 bytes @ 0x4
  5596                           
  5597     0074                     I2C1_CallbackRegister@callbackHandler:	
  5598                           ; 2 bytes @ 0x4
  5599                           
  5600     0074                     INT_SetInterruptHandler@InterruptHandler:	
  5601                           ; 2 bytes @ 0x4
  5602                           
  5603     0074                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  5604                           ; 2 bytes @ 0x4
  5605                           
  5606     0074                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  5607                           ; 2 bytes @ 0x4
  5608                           
  5609                           
  5610                           ; 2 bytes @ 0x4
  5611     0074                     	ds	1
  5612     0075                     ??_I2C1_Write:
  5613     0075                     ??_I2C1_Read:	
  5614                           ; 1 bytes @ 0x5
  5615                           
  5616     0075                     ??_EUSART_Write:	
  5617                           ; 1 bytes @ 0x5
  5618                           
  5619     0075                     ??_SendSync:	
  5620                           ; 1 bytes @ 0x5
  5621                           
  5622     0075                     ??_ADC2Amp:	
  5623                           ; 1 bytes @ 0x5
  5624                           
  5625     0075                     ??_ADC2dBm:	
  5626                           ; 1 bytes @ 0x5
  5627                           
  5628     0075                     ADC_SelectChannel@channel:	
  5629                           ; 1 bytes @ 0x5
  5630                           
  5631     0075                     I2C1_Read@retStatus:	
  5632                           ; 1 bytes @ 0x5
  5633                           
  5634     0075                     SendSync@data:	
  5635                           ; 1 bytes @ 0x5
  5636                           
  5637     0075                     SSPA_setMute@band:	
  5638                           ; 1 bytes @ 0x5
  5639                           
  5640                           
  5641                           ; 1 bytes @ 0x5
  5642     0075                     	ds	1
  5643     0076                     ??_ADC_SetInterruptHandler:
  5644     0076                     ??_I2C1_Initialize:	
  5645                           ; 1 bytes @ 0x6
  5646                           
  5647     0076                     ??_I2C1_CallbackRegister:	
  5648                           ; 1 bytes @ 0x6
  5649                           
  5650     0076                     ??_INT_SetInterruptHandler:	
  5651                           ; 1 bytes @ 0x6
  5652                           
  5653     0076                     ??_EUSART_Initialize:	
  5654                           ; 1 bytes @ 0x6
  5655                           
  5656     0076                     ??_EUSART_FramingErrorCallbackRegister:	
  5657                           ; 1 bytes @ 0x6
  5658                           
  5659     0076                     ??_EUSART_OverrunErrorCallbackRegister:	
  5660                           ; 1 bytes @ 0x6
  5661                           
  5662     0076                     ??_ADC_Initialize:	
  5663                           ; 1 bytes @ 0x6
  5664                           
  5665     0076                     ??_INTERRUPT_Initialize:	
  5666                           ; 1 bytes @ 0x6
  5667                           
  5668     0076                     ??_SYSTEM_Initialize:	
  5669                           ; 1 bytes @ 0x6
  5670                           
  5671     0076                     ??_main:	
  5672                           ; 1 bytes @ 0x6
  5673                           
  5674     0076                     ??_SendNack:	
  5675                           ; 1 bytes @ 0x6
  5676                           
  5677                           
  5678                           	psect	cstackBANK0
  5679     0020                     __pcstackBANK0:	
  5680                           ; 1 bytes @ 0x6
  5681                           
  5682     0020                     ?_I2C1_Write:
  5683     0020                     ?_I2C1_Read:	
  5684                           ; 1 bytes @ 0x0
  5685                           
  5686     0020                     ?_SendMsg:	
  5687                           ; 1 bytes @ 0x0
  5688                           
  5689     0020                     ?_unpackWord:	
  5690                           ; 1 bytes @ 0x0
  5691                           
  5692     0020                     ?_unpackLong:	
  5693                           ; 1 bytes @ 0x0
  5694                           
  5695     0020                     ??_SSPA_setMute:	
  5696                           ; 1 bytes @ 0x0
  5697                           
  5698     0020                     ?_getADCValue:	
  5699                           ; 1 bytes @ 0x0
  5700                           
  5701     0020                     ?_packLong:	
  5702                           ; 2 bytes @ 0x0
  5703                           
  5704     0020                     ?___lmul:	
  5705                           ; 4 bytes @ 0x0
  5706                           
  5707     0020                     SendMsg@data:	
  5708                           ; 4 bytes @ 0x0
  5709                           
  5710     0020                     I2C1_Write@address:	
  5711                           ; 1 bytes @ 0x0
  5712                           
  5713     0020                     I2C1_Read@address:	
  5714                           ; 2 bytes @ 0x0
  5715                           
  5716     0020                     unpackWord@value:	
  5717                           ; 2 bytes @ 0x0
  5718                           
  5719     0020                     unpackLong@value:	
  5720                           ; 2 bytes @ 0x0
  5721                           
  5722     0020                     ___lmul@multiplier:	
  5723                           ; 4 bytes @ 0x0
  5724                           
  5725                           
  5726                           ; 4 bytes @ 0x0
  5727     0020                     	ds	1
  5728     0021                     SendMsg@data_len:
  5729                           
  5730                           ; 1 bytes @ 0x1
  5731     0021                     	ds	1
  5732     0022                     ??_SendMsg:
  5733     0022                     ??_getADCValue:	
  5734                           ; 1 bytes @ 0x2
  5735                           
  5736     0022                     I2C1_Write@data:	
  5737                           ; 1 bytes @ 0x2
  5738                           
  5739     0022                     I2C1_Read@data:	
  5740                           ; 1 bytes @ 0x2
  5741                           
  5742     0022                     unpackWord@data:	
  5743                           ; 1 bytes @ 0x2
  5744                           
  5745                           
  5746                           ; 1 bytes @ 0x2
  5747     0022                     	ds	1
  5748     0023                     SendMsg@sum:
  5749     0023                     I2C1_Write@dataLength:	
  5750                           ; 1 bytes @ 0x3
  5751                           
  5752     0023                     I2C1_Read@dataLength:	
  5753                           ; 2 bytes @ 0x3
  5754                           
  5755                           
  5756                           ; 2 bytes @ 0x3
  5757     0023                     	ds	1
  5758     0024                     ??_packLong:
  5759     0024                     unpackLong@data:	
  5760                           ; 1 bytes @ 0x4
  5761                           
  5762     0024                     SendMsg@msg_id:	
  5763                           ; 1 bytes @ 0x4
  5764                           
  5765     0024                     getADCValue@channel:	
  5766                           ; 1 bytes @ 0x4
  5767                           
  5768     0024                     ___lmul@multiplicand:	
  5769                           ; 1 bytes @ 0x4
  5770                           
  5771                           
  5772                           ; 4 bytes @ 0x4
  5773     0024                     	ds	1
  5774     0025                     ??_unpackLong:
  5775     0025                     ??_KAPS_getStatus:	
  5776                           ; 1 bytes @ 0x5
  5777                           
  5778     0025                     ??_KAPS_getIndex:	
  5779                           ; 1 bytes @ 0x5
  5780                           
  5781     0025                     ??_KAPS_GoToIdx:	
  5782                           ; 1 bytes @ 0x5
  5783                           
  5784     0025                     ??_KAPS_setRelPos:	
  5785                           ; 1 bytes @ 0x5
  5786                           
  5787     0025                     SendNack@error:	
  5788                           ; 1 bytes @ 0x5
  5789                           
  5790     0025                     getADCValue@sum:	
  5791                           ; 1 bytes @ 0x5
  5792                           
  5793                           
  5794                           ; 2 bytes @ 0x5
  5795     0025                     	ds	1
  5796     0026                     ??_Parse:
  5797                           
  5798                           ; 1 bytes @ 0x6
  5799     0026                     	ds	1
  5800     0027                     KAPS_GoToIdx@idx:
  5801     0027                     KAPS_setRelPos@offset:	
  5802                           ; 1 bytes @ 0x7
  5803                           
  5804     0027                     KAPS_getStatus@reg:	
  5805                           ; 1 bytes @ 0x7
  5806                           
  5807     0027                     KAPS_getIndex@reg:	
  5808                           ; 1 bytes @ 0x7
  5809                           
  5810     0027                     getADCValue@i:	
  5811                           ; 1 bytes @ 0x7
  5812                           
  5813                           
  5814                           ; 1 bytes @ 0x7
  5815     0027                     	ds	1
  5816     0028                     KAPS_GoToIdx@reg:
  5817     0028                     KAPS_setRelPos@reg:	
  5818                           ; 1 bytes @ 0x8
  5819                           
  5820     0028                     KAPS_getStatus@data:	
  5821                           ; 1 bytes @ 0x8
  5822                           
  5823     0028                     KAPS_getIndex@data:	
  5824                           ; 1 bytes @ 0x8
  5825                           
  5826     0028                     Parse@data:	
  5827                           ; 1 bytes @ 0x8
  5828                           
  5829     0028                     packLong@result:	
  5830                           ; 1 bytes @ 0x8
  5831                           
  5832     0028                     ___lmul@product:	
  5833                           ; 4 bytes @ 0x8
  5834                           
  5835                           
  5836                           ; 4 bytes @ 0x8
  5837     0028                     	ds	1
  5838     0029                     KAPS_setRelPos@value:
  5839                           
  5840                           ; 1 bytes @ 0x9
  5841     0029                     	ds	3
  5842     002C                     ?___aldiv:
  5843     002C                     packLong@data:	
  5844                           ; 4 bytes @ 0xC
  5845                           
  5846     002C                     ___aldiv@divisor:	
  5847                           ; 1 bytes @ 0xC
  5848                           
  5849                           
  5850                           ; 4 bytes @ 0xC
  5851     002C                     	ds	1
  5852     002D                     ??_KAPS_getPos:
  5853     002D                     ?_KAPS_setAbsPos:	
  5854                           ; 1 bytes @ 0xD
  5855                           
  5856     002D                     ?_KAPS_StorePos:	
  5857                           ; 1 bytes @ 0xD
  5858                           
  5859     002D                     KAPS_setAbsPos@pos:	
  5860                           ; 1 bytes @ 0xD
  5861                           
  5862     002D                     KAPS_StorePos@pos:	
  5863                           ; 4 bytes @ 0xD
  5864                           
  5865                           
  5866                           ; 4 bytes @ 0xD
  5867     002D                     	ds	2
  5868     002F                     KAPS_getPos@data:
  5869                           
  5870                           ; 4 bytes @ 0xF
  5871     002F                     	ds	1
  5872     0030                     ___aldiv@dividend:
  5873                           
  5874                           ; 4 bytes @ 0x10
  5875     0030                     	ds	1
  5876     0031                     ??_KAPS_setAbsPos:
  5877     0031                     ??_KAPS_StorePos:	
  5878                           ; 1 bytes @ 0x11
  5879                           
  5880                           
  5881                           ; 1 bytes @ 0x11
  5882     0031                     	ds	2
  5883     0033                     KAPS_getPos@reg:
  5884     0033                     KAPS_setAbsPos@data:	
  5885                           ; 1 bytes @ 0x13
  5886                           
  5887     0033                     KAPS_StorePos@data:	
  5888                           ; 4 bytes @ 0x13
  5889                           
  5890                           
  5891                           ; 4 bytes @ 0x13
  5892     0033                     	ds	1
  5893     0034                     ___aldiv@counter:
  5894                           
  5895                           ; 1 bytes @ 0x14
  5896     0034                     	ds	1
  5897     0035                     ___aldiv@sign:
  5898                           
  5899                           ; 1 bytes @ 0x15
  5900     0035                     	ds	1
  5901     0036                     ___aldiv@quotient:
  5902                           
  5903                           ; 4 bytes @ 0x16
  5904     0036                     	ds	1
  5905     0037                     KAPS_setAbsPos@reg:
  5906     0037                     KAPS_StorePos@reg:	
  5907                           ; 1 bytes @ 0x17
  5908                           
  5909                           
  5910                           ; 1 bytes @ 0x17
  5911     0037                     	ds	1
  5912     0038                     KAPS_StorePos@idx:
  5913                           
  5914                           ; 1 bytes @ 0x18
  5915     0038                     	ds	2
  5916     003A                     ?_ADC2dBm:
  5917     003A                     ?_ADC2Celsius:	
  5918                           ; 1 bytes @ 0x1A
  5919                           
  5920     003A                     ?_ADC2Amp:	
  5921                           ; 2 bytes @ 0x1A
  5922                           
  5923     003A                     ADC2Celsius@v:	
  5924                           ; 4 bytes @ 0x1A
  5925                           
  5926     003A                     ADC2Amp@v:	
  5927                           ; 2 bytes @ 0x1A
  5928                           
  5929     003A                     ADC2dBm@v:	
  5930                           ; 2 bytes @ 0x1A
  5931                           
  5932                           
  5933                           ; 2 bytes @ 0x1A
  5934     003A                     	ds	2
  5935     003C                     ??_ADC2Celsius:
  5936     003C                     ADC2dBm@value:	
  5937                           ; 1 bytes @ 0x1C
  5938                           
  5939                           
  5940                           ; 4 bytes @ 0x1C
  5941     003C                     	ds	2
  5942     003E                     ADC2Amp@value:
  5943                           
  5944                           ; 4 bytes @ 0x1E
  5945     003E                     	ds	2
  5946     0040                     ADC2Celsius@value:
  5947     0040                     ADC2dBm@result:	
  5948                           ; 4 bytes @ 0x20
  5949                           
  5950                           
  5951                           ; 4 bytes @ 0x20
  5952     0040                     	ds	2
  5953     0042                     ADC2Amp@result:
  5954                           
  5955                           ; 4 bytes @ 0x22
  5956     0042                     	ds	2
  5957     0044                     ADC2Celsius@result:
  5958                           
  5959                           ; 4 bytes @ 0x24
  5960     0044                     	ds	2
  5961     0046                     ??_SSPA_getPOut:
  5962                           
  5963                           ; 1 bytes @ 0x26
  5964     0046                     	ds	2
  5965     0048                     ??_SSPA_getTemp:
  5966     0048                     SSPA_getPOut@adc_value:	
  5967                           ; 1 bytes @ 0x28
  5968                           
  5969                           
  5970                           ; 2 bytes @ 0x28
  5971     0048                     	ds	2
  5972     004A                     SSPA_getPOut@band:
  5973     004A                     SSPA_getTemp@adc_value:	
  5974                           ; 1 bytes @ 0x2A
  5975                           
  5976                           
  5977                           ; 2 bytes @ 0x2A
  5978     004A                     	ds	2
  5979     004C                     SSPA_getTemp@channel:
  5980                           
  5981                           ; 1 bytes @ 0x2C
  5982     004C                     	ds	1
  5983     004D                     SSPA_getTemp@band:
  5984                           
  5985                           ; 1 bytes @ 0x2D
  5986     004D                     	ds	1
  5987     004E                     ?_ProcessMsg:
  5988     004E                     ProcessMsg@data:	
  5989                           ; 1 bytes @ 0x2E
  5990                           
  5991                           
  5992                           ; 1 bytes @ 0x2E
  5993     004E                     	ds	1
  5994     004F                     ??_ProcessMsg:
  5995                           
  5996                           ; 1 bytes @ 0x2F
  5997     004F                     	ds	1
  5998     0050                     ProcessMsg@msg_id:
  5999                           
  6000                           ; 1 bytes @ 0x30
  6001     0050                     	ds	1
  6002     0051                     main@data:
  6003                           
  6004                           ; 1 bytes @ 0x31
  6005     0051                     	ds	1
  6006                           
  6007                           	psect	maintext
  6008     07D7                     __pmaintext:	
  6009 ;;
  6010 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6011 ;;
  6012 ;; *************** function _main *****************
  6013 ;; Defined at:
  6014 ;;		line 115 in file "main.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  data            1   49[BANK0 ] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  2  697[None  ] int 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6023 ;; Tracked objects:
  6024 ;;		On entry : B1F/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6028 ;;      Params:         0       0       0       0       0       0       0       0
  6029 ;;      Locals:         0       1       0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0
  6031 ;;      Totals:         0       1       0       0       0       0       0       0
  6032 ;;Total ram usage:        1 bytes
  6033 ;; Hardware stack levels required when called: 12
  6034 ;; This function calls:
  6035 ;;		_EUSART_IsRxReady
  6036 ;;		_EUSART_Read
  6037 ;;		_Parse
  6038 ;;		_ProcessMsg
  6039 ;;		_SYSTEM_Initialize
  6040 ;; This function is called by:
  6041 ;;		Startup code after reset
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045     07D7                     _main:	
  6046                           ;psect for function _main
  6047                           
  6048     07D7                     l4054:	
  6049                           ;incstack = 0
  6050                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6051                           
  6052                           
  6053                           ;main.c: 116:     SYSTEM_Initialize();
  6054     07D7  318E  265A  3187   	fcall	_SYSTEM_Initialize
  6055     07DA                     l4056:
  6056                           
  6057                           ;main.c: 118:     (INTCONbits.GIE = 1);
  6058     07DA  178B               	bsf	11,7	;volatile
  6059     07DB                     l4058:
  6060                           
  6061                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6062     07DB  170B               	bsf	11,6	;volatile
  6063     07DC                     l4060:
  6064     07DC                     l4062:
  6065                           
  6066                           ;main.c: 132:         if (EUSART_IsRxReady()) {
  6067     07DC  318D  2541  3187   	fcall	_EUSART_IsRxReady
  6068     07DF  3A00               	xorlw	0
  6069     07E0  1903               	skipnz
  6070     07E1  2FE3               	goto	u2061
  6071     07E2  2FE4               	goto	u2060
  6072     07E3                     u2061:
  6073     07E3  2FFB               	goto	l699
  6074     07E4                     u2060:
  6075     07E4                     l4064:
  6076                           
  6077                           ;main.c: 133:             data = EUSART_Read();
  6078     07E4  318F  277C  3187   	fcall	_EUSART_Read
  6079     07E7  0020               	movlb	0	; select bank0
  6080     07E8  00D1               	movwf	main@data
  6081     07E9                     l4066:
  6082                           
  6083                           ;main.c: 135:             if (Parse(data))
  6084     07E9  0851               	movf	main@data,w
  6085     07EA  3181  21AC  3187   	fcall	_Parse
  6086     07ED  3A00               	xorlw	0
  6087     07EE  1903               	skipnz
  6088     07EF  2FF1               	goto	u2071
  6089     07F0  2FF2               	goto	u2070
  6090     07F1                     u2071:
  6091     07F1  2FDC               	goto	l4062
  6092     07F2                     u2070:
  6093     07F2                     l4068:
  6094                           
  6095                           ;main.c: 136:                 ProcessMsg(parser.m_MsgID, parserDataBuffer);
  6096     07F2  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
  6097     07F3  0020               	movlb	0	; select bank0
  6098     07F4  00CE               	movwf	ProcessMsg@data
  6099     07F5  0021               	movlb	1	; select bank1
  6100     07F6  0839               	movf	(_parser^(0+128)+1),w
  6101     07F7  3180  2068  3187   	fcall	_ProcessMsg
  6102     07FA  2FDC               	goto	l4062
  6103     07FB                     l699:	
  6104                           ;main.c: 138:         else
  6105                           
  6106                           
  6107                           ;main.c: 139:             __nop();
  6108     07FB  0000               	nop
  6109     07FC  2FDC               	goto	l4062
  6110     07FD  3180  2836         	ljmp	start
  6111     07FF                     __end_of_main:
  6112                           
  6113                           	psect	text1
  6114     0E5A                     __ptext1:	
  6115 ;; *************** function _SYSTEM_Initialize *****************
  6116 ;; Defined at:
  6117 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2, status,0, pclath, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6131 ;;      Params:         0       0       0       0       0       0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0
  6134 ;;      Totals:         0       0       0       0       0       0       0       0
  6135 ;;Total ram usage:        0 bytes
  6136 ;; Hardware stack levels used: 1
  6137 ;; Hardware stack levels required when called: 9
  6138 ;; This function calls:
  6139 ;;		_ADC_Initialize
  6140 ;;		_CLOCK_Initialize
  6141 ;;		_EUSART_Initialize
  6142 ;;		_I2C1_Initialize
  6143 ;;		_INTERRUPT_Initialize
  6144 ;;		_PIN_MANAGER_Initialize
  6145 ;; This function is called by:
  6146 ;;		_main
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150     0E5A                     _SYSTEM_Initialize:	
  6151                           ;psect for function _SYSTEM_Initialize
  6152                           
  6153     0E5A                     l3158:	
  6154                           ;incstack = 0
  6155                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6156                           
  6157                           
  6158                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  6159     0E5A  318D  25B0  318E   	fcall	_CLOCK_Initialize
  6160                           
  6161                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  6162     0E5D  3184  2421  318E   	fcall	_PIN_MANAGER_Initialize
  6163                           
  6164                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  6165     0E60  318E  266D  318E   	fcall	_ADC_Initialize
  6166                           
  6167                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  6168     0E63  318E  26AF  318E   	fcall	_EUSART_Initialize
  6169                           
  6170                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  6171     0E66  318E  2681  318E   	fcall	_I2C1_Initialize
  6172                           
  6173                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  6174     0E69  318D  25CE  318E   	fcall	_INTERRUPT_Initialize
  6175     0E6C                     l483:
  6176     0E6C  0008               	return
  6177     0E6D                     __end_of_SYSTEM_Initialize:
  6178                           
  6179                           	psect	text2
  6180     0421                     __ptext2:	
  6181 ;; *************** function _PIN_MANAGER_Initialize *****************
  6182 ;; Defined at:
  6183 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;		None
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;		None
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6197 ;;      Params:         0       0       0       0       0       0       0       0
  6198 ;;      Locals:         0       0       0       0       0       0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0
  6200 ;;      Totals:         0       0       0       0       0       0       0       0
  6201 ;;Total ram usage:        0 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 7
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_SYSTEM_Initialize
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211     0421                     _PIN_MANAGER_Initialize:	
  6212                           ;psect for function _PIN_MANAGER_Initialize
  6213                           
  6214     0421                     l2942:	
  6215                           ;incstack = 0
  6216                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6217                           
  6218                           
  6219                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  6220     0421  0022               	movlb	2	; select bank2
  6221     0422  018C               	clrf	12	;volatile
  6222     0423                     l2944:
  6223                           
  6224                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  6225     0423  3060               	movlw	96
  6226     0424  008D               	movwf	13	;volatile
  6227     0425                     l2946:
  6228                           
  6229                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  6230     0425  018E               	clrf	14	;volatile
  6231                           
  6232                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  6233     0426  303F               	movlw	63
  6234     0427  0021               	movlb	1	; select bank1
  6235     0428  008C               	movwf	12	;volatile
  6236                           
  6237                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  6238     0429  30F0               	movlw	240
  6239     042A  008D               	movwf	13	;volatile
  6240                           
  6241                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  6242     042B  303B               	movlw	59
  6243     042C  008E               	movwf	14	;volatile
  6244                           
  6245                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  6246     042D  3017               	movlw	23
  6247     042E  0023               	movlb	3	; select bank3
  6248     042F  008C               	movwf	12	;volatile
  6249                           
  6250                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  6251     0430  3010               	movlw	16
  6252     0431  008D               	movwf	13	;volatile
  6253                           
  6254                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  6255     0432  300D               	movlw	13
  6256     0433  008E               	movwf	14	;volatile
  6257                           
  6258                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  6259     0434  302C               	movlw	44
  6260     0435  0024               	movlb	4	; select bank4
  6261     0436  008C               	movwf	12	;volatile
  6262                           
  6263                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  6264     0437  30E0               	movlw	224
  6265     0438  008D               	movwf	13	;volatile
  6266                           
  6267                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  6268     0439  30F7               	movlw	247
  6269     043A  008E               	movwf	14	;volatile
  6270     043B                     l2948:
  6271                           
  6272                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  6273     043B  0021               	movlb	1	; select bank1
  6274     043C  1395               	bcf	21,7	;volatile
  6275     043D                     l2950:
  6276                           
  6277                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  6278     043D  0025               	movlb	5	; select bank5
  6279     043E  018C               	clrf	12	;volatile
  6280     043F                     l2952:
  6281                           
  6282                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  6283     043F  018D               	clrf	13	;volatile
  6284     0440                     l2954:
  6285                           
  6286                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  6287     0440  018E               	clrf	14	;volatile
  6288     0441                     l2956:
  6289                           
  6290                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  6291     0441  3037               	movlw	55
  6292     0442  0026               	movlb	6	; select bank6
  6293     0443  008C               	movwf	12	;volatile
  6294     0444                     l2958:
  6295                           
  6296                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  6297     0444  30F0               	movlw	240
  6298     0445  008D               	movwf	13	;volatile
  6299     0446                     l2960:
  6300                           
  6301                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  6302     0446  30FF               	movlw	255
  6303     0447  008E               	movwf	14	;volatile
  6304     0448                     l2962:
  6305                           
  6306                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  6307     0448  303F               	movlw	63
  6308     0449  0027               	movlb	7	; select bank7
  6309     044A  008C               	movwf	12	;volatile
  6310     044B                     l2964:
  6311                           
  6312                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  6313     044B  30F0               	movlw	240
  6314     044C  008D               	movwf	13	;volatile
  6315     044D                     l2966:
  6316                           
  6317                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  6318     044D  30FF               	movlw	255
  6319     044E  008E               	movwf	14	;volatile
  6320     044F                     l2968:
  6321                           
  6322                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  6323     044F  3011               	movlw	17
  6324     0450  003C               	movlb	28	; select bank28
  6325     0451  00A4               	movwf	36	;volatile
  6326     0452                     l2970:
  6327                           
  6328                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  6329     0452  3006               	movlw	6
  6330     0453  003D               	movlb	29	; select bank29
  6331     0454  00A2               	movwf	34	;volatile
  6332     0455                     l2972:
  6333                           
  6334                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  6335     0455  300E               	movlw	14
  6336     0456  003C               	movlb	28	; select bank28
  6337     0457  00A0               	movwf	32	;volatile
  6338     0458                     l2974:
  6339                           
  6340                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  6341     0458  3010               	movlw	16
  6342     0459  003D               	movlb	29	; select bank29
  6343     045A  009E               	movwf	30	;volatile
  6344     045B                     l2976:
  6345                           
  6346                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  6347     045B  300D               	movlw	13
  6348     045C  003C               	movlb	28	; select bank28
  6349     045D  00A1               	movwf	33	;volatile
  6350     045E                     l2978:
  6351                           
  6352                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  6353     045E  3011               	movlw	17
  6354     045F  003D               	movlb	29	; select bank29
  6355     0460  009D               	movwf	29	;volatile
  6356     0461                     l2980:
  6357                           
  6358                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  6359     0461  0027               	movlb	7	; select bank7
  6360     0462  0191               	clrf	17	;volatile
  6361     0463                     l2982:
  6362                           
  6363                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  6364     0463  0192               	clrf	18	;volatile
  6365     0464                     l2984:
  6366                           
  6367                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  6368     0464  0193               	clrf	19	;volatile
  6369     0465                     l2986:
  6370                           
  6371                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  6372     0465  0194               	clrf	20	;volatile
  6373     0466                     l2988:
  6374                           
  6375                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  6376     0466  0195               	clrf	21	;volatile
  6377     0467                     l2990:
  6378                           
  6379                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  6380     0467  0196               	clrf	22	;volatile
  6381     0468                     l2992:
  6382                           
  6383                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  6384     0468  0197               	clrf	23	;volatile
  6385     0469                     l2994:
  6386                           
  6387                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  6388     0469  0198               	clrf	24	;volatile
  6389     046A                     l2996:
  6390                           
  6391                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  6392     046A  0199               	clrf	25	;volatile
  6393     046B                     l410:
  6394     046B  0008               	return
  6395     046C                     __end_of_PIN_MANAGER_Initialize:
  6396                           
  6397                           	psect	text3
  6398     0DCE                     __ptext3:	
  6399 ;; *************** function _INTERRUPT_Initialize *****************
  6400 ;; Defined at:
  6401 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;		None
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;		None
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0, pclath, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6415 ;;      Params:         0       0       0       0       0       0       0       0
  6416 ;;      Locals:         0       0       0       0       0       0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0
  6418 ;;      Totals:         0       0       0       0       0       0       0       0
  6419 ;;Total ram usage:        0 bytes
  6420 ;; Hardware stack levels used: 1
  6421 ;; Hardware stack levels required when called: 8
  6422 ;; This function calls:
  6423 ;;		_INT_SetInterruptHandler
  6424 ;; This function is called by:
  6425 ;;		_SYSTEM_Initialize
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429     0DCE                     _INTERRUPT_Initialize:	
  6430                           ;psect for function _INTERRUPT_Initialize
  6431                           
  6432     0DCE                     l2998:	
  6433                           ;incstack = 0
  6434                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6435                           
  6436                           
  6437                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  6438     0DCE  108B               	bcf	11,1	;volatile
  6439                           
  6440                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  6441     0DCF  0021               	movlb	1	; select bank1
  6442     0DD0  1715               	bsf	21,6	;volatile
  6443     0DD1                     l3000:
  6444                           
  6445                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  6446     0DD1  3000               	movlw	0
  6447     0DD2  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  6448     0DD3  3000               	movlw	0
  6449     0DD4  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6450     0DD5  318D  2546  318D   	fcall	_INT_SetInterruptHandler
  6451     0DD8                     l442:
  6452     0DD8  0008               	return
  6453     0DD9                     __end_of_INTERRUPT_Initialize:
  6454                           
  6455                           	psect	text4
  6456     0D46                     __ptext4:	
  6457 ;; *************** function _INT_SetInterruptHandler *****************
  6458 ;; Defined at:
  6459 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6462 ;;		 -> INT_DefaultInterruptHandler(1), 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      void 
  6467 ;; Registers used:
  6468 ;;		wreg
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6474 ;;      Params:         2       0       0       0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0
  6477 ;;      Totals:         2       0       0       0       0       0       0       0
  6478 ;;Total ram usage:        2 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; Hardware stack levels required when called: 7
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_INTERRUPT_Initialize
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488     0D46                     _INT_SetInterruptHandler:	
  6489                           ;psect for function _INT_SetInterruptHandler
  6490                           
  6491     0D46                     l2780:	
  6492                           ;incstack = 0
  6493                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6494                           
  6495                           
  6496                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  6497     0D46  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6498     0D47  00F9               	movwf	_INT_InterruptHandler+1
  6499     0D48  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6500     0D49  00F8               	movwf	_INT_InterruptHandler
  6501     0D4A                     l465:
  6502     0D4A  0008               	return
  6503     0D4B                     __end_of_INT_SetInterruptHandler:
  6504                           
  6505                           	psect	text5
  6506     0E81                     __ptext5:	
  6507 ;; *************** function _I2C1_Initialize *****************
  6508 ;; Defined at:
  6509 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;		None
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  1    wreg      void 
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0, pclath, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6523 ;;      Params:         0       0       0       0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0       0       0       0
  6526 ;;      Totals:         0       0       0       0       0       0       0       0
  6527 ;;Total ram usage:        0 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; Hardware stack levels required when called: 8
  6530 ;; This function calls:
  6531 ;;		_I2C1_CallbackRegister
  6532 ;;		_I2C1_InterruptsEnable
  6533 ;; This function is called by:
  6534 ;;		_SYSTEM_Initialize
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538     0E81                     _I2C1_Initialize:	
  6539                           ;psect for function _I2C1_Initialize
  6540                           
  6541     0E81                     l2902:	
  6542                           ;incstack = 0
  6543                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6544                           
  6545                           
  6546                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  6547     0E81  3080               	movlw	128
  6548     0E82  0024               	movlb	4	; select bank4
  6549     0E83  0094               	movwf	20	;volatile
  6550                           
  6551                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  6552     0E84  3008               	movlw	8
  6553     0E85  0095               	movwf	21	;volatile
  6554     0E86                     l2904:
  6555                           
  6556                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  6557     0E86  0196               	clrf	22	;volatile
  6558     0E87                     l2906:
  6559                           
  6560                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  6561     0E87  0197               	clrf	23	;volatile
  6562                           
  6563                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  6564     0E88  3027               	movlw	39
  6565     0E89  0092               	movwf	18	;volatile
  6566     0E8A                     l2908:
  6567                           
  6568                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  6569     0E8A  318D  2533  318E   	fcall	_I2C1_InterruptsEnable
  6570                           
  6571                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  6572     0E8D  3002               	movlw	low _I2C1_DefaultCallback
  6573     0E8E  00F4               	movwf	I2C1_CallbackRegister@callbackHandler
  6574     0E8F  3000               	movlw	high _I2C1_DefaultCallback
  6575     0E90  00F5               	movwf	I2C1_CallbackRegister@callbackHandler+1
  6576     0E91  318D  25FD  318E   	fcall	_I2C1_CallbackRegister
  6577     0E94                     l2910:
  6578                           
  6579                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  6580     0E94  0024               	movlb	4	; select bank4
  6581     0E95  1695               	bsf	21,5	;volatile
  6582     0E96                     l177:
  6583     0E96  0008               	return
  6584     0E97                     __end_of_I2C1_Initialize:
  6585                           
  6586                           	psect	text6
  6587     0D33                     __ptext6:	
  6588 ;; *************** function _I2C1_InterruptsEnable *****************
  6589 ;; Defined at:
  6590 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;		None
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;		None
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		None
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6604 ;;      Params:         0       0       0       0       0       0       0       0
  6605 ;;      Locals:         0       0       0       0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0       0       0
  6607 ;;      Totals:         0       0       0       0       0       0       0       0
  6608 ;;Total ram usage:        0 bytes
  6609 ;; Hardware stack levels used: 1
  6610 ;; Hardware stack levels required when called: 7
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_I2C1_Initialize
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618     0D33                     _I2C1_InterruptsEnable:	
  6619                           ;psect for function _I2C1_InterruptsEnable
  6620                           
  6621     0D33                     l2628:	
  6622                           ;incstack = 0
  6623                           ; Regs used in _I2C1_InterruptsEnable: []
  6624                           
  6625                           
  6626                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  6627     0D33  0021               	movlb	1	; select bank1
  6628     0D34  1590               	bsf	16,3	;volatile
  6629                           
  6630                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  6631     0D35  1591               	bsf	17,3	;volatile
  6632     0D36                     l312:
  6633     0D36  0008               	return
  6634     0D37                     __end_of_I2C1_InterruptsEnable:
  6635                           
  6636                           	psect	text7
  6637     0DFD                     __ptext7:	
  6638 ;; *************** function _I2C1_CallbackRegister *****************
  6639 ;; Defined at:
  6640 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6643 ;;		 -> I2C1_DefaultCallback(1), 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, status,2, status,0
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6655 ;;      Params:         2       0       0       0       0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0       0       0       0
  6657 ;;      Temps:          0       0       0       0       0       0       0       0
  6658 ;;      Totals:         2       0       0       0       0       0       0       0
  6659 ;;Total ram usage:        2 bytes
  6660 ;; Hardware stack levels used: 1
  6661 ;; Hardware stack levels required when called: 7
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_I2C1_Initialize
  6666 ;;		_I2C1_Deinitialize
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670     0DFD                     _I2C1_CallbackRegister:	
  6671                           ;psect for function _I2C1_CallbackRegister
  6672                           
  6673     0DFD                     l2630:	
  6674                           ;incstack = 0
  6675                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  6676                           
  6677                           
  6678                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  6679     0DFD  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6680     0DFE  0475               	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  6681     0DFF  1903               	btfsc	3,2
  6682     0E00  2E02               	goto	u911
  6683     0E01  2E03               	goto	u910
  6684     0E02                     u911:
  6685     0E02  2E08               	goto	l204
  6686     0E03                     u910:
  6687     0E03                     l2632:
  6688                           
  6689                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  6690     0E03  0875               	movf	I2C1_CallbackRegister@callbackHandler+1,w
  6691     0E04  0020               	movlb	0	; select bank0
  6692     0E05  00E3               	movwf	_I2C1_Callback+1
  6693     0E06  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6694     0E07  00E2               	movwf	_I2C1_Callback
  6695     0E08                     l204:
  6696     0E08  0008               	return
  6697     0E09                     __end_of_I2C1_CallbackRegister:
  6698                           
  6699                           	psect	text8
  6700     0EAF                     __ptext8:	
  6701 ;; *************** function _EUSART_Initialize *****************
  6702 ;; Defined at:
  6703 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      void 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0, pclath, cstack
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6717 ;;      Params:         0       0       0       0       0       0       0       0
  6718 ;;      Locals:         0       0       0       0       0       0       0       0
  6719 ;;      Temps:          0       0       0       0       0       0       0       0
  6720 ;;      Totals:         0       0       0       0       0       0       0       0
  6721 ;;Total ram usage:        0 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; Hardware stack levels required when called: 8
  6724 ;; This function calls:
  6725 ;;		_EUSART_FramingErrorCallbackRegister
  6726 ;;		_EUSART_OverrunErrorCallbackRegister
  6727 ;; This function is called by:
  6728 ;;		_SYSTEM_Initialize
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732     0EAF                     _EUSART_Initialize:	
  6733                           ;psect for function _EUSART_Initialize
  6734                           
  6735     0EAF                     l3002:	
  6736                           ;incstack = 0
  6737                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6738                           
  6739                           
  6740                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  6741     0EAF  3048               	movlw	72
  6742     0EB0  0023               	movlb	3	; select bank3
  6743     0EB1  009F               	movwf	31	;volatile
  6744                           
  6745                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  6746     0EB2  3090               	movlw	144
  6747     0EB3  009D               	movwf	29	;volatile
  6748                           
  6749                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  6750     0EB4  3026               	movlw	38
  6751     0EB5  009E               	movwf	30	;volatile
  6752                           
  6753                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  6754     0EB6  30A0               	movlw	160
  6755     0EB7  009B               	movwf	27	;volatile
  6756                           
  6757                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  6758     0EB8  3001               	movlw	1
  6759     0EB9  009C               	movwf	28	;volatile
  6760     0EBA                     l3004:
  6761                           
  6762                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  6763     0EBA  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  6764     0EBB  00F4               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  6765     0EBC  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  6766     0EBD  00F5               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  6767     0EBE  318D  25C3  318E   	fcall	_EUSART_FramingErrorCallbackRegister
  6768     0EC1                     l3006:
  6769                           
  6770                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  6771     0EC1  302B               	movlw	low _EUSART_DefaultOverrunErrorCallback
  6772     0EC2  00F4               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  6773     0EC3  300D               	movlw	high _EUSART_DefaultOverrunErrorCallback
  6774     0EC4  00F5               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  6775     0EC5  318D  25F1  318E   	fcall	_EUSART_OverrunErrorCallbackRegister
  6776     0EC8                     l3008:
  6777                           
  6778                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  6779     0EC8  0020               	movlb	0	; select bank0
  6780     0EC9  01E0               	clrf	_eusartRxLastError	;volatile
  6781     0ECA  01E1               	clrf	_eusartRxLastError+1	;volatile
  6782     0ECB                     l548:
  6783     0ECB  0008               	return
  6784     0ECC                     __end_of_EUSART_Initialize:
  6785                           
  6786                           	psect	text9
  6787     0DF1                     __ptext9:	
  6788 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  6789 ;; Defined at:
  6790 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6793 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6805 ;;      Params:         2       0       0       0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0
  6808 ;;      Totals:         2       0       0       0       0       0       0       0
  6809 ;;Total ram usage:        2 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 7
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_EUSART_Initialize
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819     0DF1                     _EUSART_OverrunErrorCallbackRegister:	
  6820                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  6821                           
  6822     0DF1                     l2786:	
  6823                           ;incstack = 0
  6824                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  6825                           
  6826                           
  6827                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  6828     0DF1  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6829     0DF2  0475               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6830     0DF3  1903               	btfsc	3,2
  6831     0DF4  2DF6               	goto	u1001
  6832     0DF5  2DF7               	goto	u1000
  6833     0DF6                     u1001:
  6834     0DF6  2DFC               	goto	l627
  6835     0DF7                     u1000:
  6836     0DF7                     l2788:
  6837                           
  6838                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6839     0DF7  0875               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6840     0DF8  0020               	movlb	0	; select bank0
  6841     0DF9  00DF               	movwf	_EUSART_OverrunErrorHandler+1
  6842     0DFA  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6843     0DFB  00DE               	movwf	_EUSART_OverrunErrorHandler
  6844     0DFC                     l627:
  6845     0DFC  0008               	return
  6846     0DFD                     __end_of_EUSART_OverrunErrorCallbackRegister:
  6847                           
  6848                           	psect	text10
  6849     0DC3                     __ptext10:	
  6850 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6851 ;; Defined at:
  6852 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6855 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6867 ;;      Params:         2       0       0       0       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0
  6870 ;;      Totals:         2       0       0       0       0       0       0       0
  6871 ;;Total ram usage:        2 bytes
  6872 ;; Hardware stack levels used: 1
  6873 ;; Hardware stack levels required when called: 7
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_EUSART_Initialize
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881     0DC3                     _EUSART_FramingErrorCallbackRegister:	
  6882                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6883                           
  6884     0DC3                     l2782:	
  6885                           ;incstack = 0
  6886                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6887                           
  6888                           
  6889                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6890     0DC3  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6891     0DC4  0475               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6892     0DC5  1903               	btfsc	3,2
  6893     0DC6  2DC8               	goto	u991
  6894     0DC7  2DC9               	goto	u990
  6895     0DC8                     u991:
  6896     0DC8  2DCD               	goto	l623
  6897     0DC9                     u990:
  6898     0DC9                     l2784:
  6899                           
  6900                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6901     0DC9  0875               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6902     0DCA  00F7               	movwf	_EUSART_FramingErrorHandler+1
  6903     0DCB  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6904     0DCC  00F6               	movwf	_EUSART_FramingErrorHandler
  6905     0DCD                     l623:
  6906     0DCD  0008               	return
  6907     0DCE                     __end_of_EUSART_FramingErrorCallbackRegister:
  6908                           
  6909                           	psect	text11
  6910     0DB0                     __ptext11:	
  6911 ;; *************** function _CLOCK_Initialize *****************
  6912 ;; Defined at:
  6913 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6927 ;;      Params:         0       0       0       0       0       0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0
  6930 ;;      Totals:         0       0       0       0       0       0       0       0
  6931 ;;Total ram usage:        0 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 7
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_SYSTEM_Initialize
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941     0DB0                     _CLOCK_Initialize:	
  6942                           ;psect for function _CLOCK_Initialize
  6943                           
  6944     0DB0                     l2936:	
  6945                           ;incstack = 0
  6946                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6947                           
  6948                           
  6949                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6950     0DB0  307A               	movlw	122
  6951     0DB1  0021               	movlb	1	; select bank1
  6952     0DB2  0099               	movwf	25	;volatile
  6953     0DB3                     l2938:
  6954                           
  6955                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6956     0DB3  0022               	movlb	2	; select bank2
  6957     0DB4  0196               	clrf	22	;volatile
  6958     0DB5                     l2940:
  6959                           
  6960                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6961     0DB5  0021               	movlb	1	; select bank1
  6962     0DB6  0198               	clrf	24	;volatile
  6963     0DB7                     l333:
  6964     0DB7  0008               	return
  6965     0DB8                     __end_of_CLOCK_Initialize:
  6966                           
  6967                           	psect	text12
  6968     0E6D                     __ptext12:	
  6969 ;; *************** function _ADC_Initialize *****************
  6970 ;; Defined at:
  6971 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0, pclath, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6985 ;;      Params:         0       0       0       0       0       0       0       0
  6986 ;;      Locals:         0       0       0       0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0       0
  6988 ;;      Totals:         0       0       0       0       0       0       0       0
  6989 ;;Total ram usage:        0 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; Hardware stack levels required when called: 8
  6992 ;; This function calls:
  6993 ;;		_ADC_SetInterruptHandler
  6994 ;; This function is called by:
  6995 ;;		_SYSTEM_Initialize
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999     0E6D                     _ADC_Initialize:	
  7000                           ;psect for function _ADC_Initialize
  7001                           
  7002     0E6D                     l2886:	
  7003                           ;incstack = 0
  7004                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7005                           
  7006                           
  7007                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  7008     0E6D  3060               	movlw	96
  7009     0E6E  0021               	movlb	1	; select bank1
  7010     0E6F  009E               	movwf	30	;volatile
  7011     0E70                     l2888:
  7012                           
  7013                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  7014     0E70  019B               	clrf	27	;volatile
  7015     0E71                     l2890:
  7016                           
  7017                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  7018     0E71  019C               	clrf	28	;volatile
  7019     0E72                     l2892:
  7020                           
  7021                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  7022     0E72  019F               	clrf	31	;volatile
  7023     0E73                     l2894:
  7024                           
  7025                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  7026     0E73  3001               	movlw	1
  7027     0E74  009D               	movwf	29	;volatile
  7028     0E75                     l2896:
  7029                           
  7030                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  7031     0E75  0020               	movlb	0	; select bank0
  7032     0E76  1310               	bcf	16,6	;volatile
  7033     0E77                     l2898:
  7034                           
  7035                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  7036     0E77  30EF               	movlw	low _ADC_DefaultInterruptHandler
  7037     0E78  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7038     0E79  300C               	movlw	high _ADC_DefaultInterruptHandler
  7039     0E7A  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7040     0E7B  318D  255D  318E   	fcall	_ADC_SetInterruptHandler
  7041     0E7E                     l2900:
  7042                           
  7043                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  7044     0E7E  0021               	movlb	1	; select bank1
  7045     0E7F  1710               	bsf	16,6	;volatile
  7046     0E80                     l27:
  7047     0E80  0008               	return
  7048     0E81                     __end_of_ADC_Initialize:
  7049                           
  7050                           	psect	text13
  7051     0D5D                     __ptext13:	
  7052 ;; *************** function _ADC_SetInterruptHandler *****************
  7053 ;; Defined at:
  7054 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7057 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;		None
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7069 ;;      Params:         2       0       0       0       0       0       0       0
  7070 ;;      Locals:         0       0       0       0       0       0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0
  7072 ;;      Totals:         2       0       0       0       0       0       0       0
  7073 ;;Total ram usage:        2 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; Hardware stack levels required when called: 7
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_ADC_Initialize
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083     0D5D                     _ADC_SetInterruptHandler:	
  7084                           ;psect for function _ADC_SetInterruptHandler
  7085                           
  7086     0D5D                     l2626:	
  7087                           ;incstack = 0
  7088                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7089                           
  7090                           
  7091                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  7092     0D5D  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7093     0D5E  0020               	movlb	0	; select bank0
  7094     0D5F  00EC               	movwf	_ADC_InterruptHandler+1
  7095     0D60  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7096     0D61  00EB               	movwf	_ADC_InterruptHandler
  7097     0D62                     l55:
  7098     0D62  0008               	return
  7099     0D63                     __end_of_ADC_SetInterruptHandler:
  7100                           
  7101                           	psect	text14
  7102     0068                     __ptext14:	
  7103 ;; *************** function _ProcessMsg *****************
  7104 ;; Defined at:
  7105 ;;		line 47 in file "main.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  msg_id          1    wreg     unsigned char 
  7108 ;;  data            1   46[BANK0 ] PTR unsigned char 
  7109 ;;		 -> parserDataBuffer(5), 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  msg_id          1   48[BANK0 ] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7121 ;;      Params:         0       1       0       0       0       0       0       0
  7122 ;;      Locals:         0       1       0       0       0       0       0       0
  7123 ;;      Temps:          0       1       0       0       0       0       0       0
  7124 ;;      Totals:         0       3       0       0       0       0       0       0
  7125 ;;Total ram usage:        3 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 11
  7128 ;; This function calls:
  7129 ;;		_KAPS_GoToIdx
  7130 ;;		_KAPS_StorePos
  7131 ;;		_KAPS_getIndex
  7132 ;;		_KAPS_getPos
  7133 ;;		_KAPS_getStatus
  7134 ;;		_KAPS_setAbsPos
  7135 ;;		_KAPS_setRelPos
  7136 ;;		_SSPA_getPOut
  7137 ;;		_SSPA_getTemp
  7138 ;;		_SSPA_setMute
  7139 ;;		_SendMsg
  7140 ;;		_packLong
  7141 ;;		_unpackLong
  7142 ;;		_unpackWord
  7143 ;; This function is called by:
  7144 ;;		_main
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148     0068                     _ProcessMsg:	
  7149                           ;psect for function _ProcessMsg
  7150                           
  7151                           
  7152                           ;incstack = 0
  7153                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7154                           ;ProcessMsg@msg_id stored from wreg
  7155     0068  0020               	movlb	0	; select bank0
  7156     0069  00D0               	movwf	ProcessMsg@msg_id
  7157     006A                     l3902:
  7158                           
  7159                           ;main.c: 48:     static uint8_t payload[6];;main.c: 50:     switch (msg_id) {
  7160     006A  2988               	goto	l3954
  7161     006B                     l3904:
  7162                           
  7163                           ;main.c: 52:             payload[0] = data[0];
  7164     006B  084E               	movf	ProcessMsg@data,w
  7165     006C  0086               	movwf	6
  7166     006D  0187               	clrf	7
  7167     006E  0801               	movf	1,w
  7168     006F  0021               	movlb	1	; select bank1
  7169     0070  00C4               	movwf	ProcessMsg@payload^(0+128)
  7170     0071                     l3906:
  7171                           
  7172                           ;main.c: 53:             payload[1] = (uint8_t) sspas[data[0]].m_Mute;
  7173     0071  0020               	movlb	0	; select bank0
  7174     0072  084E               	movf	ProcessMsg@data,w
  7175     0073  0086               	movwf	6
  7176     0074  0187               	clrf	7
  7177     0075  0801               	movf	1,w
  7178     0076  00CF               	movwf	??_ProcessMsg
  7179     0077  3002               	movlw	2
  7180     0078                     u1975:
  7181     0078  35CF               	lslf	??_ProcessMsg,f
  7182     0079  3EFF               	addlw	-1
  7183     007A  1D03               	skipz
  7184     007B  2878               	goto	u1975
  7185     007C  354F               	lslf	??_ProcessMsg,w
  7186     007D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7187     007E  0086               	movwf	6
  7188     007F  0187               	clrf	7
  7189     0080  0801               	movf	1,w
  7190     0081  0021               	movlb	1	; select bank1
  7191     0082  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7192     0083                     l3908:
  7193                           
  7194                           ;main.c: 54:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  7195     0083  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7196     0084  0020               	movlb	0	; select bank0
  7197     0085  00A0               	movwf	SendMsg@data
  7198     0086  3002               	movlw	2
  7199     0087  00A1               	movwf	SendMsg@data_len
  7200     0088  300C               	movlw	12
  7201     0089  3186  262C  3180   	fcall	_SendMsg
  7202                           
  7203                           ;main.c: 55:             break;
  7204     008C  29AB               	goto	l693
  7205     008D                     l3910:
  7206                           
  7207                           ;main.c: 58:             SSPA_getTemp((antenna_band_t) data[0]);
  7208     008D  084E               	movf	ProcessMsg@data,w
  7209     008E  0086               	movwf	6
  7210     008F  0187               	clrf	7
  7211     0090  0801               	movf	1,w
  7212     0091  3185  25B2  3180   	fcall	_SSPA_getTemp
  7213     0094                     l3912:
  7214                           
  7215                           ;main.c: 59:             payload[0] = data[0];
  7216     0094  0020               	movlb	0	; select bank0
  7217     0095  084E               	movf	ProcessMsg@data,w
  7218     0096  0086               	movwf	6
  7219     0097  0187               	clrf	7
  7220     0098  0801               	movf	1,w
  7221     0099  0021               	movlb	1	; select bank1
  7222     009A  00C4               	movwf	ProcessMsg@payload^(0+128)
  7223     009B                     l3914:
  7224                           
  7225                           ;main.c: 60:             unpackWord((uint16_t) sspas[data[0]].m_wTemp, &payload[1]);
  7226     009B  0020               	movlb	0	; select bank0
  7227     009C  084E               	movf	ProcessMsg@data,w
  7228     009D  0086               	movwf	6
  7229     009E  0187               	clrf	7
  7230     009F  0801               	movf	1,w
  7231     00A0  00CF               	movwf	??_ProcessMsg
  7232     00A1  3002               	movlw	2
  7233     00A2                     u1985:
  7234     00A2  35CF               	lslf	??_ProcessMsg,f
  7235     00A3  3EFF               	addlw	-1
  7236     00A4  1D03               	skipz
  7237     00A5  28A2               	goto	u1985
  7238     00A6  354F               	lslf	??_ProcessMsg,w
  7239     00A7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7240     00A8  0086               	movwf	6
  7241     00A9  0187               	clrf	7
  7242     00AA  3F40               	moviw [0]fsr1
  7243     00AB  00A0               	movwf	unpackWord@value
  7244     00AC  3F41               	moviw [1]fsr1
  7245     00AD  00A1               	movwf	unpackWord@value+1
  7246     00AE  30C5               	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7247     00AF  00A2               	movwf	unpackWord@data
  7248     00B0  318D  25E5  3180   	fcall	_unpackWord
  7249     00B3                     l3916:
  7250                           
  7251                           ;main.c: 61:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7252     00B3  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7253     00B4  0020               	movlb	0	; select bank0
  7254     00B5  00A0               	movwf	SendMsg@data
  7255     00B6  3003               	movlw	3
  7256     00B7  00A1               	movwf	SendMsg@data_len
  7257     00B8  300D               	movlw	13
  7258     00B9  3186  262C  3180   	fcall	_SendMsg
  7259                           
  7260                           ;main.c: 62:             break;
  7261     00BC  29AB               	goto	l693
  7262     00BD                     l3918:
  7263                           
  7264                           ;main.c: 65:             SSPA_getPOut((antenna_band_t) data[0]);
  7265     00BD  084E               	movf	ProcessMsg@data,w
  7266     00BE  0086               	movwf	6
  7267     00BF  0187               	clrf	7
  7268     00C0  0801               	movf	1,w
  7269     00C1  3182  22F4  3180   	fcall	_SSPA_getPOut
  7270     00C4                     l3920:
  7271                           
  7272                           ;main.c: 66:             payload[0] = data[0];
  7273     00C4  0020               	movlb	0	; select bank0
  7274     00C5  084E               	movf	ProcessMsg@data,w
  7275     00C6  0086               	movwf	6
  7276     00C7  0187               	clrf	7
  7277     00C8  0801               	movf	1,w
  7278     00C9  0021               	movlb	1	; select bank1
  7279     00CA  00C4               	movwf	ProcessMsg@payload^(0+128)
  7280     00CB                     l3922:
  7281                           
  7282                           ;main.c: 67:             payload[1] = sspas[data[0]].m_bPOut;
  7283     00CB  0020               	movlb	0	; select bank0
  7284     00CC  084E               	movf	ProcessMsg@data,w
  7285     00CD  0086               	movwf	6
  7286     00CE  0187               	clrf	7
  7287     00CF  0801               	movf	1,w
  7288     00D0  00CF               	movwf	??_ProcessMsg
  7289     00D1  3002               	movlw	2
  7290     00D2                     u1995:
  7291     00D2  35CF               	lslf	??_ProcessMsg,f
  7292     00D3  3EFF               	addlw	-1
  7293     00D4  1D03               	skipz
  7294     00D5  28D2               	goto	u1995
  7295     00D6  354F               	lslf	??_ProcessMsg,w
  7296     00D7  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  7297     00D8  0086               	movwf	6
  7298     00D9  0187               	clrf	7
  7299     00DA  0801               	movf	1,w
  7300     00DB  0021               	movlb	1	; select bank1
  7301     00DC  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7302     00DD                     l3924:
  7303                           
  7304                           ;main.c: 68:             unpackLong(sspas[data[0]].m_lCurrent, &payload[2]);
  7305     00DD  0020               	movlb	0	; select bank0
  7306     00DE  084E               	movf	ProcessMsg@data,w
  7307     00DF  0086               	movwf	6
  7308     00E0  0187               	clrf	7
  7309     00E1  0801               	movf	1,w
  7310     00E2  00CF               	movwf	??_ProcessMsg
  7311     00E3  3002               	movlw	2
  7312     00E4                     u2005:
  7313     00E4  35CF               	lslf	??_ProcessMsg,f
  7314     00E5  3EFF               	addlw	-1
  7315     00E6  1D03               	skipz
  7316     00E7  28E4               	goto	u2005
  7317     00E8  354F               	lslf	??_ProcessMsg,w
  7318     00E9  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  7319     00EA  0086               	movwf	6
  7320     00EB  0187               	clrf	7
  7321     00EC  3F40               	moviw [0]fsr1
  7322     00ED  00A0               	movwf	unpackLong@value
  7323     00EE  3F41               	moviw [1]fsr1
  7324     00EF  00A1               	movwf	unpackLong@value+1
  7325     00F0  3F42               	moviw [2]fsr1
  7326     00F1  00A2               	movwf	unpackLong@value+2
  7327     00F2  3F43               	moviw [3]fsr1
  7328     00F3  00A3               	movwf	unpackLong@value+3
  7329     00F4  30C6               	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7330     00F5  00A4               	movwf	unpackLong@data
  7331     00F6  3184  246C  3180   	fcall	_unpackLong
  7332     00F9                     l3926:
  7333                           
  7334                           ;main.c: 69:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7335     00F9  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7336     00FA  0020               	movlb	0	; select bank0
  7337     00FB  00A0               	movwf	SendMsg@data
  7338     00FC  3006               	movlw	6
  7339     00FD  00A1               	movwf	SendMsg@data_len
  7340     00FE  300E               	movlw	14
  7341     00FF  3186  262C  3180   	fcall	_SendMsg
  7342                           
  7343                           ;main.c: 70:             break;
  7344     0102  29AB               	goto	l693
  7345     0103                     l3928:
  7346                           
  7347                           ;main.c: 73:             KAPS_getStatus();
  7348     0103  3187  27A9  3180   	fcall	_KAPS_getStatus
  7349     0106                     l3930:
  7350                           
  7351                           ;main.c: 74:             payload[0] = (uint8_t) kaps.m_Status;
  7352     0106  0020               	movlb	0	; select bank0
  7353     0107  0865               	movf	_kaps+1,w
  7354     0108  0021               	movlb	1	; select bank1
  7355     0109  00C4               	movwf	ProcessMsg@payload^(0+128)
  7356     010A                     l3932:
  7357                           
  7358                           ;main.c: 75:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7359     010A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7360     010B  0020               	movlb	0	; select bank0
  7361     010C  00A0               	movwf	SendMsg@data
  7362     010D  01A1               	clrf	SendMsg@data_len
  7363     010E  0AA1               	incf	SendMsg@data_len,f
  7364     010F  300F               	movlw	15
  7365     0110  3186  262C  3180   	fcall	_SendMsg
  7366                           
  7367                           ;main.c: 76:             break;
  7368     0113  29AB               	goto	l693
  7369     0114                     l3934:
  7370                           
  7371                           ;main.c: 79:             KAPS_getPos();
  7372     0114  3185  2574  3180   	fcall	_KAPS_getPos
  7373                           
  7374                           ;main.c: 80:             unpackLong(kaps.m_lAbsPos, payload);
  7375     0117  3002               	movlw	2
  7376     0118  3E64               	addlw	(low (_kaps| 0))& (0+255)
  7377     0119  0086               	movwf	6
  7378     011A  0187               	clrf	7
  7379     011B  3F40               	moviw [0]fsr1
  7380     011C  0020               	movlb	0	; select bank0
  7381     011D  00A0               	movwf	unpackLong@value
  7382     011E  3F41               	moviw [1]fsr1
  7383     011F  00A1               	movwf	unpackLong@value+1
  7384     0120  3F42               	moviw [2]fsr1
  7385     0121  00A2               	movwf	unpackLong@value+2
  7386     0122  3F43               	moviw [3]fsr1
  7387     0123  00A3               	movwf	unpackLong@value+3
  7388     0124  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7389     0125  00A4               	movwf	unpackLong@data
  7390     0126  3184  246C  3180   	fcall	_unpackLong
  7391                           
  7392                           ;main.c: 81:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7393     0129  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7394     012A  0020               	movlb	0	; select bank0
  7395     012B  00A0               	movwf	SendMsg@data
  7396     012C  3004               	movlw	4
  7397     012D  00A1               	movwf	SendMsg@data_len
  7398     012E  3010               	movlw	16
  7399     012F  3186  262C  3180   	fcall	_SendMsg
  7400                           
  7401                           ;main.c: 82:             break;
  7402     0132  29AB               	goto	l693
  7403     0133                     l3936:
  7404                           
  7405                           ;main.c: 85:             KAPS_getIndex();
  7406     0133  318F  27D2  3180   	fcall	_KAPS_getIndex
  7407     0136                     l3938:
  7408                           
  7409                           ;main.c: 86:             payload[0] = kaps.m_bIdxPos;
  7410     0136  0020               	movlb	0	; select bank0
  7411     0137  086A               	movf	_kaps+6,w
  7412     0138  0021               	movlb	1	; select bank1
  7413     0139  00C4               	movwf	ProcessMsg@payload^(0+128)
  7414     013A                     l3940:
  7415                           
  7416                           ;main.c: 87:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7417     013A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7418     013B  0020               	movlb	0	; select bank0
  7419     013C  00A0               	movwf	SendMsg@data
  7420     013D  01A1               	clrf	SendMsg@data_len
  7421     013E  0AA1               	incf	SendMsg@data_len,f
  7422     013F  3012               	movlw	18
  7423     0140  3186  262C  3180   	fcall	_SendMsg
  7424                           
  7425                           ;main.c: 88:             break;
  7426     0143  29AB               	goto	l693
  7427     0144                     l3942:
  7428                           
  7429                           ;main.c: 91:             SSPA_setMute((antenna_band_t) data[0], (mute_t) data[1]);
  7430     0144  084E               	movf	ProcessMsg@data,w
  7431     0145  0086               	movwf	6
  7432     0146  0187               	clrf	7
  7433     0147  3F41               	moviw [1]fsr1
  7434     0148  00F4               	movwf	SSPA_setMute@mute
  7435     0149  084E               	movf	ProcessMsg@data,w
  7436     014A  0086               	movwf	6
  7437     014B  0187               	clrf	7
  7438     014C  0801               	movf	1,w
  7439     014D  3186  2668  3180   	fcall	_SSPA_setMute
  7440                           
  7441                           ;main.c: 92:             break;
  7442     0150  29AB               	goto	l693
  7443     0151                     l3944:
  7444                           
  7445                           ;main.c: 95:             KAPS_GoToIdx(data[0]);
  7446     0151  084E               	movf	ProcessMsg@data,w
  7447     0152  0086               	movwf	6
  7448     0153  0187               	clrf	7
  7449     0154  0801               	movf	1,w
  7450     0155  318F  272E  3180   	fcall	_KAPS_GoToIdx
  7451                           
  7452                           ;main.c: 96:             break;
  7453     0158  29AB               	goto	l693
  7454     0159                     l3946:
  7455                           
  7456                           ;main.c: 99:             KAPS_setAbsPos(packLong(data));
  7457     0159  084E               	movf	ProcessMsg@data,w
  7458     015A  3183  237E  3180   	fcall	_packLong
  7459     015D  0020               	movlb	0	; select bank0
  7460     015E  0823               	movf	?_packLong+3,w
  7461     015F  00B0               	movwf	KAPS_setAbsPos@pos+3
  7462     0160  0822               	movf	?_packLong+2,w
  7463     0161  00AF               	movwf	KAPS_setAbsPos@pos+2
  7464     0162  0821               	movf	?_packLong+1,w
  7465     0163  00AE               	movwf	KAPS_setAbsPos@pos+1
  7466     0164  0820               	movf	?_packLong,w
  7467     0165  00AD               	movwf	KAPS_setAbsPos@pos
  7468     0166  3187  2746  3180   	fcall	_KAPS_setAbsPos
  7469                           
  7470                           ;main.c: 100:             break;
  7471     0169  29AB               	goto	l693
  7472     016A                     l3948:
  7473                           
  7474                           ;main.c: 103:             KAPS_setRelPos((int8_t) data[0]);
  7475     016A  084E               	movf	ProcessMsg@data,w
  7476     016B  0086               	movwf	6
  7477     016C  0187               	clrf	7
  7478     016D  0801               	movf	1,w
  7479     016E  318F  2754  3180   	fcall	_KAPS_setRelPos
  7480                           
  7481                           ;main.c: 104:             break;
  7482     0171  29AB               	goto	l693
  7483     0172                     l3950:
  7484                           
  7485                           ;main.c: 107:             KAPS_StorePos(data[4], packLong(data));
  7486     0172  084E               	movf	ProcessMsg@data,w
  7487     0173  3183  237E  3180   	fcall	_packLong
  7488     0176  0020               	movlb	0	; select bank0
  7489     0177  0823               	movf	?_packLong+3,w
  7490     0178  00B0               	movwf	KAPS_StorePos@pos+3
  7491     0179  0822               	movf	?_packLong+2,w
  7492     017A  00AF               	movwf	KAPS_StorePos@pos+2
  7493     017B  0821               	movf	?_packLong+1,w
  7494     017C  00AE               	movwf	KAPS_StorePos@pos+1
  7495     017D  0820               	movf	?_packLong,w
  7496     017E  00AD               	movwf	KAPS_StorePos@pos
  7497     017F  084E               	movf	ProcessMsg@data,w
  7498     0180  3E04               	addlw	4
  7499     0181  0086               	movwf	6
  7500     0182  0187               	clrf	7
  7501     0183  0801               	movf	1,w
  7502     0184  3185  2534  3180   	fcall	_KAPS_StorePos
  7503                           
  7504                           ;main.c: 108:             break;
  7505     0187  29AB               	goto	l693
  7506     0188                     l3954:
  7507     0188  0850               	movf	ProcessMsg@msg_id,w
  7508                           
  7509                           ; Switch size 1, requested type "simple"
  7510                           ; Number of cases is 11, Range of values is 1 to 17
  7511                           ; switch strategies available:
  7512                           ; Name         Instructions Cycles
  7513                           ; simple_byte           34    18 (average)
  7514                           ; direct_byte           43     9 (fixed)
  7515                           ; jumptable            263     9 (fixed)
  7516                           ;	Chosen strategy is simple_byte
  7517     0189  3A01               	xorlw	1	; case 1
  7518     018A  1903               	skipnz
  7519     018B  2944               	goto	l3942
  7520     018C  3A03               	xorlw	3	; case 2
  7521     018D  1903               	skipnz
  7522     018E  286B               	goto	l3904
  7523     018F  3A01               	xorlw	1	; case 3
  7524     0190  1903               	skipnz
  7525     0191  288D               	goto	l3910
  7526     0192  3A07               	xorlw	7	; case 4
  7527     0193  1903               	skipnz
  7528     0194  28BD               	goto	l3918
  7529     0195  3A01               	xorlw	1	; case 5
  7530     0196  1903               	skipnz
  7531     0197  2903               	goto	l3928
  7532     0198  3A03               	xorlw	3	; case 6
  7533     0199  1903               	skipnz
  7534     019A  2914               	goto	l3934
  7535     019B  3A01               	xorlw	1	; case 7
  7536     019C  1903               	skipnz
  7537     019D  2951               	goto	l3944
  7538     019E  3A0F               	xorlw	15	; case 8
  7539     019F  1903               	skipnz
  7540     01A0  2959               	goto	l3946
  7541     01A1  3A01               	xorlw	1	; case 9
  7542     01A2  1903               	skipnz
  7543     01A3  296A               	goto	l3948
  7544     01A4  3A03               	xorlw	3	; case 10
  7545     01A5  1903               	skipnz
  7546     01A6  2972               	goto	l3950
  7547     01A7  3A1B               	xorlw	27	; case 17
  7548     01A8  1903               	skipnz
  7549     01A9  2933               	goto	l3936
  7550     01AA  29AB               	goto	l693
  7551     01AB                     l693:
  7552     01AB  0008               	return
  7553     01AC                     __end_of_ProcessMsg:
  7554                           
  7555                           	psect	text15
  7556     0DE5                     __ptext15:	
  7557 ;; *************** function _unpackWord *****************
  7558 ;; Defined at:
  7559 ;;		line 71 in file "utils.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  value           2    0[BANK0 ] unsigned short 
  7562 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7563 ;;		 -> ProcessMsg@payload(6), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr1l, fsr1h, status,2
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7575 ;;      Params:         0       3       0       0       0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0
  7578 ;;      Totals:         0       3       0       0       0       0       0       0
  7579 ;;Total ram usage:        3 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 7
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_ProcessMsg
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589     0DE5                     _unpackWord:	
  7590                           ;psect for function _unpackWord
  7591                           
  7592     0DE5                     l3786:	
  7593                           ;incstack = 0
  7594                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7595                           
  7596                           
  7597                           ;utils.c: 73:     data[0] = value & 0xFF;
  7598     0DE5  0020               	movlb	0	; select bank0
  7599     0DE6  0822               	movf	unpackWord@data,w
  7600     0DE7  0086               	movwf	6
  7601     0DE8  0187               	clrf	7
  7602     0DE9  0820               	movf	unpackWord@value,w
  7603     0DEA  0081               	movwf	1
  7604     0DEB                     l3788:
  7605                           
  7606                           ;utils.c: 74:     data[1] = (value >> 8) & 0xFF;
  7607     0DEB  0A22               	incf	unpackWord@data,w
  7608     0DEC  0086               	movwf	6
  7609     0DED  0187               	clrf	7
  7610     0DEE  0821               	movf	unpackWord@value+1,w
  7611     0DEF  0081               	movwf	1
  7612     0DF0                     l751:
  7613     0DF0  0008               	return
  7614     0DF1                     __end_of_unpackWord:
  7615                           
  7616                           	psect	text16
  7617     0668                     __ptext16:	
  7618 ;; *************** function _SSPA_setMute *****************
  7619 ;; Defined at:
  7620 ;;		line 85 in file "sspa.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  band            1    wreg     enum E40
  7623 ;;  mute            1    4[COMMON] enum E36
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  band            1    5[COMMON] enum E40
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7635 ;;      Params:         1       0       0       0       0       0       0       0
  7636 ;;      Locals:         1       0       0       0       0       0       0       0
  7637 ;;      Temps:          0       2       0       0       0       0       0       0
  7638 ;;      Totals:         2       2       0       0       0       0       0       0
  7639 ;;Total ram usage:        4 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; Hardware stack levels required when called: 7
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_ProcessMsg
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649     0668                     _SSPA_setMute:	
  7650                           ;psect for function _SSPA_setMute
  7651                           
  7652                           
  7653                           ;incstack = 0
  7654                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7655                           ;SSPA_setMute@band stored from wreg
  7656     0668  00F5               	movwf	SSPA_setMute@band
  7657     0669                     l3850:
  7658                           
  7659                           ;sspa.c: 86:     switch (band) {
  7660     0669  2E80               	goto	l3858
  7661     066A                     l3852:
  7662                           
  7663                           ;sspa.c: 88:             if (mute == UNMUTE)
  7664     066A  0874               	movf	SSPA_setMute@mute,w
  7665     066B  1D03               	btfss	3,2
  7666     066C  2E6E               	goto	u1931
  7667     066D  2E6F               	goto	u1930
  7668     066E                     u1931:
  7669     066E  2E72               	goto	l848
  7670     066F                     u1930:
  7671     066F                     l845:	
  7672                           ;sspa.c: 89:                 do { LATCbits.LATC7 = 1; } while(0);
  7673                           
  7674     066F  0022               	movlb	2	; select bank2
  7675     0670  178E               	bsf	14,7	;volatile
  7676     0671  2E94               	goto	l3860
  7677     0672                     l848:	
  7678                           ;sspa.c: 91:                 do { LATCbits.LATC7 = 0; } while(0);
  7679                           
  7680     0672  0022               	movlb	2	; select bank2
  7681     0673  138E               	bcf	14,7	;volatile
  7682     0674  2E94               	goto	l3860
  7683     0675                     l3854:
  7684                           
  7685                           ;sspa.c: 95:             if (mute == UNMUTE)
  7686     0675  0874               	movf	SSPA_setMute@mute,w
  7687     0676  1D03               	btfss	3,2
  7688     0677  2E79               	goto	u1941
  7689     0678  2E7A               	goto	u1940
  7690     0679                     u1941:
  7691     0679  2E7D               	goto	l856
  7692     067A                     u1940:
  7693     067A                     l853:	
  7694                           ;sspa.c: 96:                 do { LATCbits.LATC6 = 1; } while(0);
  7695                           
  7696     067A  0022               	movlb	2	; select bank2
  7697     067B  170E               	bsf	14,6	;volatile
  7698     067C  2E94               	goto	l3860
  7699     067D                     l856:	
  7700                           ;sspa.c: 98:                 do { LATCbits.LATC6 = 0; } while(0);
  7701                           
  7702     067D  0022               	movlb	2	; select bank2
  7703     067E  130E               	bcf	14,6	;volatile
  7704     067F  2E94               	goto	l3860
  7705     0680                     l3858:
  7706     0680  0875               	movf	SSPA_setMute@band,w
  7707     0681  0020               	movlb	0	; select bank0
  7708     0682  00A0               	movwf	??_SSPA_setMute
  7709     0683  01A1               	clrf	??_SSPA_setMute+1
  7710                           
  7711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7712                           ; Switch size 1, requested type "simple"
  7713                           ; Number of cases is 1, Range of values is 0 to 0
  7714                           ; switch strategies available:
  7715                           ; Name         Instructions Cycles
  7716                           ; simple_byte            4     3 (average)
  7717                           ; direct_byte            8     6 (fixed)
  7718                           ; jumptable            260     6 (fixed)
  7719                           ;	Chosen strategy is simple_byte
  7720     0684  0821               	movf	??_SSPA_setMute+1,w
  7721     0685  3A00               	xorlw	0	; case 0
  7722     0686  1903               	skipnz
  7723     0687  2E89               	goto	l4204
  7724     0688  2E94               	goto	l3860
  7725     0689                     l4204:
  7726                           
  7727                           ; Switch size 1, requested type "simple"
  7728                           ; Number of cases is 3, Range of values is 0 to 2
  7729                           ; switch strategies available:
  7730                           ; Name         Instructions Cycles
  7731                           ; simple_byte           10     6 (average)
  7732                           ; direct_byte           12     6 (fixed)
  7733                           ; jumptable            260     6 (fixed)
  7734                           ;	Chosen strategy is simple_byte
  7735     0689  0820               	movf	??_SSPA_setMute,w
  7736     068A  3A00               	xorlw	0	; case 0
  7737     068B  1903               	skipnz
  7738     068C  2E94               	goto	l3860
  7739     068D  3A01               	xorlw	1	; case 1
  7740     068E  1903               	skipnz
  7741     068F  2E6A               	goto	l3852
  7742     0690  3A03               	xorlw	3	; case 2
  7743     0691  1903               	skipnz
  7744     0692  2E75               	goto	l3854
  7745     0693  2E94               	goto	l3860
  7746     0694                     l3860:
  7747                           
  7748                           ;sspa.c: 106:     sspas[band].m_Mute = mute;
  7749     0694  0875               	movf	SSPA_setMute@band,w
  7750     0695  0020               	movlb	0	; select bank0
  7751     0696  00A0               	movwf	??_SSPA_setMute
  7752     0697  3002               	movlw	2
  7753     0698                     u1955:
  7754     0698  35A0               	lslf	??_SSPA_setMute,f
  7755     0699  3EFF               	addlw	-1
  7756     069A  1D03               	skipz
  7757     069B  2E98               	goto	u1955
  7758     069C  3520               	lslf	??_SSPA_setMute,w
  7759     069D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7760     069E  0086               	movwf	6
  7761     069F  0187               	clrf	7
  7762     06A0  0874               	movf	SSPA_setMute@mute,w
  7763     06A1  0081               	movwf	1
  7764     06A2                     l860:
  7765     06A2  0008               	return
  7766     06A3                     __end_of_SSPA_setMute:
  7767                           
  7768                           	psect	text17
  7769     05B2                     __ptext17:	
  7770 ;; *************** function _SSPA_getTemp *****************
  7771 ;; Defined at:
  7772 ;;		line 113 in file "sspa.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  band            1    wreg     enum E40
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;  band            1   45[BANK0 ] enum E40
  7777 ;;  adc_value       2   42[BANK0 ] unsigned short 
  7778 ;;  channel         1   44[BANK0 ] enum E9257
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7788 ;;      Params:         0       0       0       0       0       0       0       0
  7789 ;;      Locals:         0       4       0       0       0       0       0       0
  7790 ;;      Temps:          0       2       0       0       0       0       0       0
  7791 ;;      Totals:         0       6       0       0       0       0       0       0
  7792 ;;Total ram usage:        6 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 9
  7795 ;; This function calls:
  7796 ;;		_ADC2Celsius
  7797 ;;		_getADCValue
  7798 ;; This function is called by:
  7799 ;;		_ProcessMsg
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803     05B2                     _SSPA_getTemp:	
  7804                           ;psect for function _SSPA_getTemp
  7805                           
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7809                           ;SSPA_getTemp@band stored from wreg
  7810     05B2  0020               	movlb	0	; select bank0
  7811     05B3  00CD               	movwf	SSPA_getTemp@band
  7812     05B4                     l3766:
  7813                           
  7814                           ;sspa.c: 114:     adc_channel_t channel;;sspa.c: 115:     adc_result_t adc_value;;sspa.c
      +                          : 117:     switch (band) {
  7815     05B4  2DBB               	goto	l3774
  7816     05B5                     l3768:
  7817                           
  7818                           ;sspa.c: 119:             channel = TM_Ka;
  7819     05B5  3003               	movlw	3
  7820     05B6  00CC               	movwf	SSPA_getTemp@channel
  7821                           
  7822                           ;sspa.c: 120:             break;
  7823     05B7  2DCE               	goto	l3776
  7824     05B8                     l3770:
  7825                           
  7826                           ;sspa.c: 122:             channel = TM_X;
  7827     05B8  3007               	movlw	7
  7828     05B9  00CC               	movwf	SSPA_getTemp@channel
  7829                           
  7830                           ;sspa.c: 123:             break;
  7831     05BA  2DCE               	goto	l3776
  7832     05BB                     l3774:
  7833     05BB  084D               	movf	SSPA_getTemp@band,w
  7834     05BC  00C8               	movwf	??_SSPA_getTemp
  7835     05BD  01C9               	clrf	??_SSPA_getTemp+1
  7836                           
  7837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7838                           ; Switch size 1, requested type "simple"
  7839                           ; Number of cases is 1, Range of values is 0 to 0
  7840                           ; switch strategies available:
  7841                           ; Name         Instructions Cycles
  7842                           ; simple_byte            4     3 (average)
  7843                           ; direct_byte            8     6 (fixed)
  7844                           ; jumptable            260     6 (fixed)
  7845                           ;	Chosen strategy is simple_byte
  7846     05BE  0849               	movf	??_SSPA_getTemp+1,w
  7847     05BF  3A00               	xorlw	0	; case 0
  7848     05C0  1903               	skipnz
  7849     05C1  2DC3               	goto	l4206
  7850     05C2  2DCE               	goto	l3776
  7851     05C3                     l4206:
  7852                           
  7853                           ; Switch size 1, requested type "simple"
  7854                           ; Number of cases is 3, Range of values is 0 to 2
  7855                           ; switch strategies available:
  7856                           ; Name         Instructions Cycles
  7857                           ; simple_byte           10     6 (average)
  7858                           ; direct_byte           12     6 (fixed)
  7859                           ; jumptable            260     6 (fixed)
  7860                           ;	Chosen strategy is simple_byte
  7861     05C3  0848               	movf	??_SSPA_getTemp,w
  7862     05C4  3A00               	xorlw	0	; case 0
  7863     05C5  1903               	skipnz
  7864     05C6  2DCE               	goto	l3776
  7865     05C7  3A01               	xorlw	1	; case 1
  7866     05C8  1903               	skipnz
  7867     05C9  2DB5               	goto	l3768
  7868     05CA  3A03               	xorlw	3	; case 2
  7869     05CB  1903               	skipnz
  7870     05CC  2DB8               	goto	l3770
  7871     05CD  2DCE               	goto	l3776
  7872     05CE                     l3776:
  7873                           
  7874                           ;sspa.c: 130:     adc_value = getADCValue(channel);
  7875     05CE  084C               	movf	SSPA_getTemp@channel,w
  7876     05CF  3186  26DC  3185   	fcall	_getADCValue
  7877     05D2  0020               	movlb	0	; select bank0
  7878     05D3  0821               	movf	?_getADCValue+1,w
  7879     05D4  00CB               	movwf	SSPA_getTemp@adc_value+1
  7880     05D5  0820               	movf	?_getADCValue,w
  7881     05D6  00CA               	movwf	SSPA_getTemp@adc_value
  7882     05D7                     l3778:
  7883                           
  7884                           ;sspa.c: 132:     sspas[band].m_wTemp = ADC2Celsius(adc_value);
  7885     05D7  084B               	movf	SSPA_getTemp@adc_value+1,w
  7886     05D8  00BB               	movwf	ADC2Celsius@v+1
  7887     05D9  084A               	movf	SSPA_getTemp@adc_value,w
  7888     05DA  00BA               	movwf	ADC2Celsius@v
  7889     05DB  3183  23D5  3185   	fcall	_ADC2Celsius
  7890     05DE  0020               	movlb	0	; select bank0
  7891     05DF  084D               	movf	SSPA_getTemp@band,w
  7892     05E0  00C8               	movwf	??_SSPA_getTemp
  7893     05E1  3002               	movlw	2
  7894     05E2                     u1855:
  7895     05E2  35C8               	lslf	??_SSPA_getTemp,f
  7896     05E3  3EFF               	addlw	-1
  7897     05E4  1D03               	skipz
  7898     05E5  2DE2               	goto	u1855
  7899     05E6  3548               	lslf	??_SSPA_getTemp,w
  7900     05E7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7901     05E8  0086               	movwf	6
  7902     05E9  0187               	clrf	7
  7903     05EA  083A               	movf	?_ADC2Celsius,w
  7904     05EB  3FC0               	movwi [0]fsr1
  7905     05EC  083B               	movf	?_ADC2Celsius+1,w
  7906     05ED  3FC1               	movwi [1]fsr1
  7907     05EE                     l869:
  7908     05EE  0008               	return
  7909     05EF                     __end_of_SSPA_getTemp:
  7910                           
  7911                           	psect	text18
  7912     03D5                     __ptext18:	
  7913 ;; *************** function _ADC2Celsius *****************
  7914 ;; Defined at:
  7915 ;;		line 59 in file "sspa.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  v               2   26[BANK0 ] unsigned short 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  result          4   36[BANK0 ] long 
  7920 ;;  value           4   32[BANK0 ] long 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  2   26[BANK0 ] short 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0, pclath, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7930 ;;      Params:         0       2       0       0       0       0       0       0
  7931 ;;      Locals:         0       8       0       0       0       0       0       0
  7932 ;;      Temps:          0       4       0       0       0       0       0       0
  7933 ;;      Totals:         0      14       0       0       0       0       0       0
  7934 ;;Total ram usage:       14 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; Hardware stack levels required when called: 8
  7937 ;; This function calls:
  7938 ;;		___aldiv
  7939 ;;		___lmul
  7940 ;; This function is called by:
  7941 ;;		_SSPA_getTemp
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945     03D5                     _ADC2Celsius:	
  7946                           ;psect for function _ADC2Celsius
  7947                           
  7948     03D5                     l3742:	
  7949                           ;incstack = 0
  7950                           ; Regs used in _ADC2Celsius: [wreg+status,2+status,0+pclath+cstack]
  7951                           
  7952                           
  7953                           ;sspa.c: 60:     int32_t value = (int32_t) v;
  7954     03D5  0020               	movlb	0	; select bank0
  7955     03D6  083A               	movf	ADC2Celsius@v,w
  7956     03D7  00C0               	movwf	ADC2Celsius@value
  7957     03D8  083B               	movf	ADC2Celsius@v+1,w
  7958     03D9  00C1               	movwf	ADC2Celsius@value+1
  7959     03DA  01C2               	clrf	ADC2Celsius@value+2
  7960     03DB  01C3               	clrf	ADC2Celsius@value+3
  7961     03DC                     l3744:
  7962                           
  7963                           ;sspa.c: 61:     int32_t result = (int32_t)(160) - (value * (int32_t)(428)) / (int32_t)(
      +                          1024);
  7964     03DC  3000               	movlw	0
  7965     03DD  00AF               	movwf	___aldiv@divisor+3
  7966     03DE  3000               	movlw	0
  7967     03DF  00AE               	movwf	___aldiv@divisor+2
  7968     03E0  3004               	movlw	4
  7969     03E1  00AD               	movwf	___aldiv@divisor+1
  7970     03E2  3000               	movlw	0
  7971     03E3  00AC               	movwf	___aldiv@divisor
  7972     03E4  0843               	movf	ADC2Celsius@value+3,w
  7973     03E5  00A3               	movwf	___lmul@multiplier+3
  7974     03E6  0842               	movf	ADC2Celsius@value+2,w
  7975     03E7  00A2               	movwf	___lmul@multiplier+2
  7976     03E8  0841               	movf	ADC2Celsius@value+1,w
  7977     03E9  00A1               	movwf	___lmul@multiplier+1
  7978     03EA  0840               	movf	ADC2Celsius@value,w
  7979     03EB  00A0               	movwf	___lmul@multiplier
  7980     03EC  3000               	movlw	0
  7981     03ED  00A7               	movwf	___lmul@multiplicand+3
  7982     03EE  3000               	movlw	0
  7983     03EF  00A6               	movwf	___lmul@multiplicand+2
  7984     03F0  3001               	movlw	1
  7985     03F1  00A5               	movwf	___lmul@multiplicand+1
  7986     03F2  30AC               	movlw	172
  7987     03F3  00A4               	movwf	___lmul@multiplicand
  7988     03F4  3187  2712  3183   	fcall	___lmul
  7989     03F7  0020               	movlb	0	; select bank0
  7990     03F8  0823               	movf	?___lmul+3,w
  7991     03F9  00B3               	movwf	___aldiv@dividend+3
  7992     03FA  0822               	movf	?___lmul+2,w
  7993     03FB  00B2               	movwf	___aldiv@dividend+2
  7994     03FC  0821               	movf	?___lmul+1,w
  7995     03FD  00B1               	movwf	___aldiv@dividend+1
  7996     03FE  0820               	movf	?___lmul,w
  7997     03FF  00B0               	movwf	___aldiv@dividend
  7998     0400  3182  2264  3183   	fcall	___aldiv
  7999     0403  30A0               	movlw	160
  8000     0404  0020               	movlb	0	; select bank0
  8001     0405  00BC               	movwf	??_ADC2Celsius
  8002     0406  3000               	movlw	0
  8003     0407  00BD               	movwf	??_ADC2Celsius+1
  8004     0408  3000               	movlw	0
  8005     0409  00BE               	movwf	??_ADC2Celsius+2
  8006     040A  3000               	movlw	0
  8007     040B  00BF               	movwf	??_ADC2Celsius+3
  8008     040C  082C               	movf	?___aldiv,w
  8009     040D  02BC               	subwf	??_ADC2Celsius,f
  8010     040E  082D               	movf	?___aldiv+1,w
  8011     040F  3BBD               	subwfb	??_ADC2Celsius+1,f
  8012     0410  082E               	movf	?___aldiv+2,w
  8013     0411  3BBE               	subwfb	??_ADC2Celsius+2,f
  8014     0412  082F               	movf	?___aldiv+3,w
  8015     0413  3BBF               	subwfb	??_ADC2Celsius+3,f
  8016     0414  083F               	movf	??_ADC2Celsius+3,w
  8017     0415  00C7               	movwf	ADC2Celsius@result+3
  8018     0416  083E               	movf	??_ADC2Celsius+2,w
  8019     0417  00C6               	movwf	ADC2Celsius@result+2
  8020     0418  083D               	movf	??_ADC2Celsius+1,w
  8021     0419  00C5               	movwf	ADC2Celsius@result+1
  8022     041A  083C               	movf	??_ADC2Celsius,w
  8023     041B  00C4               	movwf	ADC2Celsius@result
  8024     041C                     l3746:
  8025                           
  8026                           ;sspa.c: 63:     return (int16_t) result;
  8027     041C  0845               	movf	ADC2Celsius@result+1,w
  8028     041D  00BB               	movwf	?_ADC2Celsius+1
  8029     041E  0844               	movf	ADC2Celsius@result,w
  8030     041F  00BA               	movwf	?_ADC2Celsius
  8031     0420                     l833:
  8032     0420  0008               	return
  8033     0421                     __end_of_ADC2Celsius:
  8034                           
  8035                           	psect	text19
  8036     02F4                     __ptext19:	
  8037 ;; *************** function _SSPA_getPOut *****************
  8038 ;; Defined at:
  8039 ;;		line 139 in file "sspa.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  band            1    wreg     enum E40
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  band            1   42[BANK0 ] enum E40
  8044 ;;  adc_value       2   40[BANK0 ] unsigned short 
  8045 ;;  channel         1    0        enum E9257
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8055 ;;      Params:         0       0       0       0       0       0       0       0
  8056 ;;      Locals:         0       3       0       0       0       0       0       0
  8057 ;;      Temps:          0       2       0       0       0       0       0       0
  8058 ;;      Totals:         0       5       0       0       0       0       0       0
  8059 ;;Total ram usage:        5 bytes
  8060 ;; Hardware stack levels used: 1
  8061 ;; Hardware stack levels required when called: 9
  8062 ;; This function calls:
  8063 ;;		_ADC2Amp
  8064 ;;		_ADC2dBm
  8065 ;;		_getADCValue
  8066 ;; This function is called by:
  8067 ;;		_ProcessMsg
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071     02F4                     _SSPA_getPOut:	
  8072                           ;psect for function _SSPA_getPOut
  8073                           
  8074                           
  8075                           ;incstack = 0
  8076                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8077                           ;SSPA_getPOut@band stored from wreg
  8078     02F4  0020               	movlb	0	; select bank0
  8079     02F5  00CA               	movwf	SSPA_getPOut@band
  8080     02F6                     l3790:
  8081                           
  8082                           ;sspa.c: 140:     adc_channel_t channel;;sspa.c: 141:     adc_result_t adc_value;;sspa.c
      +                          : 143:     switch (band) {
  8083     02F6  2B6A               	goto	l3812
  8084     02F7                     l873:	
  8085                           ;sspa.c: 144:         case ANTENNABAND_KA:
  8086                           
  8087     02F7                     l3792:
  8088                           
  8089                           ;sspa.c: 146:             adc_value = getADCValue(channel);
  8090     02F7  3001               	movlw	1
  8091     02F8  3186  26DC  3182   	fcall	_getADCValue
  8092     02FB  0020               	movlb	0	; select bank0
  8093     02FC  0821               	movf	?_getADCValue+1,w
  8094     02FD  00C9               	movwf	SSPA_getPOut@adc_value+1
  8095     02FE  0820               	movf	?_getADCValue,w
  8096     02FF  00C8               	movwf	SSPA_getPOut@adc_value
  8097     0300                     l3794:
  8098                           
  8099                           ;sspa.c: 147:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8100     0300  0849               	movf	SSPA_getPOut@adc_value+1,w
  8101     0301  00BB               	movwf	ADC2Amp@v+1
  8102     0302  0848               	movf	SSPA_getPOut@adc_value,w
  8103     0303  00BA               	movwf	ADC2Amp@v
  8104     0304  3184  24F4  3182   	fcall	_ADC2Amp
  8105     0307  0020               	movlb	0	; select bank0
  8106     0308  084A               	movf	SSPA_getPOut@band,w
  8107     0309  00C6               	movwf	??_SSPA_getPOut
  8108     030A  3002               	movlw	2
  8109     030B                     u1865:
  8110     030B  35C6               	lslf	??_SSPA_getPOut,f
  8111     030C  3EFF               	addlw	-1
  8112     030D  1D03               	skipz
  8113     030E  2B0B               	goto	u1865
  8114     030F  3546               	lslf	??_SSPA_getPOut,w
  8115     0310  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8116     0311  0086               	movwf	6
  8117     0312  0187               	clrf	7
  8118     0313  083A               	movf	?_ADC2Amp,w
  8119     0314  3FC0               	movwi [0]fsr1
  8120     0315  083B               	movf	?_ADC2Amp+1,w
  8121     0316  3FC1               	movwi [1]fsr1
  8122     0317  083C               	movf	?_ADC2Amp+2,w
  8123     0318  3FC2               	movwi [2]fsr1
  8124     0319  083D               	movf	?_ADC2Amp+3,w
  8125     031A  3FC3               	movwi [3]fsr1
  8126     031B                     l3796:
  8127                           
  8128                           ;sspa.c: 148:             sspas[band].m_bPOut = 0xFF;
  8129     031B  084A               	movf	SSPA_getPOut@band,w
  8130     031C  00C6               	movwf	??_SSPA_getPOut
  8131     031D  3002               	movlw	2
  8132     031E                     u1875:
  8133     031E  35C6               	lslf	??_SSPA_getPOut,f
  8134     031F  3EFF               	addlw	-1
  8135     0320  1D03               	skipz
  8136     0321  2B1E               	goto	u1875
  8137     0322  3546               	lslf	??_SSPA_getPOut,w
  8138     0323  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8139     0324  0086               	movwf	6
  8140     0325  0187               	clrf	7
  8141     0326  30FF               	movlw	255
  8142     0327  0081               	movwf	1
  8143                           
  8144                           ;sspa.c: 149:             break;
  8145     0328  2B7D               	goto	l878
  8146     0329                     l3798:
  8147     0329                     l3800:
  8148                           
  8149                           ;sspa.c: 153:             adc_value = getADCValue(channel);
  8150     0329  300A               	movlw	10
  8151     032A  3186  26DC  3182   	fcall	_getADCValue
  8152     032D  0020               	movlb	0	; select bank0
  8153     032E  0821               	movf	?_getADCValue+1,w
  8154     032F  00C9               	movwf	SSPA_getPOut@adc_value+1
  8155     0330  0820               	movf	?_getADCValue,w
  8156     0331  00C8               	movwf	SSPA_getPOut@adc_value
  8157     0332                     l3802:
  8158                           
  8159                           ;sspa.c: 154:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8160     0332  0849               	movf	SSPA_getPOut@adc_value+1,w
  8161     0333  00BB               	movwf	ADC2Amp@v+1
  8162     0334  0848               	movf	SSPA_getPOut@adc_value,w
  8163     0335  00BA               	movwf	ADC2Amp@v
  8164     0336  3184  24F4  3182   	fcall	_ADC2Amp
  8165     0339  0020               	movlb	0	; select bank0
  8166     033A  084A               	movf	SSPA_getPOut@band,w
  8167     033B  00C6               	movwf	??_SSPA_getPOut
  8168     033C  3002               	movlw	2
  8169     033D                     u1885:
  8170     033D  35C6               	lslf	??_SSPA_getPOut,f
  8171     033E  3EFF               	addlw	-1
  8172     033F  1D03               	skipz
  8173     0340  2B3D               	goto	u1885
  8174     0341  3546               	lslf	??_SSPA_getPOut,w
  8175     0342  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8176     0343  0086               	movwf	6
  8177     0344  0187               	clrf	7
  8178     0345  083A               	movf	?_ADC2Amp,w
  8179     0346  3FC0               	movwi [0]fsr1
  8180     0347  083B               	movf	?_ADC2Amp+1,w
  8181     0348  3FC1               	movwi [1]fsr1
  8182     0349  083C               	movf	?_ADC2Amp+2,w
  8183     034A  3FC2               	movwi [2]fsr1
  8184     034B  083D               	movf	?_ADC2Amp+3,w
  8185     034C  3FC3               	movwi [3]fsr1
  8186     034D                     l3804:
  8187     034D                     l3806:
  8188                           
  8189                           ;sspa.c: 156:             adc_value = getADCValue(channel);
  8190     034D  3000               	movlw	0
  8191     034E  3186  26DC  3182   	fcall	_getADCValue
  8192     0351  0020               	movlb	0	; select bank0
  8193     0352  0821               	movf	?_getADCValue+1,w
  8194     0353  00C9               	movwf	SSPA_getPOut@adc_value+1
  8195     0354  0820               	movf	?_getADCValue,w
  8196     0355  00C8               	movwf	SSPA_getPOut@adc_value
  8197     0356                     l3808:
  8198                           
  8199                           ;sspa.c: 157:             sspas[band].m_bPOut = (uint8_t) ADC2dBm(adc_value);
  8200     0356  084A               	movf	SSPA_getPOut@band,w
  8201     0357  00C6               	movwf	??_SSPA_getPOut
  8202     0358  3002               	movlw	2
  8203     0359                     u1895:
  8204     0359  35C6               	lslf	??_SSPA_getPOut,f
  8205     035A  3EFF               	addlw	-1
  8206     035B  1D03               	skipz
  8207     035C  2B59               	goto	u1895
  8208     035D  3546               	lslf	??_SSPA_getPOut,w
  8209     035E  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8210     035F  0086               	movwf	6
  8211     0360  0187               	clrf	7
  8212     0361  0849               	movf	SSPA_getPOut@adc_value+1,w
  8213     0362  00BB               	movwf	ADC2dBm@v+1
  8214     0363  0848               	movf	SSPA_getPOut@adc_value,w
  8215     0364  00BA               	movwf	ADC2dBm@v
  8216     0365  3185  25EF  3182   	fcall	_ADC2dBm
  8217     0368  0081               	movwf	1
  8218                           
  8219                           ;sspa.c: 158:             break;
  8220     0369  2B7D               	goto	l878
  8221     036A                     l3812:
  8222     036A  084A               	movf	SSPA_getPOut@band,w
  8223     036B  00C6               	movwf	??_SSPA_getPOut
  8224     036C  01C7               	clrf	??_SSPA_getPOut+1
  8225                           
  8226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8227                           ; Switch size 1, requested type "simple"
  8228                           ; Number of cases is 1, Range of values is 0 to 0
  8229                           ; switch strategies available:
  8230                           ; Name         Instructions Cycles
  8231                           ; simple_byte            4     3 (average)
  8232                           ; direct_byte            8     6 (fixed)
  8233                           ; jumptable            260     6 (fixed)
  8234                           ;	Chosen strategy is simple_byte
  8235     036D  0847               	movf	??_SSPA_getPOut+1,w
  8236     036E  3A00               	xorlw	0	; case 0
  8237     036F  1903               	skipnz
  8238     0370  2B72               	goto	l4208
  8239     0371  2B7D               	goto	l878
  8240     0372                     l4208:
  8241                           
  8242                           ; Switch size 1, requested type "simple"
  8243                           ; Number of cases is 3, Range of values is 0 to 2
  8244                           ; switch strategies available:
  8245                           ; Name         Instructions Cycles
  8246                           ; simple_byte           10     6 (average)
  8247                           ; direct_byte           12     6 (fixed)
  8248                           ; jumptable            260     6 (fixed)
  8249                           ;	Chosen strategy is simple_byte
  8250     0372  0846               	movf	??_SSPA_getPOut,w
  8251     0373  3A00               	xorlw	0	; case 0
  8252     0374  1903               	skipnz
  8253     0375  2B7D               	goto	l878
  8254     0376  3A01               	xorlw	1	; case 1
  8255     0377  1903               	skipnz
  8256     0378  2AF7               	goto	l873
  8257     0379  3A03               	xorlw	3	; case 2
  8258     037A  1903               	skipnz
  8259     037B  2B29               	goto	l3798
  8260     037C  2B7D               	goto	l878
  8261     037D                     l878:
  8262     037D  0008               	return
  8263     037E                     __end_of_SSPA_getPOut:
  8264                           
  8265                           	psect	text20
  8266     06DC                     __ptext20:	
  8267 ;; *************** function _getADCValue *****************
  8268 ;; Defined at:
  8269 ;;		line 38 in file "sspa.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  channel         1    wreg     enum E9257
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;  channel         1    4[BANK0 ] enum E9257
  8274 ;;  i               1    7[BANK0 ] unsigned char 
  8275 ;;  sum             2    5[BANK0 ] unsigned short 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  2    0[BANK0 ] unsigned short 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2, status,0, pclath, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8285 ;;      Params:         0       2       0       0       0       0       0       0
  8286 ;;      Locals:         0       4       0       0       0       0       0       0
  8287 ;;      Temps:          0       2       0       0       0       0       0       0
  8288 ;;      Totals:         0       8       0       0       0       0       0       0
  8289 ;;Total ram usage:        8 bytes
  8290 ;; Hardware stack levels used: 1
  8291 ;; Hardware stack levels required when called: 8
  8292 ;; This function calls:
  8293 ;;		_ADC_IsConversionDone
  8294 ;;		_ADC_SelectChannel
  8295 ;;		_ADC_StartConversion
  8296 ;; This function is called by:
  8297 ;;		_SSPA_getTemp
  8298 ;;		_SSPA_getPOut
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302     06DC                     _getADCValue:	
  8303                           ;psect for function _getADCValue
  8304                           
  8305                           
  8306                           ;incstack = 0
  8307                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8308                           ;getADCValue@channel stored from wreg
  8309     06DC  0020               	movlb	0	; select bank0
  8310     06DD  00A4               	movwf	getADCValue@channel
  8311     06DE                     l3718:
  8312                           
  8313                           ;sspa.c: 39:     adc_result_t sum = 0;
  8314     06DE  01A5               	clrf	getADCValue@sum
  8315     06DF  01A6               	clrf	getADCValue@sum+1
  8316     06E0                     l3720:
  8317                           
  8318                           ;sspa.c: 41:     ADC_SelectChannel(channel);
  8319     06E0  0824               	movf	getADCValue@channel,w
  8320     06E1  318D  25D9  3186   	fcall	_ADC_SelectChannel
  8321     06E4                     l3722:
  8322                           
  8323                           ;sspa.c: 43:     ADC_StartConversion();
  8324     06E4  318D  2508  3186   	fcall	_ADC_StartConversion
  8325     06E7                     l3724:
  8326                           
  8327                           ;sspa.c: 45:     for (uint8_t i = 0; i < 32; )
  8328     06E7  0020               	movlb	0	; select bank0
  8329     06E8  01A7               	clrf	getADCValue@i
  8330     06E9                     l3728:
  8331                           
  8332                           ;sspa.c: 46:     {;sspa.c: 47:         if (ADC_IsConversionDone())
  8333     06E9  318D  2592  3186   	fcall	_ADC_IsConversionDone
  8334     06EC  3A00               	xorlw	0
  8335     06ED  1903               	skipnz
  8336     06EE  2EF0               	goto	u1821
  8337     06EF  2EF1               	goto	u1820
  8338     06F0                     u1821:
  8339     06F0  2EFD               	goto	l3736
  8340     06F1                     u1820:
  8341     06F1                     l3730:
  8342                           
  8343                           ;sspa.c: 48:         {;sspa.c: 49:             i++;
  8344     06F1  3001               	movlw	1
  8345     06F2  0020               	movlb	0	; select bank0
  8346     06F3  00A2               	movwf	??_getADCValue
  8347     06F4  0822               	movf	??_getADCValue,w
  8348     06F5  07A7               	addwf	getADCValue@i,f
  8349     06F6                     l3732:
  8350                           
  8351                           ;sspa.c: 51:             sum += 0x1DD;
  8352     06F6  30DD               	movlw	221
  8353     06F7  07A5               	addwf	getADCValue@sum,f
  8354     06F8  3001               	movlw	1
  8355     06F9  3DA6               	addwfc	getADCValue@sum+1,f
  8356     06FA                     l3734:
  8357                           
  8358                           ;sspa.c: 52:             ADC_StartConversion();
  8359     06FA  318D  2508  3186   	fcall	_ADC_StartConversion
  8360     06FD                     l3736:
  8361                           
  8362                           ;sspa.c: 54:     }
  8363     06FD  3020               	movlw	32
  8364     06FE  0020               	movlb	0	; select bank0
  8365     06FF  0227               	subwf	getADCValue@i,w
  8366     0700  1C03               	skipc
  8367     0701  2F03               	goto	u1831
  8368     0702  2F04               	goto	u1830
  8369     0703                     u1831:
  8370     0703  2EE9               	goto	l3728
  8371     0704                     u1830:
  8372     0704                     l3738:
  8373                           
  8374                           ;sspa.c: 56:     return sum >> 5;
  8375     0704  0826               	movf	getADCValue@sum+1,w
  8376     0705  00A3               	movwf	??_getADCValue+1
  8377     0706  0825               	movf	getADCValue@sum,w
  8378     0707  00A2               	movwf	??_getADCValue
  8379     0708  3005               	movlw	5
  8380     0709                     u1845:
  8381     0709  36A3               	lsrf	??_getADCValue+1,f
  8382     070A  0CA2               	rrf	??_getADCValue,f
  8383     070B  0B89               	decfsz	9,f
  8384     070C  2F09               	goto	u1845
  8385     070D  0822               	movf	??_getADCValue,w
  8386     070E  00A0               	movwf	?_getADCValue
  8387     070F  0823               	movf	??_getADCValue+1,w
  8388     0710  00A1               	movwf	?_getADCValue+1
  8389     0711                     l830:
  8390     0711  0008               	return
  8391     0712                     __end_of_getADCValue:
  8392                           
  8393                           	psect	text21
  8394     0D08                     __ptext21:	
  8395 ;; *************** function _ADC_StartConversion *****************
  8396 ;; Defined at:
  8397 ;;		line 88 in file "mcc_generated_files/adc/src/adc.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;		None
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		None
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8411 ;;      Params:         0       0       0       0       0       0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0
  8414 ;;      Totals:         0       0       0       0       0       0       0       0
  8415 ;;Total ram usage:        0 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 7
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_getADCValue
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425     0D08                     _ADC_StartConversion:	
  8426                           ;psect for function _ADC_StartConversion
  8427                           
  8428     0D08                     l3534:	
  8429                           ;incstack = 0
  8430                           ; Regs used in _ADC_StartConversion: []
  8431                           
  8432                           
  8433                           ;mcc_generated_files/adc/src/adc.c: 91:     ADCON0bits.GO_nDONE = 1;
  8434     0D08  0021               	movlb	1	; select bank1
  8435     0D09  149D               	bsf	29,1	;volatile
  8436     0D0A                     l33:
  8437     0D0A  0008               	return
  8438     0D0B                     __end_of_ADC_StartConversion:
  8439                           
  8440                           	psect	text22
  8441     0DD9                     __ptext22:	
  8442 ;; *************** function _ADC_SelectChannel *****************
  8443 ;; Defined at:
  8444 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  channel         1    wreg     enum E9234
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  channel         1    5[COMMON] enum E9234
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8458 ;;      Params:         0       0       0       0       0       0       0       0
  8459 ;;      Locals:         1       0       0       0       0       0       0       0
  8460 ;;      Temps:          1       0       0       0       0       0       0       0
  8461 ;;      Totals:         2       0       0       0       0       0       0       0
  8462 ;;Total ram usage:        2 bytes
  8463 ;; Hardware stack levels used: 1
  8464 ;; Hardware stack levels required when called: 7
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_getADCValue
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472     0DD9                     _ADC_SelectChannel:	
  8473                           ;psect for function _ADC_SelectChannel
  8474                           
  8475                           
  8476                           ;incstack = 0
  8477                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8478                           ;ADC_SelectChannel@channel stored from wreg
  8479     0DD9  00F5               	movwf	ADC_SelectChannel@channel
  8480     0DDA                     l3532:
  8481                           
  8482                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
  8483     0DDA  0875               	movf	ADC_SelectChannel@channel,w
  8484     0DDB  00F4               	movwf	??_ADC_SelectChannel
  8485     0DDC  0DF4               	rlf	??_ADC_SelectChannel,f
  8486     0DDD  0DF4               	rlf	??_ADC_SelectChannel,f
  8487     0DDE  0021               	movlb	1	; select bank1
  8488     0DDF  081D               	movf	29,w	;volatile
  8489     0DE0  0674               	xorwf	??_ADC_SelectChannel,w
  8490     0DE1  3983               	andlw	-125
  8491     0DE2  0674               	xorwf	??_ADC_SelectChannel,w
  8492     0DE3  009D               	movwf	29	;volatile
  8493     0DE4                     l30:
  8494     0DE4  0008               	return
  8495     0DE5                     __end_of_ADC_SelectChannel:
  8496                           
  8497                           	psect	text23
  8498     0D92                     __ptext23:	
  8499 ;; *************** function _ADC_IsConversionDone *****************
  8500 ;; Defined at:
  8501 ;;		line 94 in file "mcc_generated_files/adc/src/adc.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      _Bool 
  8508 ;; Registers used:
  8509 ;;		wreg, status,0
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8515 ;;      Params:         0       0       0       0       0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0
  8518 ;;      Totals:         0       0       0       0       0       0       0       0
  8519 ;;Total ram usage:        0 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 7
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_getADCValue
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529     0D92                     _ADC_IsConversionDone:	
  8530                           ;psect for function _ADC_IsConversionDone
  8531                           
  8532     0D92                     l3536:	
  8533                           ;incstack = 0
  8534                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  8535                           
  8536                           
  8537                           ;mcc_generated_files/adc/src/adc.c: 97:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8538     0D92  1003               	clrc
  8539     0D93  0021               	movlb	1	; select bank1
  8540     0D94  1C9D               	btfss	29,1	;volatile
  8541     0D95  1403               	setc
  8542     0D96  3000               	movlw	0
  8543     0D97  3D09               	addwfc	9,w
  8544     0D98                     l36:
  8545     0D98  0008               	return
  8546     0D99                     __end_of_ADC_IsConversionDone:
  8547                           
  8548                           	psect	text24
  8549     05EF                     __ptext24:	
  8550 ;; *************** function _ADC2dBm *****************
  8551 ;; Defined at:
  8552 ;;		line 73 in file "sspa.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  v               2   26[BANK0 ] unsigned short 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;  result          4   32[BANK0 ] long 
  8557 ;;  value           4   28[BANK0 ] long 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1    wreg      unsigned char 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, pclath, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8567 ;;      Params:         0       2       0       0       0       0       0       0
  8568 ;;      Locals:         0       8       0       0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0
  8570 ;;      Totals:         0      10       0       0       0       0       0       0
  8571 ;;Total ram usage:       10 bytes
  8572 ;; Hardware stack levels used: 1
  8573 ;; Hardware stack levels required when called: 8
  8574 ;; This function calls:
  8575 ;;		___aldiv
  8576 ;;		___lmul
  8577 ;; This function is called by:
  8578 ;;		_SSPA_getPOut
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582     05EF                     _ADC2dBm:	
  8583                           ;psect for function _ADC2dBm
  8584                           
  8585     05EF                     l3758:	
  8586                           ;incstack = 0
  8587                           ; Regs used in _ADC2dBm: [wreg+status,2+status,0+pclath+cstack]
  8588                           
  8589                           
  8590                           ;sspa.c: 74:     int32_t value = (int32_t) v;
  8591     05EF  0020               	movlb	0	; select bank0
  8592     05F0  083A               	movf	ADC2dBm@v,w
  8593     05F1  00BC               	movwf	ADC2dBm@value
  8594     05F2  083B               	movf	ADC2dBm@v+1,w
  8595     05F3  00BD               	movwf	ADC2dBm@value+1
  8596     05F4  01BE               	clrf	ADC2dBm@value+2
  8597     05F5  01BF               	clrf	ADC2dBm@value+3
  8598     05F6                     l3760:
  8599                           
  8600                           ;sspa.c: 75:     int32_t result = (uint16_t)(34) + (value * (uint16_t)(14319)) / (uint16
      +                          _t)(1024000);
  8601     05F6  3000               	movlw	0
  8602     05F7  00AF               	movwf	___aldiv@divisor+3
  8603     05F8  3000               	movlw	0
  8604     05F9  00AE               	movwf	___aldiv@divisor+2
  8605     05FA  30A0               	movlw	160
  8606     05FB  00AD               	movwf	___aldiv@divisor+1
  8607     05FC  3000               	movlw	0
  8608     05FD  00AC               	movwf	___aldiv@divisor
  8609     05FE  083F               	movf	ADC2dBm@value+3,w
  8610     05FF  00A3               	movwf	___lmul@multiplier+3
  8611     0600  083E               	movf	ADC2dBm@value+2,w
  8612     0601  00A2               	movwf	___lmul@multiplier+2
  8613     0602  083D               	movf	ADC2dBm@value+1,w
  8614     0603  00A1               	movwf	___lmul@multiplier+1
  8615     0604  083C               	movf	ADC2dBm@value,w
  8616     0605  00A0               	movwf	___lmul@multiplier
  8617     0606  3000               	movlw	0
  8618     0607  00A7               	movwf	___lmul@multiplicand+3
  8619     0608  3000               	movlw	0
  8620     0609  00A6               	movwf	___lmul@multiplicand+2
  8621     060A  3037               	movlw	55
  8622     060B  00A5               	movwf	___lmul@multiplicand+1
  8623     060C  30EF               	movlw	239
  8624     060D  00A4               	movwf	___lmul@multiplicand
  8625     060E  3187  2712  3185   	fcall	___lmul
  8626     0611  0020               	movlb	0	; select bank0
  8627     0612  0823               	movf	?___lmul+3,w
  8628     0613  00B3               	movwf	___aldiv@dividend+3
  8629     0614  0822               	movf	?___lmul+2,w
  8630     0615  00B2               	movwf	___aldiv@dividend+2
  8631     0616  0821               	movf	?___lmul+1,w
  8632     0617  00B1               	movwf	___aldiv@dividend+1
  8633     0618  0820               	movf	?___lmul,w
  8634     0619  00B0               	movwf	___aldiv@dividend
  8635     061A  3182  2264  3185   	fcall	___aldiv
  8636     061D  3022               	movlw	34
  8637     061E  0020               	movlb	0	; select bank0
  8638     061F  072C               	addwf	?___aldiv,w
  8639     0620  00C0               	movwf	ADC2dBm@result
  8640     0621  3000               	movlw	0
  8641     0622  3D2D               	addwfc	?___aldiv+1,w
  8642     0623  00C1               	movwf	ADC2dBm@result+1
  8643     0624  3000               	movlw	0
  8644     0625  3D2E               	addwfc	?___aldiv+2,w
  8645     0626  00C2               	movwf	ADC2dBm@result+2
  8646     0627  3000               	movlw	0
  8647     0628  3D2F               	addwfc	?___aldiv+3,w
  8648     0629  00C3               	movwf	ADC2dBm@result+3
  8649     062A                     l3762:
  8650                           
  8651                           ;sspa.c: 77:     return (uint8_t) result;
  8652     062A  0840               	movf	ADC2dBm@result,w
  8653     062B                     l839:
  8654     062B  0008               	return
  8655     062C                     __end_of_ADC2dBm:
  8656                           
  8657                           	psect	text25
  8658     04F4                     __ptext25:	
  8659 ;; *************** function _ADC2Amp *****************
  8660 ;; Defined at:
  8661 ;;		line 66 in file "sspa.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  v               2   26[BANK0 ] unsigned short 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  result          4   34[BANK0 ] long 
  8666 ;;  value           4   30[BANK0 ] long 
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  4   26[BANK0 ] unsigned long 
  8669 ;; Registers used:
  8670 ;;		wreg, status,2, status,0, pclath, cstack
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8676 ;;      Params:         0       4       0       0       0       0       0       0
  8677 ;;      Locals:         0       8       0       0       0       0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0
  8679 ;;      Totals:         0      12       0       0       0       0       0       0
  8680 ;;Total ram usage:       12 bytes
  8681 ;; Hardware stack levels used: 1
  8682 ;; Hardware stack levels required when called: 8
  8683 ;; This function calls:
  8684 ;;		___aldiv
  8685 ;;		___lmul
  8686 ;; This function is called by:
  8687 ;;		_SSPA_getPOut
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691     04F4                     _ADC2Amp:	
  8692                           ;psect for function _ADC2Amp
  8693                           
  8694     04F4                     l3750:	
  8695                           ;incstack = 0
  8696                           ; Regs used in _ADC2Amp: [wreg+status,2+status,0+pclath+cstack]
  8697                           
  8698                           
  8699                           ;sspa.c: 67:     int32_t value = (int32_t) v;
  8700     04F4  0020               	movlb	0	; select bank0
  8701     04F5  083A               	movf	ADC2Amp@v,w
  8702     04F6  00BE               	movwf	ADC2Amp@value
  8703     04F7  083B               	movf	ADC2Amp@v+1,w
  8704     04F8  00BF               	movwf	ADC2Amp@value+1
  8705     04F9  01C0               	clrf	ADC2Amp@value+2
  8706     04FA  01C1               	clrf	ADC2Amp@value+3
  8707     04FB                     l3752:
  8708                           
  8709                           ;sspa.c: 68:     int32_t result = (uint16_t)(0) + (value * (uint16_t)(430)) / (uint16_t)
      +                          (10240);
  8710     04FB  3000               	movlw	0
  8711     04FC  00AF               	movwf	___aldiv@divisor+3
  8712     04FD  3000               	movlw	0
  8713     04FE  00AE               	movwf	___aldiv@divisor+2
  8714     04FF  3028               	movlw	40
  8715     0500  00AD               	movwf	___aldiv@divisor+1
  8716     0501  3000               	movlw	0
  8717     0502  00AC               	movwf	___aldiv@divisor
  8718     0503  0841               	movf	ADC2Amp@value+3,w
  8719     0504  00A3               	movwf	___lmul@multiplier+3
  8720     0505  0840               	movf	ADC2Amp@value+2,w
  8721     0506  00A2               	movwf	___lmul@multiplier+2
  8722     0507  083F               	movf	ADC2Amp@value+1,w
  8723     0508  00A1               	movwf	___lmul@multiplier+1
  8724     0509  083E               	movf	ADC2Amp@value,w
  8725     050A  00A0               	movwf	___lmul@multiplier
  8726     050B  3000               	movlw	0
  8727     050C  00A7               	movwf	___lmul@multiplicand+3
  8728     050D  3000               	movlw	0
  8729     050E  00A6               	movwf	___lmul@multiplicand+2
  8730     050F  3001               	movlw	1
  8731     0510  00A5               	movwf	___lmul@multiplicand+1
  8732     0511  30AE               	movlw	174
  8733     0512  00A4               	movwf	___lmul@multiplicand
  8734     0513  3187  2712  3184   	fcall	___lmul
  8735     0516  0020               	movlb	0	; select bank0
  8736     0517  0823               	movf	?___lmul+3,w
  8737     0518  00B3               	movwf	___aldiv@dividend+3
  8738     0519  0822               	movf	?___lmul+2,w
  8739     051A  00B2               	movwf	___aldiv@dividend+2
  8740     051B  0821               	movf	?___lmul+1,w
  8741     051C  00B1               	movwf	___aldiv@dividend+1
  8742     051D  0820               	movf	?___lmul,w
  8743     051E  00B0               	movwf	___aldiv@dividend
  8744     051F  3182  2264  3184   	fcall	___aldiv
  8745     0522  0020               	movlb	0	; select bank0
  8746     0523  082F               	movf	?___aldiv+3,w
  8747     0524  00C5               	movwf	ADC2Amp@result+3
  8748     0525  082E               	movf	?___aldiv+2,w
  8749     0526  00C4               	movwf	ADC2Amp@result+2
  8750     0527  082D               	movf	?___aldiv+1,w
  8751     0528  00C3               	movwf	ADC2Amp@result+1
  8752     0529  082C               	movf	?___aldiv,w
  8753     052A  00C2               	movwf	ADC2Amp@result
  8754     052B                     l3754:
  8755                           
  8756                           ;sspa.c: 70:     return (uint32_t) result;
  8757     052B  0845               	movf	ADC2Amp@result+3,w
  8758     052C  00BD               	movwf	?_ADC2Amp+3
  8759     052D  0844               	movf	ADC2Amp@result+2,w
  8760     052E  00BC               	movwf	?_ADC2Amp+2
  8761     052F  0843               	movf	ADC2Amp@result+1,w
  8762     0530  00BB               	movwf	?_ADC2Amp+1
  8763     0531  0842               	movf	ADC2Amp@result,w
  8764     0532  00BA               	movwf	?_ADC2Amp
  8765     0533                     l836:
  8766     0533  0008               	return
  8767     0534                     __end_of_ADC2Amp:
  8768                           
  8769                           	psect	text26
  8770     0712                     __ptext26:	
  8771 ;; *************** function ___lmul *****************
  8772 ;; Defined at:
  8773 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8776 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  product         4    8[BANK0 ] unsigned long 
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  4    0[BANK0 ] unsigned long 
  8781 ;; Registers used:
  8782 ;;		wreg, status,2, status,0
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8788 ;;      Params:         0       8       0       0       0       0       0       0
  8789 ;;      Locals:         0       4       0       0       0       0       0       0
  8790 ;;      Temps:          0       0       0       0       0       0       0       0
  8791 ;;      Totals:         0      12       0       0       0       0       0       0
  8792 ;;Total ram usage:       12 bytes
  8793 ;; Hardware stack levels used: 1
  8794 ;; Hardware stack levels required when called: 7
  8795 ;; This function calls:
  8796 ;;		Nothing
  8797 ;; This function is called by:
  8798 ;;		_ADC2Celsius
  8799 ;;		_ADC2Amp
  8800 ;;		_ADC2dBm
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804     0712                     ___lmul:	
  8805                           ;psect for function ___lmul
  8806                           
  8807     0712                     l3566:	
  8808                           ;incstack = 0
  8809                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8810                           
  8811     0712  3000               	movlw	0
  8812     0713  0020               	movlb	0	; select bank0
  8813     0714  00AB               	movwf	___lmul@product+3
  8814     0715  3000               	movlw	0
  8815     0716  00AA               	movwf	___lmul@product+2
  8816     0717  3000               	movlw	0
  8817     0718  00A9               	movwf	___lmul@product+1
  8818     0719  3000               	movlw	0
  8819     071A  00A8               	movwf	___lmul@product
  8820     071B                     l3568:
  8821     071B  1C20               	btfss	___lmul@multiplier,0
  8822     071C  2F1E               	goto	u1581
  8823     071D  2F1F               	goto	u1580
  8824     071E                     u1581:
  8825     071E  2F27               	goto	l3572
  8826     071F                     u1580:
  8827     071F                     l3570:
  8828     071F  0824               	movf	___lmul@multiplicand,w
  8829     0720  07A8               	addwf	___lmul@product,f
  8830     0721  0825               	movf	___lmul@multiplicand+1,w
  8831     0722  3DA9               	addwfc	___lmul@product+1,f
  8832     0723  0826               	movf	___lmul@multiplicand+2,w
  8833     0724  3DAA               	addwfc	___lmul@product+2,f
  8834     0725  0827               	movf	___lmul@multiplicand+3,w
  8835     0726  3DAB               	addwfc	___lmul@product+3,f
  8836     0727                     l3572:
  8837     0727  3001               	movlw	1
  8838     0728                     u1595:
  8839     0728  35A4               	lslf	___lmul@multiplicand,f
  8840     0729  0DA5               	rlf	___lmul@multiplicand+1,f
  8841     072A  0DA6               	rlf	___lmul@multiplicand+2,f
  8842     072B  0DA7               	rlf	___lmul@multiplicand+3,f
  8843     072C  0B89               	decfsz	9,f
  8844     072D  2F28               	goto	u1595
  8845     072E                     l3574:
  8846     072E  3001               	movlw	1
  8847     072F                     u1605:
  8848     072F  36A3               	lsrf	___lmul@multiplier+3,f
  8849     0730  0CA2               	rrf	___lmul@multiplier+2,f
  8850     0731  0CA1               	rrf	___lmul@multiplier+1,f
  8851     0732  0CA0               	rrf	___lmul@multiplier,f
  8852     0733  0B89               	decfsz	9,f
  8853     0734  2F2F               	goto	u1605
  8854     0735  0823               	movf	___lmul@multiplier+3,w
  8855     0736  0422               	iorwf	___lmul@multiplier+2,w
  8856     0737  0421               	iorwf	___lmul@multiplier+1,w
  8857     0738  0420               	iorwf	___lmul@multiplier,w
  8858     0739  1D03               	skipz
  8859     073A  2F3C               	goto	u1611
  8860     073B  2F3D               	goto	u1610
  8861     073C                     u1611:
  8862     073C  2F1B               	goto	l3568
  8863     073D                     u1610:
  8864     073D                     l3576:
  8865     073D  082B               	movf	___lmul@product+3,w
  8866     073E  00A3               	movwf	?___lmul+3
  8867     073F  082A               	movf	___lmul@product+2,w
  8868     0740  00A2               	movwf	?___lmul+2
  8869     0741  0829               	movf	___lmul@product+1,w
  8870     0742  00A1               	movwf	?___lmul+1
  8871     0743  0828               	movf	___lmul@product,w
  8872     0744  00A0               	movwf	?___lmul
  8873     0745                     l960:
  8874     0745  0008               	return
  8875     0746                     __end_of___lmul:
  8876                           
  8877                           	psect	text27
  8878     0264                     __ptext27:	
  8879 ;; *************** function ___aldiv *****************
  8880 ;; Defined at:
  8881 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  divisor         4   12[BANK0 ] long 
  8884 ;;  dividend        4   16[BANK0 ] long 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  quotient        4   22[BANK0 ] long 
  8887 ;;  sign            1   21[BANK0 ] unsigned char 
  8888 ;;  counter         1   20[BANK0 ] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  4   12[BANK0 ] long 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8898 ;;      Params:         0       8       0       0       0       0       0       0
  8899 ;;      Locals:         0       6       0       0       0       0       0       0
  8900 ;;      Temps:          1       0       0       0       0       0       0       0
  8901 ;;      Totals:         1      14       0       0       0       0       0       0
  8902 ;;Total ram usage:       15 bytes
  8903 ;; Hardware stack levels used: 1
  8904 ;; Hardware stack levels required when called: 7
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_ADC2Celsius
  8909 ;;		_ADC2Amp
  8910 ;;		_ADC2dBm
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914     0264                     ___aldiv:	
  8915                           ;psect for function ___aldiv
  8916                           
  8917     0264                     l3580:	
  8918                           ;incstack = 0
  8919                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8920                           
  8921     0264  0020               	movlb	0	; select bank0
  8922     0265  01B5               	clrf	___aldiv@sign
  8923     0266                     l3582:
  8924     0266  1FAF               	btfss	___aldiv@divisor+3,7
  8925     0267  2A69               	goto	u1621
  8926     0268  2A6A               	goto	u1620
  8927     0269                     u1621:
  8928     0269  2A77               	goto	l1011
  8929     026A                     u1620:
  8930     026A                     l3584:
  8931     026A  09AC               	comf	___aldiv@divisor,f
  8932     026B  09AD               	comf	___aldiv@divisor+1,f
  8933     026C  09AE               	comf	___aldiv@divisor+2,f
  8934     026D  09AF               	comf	___aldiv@divisor+3,f
  8935     026E  0AAC               	incf	___aldiv@divisor,f
  8936     026F  1903               	skipnz
  8937     0270  0AAD               	incf	___aldiv@divisor+1,f
  8938     0271  1903               	skipnz
  8939     0272  0AAE               	incf	___aldiv@divisor+2,f
  8940     0273  1903               	skipnz
  8941     0274  0AAF               	incf	___aldiv@divisor+3,f
  8942     0275  01B5               	clrf	___aldiv@sign
  8943     0276  0AB5               	incf	___aldiv@sign,f
  8944     0277                     l1011:
  8945     0277  1FB3               	btfss	___aldiv@dividend+3,7
  8946     0278  2A7A               	goto	u1631
  8947     0279  2A7B               	goto	u1630
  8948     027A                     u1631:
  8949     027A  2A8A               	goto	l3590
  8950     027B                     u1630:
  8951     027B                     l3586:
  8952     027B  09B0               	comf	___aldiv@dividend,f
  8953     027C  09B1               	comf	___aldiv@dividend+1,f
  8954     027D  09B2               	comf	___aldiv@dividend+2,f
  8955     027E  09B3               	comf	___aldiv@dividend+3,f
  8956     027F  0AB0               	incf	___aldiv@dividend,f
  8957     0280  1903               	skipnz
  8958     0281  0AB1               	incf	___aldiv@dividend+1,f
  8959     0282  1903               	skipnz
  8960     0283  0AB2               	incf	___aldiv@dividend+2,f
  8961     0284  1903               	skipnz
  8962     0285  0AB3               	incf	___aldiv@dividend+3,f
  8963     0286                     l3588:
  8964     0286  3001               	movlw	1
  8965     0287  00F4               	movwf	??___aldiv
  8966     0288  0874               	movf	??___aldiv,w
  8967     0289  06B5               	xorwf	___aldiv@sign,f
  8968     028A                     l3590:
  8969     028A  3000               	movlw	0
  8970     028B  00B9               	movwf	___aldiv@quotient+3
  8971     028C  3000               	movlw	0
  8972     028D  00B8               	movwf	___aldiv@quotient+2
  8973     028E  3000               	movlw	0
  8974     028F  00B7               	movwf	___aldiv@quotient+1
  8975     0290  3000               	movlw	0
  8976     0291  00B6               	movwf	___aldiv@quotient
  8977     0292                     l3592:
  8978     0292  082F               	movf	___aldiv@divisor+3,w
  8979     0293  042E               	iorwf	___aldiv@divisor+2,w
  8980     0294  042D               	iorwf	___aldiv@divisor+1,w
  8981     0295  042C               	iorwf	___aldiv@divisor,w
  8982     0296  1903               	skipnz
  8983     0297  2A99               	goto	u1641
  8984     0298  2A9A               	goto	u1640
  8985     0299                     u1641:
  8986     0299  2ADB               	goto	l3612
  8987     029A                     u1640:
  8988     029A                     l3594:
  8989     029A  01B4               	clrf	___aldiv@counter
  8990     029B  0AB4               	incf	___aldiv@counter,f
  8991     029C  2AA8               	goto	l3598
  8992     029D                     l3596:
  8993     029D  3001               	movlw	1
  8994     029E                     u1655:
  8995     029E  35AC               	lslf	___aldiv@divisor,f
  8996     029F  0DAD               	rlf	___aldiv@divisor+1,f
  8997     02A0  0DAE               	rlf	___aldiv@divisor+2,f
  8998     02A1  0DAF               	rlf	___aldiv@divisor+3,f
  8999     02A2  0B89               	decfsz	9,f
  9000     02A3  2A9E               	goto	u1655
  9001     02A4  3001               	movlw	1
  9002     02A5  00F4               	movwf	??___aldiv
  9003     02A6  0874               	movf	??___aldiv,w
  9004     02A7  07B4               	addwf	___aldiv@counter,f
  9005     02A8                     l3598:
  9006     02A8  1FAF               	btfss	___aldiv@divisor+3,7
  9007     02A9  2AAB               	goto	u1661
  9008     02AA  2AAC               	goto	u1660
  9009     02AB                     u1661:
  9010     02AB  2A9D               	goto	l3596
  9011     02AC                     u1660:
  9012     02AC                     l3600:
  9013     02AC  3001               	movlw	1
  9014     02AD                     u1675:
  9015     02AD  35B6               	lslf	___aldiv@quotient,f
  9016     02AE  0DB7               	rlf	___aldiv@quotient+1,f
  9017     02AF  0DB8               	rlf	___aldiv@quotient+2,f
  9018     02B0  0DB9               	rlf	___aldiv@quotient+3,f
  9019     02B1  0B89               	decfsz	9,f
  9020     02B2  2AAD               	goto	u1675
  9021     02B3                     l3602:
  9022     02B3  082F               	movf	___aldiv@divisor+3,w
  9023     02B4  0233               	subwf	___aldiv@dividend+3,w
  9024     02B5  1D03               	skipz
  9025     02B6  2AC1               	goto	u1685
  9026     02B7  082E               	movf	___aldiv@divisor+2,w
  9027     02B8  0232               	subwf	___aldiv@dividend+2,w
  9028     02B9  1D03               	skipz
  9029     02BA  2AC1               	goto	u1685
  9030     02BB  082D               	movf	___aldiv@divisor+1,w
  9031     02BC  0231               	subwf	___aldiv@dividend+1,w
  9032     02BD  1D03               	skipz
  9033     02BE  2AC1               	goto	u1685
  9034     02BF  082C               	movf	___aldiv@divisor,w
  9035     02C0  0230               	subwf	___aldiv@dividend,w
  9036     02C1                     u1685:
  9037     02C1  1C03               	skipc
  9038     02C2  2AC4               	goto	u1681
  9039     02C3  2AC5               	goto	u1680
  9040     02C4                     u1681:
  9041     02C4  2ACE               	goto	l3608
  9042     02C5                     u1680:
  9043     02C5                     l3604:
  9044     02C5  082C               	movf	___aldiv@divisor,w
  9045     02C6  02B0               	subwf	___aldiv@dividend,f
  9046     02C7  082D               	movf	___aldiv@divisor+1,w
  9047     02C8  3BB1               	subwfb	___aldiv@dividend+1,f
  9048     02C9  082E               	movf	___aldiv@divisor+2,w
  9049     02CA  3BB2               	subwfb	___aldiv@dividend+2,f
  9050     02CB  082F               	movf	___aldiv@divisor+3,w
  9051     02CC  3BB3               	subwfb	___aldiv@dividend+3,f
  9052     02CD                     l3606:
  9053     02CD  1436               	bsf	___aldiv@quotient,0
  9054     02CE                     l3608:
  9055     02CE  3001               	movlw	1
  9056     02CF                     u1695:
  9057     02CF  36AF               	lsrf	___aldiv@divisor+3,f
  9058     02D0  0CAE               	rrf	___aldiv@divisor+2,f
  9059     02D1  0CAD               	rrf	___aldiv@divisor+1,f
  9060     02D2  0CAC               	rrf	___aldiv@divisor,f
  9061     02D3  0B89               	decfsz	9,f
  9062     02D4  2ACF               	goto	u1695
  9063     02D5                     l3610:
  9064     02D5  3001               	movlw	1
  9065     02D6  02B4               	subwf	___aldiv@counter,f
  9066     02D7  1D03               	btfss	3,2
  9067     02D8  2ADA               	goto	u1701
  9068     02D9  2ADB               	goto	u1700
  9069     02DA                     u1701:
  9070     02DA  2AAC               	goto	l3600
  9071     02DB                     u1700:
  9072     02DB                     l3612:
  9073     02DB  0835               	movf	___aldiv@sign,w
  9074     02DC  1903               	btfsc	3,2
  9075     02DD  2ADF               	goto	u1711
  9076     02DE  2AE0               	goto	u1710
  9077     02DF                     u1711:
  9078     02DF  2AEB               	goto	l3616
  9079     02E0                     u1710:
  9080     02E0                     l3614:
  9081     02E0  09B6               	comf	___aldiv@quotient,f
  9082     02E1  09B7               	comf	___aldiv@quotient+1,f
  9083     02E2  09B8               	comf	___aldiv@quotient+2,f
  9084     02E3  09B9               	comf	___aldiv@quotient+3,f
  9085     02E4  0AB6               	incf	___aldiv@quotient,f
  9086     02E5  1903               	skipnz
  9087     02E6  0AB7               	incf	___aldiv@quotient+1,f
  9088     02E7  1903               	skipnz
  9089     02E8  0AB8               	incf	___aldiv@quotient+2,f
  9090     02E9  1903               	skipnz
  9091     02EA  0AB9               	incf	___aldiv@quotient+3,f
  9092     02EB                     l3616:
  9093     02EB  0839               	movf	___aldiv@quotient+3,w
  9094     02EC  00AF               	movwf	?___aldiv+3
  9095     02ED  0838               	movf	___aldiv@quotient+2,w
  9096     02EE  00AE               	movwf	?___aldiv+2
  9097     02EF  0837               	movf	___aldiv@quotient+1,w
  9098     02F0  00AD               	movwf	?___aldiv+1
  9099     02F1  0836               	movf	___aldiv@quotient,w
  9100     02F2  00AC               	movwf	?___aldiv
  9101     02F3                     l1021:
  9102     02F3  0008               	return
  9103     02F4                     __end_of___aldiv:
  9104                           
  9105                           	psect	text28
  9106     0F54                     __ptext28:	
  9107 ;; *************** function _KAPS_setRelPos *****************
  9108 ;; Defined at:
  9109 ;;		line 51 in file "kaps.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  offset          1    wreg     char 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;  offset          1    7[BANK0 ] char 
  9114 ;;  value           1    9[BANK0 ] unsigned char 
  9115 ;;  reg             1    8[BANK0 ] unsigned char 
  9116 ;; Return value:  Size  Location     Type
  9117 ;;                  1    wreg      void 
  9118 ;; Registers used:
  9119 ;;		wreg, status,2, status,0, pclath, cstack
  9120 ;; Tracked objects:
  9121 ;;		On entry : 0/0
  9122 ;;		On exit  : 0/0
  9123 ;;		Unchanged: 0/0
  9124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9125 ;;      Params:         0       0       0       0       0       0       0       0
  9126 ;;      Locals:         0       3       0       0       0       0       0       0
  9127 ;;      Temps:          0       2       0       0       0       0       0       0
  9128 ;;      Totals:         0       5       0       0       0       0       0       0
  9129 ;;Total ram usage:        5 bytes
  9130 ;; Hardware stack levels used: 1
  9131 ;; Hardware stack levels required when called: 10
  9132 ;; This function calls:
  9133 ;;		_I2C1_Write
  9134 ;; This function is called by:
  9135 ;;		_ProcessMsg
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139     0F54                     _KAPS_setRelPos:	
  9140                           ;psect for function _KAPS_setRelPos
  9141                           
  9142                           
  9143                           ;incstack = 0
  9144                           ; Regs used in _KAPS_setRelPos: [wreg+status,2+status,0+pclath+cstack]
  9145                           ;KAPS_setRelPos@offset stored from wreg
  9146     0F54  0020               	movlb	0	; select bank0
  9147     0F55  00A7               	movwf	KAPS_setRelPos@offset
  9148     0F56                     l3882:
  9149                           
  9150                           ;kaps.c: 52:     uint8_t reg = 0x02;
  9151     0F56  3002               	movlw	2
  9152     0F57  00A8               	movwf	KAPS_setRelPos@reg
  9153                           
  9154                           ;kaps.c: 53:     uint8_t value = (uint8_t)offset;
  9155     0F58  0827               	movf	KAPS_setRelPos@offset,w
  9156     0F59  00A9               	movwf	KAPS_setRelPos@value
  9157     0F5A                     l3884:
  9158                           
  9159                           ;kaps.c: 55:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9160     0F5A  0864               	movf	_kaps,w
  9161     0F5B  00A5               	movwf	??_KAPS_setRelPos
  9162     0F5C  01A6               	clrf	??_KAPS_setRelPos+1
  9163     0F5D  0825               	movf	??_KAPS_setRelPos,w
  9164     0F5E  00A0               	movwf	I2C1_Write@address
  9165     0F5F  0826               	movf	??_KAPS_setRelPos+1,w
  9166     0F60  00A1               	movwf	I2C1_Write@address+1
  9167     0F61  3028               	movlw	(low (KAPS_setRelPos@reg| 0))& (0+255)
  9168     0F62  00A2               	movwf	I2C1_Write@data
  9169     0F63  3001               	movlw	1
  9170     0F64  00A3               	movwf	I2C1_Write@dataLength
  9171     0F65  3000               	movlw	0
  9172     0F66  00A4               	movwf	I2C1_Write@dataLength+1
  9173     0F67  318E  26CC  318F   	fcall	_I2C1_Write
  9174     0F6A                     l3886:
  9175                           
  9176                           ;kaps.c: 56:     I2C1_Write(kaps.m_bAddr, &value, 1);
  9177     0F6A  0020               	movlb	0	; select bank0
  9178     0F6B  0864               	movf	_kaps,w
  9179     0F6C  00A5               	movwf	??_KAPS_setRelPos
  9180     0F6D  01A6               	clrf	??_KAPS_setRelPos+1
  9181     0F6E  0825               	movf	??_KAPS_setRelPos,w
  9182     0F6F  00A0               	movwf	I2C1_Write@address
  9183     0F70  0826               	movf	??_KAPS_setRelPos+1,w
  9184     0F71  00A1               	movwf	I2C1_Write@address+1
  9185     0F72  3029               	movlw	(low (KAPS_setRelPos@value| 0))& (0+255)
  9186     0F73  00A2               	movwf	I2C1_Write@data
  9187     0F74  3001               	movlw	1
  9188     0F75  00A3               	movwf	I2C1_Write@dataLength
  9189     0F76  3000               	movlw	0
  9190     0F77  00A4               	movwf	I2C1_Write@dataLength+1
  9191     0F78  318E  26CC  318F   	fcall	_I2C1_Write
  9192     0F7B                     l722:
  9193     0F7B  0008               	return
  9194     0F7C                     __end_of_KAPS_setRelPos:
  9195                           
  9196                           	psect	text29
  9197     0746                     __ptext29:	
  9198 ;; *************** function _KAPS_setAbsPos *****************
  9199 ;; Defined at:
  9200 ;;		line 36 in file "kaps.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  pos             4   13[BANK0 ] unsigned long 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  data            4   19[BANK0 ] unsigned char [4]
  9205 ;;  reg             1   23[BANK0 ] unsigned char 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  1    wreg      void 
  9208 ;; Registers used:
  9209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9215 ;;      Params:         0       4       0       0       0       0       0       0
  9216 ;;      Locals:         0       5       0       0       0       0       0       0
  9217 ;;      Temps:          0       2       0       0       0       0       0       0
  9218 ;;      Totals:         0      11       0       0       0       0       0       0
  9219 ;;Total ram usage:       11 bytes
  9220 ;; Hardware stack levels used: 1
  9221 ;; Hardware stack levels required when called: 10
  9222 ;; This function calls:
  9223 ;;		_I2C1_Write
  9224 ;;		_unpackLong
  9225 ;; This function is called by:
  9226 ;;		_ProcessMsg
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230     0746                     _KAPS_setAbsPos:	
  9231                           ;psect for function _KAPS_setAbsPos
  9232                           
  9233     0746                     l3874:	
  9234                           ;incstack = 0
  9235                           ; Regs used in _KAPS_setAbsPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9236                           
  9237                           
  9238                           ;kaps.c: 37:     uint8_t reg = 0x01;
  9239     0746  0020               	movlb	0	; select bank0
  9240     0747  01B7               	clrf	KAPS_setAbsPos@reg
  9241     0748  0AB7               	incf	KAPS_setAbsPos@reg,f
  9242     0749                     l3876:
  9243                           
  9244                           ;kaps.c: 38:     uint8_t data[4];;kaps.c: 40:     unpackLong(pos, data);
  9245     0749  0830               	movf	KAPS_setAbsPos@pos+3,w
  9246     074A  00A3               	movwf	unpackLong@value+3
  9247     074B  082F               	movf	KAPS_setAbsPos@pos+2,w
  9248     074C  00A2               	movwf	unpackLong@value+2
  9249     074D  082E               	movf	KAPS_setAbsPos@pos+1,w
  9250     074E  00A1               	movwf	unpackLong@value+1
  9251     074F  082D               	movf	KAPS_setAbsPos@pos,w
  9252     0750  00A0               	movwf	unpackLong@value
  9253     0751  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9254     0752  00A4               	movwf	unpackLong@data
  9255     0753  3184  246C  3187   	fcall	_unpackLong
  9256     0756                     l3878:
  9257                           
  9258                           ;kaps.c: 42:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9259     0756  0020               	movlb	0	; select bank0
  9260     0757  0864               	movf	_kaps,w
  9261     0758  00B1               	movwf	??_KAPS_setAbsPos
  9262     0759  01B2               	clrf	??_KAPS_setAbsPos+1
  9263     075A  0831               	movf	??_KAPS_setAbsPos,w
  9264     075B  00A0               	movwf	I2C1_Write@address
  9265     075C  0832               	movf	??_KAPS_setAbsPos+1,w
  9266     075D  00A1               	movwf	I2C1_Write@address+1
  9267     075E  3037               	movlw	(low (KAPS_setAbsPos@reg| 0))& (0+255)
  9268     075F  00A2               	movwf	I2C1_Write@data
  9269     0760  3001               	movlw	1
  9270     0761  00A3               	movwf	I2C1_Write@dataLength
  9271     0762  3000               	movlw	0
  9272     0763  00A4               	movwf	I2C1_Write@dataLength+1
  9273     0764  318E  26CC  3187   	fcall	_I2C1_Write
  9274     0767                     l3880:
  9275                           
  9276                           ;kaps.c: 43:     I2C1_Write(kaps.m_bAddr, data, 4);
  9277     0767  0020               	movlb	0	; select bank0
  9278     0768  0864               	movf	_kaps,w
  9279     0769  00B1               	movwf	??_KAPS_setAbsPos
  9280     076A  01B2               	clrf	??_KAPS_setAbsPos+1
  9281     076B  0831               	movf	??_KAPS_setAbsPos,w
  9282     076C  00A0               	movwf	I2C1_Write@address
  9283     076D  0832               	movf	??_KAPS_setAbsPos+1,w
  9284     076E  00A1               	movwf	I2C1_Write@address+1
  9285     076F  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9286     0770  00A2               	movwf	I2C1_Write@data
  9287     0771  3004               	movlw	4
  9288     0772  00A3               	movwf	I2C1_Write@dataLength
  9289     0773  3000               	movlw	0
  9290     0774  00A4               	movwf	I2C1_Write@dataLength+1
  9291     0775  318E  26CC  3187   	fcall	_I2C1_Write
  9292     0778                     l719:
  9293     0778  0008               	return
  9294     0779                     __end_of_KAPS_setAbsPos:
  9295                           
  9296                           	psect	text30
  9297     07A9                     __ptext30:	
  9298 ;; *************** function _KAPS_getStatus *****************
  9299 ;; Defined at:
  9300 ;;		line 81 in file "kaps.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  data            1    8[BANK0 ] unsigned char 
  9305 ;;  reg             1    7[BANK0 ] unsigned char 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		wreg, status,2, status,0, pclath, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9315 ;;      Params:         0       0       0       0       0       0       0       0
  9316 ;;      Locals:         0       2       0       0       0       0       0       0
  9317 ;;      Temps:          0       2       0       0       0       0       0       0
  9318 ;;      Totals:         0       4       0       0       0       0       0       0
  9319 ;;Total ram usage:        4 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 10
  9322 ;; This function calls:
  9323 ;;		_I2C1_Read
  9324 ;;		_I2C1_Write
  9325 ;; This function is called by:
  9326 ;;		_ProcessMsg
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330     07A9                     _KAPS_getStatus:	
  9331                           ;psect for function _KAPS_getStatus
  9332                           
  9333     07A9                     l3820:	
  9334                           ;incstack = 0
  9335                           ; Regs used in _KAPS_getStatus: [wreg+status,2+status,0+pclath+cstack]
  9336                           
  9337                           
  9338                           ;kaps.c: 82:     uint8_t reg = 0xFF;
  9339     07A9  30FF               	movlw	255
  9340     07AA  0020               	movlb	0	; select bank0
  9341     07AB  00A7               	movwf	KAPS_getStatus@reg
  9342     07AC                     l3822:
  9343                           
  9344                           ;kaps.c: 83:     uint8_t data = 0x00;
  9345     07AC  01A8               	clrf	KAPS_getStatus@data
  9346     07AD                     l3824:
  9347                           
  9348                           ;kaps.c: 85:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9349     07AD  0864               	movf	_kaps,w
  9350     07AE  00A5               	movwf	??_KAPS_getStatus
  9351     07AF  01A6               	clrf	??_KAPS_getStatus+1
  9352     07B0  0825               	movf	??_KAPS_getStatus,w
  9353     07B1  00A0               	movwf	I2C1_Write@address
  9354     07B2  0826               	movf	??_KAPS_getStatus+1,w
  9355     07B3  00A1               	movwf	I2C1_Write@address+1
  9356     07B4  3027               	movlw	(low (KAPS_getStatus@reg| 0))& (0+255)
  9357     07B5  00A2               	movwf	I2C1_Write@data
  9358     07B6  3001               	movlw	1
  9359     07B7  00A3               	movwf	I2C1_Write@dataLength
  9360     07B8  3000               	movlw	0
  9361     07B9  00A4               	movwf	I2C1_Write@dataLength+1
  9362     07BA  318E  26CC  3187   	fcall	_I2C1_Write
  9363     07BD                     l3826:
  9364                           
  9365                           ;kaps.c: 87:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9366     07BD  0020               	movlb	0	; select bank0
  9367     07BE  0864               	movf	_kaps,w
  9368     07BF  00A5               	movwf	??_KAPS_getStatus
  9369     07C0  01A6               	clrf	??_KAPS_getStatus+1
  9370     07C1  0825               	movf	??_KAPS_getStatus,w
  9371     07C2  00A0               	movwf	I2C1_Read@address
  9372     07C3  0826               	movf	??_KAPS_getStatus+1,w
  9373     07C4  00A1               	movwf	I2C1_Read@address+1
  9374     07C5  3028               	movlw	(low (KAPS_getStatus@data| 0))& (0+255)
  9375     07C6  00A2               	movwf	I2C1_Read@data
  9376     07C7  3001               	movlw	1
  9377     07C8  00A3               	movwf	I2C1_Read@dataLength
  9378     07C9  3000               	movlw	0
  9379     07CA  00A4               	movwf	I2C1_Read@dataLength+1
  9380     07CB  318F  270C  3187   	fcall	_I2C1_Read
  9381     07CE  3A00               	xorlw	0
  9382     07CF  1903               	skipnz
  9383     07D0  2FD2               	goto	u1901
  9384     07D1  2FD3               	goto	u1900
  9385     07D2                     u1901:
  9386     07D2  2FD6               	goto	l729
  9387     07D3                     u1900:
  9388     07D3                     l3828:
  9389                           
  9390                           ;kaps.c: 88:         kaps.m_Status = (kaps_status_t) data;
  9391     07D3  0020               	movlb	0	; select bank0
  9392     07D4  0828               	movf	KAPS_getStatus@data,w
  9393     07D5  00E5               	movwf	_kaps+1
  9394     07D6                     l729:
  9395     07D6  0008               	return
  9396     07D7                     __end_of_KAPS_getStatus:
  9397                           
  9398                           	psect	text31
  9399     0574                     __ptext31:	
  9400 ;; *************** function _KAPS_getPos *****************
  9401 ;; Defined at:
  9402 ;;		line 107 in file "kaps.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  data            4   15[BANK0 ] unsigned char [4]
  9407 ;;  reg             1   19[BANK0 ] unsigned char 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      void 
  9410 ;; Registers used:
  9411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9417 ;;      Params:         0       0       0       0       0       0       0       0
  9418 ;;      Locals:         0       5       0       0       0       0       0       0
  9419 ;;      Temps:          0       2       0       0       0       0       0       0
  9420 ;;      Totals:         0       7       0       0       0       0       0       0
  9421 ;;Total ram usage:        7 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; Hardware stack levels required when called: 10
  9424 ;; This function calls:
  9425 ;;		_I2C1_Read
  9426 ;;		_I2C1_Write
  9427 ;;		_packLong
  9428 ;; This function is called by:
  9429 ;;		_ProcessMsg
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433     0574                     _KAPS_getPos:	
  9434                           ;psect for function _KAPS_getPos
  9435                           
  9436     0574                     l3830:	
  9437                           ;incstack = 0
  9438                           ; Regs used in _KAPS_getPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9439                           
  9440                           
  9441                           ;kaps.c: 108:     uint8_t reg = 0x00;
  9442     0574  0020               	movlb	0	; select bank0
  9443     0575  01B3               	clrf	KAPS_getPos@reg
  9444     0576                     l3832:
  9445                           
  9446                           ;kaps.c: 109:     uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
  9447     0576  3000               	movlw	0
  9448     0577  00B2               	movwf	KAPS_getPos@data+3
  9449     0578  3000               	movlw	0
  9450     0579  00B1               	movwf	KAPS_getPos@data+2
  9451     057A  3000               	movlw	0
  9452     057B  00B0               	movwf	KAPS_getPos@data+1
  9453     057C  3000               	movlw	0
  9454     057D  00AF               	movwf	KAPS_getPos@data
  9455     057E                     l3834:
  9456                           
  9457                           ;kaps.c: 111:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9458     057E  0864               	movf	_kaps,w
  9459     057F  00AD               	movwf	??_KAPS_getPos
  9460     0580  01AE               	clrf	??_KAPS_getPos+1
  9461     0581  082D               	movf	??_KAPS_getPos,w
  9462     0582  00A0               	movwf	I2C1_Write@address
  9463     0583  082E               	movf	??_KAPS_getPos+1,w
  9464     0584  00A1               	movwf	I2C1_Write@address+1
  9465     0585  3033               	movlw	(low (KAPS_getPos@reg| 0))& (0+255)
  9466     0586  00A2               	movwf	I2C1_Write@data
  9467     0587  3001               	movlw	1
  9468     0588  00A3               	movwf	I2C1_Write@dataLength
  9469     0589  3000               	movlw	0
  9470     058A  00A4               	movwf	I2C1_Write@dataLength+1
  9471     058B  318E  26CC  3185   	fcall	_I2C1_Write
  9472     058E                     l3836:
  9473                           
  9474                           ;kaps.c: 113:     if (I2C1_Read(kaps.m_bAddr, data, 4))
  9475     058E  0020               	movlb	0	; select bank0
  9476     058F  0864               	movf	_kaps,w
  9477     0590  00AD               	movwf	??_KAPS_getPos
  9478     0591  01AE               	clrf	??_KAPS_getPos+1
  9479     0592  082D               	movf	??_KAPS_getPos,w
  9480     0593  00A0               	movwf	I2C1_Read@address
  9481     0594  082E               	movf	??_KAPS_getPos+1,w
  9482     0595  00A1               	movwf	I2C1_Read@address+1
  9483     0596  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9484     0597  00A2               	movwf	I2C1_Read@data
  9485     0598  3004               	movlw	4
  9486     0599  00A3               	movwf	I2C1_Read@dataLength
  9487     059A  3000               	movlw	0
  9488     059B  00A4               	movwf	I2C1_Read@dataLength+1
  9489     059C  318F  270C  3185   	fcall	_I2C1_Read
  9490     059F  3A00               	xorlw	0
  9491     05A0  1903               	skipnz
  9492     05A1  2DA3               	goto	u1911
  9493     05A2  2DA4               	goto	u1910
  9494     05A3                     u1911:
  9495     05A3  2DB1               	goto	l739
  9496     05A4                     u1910:
  9497     05A4                     l3838:
  9498                           
  9499                           ;kaps.c: 114:         kaps.m_lAbsPos = packLong(data);
  9500     05A4  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9501     05A5  3183  237E  3185   	fcall	_packLong
  9502     05A8  0020               	movlb	0	; select bank0
  9503     05A9  0823               	movf	?_packLong+3,w
  9504     05AA  00E9               	movwf	_kaps+5
  9505     05AB  0822               	movf	?_packLong+2,w
  9506     05AC  00E8               	movwf	_kaps+4
  9507     05AD  0821               	movf	?_packLong+1,w
  9508     05AE  00E7               	movwf	_kaps+3
  9509     05AF  0820               	movf	?_packLong,w
  9510     05B0  00E6               	movwf	_kaps+2
  9511     05B1                     l739:
  9512     05B1  0008               	return
  9513     05B2                     __end_of_KAPS_getPos:
  9514                           
  9515                           	psect	text32
  9516     037E                     __ptext32:	
  9517 ;; *************** function _packLong *****************
  9518 ;; Defined at:
  9519 ;;		line 20 in file "utils.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  data            1    wreg     PTR unsigned char 
  9522 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;  data            1   12[BANK0 ] PTR unsigned char 
  9525 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9526 ;;  result          4    8[BANK0 ] unsigned long 
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  4    0[BANK0 ] unsigned long 
  9529 ;; Registers used:
  9530 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9536 ;;      Params:         0       4       0       0       0       0       0       0
  9537 ;;      Locals:         0       5       0       0       0       0       0       0
  9538 ;;      Temps:          0       4       0       0       0       0       0       0
  9539 ;;      Totals:         0      13       0       0       0       0       0       0
  9540 ;;Total ram usage:       13 bytes
  9541 ;; Hardware stack levels used: 1
  9542 ;; Hardware stack levels required when called: 7
  9543 ;; This function calls:
  9544 ;;		Nothing
  9545 ;; This function is called by:
  9546 ;;		_ProcessMsg
  9547 ;;		_KAPS_getPos
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551     037E                     _packLong:	
  9552                           ;psect for function _packLong
  9553                           
  9554                           
  9555                           ;incstack = 0
  9556                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  9557                           ;packLong@data stored from wreg
  9558     037E  0020               	movlb	0	; select bank0
  9559     037F  00AC               	movwf	packLong@data
  9560     0380                     l3706:
  9561     0380                     l3708:
  9562                           
  9563                           ;utils.c: 26:     result = (uint32_t) data[0] << 24;
  9564     0380  082C               	movf	packLong@data,w
  9565     0381  0086               	movwf	6
  9566     0382  0187               	clrf	7
  9567     0383  0801               	movf	1,w
  9568     0384  00A4               	movwf	??_packLong
  9569     0385  01A5               	clrf	??_packLong+1
  9570     0386  01A6               	clrf	??_packLong+2
  9571     0387  01A7               	clrf	??_packLong+3
  9572     0388  3018               	movlw	24
  9573     0389                     u1795:
  9574     0389  35A4               	lslf	??_packLong,f
  9575     038A  0DA5               	rlf	??_packLong+1,f
  9576     038B  0DA6               	rlf	??_packLong+2,f
  9577     038C  0DA7               	rlf	??_packLong+3,f
  9578     038D                     u1790:
  9579     038D  0B89               	decfsz	9,f
  9580     038E  2B89               	goto	u1795
  9581     038F  0827               	movf	??_packLong+3,w
  9582     0390  00AB               	movwf	packLong@result+3
  9583     0391  0826               	movf	??_packLong+2,w
  9584     0392  00AA               	movwf	packLong@result+2
  9585     0393  0825               	movf	??_packLong+1,w
  9586     0394  00A9               	movwf	packLong@result+1
  9587     0395  0824               	movf	??_packLong,w
  9588     0396  00A8               	movwf	packLong@result
  9589     0397                     l3710:
  9590                           
  9591                           ;utils.c: 27:     result |= (uint32_t) data[1] << 16;
  9592     0397  0A2C               	incf	packLong@data,w
  9593     0398  0086               	movwf	6
  9594     0399  0187               	clrf	7
  9595     039A  0801               	movf	1,w
  9596     039B  00A4               	movwf	??_packLong
  9597     039C  01A5               	clrf	??_packLong+1
  9598     039D  01A6               	clrf	??_packLong+2
  9599     039E  01A7               	clrf	??_packLong+3
  9600     039F  3010               	movlw	16
  9601     03A0                     u1805:
  9602     03A0  35A4               	lslf	??_packLong,f
  9603     03A1  0DA5               	rlf	??_packLong+1,f
  9604     03A2  0DA6               	rlf	??_packLong+2,f
  9605     03A3  0DA7               	rlf	??_packLong+3,f
  9606     03A4                     u1800:
  9607     03A4  0B89               	decfsz	9,f
  9608     03A5  2BA0               	goto	u1805
  9609     03A6  0824               	movf	??_packLong,w
  9610     03A7  04A8               	iorwf	packLong@result,f
  9611     03A8  0825               	movf	??_packLong+1,w
  9612     03A9  04A9               	iorwf	packLong@result+1,f
  9613     03AA  0826               	movf	??_packLong+2,w
  9614     03AB  04AA               	iorwf	packLong@result+2,f
  9615     03AC  0827               	movf	??_packLong+3,w
  9616     03AD  04AB               	iorwf	packLong@result+3,f
  9617     03AE                     l3712:
  9618                           
  9619                           ;utils.c: 28:     result |= (uint32_t) data[2] << 8;
  9620     03AE  082C               	movf	packLong@data,w
  9621     03AF  3E02               	addlw	2
  9622     03B0  0086               	movwf	6
  9623     03B1  0187               	clrf	7
  9624     03B2  0801               	movf	1,w
  9625     03B3  00A4               	movwf	??_packLong
  9626     03B4  01A5               	clrf	??_packLong+1
  9627     03B5  01A6               	clrf	??_packLong+2
  9628     03B6  01A7               	clrf	??_packLong+3
  9629     03B7  3008               	movlw	8
  9630     03B8                     u1815:
  9631     03B8  35A4               	lslf	??_packLong,f
  9632     03B9  0DA5               	rlf	??_packLong+1,f
  9633     03BA  0DA6               	rlf	??_packLong+2,f
  9634     03BB  0DA7               	rlf	??_packLong+3,f
  9635     03BC                     u1810:
  9636     03BC  0B89               	decfsz	9,f
  9637     03BD  2BB8               	goto	u1815
  9638     03BE  0824               	movf	??_packLong,w
  9639     03BF  04A8               	iorwf	packLong@result,f
  9640     03C0  0825               	movf	??_packLong+1,w
  9641     03C1  04A9               	iorwf	packLong@result+1,f
  9642     03C2  0826               	movf	??_packLong+2,w
  9643     03C3  04AA               	iorwf	packLong@result+2,f
  9644     03C4  0827               	movf	??_packLong+3,w
  9645     03C5  04AB               	iorwf	packLong@result+3,f
  9646     03C6                     l3714:
  9647                           
  9648                           ;utils.c: 29:     result |= (uint32_t) data[3];
  9649     03C6  082C               	movf	packLong@data,w
  9650     03C7  3E03               	addlw	3
  9651     03C8  0086               	movwf	6
  9652     03C9  0187               	clrf	7
  9653     03CA  0801               	movf	1,w
  9654     03CB  04A8               	iorwf	packLong@result,f
  9655                           
  9656                           ;utils.c: 31:     return result;
  9657     03CC  082B               	movf	packLong@result+3,w
  9658     03CD  00A3               	movwf	?_packLong+3
  9659     03CE  082A               	movf	packLong@result+2,w
  9660     03CF  00A2               	movwf	?_packLong+2
  9661     03D0  0829               	movf	packLong@result+1,w
  9662     03D1  00A1               	movwf	?_packLong+1
  9663     03D2  0828               	movf	packLong@result,w
  9664     03D3  00A0               	movwf	?_packLong
  9665     03D4                     l742:
  9666     03D4  0008               	return
  9667     03D5                     __end_of_packLong:
  9668                           
  9669                           	psect	text33
  9670     0FD2                     __ptext33:	
  9671 ;; *************** function _KAPS_getIndex *****************
  9672 ;; Defined at:
  9673 ;;		line 94 in file "kaps.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;  data            1    8[BANK0 ] unsigned char 
  9678 ;;  reg             1    7[BANK0 ] unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  1    wreg      void 
  9681 ;; Registers used:
  9682 ;;		wreg, status,2, status,0, pclath, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9688 ;;      Params:         0       0       0       0       0       0       0       0
  9689 ;;      Locals:         0       2       0       0       0       0       0       0
  9690 ;;      Temps:          0       2       0       0       0       0       0       0
  9691 ;;      Totals:         0       4       0       0       0       0       0       0
  9692 ;;Total ram usage:        4 bytes
  9693 ;; Hardware stack levels used: 1
  9694 ;; Hardware stack levels required when called: 10
  9695 ;; This function calls:
  9696 ;;		_I2C1_Read
  9697 ;;		_I2C1_Write
  9698 ;; This function is called by:
  9699 ;;		_ProcessMsg
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703     0FD2                     _KAPS_getIndex:	
  9704                           ;psect for function _KAPS_getIndex
  9705                           
  9706     0FD2                     l3840:	
  9707                           ;incstack = 0
  9708                           ; Regs used in _KAPS_getIndex: [wreg+status,2+status,0+pclath+cstack]
  9709                           
  9710                           
  9711                           ;kaps.c: 95:     uint8_t reg = 0xFE;
  9712     0FD2  30FE               	movlw	254
  9713     0FD3  0020               	movlb	0	; select bank0
  9714     0FD4  00A7               	movwf	KAPS_getIndex@reg
  9715     0FD5                     l3842:
  9716                           
  9717                           ;kaps.c: 96:     uint8_t data = 0x00;
  9718     0FD5  01A8               	clrf	KAPS_getIndex@data
  9719     0FD6                     l3844:
  9720                           
  9721                           ;kaps.c: 98:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9722     0FD6  0864               	movf	_kaps,w
  9723     0FD7  00A5               	movwf	??_KAPS_getIndex
  9724     0FD8  01A6               	clrf	??_KAPS_getIndex+1
  9725     0FD9  0825               	movf	??_KAPS_getIndex,w
  9726     0FDA  00A0               	movwf	I2C1_Write@address
  9727     0FDB  0826               	movf	??_KAPS_getIndex+1,w
  9728     0FDC  00A1               	movwf	I2C1_Write@address+1
  9729     0FDD  3027               	movlw	(low (KAPS_getIndex@reg| 0))& (0+255)
  9730     0FDE  00A2               	movwf	I2C1_Write@data
  9731     0FDF  3001               	movlw	1
  9732     0FE0  00A3               	movwf	I2C1_Write@dataLength
  9733     0FE1  3000               	movlw	0
  9734     0FE2  00A4               	movwf	I2C1_Write@dataLength+1
  9735     0FE3  318E  26CC  318F   	fcall	_I2C1_Write
  9736     0FE6                     l3846:
  9737                           
  9738                           ;kaps.c: 100:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9739     0FE6  0020               	movlb	0	; select bank0
  9740     0FE7  0864               	movf	_kaps,w
  9741     0FE8  00A5               	movwf	??_KAPS_getIndex
  9742     0FE9  01A6               	clrf	??_KAPS_getIndex+1
  9743     0FEA  0825               	movf	??_KAPS_getIndex,w
  9744     0FEB  00A0               	movwf	I2C1_Read@address
  9745     0FEC  0826               	movf	??_KAPS_getIndex+1,w
  9746     0FED  00A1               	movwf	I2C1_Read@address+1
  9747     0FEE  3028               	movlw	(low (KAPS_getIndex@data| 0))& (0+255)
  9748     0FEF  00A2               	movwf	I2C1_Read@data
  9749     0FF0  3001               	movlw	1
  9750     0FF1  00A3               	movwf	I2C1_Read@dataLength
  9751     0FF2  3000               	movlw	0
  9752     0FF3  00A4               	movwf	I2C1_Read@dataLength+1
  9753     0FF4  318F  270C  318F   	fcall	_I2C1_Read
  9754     0FF7  3A00               	xorlw	0
  9755     0FF8  1903               	skipnz
  9756     0FF9  2FFB               	goto	u1921
  9757     0FFA  2FFC               	goto	u1920
  9758     0FFB                     u1921:
  9759     0FFB  2FFF               	goto	l733
  9760     0FFC                     u1920:
  9761     0FFC                     l3848:
  9762                           
  9763                           ;kaps.c: 101:         kaps.m_bIdxPos = data;
  9764     0FFC  0020               	movlb	0	; select bank0
  9765     0FFD  0828               	movf	KAPS_getIndex@data,w
  9766     0FFE  00EA               	movwf	_kaps+6
  9767     0FFF                     l733:
  9768     0FFF  0008               	return
  9769     1000                     __end_of_KAPS_getIndex:
  9770                           
  9771                           	psect	text34
  9772     0F0C                     __ptext34:	
  9773 ;; *************** function _I2C1_Read *****************
  9774 ;; Defined at:
  9775 ;;		line 161 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  address         2    0[BANK0 ] unsigned short 
  9778 ;;  data            1    2[BANK0 ] PTR unsigned char 
  9779 ;;		 -> KAPS_getPos@data(4), KAPS_getIndex@data(1), KAPS_getStatus@data(1), 
  9780 ;;  dataLength      2    3[BANK0 ] unsigned int 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;  retStatus       1    5[COMMON] _Bool 
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      _Bool 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0, pclath, cstack
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9792 ;;      Params:         0       5       0       0       0       0       0       0
  9793 ;;      Locals:         1       0       0       0       0       0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0
  9795 ;;      Totals:         1       5       0       0       0       0       0       0
  9796 ;;Total ram usage:        6 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; Hardware stack levels required when called: 9
  9799 ;; This function calls:
  9800 ;;		_I2C1_IsBusy
  9801 ;;		_I2C1_ReadStart
  9802 ;; This function is called by:
  9803 ;;		_KAPS_getStatus
  9804 ;;		_KAPS_getIndex
  9805 ;;		_KAPS_getPos
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809     0F0C                     _I2C1_Read:	
  9810                           ;psect for function _I2C1_Read
  9811                           
  9812     0F0C                     l3644:	
  9813                           ;incstack = 0
  9814                           ; Regs used in _I2C1_Read: [wreg+status,2+status,0+pclath+cstack]
  9815                           
  9816                           
  9817                           ;mcc_generated_files/i2c_host/src/mssp.c: 161: _Bool I2C1_Read(uint16_t address, uint8_t
      +                           *data, size_t dataLength);mcc_generated_files/i2c_host/src/mssp.c: 162: {;mcc_generated
      +                          _files/i2c_host/src/mssp.c: 163:     _Bool retStatus = 0;
  9818     0F0C  01F5               	clrf	I2C1_Read@retStatus
  9819     0F0D                     l3646:
  9820                           
  9821                           ;mcc_generated_files/i2c_host/src/mssp.c: 164:     if (!I2C1_IsBusy())
  9822     0F0D  318E  2626  318F   	fcall	_I2C1_IsBusy
  9823     0F10  3A00               	xorlw	0
  9824     0F11  1D03               	skipz
  9825     0F12  2F14               	goto	u1731
  9826     0F13  2F15               	goto	u1730
  9827     0F14                     u1731:
  9828     0F14  2F2C               	goto	l3666
  9829     0F15                     u1730:
  9830     0F15                     l3648:
  9831                           
  9832                           ;mcc_generated_files/i2c_host/src/mssp.c: 165:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 166:         i2c1Status.busy = 1;
  9833     0F15  3001               	movlw	1
  9834     0F16  0020               	movlb	0	; select bank0
  9835     0F17  00D2               	movwf	_i2c1Status	;volatile
  9836                           
  9837                           ;mcc_generated_files/i2c_host/src/mssp.c: 167:         i2c1Status.address = address;
  9838     0F18  0821               	movf	I2C1_Read@address+1,w
  9839     0F19  00D4               	movwf	_i2c1Status+2	;volatile
  9840     0F1A  0820               	movf	I2C1_Read@address,w
  9841     0F1B  00D3               	movwf	_i2c1Status+1	;volatile
  9842     0F1C                     l3650:
  9843                           
  9844                           ;mcc_generated_files/i2c_host/src/mssp.c: 168:         i2c1Status.switchToRead = 0;
  9845     0F1C  01DB               	clrf	_i2c1Status+9	;volatile
  9846     0F1D                     l3652:
  9847                           
  9848                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:         i2c1Status.readPtr = data;
  9849     0F1D  0822               	movf	I2C1_Read@data,w
  9850     0F1E  00D8               	movwf	low ((_i2c1Status| 0+6))	;volatile
  9851     0F1F                     l3654:
  9852                           
  9853                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:         i2c1Status.readLength = dataLengt
      +                          h;
  9854     0F1F  0824               	movf	I2C1_Read@dataLength+1,w
  9855     0F20  00DA               	movwf	_i2c1Status+8	;volatile
  9856     0F21  0823               	movf	I2C1_Read@dataLength,w
  9857     0F22  00D9               	movwf	_i2c1Status+7	;volatile
  9858     0F23                     l3656:
  9859                           
  9860                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:         i2c1Status.writePtr = ((void*)0);
  9861     0F23  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
  9862     0F24                     l3658:
  9863                           
  9864                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:         i2c1Status.writeLength = 0;
  9865     0F24  01D6               	clrf	_i2c1Status+4	;volatile
  9866     0F25  01D7               	clrf	_i2c1Status+5	;volatile
  9867     0F26                     l3660:
  9868                           
  9869                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
  9870     0F26  01DC               	clrf	_i2c1Status+10	;volatile
  9871     0F27                     l3662:
  9872                           
  9873                           ;mcc_generated_files/i2c_host/src/mssp.c: 174:         I2C1_ReadStart();
  9874     0F27  318D  258B  318F   	fcall	_I2C1_ReadStart
  9875     0F2A                     l3664:
  9876                           
  9877                           ;mcc_generated_files/i2c_host/src/mssp.c: 175:         retStatus = 1;
  9878     0F2A  01F5               	clrf	I2C1_Read@retStatus
  9879     0F2B  0AF5               	incf	I2C1_Read@retStatus,f
  9880     0F2C                     l3666:
  9881                           
  9882                           ;mcc_generated_files/i2c_host/src/mssp.c: 177:     return retStatus;
  9883     0F2C  0875               	movf	I2C1_Read@retStatus,w
  9884     0F2D                     l188:
  9885     0F2D  0008               	return
  9886     0F2E                     __end_of_I2C1_Read:
  9887                           
  9888                           	psect	text35
  9889     0D8B                     __ptext35:	
  9890 ;; *************** function _I2C1_ReadStart *****************
  9891 ;; Defined at:
  9892 ;;		line 232 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;		None
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;		None
  9897 ;; Return value:  Size  Location     Type
  9898 ;;                  1    wreg      void 
  9899 ;; Registers used:
  9900 ;;		wreg, status,2, status,0, pclath, cstack
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9906 ;;      Params:         0       0       0       0       0       0       0       0
  9907 ;;      Locals:         0       0       0       0       0       0       0       0
  9908 ;;      Temps:          0       0       0       0       0       0       0       0
  9909 ;;      Totals:         0       0       0       0       0       0       0       0
  9910 ;;Total ram usage:        0 bytes
  9911 ;; Hardware stack levels used: 1
  9912 ;; Hardware stack levels required when called: 8
  9913 ;; This function calls:
  9914 ;;		_I2C1_StartSend
  9915 ;; This function is called by:
  9916 ;;		_I2C1_Read
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920     0D8B                     _I2C1_ReadStart:	
  9921                           ;psect for function _I2C1_ReadStart
  9922                           
  9923     0D8B                     l3556:	
  9924                           ;incstack = 0
  9925                           ; Regs used in _I2C1_ReadStart: [wreg+status,2+status,0+pclath+cstack]
  9926                           
  9927                           
  9928                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:     I2C1_StartSend();
  9929     0D8B  318D  2505  318D   	fcall	_I2C1_StartSend
  9930     0D8E                     l3558:
  9931                           
  9932                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:     i2c1Status.state = I2C_STATE_SEND_RD_
      +                          ADDR;
  9933     0D8E  3001               	movlw	1
  9934     0D8F  0020               	movlb	0	; select bank0
  9935     0D90  00DD               	movwf	_i2c1Status+11	;volatile
  9936     0D91                     l213:
  9937     0D91  0008               	return
  9938     0D92                     __end_of_I2C1_ReadStart:
  9939                           
  9940                           	psect	text36
  9941     0534                     __ptext36:	
  9942 ;; *************** function _KAPS_StorePos *****************
  9943 ;; Defined at:
  9944 ;;		line 65 in file "kaps.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;  idx             1    wreg     unsigned char 
  9947 ;;  pos             4   13[BANK0 ] unsigned long 
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;  idx             1   24[BANK0 ] unsigned char 
  9950 ;;  data            4   19[BANK0 ] unsigned char [4]
  9951 ;;  reg             1   23[BANK0 ] unsigned char 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9961 ;;      Params:         0       4       0       0       0       0       0       0
  9962 ;;      Locals:         0       6       0       0       0       0       0       0
  9963 ;;      Temps:          0       2       0       0       0       0       0       0
  9964 ;;      Totals:         0      12       0       0       0       0       0       0
  9965 ;;Total ram usage:       12 bytes
  9966 ;; Hardware stack levels used: 1
  9967 ;; Hardware stack levels required when called: 10
  9968 ;; This function calls:
  9969 ;;		_I2C1_Write
  9970 ;;		_unpackLong
  9971 ;; This function is called by:
  9972 ;;		_ProcessMsg
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976     0534                     _KAPS_StorePos:	
  9977                           ;psect for function _KAPS_StorePos
  9978                           
  9979                           
  9980                           ;incstack = 0
  9981                           ; Regs used in _KAPS_StorePos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9982                           ;KAPS_StorePos@idx stored from wreg
  9983     0534  0020               	movlb	0	; select bank0
  9984     0535  00B8               	movwf	KAPS_StorePos@idx
  9985     0536                     l3888:
  9986                           
  9987                           ;kaps.c: 66:     idx--;
  9988     0536  3001               	movlw	1
  9989     0537  02B8               	subwf	KAPS_StorePos@idx,f
  9990     0538                     l3890:
  9991                           
  9992                           ;kaps.c: 68:     uint8_t reg = (idx)*4 + 0x04;
  9993     0538  0838               	movf	KAPS_StorePos@idx,w
  9994     0539  00B1               	movwf	??_KAPS_StorePos
  9995     053A  3001               	movlw	1
  9996     053B                     u1965:
  9997     053B  35B1               	lslf	??_KAPS_StorePos,f
  9998     053C  3EFF               	addlw	-1
  9999     053D  1D03               	skipz
 10000     053E  2D3B               	goto	u1965
 10001     053F  3531               	lslf	??_KAPS_StorePos,w
 10002     0540  3E04               	addlw	4
 10003     0541  00B7               	movwf	KAPS_StorePos@reg
 10004     0542                     l3892:
 10005                           
 10006                           ;kaps.c: 69:     uint8_t data[4];;kaps.c: 71:     data[0] = idx;
 10007     0542  0838               	movf	KAPS_StorePos@idx,w
 10008     0543  00B3               	movwf	KAPS_StorePos@data
 10009     0544                     l3894:
 10010                           
 10011                           ;kaps.c: 72:     unpackLong(pos, &data[0]);
 10012     0544  0830               	movf	KAPS_StorePos@pos+3,w
 10013     0545  00A3               	movwf	unpackLong@value+3
 10014     0546  082F               	movf	KAPS_StorePos@pos+2,w
 10015     0547  00A2               	movwf	unpackLong@value+2
 10016     0548  082E               	movf	KAPS_StorePos@pos+1,w
 10017     0549  00A1               	movwf	unpackLong@value+1
 10018     054A  082D               	movf	KAPS_StorePos@pos,w
 10019     054B  00A0               	movwf	unpackLong@value
 10020     054C  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10021     054D  00A4               	movwf	unpackLong@data
 10022     054E  3184  246C  3185   	fcall	_unpackLong
 10023     0551                     l3896:
 10024                           
 10025                           ;kaps.c: 74:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10026     0551  0020               	movlb	0	; select bank0
 10027     0552  0864               	movf	_kaps,w
 10028     0553  00B1               	movwf	??_KAPS_StorePos
 10029     0554  01B2               	clrf	??_KAPS_StorePos+1
 10030     0555  0831               	movf	??_KAPS_StorePos,w
 10031     0556  00A0               	movwf	I2C1_Write@address
 10032     0557  0832               	movf	??_KAPS_StorePos+1,w
 10033     0558  00A1               	movwf	I2C1_Write@address+1
 10034     0559  3037               	movlw	(low (KAPS_StorePos@reg| 0))& (0+255)
 10035     055A  00A2               	movwf	I2C1_Write@data
 10036     055B  3001               	movlw	1
 10037     055C  00A3               	movwf	I2C1_Write@dataLength
 10038     055D  3000               	movlw	0
 10039     055E  00A4               	movwf	I2C1_Write@dataLength+1
 10040     055F  318E  26CC  3185   	fcall	_I2C1_Write
 10041     0562                     l3898:
 10042                           
 10043                           ;kaps.c: 75:     I2C1_Write(kaps.m_bAddr, data, 4);
 10044     0562  0020               	movlb	0	; select bank0
 10045     0563  0864               	movf	_kaps,w
 10046     0564  00B1               	movwf	??_KAPS_StorePos
 10047     0565  01B2               	clrf	??_KAPS_StorePos+1
 10048     0566  0831               	movf	??_KAPS_StorePos,w
 10049     0567  00A0               	movwf	I2C1_Write@address
 10050     0568  0832               	movf	??_KAPS_StorePos+1,w
 10051     0569  00A1               	movwf	I2C1_Write@address+1
 10052     056A  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10053     056B  00A2               	movwf	I2C1_Write@data
 10054     056C  3004               	movlw	4
 10055     056D  00A3               	movwf	I2C1_Write@dataLength
 10056     056E  3000               	movlw	0
 10057     056F  00A4               	movwf	I2C1_Write@dataLength+1
 10058     0570  318E  26CC  3185   	fcall	_I2C1_Write
 10059     0573                     l725:
 10060     0573  0008               	return
 10061     0574                     __end_of_KAPS_StorePos:
 10062                           
 10063                           	psect	text37
 10064     046C                     __ptext37:	
 10065 ;; *************** function _unpackLong *****************
 10066 ;; Defined at:
 10067 ;;		line 57 in file "utils.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  value           4    0[BANK0 ] unsigned long 
 10070 ;;  data            1    4[BANK0 ] PTR unsigned char 
 10071 ;;		 -> KAPS_StorePos@data(4), KAPS_setAbsPos@data(4), ProcessMsg@payload(6), 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10083 ;;      Params:         0       5       0       0       0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0
 10085 ;;      Temps:          0       4       0       0       0       0       0       0
 10086 ;;      Totals:         0       9       0       0       0       0       0       0
 10087 ;;Total ram usage:        9 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; Hardware stack levels required when called: 7
 10090 ;; This function calls:
 10091 ;;		Nothing
 10092 ;; This function is called by:
 10093 ;;		_ProcessMsg
 10094 ;;		_KAPS_setAbsPos
 10095 ;;		_KAPS_StorePos
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099     046C                     _unpackLong:	
 10100                           ;psect for function _unpackLong
 10101                           
 10102     046C                     l3698:	
 10103                           ;incstack = 0
 10104                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
 10105                           
 10106                           
 10107                           ;utils.c: 59:     data[0] = (value & 0XFF);
 10108     046C  0020               	movlb	0	; select bank0
 10109     046D  0824               	movf	unpackLong@data,w
 10110     046E  0086               	movwf	6
 10111     046F  0187               	clrf	7
 10112     0470  0820               	movf	unpackLong@value,w
 10113     0471  0081               	movwf	1
 10114     0472                     l3700:
 10115                           
 10116                           ;utils.c: 60:     data[1] = (value >> 8) & 0xFF;
 10117     0472  0A24               	incf	unpackLong@data,w
 10118     0473  0086               	movwf	6
 10119     0474  0187               	clrf	7
 10120     0475  0820               	movf	unpackLong@value,w
 10121     0476  00A5               	movwf	??_unpackLong
 10122     0477  0821               	movf	unpackLong@value+1,w
 10123     0478  00A6               	movwf	??_unpackLong+1
 10124     0479  0822               	movf	unpackLong@value+2,w
 10125     047A  00A7               	movwf	??_unpackLong+2
 10126     047B  0823               	movf	unpackLong@value+3,w
 10127     047C  00A8               	movwf	??_unpackLong+3
 10128     047D  3008               	movlw	8
 10129     047E                     u1765:
 10130     047E  36A8               	lsrf	??_unpackLong+3,f
 10131     047F  0CA7               	rrf	??_unpackLong+2,f
 10132     0480  0CA6               	rrf	??_unpackLong+1,f
 10133     0481  0CA5               	rrf	??_unpackLong,f
 10134     0482                     u1760:
 10135     0482  0B89               	decfsz	9,f
 10136     0483  2C7E               	goto	u1765
 10137     0484  0825               	movf	??_unpackLong,w
 10138     0485  0081               	movwf	1
 10139     0486                     l3702:
 10140                           
 10141                           ;utils.c: 61:     data[2] = (value >> 16) & 0xFF;
 10142     0486  0824               	movf	unpackLong@data,w
 10143     0487  3E02               	addlw	2
 10144     0488  0086               	movwf	6
 10145     0489  0187               	clrf	7
 10146     048A  0820               	movf	unpackLong@value,w
 10147     048B  00A5               	movwf	??_unpackLong
 10148     048C  0821               	movf	unpackLong@value+1,w
 10149     048D  00A6               	movwf	??_unpackLong+1
 10150     048E  0822               	movf	unpackLong@value+2,w
 10151     048F  00A7               	movwf	??_unpackLong+2
 10152     0490  0823               	movf	unpackLong@value+3,w
 10153     0491  00A8               	movwf	??_unpackLong+3
 10154     0492  3010               	movlw	16
 10155     0493                     u1775:
 10156     0493  36A8               	lsrf	??_unpackLong+3,f
 10157     0494  0CA7               	rrf	??_unpackLong+2,f
 10158     0495  0CA6               	rrf	??_unpackLong+1,f
 10159     0496  0CA5               	rrf	??_unpackLong,f
 10160     0497                     u1770:
 10161     0497  0B89               	decfsz	9,f
 10162     0498  2C93               	goto	u1775
 10163     0499  0825               	movf	??_unpackLong,w
 10164     049A  0081               	movwf	1
 10165     049B                     l3704:
 10166                           
 10167                           ;utils.c: 62:     data[3] = (value >> 24) & 0xFF;
 10168     049B  0824               	movf	unpackLong@data,w
 10169     049C  3E03               	addlw	3
 10170     049D  0086               	movwf	6
 10171     049E  0187               	clrf	7
 10172     049F  0820               	movf	unpackLong@value,w
 10173     04A0  00A5               	movwf	??_unpackLong
 10174     04A1  0821               	movf	unpackLong@value+1,w
 10175     04A2  00A6               	movwf	??_unpackLong+1
 10176     04A3  0822               	movf	unpackLong@value+2,w
 10177     04A4  00A7               	movwf	??_unpackLong+2
 10178     04A5  0823               	movf	unpackLong@value+3,w
 10179     04A6  00A8               	movwf	??_unpackLong+3
 10180     04A7  3018               	movlw	24
 10181     04A8                     u1785:
 10182     04A8  36A8               	lsrf	??_unpackLong+3,f
 10183     04A9  0CA7               	rrf	??_unpackLong+2,f
 10184     04AA  0CA6               	rrf	??_unpackLong+1,f
 10185     04AB  0CA5               	rrf	??_unpackLong,f
 10186     04AC                     u1780:
 10187     04AC  0B89               	decfsz	9,f
 10188     04AD  2CA8               	goto	u1785
 10189     04AE  0825               	movf	??_unpackLong,w
 10190     04AF  0081               	movwf	1
 10191     04B0                     l748:
 10192     04B0  0008               	return
 10193     04B1                     __end_of_unpackLong:
 10194                           
 10195                           	psect	text38
 10196     0F2E                     __ptext38:	
 10197 ;; *************** function _KAPS_GoToIdx *****************
 10198 ;; Defined at:
 10199 ;;		line 24 in file "kaps.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  idx             1    wreg     unsigned char 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  idx             1    7[BANK0 ] unsigned char 
 10204 ;;  reg             1    8[BANK0 ] unsigned char 
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      void 
 10207 ;; Registers used:
 10208 ;;		wreg, status,2, status,0, pclath, cstack
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10214 ;;      Params:         0       0       0       0       0       0       0       0
 10215 ;;      Locals:         0       2       0       0       0       0       0       0
 10216 ;;      Temps:          0       2       0       0       0       0       0       0
 10217 ;;      Totals:         0       4       0       0       0       0       0       0
 10218 ;;Total ram usage:        4 bytes
 10219 ;; Hardware stack levels used: 1
 10220 ;; Hardware stack levels required when called: 10
 10221 ;; This function calls:
 10222 ;;		_I2C1_Write
 10223 ;; This function is called by:
 10224 ;;		_ProcessMsg
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228     0F2E                     _KAPS_GoToIdx:	
 10229                           ;psect for function _KAPS_GoToIdx
 10230                           
 10231                           
 10232                           ;incstack = 0
 10233                           ; Regs used in _KAPS_GoToIdx: [wreg+status,2+status,0+pclath+cstack]
 10234                           ;KAPS_GoToIdx@idx stored from wreg
 10235     0F2E  0020               	movlb	0	; select bank0
 10236     0F2F  00A7               	movwf	KAPS_GoToIdx@idx
 10237     0F30                     l3868:
 10238                           
 10239                           ;kaps.c: 25:     uint8_t reg = 0xFE;
 10240     0F30  30FE               	movlw	254
 10241     0F31  00A8               	movwf	KAPS_GoToIdx@reg
 10242     0F32                     l3870:
 10243                           
 10244                           ;kaps.c: 27:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10245     0F32  0864               	movf	_kaps,w
 10246     0F33  00A5               	movwf	??_KAPS_GoToIdx
 10247     0F34  01A6               	clrf	??_KAPS_GoToIdx+1
 10248     0F35  0825               	movf	??_KAPS_GoToIdx,w
 10249     0F36  00A0               	movwf	I2C1_Write@address
 10250     0F37  0826               	movf	??_KAPS_GoToIdx+1,w
 10251     0F38  00A1               	movwf	I2C1_Write@address+1
 10252     0F39  3028               	movlw	(low (KAPS_GoToIdx@reg| 0))& (0+255)
 10253     0F3A  00A2               	movwf	I2C1_Write@data
 10254     0F3B  3001               	movlw	1
 10255     0F3C  00A3               	movwf	I2C1_Write@dataLength
 10256     0F3D  3000               	movlw	0
 10257     0F3E  00A4               	movwf	I2C1_Write@dataLength+1
 10258     0F3F  318E  26CC  318F   	fcall	_I2C1_Write
 10259     0F42                     l3872:
 10260                           
 10261                           ;kaps.c: 28:     I2C1_Write(kaps.m_bAddr, &idx, 1);
 10262     0F42  0020               	movlb	0	; select bank0
 10263     0F43  0864               	movf	_kaps,w
 10264     0F44  00A5               	movwf	??_KAPS_GoToIdx
 10265     0F45  01A6               	clrf	??_KAPS_GoToIdx+1
 10266     0F46  0825               	movf	??_KAPS_GoToIdx,w
 10267     0F47  00A0               	movwf	I2C1_Write@address
 10268     0F48  0826               	movf	??_KAPS_GoToIdx+1,w
 10269     0F49  00A1               	movwf	I2C1_Write@address+1
 10270     0F4A  3027               	movlw	(low (KAPS_GoToIdx@idx| 0))& (0+255)
 10271     0F4B  00A2               	movwf	I2C1_Write@data
 10272     0F4C  3001               	movlw	1
 10273     0F4D  00A3               	movwf	I2C1_Write@dataLength
 10274     0F4E  3000               	movlw	0
 10275     0F4F  00A4               	movwf	I2C1_Write@dataLength+1
 10276     0F50  318E  26CC  318F   	fcall	_I2C1_Write
 10277     0F53                     l716:
 10278     0F53  0008               	return
 10279     0F54                     __end_of_KAPS_GoToIdx:
 10280                           
 10281                           	psect	text39
 10282     0ECC                     __ptext39:	
 10283 ;; *************** function _I2C1_Write *****************
 10284 ;; Defined at:
 10285 ;;		line 142 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  address         2    0[BANK0 ] unsigned short 
 10288 ;;  data            1    2[BANK0 ] PTR unsigned char 
 10289 ;;		 -> KAPS_getPos@reg(1), KAPS_getIndex@reg(1), KAPS_getStatus@reg(1), KAPS_StorePos@data(4), 
 10290 ;;		 -> KAPS_StorePos@reg(1), KAPS_setRelPos@value(1), KAPS_setRelPos@reg(1), KAPS_setAbsPos@data(4), 
 10291 ;;		 -> KAPS_setAbsPos@reg(1), KAPS_GoToIdx@idx(1), KAPS_GoToIdx@reg(1), 
 10292 ;;  dataLength      2    3[BANK0 ] unsigned int 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  retStatus       1    0        _Bool 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      _Bool 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0, pclath, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10304 ;;      Params:         0       5       0       0       0       0       0       0
 10305 ;;      Locals:         0       0       0       0       0       0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0
 10307 ;;      Totals:         0       5       0       0       0       0       0       0
 10308 ;;Total ram usage:        5 bytes
 10309 ;; Hardware stack levels used: 1
 10310 ;; Hardware stack levels required when called: 9
 10311 ;; This function calls:
 10312 ;;		_I2C1_IsBusy
 10313 ;;		_I2C1_WriteStart
 10314 ;; This function is called by:
 10315 ;;		_KAPS_GoToIdx
 10316 ;;		_KAPS_setAbsPos
 10317 ;;		_KAPS_setRelPos
 10318 ;;		_KAPS_StorePos
 10319 ;;		_KAPS_getStatus
 10320 ;;		_KAPS_getIndex
 10321 ;;		_KAPS_getPos
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325     0ECC                     _I2C1_Write:	
 10326                           ;psect for function _I2C1_Write
 10327                           
 10328     0ECC                     l3620:	
 10329                           ;incstack = 0
 10330                           ; Regs used in _I2C1_Write: [wreg+status,2+status,0+pclath+cstack]
 10331                           
 10332     0ECC                     l3622:
 10333                           
 10334                           ;mcc_generated_files/i2c_host/src/mssp.c: 145:     if (!I2C1_IsBusy())
 10335     0ECC  318E  2626  318E   	fcall	_I2C1_IsBusy
 10336     0ECF  3A00               	xorlw	0
 10337     0ED0  1D03               	skipz
 10338     0ED1  2ED3               	goto	u1721
 10339     0ED2  2ED4               	goto	u1720
 10340     0ED3                     u1721:
 10341     0ED3  2EE9               	goto	l184
 10342     0ED4                     u1720:
 10343     0ED4                     l3624:
 10344                           
 10345                           ;mcc_generated_files/i2c_host/src/mssp.c: 146:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 147:         i2c1Status.busy = 1;
 10346     0ED4  3001               	movlw	1
 10347     0ED5  0020               	movlb	0	; select bank0
 10348     0ED6  00D2               	movwf	_i2c1Status	;volatile
 10349                           
 10350                           ;mcc_generated_files/i2c_host/src/mssp.c: 148:         i2c1Status.address = address;
 10351     0ED7  0821               	movf	I2C1_Write@address+1,w
 10352     0ED8  00D4               	movwf	_i2c1Status+2	;volatile
 10353     0ED9  0820               	movf	I2C1_Write@address,w
 10354     0EDA  00D3               	movwf	_i2c1Status+1	;volatile
 10355     0EDB                     l3626:
 10356                           
 10357                           ;mcc_generated_files/i2c_host/src/mssp.c: 149:         i2c1Status.switchToRead = 0;
 10358     0EDB  01DB               	clrf	_i2c1Status+9	;volatile
 10359     0EDC                     l3628:
 10360                           
 10361                           ;mcc_generated_files/i2c_host/src/mssp.c: 150:         i2c1Status.writePtr = data;
 10362     0EDC  0822               	movf	I2C1_Write@data,w
 10363     0EDD  00D5               	movwf	low ((_i2c1Status| 0+3))	;volatile
 10364     0EDE                     l3630:
 10365                           
 10366                           ;mcc_generated_files/i2c_host/src/mssp.c: 151:         i2c1Status.writeLength = dataLeng
      +                          th;
 10367     0EDE  0824               	movf	I2C1_Write@dataLength+1,w
 10368     0EDF  00D7               	movwf	_i2c1Status+5	;volatile
 10369     0EE0  0823               	movf	I2C1_Write@dataLength,w
 10370     0EE1  00D6               	movwf	_i2c1Status+4	;volatile
 10371     0EE2                     l3632:
 10372                           
 10373                           ;mcc_generated_files/i2c_host/src/mssp.c: 152:         i2c1Status.readPtr = ((void*)0);
 10374     0EE2  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 10375     0EE3                     l3634:
 10376                           
 10377                           ;mcc_generated_files/i2c_host/src/mssp.c: 153:         i2c1Status.readLength = 0;
 10378     0EE3  01D9               	clrf	_i2c1Status+7	;volatile
 10379     0EE4  01DA               	clrf	_i2c1Status+8	;volatile
 10380     0EE5                     l3636:
 10381                           
 10382                           ;mcc_generated_files/i2c_host/src/mssp.c: 154:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 10383     0EE5  01DC               	clrf	_i2c1Status+10	;volatile
 10384     0EE6                     l3638:
 10385                           
 10386                           ;mcc_generated_files/i2c_host/src/mssp.c: 155:         I2C1_WriteStart();
 10387     0EE6  318D  2584  318E   	fcall	_I2C1_WriteStart
 10388     0EE9                     l3640:
 10389     0EE9                     l184:
 10390     0EE9  0008               	return
 10391     0EEA                     __end_of_I2C1_Write:
 10392                           
 10393                           	psect	text40
 10394     0D84                     __ptext40:	
 10395 ;; *************** function _I2C1_WriteStart *****************
 10396 ;; Defined at:
 10397 ;;		line 238 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;		None
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;		None
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      void 
 10404 ;; Registers used:
 10405 ;;		wreg, status,2, status,0, pclath, cstack
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10411 ;;      Params:         0       0       0       0       0       0       0       0
 10412 ;;      Locals:         0       0       0       0       0       0       0       0
 10413 ;;      Temps:          0       0       0       0       0       0       0       0
 10414 ;;      Totals:         0       0       0       0       0       0       0       0
 10415 ;;Total ram usage:        0 bytes
 10416 ;; Hardware stack levels used: 1
 10417 ;; Hardware stack levels required when called: 8
 10418 ;; This function calls:
 10419 ;;		_I2C1_StartSend
 10420 ;; This function is called by:
 10421 ;;		_I2C1_Write
 10422 ;;		_I2C1_WriteRead
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426     0D84                     _I2C1_WriteStart:	
 10427                           ;psect for function _I2C1_WriteStart
 10428                           
 10429     0D84                     l3552:	
 10430                           ;incstack = 0
 10431                           ; Regs used in _I2C1_WriteStart: [wreg+status,2+status,0+pclath+cstack]
 10432                           
 10433                           
 10434                           ;mcc_generated_files/i2c_host/src/mssp.c: 240:     I2C1_StartSend();
 10435     0D84  318D  2505  318D   	fcall	_I2C1_StartSend
 10436     0D87                     l3554:
 10437                           
 10438                           ;mcc_generated_files/i2c_host/src/mssp.c: 241:     i2c1Status.state = I2C_STATE_SEND_WR_
      +                          ADDR;
 10439     0D87  3002               	movlw	2
 10440     0D88  0020               	movlb	0	; select bank0
 10441     0D89  00DD               	movwf	_i2c1Status+11	;volatile
 10442     0D8A                     l216:
 10443     0D8A  0008               	return
 10444     0D8B                     __end_of_I2C1_WriteStart:
 10445                           
 10446                           	psect	text41
 10447     0D05                     __ptext41:	
 10448 ;; *************** function _I2C1_StartSend *****************
 10449 ;; Defined at:
 10450 ;;		line 425 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		None
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10464 ;;      Params:         0       0       0       0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used: 1
 10470 ;; Hardware stack levels required when called: 7
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_I2C1_ReadStart
 10475 ;;		_I2C1_WriteStart
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479     0D05                     _I2C1_StartSend:	
 10480                           ;psect for function _I2C1_StartSend
 10481                           
 10482     0D05                     l3516:	
 10483                           ;incstack = 0
 10484                           ; Regs used in _I2C1_StartSend: []
 10485                           
 10486                           
 10487                           ;mcc_generated_files/i2c_host/src/mssp.c: 427:     SSP1CON2bits.SEN = 1;
 10488     0D05  0024               	movlb	4	; select bank4
 10489     0D06  1416               	bsf	22,0	;volatile
 10490     0D07                     l288:
 10491     0D07  0008               	return
 10492     0D08                     __end_of_I2C1_StartSend:
 10493                           
 10494                           	psect	text42
 10495     0E26                     __ptext42:	
 10496 ;; *************** function _I2C1_IsBusy *****************
 10497 ;; Defined at:
 10498 ;;		line 206 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;		None
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  1    wreg      _Bool 
 10505 ;; Registers used:
 10506 ;;		wreg, status,2, status,0
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/0
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10512 ;;      Params:         0       0       0       0       0       0       0       0
 10513 ;;      Locals:         1       0       0       0       0       0       0       0
 10514 ;;      Temps:          0       0       0       0       0       0       0       0
 10515 ;;      Totals:         1       0       0       0       0       0       0       0
 10516 ;;Total ram usage:        1 bytes
 10517 ;; Hardware stack levels used: 1
 10518 ;; Hardware stack levels required when called: 7
 10519 ;; This function calls:
 10520 ;;		Nothing
 10521 ;; This function is called by:
 10522 ;;		_I2C1_Write
 10523 ;;		_I2C1_Read
 10524 ;;		_I2C1_WriteRead
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528     0E26                     _I2C1_IsBusy:	
 10529                           ;psect for function _I2C1_IsBusy
 10530                           
 10531     0E26                     l3540:	
 10532                           ;incstack = 0
 10533                           ; Regs used in _I2C1_IsBusy: [wreg+status,2+status,0]
 10534                           
 10535                           
 10536                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return i2c1Status.busy || SSP1STATbit
      +                          s.S;
 10537     0E26  01F4               	clrf	_I2C1_IsBusy$646
 10538     0E27  0AF4               	incf	_I2C1_IsBusy$646,f
 10539     0E28                     l3542:
 10540     0E28  0020               	movlb	0	; select bank0
 10541     0E29  0852               	movf	_i2c1Status,w	;volatile
 10542     0E2A  1D03               	btfss	3,2
 10543     0E2B  2E2D               	goto	u1551
 10544     0E2C  2E2E               	goto	u1550
 10545     0E2D                     u1551:
 10546     0E2D  2E34               	goto	l3548
 10547     0E2E                     u1550:
 10548     0E2E                     l3544:
 10549     0E2E  0024               	movlb	4	; select bank4
 10550     0E2F  1994               	btfsc	20,3	;volatile
 10551     0E30  2E32               	goto	u1561
 10552     0E31  2E33               	goto	u1560
 10553     0E32                     u1561:
 10554     0E32  2E34               	goto	l3548
 10555     0E33                     u1560:
 10556     0E33                     l3546:
 10557     0E33  01F4               	clrf	_I2C1_IsBusy$646
 10558     0E34                     l3548:
 10559     0E34  0874               	movf	_I2C1_IsBusy$646,w
 10560     0E35                     l200:
 10561     0E35  0008               	return
 10562     0E36                     __end_of_I2C1_IsBusy:
 10563                           
 10564                           	psect	text43
 10565     01AC                     __ptext43:	
 10566 ;; *************** function _Parse *****************
 10567 ;; Defined at:
 10568 ;;		line 74 in file "parser.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;  data            1    wreg     unsigned char 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  data            1    8[BANK0 ] unsigned char 
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  1    wreg      _Bool 
 10575 ;; Registers used:
 10576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10582 ;;      Params:         0       0       0       0       0       0       0       0
 10583 ;;      Locals:         0       1       0       0       0       0       0       0
 10584 ;;      Temps:          0       2       0       0       0       0       0       0
 10585 ;;      Totals:         0       3       0       0       0       0       0       0
 10586 ;;Total ram usage:        3 bytes
 10587 ;; Hardware stack levels used: 1
 10588 ;; Hardware stack levels required when called: 11
 10589 ;; This function calls:
 10590 ;;		_SendMsg
 10591 ;;		_SendNack
 10592 ;; This function is called by:
 10593 ;;		_main
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597     01AC                     _Parse:	
 10598                           ;psect for function _Parse
 10599                           
 10600                           
 10601                           ;incstack = 0
 10602                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10603                           ;Parse@data stored from wreg
 10604     01AC  0020               	movlb	0	; select bank0
 10605     01AD  00A8               	movwf	Parse@data
 10606     01AE                     l3956:
 10607                           
 10608                           ;parser.c: 75:     switch (parser.m_State) {
 10609     01AE  2A4A               	goto	l4024
 10610     01AF                     l3958:
 10611                           
 10612                           ;parser.c: 77:             if (data == 0x01) {
 10613     01AF  0328               	decf	Parse@data,w
 10614     01B0  1D03               	btfss	3,2
 10615     01B1  29B3               	goto	u2011
 10616     01B2  29B4               	goto	u2010
 10617     01B3                     u2011:
 10618     01B3  29BA               	goto	l3964
 10619     01B4                     u2010:
 10620     01B4                     l3960:
 10621                           
 10622                           ;parser.c: 78:                 parser.m_State = WAIT_ID;
 10623     01B4  0021               	movlb	1	; select bank1
 10624     01B5  01B8               	clrf	_parser^(0+128)
 10625     01B6  0AB8               	incf	_parser^(0+128),f
 10626     01B7                     l3962:
 10627                           
 10628                           ;parser.c: 79:                 parser.m_bSum = 0x00;
 10629     01B7  01BE               	clrf	(_parser^(0+128)+6)
 10630                           
 10631                           ;parser.c: 80:                 parser.m_bDataIndex = 0;
 10632     01B8  01BA               	clrf	(_parser^(0+128)+2)
 10633                           
 10634                           ;parser.c: 81:             } else
 10635     01B9  2A62               	goto	l4026
 10636     01BA                     l3964:
 10637                           
 10638                           ;parser.c: 82:                 SendNack(WRONG_MESSAGE);
 10639     01BA  3002               	movlw	2
 10640     01BB  318D  25B8  3181   	fcall	_SendNack
 10641     01BE  2A62               	goto	l4026
 10642     01BF                     l3966:
 10643                           
 10644                           ;parser.c: 86:             parser.m_MsgID = data;
 10645     01BF  0828               	movf	Parse@data,w
 10646     01C0  0021               	movlb	1	; select bank1
 10647     01C1  00B9               	movwf	(_parser^(0+128)+1)
 10648     01C2                     l3968:
 10649                           
 10650                           ;parser.c: 87:             parser.m_bEcho = 1;
 10651     01C2  01BF               	clrf	(_parser^(0+128)+7)
 10652     01C3  0ABF               	incf	(_parser^(0+128)+7),f
 10653                           
 10654                           ;parser.c: 89:             parser.m_State = WAIT_VALUE;
 10655     01C4  3002               	movlw	2
 10656     01C5  00B8               	movwf	_parser^(0+128)
 10657                           
 10658                           ;parser.c: 91:             switch ((uint8_t) parser.m_MsgID) {
 10659     01C6  29E5               	goto	l3988
 10660     01C7                     l3970:
 10661                           
 10662                           ;parser.c: 95:                     parser.m_bEcho = 0;
 10663     01C7  01BF               	clrf	(_parser^(0+128)+7)
 10664                           
 10665                           ;parser.c: 96:                     parser.m_bReplySize = 0;
 10666     01C8  01BC               	clrf	(_parser^(0+128)+4)
 10667                           
 10668                           ;parser.c: 97:                     parser.m_bDataSize = 0;
 10669     01C9  01BB               	clrf	(_parser^(0+128)+3)
 10670     01CA                     l3972:
 10671                           
 10672                           ;parser.c: 98:                     parser.m_State = WAIT_CKSUM;
 10673     01CA  3003               	movlw	3
 10674     01CB  00B8               	movwf	_parser^(0+128)
 10675                           
 10676                           ;parser.c: 99:                     break;
 10677     01CC  2A62               	goto	l4026
 10678     01CD                     l792:	
 10679                           ;parser.c: 103:                 case NVT_RFDU_SSPAPout:
 10680                           
 10681     01CD                     l3974:
 10682                           
 10683                           ;parser.c: 105:                     parser.m_bEcho = 0;
 10684     01CD  01BF               	clrf	(_parser^(0+128)+7)
 10685     01CE                     l3976:
 10686                           
 10687                           ;parser.c: 107:                     parser.m_bReplySize = 1;
 10688     01CE  01BC               	clrf	(_parser^(0+128)+4)
 10689     01CF  0ABC               	incf	(_parser^(0+128)+4),f
 10690     01D0                     l3978:
 10691                           
 10692                           ;parser.c: 108:                     parser.m_bDataSize = 1;
 10693     01D0  01BB               	clrf	(_parser^(0+128)+3)
 10694     01D1  0ABB               	incf	(_parser^(0+128)+3),f
 10695                           
 10696                           ;parser.c: 109:                     break;
 10697     01D2  2A62               	goto	l4026
 10698     01D3                     l3980:
 10699                           
 10700                           ;parser.c: 112:                     parser.m_bReplySize = 2;
 10701     01D3  3002               	movlw	2
 10702     01D4  00BC               	movwf	(_parser^(0+128)+4)
 10703                           
 10704                           ;parser.c: 113:                     parser.m_bDataSize = 2;
 10705     01D5  3002               	movlw	2
 10706     01D6  00BB               	movwf	(_parser^(0+128)+3)
 10707                           
 10708                           ;parser.c: 114:                     break;
 10709     01D7  2A62               	goto	l4026
 10710     01D8                     l3982:
 10711                           
 10712                           ;parser.c: 117:                     parser.m_bReplySize = 4;
 10713     01D8  3004               	movlw	4
 10714     01D9  00BC               	movwf	(_parser^(0+128)+4)
 10715                           
 10716                           ;parser.c: 118:                     parser.m_bDataSize = 4;
 10717     01DA  3004               	movlw	4
 10718     01DB  00BB               	movwf	(_parser^(0+128)+3)
 10719                           
 10720                           ;parser.c: 119:                     break;
 10721     01DC  2A62               	goto	l4026
 10722     01DD                     l3984:
 10723                           
 10724                           ;parser.c: 122:                     parser.m_bReplySize = 5;
 10725     01DD  3005               	movlw	5
 10726     01DE  00BC               	movwf	(_parser^(0+128)+4)
 10727                           
 10728                           ;parser.c: 123:                     parser.m_bDataSize = 5;
 10729     01DF  3005               	movlw	5
 10730     01E0  00BB               	movwf	(_parser^(0+128)+3)
 10731                           
 10732                           ;parser.c: 124:                     break;
 10733     01E1  2A62               	goto	l4026
 10734     01E2                     l3986:
 10735                           
 10736                           ;parser.c: 127:                     parser.m_State = WAIT_SOM;
 10737     01E2  0021               	movlb	1	; select bank1
 10738     01E3  01B8               	clrf	_parser^(0+128)
 10739                           
 10740                           ;parser.c: 128:             }
 10741     01E4  2A62               	goto	l4026
 10742     01E5                     l3988:
 10743     01E5  0839               	movf	(_parser^(0+128)+1),w
 10744                           
 10745                           ; Switch size 1, requested type "simple"
 10746                           ; Number of cases is 11, Range of values is 1 to 17
 10747                           ; switch strategies available:
 10748                           ; Name         Instructions Cycles
 10749                           ; simple_byte           34    18 (average)
 10750                           ; direct_byte           43     9 (fixed)
 10751                           ; jumptable            263     9 (fixed)
 10752                           ;	Chosen strategy is simple_byte
 10753     01E6  3A01               	xorlw	1	; case 1
 10754     01E7  1903               	skipnz
 10755     01E8  29D3               	goto	l3980
 10756     01E9  3A03               	xorlw	3	; case 2
 10757     01EA  1903               	skipnz
 10758     01EB  29CD               	goto	l792
 10759     01EC  3A01               	xorlw	1	; case 3
 10760     01ED  1903               	skipnz
 10761     01EE  29CD               	goto	l3974
 10762     01EF  3A07               	xorlw	7	; case 4
 10763     01F0  1903               	skipnz
 10764     01F1  29CD               	goto	l3974
 10765     01F2  3A01               	xorlw	1	; case 5
 10766     01F3  1903               	skipnz
 10767     01F4  29C7               	goto	l3970
 10768     01F5  3A03               	xorlw	3	; case 6
 10769     01F6  1903               	skipnz
 10770     01F7  29C7               	goto	l3970
 10771     01F8  3A01               	xorlw	1	; case 7
 10772     01F9  1903               	skipnz
 10773     01FA  29CE               	goto	l3976
 10774     01FB  3A0F               	xorlw	15	; case 8
 10775     01FC  1903               	skipnz
 10776     01FD  29D8               	goto	l3982
 10777     01FE  3A01               	xorlw	1	; case 9
 10778     01FF  1903               	skipnz
 10779     0200  29CD               	goto	l3974
 10780     0201  3A03               	xorlw	3	; case 10
 10781     0202  1903               	skipnz
 10782     0203  29DD               	goto	l3984
 10783     0204  3A1B               	xorlw	27	; case 17
 10784     0205  1903               	skipnz
 10785     0206  29C7               	goto	l3970
 10786     0207  29E2               	goto	l3986
 10787     0208                     l3990:
 10788                           
 10789                           ;parser.c: 132:             parserDataBuffer[parser.m_bDataIndex] = data;
 10790     0208  0021               	movlb	1	; select bank1
 10791     0209  083A               	movf	(_parser^(0+128)+2),w
 10792     020A  3ECA               	addlw	(low (_parserDataBuffer| 0))& (0+255)
 10793     020B  0086               	movwf	6
 10794     020C  0187               	clrf	7
 10795     020D  0020               	movlb	0	; select bank0
 10796     020E  0828               	movf	Parse@data,w
 10797     020F  0081               	movwf	1
 10798     0210                     l3992:
 10799                           
 10800                           ;parser.c: 133:             parser.m_bSum += data;
 10801     0210  0828               	movf	Parse@data,w
 10802     0211  00A6               	movwf	??_Parse
 10803     0212  0826               	movf	??_Parse,w
 10804     0213  0021               	movlb	1	; select bank1
 10805     0214  07BE               	addwf	(_parser^(0+128)+6),f
 10806     0215                     l3994:
 10807                           
 10808                           ;parser.c: 134:             parser.m_bDataIndex++;
 10809     0215  3001               	movlw	1
 10810     0216  0020               	movlb	0	; select bank0
 10811     0217  00A6               	movwf	??_Parse
 10812     0218  0826               	movf	??_Parse,w
 10813     0219  0021               	movlb	1	; select bank1
 10814     021A  07BA               	addwf	(_parser^(0+128)+2),f
 10815     021B                     l3996:
 10816                           
 10817                           ;parser.c: 135:             parser.m_bDataSize--;
 10818     021B  3001               	movlw	1
 10819     021C  02BB               	subwf	(_parser^(0+128)+3),f
 10820     021D                     l3998:
 10821                           
 10822                           ;parser.c: 136:             if (parser.m_bDataSize == 0)
 10823     021D  083B               	movf	(_parser^(0+128)+3),w
 10824     021E  1D03               	btfss	3,2
 10825     021F  2A21               	goto	u2021
 10826     0220  2A22               	goto	u2020
 10827     0221                     u2021:
 10828     0221  2A62               	goto	l4026
 10829     0222                     u2020:
 10830     0222  29CA               	goto	l3972
 10831     0223                     l4002:
 10832                           
 10833                           ;parser.c: 141:             parser.m_bCkSum = data;
 10834     0223  0828               	movf	Parse@data,w
 10835     0224  0021               	movlb	1	; select bank1
 10836     0225  00BD               	movwf	(_parser^(0+128)+5)
 10837     0226                     l4004:
 10838                           
 10839                           ;parser.c: 142:             parser.m_State = WAIT_SOM;
 10840     0226  01B8               	clrf	_parser^(0+128)
 10841     0227                     l4006:
 10842                           
 10843                           ;parser.c: 144:             if (parser.m_bSum == parser.m_bCkSum) {
 10844     0227  083E               	movf	(_parser^(0+128)+6),w
 10845     0228  063D               	xorwf	(_parser^(0+128)+5),w
 10846     0229  1D03               	skipz
 10847     022A  2A2C               	goto	u2031
 10848     022B  2A2D               	goto	u2030
 10849     022C                     u2031:
 10850     022C  2A40               	goto	l4018
 10851     022D                     u2030:
 10852     022D                     l4008:
 10853                           
 10854                           ;parser.c: 145:                 if (parser.m_bEcho)
 10855     022D  083F               	movf	(_parser^(0+128)+7),w
 10856     022E  1903               	btfsc	3,2
 10857     022F  2A31               	goto	u2041
 10858     0230  2A32               	goto	u2040
 10859     0231                     u2041:
 10860     0231  2A3E               	goto	l4012
 10861     0232                     u2040:
 10862     0232                     l4010:
 10863                           
 10864                           ;parser.c: 146:                     SendMsg(parser.m_MsgID, parserDataBuffer, parser.m_b
      +                          ReplySize);
 10865     0232  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
 10866     0233  0020               	movlb	0	; select bank0
 10867     0234  00A0               	movwf	SendMsg@data
 10868     0235  0021               	movlb	1	; select bank1
 10869     0236  083C               	movf	(_parser^(0+128)+4),w
 10870     0237  0020               	movlb	0	; select bank0
 10871     0238  00A1               	movwf	SendMsg@data_len
 10872     0239  0021               	movlb	1	; select bank1
 10873     023A  0839               	movf	(_parser^(0+128)+1),w
 10874     023B  3186  262C  3181   	fcall	_SendMsg
 10875     023E                     l4012:
 10876                           
 10877                           ;parser.c: 148:                 return 1;
 10878     023E  3001               	movlw	1
 10879     023F  2A63               	goto	l804
 10880     0240                     l4018:
 10881                           
 10882                           ;parser.c: 150:                 SendNack(CKSUM_ERR);
 10883     0240  3001               	movlw	1
 10884     0241  318D  25B8  3181   	fcall	_SendNack
 10885     0244  2A62               	goto	l4026
 10886     0245                     l4020:
 10887                           
 10888                           ;parser.c: 154:             SendNack(WRONG_MESSAGE);
 10889     0245  3002               	movlw	2
 10890     0246  318D  25B8  3181   	fcall	_SendNack
 10891     0249  29E2               	goto	l3986
 10892     024A                     l4024:
 10893     024A  0021               	movlb	1	; select bank1
 10894     024B  0838               	movf	_parser^(0+128),w
 10895     024C  0020               	movlb	0	; select bank0
 10896     024D  00A6               	movwf	??_Parse
 10897     024E  01A7               	clrf	??_Parse+1
 10898                           
 10899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10900                           ; Switch size 1, requested type "simple"
 10901                           ; Number of cases is 1, Range of values is 0 to 0
 10902                           ; switch strategies available:
 10903                           ; Name         Instructions Cycles
 10904                           ; simple_byte            4     3 (average)
 10905                           ; direct_byte            8     6 (fixed)
 10906                           ; jumptable            260     6 (fixed)
 10907                           ;	Chosen strategy is simple_byte
 10908     024F  0827               	movf	??_Parse+1,w
 10909     0250  3A00               	xorlw	0	; case 0
 10910     0251  1903               	skipnz
 10911     0252  2A54               	goto	l4210
 10912     0253  2A45               	goto	l4020
 10913     0254                     l4210:
 10914                           
 10915                           ; Switch size 1, requested type "simple"
 10916                           ; Number of cases is 4, Range of values is 0 to 3
 10917                           ; switch strategies available:
 10918                           ; Name         Instructions Cycles
 10919                           ; simple_byte           13     7 (average)
 10920                           ; direct_byte           14     6 (fixed)
 10921                           ; jumptable            260     6 (fixed)
 10922                           ;	Chosen strategy is simple_byte
 10923     0254  0826               	movf	??_Parse,w
 10924     0255  3A00               	xorlw	0	; case 0
 10925     0256  1903               	skipnz
 10926     0257  29AF               	goto	l3958
 10927     0258  3A01               	xorlw	1	; case 1
 10928     0259  1903               	skipnz
 10929     025A  29BF               	goto	l3966
 10930     025B  3A03               	xorlw	3	; case 2
 10931     025C  1903               	skipnz
 10932     025D  2A08               	goto	l3990
 10933     025E  3A01               	xorlw	1	; case 3
 10934     025F  1903               	skipnz
 10935     0260  2A23               	goto	l4002
 10936     0261  2A45               	goto	l4020
 10937     0262                     l4026:
 10938                           
 10939                           ;parser.c: 158:     return 0;
 10940     0262  3000               	movlw	0
 10941     0263                     l804:
 10942     0263  0008               	return
 10943     0264                     __end_of_Parse:
 10944                           
 10945                           	psect	text44
 10946     0DB8                     __ptext44:	
 10947 ;; *************** function _SendNack *****************
 10948 ;; Defined at:
 10949 ;;		line 62 in file "parser.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  error           1    wreg     unsigned char 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  error           1    5[BANK0 ] unsigned char 
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      void 
 10956 ;; Registers used:
 10957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10963 ;;      Params:         0       0       0       0       0       0       0       0
 10964 ;;      Locals:         0       1       0       0       0       0       0       0
 10965 ;;      Temps:          0       0       0       0       0       0       0       0
 10966 ;;      Totals:         0       1       0       0       0       0       0       0
 10967 ;;Total ram usage:        1 bytes
 10968 ;; Hardware stack levels used: 1
 10969 ;; Hardware stack levels required when called: 10
 10970 ;; This function calls:
 10971 ;;		_SendMsg
 10972 ;; This function is called by:
 10973 ;;		_Parse
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977     0DB8                     _SendNack:	
 10978                           ;psect for function _SendNack
 10979                           
 10980                           
 10981                           ;incstack = 0
 10982                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10983                           ;SendNack@error stored from wreg
 10984     0DB8  0020               	movlb	0	; select bank0
 10985     0DB9  00A5               	movwf	SendNack@error
 10986     0DBA                     l3900:
 10987                           
 10988                           ;parser.c: 63:     SendMsg(RFDU_NVT_NACK, &error, 1);
 10989     0DBA  3025               	movlw	(low (SendNack@error| 0))& (0+255)
 10990     0DBB  00A0               	movwf	SendMsg@data
 10991     0DBC  01A1               	clrf	SendMsg@data_len
 10992     0DBD  0AA1               	incf	SendMsg@data_len,f
 10993     0DBE  300B               	movlw	11
 10994     0DBF  3186  262C  318D   	fcall	_SendMsg
 10995     0DC2                     l776:
 10996     0DC2  0008               	return
 10997     0DC3                     __end_of_SendNack:
 10998                           
 10999                           	psect	text45
 11000     062C                     __ptext45:	
 11001 ;; *************** function _SendMsg *****************
 11002 ;; Defined at:
 11003 ;;		line 36 in file "parser.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;  msg_id          1    wreg     unsigned char 
 11006 ;;  data            1    0[BANK0 ] PTR unsigned char 
 11007 ;;		 -> SendNack@error(1), parserDataBuffer(5), ProcessMsg@payload(6), 
 11008 ;;  data_len        1    1[BANK0 ] unsigned char 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  msg_id          1    4[BANK0 ] unsigned char 
 11011 ;;  sum             1    3[BANK0 ] unsigned char 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  1    wreg      void 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11016 ;; Tracked objects:
 11017 ;;		On entry : 0/0
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11021 ;;      Params:         0       2       0       0       0       0       0       0
 11022 ;;      Locals:         0       2       0       0       0       0       0       0
 11023 ;;      Temps:          0       1       0       0       0       0       0       0
 11024 ;;      Totals:         0       5       0       0       0       0       0       0
 11025 ;;Total ram usage:        5 bytes
 11026 ;; Hardware stack levels used: 1
 11027 ;; Hardware stack levels required when called: 9
 11028 ;; This function calls:
 11029 ;;		_SendSync
 11030 ;; This function is called by:
 11031 ;;		_ProcessMsg
 11032 ;;		_SendNack
 11033 ;;		_Parse
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037     062C                     _SendMsg:	
 11038                           ;psect for function _SendMsg
 11039                           
 11040                           
 11041                           ;incstack = 0
 11042                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11043                           ;SendMsg@msg_id stored from wreg
 11044     062C  0020               	movlb	0	; select bank0
 11045     062D  00A4               	movwf	SendMsg@msg_id
 11046     062E                     l3670:
 11047                           
 11048                           ;parser.c: 37:     uint8_t sum = 0x00;
 11049     062E  01A3               	clrf	SendMsg@sum
 11050     062F                     l3672:
 11051                           
 11052                           ;parser.c: 39:     SendSync(0x01);
 11053     062F  3001               	movlw	1
 11054     0630  318E  2636  3186   	fcall	_SendSync
 11055     0633                     l3674:
 11056                           
 11057                           ;parser.c: 41:     SendSync(msg_id);
 11058     0633  0020               	movlb	0	; select bank0
 11059     0634  0824               	movf	SendMsg@msg_id,w
 11060     0635  318E  2636  3186   	fcall	_SendSync
 11061     0638                     l3676:
 11062                           
 11063                           ;parser.c: 43:     if (msg_id == RFDU_NVT_NACK)
 11064     0638  300B               	movlw	11
 11065     0639  0020               	movlb	0	; select bank0
 11066     063A  0624               	xorwf	SendMsg@msg_id,w
 11067     063B  1D03               	btfss	3,2
 11068     063C  2E3E               	goto	u1741
 11069     063D  2E3F               	goto	u1740
 11070     063E                     u1741:
 11071     063E  2E47               	goto	l3682
 11072     063F                     u1740:
 11073     063F                     l3678:
 11074                           
 11075                           ;parser.c: 44:     {;parser.c: 45:         SendSync(*data);
 11076     063F  0820               	movf	SendMsg@data,w
 11077     0640  0086               	movwf	6
 11078     0641  0187               	clrf	7
 11079     0642  0801               	movf	1,w
 11080     0643  318E  2636  3186   	fcall	_SendSync
 11081     0646  2E67               	goto	l771
 11082     0647                     l3682:
 11083                           
 11084                           ;parser.c: 49:     for (; data_len > 0; data_len--) {
 11085     0647  0821               	movf	SendMsg@data_len,w
 11086     0648  1D03               	btfss	3,2
 11087     0649  2E4B               	goto	u1751
 11088     064A  2E4C               	goto	u1750
 11089     064B                     u1751:
 11090     064B  2E4D               	goto	l3686
 11091     064C                     u1750:
 11092     064C  2E63               	goto	l3696
 11093     064D                     l3686:
 11094                           
 11095                           ;parser.c: 50:         SendSync(*data);
 11096     064D  0820               	movf	SendMsg@data,w
 11097     064E  0086               	movwf	6
 11098     064F  0187               	clrf	7
 11099     0650  0801               	movf	1,w
 11100     0651  318E  2636  3186   	fcall	_SendSync
 11101     0654                     l3688:
 11102                           
 11103                           ;parser.c: 51:         sum += *data;
 11104     0654  0020               	movlb	0	; select bank0
 11105     0655  0820               	movf	SendMsg@data,w
 11106     0656  0086               	movwf	6
 11107     0657  0187               	clrf	7
 11108     0658  0801               	movf	1,w
 11109     0659  00A2               	movwf	??_SendMsg
 11110     065A  0822               	movf	??_SendMsg,w
 11111     065B  07A3               	addwf	SendMsg@sum,f
 11112     065C                     l3690:
 11113                           
 11114                           ;parser.c: 52:         data++;
 11115     065C  3001               	movlw	1
 11116     065D  00A2               	movwf	??_SendMsg
 11117     065E  0822               	movf	??_SendMsg,w
 11118     065F  07A0               	addwf	SendMsg@data,f
 11119     0660                     l3692:
 11120                           
 11121                           ;parser.c: 53:     }
 11122     0660  3001               	movlw	1
 11123     0661  02A1               	subwf	SendMsg@data_len,f
 11124     0662  2E47               	goto	l3682
 11125     0663                     l3696:
 11126                           
 11127                           ;parser.c: 55:     SendSync(sum);
 11128     0663  0823               	movf	SendMsg@sum,w
 11129     0664  318E  2636  3186   	fcall	_SendSync
 11130     0667                     l771:
 11131     0667  0008               	return
 11132     0668                     __end_of_SendMsg:
 11133                           
 11134                           	psect	text46
 11135     0E36                     __ptext46:	
 11136 ;; *************** function _SendSync *****************
 11137 ;; Defined at:
 11138 ;;		line 23 in file "parser.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  data            1    wreg     unsigned char 
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;  data            1    5[COMMON] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, status,2, status,0, pclath, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11152 ;;      Params:         0       0       0       0       0       0       0       0
 11153 ;;      Locals:         1       0       0       0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0
 11155 ;;      Totals:         1       0       0       0       0       0       0       0
 11156 ;;Total ram usage:        1 bytes
 11157 ;; Hardware stack levels used: 1
 11158 ;; Hardware stack levels required when called: 8
 11159 ;; This function calls:
 11160 ;;		_EUSART_IsTxReady
 11161 ;;		_EUSART_Write
 11162 ;; This function is called by:
 11163 ;;		_SendMsg
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167     0E36                     _SendSync:	
 11168                           ;psect for function _SendSync
 11169                           
 11170                           
 11171                           ;incstack = 0
 11172                           ; Regs used in _SendSync: [wreg+status,2+status,0+pclath+cstack]
 11173                           ;SendSync@data stored from wreg
 11174     0E36  00F5               	movwf	SendSync@data
 11175     0E37                     l3560:
 11176                           
 11177                           ;parser.c: 23: void SendSync(uint8_t data);parser.c: 24: {;parser.c: 25:     while(!EUSA
      +                          RT_IsTxReady())
 11178     0E37  2E39               	goto	l3562
 11179     0E38                     l765:
 11180                           
 11181                           ;parser.c: 26:         __nop();
 11182     0E38  0000               	nop
 11183     0E39                     l3562:
 11184                           
 11185                           ;parser.c: 25:     while(!EUSART_IsTxReady())
 11186     0E39  318E  2617  318E   	fcall	_EUSART_IsTxReady
 11187     0E3C  3A00               	xorlw	0
 11188     0E3D  1903               	skipnz
 11189     0E3E  2E40               	goto	u1571
 11190     0E3F  2E41               	goto	u1570
 11191     0E40                     u1571:
 11192     0E40  2E38               	goto	l765
 11193     0E41                     u1570:
 11194     0E41                     l3564:
 11195                           
 11196                           ;parser.c: 27:     EUSART_Write(data);
 11197     0E41  0875               	movf	SendSync@data,w
 11198     0E42  00F4               	movwf	EUSART_Write@txData
 11199     0E43  318D  252F  318E   	fcall	_EUSART_Write
 11200     0E46                     l767:
 11201     0E46  0008               	return
 11202     0E47                     __end_of_SendSync:
 11203                           
 11204                           	psect	text47
 11205     0D2F                     __ptext47:	
 11206 ;; *************** function _EUSART_Write *****************
 11207 ;; Defined at:
 11208 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;  txData          1    4[COMMON] unsigned char 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;		None
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  1    wreg      void 
 11215 ;; Registers used:
 11216 ;;		wreg
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11222 ;;      Params:         1       0       0       0       0       0       0       0
 11223 ;;      Locals:         0       0       0       0       0       0       0       0
 11224 ;;      Temps:          0       0       0       0       0       0       0       0
 11225 ;;      Totals:         1       0       0       0       0       0       0       0
 11226 ;;Total ram usage:        1 bytes
 11227 ;; Hardware stack levels used: 1
 11228 ;; Hardware stack levels required when called: 7
 11229 ;; This function calls:
 11230 ;;		Nothing
 11231 ;; This function is called by:
 11232 ;;		_SendSync
 11233 ;;		_EUSART_sendMsg
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237     0D2F                     _EUSART_Write:	
 11238                           ;psect for function _EUSART_Write
 11239                           
 11240     0D2F                     l3530:	
 11241                           ;incstack = 0
 11242                           ; Regs used in _EUSART_Write: [wreg]
 11243                           
 11244                           
 11245                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
 11246     0D2F  0874               	movf	EUSART_Write@txData,w
 11247     0D30  0023               	movlb	3	; select bank3
 11248     0D31  009A               	movwf	26	;volatile
 11249     0D32                     l613:
 11250     0D32  0008               	return
 11251     0D33                     __end_of_EUSART_Write:
 11252                           
 11253                           	psect	text48
 11254     0E17                     __ptext48:	
 11255 ;; *************** function _EUSART_IsTxReady *****************
 11256 ;; Defined at:
 11257 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;		None
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1    wreg      _Bool 
 11264 ;; Registers used:
 11265 ;;		wreg, status,2
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11271 ;;      Params:         0       0       0       0       0       0       0       0
 11272 ;;      Locals:         1       0       0       0       0       0       0       0
 11273 ;;      Temps:          0       0       0       0       0       0       0       0
 11274 ;;      Totals:         1       0       0       0       0       0       0       0
 11275 ;;Total ram usage:        1 bytes
 11276 ;; Hardware stack levels used: 1
 11277 ;; Hardware stack levels required when called: 7
 11278 ;; This function calls:
 11279 ;;		Nothing
 11280 ;; This function is called by:
 11281 ;;		_SendSync
 11282 ;;		_EUSART_sendMsg
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286     0E17                     _EUSART_IsTxReady:	
 11287                           ;psect for function _EUSART_IsTxReady
 11288                           
 11289     0E17                     l3518:	
 11290                           ;incstack = 0
 11291                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2]
 11292                           
 11293                           
 11294                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TXIF && TX1STAb
      +                          its.TXEN);
 11295     0E17  01F4               	clrf	_EUSART_IsTxReady$1324
 11296     0E18                     l3520:
 11297     0E18  0020               	movlb	0	; select bank0
 11298     0E19  1E10               	btfss	16,4	;volatile
 11299     0E1A  2E1C               	goto	u1531
 11300     0E1B  2E1D               	goto	u1530
 11301     0E1C                     u1531:
 11302     0E1C  2E24               	goto	l3526
 11303     0E1D                     u1530:
 11304     0E1D                     l3522:
 11305     0E1D  0023               	movlb	3	; select bank3
 11306     0E1E  1E9E               	btfss	30,5	;volatile
 11307     0E1F  2E21               	goto	u1541
 11308     0E20  2E22               	goto	u1540
 11309     0E21                     u1541:
 11310     0E21  2E24               	goto	l3526
 11311     0E22                     u1540:
 11312     0E22                     l3524:
 11313     0E22  01F4               	clrf	_EUSART_IsTxReady$1324
 11314     0E23  0AF4               	incf	_EUSART_IsTxReady$1324,f
 11315     0E24                     l3526:
 11316     0E24  0874               	movf	_EUSART_IsTxReady$1324,w
 11317     0E25                     l597:
 11318     0E25  0008               	return
 11319     0E26                     __end_of_EUSART_IsTxReady:
 11320                           
 11321                           	psect	text49
 11322     0F7C                     __ptext49:	
 11323 ;; *************** function _EUSART_Read *****************
 11324 ;; Defined at:
 11325 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      unsigned char 
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0, pclath, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11339 ;;      Params:         0       0       0       0       0       0       0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0
 11342 ;;      Totals:         0       0       0       0       0       0       0       0
 11343 ;;Total ram usage:        0 bytes
 11344 ;; Hardware stack levels used: 1
 11345 ;; Hardware stack levels required when called: 8
 11346 ;; This function calls:
 11347 ;;		NULL
 11348 ;;		_EUSART_DefaultFramingErrorCallback
 11349 ;;		_EUSART_DefaultOverrunErrorCallback
 11350 ;; This function is called by:
 11351 ;;		_main
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355     0F7C                     _EUSART_Read:	
 11356                           ;psect for function _EUSART_Read
 11357                           
 11358     0F7C                     l3164:	
 11359                           ;incstack = 0
 11360                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 11361                           
 11362                           
 11363                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 11364     0F7C  0020               	movlb	0	; select bank0
 11365     0F7D  01E0               	clrf	_eusartRxLastError	;volatile
 11366     0F7E  01E1               	clrf	_eusartRxLastError+1	;volatile
 11367     0F7F                     l3166:
 11368                           
 11369                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 11370     0F7F  0023               	movlb	3	; select bank3
 11371     0F80  1C9D               	btfss	29,1	;volatile
 11372     0F81  2F83               	goto	u1291
 11373     0F82  2F84               	goto	u1290
 11374     0F83                     u1291:
 11375     0F83  2F91               	goto	l3174
 11376     0F84                     u1290:
 11377     0F84                     l3168:
 11378                           
 11379                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 11380     0F84  0020               	movlb	0	; select bank0
 11381     0F85  1560               	bsf	_eusartRxLastError,2	;volatile
 11382     0F86                     l3170:
 11383                           
 11384                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 11385     0F86  085E               	movf	_EUSART_OverrunErrorHandler,w
 11386     0F87  045F               	iorwf	_EUSART_OverrunErrorHandler+1,w
 11387     0F88  1903               	btfsc	3,2
 11388     0F89  2F8B               	goto	u1301
 11389     0F8A  2F8C               	goto	u1300
 11390     0F8B                     u1301:
 11391     0F8B  2F91               	goto	l3174
 11392     0F8C                     u1300:
 11393     0F8C                     l3172:
 11394                           
 11395                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 11396     0F8C  085F               	movf	_EUSART_OverrunErrorHandler+1,w
 11397     0F8D  008A               	movwf	10
 11398     0F8E  085E               	movf	_EUSART_OverrunErrorHandler,w
 11399     0F8F  000A               	callw
 11400     0F90  318F               	pagesel	$
 11401     0F91                     l3174:
 11402                           
 11403                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 11404     0F91  0023               	movlb	3	; select bank3
 11405     0F92  1D1D               	btfss	29,2	;volatile
 11406     0F93  2F95               	goto	u1311
 11407     0F94  2F96               	goto	u1310
 11408     0F95                     u1311:
 11409     0F95  2FA3               	goto	l3182
 11410     0F96                     u1310:
 11411     0F96                     l3176:
 11412                           
 11413                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 11414     0F96  0020               	movlb	0	; select bank0
 11415     0F97  14E0               	bsf	_eusartRxLastError,1	;volatile
 11416     0F98                     l3178:
 11417                           
 11418                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 11419     0F98  0876               	movf	_EUSART_FramingErrorHandler,w
 11420     0F99  0477               	iorwf	_EUSART_FramingErrorHandler+1,w
 11421     0F9A  1903               	btfsc	3,2
 11422     0F9B  2F9D               	goto	u1321
 11423     0F9C  2F9E               	goto	u1320
 11424     0F9D                     u1321:
 11425     0F9D  2FA3               	goto	l3182
 11426     0F9E                     u1320:
 11427     0F9E                     l3180:
 11428                           
 11429                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 11430     0F9E  0877               	movf	_EUSART_FramingErrorHandler+1,w
 11431     0F9F  008A               	movwf	10
 11432     0FA0  0876               	movf	_EUSART_FramingErrorHandler,w
 11433     0FA1  000A               	callw
 11434     0FA2  318F               	pagesel	$
 11435     0FA3                     l3182:
 11436                           
 11437                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 11438     0FA3  0023               	movlb	3	; select bank3
 11439     0FA4  0819               	movf	25,w	;volatile
 11440     0FA5                     l610:
 11441     0FA5  0008               	return
 11442     0FA6                     __end_of_EUSART_Read:
 11443                           
 11444                           	psect	text50
 11445     0D2B                     __ptext50:	
 11446 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 11447 ;; Defined at:
 11448 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;		None
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;		None
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  1    wreg      void 
 11455 ;; Registers used:
 11456 ;;		None
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11462 ;;      Params:         0       0       0       0       0       0       0       0
 11463 ;;      Locals:         0       0       0       0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0
 11465 ;;      Totals:         0       0       0       0       0       0       0       0
 11466 ;;Total ram usage:        0 bytes
 11467 ;; Hardware stack levels used: 1
 11468 ;; Hardware stack levels required when called: 7
 11469 ;; This function calls:
 11470 ;;		Nothing
 11471 ;; This function is called by:
 11472 ;;		_EUSART_Initialize
 11473 ;;		_EUSART_Read
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477     0D2B                     _EUSART_DefaultOverrunErrorCallback:	
 11478                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11479                           
 11480     0D2B                     l3010:	
 11481                           ;incstack = 0
 11482                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11483                           
 11484                           
 11485                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 11486     0D2B  0023               	movlb	3	; select bank3
 11487     0D2C  121D               	bcf	29,4	;volatile
 11488                           
 11489                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 11490     0D2D  161D               	bsf	29,4	;volatile
 11491     0D2E                     l619:
 11492     0D2E  0008               	return
 11493     0D2F                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11494                           
 11495                           	psect	text51
 11496     0003                     __ptext51:	
 11497 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11498 ;; Defined at:
 11499 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;		None
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;		None
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  1    wreg      void 
 11506 ;; Registers used:
 11507 ;;		None
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11513 ;;      Params:         0       0       0       0       0       0       0       0
 11514 ;;      Locals:         0       0       0       0       0       0       0       0
 11515 ;;      Temps:          0       0       0       0       0       0       0       0
 11516 ;;      Totals:         0       0       0       0       0       0       0       0
 11517 ;;Total ram usage:        0 bytes
 11518 ;; Hardware stack levels used: 1
 11519 ;; Hardware stack levels required when called: 7
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_EUSART_Initialize
 11524 ;;		_EUSART_Read
 11525 ;; This function uses a non-reentrant model
 11526 ;;
 11527                           
 11528     0003                     _EUSART_DefaultFramingErrorCallback:	
 11529                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11530                           
 11531     0003                     l616:	
 11532                           ;incstack = 0
 11533                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11534                           
 11535     0003  0008               	return
 11536     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11537                           
 11538                           	psect	text52
 11539     0D41                     __ptext52:	
 11540 ;; *************** function _EUSART_IsRxReady *****************
 11541 ;; Defined at:
 11542 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;		None
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;		None
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  1    wreg      _Bool 
 11549 ;; Registers used:
 11550 ;;		wreg, status,2, status,0
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11556 ;;      Params:         0       0       0       0       0       0       0       0
 11557 ;;      Locals:         0       0       0       0       0       0       0       0
 11558 ;;      Temps:          0       0       0       0       0       0       0       0
 11559 ;;      Totals:         0       0       0       0       0       0       0       0
 11560 ;;Total ram usage:        0 bytes
 11561 ;; Hardware stack levels used: 1
 11562 ;; Hardware stack levels required when called: 7
 11563 ;; This function calls:
 11564 ;;		Nothing
 11565 ;; This function is called by:
 11566 ;;		_main
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570     0D41                     _EUSART_IsRxReady:	
 11571                           ;psect for function _EUSART_IsRxReady
 11572                           
 11573     0D41                     l3160:	
 11574                           ;incstack = 0
 11575                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11576                           
 11577                           
 11578                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 11579     0D41  0020               	movlb	0	; select bank0
 11580     0D42  0E10               	swapf	16,w	;volatile
 11581     0D43  0C89               	rrf	9,f
 11582     0D44  3901               	andlw	1
 11583     0D45                     l592:
 11584     0D45  0008               	return
 11585     0D46                     __end_of_EUSART_IsRxReady:
 11586                           
 11587                           	psect	intentry
 11588     0004                     __pintentry:	
 11589 ;; *************** function _INTERRUPT_InterruptManager *****************
 11590 ;; Defined at:
 11591 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;		None
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;		None
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      void 
 11598 ;; Registers used:
 11599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11605 ;;      Params:         0       0       0       0       0       0       0       0
 11606 ;;      Locals:         0       0       0       0       0       0       0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0
 11608 ;;      Totals:         0       0       0       0       0       0       0       0
 11609 ;;Total ram usage:        0 bytes
 11610 ;; Hardware stack levels used: 1
 11611 ;; Hardware stack levels required when called: 6
 11612 ;; This function calls:
 11613 ;;		_ADC_ISR
 11614 ;;		_I2C1_ERROR_ISR
 11615 ;;		_I2C1_ISR
 11616 ;; This function is called by:
 11617 ;;		Interrupt level 1
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621     0004                     _INTERRUPT_InterruptManager:
 11622                           
 11623                           ;incstack = 0
 11624     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11625                           
 11626                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11627     0005  3180               	pagesel	$
 11628     0006                     i1l3350:
 11629                           
 11630                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11631     0006  1F0B               	btfss	11,6	;volatile
 11632     0007  2809               	goto	u142_21
 11633     0008  280A               	goto	u142_20
 11634     0009                     u142_21:
 11635     0009  2834               	goto	i1l455
 11636     000A                     u142_20:
 11637     000A                     i1l3352:
 11638                           
 11639                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11640     000A  0021               	movlb	1	; select bank1
 11641     000B  1F10               	btfss	16,6	;volatile
 11642     000C  280E               	goto	u143_21
 11643     000D  280F               	goto	u143_20
 11644     000E                     u143_21:
 11645     000E  2818               	goto	i1l448
 11646     000F                     u143_20:
 11647     000F                     i1l3354:
 11648     000F  0020               	movlb	0	; select bank0
 11649     0010  1F10               	btfss	16,6	;volatile
 11650     0011  2813               	goto	u144_21
 11651     0012  2814               	goto	u144_20
 11652     0013                     u144_21:
 11653     0013  2818               	goto	i1l448
 11654     0014                     u144_20:
 11655     0014                     i1l3356:
 11656                           
 11657                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 11658     0014  318E  2609  3180   	fcall	_ADC_ISR
 11659                           
 11660                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 11661     0017  2834               	goto	i1l455
 11662     0018                     i1l448:	
 11663                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 11664                           
 11665     0018  0021               	movlb	1	; select bank1
 11666     0019  1D91               	btfss	17,3	;volatile
 11667     001A  281C               	goto	u145_21
 11668     001B  281D               	goto	u145_20
 11669     001C                     u145_21:
 11670     001C  2826               	goto	i1l450
 11671     001D                     u145_20:
 11672     001D                     i1l3358:
 11673     001D  0020               	movlb	0	; select bank0
 11674     001E  1D91               	btfss	17,3	;volatile
 11675     001F  2821               	goto	u146_21
 11676     0020  2822               	goto	u146_20
 11677     0021                     u146_21:
 11678     0021  2826               	goto	i1l450
 11679     0022                     u146_20:
 11680     0022                     i1l3360:
 11681                           
 11682                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 11683     0022  318D  2523  3180   	fcall	_I2C1_ERROR_ISR
 11684                           
 11685                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 11686     0025  2834               	goto	i1l455
 11687     0026                     i1l450:	
 11688                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 11689                           
 11690     0026  0021               	movlb	1	; select bank1
 11691     0027  1D90               	btfss	16,3	;volatile
 11692     0028  282A               	goto	u147_21
 11693     0029  282B               	goto	u147_20
 11694     002A                     u147_21:
 11695     002A  2834               	goto	i1l449
 11696     002B                     u147_20:
 11697     002B                     i1l3362:
 11698     002B  0020               	movlb	0	; select bank0
 11699     002C  1D90               	btfss	16,3	;volatile
 11700     002D  282F               	goto	u148_21
 11701     002E  2830               	goto	u148_20
 11702     002F                     u148_21:
 11703     002F  2834               	goto	i1l449
 11704     0030                     u148_20:
 11705     0030                     i1l3364:
 11706                           
 11707                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 11708     0030  318D  2527  3180   	fcall	_I2C1_ISR
 11709                           
 11710                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 11711     0033  2834               	goto	i1l455
 11712     0034                     i1l449:
 11713     0034                     i1l455:	
 11714                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 11715                           
 11716     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11717     0035  0009               	retfie
 11718     0036                     __end_of_INTERRUPT_InterruptManager:
 11719                           
 11720                           	psect	text54
 11721     0D27                     __ptext54:	
 11722 ;; *************** function _I2C1_ISR *****************
 11723 ;; Defined at:
 11724 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11725 ;; Parameters:    Size  Location     Type
 11726 ;;		None
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;		None
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  1    wreg      void 
 11731 ;; Registers used:
 11732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11738 ;;      Params:         0       0       0       0       0       0       0       0
 11739 ;;      Locals:         0       0       0       0       0       0       0       0
 11740 ;;      Temps:          0       0       0       0       0       0       0       0
 11741 ;;      Totals:         0       0       0       0       0       0       0       0
 11742 ;;Total ram usage:        0 bytes
 11743 ;; Hardware stack levels used: 1
 11744 ;; Hardware stack levels required when called: 5
 11745 ;; This function calls:
 11746 ;;		_I2C1_EventHandler
 11747 ;; This function is called by:
 11748 ;;		_INTERRUPT_InterruptManager
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752     0D27                     _I2C1_ISR:	
 11753                           ;psect for function _I2C1_ISR
 11754                           
 11755     0D27                     i1l3154:	
 11756                           ;incstack = 0
 11757                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11758                           
 11759                           
 11760                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 11761     0D27  3184  24B1  318D   	fcall	_I2C1_EventHandler
 11762     0D2A                     i1l207:
 11763     0D2A  0008               	return
 11764     0D2B                     __end_of_I2C1_ISR:
 11765                           
 11766                           	psect	text55
 11767     04B1                     __ptext55:	
 11768 ;; *************** function _I2C1_EventHandler *****************
 11769 ;; Defined at:
 11770 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;		None
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;		None
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11784 ;;      Params:         0       0       0       0       0       0       0       0
 11785 ;;      Locals:         0       0       0       0       0       0       0       0
 11786 ;;      Temps:          2       0       0       0       0       0       0       0
 11787 ;;      Totals:         2       0       0       0       0       0       0       0
 11788 ;;Total ram usage:        2 bytes
 11789 ;; Hardware stack levels used: 1
 11790 ;; Hardware stack levels required when called: 4
 11791 ;; This function calls:
 11792 ;;		_I2C1_EVENT_ERROR
 11793 ;;		_I2C1_EVENT_IDLE
 11794 ;;		_I2C1_EVENT_NACK
 11795 ;;		_I2C1_EVENT_RESET
 11796 ;;		_I2C1_EVENT_RX
 11797 ;;		_I2C1_EVENT_SEND_RD_ADDR
 11798 ;;		_I2C1_EVENT_SEND_WR_ADDR
 11799 ;;		_I2C1_EVENT_STOP
 11800 ;;		_I2C1_EVENT_TX
 11801 ;;		_I2C1_InterruptClear
 11802 ;;		_I2C1_IsAddr
 11803 ;;		_I2C1_IsData
 11804 ;;		_I2C1_IsNack
 11805 ;; This function is called by:
 11806 ;;		_I2C1_ISR
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810     04B1                     _I2C1_EventHandler:	
 11811                           ;psect for function _I2C1_EventHandler
 11812                           
 11813     04B1                     i1l2912:	
 11814                           ;incstack = 0
 11815                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11816                           
 11817                           
 11818                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 11819     04B1  318C  24F3  3184   	fcall	_I2C1_InterruptClear
 11820     04B4                     i1l2914:
 11821                           
 11822                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 11823     04B4  318D  257D  3184   	fcall	_I2C1_IsAddr
 11824     04B7  3A00               	xorlw	0
 11825     04B8  1903               	skipnz
 11826     04B9  2CBB               	goto	u112_21
 11827     04BA  2CBC               	goto	u112_20
 11828     04BB                     u112_21:
 11829     04BB  2CCA               	goto	i1l2920
 11830     04BC                     u112_20:
 11831     04BC                     i1l2916:
 11832     04BC  318D  2557  3184   	fcall	_I2C1_IsNack
 11833     04BF  3A00               	xorlw	0
 11834     04C0  1903               	skipnz
 11835     04C1  2CC3               	goto	u113_21
 11836     04C2  2CC4               	goto	u113_20
 11837     04C3                     u113_21:
 11838     04C3  2CCA               	goto	i1l2920
 11839     04C4                     u113_20:
 11840     04C4                     i1l2918:
 11841                           
 11842                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 11843     04C4  3005               	movlw	5
 11844     04C5  0020               	movlb	0	; select bank0
 11845     04C6  00DD               	movwf	_i2c1Status+11	;volatile
 11846                           
 11847                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 11848     04C7  3001               	movlw	1
 11849     04C8  00DC               	movwf	_i2c1Status+10	;volatile
 11850                           
 11851                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 11852     04C9  2CDF               	goto	i1l2926
 11853     04CA                     i1l2920:
 11854     04CA  318D  253C  3184   	fcall	_I2C1_IsData
 11855     04CD  3A00               	xorlw	0
 11856     04CE  1903               	skipnz
 11857     04CF  2CD1               	goto	u114_21
 11858     04D0  2CD2               	goto	u114_20
 11859     04D1                     u114_21:
 11860     04D1  2CDF               	goto	i1l2926
 11861     04D2                     u114_20:
 11862     04D2                     i1l2922:
 11863     04D2  318D  2557  3184   	fcall	_I2C1_IsNack
 11864     04D5  3A00               	xorlw	0
 11865     04D6  1903               	skipnz
 11866     04D7  2CD9               	goto	u115_21
 11867     04D8  2CDA               	goto	u115_20
 11868     04D9                     u115_21:
 11869     04D9  2CDF               	goto	i1l2926
 11870     04DA                     u115_20:
 11871     04DA                     i1l2924:
 11872                           
 11873                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 11874     04DA  3005               	movlw	5
 11875     04DB  0020               	movlb	0	; select bank0
 11876     04DC  00DD               	movwf	_i2c1Status+11	;volatile
 11877                           
 11878                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 11879     04DD  3002               	movlw	2
 11880     04DE  00DC               	movwf	_i2c1Status+10	;volatile
 11881     04DF                     i1l2926:
 11882                           
 11883                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 11884     04DF  0020               	movlb	0	; select bank0
 11885     04E0  085D               	movf	_i2c1Status+11,w	;volatile
 11886     04E1  00F2               	movwf	??_I2C1_EventHandler
 11887     04E2  01F3               	clrf	??_I2C1_EventHandler+1
 11888     04E3  35F2               	lslf	??_I2C1_EventHandler,f
 11889     04E4  0DF3               	rlf	??_I2C1_EventHandler+1,f
 11890     04E5  3013               	movlw	low _i2c1_eventTable
 11891     04E6  0772               	addwf	??_I2C1_EventHandler,w
 11892     04E7  0084               	movwf	4
 11893     04E8  3008               	movlw	high _i2c1_eventTable
 11894     04E9  3D73               	addwfc	??_I2C1_EventHandler+1,w
 11895     04EA  3880               	iorlw	128
 11896     04EB  0085               	movwf	5
 11897     04EC  3F01               	moviw [1]fsr0
 11898     04ED  008A               	movwf	10
 11899     04EE  3F00               	moviw [0]fsr0
 11900     04EF  000A               	callw
 11901     04F0  3184               	pagesel	$
 11902     04F1  0020               	movlb	0	; select bank0
 11903     04F2  00DD               	movwf	_i2c1Status+11	;volatile
 11904     04F3                     i1l225:
 11905     04F3  0008               	return
 11906     04F4                     __end_of_I2C1_EventHandler:
 11907                           
 11908                           	psect	text56
 11909     0D57                     __ptext56:	
 11910 ;; *************** function _I2C1_IsNack *****************
 11911 ;; Defined at:
 11912 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;		None
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;		None
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      _Bool 
 11919 ;; Registers used:
 11920 ;;		wreg, status,2, status,0
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11926 ;;      Params:         0       0       0       0       0       0       0       0
 11927 ;;      Locals:         0       0       0       0       0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0
 11929 ;;      Totals:         0       0       0       0       0       0       0       0
 11930 ;;Total ram usage:        0 bytes
 11931 ;; Hardware stack levels used: 1
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_I2C1_EventHandler
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939     0D57                     _I2C1_IsNack:	
 11940                           ;psect for function _I2C1_IsNack
 11941                           
 11942     0D57                     i1l2688:	
 11943                           ;incstack = 0
 11944                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 11945                           
 11946                           
 11947                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 11948     0D57  0024               	movlb	4	; select bank4
 11949     0D58  0E16               	swapf	22,w	;volatile
 11950     0D59  0C89               	rrf	9,f
 11951     0D5A  0C89               	rrf	9,f
 11952     0D5B  3901               	andlw	1
 11953     0D5C                     i1l300:
 11954     0D5C  0008               	return
 11955     0D5D                     __end_of_I2C1_IsNack:
 11956                           
 11957                           	psect	text57
 11958     0D3C                     __ptext57:	
 11959 ;; *************** function _I2C1_IsData *****************
 11960 ;; Defined at:
 11961 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11962 ;; Parameters:    Size  Location     Type
 11963 ;;		None
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      _Bool 
 11968 ;; Registers used:
 11969 ;;		wreg, status,2, status,0
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11975 ;;      Params:         0       0       0       0       0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0       0
 11978 ;;      Totals:         0       0       0       0       0       0       0       0
 11979 ;;Total ram usage:        0 bytes
 11980 ;; Hardware stack levels used: 1
 11981 ;; This function calls:
 11982 ;;		Nothing
 11983 ;; This function is called by:
 11984 ;;		_I2C1_EventHandler
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988     0D3C                     _I2C1_IsData:	
 11989                           ;psect for function _I2C1_IsData
 11990                           
 11991     0D3C                     i1l2692:	
 11992                           ;incstack = 0
 11993                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 11994                           
 11995                           
 11996                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 11997     0D3C  0024               	movlb	4	; select bank4
 11998     0D3D  0E14               	swapf	20,w	;volatile
 11999     0D3E  0C89               	rrf	9,f
 12000     0D3F  3901               	andlw	1
 12001     0D40                     i1l303:
 12002     0D40  0008               	return
 12003     0D41                     __end_of_I2C1_IsData:
 12004                           
 12005                           	psect	text58
 12006     0D7D                     __ptext58:	
 12007 ;; *************** function _I2C1_IsAddr *****************
 12008 ;; Defined at:
 12009 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;		None
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      _Bool 
 12016 ;; Registers used:
 12017 ;;		wreg, status,0
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12023 ;;      Params:         0       0       0       0       0       0       0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0
 12026 ;;      Totals:         0       0       0       0       0       0       0       0
 12027 ;;Total ram usage:        0 bytes
 12028 ;; Hardware stack levels used: 1
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_I2C1_EventHandler
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036     0D7D                     _I2C1_IsAddr:	
 12037                           ;psect for function _I2C1_IsAddr
 12038                           
 12039     0D7D                     i1l2684:	
 12040                           ;incstack = 0
 12041                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12042                           
 12043                           
 12044                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12045     0D7D  1003               	clrc
 12046     0D7E  0024               	movlb	4	; select bank4
 12047     0D7F  1E94               	btfss	20,5	;volatile
 12048     0D80  1403               	setc
 12049     0D81  3000               	movlw	0
 12050     0D82  3D09               	addwfc	9,w
 12051     0D83                     i1l306:
 12052     0D83  0008               	return
 12053     0D84                     __end_of_I2C1_IsAddr:
 12054                           
 12055                           	psect	text59
 12056     0D23                     __ptext59:	
 12057 ;; *************** function _I2C1_ERROR_ISR *****************
 12058 ;; Defined at:
 12059 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;		None
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  1    wreg      void 
 12066 ;; Registers used:
 12067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12073 ;;      Params:         0       0       0       0       0       0       0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0       0
 12076 ;;      Totals:         0       0       0       0       0       0       0       0
 12077 ;;Total ram usage:        0 bytes
 12078 ;; Hardware stack levels used: 1
 12079 ;; Hardware stack levels required when called: 5
 12080 ;; This function calls:
 12081 ;;		_I2C1_ErrorEventHandler
 12082 ;; This function is called by:
 12083 ;;		_INTERRUPT_InterruptManager
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           
 12087     0D23                     _I2C1_ERROR_ISR:	
 12088                           ;psect for function _I2C1_ERROR_ISR
 12089                           
 12090     0D23                     i1l3156:	
 12091                           ;incstack = 0
 12092                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12093                           
 12094                           
 12095                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12096     0D23  318E  26EA  318D   	fcall	_I2C1_ErrorEventHandler
 12097     0D26                     i1l210:
 12098     0D26  0008               	return
 12099     0D27                     __end_of_I2C1_ERROR_ISR:
 12100                           
 12101                           	psect	text60
 12102     0EEA                     __ptext60:	
 12103 ;; *************** function _I2C1_ErrorEventHandler *****************
 12104 ;; Defined at:
 12105 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12119 ;;      Params:         0       0       0       0       0       0       0       0
 12120 ;;      Locals:         0       0       0       0       0       0       0       0
 12121 ;;      Temps:          2       0       0       0       0       0       0       0
 12122 ;;      Totals:         2       0       0       0       0       0       0       0
 12123 ;;Total ram usage:        2 bytes
 12124 ;; Hardware stack levels used: 1
 12125 ;; Hardware stack levels required when called: 4
 12126 ;; This function calls:
 12127 ;;		NULL
 12128 ;;		_I2C1_DefaultCallback
 12129 ;;		_I2C1_EVENT_ERROR
 12130 ;;		_I2C1_EVENT_IDLE
 12131 ;;		_I2C1_EVENT_NACK
 12132 ;;		_I2C1_EVENT_RESET
 12133 ;;		_I2C1_EVENT_RX
 12134 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12135 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12136 ;;		_I2C1_EVENT_STOP
 12137 ;;		_I2C1_EVENT_TX
 12138 ;;		_I2C1_ErrorInterruptClear
 12139 ;; This function is called by:
 12140 ;;		_I2C1_ERROR_ISR
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144     0EEA                     _I2C1_ErrorEventHandler:	
 12145                           ;psect for function _I2C1_ErrorEventHandler
 12146                           
 12147     0EEA                     i1l2928:	
 12148                           ;incstack = 0
 12149                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12150                           
 12151                           
 12152                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12153     0EEA  3006               	movlw	6
 12154     0EEB  0020               	movlb	0	; select bank0
 12155     0EEC  00DD               	movwf	_i2c1Status+11	;volatile
 12156                           
 12157                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12158     0EED  3003               	movlw	3
 12159     0EEE  00DC               	movwf	_i2c1Status+10	;volatile
 12160     0EEF                     i1l2930:
 12161                           
 12162                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12163     0EEF  318C  24F0  318E   	fcall	_I2C1_ErrorInterruptClear
 12164     0EF2                     i1l2932:
 12165                           
 12166                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12167     0EF2  0020               	movlb	0	; select bank0
 12168     0EF3  085D               	movf	_i2c1Status+11,w	;volatile
 12169     0EF4  00F2               	movwf	??_I2C1_ErrorEventHandler
 12170     0EF5  01F3               	clrf	??_I2C1_ErrorEventHandler+1
 12171     0EF6  35F2               	lslf	??_I2C1_ErrorEventHandler,f
 12172     0EF7  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
 12173     0EF8  3013               	movlw	low _i2c1_eventTable
 12174     0EF9  0772               	addwf	??_I2C1_ErrorEventHandler,w
 12175     0EFA  0084               	movwf	4
 12176     0EFB  3008               	movlw	high _i2c1_eventTable
 12177     0EFC  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12178     0EFD  3880               	iorlw	128
 12179     0EFE  0085               	movwf	5
 12180     0EFF  3F01               	moviw [1]fsr0
 12181     0F00  008A               	movwf	10
 12182     0F01  3F00               	moviw [0]fsr0
 12183     0F02  000A               	callw
 12184     0F03  318E               	pagesel	$
 12185     0F04  0020               	movlb	0	; select bank0
 12186     0F05  00DD               	movwf	_i2c1Status+11	;volatile
 12187     0F06                     i1l2934:
 12188                           
 12189                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12190     0F06  0863               	movf	_I2C1_Callback+1,w
 12191     0F07  008A               	movwf	10
 12192     0F08  0862               	movf	_I2C1_Callback,w
 12193     0F09  000A               	callw
 12194     0F0A  318E               	pagesel	$
 12195     0F0B                     i1l228:
 12196     0F0B  0008               	return
 12197     0F0C                     __end_of_I2C1_ErrorEventHandler:
 12198                           
 12199                           	psect	text61
 12200     0D76                     __ptext61:	
 12201 ;; *************** function _I2C1_EVENT_RESET *****************
 12202 ;; Defined at:
 12203 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;		None
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;		None
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  1    wreg      enum E9559
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0, pclath, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12217 ;;      Params:         0       0       0       0       0       0       0       0
 12218 ;;      Locals:         0       0       0       0       0       0       0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0
 12220 ;;      Totals:         0       0       0       0       0       0       0       0
 12221 ;;Total ram usage:        0 bytes
 12222 ;; Hardware stack levels used: 1
 12223 ;; Hardware stack levels required when called: 1
 12224 ;; This function calls:
 12225 ;;		_I2C1_BusReset
 12226 ;; This function is called by:
 12227 ;;		_I2C1_EVENT_ERROR
 12228 ;;		_I2C1_EventHandler
 12229 ;;		_I2C1_ErrorEventHandler
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233     0D76                     _I2C1_EVENT_RESET:	
 12234                           ;psect for function _I2C1_EVENT_RESET
 12235                           
 12236     0D76                     i1l2558:	
 12237                           ;incstack = 0
 12238                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12239                           
 12240                           
 12241                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12242     0D76  318D  250B  318D   	fcall	_I2C1_BusReset
 12243     0D79                     i1l2560:
 12244                           
 12245                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12246     0D79  0020               	movlb	0	; select bank0
 12247     0D7A  01D2               	clrf	_i2c1Status	;volatile
 12248     0D7B                     i1l2562:
 12249                           
 12250                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12251     0D7B  3000               	movlw	0
 12252     0D7C                     i1l267:
 12253     0D7C  0008               	return
 12254     0D7D                     __end_of_I2C1_EVENT_RESET:
 12255                           
 12256                           	psect	text62
 12257     0DA8                     __ptext62:	
 12258 ;; *************** function _I2C1_EVENT_STOP *****************
 12259 ;; Defined at:
 12260 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12261 ;; Parameters:    Size  Location     Type
 12262 ;;		None
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;		None
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  1    wreg      enum E9559
 12267 ;; Registers used:
 12268 ;;		wreg, status,2, status,0, pclath, cstack
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12274 ;;      Params:         0       0       0       0       0       0       0       0
 12275 ;;      Locals:         0       0       0       0       0       0       0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0
 12277 ;;      Totals:         0       0       0       0       0       0       0       0
 12278 ;;Total ram usage:        0 bytes
 12279 ;; Hardware stack levels used: 1
 12280 ;; Hardware stack levels required when called: 2
 12281 ;; This function calls:
 12282 ;;		_I2C1_Close
 12283 ;;		_I2C1_StopSend
 12284 ;; This function is called by:
 12285 ;;		_I2C1_EVENT_TX
 12286 ;;		_I2C1_EVENT_NACK
 12287 ;;		_I2C1_EventHandler
 12288 ;;		_I2C1_ErrorEventHandler
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292     0DA8                     _I2C1_EVENT_STOP:	
 12293                           ;psect for function _I2C1_EVENT_STOP
 12294                           
 12295     0DA8                     i1l2536:	
 12296                           ;incstack = 0
 12297                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12298                           
 12299                           
 12300                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12301     0DA8  318C  24F6  318D   	fcall	_I2C1_StopSend
 12302                           
 12303                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12304     0DAB  318E  2647  318D   	fcall	_I2C1_Close
 12305     0DAE                     i1l2538:
 12306                           
 12307                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12308     0DAE  3000               	movlw	0
 12309     0DAF                     i1l264:
 12310     0DAF  0008               	return
 12311     0DB0                     __end_of_I2C1_EVENT_STOP:
 12312                           
 12313                           	psect	text63
 12314     0D51                     __ptext63:	
 12315 ;; *************** function _I2C1_EVENT_ERROR *****************
 12316 ;; Defined at:
 12317 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;  retEventStat    1    0[COMMON] enum E9559
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      enum E9559
 12324 ;; Registers used:
 12325 ;;		wreg, status,2, status,0, pclath, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12331 ;;      Params:         0       0       0       0       0       0       0       0
 12332 ;;      Locals:         1       0       0       0       0       0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0       0       0
 12334 ;;      Totals:         1       0       0       0       0       0       0       0
 12335 ;;Total ram usage:        1 bytes
 12336 ;; Hardware stack levels used: 1
 12337 ;; Hardware stack levels required when called: 2
 12338 ;; This function calls:
 12339 ;;		_I2C1_EVENT_RESET
 12340 ;; This function is called by:
 12341 ;;		_I2C1_EventHandler
 12342 ;;		_I2C1_ErrorEventHandler
 12343 ;; This function uses a non-reentrant model
 12344 ;;
 12345                           
 12346     0D51                     _I2C1_EVENT_ERROR:	
 12347                           ;psect for function _I2C1_EVENT_ERROR
 12348                           
 12349     0D51                     i1l2772:	
 12350                           ;incstack = 0
 12351                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12352                           
 12353     0D51                     i1l2774:
 12354                           
 12355                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12356     0D51  318D  2576  318D   	fcall	_I2C1_EVENT_RESET
 12357     0D54  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12358     0D55                     i1l2776:
 12359                           
 12360                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12361     0D55  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12362     0D56                     i1l261:
 12363     0D56  0008               	return
 12364     0D57                     __end_of_I2C1_EVENT_ERROR:
 12365                           
 12366                           	psect	text64
 12367     0D4B                     __ptext64:	
 12368 ;; *************** function _I2C1_EVENT_NACK *****************
 12369 ;; Defined at:
 12370 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;  retEventStat    1    0[COMMON] enum E9559
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      enum E9559
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0, pclath, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12384 ;;      Params:         0       0       0       0       0       0       0       0
 12385 ;;      Locals:         1       0       0       0       0       0       0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0
 12387 ;;      Totals:         1       0       0       0       0       0       0       0
 12388 ;;Total ram usage:        1 bytes
 12389 ;; Hardware stack levels used: 1
 12390 ;; Hardware stack levels required when called: 3
 12391 ;; This function calls:
 12392 ;;		_I2C1_EVENT_STOP
 12393 ;; This function is called by:
 12394 ;;		_I2C1_EventHandler
 12395 ;;		_I2C1_ErrorEventHandler
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399     0D4B                     _I2C1_EVENT_NACK:	
 12400                           ;psect for function _I2C1_EVENT_NACK
 12401                           
 12402     0D4B                     i1l2764:	
 12403                           ;incstack = 0
 12404                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12405                           
 12406     0D4B                     i1l2766:
 12407                           
 12408                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12409     0D4B  318D  25A8  318D   	fcall	_I2C1_EVENT_STOP
 12410     0D4E  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12411     0D4F                     i1l2768:
 12412                           
 12413                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12414     0D4F  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12415     0D50                     i1l258:
 12416     0D50  0008               	return
 12417     0D51                     __end_of_I2C1_EVENT_NACK:
 12418                           
 12419                           	psect	text65
 12420     06A3                     __ptext65:	
 12421 ;; *************** function _I2C1_EVENT_RX *****************
 12422 ;; Defined at:
 12423 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;		None
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  retEventStat    1    1[COMMON] enum E9559
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  1    wreg      enum E9559
 12430 ;; Registers used:
 12431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12437 ;;      Params:         0       0       0       0       0       0       0       0
 12438 ;;      Locals:         1       0       0       0       0       0       0       0
 12439 ;;      Temps:          1       0       0       0       0       0       0       0
 12440 ;;      Totals:         2       0       0       0       0       0       0       0
 12441 ;;Total ram usage:        2 bytes
 12442 ;; Hardware stack levels used: 1
 12443 ;; Hardware stack levels required when called: 1
 12444 ;; This function calls:
 12445 ;;		_I2C1_AckSend
 12446 ;;		_I2C1_DataReceive
 12447 ;;		_I2C1_IsRxBufFull
 12448 ;;		_I2C1_NackSend
 12449 ;;		_I2C1_ReceiveEnable
 12450 ;;		_I2C1_RestartDisable
 12451 ;; This function is called by:
 12452 ;;		_I2C1_EventHandler
 12453 ;;		_I2C1_ErrorEventHandler
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457     06A3                     _I2C1_EVENT_RX:	
 12458                           ;psect for function _I2C1_EVENT_RX
 12459                           
 12460     06A3                     i1l2738:	
 12461                           ;incstack = 0
 12462                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12463                           
 12464                           
 12465                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12466     06A3  3004               	movlw	4
 12467     06A4  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12468     06A5                     i1l2740:
 12469                           
 12470                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12471     06A5  318D  2517  3186   	fcall	_I2C1_IsRxBufFull
 12472     06A8  3A00               	xorlw	0
 12473     06A9  1903               	skipnz
 12474     06AA  2EAC               	goto	u96_21
 12475     06AB  2EAD               	goto	u96_20
 12476     06AC                     u96_21:
 12477     06AC  2ED7               	goto	i1l2758
 12478     06AD                     u96_20:
 12479     06AD                     i1l2742:
 12480                           
 12481                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12482     06AD  0020               	movlb	0	; select bank0
 12483     06AE  0859               	movf	_i2c1Status+7,w	;volatile
 12484     06AF  045A               	iorwf	_i2c1Status+8,w	;volatile
 12485     06B0  1903               	btfsc	3,2
 12486     06B1  2EB3               	goto	u97_21
 12487     06B2  2EB4               	goto	u97_20
 12488     06B3                     u97_21:
 12489     06B3  2EC4               	goto	i1l2750
 12490     06B4                     u97_20:
 12491     06B4                     i1l2744:
 12492                           
 12493                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12494     06B4  0858               	movf	low ((_i2c1Status| 0+6)),w	;volatile
 12495     06B5  0086               	movwf	6
 12496     06B6  0187               	clrf	7
 12497     06B7  318C  24F9  3186   	fcall	_I2C1_DataReceive
 12498     06BA  0081               	movwf	1
 12499     06BB                     i1l2746:
 12500     06BB  3001               	movlw	1
 12501     06BC  00F0               	movwf	??_I2C1_EVENT_RX
 12502     06BD  0870               	movf	??_I2C1_EVENT_RX,w
 12503     06BE  0020               	movlb	0	; select bank0
 12504     06BF  07D8               	addwf	low ((_i2c1Status| 0+6)),f	;volatile
 12505     06C0                     i1l2748:
 12506                           
 12507                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12508     06C0  3001               	movlw	1
 12509     06C1  02D9               	subwf	_i2c1Status+7,f	;volatile
 12510     06C2  3000               	movlw	0
 12511     06C3  3BDA               	subwfb	_i2c1Status+8,f	;volatile
 12512     06C4                     i1l2750:
 12513                           
 12514                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12515     06C4  0859               	movf	_i2c1Status+7,w	;volatile
 12516     06C5  045A               	iorwf	_i2c1Status+8,w	;volatile
 12517     06C6  1903               	btfsc	3,2
 12518     06C7  2EC9               	goto	u98_21
 12519     06C8  2ECA               	goto	u98_20
 12520     06C9                     u98_21:
 12521     06C9  2ECE               	goto	i1l2754
 12522     06CA                     u98_20:
 12523     06CA                     i1l2752:
 12524                           
 12525                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12526     06CA  318D  2513  3186   	fcall	_I2C1_AckSend
 12527                           
 12528                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12529     06CD  2EDA               	goto	i1l2760
 12530     06CE                     i1l2754:
 12531                           
 12532                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12533     06CE  318C  24FF  3186   	fcall	_I2C1_RestartDisable
 12534                           
 12535                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12536     06D1  318D  251B  3186   	fcall	_I2C1_NackSend
 12537     06D4                     i1l2756:
 12538                           
 12539                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12540     06D4  3007               	movlw	7
 12541     06D5  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12542     06D6  2EDA               	goto	i1l2760
 12543     06D7                     i1l2758:
 12544                           
 12545                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12546     06D7  318C  24FC  3186   	fcall	_I2C1_ReceiveEnable
 12547     06DA                     i1l2760:
 12548                           
 12549                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12550     06DA  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12551     06DB                     i1l255:
 12552     06DB  0008               	return
 12553     06DC                     __end_of_I2C1_EVENT_RX:
 12554                           
 12555                           	psect	text66
 12556     0D6F                     __ptext66:	
 12557 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12558 ;; Defined at:
 12559 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;		None
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      enum E9559
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0, pclath, cstack
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12573 ;;      Params:         0       0       0       0       0       0       0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0       0
 12576 ;;      Totals:         0       0       0       0       0       0       0       0
 12577 ;;Total ram usage:        0 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; Hardware stack levels required when called: 1
 12580 ;; This function calls:
 12581 ;;		_I2C1_DataTransmit
 12582 ;; This function is called by:
 12583 ;;		_I2C1_EventHandler
 12584 ;;		_I2C1_ErrorEventHandler
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588     0D6F                     _I2C1_EVENT_SEND_WR_ADDR:	
 12589                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12590                           
 12591     0D6F                     i1l2708:	
 12592                           ;incstack = 0
 12593                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12594                           
 12595                           
 12596                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12597     0D6F  0020               	movlb	0	; select bank0
 12598     0D70  3553               	lslf	_i2c1Status+1,w	;volatile
 12599     0D71  318D  2537  318D   	fcall	_I2C1_DataTransmit
 12600     0D74                     i1l2710:
 12601                           
 12602                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12603     0D74  3003               	movlw	3
 12604     0D75                     i1l240:
 12605     0D75  0008               	return
 12606     0D76                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12607                           
 12608                           	psect	text67
 12609     0DA0                     __ptext67:	
 12610 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12611 ;; Defined at:
 12612 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;		None
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  1    wreg      enum E9559
 12619 ;; Registers used:
 12620 ;;		wreg, status,2, status,0, pclath, cstack
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12626 ;;      Params:         0       0       0       0       0       0       0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0
 12629 ;;      Totals:         0       0       0       0       0       0       0       0
 12630 ;;Total ram usage:        0 bytes
 12631 ;; Hardware stack levels used: 1
 12632 ;; Hardware stack levels required when called: 1
 12633 ;; This function calls:
 12634 ;;		_I2C1_DataTransmit
 12635 ;; This function is called by:
 12636 ;;		_I2C1_EventHandler
 12637 ;;		_I2C1_ErrorEventHandler
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641     0DA0                     _I2C1_EVENT_SEND_RD_ADDR:	
 12642                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12643                           
 12644     0DA0                     i1l2702:	
 12645                           ;incstack = 0
 12646                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12647                           
 12648                           
 12649                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12650     0DA0  1403               	setc
 12651     0DA1  0020               	movlb	0	; select bank0
 12652     0DA2  0D53               	rlf	_i2c1Status+1,w	;volatile
 12653     0DA3  318D  2537  318D   	fcall	_I2C1_DataTransmit
 12654     0DA6                     i1l2704:
 12655                           
 12656                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 12657     0DA6  3004               	movlw	4
 12658     0DA7                     i1l237:
 12659     0DA7  0008               	return
 12660     0DA8                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 12661                           
 12662                           	psect	text68
 12663     0D1F                     __ptext68:	
 12664 ;; *************** function _I2C1_EVENT_IDLE *****************
 12665 ;; Defined at:
 12666 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;		None
 12669 ;; Auto vars:     Size  Location     Type
 12670 ;;		None
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1    wreg      enum E9559
 12673 ;; Registers used:
 12674 ;;		wreg, status,2
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12680 ;;      Params:         0       0       0       0       0       0       0       0
 12681 ;;      Locals:         0       0       0       0       0       0       0       0
 12682 ;;      Temps:          0       0       0       0       0       0       0       0
 12683 ;;      Totals:         0       0       0       0       0       0       0       0
 12684 ;;Total ram usage:        0 bytes
 12685 ;; Hardware stack levels used: 1
 12686 ;; This function calls:
 12687 ;;		Nothing
 12688 ;; This function is called by:
 12689 ;;		_I2C1_EventHandler
 12690 ;;		_I2C1_ErrorEventHandler
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694     0D1F                     _I2C1_EVENT_IDLE:	
 12695                           ;psect for function _I2C1_EVENT_IDLE
 12696                           
 12697     0D1F                     i1l2696:	
 12698                           ;incstack = 0
 12699                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 12700                           
 12701                           
 12702                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 12703     0D1F  0020               	movlb	0	; select bank0
 12704     0D20  01D2               	clrf	_i2c1Status	;volatile
 12705     0D21                     i1l2698:
 12706                           
 12707                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 12708     0D21  3008               	movlw	8
 12709     0D22                     i1l234:
 12710     0D22  0008               	return
 12711     0D23                     __end_of_I2C1_EVENT_IDLE:
 12712                           
 12713                           	psect	text69
 12714     0FA6                     __ptext69:	
 12715 ;; *************** function _I2C1_EVENT_TX *****************
 12716 ;; Defined at:
 12717 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;		None
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;  retEventStat    1    1[COMMON] enum E9559
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  1    wreg      enum E9559
 12724 ;; Registers used:
 12725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12726 ;; Tracked objects:
 12727 ;;		On entry : 0/0
 12728 ;;		On exit  : 0/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12731 ;;      Params:         0       0       0       0       0       0       0       0
 12732 ;;      Locals:         1       0       0       0       0       0       0       0
 12733 ;;      Temps:          0       0       0       0       0       0       0       0
 12734 ;;      Totals:         1       0       0       0       0       0       0       0
 12735 ;;Total ram usage:        1 bytes
 12736 ;; Hardware stack levels used: 1
 12737 ;; Hardware stack levels required when called: 3
 12738 ;; This function calls:
 12739 ;;		_I2C1_DataTransmit
 12740 ;;		_I2C1_EVENT_STOP
 12741 ;;		_I2C1_RestartEnable
 12742 ;; This function is called by:
 12743 ;;		_I2C1_EventHandler
 12744 ;;		_I2C1_ErrorEventHandler
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748     0FA6                     _I2C1_EVENT_TX:	
 12749                           ;psect for function _I2C1_EVENT_TX
 12750                           
 12751     0FA6                     i1l2714:	
 12752                           ;incstack = 0
 12753                           ; Regs used in _I2C1_EVENT_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12754                           
 12755     0FA6                     i1l2716:
 12756                           
 12757                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 12758     0FA6  0020               	movlb	0	; select bank0
 12759     0FA7  0856               	movf	_i2c1Status+4,w	;volatile
 12760     0FA8  0457               	iorwf	_i2c1Status+5,w	;volatile
 12761     0FA9  1903               	btfsc	3,2
 12762     0FAA  2FAC               	goto	u94_21
 12763     0FAB  2FAD               	goto	u94_20
 12764     0FAC                     u94_21:
 12765     0FAC  2FC0               	goto	i1l2724
 12766     0FAD                     u94_20:
 12767     0FAD                     i1l2718:
 12768                           
 12769                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 12770     0FAD  3001               	movlw	1
 12771     0FAE  02D6               	subwf	_i2c1Status+4,f	;volatile
 12772     0FAF  3000               	movlw	0
 12773     0FB0  3BD7               	subwfb	_i2c1Status+5,f	;volatile
 12774     0FB1                     i1l2720:
 12775                           
 12776                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 12777     0FB1  3003               	movlw	3
 12778     0FB2  3E52               	addlw	(low (_i2c1Status| 0))& (0+255)
 12779     0FB3  0086               	movwf	6
 12780     0FB4  0187               	clrf	7
 12781     0FB5  3F40               	moviw [0]fsr1
 12782     0FB6  0084               	movwf	4
 12783     0FB7  0185               	clrf	5
 12784     0FB8  0A81               	incf	1,f
 12785     0FB9  0800               	movf	0,w
 12786     0FBA  318D  2537  318F   	fcall	_I2C1_DataTransmit
 12787     0FBD                     i1l2722:
 12788                           
 12789                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 12790     0FBD  3003               	movlw	3
 12791     0FBE  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12792                           
 12793                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 12794     0FBF  2FD0               	goto	i1l2734
 12795     0FC0                     i1l2724:
 12796                           
 12797                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 12798     0FC0  085B               	movf	_i2c1Status+9,w	;volatile
 12799     0FC1  1903               	btfsc	3,2
 12800     0FC2  2FC4               	goto	u95_21
 12801     0FC3  2FC5               	goto	u95_20
 12802     0FC4                     u95_21:
 12803     0FC4  2FCC               	goto	i1l2732
 12804     0FC5                     u95_20:
 12805     0FC5                     i1l2726:
 12806                           
 12807                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 12808     0FC5  01DB               	clrf	_i2c1Status+9	;volatile
 12809     0FC6                     i1l2728:
 12810                           
 12811                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 12812     0FC6  318D  2502  318F   	fcall	_I2C1_RestartEnable
 12813     0FC9                     i1l2730:
 12814                           
 12815                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 12816     0FC9  01F1               	clrf	I2C1_EVENT_TX@retEventState
 12817     0FCA  0AF1               	incf	I2C1_EVENT_TX@retEventState,f
 12818                           
 12819                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 12820     0FCB  2FD0               	goto	i1l2734
 12821     0FCC                     i1l2732:
 12822                           
 12823                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 12824     0FCC  318D  25A8  318F   	fcall	_I2C1_EVENT_STOP
 12825     0FCF  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12826     0FD0                     i1l2734:
 12827                           
 12828                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 12829     0FD0  0871               	movf	I2C1_EVENT_TX@retEventState,w
 12830     0FD1                     i1l247:
 12831     0FD1  0008               	return
 12832     0FD2                     __end_of_I2C1_EVENT_TX:
 12833                           
 12834                           	psect	text70
 12835     0D02                     __ptext70:	
 12836 ;; *************** function _I2C1_RestartEnable *****************
 12837 ;; Defined at:
 12838 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;		None
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;		None
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  1    wreg      void 
 12845 ;; Registers used:
 12846 ;;		None
 12847 ;; Tracked objects:
 12848 ;;		On entry : 0/0
 12849 ;;		On exit  : 0/0
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12852 ;;      Params:         0       0       0       0       0       0       0       0
 12853 ;;      Locals:         0       0       0       0       0       0       0       0
 12854 ;;      Temps:          0       0       0       0       0       0       0       0
 12855 ;;      Totals:         0       0       0       0       0       0       0       0
 12856 ;;Total ram usage:        0 bytes
 12857 ;; Hardware stack levels used: 1
 12858 ;; This function calls:
 12859 ;;		Nothing
 12860 ;; This function is called by:
 12861 ;;		_I2C1_EVENT_TX
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865     0D02                     _I2C1_RestartEnable:	
 12866                           ;psect for function _I2C1_RestartEnable
 12867                           
 12868     0D02                     i1l2534:	
 12869                           ;incstack = 0
 12870                           ; Regs used in _I2C1_RestartEnable: []
 12871                           
 12872                           
 12873                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 12874     0D02  0024               	movlb	4	; select bank4
 12875     0D03  1496               	bsf	22,1	;volatile
 12876     0D04                     i1l282:
 12877     0D04  0008               	return
 12878     0D05                     __end_of_I2C1_RestartEnable:
 12879                           
 12880                           	psect	text71
 12881     0D37                     __ptext71:	
 12882 ;; *************** function _I2C1_DataTransmit *****************
 12883 ;; Defined at:
 12884 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;  data            1    wreg     unsigned char 
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;  data            1    0[COMMON] unsigned char 
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		wreg
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12898 ;;      Params:         0       0       0       0       0       0       0       0
 12899 ;;      Locals:         1       0       0       0       0       0       0       0
 12900 ;;      Temps:          0       0       0       0       0       0       0       0
 12901 ;;      Totals:         1       0       0       0       0       0       0       0
 12902 ;;Total ram usage:        1 bytes
 12903 ;; Hardware stack levels used: 1
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12908 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12909 ;;		_I2C1_EVENT_TX
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913     0D37                     _I2C1_DataTransmit:	
 12914                           ;psect for function _I2C1_DataTransmit
 12915                           
 12916                           
 12917                           ;incstack = 0
 12918                           ; Regs used in _I2C1_DataTransmit: [wreg]
 12919                           ;I2C1_DataTransmit@data stored from wreg
 12920     0D37  00F0               	movwf	I2C1_DataTransmit@data
 12921     0D38                     i1l2532:
 12922                           
 12923                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 12924     0D38  0870               	movf	I2C1_DataTransmit@data,w
 12925     0D39  0024               	movlb	4	; select bank4
 12926     0D3A  0091               	movwf	17	;volatile
 12927     0D3B                     i1l273:
 12928     0D3B  0008               	return
 12929     0D3C                     __end_of_I2C1_DataTransmit:
 12930                           
 12931                           	psect	text72
 12932     0CFF                     __ptext72:	
 12933 ;; *************** function _I2C1_RestartDisable *****************
 12934 ;; Defined at:
 12935 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		None
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12949 ;;      Params:         0       0       0       0       0       0       0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0
 12951 ;;      Temps:          0       0       0       0       0       0       0       0
 12952 ;;      Totals:         0       0       0       0       0       0       0       0
 12953 ;;Total ram usage:        0 bytes
 12954 ;; Hardware stack levels used: 1
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_I2C1_EVENT_RX
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962     0CFF                     _I2C1_RestartDisable:	
 12963                           ;psect for function _I2C1_RestartDisable
 12964                           
 12965     0CFF                     i1l2552:	
 12966                           ;incstack = 0
 12967                           ; Regs used in _I2C1_RestartDisable: []
 12968                           
 12969                           
 12970                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 12971     0CFF  0024               	movlb	4	; select bank4
 12972     0D00  1096               	bcf	22,1	;volatile
 12973     0D01                     i1l285:
 12974     0D01  0008               	return
 12975     0D02                     __end_of_I2C1_RestartDisable:
 12976                           
 12977                           	psect	text73
 12978     0CFC                     __ptext73:	
 12979 ;; *************** function _I2C1_ReceiveEnable *****************
 12980 ;; Defined at:
 12981 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;		None
 12984 ;; Auto vars:     Size  Location     Type
 12985 ;;		None
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  1    wreg      void 
 12988 ;; Registers used:
 12989 ;;		None
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 0/0
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12995 ;;      Params:         0       0       0       0       0       0       0       0
 12996 ;;      Locals:         0       0       0       0       0       0       0       0
 12997 ;;      Temps:          0       0       0       0       0       0       0       0
 12998 ;;      Totals:         0       0       0       0       0       0       0       0
 12999 ;;Total ram usage:        0 bytes
 13000 ;; Hardware stack levels used: 1
 13001 ;; This function calls:
 13002 ;;		Nothing
 13003 ;; This function is called by:
 13004 ;;		_I2C1_EVENT_RX
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008     0CFC                     _I2C1_ReceiveEnable:	
 13009                           ;psect for function _I2C1_ReceiveEnable
 13010                           
 13011     0CFC                     i1l2556:	
 13012                           ;incstack = 0
 13013                           ; Regs used in _I2C1_ReceiveEnable: []
 13014                           
 13015                           
 13016                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13017     0CFC  0024               	movlb	4	; select bank4
 13018     0CFD  1596               	bsf	22,3	;volatile
 13019     0CFE                     i1l279:
 13020     0CFE  0008               	return
 13021     0CFF                     __end_of_I2C1_ReceiveEnable:
 13022                           
 13023                           	psect	text74
 13024     0D1B                     __ptext74:	
 13025 ;; *************** function _I2C1_NackSend *****************
 13026 ;; Defined at:
 13027 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13028 ;; Parameters:    Size  Location     Type
 13029 ;;		None
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;		None
 13032 ;; Return value:  Size  Location     Type
 13033 ;;                  1    wreg      void 
 13034 ;; Registers used:
 13035 ;;		None
 13036 ;; Tracked objects:
 13037 ;;		On entry : 0/0
 13038 ;;		On exit  : 0/0
 13039 ;;		Unchanged: 0/0
 13040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13041 ;;      Params:         0       0       0       0       0       0       0       0
 13042 ;;      Locals:         0       0       0       0       0       0       0       0
 13043 ;;      Temps:          0       0       0       0       0       0       0       0
 13044 ;;      Totals:         0       0       0       0       0       0       0       0
 13045 ;;Total ram usage:        0 bytes
 13046 ;; Hardware stack levels used: 1
 13047 ;; This function calls:
 13048 ;;		Nothing
 13049 ;; This function is called by:
 13050 ;;		_I2C1_EVENT_RX
 13051 ;; This function uses a non-reentrant model
 13052 ;;
 13053                           
 13054     0D1B                     _I2C1_NackSend:	
 13055                           ;psect for function _I2C1_NackSend
 13056                           
 13057     0D1B                     i1l2554:	
 13058                           ;incstack = 0
 13059                           ; Regs used in _I2C1_NackSend: []
 13060                           
 13061                           
 13062                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13063     0D1B  0024               	movlb	4	; select bank4
 13064     0D1C  1696               	bsf	22,5	;volatile
 13065                           
 13066                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13067     0D1D  1616               	bsf	22,4	;volatile
 13068     0D1E                     i1l297:
 13069     0D1E  0008               	return
 13070     0D1F                     __end_of_I2C1_NackSend:
 13071                           
 13072                           	psect	text75
 13073     0D17                     __ptext75:	
 13074 ;; *************** function _I2C1_IsRxBufFull *****************
 13075 ;; Defined at:
 13076 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13077 ;; Parameters:    Size  Location     Type
 13078 ;;		None
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;		None
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  1    wreg      _Bool 
 13083 ;; Registers used:
 13084 ;;		wreg, status,2, status,0
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13090 ;;      Params:         0       0       0       0       0       0       0       0
 13091 ;;      Locals:         0       0       0       0       0       0       0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0
 13093 ;;      Totals:         0       0       0       0       0       0       0       0
 13094 ;;Total ram usage:        0 bytes
 13095 ;; Hardware stack levels used: 1
 13096 ;; This function calls:
 13097 ;;		Nothing
 13098 ;; This function is called by:
 13099 ;;		_I2C1_EVENT_RX
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103     0D17                     _I2C1_IsRxBufFull:	
 13104                           ;psect for function _I2C1_IsRxBufFull
 13105                           
 13106     0D17                     i1l2542:	
 13107                           ;incstack = 0
 13108                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13109                           
 13110                           
 13111                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13112     0D17  0024               	movlb	4	; select bank4
 13113     0D18  0814               	movf	20,w	;volatile
 13114     0D19  3901               	andlw	1
 13115     0D1A                     i1l309:
 13116     0D1A  0008               	return
 13117     0D1B                     __end_of_I2C1_IsRxBufFull:
 13118                           
 13119                           	psect	text76
 13120     0CF9                     __ptext76:	
 13121 ;; *************** function _I2C1_DataReceive *****************
 13122 ;; Defined at:
 13123 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13124 ;; Parameters:    Size  Location     Type
 13125 ;;		None
 13126 ;; Auto vars:     Size  Location     Type
 13127 ;;		None
 13128 ;; Return value:  Size  Location     Type
 13129 ;;                  1    wreg      unsigned char 
 13130 ;; Registers used:
 13131 ;;		wreg
 13132 ;; Tracked objects:
 13133 ;;		On entry : 0/0
 13134 ;;		On exit  : 0/0
 13135 ;;		Unchanged: 0/0
 13136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13137 ;;      Params:         0       0       0       0       0       0       0       0
 13138 ;;      Locals:         0       0       0       0       0       0       0       0
 13139 ;;      Temps:          0       0       0       0       0       0       0       0
 13140 ;;      Totals:         0       0       0       0       0       0       0       0
 13141 ;;Total ram usage:        0 bytes
 13142 ;; Hardware stack levels used: 1
 13143 ;; This function calls:
 13144 ;;		Nothing
 13145 ;; This function is called by:
 13146 ;;		_I2C1_EVENT_RX
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150     0CF9                     _I2C1_DataReceive:	
 13151                           ;psect for function _I2C1_DataReceive
 13152                           
 13153     0CF9                     i1l2546:	
 13154                           ;incstack = 0
 13155                           ; Regs used in _I2C1_DataReceive: [wreg]
 13156                           
 13157                           
 13158                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13159     0CF9  0024               	movlb	4	; select bank4
 13160     0CFA  0811               	movf	17,w	;volatile
 13161     0CFB                     i1l270:
 13162     0CFB  0008               	return
 13163     0CFC                     __end_of_I2C1_DataReceive:
 13164                           
 13165                           	psect	text77
 13166     0D13                     __ptext77:	
 13167 ;; *************** function _I2C1_AckSend *****************
 13168 ;; Defined at:
 13169 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;		None
 13172 ;; Auto vars:     Size  Location     Type
 13173 ;;		None
 13174 ;; Return value:  Size  Location     Type
 13175 ;;                  1    wreg      void 
 13176 ;; Registers used:
 13177 ;;		None
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13183 ;;      Params:         0       0       0       0       0       0       0       0
 13184 ;;      Locals:         0       0       0       0       0       0       0       0
 13185 ;;      Temps:          0       0       0       0       0       0       0       0
 13186 ;;      Totals:         0       0       0       0       0       0       0       0
 13187 ;;Total ram usage:        0 bytes
 13188 ;; Hardware stack levels used: 1
 13189 ;; This function calls:
 13190 ;;		Nothing
 13191 ;; This function is called by:
 13192 ;;		_I2C1_EVENT_RX
 13193 ;; This function uses a non-reentrant model
 13194 ;;
 13195                           
 13196     0D13                     _I2C1_AckSend:	
 13197                           ;psect for function _I2C1_AckSend
 13198                           
 13199     0D13                     i1l2550:	
 13200                           ;incstack = 0
 13201                           ; Regs used in _I2C1_AckSend: []
 13202                           
 13203                           
 13204                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13205     0D13  0024               	movlb	4	; select bank4
 13206     0D14  1296               	bcf	22,5	;volatile
 13207                           
 13208                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13209     0D15  1616               	bsf	22,4	;volatile
 13210     0D16                     i1l294:
 13211     0D16  0008               	return
 13212     0D17                     __end_of_I2C1_AckSend:
 13213                           
 13214                           	psect	text78
 13215     0CF6                     __ptext78:	
 13216 ;; *************** function _I2C1_StopSend *****************
 13217 ;; Defined at:
 13218 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;		None
 13221 ;; Auto vars:     Size  Location     Type
 13222 ;;		None
 13223 ;; Return value:  Size  Location     Type
 13224 ;;                  1    wreg      void 
 13225 ;; Registers used:
 13226 ;;		None
 13227 ;; Tracked objects:
 13228 ;;		On entry : 0/0
 13229 ;;		On exit  : 0/0
 13230 ;;		Unchanged: 0/0
 13231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13232 ;;      Params:         0       0       0       0       0       0       0       0
 13233 ;;      Locals:         0       0       0       0       0       0       0       0
 13234 ;;      Temps:          0       0       0       0       0       0       0       0
 13235 ;;      Totals:         0       0       0       0       0       0       0       0
 13236 ;;Total ram usage:        0 bytes
 13237 ;; Hardware stack levels used: 1
 13238 ;; This function calls:
 13239 ;;		Nothing
 13240 ;; This function is called by:
 13241 ;;		_I2C1_EVENT_STOP
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245     0CF6                     _I2C1_StopSend:	
 13246                           ;psect for function _I2C1_StopSend
 13247                           
 13248     0CF6                     i1l2486:	
 13249                           ;incstack = 0
 13250                           ; Regs used in _I2C1_StopSend: []
 13251                           
 13252                           
 13253                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13254     0CF6  0024               	movlb	4	; select bank4
 13255     0CF7  1516               	bsf	22,2	;volatile
 13256     0CF8                     i1l291:
 13257     0CF8  0008               	return
 13258     0CF9                     __end_of_I2C1_StopSend:
 13259                           
 13260                           	psect	text79
 13261     0E47                     __ptext79:	
 13262 ;; *************** function _I2C1_Close *****************
 13263 ;; Defined at:
 13264 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;		None
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;		None
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		status,2, status,0, pclath, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13278 ;;      Params:         0       0       0       0       0       0       0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0
 13281 ;;      Totals:         0       0       0       0       0       0       0       0
 13282 ;;Total ram usage:        0 bytes
 13283 ;; Hardware stack levels used: 1
 13284 ;; Hardware stack levels required when called: 1
 13285 ;; This function calls:
 13286 ;;		_I2C1_ErrorInterruptClear
 13287 ;;		_I2C1_InterruptClear
 13288 ;;		_I2C1_StatusFlagsClear
 13289 ;; This function is called by:
 13290 ;;		_I2C1_EVENT_STOP
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294     0E47                     _I2C1_Close:	
 13295                           ;psect for function _I2C1_Close
 13296                           
 13297     0E47                     i1l2476:	
 13298                           ;incstack = 0
 13299                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13300                           
 13301                           
 13302                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13303     0E47  0020               	movlb	0	; select bank0
 13304     0E48  01D2               	clrf	_i2c1Status	;volatile
 13305     0E49                     i1l2478:
 13306                           
 13307                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13308     0E49  3000               	movlw	0
 13309     0E4A  00D4               	movwf	_i2c1Status+2	;volatile
 13310     0E4B  30FF               	movlw	255
 13311     0E4C  00D3               	movwf	_i2c1Status+1	;volatile
 13312                           
 13313                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13314     0E4D  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
 13315                           
 13316                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13317     0E4E  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 13318                           
 13319                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13320     0E4F  01DD               	clrf	_i2c1Status+11	;volatile
 13321     0E50                     i1l2480:
 13322                           
 13323                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13324     0E50  318C  24F3  318E   	fcall	_I2C1_InterruptClear
 13325     0E53                     i1l2482:
 13326                           
 13327                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13328     0E53  318C  24F0  318E   	fcall	_I2C1_ErrorInterruptClear
 13329     0E56                     i1l2484:
 13330                           
 13331                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13332     0E56  318D  250F  318E   	fcall	_I2C1_StatusFlagsClear
 13333     0E59                     i1l219:
 13334     0E59  0008               	return
 13335     0E5A                     __end_of_I2C1_Close:
 13336                           
 13337                           	psect	text80
 13338     0D0F                     __ptext80:	
 13339 ;; *************** function _I2C1_StatusFlagsClear *****************
 13340 ;; Defined at:
 13341 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13342 ;; Parameters:    Size  Location     Type
 13343 ;;		None
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;		None
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  1    wreg      void 
 13348 ;; Registers used:
 13349 ;;		None
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/0
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13355 ;;      Params:         0       0       0       0       0       0       0       0
 13356 ;;      Locals:         0       0       0       0       0       0       0       0
 13357 ;;      Temps:          0       0       0       0       0       0       0       0
 13358 ;;      Totals:         0       0       0       0       0       0       0       0
 13359 ;;Total ram usage:        0 bytes
 13360 ;; Hardware stack levels used: 1
 13361 ;; This function calls:
 13362 ;;		Nothing
 13363 ;; This function is called by:
 13364 ;;		_I2C1_Close
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368     0D0F                     _I2C1_StatusFlagsClear:	
 13369                           ;psect for function _I2C1_StatusFlagsClear
 13370                           
 13371     0D0F                     i1l2472:	
 13372                           ;incstack = 0
 13373                           ; Regs used in _I2C1_StatusFlagsClear: []
 13374                           
 13375                           
 13376                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13377     0D0F  0024               	movlb	4	; select bank4
 13378     0D10  1395               	bcf	21,7	;volatile
 13379                           
 13380                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13381     0D11  1315               	bcf	21,6	;volatile
 13382     0D12                     i1l324:
 13383     0D12  0008               	return
 13384     0D13                     __end_of_I2C1_StatusFlagsClear:
 13385                           
 13386                           	psect	text81
 13387     0CF3                     __ptext81:	
 13388 ;; *************** function _I2C1_InterruptClear *****************
 13389 ;; Defined at:
 13390 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;		None
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;		None
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1    wreg      void 
 13397 ;; Registers used:
 13398 ;;		None
 13399 ;; Tracked objects:
 13400 ;;		On entry : 0/0
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13404 ;;      Params:         0       0       0       0       0       0       0       0
 13405 ;;      Locals:         0       0       0       0       0       0       0       0
 13406 ;;      Temps:          0       0       0       0       0       0       0       0
 13407 ;;      Totals:         0       0       0       0       0       0       0       0
 13408 ;;Total ram usage:        0 bytes
 13409 ;; Hardware stack levels used: 1
 13410 ;; This function calls:
 13411 ;;		Nothing
 13412 ;; This function is called by:
 13413 ;;		_I2C1_Close
 13414 ;;		_I2C1_EventHandler
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418     0CF3                     _I2C1_InterruptClear:	
 13419                           ;psect for function _I2C1_InterruptClear
 13420                           
 13421     0CF3                     i1l2468:	
 13422                           ;incstack = 0
 13423                           ; Regs used in _I2C1_InterruptClear: []
 13424                           
 13425                           
 13426                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13427     0CF3  0020               	movlb	0	; select bank0
 13428     0CF4  1190               	bcf	16,3	;volatile
 13429     0CF5                     i1l318:
 13430     0CF5  0008               	return
 13431     0CF6                     __end_of_I2C1_InterruptClear:
 13432                           
 13433                           	psect	text82
 13434     0CF0                     __ptext82:	
 13435 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13436 ;; Defined at:
 13437 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13438 ;; Parameters:    Size  Location     Type
 13439 ;;		None
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;		None
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      void 
 13444 ;; Registers used:
 13445 ;;		None
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13451 ;;      Params:         0       0       0       0       0       0       0       0
 13452 ;;      Locals:         0       0       0       0       0       0       0       0
 13453 ;;      Temps:          0       0       0       0       0       0       0       0
 13454 ;;      Totals:         0       0       0       0       0       0       0       0
 13455 ;;Total ram usage:        0 bytes
 13456 ;; Hardware stack levels used: 1
 13457 ;; This function calls:
 13458 ;;		Nothing
 13459 ;; This function is called by:
 13460 ;;		_I2C1_Close
 13461 ;;		_I2C1_ErrorEventHandler
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465     0CF0                     _I2C1_ErrorInterruptClear:	
 13466                           ;psect for function _I2C1_ErrorInterruptClear
 13467                           
 13468     0CF0                     i1l2470:	
 13469                           ;incstack = 0
 13470                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13471                           
 13472                           
 13473                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13474     0CF0  0020               	movlb	0	; select bank0
 13475     0CF1  1191               	bcf	17,3	;volatile
 13476     0CF2                     i1l321:
 13477     0CF2  0008               	return
 13478     0CF3                     __end_of_I2C1_ErrorInterruptClear:
 13479                           
 13480                           	psect	text83
 13481     0D0B                     __ptext83:	
 13482 ;; *************** function _I2C1_BusReset *****************
 13483 ;; Defined at:
 13484 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13485 ;; Parameters:    Size  Location     Type
 13486 ;;		None
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;		None
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  1    wreg      void 
 13491 ;; Registers used:
 13492 ;;		None
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13498 ;;      Params:         0       0       0       0       0       0       0       0
 13499 ;;      Locals:         0       0       0       0       0       0       0       0
 13500 ;;      Temps:          0       0       0       0       0       0       0       0
 13501 ;;      Totals:         0       0       0       0       0       0       0       0
 13502 ;;Total ram usage:        0 bytes
 13503 ;; Hardware stack levels used: 1
 13504 ;; This function calls:
 13505 ;;		Nothing
 13506 ;; This function is called by:
 13507 ;;		_I2C1_EVENT_RESET
 13508 ;; This function uses a non-reentrant model
 13509 ;;
 13510                           
 13511     0D0B                     _I2C1_BusReset:	
 13512                           ;psect for function _I2C1_BusReset
 13513                           
 13514     0D0B                     i1l2488:	
 13515                           ;incstack = 0
 13516                           ; Regs used in _I2C1_BusReset: []
 13517                           
 13518                           
 13519                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13520     0D0B  0024               	movlb	4	; select bank4
 13521     0D0C  1295               	bcf	21,5	;volatile
 13522                           
 13523                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13524     0D0D  1695               	bsf	21,5	;volatile
 13525     0D0E                     i1l276:
 13526     0D0E  0008               	return
 13527     0D0F                     __end_of_I2C1_BusReset:
 13528                           
 13529                           	psect	text84
 13530     0002                     __ptext84:	
 13531 ;; *************** function _I2C1_DefaultCallback *****************
 13532 ;; Defined at:
 13533 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13534 ;; Parameters:    Size  Location     Type
 13535 ;;		None
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;		None
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  1    wreg      void 
 13540 ;; Registers used:
 13541 ;;		None
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13547 ;;      Params:         0       0       0       0       0       0       0       0
 13548 ;;      Locals:         0       0       0       0       0       0       0       0
 13549 ;;      Temps:          0       0       0       0       0       0       0       0
 13550 ;;      Totals:         0       0       0       0       0       0       0       0
 13551 ;;Total ram usage:        0 bytes
 13552 ;; Hardware stack levels used: 1
 13553 ;; This function calls:
 13554 ;;		Nothing
 13555 ;; This function is called by:
 13556 ;;		_I2C1_Initialize
 13557 ;;		_I2C1_Deinitialize
 13558 ;;		_I2C1_ErrorEventHandler
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562     0002                     _I2C1_DefaultCallback:	
 13563                           ;psect for function _I2C1_DefaultCallback
 13564                           
 13565     0002                     i1l231:	
 13566                           ;incstack = 0
 13567                           ; Regs used in _I2C1_DefaultCallback: []
 13568                           
 13569     0002  0008               	return
 13570     0003                     __end_of_I2C1_DefaultCallback:
 13571                           
 13572                           	psect	text85
 13573     0E09                     __ptext85:	
 13574 ;; *************** function _ADC_ISR *****************
 13575 ;; Defined at:
 13576 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;		None
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1    wreg      void 
 13583 ;; Registers used:
 13584 ;;		wreg, status,2, status,0, pclath, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13590 ;;      Params:         0       0       0       0       0       0       0       0
 13591 ;;      Locals:         0       0       0       0       0       0       0       0
 13592 ;;      Temps:          0       0       0       0       0       0       0       0
 13593 ;;      Totals:         0       0       0       0       0       0       0       0
 13594 ;;Total ram usage:        0 bytes
 13595 ;; Hardware stack levels used: 1
 13596 ;; Hardware stack levels required when called: 1
 13597 ;; This function calls:
 13598 ;;		NULL
 13599 ;;		_ADC_DefaultInterruptHandler
 13600 ;; This function is called by:
 13601 ;;		_INTERRUPT_InterruptManager
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605     0E09                     _ADC_ISR:	
 13606                           ;psect for function _ADC_ISR
 13607                           
 13608     0E09                     i1l3148:	
 13609                           ;incstack = 0
 13610                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 13611                           
 13612                           
 13613                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 13614     0E09  0020               	movlb	0	; select bank0
 13615     0E0A  1310               	bcf	16,6	;volatile
 13616     0E0B                     i1l3150:
 13617                           
 13618                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 13619     0E0B  086B               	movf	_ADC_InterruptHandler,w
 13620     0E0C  046C               	iorwf	_ADC_InterruptHandler+1,w
 13621     0E0D  1903               	btfsc	3,2
 13622     0E0E  2E10               	goto	u128_21
 13623     0E0F  2E11               	goto	u128_20
 13624     0E10                     u128_21:
 13625     0E10  2E16               	goto	i1l52
 13626     0E11                     u128_20:
 13627     0E11                     i1l3152:
 13628                           
 13629                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 13630     0E11  086C               	movf	_ADC_InterruptHandler+1,w
 13631     0E12  008A               	movwf	10
 13632     0E13  086B               	movf	_ADC_InterruptHandler,w
 13633     0E14  000A               	callw
 13634     0E15  318E               	pagesel	$
 13635     0E16                     i1l52:
 13636     0E16  0008               	return
 13637     0E17                     __end_of_ADC_ISR:
 13638                           
 13639                           	psect	text86
 13640     0CEF                     __ptext86:	
 13641 ;; *************** function _ADC_DefaultInterruptHandler *****************
 13642 ;; Defined at:
 13643 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;		None
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;		None
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  1    wreg      void 
 13650 ;; Registers used:
 13651 ;;		None
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13657 ;;      Params:         0       0       0       0       0       0       0       0
 13658 ;;      Locals:         0       0       0       0       0       0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0       0
 13660 ;;      Totals:         0       0       0       0       0       0       0       0
 13661 ;;Total ram usage:        0 bytes
 13662 ;; Hardware stack levels used: 1
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_ADC_Initialize
 13667 ;;		_ADC_ISR
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671     0CEF                     _ADC_DefaultInterruptHandler:	
 13672                           ;psect for function _ADC_DefaultInterruptHandler
 13673                           
 13674     0CEF                     i1l58:	
 13675                           ;incstack = 0
 13676                           ; Regs used in _ADC_DefaultInterruptHandler: []
 13677                           
 13678     0CEF  0008               	return
 13679     0CF0                     __end_of_ADC_DefaultInterruptHandler:
 13680     007E                     btemp	set	126	;btemp
 13681     007E                     int$flags	set	126
 13682     007E                     wtemp0	set	126
 13683                           
 13684                           	psect	config
 13685                           
 13686                           ;Config register CONFIG1 @ 0x8007
 13687                           ;	Oscillator Selection Bits
 13688                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13689                           ;	Power-up Timer Enable
 13690                           ;	PWRTE = OFF, PWRT disabled
 13691                           ;	MCLR Pin Function Select
 13692                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13693                           ;	Flash Program Memory Code Protection
 13694                           ;	CP = OFF, Program memory code protection is disabled
 13695                           ;	Brown-out Reset Enable
 13696                           ;	BOREN = ON, Brown-out Reset enabled
 13697                           ;	Clock Out Enable
 13698                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13699     8007                     	org	32775
 13700     8007  3FFC               	dw	16380
 13701                           
 13702                           ;Config register CONFIG2 @ 0x8008
 13703                           ;	Flash Memory Self-Write Protection
 13704                           ;	WRT = OFF, Write protection off
 13705                           ;	Peripheral Pin Select one-way control
 13706                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13707                           ;	Zero Cross Detect Disable Bit
 13708                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13709                           ;	PLL Enable Bit
 13710                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13711                           ;	Stack Overflow/Underflow Reset Enable
 13712                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13713                           ;	Brown-out Reset Voltage Selection
 13714                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13715                           ;	Low-Power Brown Out Reset
 13716                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13717                           ;	In-Circuit Debugger Mode
 13718                           ;	DEBUG = 0x1, unprogrammed default
 13719                           ;	Low-Voltage Programming Enable
 13720                           ;	LVP = ON, Low-voltage programming enabled
 13721     8008                     	org	32776
 13722     8008  3EFF               	dw	16127
 13723                           
 13724                           ;Config register CONFIG3 @ 0x8009
 13725                           ;	WDT Period Select
 13726                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13727                           ;	Watchdog Timer Enable
 13728                           ;	WDTE = OFF, WDT disabled
 13729                           ;	WDT Window Select
 13730                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13731                           ;	WDT Input Clock Selector
 13732                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13733     8009                     	org	32777
 13734     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    86
    Data        31
    BSS         45
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      77
    BANK1            80      0      47
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9559[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Read@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    I2C1_Write@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    packLong@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getPos@data(BANK0[4]), parserDataBuffer(BANK1[5]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 5
		 -> parserDataBuffer(BANK1[5]), 

    S189$2$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    S189$3$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S288$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 6
		 -> parserDataBuffer(BANK1[5]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> KAPS_setAbsPos@data(BANK0[4]), KAPS_StorePos@data(BANK0[4]), ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 


Critical Paths under _main in COMMON

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ProcessMsg->_SSPA_setMute
    _ADC2Celsius->___aldiv
    _getADCValue->_ADC_SelectChannel
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getPos->_I2C1_Read
    _KAPS_getIndex->_I2C1_Read
    _I2C1_Read->_I2C1_IsBusy
    _I2C1_Write->_I2C1_IsBusy
    _SendMsg->_SendSync
    _SendSync->_EUSART_IsTxReady
    _SendSync->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_RX
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_RX
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _main->_ProcessMsg
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->_ADC2Celsius
    _ADC2Celsius->___aldiv
    _SSPA_getPOut->_ADC2Amp
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    ___aldiv->___lmul
    _KAPS_setRelPos->_I2C1_Write
    _KAPS_setAbsPos->_packLong
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getStatus->_I2C1_Write
    _KAPS_getPos->_packLong
    _KAPS_getIndex->_I2C1_Read
    _KAPS_getIndex->_I2C1_Write
    _KAPS_StorePos->_packLong
    _KAPS_GoToIdx->_I2C1_Write
    _Parse->_SendNack
    _SendNack->_SendMsg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   43989
                                             49 BANK0      1     1      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                         _ProcessMsg
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     632
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     196
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     196
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessMsg                                           3     2      1   39167
                                             46 BANK0      3     2      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (2) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SSPA_setMute                                         4     3      1     245
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SSPA_getTemp                                         6     6      0    2150
                                             40 BANK0      6     6      0
                        _ADC2Celsius
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _ADC2Celsius                                         14    12      2    1850
                                             26 BANK0     14    12      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SSPA_getPOut                                         6     6      0    4316
                                             38 BANK0      5     5      0
                            _ADC2Amp
                            _ADC2dBm
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                          8     6      2     167
                                              0 BANK0      8     6      2
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_SelectChannel                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC2dBm                                             10     8      2    1850
                                             26 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ADC2Amp                                             12     8      4    1940
                                             26 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     985
                                              4 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _KAPS_setRelPos                                       5     5      0    3218
                                              5 BANK0      5     5      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_setAbsPos                                      11     7      4    4328
                                             13 BANK0     11     7      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _KAPS_getStatus                                       4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_getPos                                          7     7      0    4638
                                             13 BANK0      7     7      0
                          _I2C1_Read
                         _I2C1_Write
                           _packLong
 ---------------------------------------------------------------------------------
 (2) _packLong                                            13     9      4     428
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _KAPS_getIndex                                        4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read                                            6     1      5     977
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                     _I2C1_ReadStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadStart                                       0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (2) _KAPS_StorePos                                       12     8      4    4396
                                             13 BANK0     12     8      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _unpackLong                                           9     4      5     968
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _KAPS_GoToIdx                                         4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write                                           6     1      5    3113
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteStart                                      0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (5) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_IsBusy                                          1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parse                                                3     3      0    4153
                                              6 BANK0      3     3      0
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    2019
                                              5 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _SendMsg                                              5     3      2    1979
                                              0 BANK0      5     3      2
                           _SendSync
 ---------------------------------------------------------------------------------
 (3) _SendSync                                             1     1      0     279
                                              5 COMMON     1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     211
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_IsTxReady                                     1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_EventHandler                                    2     2      0     164
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_ErrorEventHandler                               2     2      0     164
                                              2 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_TX                                        1     1      0      48
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _SendMsg
       _SendSync
         _EUSART_IsTxReady
         _EUSART_Write
     _SendNack
       _SendMsg
   _ProcessMsg
     _KAPS_GoToIdx
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_StartSend
     _KAPS_StorePos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_getIndex
       _I2C1_Read
         _I2C1_IsBusy
         _I2C1_ReadStart
           _I2C1_StartSend
       _I2C1_Write
     _KAPS_getPos
       _I2C1_Read
       _I2C1_Write
       _packLong
     _KAPS_getStatus
       _I2C1_Read
       _I2C1_Write
     _KAPS_setAbsPos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_setRelPos
       _I2C1_Write
     _SSPA_getPOut
       _ADC2Amp
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _ADC2dBm
         ___aldiv
         ___lmul
       _getADCValue
         _ADC_IsConversionDone
         _ADC_SelectChannel
         _ADC_StartConversion
     _SSPA_getTemp
       _ADC2Celsius
         ___aldiv
         ___lmul
       _getADCValue
     _SSPA_setMute
     _SendMsg
     _packLong
     _unpackLong
     _unpackWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      86       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      86      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 14:21:45 2024

                                    I2C1_Write@data 0022                              ??_I2C1_DefaultCallback 0070  
                                                l30 0DE4                                                  l33 0D0A  
                                                l27 0E80                                                  l36 0D98  
                                                l55 0D62         __end_of_EUSART_OverrunErrorCallbackRegister 0DFD  
             ??_EUSART_OverrunErrorCallbackRegister 0076                ?_EUSART_OverrunErrorCallbackRegister 0074  
               _EUSART_OverrunErrorCallbackRegister 0DF1                                     ??_I2C1_NackSend 0070  
                                   ??_I2C1_BusReset 0070                                       ?_KAPS_GoToIdx 0070  
                                     _KAPS_StorePos 0534                                        _SSPA_getPOut 02F4  
                                      _SSPA_getTemp 05B2                                                 l200 0E35  
                                   __end_of_ADC2Amp 0534                                                 l204 0E08  
                                               l213 0D91                                                 l216 0D8A  
                                               l312 0D36                                                 l410 046B  
                                               l333 0DB7                                                 l184 0EE9  
                                               l177 0E96                                                 l610 0FA5  
                                               l442 0DD8                                                 l188 0F2D  
                                               l613 0D32                                                 l623 0DCD  
                                               l616 0003                                                 l288 0D07  
                                               l465 0D4A                                                 l722 0F7B  
                                               l619 0D2E                                                 l627 0DFC  
                                               l483 0E6C                                                 l804 0263  
                                               l716 0F53                                                 l548 0ECB  
                                               l725 0573                                                 l733 0FFF  
                                               l742 03D4                                                 l830 0711  
                                               l719 0778                                                 l751 0DF0  
                                               l592 0D45                                                 l729 07D6  
                                               l833 0420                                                 l771 0667  
                                               l739 05B1                                                 l748 04B0  
                                               l836 0533                                                 l860 06A2  
                                               l597 0E25                                                 l765 0E38  
                                               l853 067A                                                 l845 066F  
                                               l693 01AB                                                 l767 0E46  
                                               l839 062B                                                 l776 0DC2  
                                               l792 01CD                                                 l960 0745  
                                               l856 067D                                                 l848 0672  
                                               l873 02F7                                                 l699 07FB  
                                               l869 05EE                                                 l878 037D  
                                   __end_of_ADC2dBm 062C                                                 u910 0E03  
                                               u911 0E02                                                 u990 0DC9  
                                               u991 0DC8                                        ?_KAPS_getPos 0070  
                         __end_of_I2C1_DataTransmit 0D3C                                     __end_of_ADC_ISR 0E17  
                   __end_of_ADC_SetInterruptHandler 0D63                                                 wreg 0009  
                                      ADC2dBm@value 003C                            _I2C1_ErrorInterruptClear 0CF0  
                                      _SSPA_setMute 0668                        ?_ADC_DefaultInterruptHandler 0070  
                                     SendMsg@msg_id 0024                                       _KAPS_getIndex 0FD2  
                                      ?_EUSART_Read 0070                                        _BAUD1CONbits 019F  
                                  __end_of_I2C1_ISR 0D2B                                                l1011 0277  
                                              l1021 02F3                                                l3000 0DD1  
                                              l3010 0D2B                                                l3002 0EAF  
                                              l3004 0EBA                                                l3006 0EC1  
                                              l3008 0EC8                                                l4010 0232  
                                              l4002 0223                                                l4020 0245  
                                              l4012 023E                                                l4004 0226  
                                              l4006 0227                                                l3160 0D41  
                                              l4008 022D                                                l4024 024A  
                                              l3170 0F86                                                l4210 0254  
                                              l4018 0240                                                l4026 0262  
                                              l3180 0F9E                                                l3172 0F8C  
                                              l3164 0F7C                                                l4204 0689  
                                              l4060 07DC                                                l3182 0FA3  
                                              l3174 0F91                                                l3166 0F7F  
                                              l4206 05C3                                                l2630 0DFD  
                                              l3158 0E5A                                                l4062 07DC  
                                              l4054 07D7                                                l3176 0F96  
                                              l3168 0F84                                                l3520 0E18  
                                              l3600 02AC                                                l4208 0372  
                                              l2632 0E03                                                l4064 07E4  
                                              l4056 07DA                                                l3178 0F98  
                                              l3522 0E1D                                                l3530 0D2F  
                                              l3610 02D5                                                l3602 02B3  
                                              l2626 0D5D                                                l4066 07E9  
                                              l4058 07DB                                                l3524 0E22  
                                              l3540 0E26                                                l3516 0D05  
                                              l3620 0ECC                                                l3700 0472  
                                              l3604 02C5                                                l3612 02DB  
                                              l3532 0DDA                                                l2900 0E7E  
                                              l2628 0D33                                                l4068 07F2  
                                              l3526 0E24                                                l3518 0E17  
                                              l3542 0E28                                                l3630 0EDE  
                                              l3622 0ECC                                                l3702 0486  
                                              l3710 0397                                                l3614 02E0  
                                              l3606 02CD                                                l3534 0D08  
                                              l2910 0E94                                                l2902 0E81  
                                              l3560 0E37                                                l3544 0E2E  
                                              l3552 0D84                                                l3640 0EE9  
                                              l3632 0EE2                                                l3624 0ED4  
                                              l3704 049B                                                l3712 03AE  
                                              l3616 02EB                                                l3608 02CE  
                                              l3536 0D92                                                l3720 06E0  
                                              l3800 0329                                                l2904 0E86  
                                              l3562 0E39                                                l3546 0E33  
                                              l3554 0D87                                                l3634 0EE3  
                                              l3626 0EDB                                                l3650 0F1C  
                                              l3714 03C6                                                l3706 0380  
                                              l3570 071F                                                l3730 06F1  
                                              l3722 06E4                                                l3802 0332  
                                              l2906 0E87                                                l3564 0E41  
                                              l3900 0DBA                                                l3548 0E34  
                                              l3636 0EE5                                                l3628 0EDC  
                                              l3556 0D8B                                                l3660 0F26  
                                              l3652 0F1D                                                l3644 0F0C  
                                              l3708 0380                                                l3820 07A9  
                                              l3580 0264                                                l3572 0727  
                                              l3732 06F6                                                l3724 06E7  
                                              l3804 034D                                                l3812 036A  
                                              l2940 0DB5                                                l2908 0E8A  
                                              l2780 0D46                                                l3670 062E  
                                              l3638 0EE6                                                l3558 0D8E  
                                              l3662 0F27                                                l3654 0F1F  
                                              l3646 0F0D                                                l3830 0574  
                                              l3822 07AC                                                l3590 028A  
                                              l3582 0266                                                l3574 072E  
                                              l3566 0712                                                l3750 04F4  
                                              l3734 06FA                                                l3718 06DE  
                                              l3806 034D                                                l3742 03D5  
                                              l3910 008D                                                l3902 006A  
                                              l2782 0DC3                                                l2950 043D  
                                              l2942 0421                                                l3672 062F  
                                              l3664 0F2A                                                l3656 0F23  
                                              l3648 0F15                                                l3840 0FD2  
                                              l3832 0576                                                l3824 07AD  
                                              l3592 0292                                                l3584 026A  
                                              l3576 073D                                                l3568 071B  
                                              l3752 04FB                                                l3760 05F6  
                                              l3736 06FD                                                l3728 06E9  
                                              l3808 0356                                                l3744 03DC  
                                              l3920 00C4                                                l3912 0094  
                                              l3904 006B                                                l2936 0DB0  
                                              l2784 0DC9                                                l2960 0446  
                                              l2952 043F                                                l2944 0423  
                                              l3690 065C                                                l3682 0647  
                                              l3674 0633                                                l3658 0F24  
                                              l3666 0F2C                                                l3842 0FD5  
                                              l3834 057E                                                l3826 07BD  
                                              l3594 029A                                                l3586 027B  
                                              l3754 052B                                                l3762 062A  
                                              l3738 0704                                                l3746 041C  
                                              l3770 05B8                                                l3850 0669  
                                              l3930 0106                                                l3922 00CB  
                                              l3914 009B                                                l3906 0071  
                                              l2890 0E71                                                l2938 0DB3  
                                              l2786 0DF1                                                l2970 0452  
                                              l2962 0448                                                l2954 0440  
                                              l2946 0425                                                l3692 0660  
                                              l3676 0638                                                l3844 0FD6  
                                              l3836 058E                                                l3828 07D3  
                                              l3596 029D                                                l3588 0286  
                                              l3860 0694                                                l3852 066A  
                                              l3940 013A                                                l3932 010A  
                                              l3924 00DD                                                l3916 00B3  
                                              l3908 0083                                                l2892 0E72  
                                              l2788 0DF7                                                l2980 0461  
                                              l2972 0455                                                l2964 044B  
                                              l2956 0441                                                l2948 043B  
                                              l3686 064D                                                l3678 063F  
                                              l3870 0F32                                                l3846 0FE6  
                                              l3838 05A4                                                l3598 02A8  
                                              l3758 05EF                                                l3790 02F6  
                                              l3774 05BB                                                l3766 05B4  
                                              l3854 0675                                                l3950 0172  
                                              l3942 0144                                                l3934 0114  
                                              l3926 00F9                                                l3918 00BD  
                                              l2894 0E73                                                l2886 0E6D  
                                              l2990 0467                                                l2982 0463  
                                              l2974 0458                                                l2966 044D  
                                              l2958 0444                                                l3688 0654  
                                              l3696 0663                                                l3960 01B4  
                                              l3872 0F42                                                l3848 0FFC  
                                              l3880 0767                                                l3792 02F7  
                                              l3776 05CE                                                l3768 05B5  
                                              l3944 0151                                                l3936 0133  
                                              l3928 0103                                                l2896 0E75  
                                              l2888 0E70                                                l2992 0468  
                                              l2984 0464                                                l2976 045B  
                                              l2968 044F                                                l3970 01C7  
                                              l3962 01B7                                                l3698 046C  
                                              l3890 0538                                                l3874 0746  
                                              l3882 0F56                                                l3794 0300  
                                              l3778 05D7                                                l3858 0680  
                                              l3786 0DE5                                                l3946 0159  
                                              l3938 0136                                                l3954 0188  
                                              l2898 0E77                                                l2994 0469  
                                              l2986 0465                                                l2978 045E  
                                              l3980 01D3                                                l3972 01CA  
                                              l3964 01BA                                                l3956 01AE  
                                              l3868 0F30                                                l3892 0542  
                                              l3876 0749                                                l3884 0F5A  
                                              l3796 031B                                                l3788 0DEB  
                                              l3948 016A                                                l2996 046A  
                                              l2988 0466                                                l3990 0208  
                                              l3982 01D8                                                l3974 01CD  
                                              l3966 01BF                                                l3958 01AF  
                                              l3894 0544                                                l3878 0756  
                                              l3886 0F6A                                                l3798 0329  
                                              l2998 0DCE                                                l3992 0210  
                                              l3984 01DD                                                l3976 01CE  
                                              l3968 01C2                                                l3896 0551  
                                              l3888 0536                                                l3994 0215  
                                              l3986 01E2                                                l3978 01D0  
                                              l3898 0562                                                l3996 021B  
                                              l3988 01E5                                                l3998 021D  
                                 _I2C1_Deinitialize 0000                                                u1000 0DF7  
                                              u1001 0DF6                                                u2010 01B4  
                                              u2011 01B3                                                u1300 0F8C  
                                              u2020 0222                                                u1301 0F8B  
                                              u2021 0221                                                u2005 00E4  
                                              u1310 0F96                                                u2030 022D  
                                              u1311 0F95                                                u2031 022C  
                                              u1320 0F9E                                                u2040 0232  
                                              u1321 0F9D                                                u2041 0231  
                                              u2060 07E4                                                u2061 07E3  
                                              _LATA 010C                                                u2070 07F2  
                                              _LATB 010D                                                u2071 07F1  
                                              _LATC 010E                                                u1290 0F84  
                                              u1530 0E1D                                                u1610 073D  
                                              u1291 0F83                                                u1531 0E1C  
                                              u1611 073C                                                u1540 0E22  
                                              u1700 02DB                                                u1620 026A  
                                              u1541 0E21                                                u1701 02DA  
                                              u1621 0269                                                u1605 072F  
                                              u1550 0E2E                                                u1710 02E0  
                                              u1630 027B                                                u1551 0E2D  
                                              u1711 02DF                                                u1631 027A  
                                              u1560 0E33                                                u1720 0ED4  
                                              u1800 03A4                                                u1640 029A  
                                              u1561 0E32                                                u1721 0ED3  
                                              u1641 0299                                                u1570 0E41  
                                              u1730 0F15                                                u1810 03BC  
                                              u1571 0E40                                                u1731 0F14  
                                              u1740 063F                                                u1900 07D3  
                                              u1660 02AC                                                u1580 071F  
                                              u1820 06F1                                                u1741 063E  
                                              u1805 03A0                                                u1901 07D2  
                                              u1661 02AB                                                u1581 071E  
                                              u1821 06F0                                                u1750 064C  
                                              u1910 05A4                                                u1830 0704  
                                              u1751 064B                                                u1815 03B8  
                                              u1911 05A3                                                u1655 029E  
                                              u1831 0703                                                u1760 0482  
                                              u1920 0FFC                                                u1680 02C5  
                                              u1921 0FFB                                                u1681 02C4  
                                              u1770 0497                                                u1930 066F  
                                              u1675 02AD                                                u1595 0728  
                                              u1931 066E                                                u1780 04AC  
                                              u1940 067A                                                u1765 047E  
                                              u1685 02C1                                                u1845 0709  
                                              u1941 0679                                                u1790 038D  
                                              u1775 0493                                                u1695 02CF  
                                              u1855 05E2                                                u1785 04A8  
                                              u1865 030B                                                u1795 0389  
                                              u1875 031E                                                u1955 0698  
                                              u1965 053B                                                u1885 033D  
                                              u1895 0359                                                u1975 0078  
                                              u1985 00A2                                                u1995 00D2  
                                              i1l52 0E16                                                i1l58 0CEF  
                                              _UART 0779                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                                  ??_I2C1_ReadStart 0074                                     ??_I2C1_StopSend 0070  
                                 I2C1_Write@address 0020                                                _main 07D7  
                                              _kaps 0064                                    __end_of_I2C_Host 0813  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                              start 0036          __end_of_EUSART_DefaultOverrunErrorCallback 0D2F  
              ??_EUSART_DefaultOverrunErrorCallback 0074                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 0D2B                                       ADC2dBm@result 0040  
                   __end_of_INT_SetInterruptHandler 0D4B                                     _I2C1_EVENT_IDLE 0D1F  
                                   _I2C1_EVENT_NACK 0D4B                                          _i2c1Status 0052  
                                   _I2C1_EVENT_STOP 0DA8                                     __end_of_SendMsg 0668  
                                    ??_KAPS_GoToIdx 0025                                      ?_KAPS_StorePos 002D  
                                    _KAPS_getStatus 07A9                                       ?_EUSART_Write 0074  
                                 __end_of_I2C1_Read 0F2E                                     __end_of___aldiv 02F4  
                                             ?_main 0070                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             i1l210 0D26                                               i1l300 0D5C  
                                             i1l231 0002                                               i1l303 0D40  
                                             i1l207 0D2A                                               i1l240 0D75  
                                             i1l321 0CF2                                               i1l225 04F3  
                                             i1l234 0D22                                               i1l306 0D83  
                                             i1l219 0E59                                               i1l324 0D12  
                                             i1l228 0F0B                                               i1l309 0D1A  
                                             i1l237 0DA7                                               i1l261 0D56  
                                             i1l318 0CF5                                               i1l270 0CFB  
                                             i1l247 0FD1                                               i1l255 06DB  
                                             i1l264 0DAF                                               i1l273 0D3B  
                                             i1l282 0D04                                               i1l258 0D50  
                                             i1l450 0026                                               i1l291 0CF8  
                                             i1l267 0D7C                                               i1l276 0D0E  
                                             i1l285 0D01                                               i1l294 0D16  
                                             i1l279 0CFE                                               i1l455 0034  
                                             i1l448 0018                                               i1l297 0D1E  
                                             i1l449 0034                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             u94_20 0FAD                                               u94_21 0FAC  
                                             u95_20 0FC5                                               u95_21 0FC4  
                                             u96_20 06AD                                               u96_21 06AC  
                                             _RXPPS 0E24                                               u97_20 06B4  
                                             u97_21 06B3                                               u98_20 06CA  
                                             u98_21 06C9                                    ??_I2C1_StartSend 0074  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                 ___lmul@multiplicand 0024  
                                             _Parse 01AC                                      ?_KAPS_getIndex 0070  
                                 ??_I2C1_Initialize 0076                                     SendMsg@data_len 0021  
                           ??_I2C1_CallbackRegister 0076                                   ?_I2C1_IsRxBufFull 0070  
                                  ProcessMsg@msg_id 0050                            ?_I2C1_EVENT_SEND_WR_ADDR 0070  
                                             _sspas 00A0                                               pclath 000A  
                             I2C1_DataTransmit@data 0070                                      _KAPS_setAbsPos 0746  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                      _KAPS_setRelPos 0F54  
                                      ??_I2C1_Close 0070                                          SendMsg@sum 0023  
                                      __end_of_UART 07A9                                        ??_I2C1_Write 0075  
                                   __initialization 0038                            ??_I2C1_ErrorEventHandler 0072  
                                      __end_of_main 07FF                              __end_of_KAPS_getStatus 07D7  
                                         ??_ADC2Amp 0075                                           ??_ADC2dBm 0075  
                                    getADCValue@sum 0025                                    _I2C1_EVENT_ERROR 0D51  
                                    ??_EUSART_Write 0075                                    _I2C1_EVENT_RESET 0D76  
                                         ??_ADC_ISR 0070                         ?_INTERRUPT_InterruptManager 0070  
                                  __end_of_SendNack 0DC3                                              ??_main 0076  
                                  __end_of_SendSync 0E47                                    SSPA_setMute@band 0075  
                                  SSPA_setMute@mute 0074  EUSART_OverrunErrorCallbackRegister@callbackHandler 0074  
EUSART_FramingErrorCallbackRegister@callbackHandler 0074                I2C1_CallbackRegister@callbackHandler 0074  
                                            ?_Parse 0070                                  __end_of_I2C1_Close 0E5A  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 005E  
                             _I2C1_InterruptsEnable 0D33                                              _ADRESH 009C  
                                            _ADRESL 009B                              __end_of_KAPS_setAbsPos 0779  
                                __end_of_I2C1_Write 0EEA                                              _ANSELA 018C  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                            _BORCON 0116                                   KAPS_setAbsPos@reg 0037  
                                 KAPS_setAbsPos@pos 002D                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RC2PPS 0EA2  
                                            _RB5PPS 0E9D                                              _RB6PPS 0E9E  
                                            u112_20 04BC                                              u112_21 04BB  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            _ODCONC 028E                                              i1l3150 0E0B  
                                            i1l3152 0E11                                              u113_20 04C4  
                                            u113_21 04C3                                              i1l3154 0D27  
                                            i1l3148 0E09                                              i1l2532 0D38  
                                            i1l3156 0D23                                              i1l2470 0CF0  
                                            i1l2550 0D13                                              i1l2542 0D17  
                                            i1l2534 0D02                                              i1l2702 0DA0  
                                            i1l2710 0D74                                              i1l3350 0006  
                                            i1l2472 0D0F                                              i1l2480 0E50  
                                            i1l2552 0CFF                                              i1l2720 0FB1  
                                            i1l2704 0DA6                                              i1l2536 0DA8  
                                            i1l2560 0D79                                              u114_20 04D2  
                                            i1l3360 0022                                              i1l3352 000A  
                                            u114_21 04D1                                              i1l2482 0E53  
                                            i1l2546 0CF9                                              i1l2554 0D1B  
                                            i1l2730 0FC9                                              i1l2722 0FBD  
                                            i1l2714 0FA6                                              i1l2538 0DAE  
                                            i1l2562 0D7B                                              i1l3362 002B  
                                            i1l3354 000F                                              i1l2468 0CF3  
                                            i1l2484 0E56                                              i1l2476 0E47  
                                            i1l2556 0CFC                                              i1l2732 0FCC  
                                            i1l2724 0FC0                                              i1l2716 0FA6  
                                            i1l2708 0D6F                                              i1l2740 06A5  
                                            i1l3364 0030                                              i1l3356 0014  
                                            i1l2478 0E49                                              i1l2486 0CF6  
                                            i1l2726 0FC5                                              i1l2734 0FD0  
                                            i1l2718 0FAD                                              i1l2750 06C4  
                                            i1l2742 06AD                                              i1l2558 0D76  
                                            i1l3358 001D                                              i1l2488 0D0B  
                                            i1l2728 0FC6                                              i1l2760 06DA  
                                            i1l2752 06CA                                              i1l2744 06B4  
                                            u115_20 04DA                                              i1l2920 04CA  
                                            i1l2912 04B1                                              u115_21 04D9  
                                            i1l2754 06CE                                              i1l2746 06BB  
                                            i1l2738 06A3                                              i1l2930 0EEF  
                                            i1l2922 04D2                                              i1l2914 04B4  
                                            i1l2756 06D4                                              i1l2748 06C0  
                                            i1l2764 0D4B                                              i1l2772 0D51  
                                            i1l2932 0EF2                                              i1l2684 0D7D  
                                            i1l2692 0D3C                                              i1l2924 04DA  
                                            i1l2916 04BC                                              i1l2758 06D7  
                                            i1l2766 0D4B                                              i1l2774 0D51  
                                            i1l2934 0F06                                              i1l2926 04DF  
                                            i1l2918 04C4                                              i1l2696 0D1F  
                                            i1l2768 0D4F                                              i1l2776 0D55  
                                            i1l2928 0EEA                                              i1l2688 0D57  
                                            i1l2698 0D21                                              u142_20 000A  
                                            u142_21 0009                                              u143_20 000F  
                                            u143_21 000E                                              u128_20 0E11  
                                            u144_20 0014                                              u128_21 0E10  
                                            u144_21 0013                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u145_20 001D                                              u145_21 001C  
                                            u146_20 0022                                              u146_21 0021  
                                            u147_20 002B                                              u147_21 002A  
                                            u148_20 0030                                              u148_21 002F  
                                            _OSCCON 0099                              __end_of_KAPS_setRelPos 0F7C  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                           __end_of_I2C1_EVENT_IDLE 0D23                             __end_of_I2C1_EVENT_NACK 0D51  
                                KAPS_getStatus@data 0028                             __end_of_I2C1_EVENT_STOP 0DB0  
                             SSPA_getPOut@adc_value 0048                                           ??_SendMsg 0022  
                       __end_of_I2C1_InterruptClear 0CF6                                     ??_KAPS_StorePos 0031  
                                            ___lmul 0712                                           ??___aldiv 0074  
                                   ?_KAPS_getStatus 0070                                    __end_of_packLong 03D5  
                                _I2C1_RestartEnable 0D02                                           ?_I2C1_ISR 0070  
                                            _parser 00B8                                   ?_EUSART_IsRxReady 0070  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 0DA8                                   ?_EUSART_IsTxReady 0070  
                                 ProcessMsg@payload 00C4                                          _ProcessMsg 0068  
                                      packLong@data 002C                                   ?_CLOCK_Initialize 0070  
                                ??_EUSART_IsRxReady 0074                                     ??_KAPS_getIndex 0025  
                                ??_EUSART_IsTxReady 0074                                  ??_CLOCK_Initialize 0074  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 0D76                                 ?_I2C1_RestartEnable 0070  
                                 ??_I2C1_WriteStart 0074             INT_SetInterruptHandler@InterruptHandler 0074  
           ADC_SetInterruptHandler@InterruptHandler 0074                                     ?_KAPS_setAbsPos 002D  
                              __end_of_KAPS_GoToIdx 0F54                                   _SYSTEM_Initialize 0E5A  
                           __end_of__initialization 0064                                     ?_KAPS_setRelPos 0070  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                     ??_I2C1_IsNack 0070                                       ??_I2C1_IsBusy 0074  
                                ?_SYSTEM_Initialize 0070                                         SendMsg@data 0020  
                                getADCValue@channel 0024                                       ??_ADC2Celsius 003C  
                              ??_I2C1_RestartEnable 0070                                      __pcstackCOMMON 0070  
                                     __end_of_Parse 0264                                        __pidataBANK0 0D99  
                                      __pidataBANK1 0E97                                 ??_SYSTEM_Initialize 0076  
                               KAPS_setRelPos@value 0029                          ??_I2C1_ErrorInterruptClear 0070  
                                   _I2C1_IsBusy$646 0074                                          ??_I2C1_ISR 0074  
                                    _OPTION_REGbits 0095                               __end_of_I2C1_EVENT_RX 06DC  
                             __end_of_I2C1_EVENT_TX 0FD2                                             ??_Parse 0026  
                            ?_I2C1_InterruptsEnable 0070                                   _I2C1_EventHandler 04B1  
                         __end_of_SYSTEM_Initialize 0E6D                                          __pbssBANK0 0052  
                                        __pbssBANK1 00B8                                __end_of_EUSART_Write 0D33  
                                ?_I2C1_EventHandler 0070                                   KAPS_setRelPos@reg 0028  
                             _I2C1_StatusFlagsClear 0D0F                                    ?_I2C1_EVENT_IDLE 0070  
                                  ?_I2C1_EVENT_NACK 0070                                           ?_SendNack 0070  
                                  ?_I2C1_EVENT_STOP 0070                                           ?_SendSync 0070  
                               ??_I2C1_EventHandler 0072                                          __pmaintext 07D7  
                               __end_of_I2C1_IsAddr 0D84                                 __end_of_I2C1_IsData 0D41  
                               __end_of_I2C1_IsNack 0D5D                                             ?___lmul 0020  
                               __end_of_I2C1_IsBusy 0E36                                             _ADC2Amp 04F4  
                                           _ADC2dBm 05EF                                          __pintentry 0004  
                                   _I2C1_Initialize 0E81                                _EUSART_AutoBaudQuery 0000  
                               __end_of_ADC2Celsius 0421                                             _ADC_ISR 0E09  
                                    ___lmul@product 0028                                         ?_ProcessMsg 004E  
                                KAPS_setAbsPos@data 0033                               __end_of_I2C1_NackSend 0D1F  
                             __end_of_I2C1_BusReset 0D0F                                     _EUSART_IsTxDone 0000  
                                   _EUSART_ErrorGet 0000                                           _I2C1_Read 0F0C  
                         __end_of_I2C1_EventHandler 04F4                              _I2C1_ErrorEventHandler 0EEA  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                          __end_of_I2C1_EVENT_ERROR 0D57                            __end_of_I2C1_EVENT_RESET 0D7D  
                                         ?_packLong 0020                       __end_of_I2C1_CallbackRegister 0E09  
                                   KAPS_getPos@data 002F                               __end_of_I2C1_StopSend 0CF9  
                                        ??_SendNack 0076                                          ??_SendSync 0075  
                              _ADC_InterruptHandler 006B                                             _SendMsg 062C  
                           _ADC_SetInterruptHandler 0D5D                                       ??_getADCValue 0022  
                                           ___aldiv 0264                                    KAPS_StorePos@idx 0038  
                                  KAPS_StorePos@reg 0037                                    KAPS_StorePos@pos 002D  
                                           __ptext1 0E5A                                             __ptext2 0421  
                                           __ptext3 0DCE                                             __ptext4 0D46  
                                           __ptext5 0E81                                             __ptext6 0D33  
                                           __ptext7 0DFD                                             __ptext8 0EAF  
                                           __ptext9 0DF1                                I2C1_Write@dataLength 0023  
                               _I2C1_RestartDisable 0CFF                                    ___aldiv@dividend 0030  
                          ??_PIN_MANAGER_Initialize 0074                                          ?_I2C1_Read 0020  
                                     ?_I2C1_AckSend 0070                             _INT_SetInterruptHandler 0D46  
                                   _i2c1_eventTable 0813                                             clrloop0 0D64  
                              end_of_initialization 0064                                          ??_packLong 0024  
                            ?_I2C1_StatusFlagsClear 0070                                             init_ram 0D69  
                                           initloop 0D6A                                         _I2C1_IsAddr 0D7D  
                                       _I2C1_IsData 0D3C                                         _I2C1_IsNack 0D57  
                                       _I2C1_IsBusy 0E26                                    ??_KAPS_getStatus 0025  
                                 _EUSART_Initialize 0EAF                                ?_I2C1_RestartDisable 0070  
                                  I2C1_Read@address 0020                             __end_of_I2C1_Initialize 0E97  
                      __end_of_ADC_IsConversionDone 0D99                                         _ADC2Celsius 03D5  
                                ?_EUSART_Initialize 0070                                   KAPS_getIndex@data 0028  
                                  ___aldiv@quotient 0036                                    _I2C1_DataReceive 0CF9  
                                   _I2C1_WriteStart 0D84                                 __end_of_getADCValue 0712  
                               ??_EUSART_Initialize 0076                                        _KAPS_GoToIdx 0F2E  
                                         _SSPDATPPS 0E21                                           _SSPCLKPPS 0E20  
                                  ??_KAPS_setAbsPos 0031                                      ??_I2C1_AckSend 0070  
               __end_of_ADC_DefaultInterruptHandler 0CF0                         _ADC_DefaultInterruptHandler 0CEF  
                               _ADC_StartConversion 0D08                                    ??_KAPS_setRelPos 0025  
                               _EUSART_Deinitialize 0000                                          _unpackLong 046C  
                                        _unpackWord 0DE5                           __end_of_EUSART_Initialize 0ECC  
                     ??_ADC_DefaultInterruptHandler 0070                           ??_ADC_SetInterruptHandler 0076  
                             ??_I2C1_RestartDisable 0070                                      ProcessMsg@data 004E  
                              ?_ADC_StartConversion 0070                                        getADCValue@i 0027  
                      __end_of_INTERRUPT_Initialize 0DD9                                      _I2C1_ERROR_ISR 0D23  
                                    __end_of___lmul 0746                               __end_of_KAPS_StorePos 0574  
                                         Parse@data 0028                                       ?_SSPA_getPOut 0070  
                        __end_of_I2C1_ReceiveEnable 0CFF                                        _EUSART_Write 0D2F  
                                     ?_SSPA_getTemp 0070                             __end_of_i2c1_eventTable 0825  
                                    _ADC_Initialize 0E6D                                KAPS_setRelPos@offset 0027  
                         ??_INT_SetInterruptHandler 0076                             ??_I2C1_InterruptsEnable 0074  
                                     ??_KAPS_getPos 002D                                            ADC2Amp@v 003A  
                               start_initialization 0038                                       ?_SSPA_setMute 0074  
                                       ??_I2C1_Read 0075                                            ADC2dBm@v 003A  
                             __end_of_KAPS_getIndex 1000                                        SendSync@data 0075  
                                     ??_EUSART_Read 0074                             _I2C1_EVENT_SEND_RD_ADDR 0DA0  
                           __end_of_I2C1_WriteStart 0D8B                                    ?_I2C1_Initialize 0070  
                                 KAPS_getStatus@reg 0027                               ??_ADC_StartConversion 0074  
                           _I2C1_EVENT_SEND_WR_ADDR 0D6F                                         _getADCValue 06DC  
                            __end_of_I2C1_ERROR_ISR 0D27                          _EUSART_FramingErrorHandler 0076  
                                  _I2C1_IsRxBufFull 0D17                                            ??___lmul 0074  
                                          ?_ADC2Amp 003A                                            ?_ADC2dBm 003A  
                            __end_of_ADC_Initialize 0E81                                         __pdataBANK0 0064  
                                       __pdataBANK1 00A0                                      ??_SSPA_getPOut 0046  
                                    ??_SSPA_getTemp 0048                                            ?_ADC_ISR 0070  
                                   unpackLong@value 0020                                        ??_ProcessMsg 004F  
                           ?_I2C1_ErrorEventHandler 0070                                      ??_SSPA_setMute 0020  
                                       __pbssCOMMON 0076                                           ___latbits 0001  
                                     __pcstackBANK0 0020                                _ADC_IsConversionDone 0D92  
                                       ?_unpackLong 0020                                 __end_of_KAPS_getPos 05B2  
                                       ?_unpackWord 0020                           ?_I2C1_ErrorInterruptClear 0070  
                      __end_of_I2C1_DefaultCallback 0003                                   ?_I2C1_EVENT_ERROR 0070  
                                 ?_I2C1_EVENT_RESET 0070                                 __end_of_EUSART_Read 0FA6  
                                ??_I2C1_EVENT_ERROR 0070                                  ??_I2C1_EVENT_RESET 0070  
                                         __pnvBANK0 006B                                  __end_of_ProcessMsg 01AC  
                                          ?_SendMsg 0020                                __end_of_I2C1_AckSend 0D17  
                            _PIN_MANAGER_Initialize 0421                                     ?_I2C1_ERROR_ISR 0070  
                                 ADC2Celsius@result 0044                                      _I2C1_ReadStart 0D8B  
                                 _ADC_SelectChannel 0DD9                                            ?___aldiv 002C  
                                   ?_ADC_Initialize 0070                                  ?_ADC_SelectChannel 0070  
                                          _I2C1_ISR 0D27                        ??_INTERRUPT_InterruptManager 0074  
                    __end_of_I2C1_ErrorEventHandler 0F0C                                            _BAUD1CON 019F  
                                    KAPS_getPos@reg 0033                              _EUSART_TransmitDisable 0000  
                                  SSPA_getPOut@band 004A                                            _I2C_Host 07FF  
                               ??_ADC_SelectChannel 0074                               ?_ADC_IsConversionDone 0070  
                               I2C1_Read@dataLength 0023                       I2C1_EVENT_ERROR@retEventState 0070  
                           ??_I2C1_StatusFlagsClear 0070                            __end_of_I2C1_DataReceive 0CFC  
                         ??_I2C1_EVENT_SEND_RD_ADDR 0070                                    _EUSART_IsRxReady 0D41  
                              _INTERRUPT_Initialize 0DCE                                     unpackWord@value 0020  
                                  _EUSART_IsTxReady 0E17                                     ___aldiv@divisor 002C  
                                  _CLOCK_Initialize 0DB0                                      _I2C1_StartSend 0D05  
                                   ___aldiv@counter 0034                                        ?_I2C1_IsAddr 0070  
                                      ?_I2C1_IsData 0070                                            _LATCbits 010E  
                                      ?_I2C1_IsNack 0070                           ??_I2C1_EVENT_SEND_WR_ADDR 0071  
                                      ?_I2C1_IsBusy 0070                               _I2C1_CallbackRegister 0DFD  
                                         clear_ram0 0D63                                            _PIE1bits 0090  
                                          _PIE2bits 0091                                    ?_I2C1_WriteStart 0070  
                                 _eusartRxLastError 0060                                          _I2C1_Close 0E47  
                            __end_of_I2C1_ReadStart 0D92                           __end_of_ADC_SelectChannel 0DE5  
                                      ?_ADC2Celsius 003A                                            _PIR1bits 0010  
                                          _PIR2bits 0011                                          _I2C1_Write 0ECC  
                                  KAPS_getIndex@reg 0027                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                  KAPS_getPos@F9702 00C0                                    SSPA_getTemp@band 004D  
                                        _ADCON0bits 009D                            ADC_SelectChannel@channel 0075  
                                       _KAPS_getPos 0574                        I2C1_EVENT_NACK@retEventState 0070  
                                     _I2C1_EVENT_RX 06A3                                       _I2C1_EVENT_TX 0FA6  
                                       _EUSART_Read 0F7C                                   ___lmul@multiplier 0020  
                             ?_INTERRUPT_Initialize 0070                              __end_of_I2C1_StartSend 0D08  
                              __end_of_SSPA_getPOut 037E                                __end_of_SSPA_getTemp 05EF  
                               _I2C1_InterruptClear 0CF3                                            _SendNack 0DB8  
                                          _SendSync 0E36                                __end_of_SSPA_setMute 06A3  
                                   ?_I2C1_ReadStart 0070                               _EUSART_IsTxReady$1324 0074  
                                    unpackLong@data 0024                                       _I2C1_Callback 0062  
                                 KAPS_StorePos@data 0033                                _I2C1_DefaultCallback 0002  
                                   KAPS_GoToIdx@idx 0027                                     KAPS_GoToIdx@reg 0028  
                              ?_I2C1_InterruptClear 0070                                       _I2C1_NackSend 0D1B  
                            ??_ADC_IsConversionDone 0074                                       _I2C1_BusReset 0D0B  
                                 ??_I2C1_EVENT_IDLE 0070                                   ??_I2C1_EVENT_NACK 0070  
                                 ??_I2C1_EVENT_STOP 0070                       __end_of_I2C1_InterruptsEnable 0D37  
                                    ?_I2C1_EVENT_RX 0070                                      ?_I2C1_EVENT_TX 0070  
                                  ADC2Celsius@value 0040                                       _I2C1_ErrorGet 0000  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 0DC3  
                                          __ptext11 0DB0                                            __ptext20 06DC  
                                          __ptext12 0E6D                                            __ptext21 0D08  
                                          __ptext13 0D5D                                            __ptext30 07A9  
                                          __ptext22 0DD9                                            __ptext14 0068  
                                          __ptext31 0574                                            __ptext23 0D92  
                                          __ptext15 0DE5                                            __ptext40 0D84  
                                          __ptext32 037E                                            __ptext24 05EF  
                                          __ptext16 0668                                            __ptext41 0D05  
                                          __ptext33 0FD2                                            __ptext25 04F4  
                                          __ptext17 05B2                                            __ptext50 0D2B  
                                          __ptext42 0E26                                            __ptext34 0F0C  
                                          __ptext26 0712                                            __ptext18 03D5  
                                          __ptext51 0003                                            __ptext43 01AC  
                                          __ptext35 0D8B                                            __ptext27 0264  
                                          __ptext19 02F4                                            __ptext60 0EEA  
                                          __ptext52 0D41                                            __ptext44 0DB8  
                                          __ptext36 0534                                            __ptext28 0F54  
                                          __ptext61 0D76                                            __ptext45 062C  
                                          __ptext37 046C                                            __ptext29 0746  
                                          __ptext70 0D02                                            __ptext62 0DA8  
                                          __ptext54 0D27                                            __ptext46 0E36  
                                          __ptext38 0F2E                                            __ptext71 0D37  
                                          __ptext63 0D51                                            __ptext55 04B1  
                                          __ptext47 0D2F                                            __ptext39 0ECC  
                                          __ptext80 0D0F                                            __ptext72 0CFF  
                                          __ptext64 0D4B                                            __ptext56 0D57  
                                          __ptext48 0E17                                            __ptext81 0CF3  
                                          __ptext73 0CFC                                            __ptext65 06A3  
                                          __ptext57 0D3C                                            __ptext49 0F7C  
                                          __ptext82 0CF0                                            __ptext74 0D1B  
                                          __ptext66 0D6F                                            __ptext58 0D7D  
                                          __ptext83 0D0B                                            __ptext75 0D17  
                                          __ptext67 0DA0                                            __ptext59 0D23  
                                          __ptext84 0002                                            __ptext76 0CF9  
                                          __ptext68 0D1F                                            __ptext85 0E09  
                                          __ptext77 0D13                                            __ptext69 0FA6  
                                          __ptext86 0CEF                                            __ptext78 0CF6  
                                          __ptext79 0E47                            __end_of_I2C1_IsRxBufFull 0D1B  
                                      _SSP1CON1bits 0215                                        _SSP1CON2bits 0216  
                       __end_of_I2C1_RestartDisable 0D02                                  _I2C1_ReceiveEnable 0CFC  
                                   ?_I2C1_StartSend 0070                               _EUSART_TransmitEnable 0000  
                                          _packLong 037E                              ?_I2C1_CallbackRegister 0074  
                                    unpackWord@data 0022                                 ?_I2C1_ReceiveEnable 0070  
                                  _parserDataBuffer 00CA                                         ?_I2C1_Close 0070  
                                     _I2C1_StopSend 0CF6                                        ?_getADCValue 0020  
                                        _RC1STAbits 019D                                         ?_I2C1_Write 0020  
                                          int$flags 007E                  __end_of_INTERRUPT_InterruptManager 0036  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 0DCE  
             ??_EUSART_FramingErrorCallbackRegister 0076                ?_EUSART_FramingErrorCallbackRegister 0074  
               _EUSART_FramingErrorCallbackRegister 0DC3                               ?_I2C1_DefaultCallback 0070  
                                          main@data 0051                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0070                    __end_of_I2C1_ErrorInterruptClear 0CF3  
                             SSPA_getTemp@adc_value 004A                                      ?_I2C1_NackSend 0070  
                                    ?_I2C1_BusReset 0070                                ??_I2C1_ReceiveEnable 0070  
                                    packLong@result 0028                                          _INTCONbits 000B  
                                      _I2C1_AckSend 0D13                                _INT_InterruptHandler 0078  
                            ??_INTERRUPT_Initialize 0076                                        ??_unpackLong 0025  
                        I2C1_EVENT_RX@retEventState 0071                            ?_ADC_SetInterruptHandler 0074  
                                      ??_unpackWord 0074                                            intlevel1 0000  
                       __end_of_ADC_StartConversion 0D0B                                    ??_I2C1_ERROR_ISR 0074  
                                I2C1_Read@retStatus 0075                             ?_PIN_MANAGER_Initialize 0070  
                        __end_of_I2C1_RestartEnable 0D05          __end_of_EUSART_DefaultFramingErrorCallback 0004  
              ??_EUSART_DefaultFramingErrorCallback 0074                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 0003                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 0076                                       I2C1_Read@data 0022  
                          ?_INT_SetInterruptHandler 0074                            __end_of_EUSART_IsRxReady 0D46  
                          __end_of_EUSART_IsTxReady 0E26                                  __end_of_unpackLong 04B1  
                          __end_of_CLOCK_Initialize 0DB8                                  __end_of_unpackWord 0DF1  
                                     __pstringtext1 0779                                       __pstringtext2 07FF  
                                     __pstringtext3 0813                                       ADC2Amp@result 0042  
                                   ??_I2C1_EVENT_RX 0070                                     ??_I2C1_EVENT_TX 0071  
                                      ___aldiv@sign 0035                                   _I2C1_DataTransmit 0D37  
                                        _TX1STAbits 019E                                  ?_I2C1_DataTransmit 0070  
                               SSPA_getTemp@channel 004C                                        ADC2Amp@value 003E  
                                 ?_I2C1_DataReceive 0070                                  EUSART_Write@txData 0074  
                                     SendNack@error 0025                      __end_of_PIN_MANAGER_Initialize 046C  
                     __end_of_I2C1_StatusFlagsClear 0D13                                  ??_I2C1_DataReceive 0070  
                                      ADC2Celsius@v 003A                          I2C1_EVENT_TX@retEventState 0071  
                               ??_I2C1_DataTransmit 0070  
