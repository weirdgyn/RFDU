

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 10:28:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	text87,local,class=CODE,merge=1,delta=2
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110     0000                     
   111                           ; Generated 07/09/2023 GMT
   112                           ; 
   113                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F1618 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     0111                     	;# 
   202     0112                     	;# 
   203     0113                     	;# 
   204     0114                     	;# 
   205     0115                     	;# 
   206     0116                     	;# 
   207     0117                     	;# 
   208     0118                     	;# 
   209     0119                     	;# 
   210     011C                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     018E                     	;# 
   214     0191                     	;# 
   215     0191                     	;# 
   216     0192                     	;# 
   217     0193                     	;# 
   218     0193                     	;# 
   219     0194                     	;# 
   220     0195                     	;# 
   221     0196                     	;# 
   222     0197                     	;# 
   223     0199                     	;# 
   224     0199                     	;# 
   225     0199                     	;# 
   226     019A                     	;# 
   227     019A                     	;# 
   228     019A                     	;# 
   229     019B                     	;# 
   230     019B                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019B                     	;# 
   234     019C                     	;# 
   235     019C                     	;# 
   236     019C                     	;# 
   237     019D                     	;# 
   238     019D                     	;# 
   239     019D                     	;# 
   240     019E                     	;# 
   241     019E                     	;# 
   242     019E                     	;# 
   243     019F                     	;# 
   244     019F                     	;# 
   245     019F                     	;# 
   246     019F                     	;# 
   247     019F                     	;# 
   248     020C                     	;# 
   249     020D                     	;# 
   250     020E                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0215                     	;# 
   263     0216                     	;# 
   264     0216                     	;# 
   265     0217                     	;# 
   266     0217                     	;# 
   267     028C                     	;# 
   268     028D                     	;# 
   269     028E                     	;# 
   270     0291                     	;# 
   271     0291                     	;# 
   272     0292                     	;# 
   273     0293                     	;# 
   274     0294                     	;# 
   275     0298                     	;# 
   276     0298                     	;# 
   277     0299                     	;# 
   278     029A                     	;# 
   279     029B                     	;# 
   280     029E                     	;# 
   281     030C                     	;# 
   282     030D                     	;# 
   283     030E                     	;# 
   284     038C                     	;# 
   285     038D                     	;# 
   286     038E                     	;# 
   287     0391                     	;# 
   288     0392                     	;# 
   289     0393                     	;# 
   290     0394                     	;# 
   291     0395                     	;# 
   292     0396                     	;# 
   293     0397                     	;# 
   294     0398                     	;# 
   295     0399                     	;# 
   296     040E                     	;# 
   297     0413                     	;# 
   298     0413                     	;# 
   299     0414                     	;# 
   300     0414                     	;# 
   301     0415                     	;# 
   302     0416                     	;# 
   303     0417                     	;# 
   304     0418                     	;# 
   305     041A                     	;# 
   306     041A                     	;# 
   307     041B                     	;# 
   308     041B                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     041F                     	;# 
   313     0493                     	;# 
   314     0494                     	;# 
   315     0495                     	;# 
   316     0496                     	;# 
   317     049A                     	;# 
   318     049B                     	;# 
   319     049C                     	;# 
   320     049D                     	;# 
   321     058C                     	;# 
   322     058C                     	;# 
   323     058D                     	;# 
   324     058E                     	;# 
   325     058E                     	;# 
   326     058F                     	;# 
   327     0590                     	;# 
   328     0590                     	;# 
   329     0591                     	;# 
   330     0592                     	;# 
   331     0592                     	;# 
   332     0593                     	;# 
   333     0594                     	;# 
   334     0594                     	;# 
   335     0595                     	;# 
   336     0596                     	;# 
   337     0596                     	;# 
   338     0597                     	;# 
   339     0598                     	;# 
   340     0599                     	;# 
   341     059A                     	;# 
   342     059B                     	;# 
   343     059B                     	;# 
   344     059C                     	;# 
   345     059D                     	;# 
   346     060C                     	;# 
   347     060C                     	;# 
   348     060D                     	;# 
   349     060E                     	;# 
   350     060F                     	;# 
   351     060F                     	;# 
   352     0610                     	;# 
   353     0611                     	;# 
   354     0612                     	;# 
   355     0613                     	;# 
   356     0614                     	;# 
   357     0617                     	;# 
   358     0617                     	;# 
   359     0618                     	;# 
   360     0619                     	;# 
   361     061A                     	;# 
   362     061A                     	;# 
   363     061B                     	;# 
   364     061C                     	;# 
   365     0691                     	;# 
   366     0692                     	;# 
   367     0693                     	;# 
   368     0694                     	;# 
   369     0695                     	;# 
   370     0696                     	;# 
   371     0697                     	;# 
   372     0699                     	;# 
   373     069A                     	;# 
   374     0711                     	;# 
   375     0712                     	;# 
   376     0713                     	;# 
   377     0714                     	;# 
   378     0715                     	;# 
   379     0718                     	;# 
   380     0718                     	;# 
   381     0719                     	;# 
   382     071A                     	;# 
   383     071A                     	;# 
   384     071B                     	;# 
   385     071C                     	;# 
   386     071D                     	;# 
   387     0791                     	;# 
   388     0791                     	;# 
   389     0792                     	;# 
   390     0793                     	;# 
   391     0793                     	;# 
   392     0794                     	;# 
   393     0795                     	;# 
   394     0795                     	;# 
   395     0796                     	;# 
   396     0797                     	;# 
   397     0797                     	;# 
   398     0798                     	;# 
   399     0799                     	;# 
   400     079A                     	;# 
   401     080C                     	;# 
   402     080C                     	;# 
   403     080D                     	;# 
   404     080E                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0810                     	;# 
   409     0811                     	;# 
   410     0812                     	;# 
   411     0812                     	;# 
   412     0813                     	;# 
   413     0814                     	;# 
   414     0815                     	;# 
   415     0816                     	;# 
   416     0817                     	;# 
   417     0818                     	;# 
   418     0819                     	;# 
   419     081A                     	;# 
   420     081A                     	;# 
   421     081B                     	;# 
   422     081C                     	;# 
   423     081C                     	;# 
   424     081D                     	;# 
   425     088C                     	;# 
   426     088D                     	;# 
   427     088E                     	;# 
   428     088F                     	;# 
   429     088F                     	;# 
   430     0890                     	;# 
   431     0891                     	;# 
   432     0892                     	;# 
   433     0893                     	;# 
   434     0893                     	;# 
   435     0894                     	;# 
   436     0895                     	;# 
   437     0896                     	;# 
   438     0897                     	;# 
   439     0897                     	;# 
   440     0898                     	;# 
   441     0899                     	;# 
   442     0D8C                     	;# 
   443     0D8C                     	;# 
   444     0D8D                     	;# 
   445     0D8E                     	;# 
   446     0D8F                     	;# 
   447     0D8F                     	;# 
   448     0D90                     	;# 
   449     0D91                     	;# 
   450     0D92                     	;# 
   451     0D92                     	;# 
   452     0D93                     	;# 
   453     0D94                     	;# 
   454     0D95                     	;# 
   455     0D95                     	;# 
   456     0D96                     	;# 
   457     0D97                     	;# 
   458     0D98                     	;# 
   459     0D99                     	;# 
   460     0D9A                     	;# 
   461     0D9B                     	;# 
   462     0D9C                     	;# 
   463     0D9D                     	;# 
   464     0D9E                     	;# 
   465     0D9E                     	;# 
   466     0D9F                     	;# 
   467     0DA0                     	;# 
   468     0DA1                     	;# 
   469     0DA1                     	;# 
   470     0DA2                     	;# 
   471     0DA3                     	;# 
   472     0DA4                     	;# 
   473     0DA4                     	;# 
   474     0DA5                     	;# 
   475     0DA6                     	;# 
   476     0DA7                     	;# 
   477     0DA7                     	;# 
   478     0DA8                     	;# 
   479     0DA9                     	;# 
   480     0DAA                     	;# 
   481     0DAB                     	;# 
   482     0DAC                     	;# 
   483     0DAD                     	;# 
   484     0DAE                     	;# 
   485     0DAF                     	;# 
   486     0E0F                     	;# 
   487     0E10                     	;# 
   488     0E11                     	;# 
   489     0E12                     	;# 
   490     0E13                     	;# 
   491     0E14                     	;# 
   492     0E15                     	;# 
   493     0E16                     	;# 
   494     0E17                     	;# 
   495     0E17                     	;# 
   496     0E18                     	;# 
   497     0E18                     	;# 
   498     0E19                     	;# 
   499     0E1A                     	;# 
   500     0E1B                     	;# 
   501     0E1B                     	;# 
   502     0E1C                     	;# 
   503     0E1D                     	;# 
   504     0E1E                     	;# 
   505     0E1E                     	;# 
   506     0E1F                     	;# 
   507     0E20                     	;# 
   508     0E21                     	;# 
   509     0E22                     	;# 
   510     0E23                     	;# 
   511     0E24                     	;# 
   512     0E25                     	;# 
   513     0E26                     	;# 
   514     0E27                     	;# 
   515     0E28                     	;# 
   516     0E29                     	;# 
   517     0E2A                     	;# 
   518     0E2B                     	;# 
   519     0E2C                     	;# 
   520     0E2D                     	;# 
   521     0E2E                     	;# 
   522     0E90                     	;# 
   523     0E91                     	;# 
   524     0E92                     	;# 
   525     0E94                     	;# 
   526     0E95                     	;# 
   527     0E9C                     	;# 
   528     0E9D                     	;# 
   529     0E9E                     	;# 
   530     0E9F                     	;# 
   531     0EA0                     	;# 
   532     0EA1                     	;# 
   533     0EA2                     	;# 
   534     0EA3                     	;# 
   535     0EA4                     	;# 
   536     0EA5                     	;# 
   537     0EA6                     	;# 
   538     0EA7                     	;# 
   539     0F0F                     	;# 
   540     0F10                     	;# 
   541     0F11                     	;# 
   542     0F12                     	;# 
   543     0F13                     	;# 
   544     0F14                     	;# 
   545     0F15                     	;# 
   546     0F16                     	;# 
   547     0F17                     	;# 
   548     0F18                     	;# 
   549     0F19                     	;# 
   550     0F1A                     	;# 
   551     0F1B                     	;# 
   552     0F1C                     	;# 
   553     0F1D                     	;# 
   554     0F1E                     	;# 
   555     0F1F                     	;# 
   556     0F20                     	;# 
   557     0F21                     	;# 
   558     0F22                     	;# 
   559     0F23                     	;# 
   560     0FE4                     	;# 
   561     0FE5                     	;# 
   562     0FE6                     	;# 
   563     0FE7                     	;# 
   564     0FE8                     	;# 
   565     0FE9                     	;# 
   566     0FEA                     	;# 
   567     0FEB                     	;# 
   568     0FED                     	;# 
   569     0FEE                     	;# 
   570     0FEF                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000D                     	;# 
   585     000E                     	;# 
   586     0010                     	;# 
   587     0011                     	;# 
   588     0012                     	;# 
   589     0013                     	;# 
   590     0014                     	;# 
   591     0015                     	;# 
   592     0016                     	;# 
   593     0016                     	;# 
   594     0017                     	;# 
   595     0018                     	;# 
   596     0019                     	;# 
   597     001A                     	;# 
   598     001A                     	;# 
   599     001B                     	;# 
   600     001B                     	;# 
   601     001C                     	;# 
   602     001D                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     008E                     	;# 
   608     0090                     	;# 
   609     0091                     	;# 
   610     0092                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0098                     	;# 
   616     0099                     	;# 
   617     009A                     	;# 
   618     009B                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     009F                     	;# 
   624     010C                     	;# 
   625     010D                     	;# 
   626     010E                     	;# 
   627     0111                     	;# 
   628     0112                     	;# 
   629     0113                     	;# 
   630     0114                     	;# 
   631     0115                     	;# 
   632     0116                     	;# 
   633     0117                     	;# 
   634     0118                     	;# 
   635     0119                     	;# 
   636     011C                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     018E                     	;# 
   640     0191                     	;# 
   641     0191                     	;# 
   642     0192                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0197                     	;# 
   649     0199                     	;# 
   650     0199                     	;# 
   651     0199                     	;# 
   652     019A                     	;# 
   653     019A                     	;# 
   654     019A                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019B                     	;# 
   659     019B                     	;# 
   660     019C                     	;# 
   661     019C                     	;# 
   662     019C                     	;# 
   663     019D                     	;# 
   664     019D                     	;# 
   665     019D                     	;# 
   666     019E                     	;# 
   667     019E                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     019F                     	;# 
   671     019F                     	;# 
   672     019F                     	;# 
   673     019F                     	;# 
   674     020C                     	;# 
   675     020D                     	;# 
   676     020E                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0216                     	;# 
   690     0216                     	;# 
   691     0217                     	;# 
   692     0217                     	;# 
   693     028C                     	;# 
   694     028D                     	;# 
   695     028E                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0298                     	;# 
   702     0298                     	;# 
   703     0299                     	;# 
   704     029A                     	;# 
   705     029B                     	;# 
   706     029E                     	;# 
   707     030C                     	;# 
   708     030D                     	;# 
   709     030E                     	;# 
   710     038C                     	;# 
   711     038D                     	;# 
   712     038E                     	;# 
   713     0391                     	;# 
   714     0392                     	;# 
   715     0393                     	;# 
   716     0394                     	;# 
   717     0395                     	;# 
   718     0396                     	;# 
   719     0397                     	;# 
   720     0398                     	;# 
   721     0399                     	;# 
   722     040E                     	;# 
   723     0413                     	;# 
   724     0413                     	;# 
   725     0414                     	;# 
   726     0414                     	;# 
   727     0415                     	;# 
   728     0416                     	;# 
   729     0417                     	;# 
   730     0418                     	;# 
   731     041A                     	;# 
   732     041A                     	;# 
   733     041B                     	;# 
   734     041B                     	;# 
   735     041C                     	;# 
   736     041D                     	;# 
   737     041E                     	;# 
   738     041F                     	;# 
   739     0493                     	;# 
   740     0494                     	;# 
   741     0495                     	;# 
   742     0496                     	;# 
   743     049A                     	;# 
   744     049B                     	;# 
   745     049C                     	;# 
   746     049D                     	;# 
   747     058C                     	;# 
   748     058C                     	;# 
   749     058D                     	;# 
   750     058E                     	;# 
   751     058E                     	;# 
   752     058F                     	;# 
   753     0590                     	;# 
   754     0590                     	;# 
   755     0591                     	;# 
   756     0592                     	;# 
   757     0592                     	;# 
   758     0593                     	;# 
   759     0594                     	;# 
   760     0594                     	;# 
   761     0595                     	;# 
   762     0596                     	;# 
   763     0596                     	;# 
   764     0597                     	;# 
   765     0598                     	;# 
   766     0599                     	;# 
   767     059A                     	;# 
   768     059B                     	;# 
   769     059B                     	;# 
   770     059C                     	;# 
   771     059D                     	;# 
   772     060C                     	;# 
   773     060C                     	;# 
   774     060D                     	;# 
   775     060E                     	;# 
   776     060F                     	;# 
   777     060F                     	;# 
   778     0610                     	;# 
   779     0611                     	;# 
   780     0612                     	;# 
   781     0613                     	;# 
   782     0614                     	;# 
   783     0617                     	;# 
   784     0617                     	;# 
   785     0618                     	;# 
   786     0619                     	;# 
   787     061A                     	;# 
   788     061A                     	;# 
   789     061B                     	;# 
   790     061C                     	;# 
   791     0691                     	;# 
   792     0692                     	;# 
   793     0693                     	;# 
   794     0694                     	;# 
   795     0695                     	;# 
   796     0696                     	;# 
   797     0697                     	;# 
   798     0699                     	;# 
   799     069A                     	;# 
   800     0711                     	;# 
   801     0712                     	;# 
   802     0713                     	;# 
   803     0714                     	;# 
   804     0715                     	;# 
   805     0718                     	;# 
   806     0718                     	;# 
   807     0719                     	;# 
   808     071A                     	;# 
   809     071A                     	;# 
   810     071B                     	;# 
   811     071C                     	;# 
   812     071D                     	;# 
   813     0791                     	;# 
   814     0791                     	;# 
   815     0792                     	;# 
   816     0793                     	;# 
   817     0793                     	;# 
   818     0794                     	;# 
   819     0795                     	;# 
   820     0795                     	;# 
   821     0796                     	;# 
   822     0797                     	;# 
   823     0797                     	;# 
   824     0798                     	;# 
   825     0799                     	;# 
   826     079A                     	;# 
   827     080C                     	;# 
   828     080C                     	;# 
   829     080D                     	;# 
   830     080E                     	;# 
   831     080E                     	;# 
   832     080F                     	;# 
   833     0810                     	;# 
   834     0810                     	;# 
   835     0811                     	;# 
   836     0812                     	;# 
   837     0812                     	;# 
   838     0813                     	;# 
   839     0814                     	;# 
   840     0815                     	;# 
   841     0816                     	;# 
   842     0817                     	;# 
   843     0818                     	;# 
   844     0819                     	;# 
   845     081A                     	;# 
   846     081A                     	;# 
   847     081B                     	;# 
   848     081C                     	;# 
   849     081C                     	;# 
   850     081D                     	;# 
   851     088C                     	;# 
   852     088D                     	;# 
   853     088E                     	;# 
   854     088F                     	;# 
   855     088F                     	;# 
   856     0890                     	;# 
   857     0891                     	;# 
   858     0892                     	;# 
   859     0893                     	;# 
   860     0893                     	;# 
   861     0894                     	;# 
   862     0895                     	;# 
   863     0896                     	;# 
   864     0897                     	;# 
   865     0897                     	;# 
   866     0898                     	;# 
   867     0899                     	;# 
   868     0D8C                     	;# 
   869     0D8C                     	;# 
   870     0D8D                     	;# 
   871     0D8E                     	;# 
   872     0D8F                     	;# 
   873     0D8F                     	;# 
   874     0D90                     	;# 
   875     0D91                     	;# 
   876     0D92                     	;# 
   877     0D92                     	;# 
   878     0D93                     	;# 
   879     0D94                     	;# 
   880     0D95                     	;# 
   881     0D95                     	;# 
   882     0D96                     	;# 
   883     0D97                     	;# 
   884     0D98                     	;# 
   885     0D99                     	;# 
   886     0D9A                     	;# 
   887     0D9B                     	;# 
   888     0D9C                     	;# 
   889     0D9D                     	;# 
   890     0D9E                     	;# 
   891     0D9E                     	;# 
   892     0D9F                     	;# 
   893     0DA0                     	;# 
   894     0DA1                     	;# 
   895     0DA1                     	;# 
   896     0DA2                     	;# 
   897     0DA3                     	;# 
   898     0DA4                     	;# 
   899     0DA4                     	;# 
   900     0DA5                     	;# 
   901     0DA6                     	;# 
   902     0DA7                     	;# 
   903     0DA7                     	;# 
   904     0DA8                     	;# 
   905     0DA9                     	;# 
   906     0DAA                     	;# 
   907     0DAB                     	;# 
   908     0DAC                     	;# 
   909     0DAD                     	;# 
   910     0DAE                     	;# 
   911     0DAF                     	;# 
   912     0E0F                     	;# 
   913     0E10                     	;# 
   914     0E11                     	;# 
   915     0E12                     	;# 
   916     0E13                     	;# 
   917     0E14                     	;# 
   918     0E15                     	;# 
   919     0E16                     	;# 
   920     0E17                     	;# 
   921     0E17                     	;# 
   922     0E18                     	;# 
   923     0E18                     	;# 
   924     0E19                     	;# 
   925     0E1A                     	;# 
   926     0E1B                     	;# 
   927     0E1B                     	;# 
   928     0E1C                     	;# 
   929     0E1D                     	;# 
   930     0E1E                     	;# 
   931     0E1E                     	;# 
   932     0E1F                     	;# 
   933     0E20                     	;# 
   934     0E21                     	;# 
   935     0E22                     	;# 
   936     0E23                     	;# 
   937     0E24                     	;# 
   938     0E25                     	;# 
   939     0E26                     	;# 
   940     0E27                     	;# 
   941     0E28                     	;# 
   942     0E29                     	;# 
   943     0E2A                     	;# 
   944     0E2B                     	;# 
   945     0E2C                     	;# 
   946     0E2D                     	;# 
   947     0E2E                     	;# 
   948     0E90                     	;# 
   949     0E91                     	;# 
   950     0E92                     	;# 
   951     0E94                     	;# 
   952     0E95                     	;# 
   953     0E9C                     	;# 
   954     0E9D                     	;# 
   955     0E9E                     	;# 
   956     0E9F                     	;# 
   957     0EA0                     	;# 
   958     0EA1                     	;# 
   959     0EA2                     	;# 
   960     0EA3                     	;# 
   961     0EA4                     	;# 
   962     0EA5                     	;# 
   963     0EA6                     	;# 
   964     0EA7                     	;# 
   965     0F0F                     	;# 
   966     0F10                     	;# 
   967     0F11                     	;# 
   968     0F12                     	;# 
   969     0F13                     	;# 
   970     0F14                     	;# 
   971     0F15                     	;# 
   972     0F16                     	;# 
   973     0F17                     	;# 
   974     0F18                     	;# 
   975     0F19                     	;# 
   976     0F1A                     	;# 
   977     0F1B                     	;# 
   978     0F1C                     	;# 
   979     0F1D                     	;# 
   980     0F1E                     	;# 
   981     0F1F                     	;# 
   982     0F20                     	;# 
   983     0F21                     	;# 
   984     0F22                     	;# 
   985     0F23                     	;# 
   986     0FE4                     	;# 
   987     0FE5                     	;# 
   988     0FE6                     	;# 
   989     0FE7                     	;# 
   990     0FE8                     	;# 
   991     0FE9                     	;# 
   992     0FEA                     	;# 
   993     0FEB                     	;# 
   994     0FED                     	;# 
   995     0FEE                     	;# 
   996     0FEF                     	;# 
   997     0000                     	;# 
   998     0001                     	;# 
   999     0002                     	;# 
  1000     0003                     	;# 
  1001     0004                     	;# 
  1002     0005                     	;# 
  1003     0006                     	;# 
  1004     0007                     	;# 
  1005     0008                     	;# 
  1006     0009                     	;# 
  1007     000A                     	;# 
  1008     000B                     	;# 
  1009     000C                     	;# 
  1010     000D                     	;# 
  1011     000E                     	;# 
  1012     0010                     	;# 
  1013     0011                     	;# 
  1014     0012                     	;# 
  1015     0013                     	;# 
  1016     0014                     	;# 
  1017     0015                     	;# 
  1018     0016                     	;# 
  1019     0016                     	;# 
  1020     0017                     	;# 
  1021     0018                     	;# 
  1022     0019                     	;# 
  1023     001A                     	;# 
  1024     001A                     	;# 
  1025     001B                     	;# 
  1026     001B                     	;# 
  1027     001C                     	;# 
  1028     001D                     	;# 
  1029     001E                     	;# 
  1030     001F                     	;# 
  1031     008C                     	;# 
  1032     008D                     	;# 
  1033     008E                     	;# 
  1034     0090                     	;# 
  1035     0091                     	;# 
  1036     0092                     	;# 
  1037     0093                     	;# 
  1038     0094                     	;# 
  1039     0095                     	;# 
  1040     0096                     	;# 
  1041     0098                     	;# 
  1042     0099                     	;# 
  1043     009A                     	;# 
  1044     009B                     	;# 
  1045     009B                     	;# 
  1046     009C                     	;# 
  1047     009D                     	;# 
  1048     009E                     	;# 
  1049     009F                     	;# 
  1050     010C                     	;# 
  1051     010D                     	;# 
  1052     010E                     	;# 
  1053     0111                     	;# 
  1054     0112                     	;# 
  1055     0113                     	;# 
  1056     0114                     	;# 
  1057     0115                     	;# 
  1058     0116                     	;# 
  1059     0117                     	;# 
  1060     0118                     	;# 
  1061     0119                     	;# 
  1062     011C                     	;# 
  1063     018C                     	;# 
  1064     018D                     	;# 
  1065     018E                     	;# 
  1066     0191                     	;# 
  1067     0191                     	;# 
  1068     0192                     	;# 
  1069     0193                     	;# 
  1070     0193                     	;# 
  1071     0194                     	;# 
  1072     0195                     	;# 
  1073     0196                     	;# 
  1074     0197                     	;# 
  1075     0199                     	;# 
  1076     0199                     	;# 
  1077     0199                     	;# 
  1078     019A                     	;# 
  1079     019A                     	;# 
  1080     019A                     	;# 
  1081     019B                     	;# 
  1082     019B                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019B                     	;# 
  1086     019C                     	;# 
  1087     019C                     	;# 
  1088     019C                     	;# 
  1089     019D                     	;# 
  1090     019D                     	;# 
  1091     019D                     	;# 
  1092     019E                     	;# 
  1093     019E                     	;# 
  1094     019E                     	;# 
  1095     019F                     	;# 
  1096     019F                     	;# 
  1097     019F                     	;# 
  1098     019F                     	;# 
  1099     019F                     	;# 
  1100     020C                     	;# 
  1101     020D                     	;# 
  1102     020E                     	;# 
  1103     0211                     	;# 
  1104     0211                     	;# 
  1105     0212                     	;# 
  1106     0212                     	;# 
  1107     0213                     	;# 
  1108     0213                     	;# 
  1109     0214                     	;# 
  1110     0214                     	;# 
  1111     0215                     	;# 
  1112     0215                     	;# 
  1113     0215                     	;# 
  1114     0215                     	;# 
  1115     0216                     	;# 
  1116     0216                     	;# 
  1117     0217                     	;# 
  1118     0217                     	;# 
  1119     028C                     	;# 
  1120     028D                     	;# 
  1121     028E                     	;# 
  1122     0291                     	;# 
  1123     0291                     	;# 
  1124     0292                     	;# 
  1125     0293                     	;# 
  1126     0294                     	;# 
  1127     0298                     	;# 
  1128     0298                     	;# 
  1129     0299                     	;# 
  1130     029A                     	;# 
  1131     029B                     	;# 
  1132     029E                     	;# 
  1133     030C                     	;# 
  1134     030D                     	;# 
  1135     030E                     	;# 
  1136     038C                     	;# 
  1137     038D                     	;# 
  1138     038E                     	;# 
  1139     0391                     	;# 
  1140     0392                     	;# 
  1141     0393                     	;# 
  1142     0394                     	;# 
  1143     0395                     	;# 
  1144     0396                     	;# 
  1145     0397                     	;# 
  1146     0398                     	;# 
  1147     0399                     	;# 
  1148     040E                     	;# 
  1149     0413                     	;# 
  1150     0413                     	;# 
  1151     0414                     	;# 
  1152     0414                     	;# 
  1153     0415                     	;# 
  1154     0416                     	;# 
  1155     0417                     	;# 
  1156     0418                     	;# 
  1157     041A                     	;# 
  1158     041A                     	;# 
  1159     041B                     	;# 
  1160     041B                     	;# 
  1161     041C                     	;# 
  1162     041D                     	;# 
  1163     041E                     	;# 
  1164     041F                     	;# 
  1165     0493                     	;# 
  1166     0494                     	;# 
  1167     0495                     	;# 
  1168     0496                     	;# 
  1169     049A                     	;# 
  1170     049B                     	;# 
  1171     049C                     	;# 
  1172     049D                     	;# 
  1173     058C                     	;# 
  1174     058C                     	;# 
  1175     058D                     	;# 
  1176     058E                     	;# 
  1177     058E                     	;# 
  1178     058F                     	;# 
  1179     0590                     	;# 
  1180     0590                     	;# 
  1181     0591                     	;# 
  1182     0592                     	;# 
  1183     0592                     	;# 
  1184     0593                     	;# 
  1185     0594                     	;# 
  1186     0594                     	;# 
  1187     0595                     	;# 
  1188     0596                     	;# 
  1189     0596                     	;# 
  1190     0597                     	;# 
  1191     0598                     	;# 
  1192     0599                     	;# 
  1193     059A                     	;# 
  1194     059B                     	;# 
  1195     059B                     	;# 
  1196     059C                     	;# 
  1197     059D                     	;# 
  1198     060C                     	;# 
  1199     060C                     	;# 
  1200     060D                     	;# 
  1201     060E                     	;# 
  1202     060F                     	;# 
  1203     060F                     	;# 
  1204     0610                     	;# 
  1205     0611                     	;# 
  1206     0612                     	;# 
  1207     0613                     	;# 
  1208     0614                     	;# 
  1209     0617                     	;# 
  1210     0617                     	;# 
  1211     0618                     	;# 
  1212     0619                     	;# 
  1213     061A                     	;# 
  1214     061A                     	;# 
  1215     061B                     	;# 
  1216     061C                     	;# 
  1217     0691                     	;# 
  1218     0692                     	;# 
  1219     0693                     	;# 
  1220     0694                     	;# 
  1221     0695                     	;# 
  1222     0696                     	;# 
  1223     0697                     	;# 
  1224     0699                     	;# 
  1225     069A                     	;# 
  1226     0711                     	;# 
  1227     0712                     	;# 
  1228     0713                     	;# 
  1229     0714                     	;# 
  1230     0715                     	;# 
  1231     0718                     	;# 
  1232     0718                     	;# 
  1233     0719                     	;# 
  1234     071A                     	;# 
  1235     071A                     	;# 
  1236     071B                     	;# 
  1237     071C                     	;# 
  1238     071D                     	;# 
  1239     0791                     	;# 
  1240     0791                     	;# 
  1241     0792                     	;# 
  1242     0793                     	;# 
  1243     0793                     	;# 
  1244     0794                     	;# 
  1245     0795                     	;# 
  1246     0795                     	;# 
  1247     0796                     	;# 
  1248     0797                     	;# 
  1249     0797                     	;# 
  1250     0798                     	;# 
  1251     0799                     	;# 
  1252     079A                     	;# 
  1253     080C                     	;# 
  1254     080C                     	;# 
  1255     080D                     	;# 
  1256     080E                     	;# 
  1257     080E                     	;# 
  1258     080F                     	;# 
  1259     0810                     	;# 
  1260     0810                     	;# 
  1261     0811                     	;# 
  1262     0812                     	;# 
  1263     0812                     	;# 
  1264     0813                     	;# 
  1265     0814                     	;# 
  1266     0815                     	;# 
  1267     0816                     	;# 
  1268     0817                     	;# 
  1269     0818                     	;# 
  1270     0819                     	;# 
  1271     081A                     	;# 
  1272     081A                     	;# 
  1273     081B                     	;# 
  1274     081C                     	;# 
  1275     081C                     	;# 
  1276     081D                     	;# 
  1277     088C                     	;# 
  1278     088D                     	;# 
  1279     088E                     	;# 
  1280     088F                     	;# 
  1281     088F                     	;# 
  1282     0890                     	;# 
  1283     0891                     	;# 
  1284     0892                     	;# 
  1285     0893                     	;# 
  1286     0893                     	;# 
  1287     0894                     	;# 
  1288     0895                     	;# 
  1289     0896                     	;# 
  1290     0897                     	;# 
  1291     0897                     	;# 
  1292     0898                     	;# 
  1293     0899                     	;# 
  1294     0D8C                     	;# 
  1295     0D8C                     	;# 
  1296     0D8D                     	;# 
  1297     0D8E                     	;# 
  1298     0D8F                     	;# 
  1299     0D8F                     	;# 
  1300     0D90                     	;# 
  1301     0D91                     	;# 
  1302     0D92                     	;# 
  1303     0D92                     	;# 
  1304     0D93                     	;# 
  1305     0D94                     	;# 
  1306     0D95                     	;# 
  1307     0D95                     	;# 
  1308     0D96                     	;# 
  1309     0D97                     	;# 
  1310     0D98                     	;# 
  1311     0D99                     	;# 
  1312     0D9A                     	;# 
  1313     0D9B                     	;# 
  1314     0D9C                     	;# 
  1315     0D9D                     	;# 
  1316     0D9E                     	;# 
  1317     0D9E                     	;# 
  1318     0D9F                     	;# 
  1319     0DA0                     	;# 
  1320     0DA1                     	;# 
  1321     0DA1                     	;# 
  1322     0DA2                     	;# 
  1323     0DA3                     	;# 
  1324     0DA4                     	;# 
  1325     0DA4                     	;# 
  1326     0DA5                     	;# 
  1327     0DA6                     	;# 
  1328     0DA7                     	;# 
  1329     0DA7                     	;# 
  1330     0DA8                     	;# 
  1331     0DA9                     	;# 
  1332     0DAA                     	;# 
  1333     0DAB                     	;# 
  1334     0DAC                     	;# 
  1335     0DAD                     	;# 
  1336     0DAE                     	;# 
  1337     0DAF                     	;# 
  1338     0E0F                     	;# 
  1339     0E10                     	;# 
  1340     0E11                     	;# 
  1341     0E12                     	;# 
  1342     0E13                     	;# 
  1343     0E14                     	;# 
  1344     0E15                     	;# 
  1345     0E16                     	;# 
  1346     0E17                     	;# 
  1347     0E17                     	;# 
  1348     0E18                     	;# 
  1349     0E18                     	;# 
  1350     0E19                     	;# 
  1351     0E1A                     	;# 
  1352     0E1B                     	;# 
  1353     0E1B                     	;# 
  1354     0E1C                     	;# 
  1355     0E1D                     	;# 
  1356     0E1E                     	;# 
  1357     0E1E                     	;# 
  1358     0E1F                     	;# 
  1359     0E20                     	;# 
  1360     0E21                     	;# 
  1361     0E22                     	;# 
  1362     0E23                     	;# 
  1363     0E24                     	;# 
  1364     0E25                     	;# 
  1365     0E26                     	;# 
  1366     0E27                     	;# 
  1367     0E28                     	;# 
  1368     0E29                     	;# 
  1369     0E2A                     	;# 
  1370     0E2B                     	;# 
  1371     0E2C                     	;# 
  1372     0E2D                     	;# 
  1373     0E2E                     	;# 
  1374     0E90                     	;# 
  1375     0E91                     	;# 
  1376     0E92                     	;# 
  1377     0E94                     	;# 
  1378     0E95                     	;# 
  1379     0E9C                     	;# 
  1380     0E9D                     	;# 
  1381     0E9E                     	;# 
  1382     0E9F                     	;# 
  1383     0EA0                     	;# 
  1384     0EA1                     	;# 
  1385     0EA2                     	;# 
  1386     0EA3                     	;# 
  1387     0EA4                     	;# 
  1388     0EA5                     	;# 
  1389     0EA6                     	;# 
  1390     0EA7                     	;# 
  1391     0F0F                     	;# 
  1392     0F10                     	;# 
  1393     0F11                     	;# 
  1394     0F12                     	;# 
  1395     0F13                     	;# 
  1396     0F14                     	;# 
  1397     0F15                     	;# 
  1398     0F16                     	;# 
  1399     0F17                     	;# 
  1400     0F18                     	;# 
  1401     0F19                     	;# 
  1402     0F1A                     	;# 
  1403     0F1B                     	;# 
  1404     0F1C                     	;# 
  1405     0F1D                     	;# 
  1406     0F1E                     	;# 
  1407     0F1F                     	;# 
  1408     0F20                     	;# 
  1409     0F21                     	;# 
  1410     0F22                     	;# 
  1411     0F23                     	;# 
  1412     0FE4                     	;# 
  1413     0FE5                     	;# 
  1414     0FE6                     	;# 
  1415     0FE7                     	;# 
  1416     0FE8                     	;# 
  1417     0FE9                     	;# 
  1418     0FEA                     	;# 
  1419     0FEB                     	;# 
  1420     0FED                     	;# 
  1421     0FEE                     	;# 
  1422     0FEF                     	;# 
  1423     0000                     	;# 
  1424     0001                     	;# 
  1425     0002                     	;# 
  1426     0003                     	;# 
  1427     0004                     	;# 
  1428     0005                     	;# 
  1429     0006                     	;# 
  1430     0007                     	;# 
  1431     0008                     	;# 
  1432     0009                     	;# 
  1433     000A                     	;# 
  1434     000B                     	;# 
  1435     000C                     	;# 
  1436     000D                     	;# 
  1437     000E                     	;# 
  1438     0010                     	;# 
  1439     0011                     	;# 
  1440     0012                     	;# 
  1441     0013                     	;# 
  1442     0014                     	;# 
  1443     0015                     	;# 
  1444     0016                     	;# 
  1445     0016                     	;# 
  1446     0017                     	;# 
  1447     0018                     	;# 
  1448     0019                     	;# 
  1449     001A                     	;# 
  1450     001A                     	;# 
  1451     001B                     	;# 
  1452     001B                     	;# 
  1453     001C                     	;# 
  1454     001D                     	;# 
  1455     001E                     	;# 
  1456     001F                     	;# 
  1457     008C                     	;# 
  1458     008D                     	;# 
  1459     008E                     	;# 
  1460     0090                     	;# 
  1461     0091                     	;# 
  1462     0092                     	;# 
  1463     0093                     	;# 
  1464     0094                     	;# 
  1465     0095                     	;# 
  1466     0096                     	;# 
  1467     0098                     	;# 
  1468     0099                     	;# 
  1469     009A                     	;# 
  1470     009B                     	;# 
  1471     009B                     	;# 
  1472     009C                     	;# 
  1473     009D                     	;# 
  1474     009E                     	;# 
  1475     009F                     	;# 
  1476     010C                     	;# 
  1477     010D                     	;# 
  1478     010E                     	;# 
  1479     0111                     	;# 
  1480     0112                     	;# 
  1481     0113                     	;# 
  1482     0114                     	;# 
  1483     0115                     	;# 
  1484     0116                     	;# 
  1485     0117                     	;# 
  1486     0118                     	;# 
  1487     0119                     	;# 
  1488     011C                     	;# 
  1489     018C                     	;# 
  1490     018D                     	;# 
  1491     018E                     	;# 
  1492     0191                     	;# 
  1493     0191                     	;# 
  1494     0192                     	;# 
  1495     0193                     	;# 
  1496     0193                     	;# 
  1497     0194                     	;# 
  1498     0195                     	;# 
  1499     0196                     	;# 
  1500     0197                     	;# 
  1501     0199                     	;# 
  1502     0199                     	;# 
  1503     0199                     	;# 
  1504     019A                     	;# 
  1505     019A                     	;# 
  1506     019A                     	;# 
  1507     019B                     	;# 
  1508     019B                     	;# 
  1509     019B                     	;# 
  1510     019B                     	;# 
  1511     019B                     	;# 
  1512     019C                     	;# 
  1513     019C                     	;# 
  1514     019C                     	;# 
  1515     019D                     	;# 
  1516     019D                     	;# 
  1517     019D                     	;# 
  1518     019E                     	;# 
  1519     019E                     	;# 
  1520     019E                     	;# 
  1521     019F                     	;# 
  1522     019F                     	;# 
  1523     019F                     	;# 
  1524     019F                     	;# 
  1525     019F                     	;# 
  1526     020C                     	;# 
  1527     020D                     	;# 
  1528     020E                     	;# 
  1529     0211                     	;# 
  1530     0211                     	;# 
  1531     0212                     	;# 
  1532     0212                     	;# 
  1533     0213                     	;# 
  1534     0213                     	;# 
  1535     0214                     	;# 
  1536     0214                     	;# 
  1537     0215                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0215                     	;# 
  1541     0216                     	;# 
  1542     0216                     	;# 
  1543     0217                     	;# 
  1544     0217                     	;# 
  1545     028C                     	;# 
  1546     028D                     	;# 
  1547     028E                     	;# 
  1548     0291                     	;# 
  1549     0291                     	;# 
  1550     0292                     	;# 
  1551     0293                     	;# 
  1552     0294                     	;# 
  1553     0298                     	;# 
  1554     0298                     	;# 
  1555     0299                     	;# 
  1556     029A                     	;# 
  1557     029B                     	;# 
  1558     029E                     	;# 
  1559     030C                     	;# 
  1560     030D                     	;# 
  1561     030E                     	;# 
  1562     038C                     	;# 
  1563     038D                     	;# 
  1564     038E                     	;# 
  1565     0391                     	;# 
  1566     0392                     	;# 
  1567     0393                     	;# 
  1568     0394                     	;# 
  1569     0395                     	;# 
  1570     0396                     	;# 
  1571     0397                     	;# 
  1572     0398                     	;# 
  1573     0399                     	;# 
  1574     040E                     	;# 
  1575     0413                     	;# 
  1576     0413                     	;# 
  1577     0414                     	;# 
  1578     0414                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     0418                     	;# 
  1583     041A                     	;# 
  1584     041A                     	;# 
  1585     041B                     	;# 
  1586     041B                     	;# 
  1587     041C                     	;# 
  1588     041D                     	;# 
  1589     041E                     	;# 
  1590     041F                     	;# 
  1591     0493                     	;# 
  1592     0494                     	;# 
  1593     0495                     	;# 
  1594     0496                     	;# 
  1595     049A                     	;# 
  1596     049B                     	;# 
  1597     049C                     	;# 
  1598     049D                     	;# 
  1599     058C                     	;# 
  1600     058C                     	;# 
  1601     058D                     	;# 
  1602     058E                     	;# 
  1603     058E                     	;# 
  1604     058F                     	;# 
  1605     0590                     	;# 
  1606     0590                     	;# 
  1607     0591                     	;# 
  1608     0592                     	;# 
  1609     0592                     	;# 
  1610     0593                     	;# 
  1611     0594                     	;# 
  1612     0594                     	;# 
  1613     0595                     	;# 
  1614     0596                     	;# 
  1615     0596                     	;# 
  1616     0597                     	;# 
  1617     0598                     	;# 
  1618     0599                     	;# 
  1619     059A                     	;# 
  1620     059B                     	;# 
  1621     059B                     	;# 
  1622     059C                     	;# 
  1623     059D                     	;# 
  1624     060C                     	;# 
  1625     060C                     	;# 
  1626     060D                     	;# 
  1627     060E                     	;# 
  1628     060F                     	;# 
  1629     060F                     	;# 
  1630     0610                     	;# 
  1631     0611                     	;# 
  1632     0612                     	;# 
  1633     0613                     	;# 
  1634     0614                     	;# 
  1635     0617                     	;# 
  1636     0617                     	;# 
  1637     0618                     	;# 
  1638     0619                     	;# 
  1639     061A                     	;# 
  1640     061A                     	;# 
  1641     061B                     	;# 
  1642     061C                     	;# 
  1643     0691                     	;# 
  1644     0692                     	;# 
  1645     0693                     	;# 
  1646     0694                     	;# 
  1647     0695                     	;# 
  1648     0696                     	;# 
  1649     0697                     	;# 
  1650     0699                     	;# 
  1651     069A                     	;# 
  1652     0711                     	;# 
  1653     0712                     	;# 
  1654     0713                     	;# 
  1655     0714                     	;# 
  1656     0715                     	;# 
  1657     0718                     	;# 
  1658     0718                     	;# 
  1659     0719                     	;# 
  1660     071A                     	;# 
  1661     071A                     	;# 
  1662     071B                     	;# 
  1663     071C                     	;# 
  1664     071D                     	;# 
  1665     0791                     	;# 
  1666     0791                     	;# 
  1667     0792                     	;# 
  1668     0793                     	;# 
  1669     0793                     	;# 
  1670     0794                     	;# 
  1671     0795                     	;# 
  1672     0795                     	;# 
  1673     0796                     	;# 
  1674     0797                     	;# 
  1675     0797                     	;# 
  1676     0798                     	;# 
  1677     0799                     	;# 
  1678     079A                     	;# 
  1679     080C                     	;# 
  1680     080C                     	;# 
  1681     080D                     	;# 
  1682     080E                     	;# 
  1683     080E                     	;# 
  1684     080F                     	;# 
  1685     0810                     	;# 
  1686     0810                     	;# 
  1687     0811                     	;# 
  1688     0812                     	;# 
  1689     0812                     	;# 
  1690     0813                     	;# 
  1691     0814                     	;# 
  1692     0815                     	;# 
  1693     0816                     	;# 
  1694     0817                     	;# 
  1695     0818                     	;# 
  1696     0819                     	;# 
  1697     081A                     	;# 
  1698     081A                     	;# 
  1699     081B                     	;# 
  1700     081C                     	;# 
  1701     081C                     	;# 
  1702     081D                     	;# 
  1703     088C                     	;# 
  1704     088D                     	;# 
  1705     088E                     	;# 
  1706     088F                     	;# 
  1707     088F                     	;# 
  1708     0890                     	;# 
  1709     0891                     	;# 
  1710     0892                     	;# 
  1711     0893                     	;# 
  1712     0893                     	;# 
  1713     0894                     	;# 
  1714     0895                     	;# 
  1715     0896                     	;# 
  1716     0897                     	;# 
  1717     0897                     	;# 
  1718     0898                     	;# 
  1719     0899                     	;# 
  1720     0D8C                     	;# 
  1721     0D8C                     	;# 
  1722     0D8D                     	;# 
  1723     0D8E                     	;# 
  1724     0D8F                     	;# 
  1725     0D8F                     	;# 
  1726     0D90                     	;# 
  1727     0D91                     	;# 
  1728     0D92                     	;# 
  1729     0D92                     	;# 
  1730     0D93                     	;# 
  1731     0D94                     	;# 
  1732     0D95                     	;# 
  1733     0D95                     	;# 
  1734     0D96                     	;# 
  1735     0D97                     	;# 
  1736     0D98                     	;# 
  1737     0D99                     	;# 
  1738     0D9A                     	;# 
  1739     0D9B                     	;# 
  1740     0D9C                     	;# 
  1741     0D9D                     	;# 
  1742     0D9E                     	;# 
  1743     0D9E                     	;# 
  1744     0D9F                     	;# 
  1745     0DA0                     	;# 
  1746     0DA1                     	;# 
  1747     0DA1                     	;# 
  1748     0DA2                     	;# 
  1749     0DA3                     	;# 
  1750     0DA4                     	;# 
  1751     0DA4                     	;# 
  1752     0DA5                     	;# 
  1753     0DA6                     	;# 
  1754     0DA7                     	;# 
  1755     0DA7                     	;# 
  1756     0DA8                     	;# 
  1757     0DA9                     	;# 
  1758     0DAA                     	;# 
  1759     0DAB                     	;# 
  1760     0DAC                     	;# 
  1761     0DAD                     	;# 
  1762     0DAE                     	;# 
  1763     0DAF                     	;# 
  1764     0E0F                     	;# 
  1765     0E10                     	;# 
  1766     0E11                     	;# 
  1767     0E12                     	;# 
  1768     0E13                     	;# 
  1769     0E14                     	;# 
  1770     0E15                     	;# 
  1771     0E16                     	;# 
  1772     0E17                     	;# 
  1773     0E17                     	;# 
  1774     0E18                     	;# 
  1775     0E18                     	;# 
  1776     0E19                     	;# 
  1777     0E1A                     	;# 
  1778     0E1B                     	;# 
  1779     0E1B                     	;# 
  1780     0E1C                     	;# 
  1781     0E1D                     	;# 
  1782     0E1E                     	;# 
  1783     0E1E                     	;# 
  1784     0E1F                     	;# 
  1785     0E20                     	;# 
  1786     0E21                     	;# 
  1787     0E22                     	;# 
  1788     0E23                     	;# 
  1789     0E24                     	;# 
  1790     0E25                     	;# 
  1791     0E26                     	;# 
  1792     0E27                     	;# 
  1793     0E28                     	;# 
  1794     0E29                     	;# 
  1795     0E2A                     	;# 
  1796     0E2B                     	;# 
  1797     0E2C                     	;# 
  1798     0E2D                     	;# 
  1799     0E2E                     	;# 
  1800     0E90                     	;# 
  1801     0E91                     	;# 
  1802     0E92                     	;# 
  1803     0E94                     	;# 
  1804     0E95                     	;# 
  1805     0E9C                     	;# 
  1806     0E9D                     	;# 
  1807     0E9E                     	;# 
  1808     0E9F                     	;# 
  1809     0EA0                     	;# 
  1810     0EA1                     	;# 
  1811     0EA2                     	;# 
  1812     0EA3                     	;# 
  1813     0EA4                     	;# 
  1814     0EA5                     	;# 
  1815     0EA6                     	;# 
  1816     0EA7                     	;# 
  1817     0F0F                     	;# 
  1818     0F10                     	;# 
  1819     0F11                     	;# 
  1820     0F12                     	;# 
  1821     0F13                     	;# 
  1822     0F14                     	;# 
  1823     0F15                     	;# 
  1824     0F16                     	;# 
  1825     0F17                     	;# 
  1826     0F18                     	;# 
  1827     0F19                     	;# 
  1828     0F1A                     	;# 
  1829     0F1B                     	;# 
  1830     0F1C                     	;# 
  1831     0F1D                     	;# 
  1832     0F1E                     	;# 
  1833     0F1F                     	;# 
  1834     0F20                     	;# 
  1835     0F21                     	;# 
  1836     0F22                     	;# 
  1837     0F23                     	;# 
  1838     0FE4                     	;# 
  1839     0FE5                     	;# 
  1840     0FE6                     	;# 
  1841     0FE7                     	;# 
  1842     0FE8                     	;# 
  1843     0FE9                     	;# 
  1844     0FEA                     	;# 
  1845     0FEB                     	;# 
  1846     0FED                     	;# 
  1847     0FEE                     	;# 
  1848     0FEF                     	;# 
  1849     0000                     	;# 
  1850     0001                     	;# 
  1851     0002                     	;# 
  1852     0003                     	;# 
  1853     0004                     	;# 
  1854     0005                     	;# 
  1855     0006                     	;# 
  1856     0007                     	;# 
  1857     0008                     	;# 
  1858     0009                     	;# 
  1859     000A                     	;# 
  1860     000B                     	;# 
  1861     000C                     	;# 
  1862     000D                     	;# 
  1863     000E                     	;# 
  1864     0010                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001A                     	;# 
  1877     001B                     	;# 
  1878     001B                     	;# 
  1879     001C                     	;# 
  1880     001D                     	;# 
  1881     001E                     	;# 
  1882     001F                     	;# 
  1883     008C                     	;# 
  1884     008D                     	;# 
  1885     008E                     	;# 
  1886     0090                     	;# 
  1887     0091                     	;# 
  1888     0092                     	;# 
  1889     0093                     	;# 
  1890     0094                     	;# 
  1891     0095                     	;# 
  1892     0096                     	;# 
  1893     0098                     	;# 
  1894     0099                     	;# 
  1895     009A                     	;# 
  1896     009B                     	;# 
  1897     009B                     	;# 
  1898     009C                     	;# 
  1899     009D                     	;# 
  1900     009E                     	;# 
  1901     009F                     	;# 
  1902     010C                     	;# 
  1903     010D                     	;# 
  1904     010E                     	;# 
  1905     0111                     	;# 
  1906     0112                     	;# 
  1907     0113                     	;# 
  1908     0114                     	;# 
  1909     0115                     	;# 
  1910     0116                     	;# 
  1911     0117                     	;# 
  1912     0118                     	;# 
  1913     0119                     	;# 
  1914     011C                     	;# 
  1915     018C                     	;# 
  1916     018D                     	;# 
  1917     018E                     	;# 
  1918     0191                     	;# 
  1919     0191                     	;# 
  1920     0192                     	;# 
  1921     0193                     	;# 
  1922     0193                     	;# 
  1923     0194                     	;# 
  1924     0195                     	;# 
  1925     0196                     	;# 
  1926     0197                     	;# 
  1927     0199                     	;# 
  1928     0199                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019A                     	;# 
  1932     019A                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019B                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019C                     	;# 
  1941     019D                     	;# 
  1942     019D                     	;# 
  1943     019D                     	;# 
  1944     019E                     	;# 
  1945     019E                     	;# 
  1946     019E                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     019F                     	;# 
  1952     020C                     	;# 
  1953     020D                     	;# 
  1954     020E                     	;# 
  1955     0211                     	;# 
  1956     0211                     	;# 
  1957     0212                     	;# 
  1958     0212                     	;# 
  1959     0213                     	;# 
  1960     0213                     	;# 
  1961     0214                     	;# 
  1962     0214                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0215                     	;# 
  1967     0216                     	;# 
  1968     0216                     	;# 
  1969     0217                     	;# 
  1970     0217                     	;# 
  1971     028C                     	;# 
  1972     028D                     	;# 
  1973     028E                     	;# 
  1974     0291                     	;# 
  1975     0291                     	;# 
  1976     0292                     	;# 
  1977     0293                     	;# 
  1978     0294                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     029A                     	;# 
  1983     029B                     	;# 
  1984     029E                     	;# 
  1985     030C                     	;# 
  1986     030D                     	;# 
  1987     030E                     	;# 
  1988     038C                     	;# 
  1989     038D                     	;# 
  1990     038E                     	;# 
  1991     0391                     	;# 
  1992     0392                     	;# 
  1993     0393                     	;# 
  1994     0394                     	;# 
  1995     0395                     	;# 
  1996     0396                     	;# 
  1997     0397                     	;# 
  1998     0398                     	;# 
  1999     0399                     	;# 
  2000     040E                     	;# 
  2001     0413                     	;# 
  2002     0413                     	;# 
  2003     0414                     	;# 
  2004     0414                     	;# 
  2005     0415                     	;# 
  2006     0416                     	;# 
  2007     0417                     	;# 
  2008     0418                     	;# 
  2009     041A                     	;# 
  2010     041A                     	;# 
  2011     041B                     	;# 
  2012     041B                     	;# 
  2013     041C                     	;# 
  2014     041D                     	;# 
  2015     041E                     	;# 
  2016     041F                     	;# 
  2017     0493                     	;# 
  2018     0494                     	;# 
  2019     0495                     	;# 
  2020     0496                     	;# 
  2021     049A                     	;# 
  2022     049B                     	;# 
  2023     049C                     	;# 
  2024     049D                     	;# 
  2025     058C                     	;# 
  2026     058C                     	;# 
  2027     058D                     	;# 
  2028     058E                     	;# 
  2029     058E                     	;# 
  2030     058F                     	;# 
  2031     0590                     	;# 
  2032     0590                     	;# 
  2033     0591                     	;# 
  2034     0592                     	;# 
  2035     0592                     	;# 
  2036     0593                     	;# 
  2037     0594                     	;# 
  2038     0594                     	;# 
  2039     0595                     	;# 
  2040     0596                     	;# 
  2041     0596                     	;# 
  2042     0597                     	;# 
  2043     0598                     	;# 
  2044     0599                     	;# 
  2045     059A                     	;# 
  2046     059B                     	;# 
  2047     059B                     	;# 
  2048     059C                     	;# 
  2049     059D                     	;# 
  2050     060C                     	;# 
  2051     060C                     	;# 
  2052     060D                     	;# 
  2053     060E                     	;# 
  2054     060F                     	;# 
  2055     060F                     	;# 
  2056     0610                     	;# 
  2057     0611                     	;# 
  2058     0612                     	;# 
  2059     0613                     	;# 
  2060     0614                     	;# 
  2061     0617                     	;# 
  2062     0617                     	;# 
  2063     0618                     	;# 
  2064     0619                     	;# 
  2065     061A                     	;# 
  2066     061A                     	;# 
  2067     061B                     	;# 
  2068     061C                     	;# 
  2069     0691                     	;# 
  2070     0692                     	;# 
  2071     0693                     	;# 
  2072     0694                     	;# 
  2073     0695                     	;# 
  2074     0696                     	;# 
  2075     0697                     	;# 
  2076     0699                     	;# 
  2077     069A                     	;# 
  2078     0711                     	;# 
  2079     0712                     	;# 
  2080     0713                     	;# 
  2081     0714                     	;# 
  2082     0715                     	;# 
  2083     0718                     	;# 
  2084     0718                     	;# 
  2085     0719                     	;# 
  2086     071A                     	;# 
  2087     071A                     	;# 
  2088     071B                     	;# 
  2089     071C                     	;# 
  2090     071D                     	;# 
  2091     0791                     	;# 
  2092     0791                     	;# 
  2093     0792                     	;# 
  2094     0793                     	;# 
  2095     0793                     	;# 
  2096     0794                     	;# 
  2097     0795                     	;# 
  2098     0795                     	;# 
  2099     0796                     	;# 
  2100     0797                     	;# 
  2101     0797                     	;# 
  2102     0798                     	;# 
  2103     0799                     	;# 
  2104     079A                     	;# 
  2105     080C                     	;# 
  2106     080C                     	;# 
  2107     080D                     	;# 
  2108     080E                     	;# 
  2109     080E                     	;# 
  2110     080F                     	;# 
  2111     0810                     	;# 
  2112     0810                     	;# 
  2113     0811                     	;# 
  2114     0812                     	;# 
  2115     0812                     	;# 
  2116     0813                     	;# 
  2117     0814                     	;# 
  2118     0815                     	;# 
  2119     0816                     	;# 
  2120     0817                     	;# 
  2121     0818                     	;# 
  2122     0819                     	;# 
  2123     081A                     	;# 
  2124     081A                     	;# 
  2125     081B                     	;# 
  2126     081C                     	;# 
  2127     081C                     	;# 
  2128     081D                     	;# 
  2129     088C                     	;# 
  2130     088D                     	;# 
  2131     088E                     	;# 
  2132     088F                     	;# 
  2133     088F                     	;# 
  2134     0890                     	;# 
  2135     0891                     	;# 
  2136     0892                     	;# 
  2137     0893                     	;# 
  2138     0893                     	;# 
  2139     0894                     	;# 
  2140     0895                     	;# 
  2141     0896                     	;# 
  2142     0897                     	;# 
  2143     0897                     	;# 
  2144     0898                     	;# 
  2145     0899                     	;# 
  2146     0D8C                     	;# 
  2147     0D8C                     	;# 
  2148     0D8D                     	;# 
  2149     0D8E                     	;# 
  2150     0D8F                     	;# 
  2151     0D8F                     	;# 
  2152     0D90                     	;# 
  2153     0D91                     	;# 
  2154     0D92                     	;# 
  2155     0D92                     	;# 
  2156     0D93                     	;# 
  2157     0D94                     	;# 
  2158     0D95                     	;# 
  2159     0D95                     	;# 
  2160     0D96                     	;# 
  2161     0D97                     	;# 
  2162     0D98                     	;# 
  2163     0D99                     	;# 
  2164     0D9A                     	;# 
  2165     0D9B                     	;# 
  2166     0D9C                     	;# 
  2167     0D9D                     	;# 
  2168     0D9E                     	;# 
  2169     0D9E                     	;# 
  2170     0D9F                     	;# 
  2171     0DA0                     	;# 
  2172     0DA1                     	;# 
  2173     0DA1                     	;# 
  2174     0DA2                     	;# 
  2175     0DA3                     	;# 
  2176     0DA4                     	;# 
  2177     0DA4                     	;# 
  2178     0DA5                     	;# 
  2179     0DA6                     	;# 
  2180     0DA7                     	;# 
  2181     0DA7                     	;# 
  2182     0DA8                     	;# 
  2183     0DA9                     	;# 
  2184     0DAA                     	;# 
  2185     0DAB                     	;# 
  2186     0DAC                     	;# 
  2187     0DAD                     	;# 
  2188     0DAE                     	;# 
  2189     0DAF                     	;# 
  2190     0E0F                     	;# 
  2191     0E10                     	;# 
  2192     0E11                     	;# 
  2193     0E12                     	;# 
  2194     0E13                     	;# 
  2195     0E14                     	;# 
  2196     0E15                     	;# 
  2197     0E16                     	;# 
  2198     0E17                     	;# 
  2199     0E17                     	;# 
  2200     0E18                     	;# 
  2201     0E18                     	;# 
  2202     0E19                     	;# 
  2203     0E1A                     	;# 
  2204     0E1B                     	;# 
  2205     0E1B                     	;# 
  2206     0E1C                     	;# 
  2207     0E1D                     	;# 
  2208     0E1E                     	;# 
  2209     0E1E                     	;# 
  2210     0E1F                     	;# 
  2211     0E20                     	;# 
  2212     0E21                     	;# 
  2213     0E22                     	;# 
  2214     0E23                     	;# 
  2215     0E24                     	;# 
  2216     0E25                     	;# 
  2217     0E26                     	;# 
  2218     0E27                     	;# 
  2219     0E28                     	;# 
  2220     0E29                     	;# 
  2221     0E2A                     	;# 
  2222     0E2B                     	;# 
  2223     0E2C                     	;# 
  2224     0E2D                     	;# 
  2225     0E2E                     	;# 
  2226     0E90                     	;# 
  2227     0E91                     	;# 
  2228     0E92                     	;# 
  2229     0E94                     	;# 
  2230     0E95                     	;# 
  2231     0E9C                     	;# 
  2232     0E9D                     	;# 
  2233     0E9E                     	;# 
  2234     0E9F                     	;# 
  2235     0EA0                     	;# 
  2236     0EA1                     	;# 
  2237     0EA2                     	;# 
  2238     0EA3                     	;# 
  2239     0EA4                     	;# 
  2240     0EA5                     	;# 
  2241     0EA6                     	;# 
  2242     0EA7                     	;# 
  2243     0F0F                     	;# 
  2244     0F10                     	;# 
  2245     0F11                     	;# 
  2246     0F12                     	;# 
  2247     0F13                     	;# 
  2248     0F14                     	;# 
  2249     0F15                     	;# 
  2250     0F16                     	;# 
  2251     0F17                     	;# 
  2252     0F18                     	;# 
  2253     0F19                     	;# 
  2254     0F1A                     	;# 
  2255     0F1B                     	;# 
  2256     0F1C                     	;# 
  2257     0F1D                     	;# 
  2258     0F1E                     	;# 
  2259     0F1F                     	;# 
  2260     0F20                     	;# 
  2261     0F21                     	;# 
  2262     0F22                     	;# 
  2263     0F23                     	;# 
  2264     0FE4                     	;# 
  2265     0FE5                     	;# 
  2266     0FE6                     	;# 
  2267     0FE7                     	;# 
  2268     0FE8                     	;# 
  2269     0FE9                     	;# 
  2270     0FEA                     	;# 
  2271     0FEB                     	;# 
  2272     0FED                     	;# 
  2273     0FEE                     	;# 
  2274     0FEF                     	;# 
  2275     0000                     	;# 
  2276     0001                     	;# 
  2277     0002                     	;# 
  2278     0003                     	;# 
  2279     0004                     	;# 
  2280     0005                     	;# 
  2281     0006                     	;# 
  2282     0007                     	;# 
  2283     0008                     	;# 
  2284     0009                     	;# 
  2285     000A                     	;# 
  2286     000B                     	;# 
  2287     000C                     	;# 
  2288     000D                     	;# 
  2289     000E                     	;# 
  2290     0010                     	;# 
  2291     0011                     	;# 
  2292     0012                     	;# 
  2293     0013                     	;# 
  2294     0014                     	;# 
  2295     0015                     	;# 
  2296     0016                     	;# 
  2297     0016                     	;# 
  2298     0017                     	;# 
  2299     0018                     	;# 
  2300     0019                     	;# 
  2301     001A                     	;# 
  2302     001A                     	;# 
  2303     001B                     	;# 
  2304     001B                     	;# 
  2305     001C                     	;# 
  2306     001D                     	;# 
  2307     001E                     	;# 
  2308     001F                     	;# 
  2309     008C                     	;# 
  2310     008D                     	;# 
  2311     008E                     	;# 
  2312     0090                     	;# 
  2313     0091                     	;# 
  2314     0092                     	;# 
  2315     0093                     	;# 
  2316     0094                     	;# 
  2317     0095                     	;# 
  2318     0096                     	;# 
  2319     0098                     	;# 
  2320     0099                     	;# 
  2321     009A                     	;# 
  2322     009B                     	;# 
  2323     009B                     	;# 
  2324     009C                     	;# 
  2325     009D                     	;# 
  2326     009E                     	;# 
  2327     009F                     	;# 
  2328     010C                     	;# 
  2329     010D                     	;# 
  2330     010E                     	;# 
  2331     0111                     	;# 
  2332     0112                     	;# 
  2333     0113                     	;# 
  2334     0114                     	;# 
  2335     0115                     	;# 
  2336     0116                     	;# 
  2337     0117                     	;# 
  2338     0118                     	;# 
  2339     0119                     	;# 
  2340     011C                     	;# 
  2341     018C                     	;# 
  2342     018D                     	;# 
  2343     018E                     	;# 
  2344     0191                     	;# 
  2345     0191                     	;# 
  2346     0192                     	;# 
  2347     0193                     	;# 
  2348     0193                     	;# 
  2349     0194                     	;# 
  2350     0195                     	;# 
  2351     0196                     	;# 
  2352     0197                     	;# 
  2353     0199                     	;# 
  2354     0199                     	;# 
  2355     0199                     	;# 
  2356     019A                     	;# 
  2357     019A                     	;# 
  2358     019A                     	;# 
  2359     019B                     	;# 
  2360     019B                     	;# 
  2361     019B                     	;# 
  2362     019B                     	;# 
  2363     019B                     	;# 
  2364     019C                     	;# 
  2365     019C                     	;# 
  2366     019C                     	;# 
  2367     019D                     	;# 
  2368     019D                     	;# 
  2369     019D                     	;# 
  2370     019E                     	;# 
  2371     019E                     	;# 
  2372     019E                     	;# 
  2373     019F                     	;# 
  2374     019F                     	;# 
  2375     019F                     	;# 
  2376     019F                     	;# 
  2377     019F                     	;# 
  2378     020C                     	;# 
  2379     020D                     	;# 
  2380     020E                     	;# 
  2381     0211                     	;# 
  2382     0211                     	;# 
  2383     0212                     	;# 
  2384     0212                     	;# 
  2385     0213                     	;# 
  2386     0213                     	;# 
  2387     0214                     	;# 
  2388     0214                     	;# 
  2389     0215                     	;# 
  2390     0215                     	;# 
  2391     0215                     	;# 
  2392     0215                     	;# 
  2393     0216                     	;# 
  2394     0216                     	;# 
  2395     0217                     	;# 
  2396     0217                     	;# 
  2397     028C                     	;# 
  2398     028D                     	;# 
  2399     028E                     	;# 
  2400     0291                     	;# 
  2401     0291                     	;# 
  2402     0292                     	;# 
  2403     0293                     	;# 
  2404     0294                     	;# 
  2405     0298                     	;# 
  2406     0298                     	;# 
  2407     0299                     	;# 
  2408     029A                     	;# 
  2409     029B                     	;# 
  2410     029E                     	;# 
  2411     030C                     	;# 
  2412     030D                     	;# 
  2413     030E                     	;# 
  2414     038C                     	;# 
  2415     038D                     	;# 
  2416     038E                     	;# 
  2417     0391                     	;# 
  2418     0392                     	;# 
  2419     0393                     	;# 
  2420     0394                     	;# 
  2421     0395                     	;# 
  2422     0396                     	;# 
  2423     0397                     	;# 
  2424     0398                     	;# 
  2425     0399                     	;# 
  2426     040E                     	;# 
  2427     0413                     	;# 
  2428     0413                     	;# 
  2429     0414                     	;# 
  2430     0414                     	;# 
  2431     0415                     	;# 
  2432     0416                     	;# 
  2433     0417                     	;# 
  2434     0418                     	;# 
  2435     041A                     	;# 
  2436     041A                     	;# 
  2437     041B                     	;# 
  2438     041B                     	;# 
  2439     041C                     	;# 
  2440     041D                     	;# 
  2441     041E                     	;# 
  2442     041F                     	;# 
  2443     0493                     	;# 
  2444     0494                     	;# 
  2445     0495                     	;# 
  2446     0496                     	;# 
  2447     049A                     	;# 
  2448     049B                     	;# 
  2449     049C                     	;# 
  2450     049D                     	;# 
  2451     058C                     	;# 
  2452     058C                     	;# 
  2453     058D                     	;# 
  2454     058E                     	;# 
  2455     058E                     	;# 
  2456     058F                     	;# 
  2457     0590                     	;# 
  2458     0590                     	;# 
  2459     0591                     	;# 
  2460     0592                     	;# 
  2461     0592                     	;# 
  2462     0593                     	;# 
  2463     0594                     	;# 
  2464     0594                     	;# 
  2465     0595                     	;# 
  2466     0596                     	;# 
  2467     0596                     	;# 
  2468     0597                     	;# 
  2469     0598                     	;# 
  2470     0599                     	;# 
  2471     059A                     	;# 
  2472     059B                     	;# 
  2473     059B                     	;# 
  2474     059C                     	;# 
  2475     059D                     	;# 
  2476     060C                     	;# 
  2477     060C                     	;# 
  2478     060D                     	;# 
  2479     060E                     	;# 
  2480     060F                     	;# 
  2481     060F                     	;# 
  2482     0610                     	;# 
  2483     0611                     	;# 
  2484     0612                     	;# 
  2485     0613                     	;# 
  2486     0614                     	;# 
  2487     0617                     	;# 
  2488     0617                     	;# 
  2489     0618                     	;# 
  2490     0619                     	;# 
  2491     061A                     	;# 
  2492     061A                     	;# 
  2493     061B                     	;# 
  2494     061C                     	;# 
  2495     0691                     	;# 
  2496     0692                     	;# 
  2497     0693                     	;# 
  2498     0694                     	;# 
  2499     0695                     	;# 
  2500     0696                     	;# 
  2501     0697                     	;# 
  2502     0699                     	;# 
  2503     069A                     	;# 
  2504     0711                     	;# 
  2505     0712                     	;# 
  2506     0713                     	;# 
  2507     0714                     	;# 
  2508     0715                     	;# 
  2509     0718                     	;# 
  2510     0718                     	;# 
  2511     0719                     	;# 
  2512     071A                     	;# 
  2513     071A                     	;# 
  2514     071B                     	;# 
  2515     071C                     	;# 
  2516     071D                     	;# 
  2517     0791                     	;# 
  2518     0791                     	;# 
  2519     0792                     	;# 
  2520     0793                     	;# 
  2521     0793                     	;# 
  2522     0794                     	;# 
  2523     0795                     	;# 
  2524     0795                     	;# 
  2525     0796                     	;# 
  2526     0797                     	;# 
  2527     0797                     	;# 
  2528     0798                     	;# 
  2529     0799                     	;# 
  2530     079A                     	;# 
  2531     080C                     	;# 
  2532     080C                     	;# 
  2533     080D                     	;# 
  2534     080E                     	;# 
  2535     080E                     	;# 
  2536     080F                     	;# 
  2537     0810                     	;# 
  2538     0810                     	;# 
  2539     0811                     	;# 
  2540     0812                     	;# 
  2541     0812                     	;# 
  2542     0813                     	;# 
  2543     0814                     	;# 
  2544     0815                     	;# 
  2545     0816                     	;# 
  2546     0817                     	;# 
  2547     0818                     	;# 
  2548     0819                     	;# 
  2549     081A                     	;# 
  2550     081A                     	;# 
  2551     081B                     	;# 
  2552     081C                     	;# 
  2553     081C                     	;# 
  2554     081D                     	;# 
  2555     088C                     	;# 
  2556     088D                     	;# 
  2557     088E                     	;# 
  2558     088F                     	;# 
  2559     088F                     	;# 
  2560     0890                     	;# 
  2561     0891                     	;# 
  2562     0892                     	;# 
  2563     0893                     	;# 
  2564     0893                     	;# 
  2565     0894                     	;# 
  2566     0895                     	;# 
  2567     0896                     	;# 
  2568     0897                     	;# 
  2569     0897                     	;# 
  2570     0898                     	;# 
  2571     0899                     	;# 
  2572     0D8C                     	;# 
  2573     0D8C                     	;# 
  2574     0D8D                     	;# 
  2575     0D8E                     	;# 
  2576     0D8F                     	;# 
  2577     0D8F                     	;# 
  2578     0D90                     	;# 
  2579     0D91                     	;# 
  2580     0D92                     	;# 
  2581     0D92                     	;# 
  2582     0D93                     	;# 
  2583     0D94                     	;# 
  2584     0D95                     	;# 
  2585     0D95                     	;# 
  2586     0D96                     	;# 
  2587     0D97                     	;# 
  2588     0D98                     	;# 
  2589     0D99                     	;# 
  2590     0D9A                     	;# 
  2591     0D9B                     	;# 
  2592     0D9C                     	;# 
  2593     0D9D                     	;# 
  2594     0D9E                     	;# 
  2595     0D9E                     	;# 
  2596     0D9F                     	;# 
  2597     0DA0                     	;# 
  2598     0DA1                     	;# 
  2599     0DA1                     	;# 
  2600     0DA2                     	;# 
  2601     0DA3                     	;# 
  2602     0DA4                     	;# 
  2603     0DA4                     	;# 
  2604     0DA5                     	;# 
  2605     0DA6                     	;# 
  2606     0DA7                     	;# 
  2607     0DA7                     	;# 
  2608     0DA8                     	;# 
  2609     0DA9                     	;# 
  2610     0DAA                     	;# 
  2611     0DAB                     	;# 
  2612     0DAC                     	;# 
  2613     0DAD                     	;# 
  2614     0DAE                     	;# 
  2615     0DAF                     	;# 
  2616     0E0F                     	;# 
  2617     0E10                     	;# 
  2618     0E11                     	;# 
  2619     0E12                     	;# 
  2620     0E13                     	;# 
  2621     0E14                     	;# 
  2622     0E15                     	;# 
  2623     0E16                     	;# 
  2624     0E17                     	;# 
  2625     0E17                     	;# 
  2626     0E18                     	;# 
  2627     0E18                     	;# 
  2628     0E19                     	;# 
  2629     0E1A                     	;# 
  2630     0E1B                     	;# 
  2631     0E1B                     	;# 
  2632     0E1C                     	;# 
  2633     0E1D                     	;# 
  2634     0E1E                     	;# 
  2635     0E1E                     	;# 
  2636     0E1F                     	;# 
  2637     0E20                     	;# 
  2638     0E21                     	;# 
  2639     0E22                     	;# 
  2640     0E23                     	;# 
  2641     0E24                     	;# 
  2642     0E25                     	;# 
  2643     0E26                     	;# 
  2644     0E27                     	;# 
  2645     0E28                     	;# 
  2646     0E29                     	;# 
  2647     0E2A                     	;# 
  2648     0E2B                     	;# 
  2649     0E2C                     	;# 
  2650     0E2D                     	;# 
  2651     0E2E                     	;# 
  2652     0E90                     	;# 
  2653     0E91                     	;# 
  2654     0E92                     	;# 
  2655     0E94                     	;# 
  2656     0E95                     	;# 
  2657     0E9C                     	;# 
  2658     0E9D                     	;# 
  2659     0E9E                     	;# 
  2660     0E9F                     	;# 
  2661     0EA0                     	;# 
  2662     0EA1                     	;# 
  2663     0EA2                     	;# 
  2664     0EA3                     	;# 
  2665     0EA4                     	;# 
  2666     0EA5                     	;# 
  2667     0EA6                     	;# 
  2668     0EA7                     	;# 
  2669     0F0F                     	;# 
  2670     0F10                     	;# 
  2671     0F11                     	;# 
  2672     0F12                     	;# 
  2673     0F13                     	;# 
  2674     0F14                     	;# 
  2675     0F15                     	;# 
  2676     0F16                     	;# 
  2677     0F17                     	;# 
  2678     0F18                     	;# 
  2679     0F19                     	;# 
  2680     0F1A                     	;# 
  2681     0F1B                     	;# 
  2682     0F1C                     	;# 
  2683     0F1D                     	;# 
  2684     0F1E                     	;# 
  2685     0F1F                     	;# 
  2686     0F20                     	;# 
  2687     0F21                     	;# 
  2688     0F22                     	;# 
  2689     0F23                     	;# 
  2690     0FE4                     	;# 
  2691     0FE5                     	;# 
  2692     0FE6                     	;# 
  2693     0FE7                     	;# 
  2694     0FE8                     	;# 
  2695     0FE9                     	;# 
  2696     0FEA                     	;# 
  2697     0FEB                     	;# 
  2698     0FED                     	;# 
  2699     0FEE                     	;# 
  2700     0FEF                     	;# 
  2701     0000                     	;# 
  2702     0001                     	;# 
  2703     0002                     	;# 
  2704     0003                     	;# 
  2705     0004                     	;# 
  2706     0005                     	;# 
  2707     0006                     	;# 
  2708     0007                     	;# 
  2709     0008                     	;# 
  2710     0009                     	;# 
  2711     000A                     	;# 
  2712     000B                     	;# 
  2713     000C                     	;# 
  2714     000D                     	;# 
  2715     000E                     	;# 
  2716     0010                     	;# 
  2717     0011                     	;# 
  2718     0012                     	;# 
  2719     0013                     	;# 
  2720     0014                     	;# 
  2721     0015                     	;# 
  2722     0016                     	;# 
  2723     0016                     	;# 
  2724     0017                     	;# 
  2725     0018                     	;# 
  2726     0019                     	;# 
  2727     001A                     	;# 
  2728     001A                     	;# 
  2729     001B                     	;# 
  2730     001B                     	;# 
  2731     001C                     	;# 
  2732     001D                     	;# 
  2733     001E                     	;# 
  2734     001F                     	;# 
  2735     008C                     	;# 
  2736     008D                     	;# 
  2737     008E                     	;# 
  2738     0090                     	;# 
  2739     0091                     	;# 
  2740     0092                     	;# 
  2741     0093                     	;# 
  2742     0094                     	;# 
  2743     0095                     	;# 
  2744     0096                     	;# 
  2745     0098                     	;# 
  2746     0099                     	;# 
  2747     009A                     	;# 
  2748     009B                     	;# 
  2749     009B                     	;# 
  2750     009C                     	;# 
  2751     009D                     	;# 
  2752     009E                     	;# 
  2753     009F                     	;# 
  2754     010C                     	;# 
  2755     010D                     	;# 
  2756     010E                     	;# 
  2757     0111                     	;# 
  2758     0112                     	;# 
  2759     0113                     	;# 
  2760     0114                     	;# 
  2761     0115                     	;# 
  2762     0116                     	;# 
  2763     0117                     	;# 
  2764     0118                     	;# 
  2765     0119                     	;# 
  2766     011C                     	;# 
  2767     018C                     	;# 
  2768     018D                     	;# 
  2769     018E                     	;# 
  2770     0191                     	;# 
  2771     0191                     	;# 
  2772     0192                     	;# 
  2773     0193                     	;# 
  2774     0193                     	;# 
  2775     0194                     	;# 
  2776     0195                     	;# 
  2777     0196                     	;# 
  2778     0197                     	;# 
  2779     0199                     	;# 
  2780     0199                     	;# 
  2781     0199                     	;# 
  2782     019A                     	;# 
  2783     019A                     	;# 
  2784     019A                     	;# 
  2785     019B                     	;# 
  2786     019B                     	;# 
  2787     019B                     	;# 
  2788     019B                     	;# 
  2789     019B                     	;# 
  2790     019C                     	;# 
  2791     019C                     	;# 
  2792     019C                     	;# 
  2793     019D                     	;# 
  2794     019D                     	;# 
  2795     019D                     	;# 
  2796     019E                     	;# 
  2797     019E                     	;# 
  2798     019E                     	;# 
  2799     019F                     	;# 
  2800     019F                     	;# 
  2801     019F                     	;# 
  2802     019F                     	;# 
  2803     019F                     	;# 
  2804     020C                     	;# 
  2805     020D                     	;# 
  2806     020E                     	;# 
  2807     0211                     	;# 
  2808     0211                     	;# 
  2809     0212                     	;# 
  2810     0212                     	;# 
  2811     0213                     	;# 
  2812     0213                     	;# 
  2813     0214                     	;# 
  2814     0214                     	;# 
  2815     0215                     	;# 
  2816     0215                     	;# 
  2817     0215                     	;# 
  2818     0215                     	;# 
  2819     0216                     	;# 
  2820     0216                     	;# 
  2821     0217                     	;# 
  2822     0217                     	;# 
  2823     028C                     	;# 
  2824     028D                     	;# 
  2825     028E                     	;# 
  2826     0291                     	;# 
  2827     0291                     	;# 
  2828     0292                     	;# 
  2829     0293                     	;# 
  2830     0294                     	;# 
  2831     0298                     	;# 
  2832     0298                     	;# 
  2833     0299                     	;# 
  2834     029A                     	;# 
  2835     029B                     	;# 
  2836     029E                     	;# 
  2837     030C                     	;# 
  2838     030D                     	;# 
  2839     030E                     	;# 
  2840     038C                     	;# 
  2841     038D                     	;# 
  2842     038E                     	;# 
  2843     0391                     	;# 
  2844     0392                     	;# 
  2845     0393                     	;# 
  2846     0394                     	;# 
  2847     0395                     	;# 
  2848     0396                     	;# 
  2849     0397                     	;# 
  2850     0398                     	;# 
  2851     0399                     	;# 
  2852     040E                     	;# 
  2853     0413                     	;# 
  2854     0413                     	;# 
  2855     0414                     	;# 
  2856     0414                     	;# 
  2857     0415                     	;# 
  2858     0416                     	;# 
  2859     0417                     	;# 
  2860     0418                     	;# 
  2861     041A                     	;# 
  2862     041A                     	;# 
  2863     041B                     	;# 
  2864     041B                     	;# 
  2865     041C                     	;# 
  2866     041D                     	;# 
  2867     041E                     	;# 
  2868     041F                     	;# 
  2869     0493                     	;# 
  2870     0494                     	;# 
  2871     0495                     	;# 
  2872     0496                     	;# 
  2873     049A                     	;# 
  2874     049B                     	;# 
  2875     049C                     	;# 
  2876     049D                     	;# 
  2877     058C                     	;# 
  2878     058C                     	;# 
  2879     058D                     	;# 
  2880     058E                     	;# 
  2881     058E                     	;# 
  2882     058F                     	;# 
  2883     0590                     	;# 
  2884     0590                     	;# 
  2885     0591                     	;# 
  2886     0592                     	;# 
  2887     0592                     	;# 
  2888     0593                     	;# 
  2889     0594                     	;# 
  2890     0594                     	;# 
  2891     0595                     	;# 
  2892     0596                     	;# 
  2893     0596                     	;# 
  2894     0597                     	;# 
  2895     0598                     	;# 
  2896     0599                     	;# 
  2897     059A                     	;# 
  2898     059B                     	;# 
  2899     059B                     	;# 
  2900     059C                     	;# 
  2901     059D                     	;# 
  2902     060C                     	;# 
  2903     060C                     	;# 
  2904     060D                     	;# 
  2905     060E                     	;# 
  2906     060F                     	;# 
  2907     060F                     	;# 
  2908     0610                     	;# 
  2909     0611                     	;# 
  2910     0612                     	;# 
  2911     0613                     	;# 
  2912     0614                     	;# 
  2913     0617                     	;# 
  2914     0617                     	;# 
  2915     0618                     	;# 
  2916     0619                     	;# 
  2917     061A                     	;# 
  2918     061A                     	;# 
  2919     061B                     	;# 
  2920     061C                     	;# 
  2921     0691                     	;# 
  2922     0692                     	;# 
  2923     0693                     	;# 
  2924     0694                     	;# 
  2925     0695                     	;# 
  2926     0696                     	;# 
  2927     0697                     	;# 
  2928     0699                     	;# 
  2929     069A                     	;# 
  2930     0711                     	;# 
  2931     0712                     	;# 
  2932     0713                     	;# 
  2933     0714                     	;# 
  2934     0715                     	;# 
  2935     0718                     	;# 
  2936     0718                     	;# 
  2937     0719                     	;# 
  2938     071A                     	;# 
  2939     071A                     	;# 
  2940     071B                     	;# 
  2941     071C                     	;# 
  2942     071D                     	;# 
  2943     0791                     	;# 
  2944     0791                     	;# 
  2945     0792                     	;# 
  2946     0793                     	;# 
  2947     0793                     	;# 
  2948     0794                     	;# 
  2949     0795                     	;# 
  2950     0795                     	;# 
  2951     0796                     	;# 
  2952     0797                     	;# 
  2953     0797                     	;# 
  2954     0798                     	;# 
  2955     0799                     	;# 
  2956     079A                     	;# 
  2957     080C                     	;# 
  2958     080C                     	;# 
  2959     080D                     	;# 
  2960     080E                     	;# 
  2961     080E                     	;# 
  2962     080F                     	;# 
  2963     0810                     	;# 
  2964     0810                     	;# 
  2965     0811                     	;# 
  2966     0812                     	;# 
  2967     0812                     	;# 
  2968     0813                     	;# 
  2969     0814                     	;# 
  2970     0815                     	;# 
  2971     0816                     	;# 
  2972     0817                     	;# 
  2973     0818                     	;# 
  2974     0819                     	;# 
  2975     081A                     	;# 
  2976     081A                     	;# 
  2977     081B                     	;# 
  2978     081C                     	;# 
  2979     081C                     	;# 
  2980     081D                     	;# 
  2981     088C                     	;# 
  2982     088D                     	;# 
  2983     088E                     	;# 
  2984     088F                     	;# 
  2985     088F                     	;# 
  2986     0890                     	;# 
  2987     0891                     	;# 
  2988     0892                     	;# 
  2989     0893                     	;# 
  2990     0893                     	;# 
  2991     0894                     	;# 
  2992     0895                     	;# 
  2993     0896                     	;# 
  2994     0897                     	;# 
  2995     0897                     	;# 
  2996     0898                     	;# 
  2997     0899                     	;# 
  2998     0D8C                     	;# 
  2999     0D8C                     	;# 
  3000     0D8D                     	;# 
  3001     0D8E                     	;# 
  3002     0D8F                     	;# 
  3003     0D8F                     	;# 
  3004     0D90                     	;# 
  3005     0D91                     	;# 
  3006     0D92                     	;# 
  3007     0D92                     	;# 
  3008     0D93                     	;# 
  3009     0D94                     	;# 
  3010     0D95                     	;# 
  3011     0D95                     	;# 
  3012     0D96                     	;# 
  3013     0D97                     	;# 
  3014     0D98                     	;# 
  3015     0D99                     	;# 
  3016     0D9A                     	;# 
  3017     0D9B                     	;# 
  3018     0D9C                     	;# 
  3019     0D9D                     	;# 
  3020     0D9E                     	;# 
  3021     0D9E                     	;# 
  3022     0D9F                     	;# 
  3023     0DA0                     	;# 
  3024     0DA1                     	;# 
  3025     0DA1                     	;# 
  3026     0DA2                     	;# 
  3027     0DA3                     	;# 
  3028     0DA4                     	;# 
  3029     0DA4                     	;# 
  3030     0DA5                     	;# 
  3031     0DA6                     	;# 
  3032     0DA7                     	;# 
  3033     0DA7                     	;# 
  3034     0DA8                     	;# 
  3035     0DA9                     	;# 
  3036     0DAA                     	;# 
  3037     0DAB                     	;# 
  3038     0DAC                     	;# 
  3039     0DAD                     	;# 
  3040     0DAE                     	;# 
  3041     0DAF                     	;# 
  3042     0E0F                     	;# 
  3043     0E10                     	;# 
  3044     0E11                     	;# 
  3045     0E12                     	;# 
  3046     0E13                     	;# 
  3047     0E14                     	;# 
  3048     0E15                     	;# 
  3049     0E16                     	;# 
  3050     0E17                     	;# 
  3051     0E17                     	;# 
  3052     0E18                     	;# 
  3053     0E18                     	;# 
  3054     0E19                     	;# 
  3055     0E1A                     	;# 
  3056     0E1B                     	;# 
  3057     0E1B                     	;# 
  3058     0E1C                     	;# 
  3059     0E1D                     	;# 
  3060     0E1E                     	;# 
  3061     0E1E                     	;# 
  3062     0E1F                     	;# 
  3063     0E20                     	;# 
  3064     0E21                     	;# 
  3065     0E22                     	;# 
  3066     0E23                     	;# 
  3067     0E24                     	;# 
  3068     0E25                     	;# 
  3069     0E26                     	;# 
  3070     0E27                     	;# 
  3071     0E28                     	;# 
  3072     0E29                     	;# 
  3073     0E2A                     	;# 
  3074     0E2B                     	;# 
  3075     0E2C                     	;# 
  3076     0E2D                     	;# 
  3077     0E2E                     	;# 
  3078     0E90                     	;# 
  3079     0E91                     	;# 
  3080     0E92                     	;# 
  3081     0E94                     	;# 
  3082     0E95                     	;# 
  3083     0E9C                     	;# 
  3084     0E9D                     	;# 
  3085     0E9E                     	;# 
  3086     0E9F                     	;# 
  3087     0EA0                     	;# 
  3088     0EA1                     	;# 
  3089     0EA2                     	;# 
  3090     0EA3                     	;# 
  3091     0EA4                     	;# 
  3092     0EA5                     	;# 
  3093     0EA6                     	;# 
  3094     0EA7                     	;# 
  3095     0F0F                     	;# 
  3096     0F10                     	;# 
  3097     0F11                     	;# 
  3098     0F12                     	;# 
  3099     0F13                     	;# 
  3100     0F14                     	;# 
  3101     0F15                     	;# 
  3102     0F16                     	;# 
  3103     0F17                     	;# 
  3104     0F18                     	;# 
  3105     0F19                     	;# 
  3106     0F1A                     	;# 
  3107     0F1B                     	;# 
  3108     0F1C                     	;# 
  3109     0F1D                     	;# 
  3110     0F1E                     	;# 
  3111     0F1F                     	;# 
  3112     0F20                     	;# 
  3113     0F21                     	;# 
  3114     0F22                     	;# 
  3115     0F23                     	;# 
  3116     0FE4                     	;# 
  3117     0FE5                     	;# 
  3118     0FE6                     	;# 
  3119     0FE7                     	;# 
  3120     0FE8                     	;# 
  3121     0FE9                     	;# 
  3122     0FEA                     	;# 
  3123     0FEB                     	;# 
  3124     0FED                     	;# 
  3125     0FEE                     	;# 
  3126     0FEF                     	;# 
  3127     0000                     	;# 
  3128     0001                     	;# 
  3129     0002                     	;# 
  3130     0003                     	;# 
  3131     0004                     	;# 
  3132     0005                     	;# 
  3133     0006                     	;# 
  3134     0007                     	;# 
  3135     0008                     	;# 
  3136     0009                     	;# 
  3137     000A                     	;# 
  3138     000B                     	;# 
  3139     000C                     	;# 
  3140     000D                     	;# 
  3141     000E                     	;# 
  3142     0010                     	;# 
  3143     0011                     	;# 
  3144     0012                     	;# 
  3145     0013                     	;# 
  3146     0014                     	;# 
  3147     0015                     	;# 
  3148     0016                     	;# 
  3149     0016                     	;# 
  3150     0017                     	;# 
  3151     0018                     	;# 
  3152     0019                     	;# 
  3153     001A                     	;# 
  3154     001A                     	;# 
  3155     001B                     	;# 
  3156     001B                     	;# 
  3157     001C                     	;# 
  3158     001D                     	;# 
  3159     001E                     	;# 
  3160     001F                     	;# 
  3161     008C                     	;# 
  3162     008D                     	;# 
  3163     008E                     	;# 
  3164     0090                     	;# 
  3165     0091                     	;# 
  3166     0092                     	;# 
  3167     0093                     	;# 
  3168     0094                     	;# 
  3169     0095                     	;# 
  3170     0096                     	;# 
  3171     0098                     	;# 
  3172     0099                     	;# 
  3173     009A                     	;# 
  3174     009B                     	;# 
  3175     009B                     	;# 
  3176     009C                     	;# 
  3177     009D                     	;# 
  3178     009E                     	;# 
  3179     009F                     	;# 
  3180     010C                     	;# 
  3181     010D                     	;# 
  3182     010E                     	;# 
  3183     0111                     	;# 
  3184     0112                     	;# 
  3185     0113                     	;# 
  3186     0114                     	;# 
  3187     0115                     	;# 
  3188     0116                     	;# 
  3189     0117                     	;# 
  3190     0118                     	;# 
  3191     0119                     	;# 
  3192     011C                     	;# 
  3193     018C                     	;# 
  3194     018D                     	;# 
  3195     018E                     	;# 
  3196     0191                     	;# 
  3197     0191                     	;# 
  3198     0192                     	;# 
  3199     0193                     	;# 
  3200     0193                     	;# 
  3201     0194                     	;# 
  3202     0195                     	;# 
  3203     0196                     	;# 
  3204     0197                     	;# 
  3205     0199                     	;# 
  3206     0199                     	;# 
  3207     0199                     	;# 
  3208     019A                     	;# 
  3209     019A                     	;# 
  3210     019A                     	;# 
  3211     019B                     	;# 
  3212     019B                     	;# 
  3213     019B                     	;# 
  3214     019B                     	;# 
  3215     019B                     	;# 
  3216     019C                     	;# 
  3217     019C                     	;# 
  3218     019C                     	;# 
  3219     019D                     	;# 
  3220     019D                     	;# 
  3221     019D                     	;# 
  3222     019E                     	;# 
  3223     019E                     	;# 
  3224     019E                     	;# 
  3225     019F                     	;# 
  3226     019F                     	;# 
  3227     019F                     	;# 
  3228     019F                     	;# 
  3229     019F                     	;# 
  3230     020C                     	;# 
  3231     020D                     	;# 
  3232     020E                     	;# 
  3233     0211                     	;# 
  3234     0211                     	;# 
  3235     0212                     	;# 
  3236     0212                     	;# 
  3237     0213                     	;# 
  3238     0213                     	;# 
  3239     0214                     	;# 
  3240     0214                     	;# 
  3241     0215                     	;# 
  3242     0215                     	;# 
  3243     0215                     	;# 
  3244     0215                     	;# 
  3245     0216                     	;# 
  3246     0216                     	;# 
  3247     0217                     	;# 
  3248     0217                     	;# 
  3249     028C                     	;# 
  3250     028D                     	;# 
  3251     028E                     	;# 
  3252     0291                     	;# 
  3253     0291                     	;# 
  3254     0292                     	;# 
  3255     0293                     	;# 
  3256     0294                     	;# 
  3257     0298                     	;# 
  3258     0298                     	;# 
  3259     0299                     	;# 
  3260     029A                     	;# 
  3261     029B                     	;# 
  3262     029E                     	;# 
  3263     030C                     	;# 
  3264     030D                     	;# 
  3265     030E                     	;# 
  3266     038C                     	;# 
  3267     038D                     	;# 
  3268     038E                     	;# 
  3269     0391                     	;# 
  3270     0392                     	;# 
  3271     0393                     	;# 
  3272     0394                     	;# 
  3273     0395                     	;# 
  3274     0396                     	;# 
  3275     0397                     	;# 
  3276     0398                     	;# 
  3277     0399                     	;# 
  3278     040E                     	;# 
  3279     0413                     	;# 
  3280     0413                     	;# 
  3281     0414                     	;# 
  3282     0414                     	;# 
  3283     0415                     	;# 
  3284     0416                     	;# 
  3285     0417                     	;# 
  3286     0418                     	;# 
  3287     041A                     	;# 
  3288     041A                     	;# 
  3289     041B                     	;# 
  3290     041B                     	;# 
  3291     041C                     	;# 
  3292     041D                     	;# 
  3293     041E                     	;# 
  3294     041F                     	;# 
  3295     0493                     	;# 
  3296     0494                     	;# 
  3297     0495                     	;# 
  3298     0496                     	;# 
  3299     049A                     	;# 
  3300     049B                     	;# 
  3301     049C                     	;# 
  3302     049D                     	;# 
  3303     058C                     	;# 
  3304     058C                     	;# 
  3305     058D                     	;# 
  3306     058E                     	;# 
  3307     058E                     	;# 
  3308     058F                     	;# 
  3309     0590                     	;# 
  3310     0590                     	;# 
  3311     0591                     	;# 
  3312     0592                     	;# 
  3313     0592                     	;# 
  3314     0593                     	;# 
  3315     0594                     	;# 
  3316     0594                     	;# 
  3317     0595                     	;# 
  3318     0596                     	;# 
  3319     0596                     	;# 
  3320     0597                     	;# 
  3321     0598                     	;# 
  3322     0599                     	;# 
  3323     059A                     	;# 
  3324     059B                     	;# 
  3325     059B                     	;# 
  3326     059C                     	;# 
  3327     059D                     	;# 
  3328     060C                     	;# 
  3329     060C                     	;# 
  3330     060D                     	;# 
  3331     060E                     	;# 
  3332     060F                     	;# 
  3333     060F                     	;# 
  3334     0610                     	;# 
  3335     0611                     	;# 
  3336     0612                     	;# 
  3337     0613                     	;# 
  3338     0614                     	;# 
  3339     0617                     	;# 
  3340     0617                     	;# 
  3341     0618                     	;# 
  3342     0619                     	;# 
  3343     061A                     	;# 
  3344     061A                     	;# 
  3345     061B                     	;# 
  3346     061C                     	;# 
  3347     0691                     	;# 
  3348     0692                     	;# 
  3349     0693                     	;# 
  3350     0694                     	;# 
  3351     0695                     	;# 
  3352     0696                     	;# 
  3353     0697                     	;# 
  3354     0699                     	;# 
  3355     069A                     	;# 
  3356     0711                     	;# 
  3357     0712                     	;# 
  3358     0713                     	;# 
  3359     0714                     	;# 
  3360     0715                     	;# 
  3361     0718                     	;# 
  3362     0718                     	;# 
  3363     0719                     	;# 
  3364     071A                     	;# 
  3365     071A                     	;# 
  3366     071B                     	;# 
  3367     071C                     	;# 
  3368     071D                     	;# 
  3369     0791                     	;# 
  3370     0791                     	;# 
  3371     0792                     	;# 
  3372     0793                     	;# 
  3373     0793                     	;# 
  3374     0794                     	;# 
  3375     0795                     	;# 
  3376     0795                     	;# 
  3377     0796                     	;# 
  3378     0797                     	;# 
  3379     0797                     	;# 
  3380     0798                     	;# 
  3381     0799                     	;# 
  3382     079A                     	;# 
  3383     080C                     	;# 
  3384     080C                     	;# 
  3385     080D                     	;# 
  3386     080E                     	;# 
  3387     080E                     	;# 
  3388     080F                     	;# 
  3389     0810                     	;# 
  3390     0810                     	;# 
  3391     0811                     	;# 
  3392     0812                     	;# 
  3393     0812                     	;# 
  3394     0813                     	;# 
  3395     0814                     	;# 
  3396     0815                     	;# 
  3397     0816                     	;# 
  3398     0817                     	;# 
  3399     0818                     	;# 
  3400     0819                     	;# 
  3401     081A                     	;# 
  3402     081A                     	;# 
  3403     081B                     	;# 
  3404     081C                     	;# 
  3405     081C                     	;# 
  3406     081D                     	;# 
  3407     088C                     	;# 
  3408     088D                     	;# 
  3409     088E                     	;# 
  3410     088F                     	;# 
  3411     088F                     	;# 
  3412     0890                     	;# 
  3413     0891                     	;# 
  3414     0892                     	;# 
  3415     0893                     	;# 
  3416     0893                     	;# 
  3417     0894                     	;# 
  3418     0895                     	;# 
  3419     0896                     	;# 
  3420     0897                     	;# 
  3421     0897                     	;# 
  3422     0898                     	;# 
  3423     0899                     	;# 
  3424     0D8C                     	;# 
  3425     0D8C                     	;# 
  3426     0D8D                     	;# 
  3427     0D8E                     	;# 
  3428     0D8F                     	;# 
  3429     0D8F                     	;# 
  3430     0D90                     	;# 
  3431     0D91                     	;# 
  3432     0D92                     	;# 
  3433     0D92                     	;# 
  3434     0D93                     	;# 
  3435     0D94                     	;# 
  3436     0D95                     	;# 
  3437     0D95                     	;# 
  3438     0D96                     	;# 
  3439     0D97                     	;# 
  3440     0D98                     	;# 
  3441     0D99                     	;# 
  3442     0D9A                     	;# 
  3443     0D9B                     	;# 
  3444     0D9C                     	;# 
  3445     0D9D                     	;# 
  3446     0D9E                     	;# 
  3447     0D9E                     	;# 
  3448     0D9F                     	;# 
  3449     0DA0                     	;# 
  3450     0DA1                     	;# 
  3451     0DA1                     	;# 
  3452     0DA2                     	;# 
  3453     0DA3                     	;# 
  3454     0DA4                     	;# 
  3455     0DA4                     	;# 
  3456     0DA5                     	;# 
  3457     0DA6                     	;# 
  3458     0DA7                     	;# 
  3459     0DA7                     	;# 
  3460     0DA8                     	;# 
  3461     0DA9                     	;# 
  3462     0DAA                     	;# 
  3463     0DAB                     	;# 
  3464     0DAC                     	;# 
  3465     0DAD                     	;# 
  3466     0DAE                     	;# 
  3467     0DAF                     	;# 
  3468     0E0F                     	;# 
  3469     0E10                     	;# 
  3470     0E11                     	;# 
  3471     0E12                     	;# 
  3472     0E13                     	;# 
  3473     0E14                     	;# 
  3474     0E15                     	;# 
  3475     0E16                     	;# 
  3476     0E17                     	;# 
  3477     0E17                     	;# 
  3478     0E18                     	;# 
  3479     0E18                     	;# 
  3480     0E19                     	;# 
  3481     0E1A                     	;# 
  3482     0E1B                     	;# 
  3483     0E1B                     	;# 
  3484     0E1C                     	;# 
  3485     0E1D                     	;# 
  3486     0E1E                     	;# 
  3487     0E1E                     	;# 
  3488     0E1F                     	;# 
  3489     0E20                     	;# 
  3490     0E21                     	;# 
  3491     0E22                     	;# 
  3492     0E23                     	;# 
  3493     0E24                     	;# 
  3494     0E25                     	;# 
  3495     0E26                     	;# 
  3496     0E27                     	;# 
  3497     0E28                     	;# 
  3498     0E29                     	;# 
  3499     0E2A                     	;# 
  3500     0E2B                     	;# 
  3501     0E2C                     	;# 
  3502     0E2D                     	;# 
  3503     0E2E                     	;# 
  3504     0E90                     	;# 
  3505     0E91                     	;# 
  3506     0E92                     	;# 
  3507     0E94                     	;# 
  3508     0E95                     	;# 
  3509     0E9C                     	;# 
  3510     0E9D                     	;# 
  3511     0E9E                     	;# 
  3512     0E9F                     	;# 
  3513     0EA0                     	;# 
  3514     0EA1                     	;# 
  3515     0EA2                     	;# 
  3516     0EA3                     	;# 
  3517     0EA4                     	;# 
  3518     0EA5                     	;# 
  3519     0EA6                     	;# 
  3520     0EA7                     	;# 
  3521     0F0F                     	;# 
  3522     0F10                     	;# 
  3523     0F11                     	;# 
  3524     0F12                     	;# 
  3525     0F13                     	;# 
  3526     0F14                     	;# 
  3527     0F15                     	;# 
  3528     0F16                     	;# 
  3529     0F17                     	;# 
  3530     0F18                     	;# 
  3531     0F19                     	;# 
  3532     0F1A                     	;# 
  3533     0F1B                     	;# 
  3534     0F1C                     	;# 
  3535     0F1D                     	;# 
  3536     0F1E                     	;# 
  3537     0F1F                     	;# 
  3538     0F20                     	;# 
  3539     0F21                     	;# 
  3540     0F22                     	;# 
  3541     0F23                     	;# 
  3542     0FE4                     	;# 
  3543     0FE5                     	;# 
  3544     0FE6                     	;# 
  3545     0FE7                     	;# 
  3546     0FE8                     	;# 
  3547     0FE9                     	;# 
  3548     0FEA                     	;# 
  3549     0FEB                     	;# 
  3550     0FED                     	;# 
  3551     0FEE                     	;# 
  3552     0FEF                     	;# 
  3553     0000                     	;# 
  3554     0001                     	;# 
  3555     0002                     	;# 
  3556     0003                     	;# 
  3557     0004                     	;# 
  3558     0005                     	;# 
  3559     0006                     	;# 
  3560     0007                     	;# 
  3561     0008                     	;# 
  3562     0009                     	;# 
  3563     000A                     	;# 
  3564     000B                     	;# 
  3565     000C                     	;# 
  3566     000D                     	;# 
  3567     000E                     	;# 
  3568     0010                     	;# 
  3569     0011                     	;# 
  3570     0012                     	;# 
  3571     0013                     	;# 
  3572     0014                     	;# 
  3573     0015                     	;# 
  3574     0016                     	;# 
  3575     0016                     	;# 
  3576     0017                     	;# 
  3577     0018                     	;# 
  3578     0019                     	;# 
  3579     001A                     	;# 
  3580     001A                     	;# 
  3581     001B                     	;# 
  3582     001B                     	;# 
  3583     001C                     	;# 
  3584     001D                     	;# 
  3585     001E                     	;# 
  3586     001F                     	;# 
  3587     008C                     	;# 
  3588     008D                     	;# 
  3589     008E                     	;# 
  3590     0090                     	;# 
  3591     0091                     	;# 
  3592     0092                     	;# 
  3593     0093                     	;# 
  3594     0094                     	;# 
  3595     0095                     	;# 
  3596     0096                     	;# 
  3597     0098                     	;# 
  3598     0099                     	;# 
  3599     009A                     	;# 
  3600     009B                     	;# 
  3601     009B                     	;# 
  3602     009C                     	;# 
  3603     009D                     	;# 
  3604     009E                     	;# 
  3605     009F                     	;# 
  3606     010C                     	;# 
  3607     010D                     	;# 
  3608     010E                     	;# 
  3609     0111                     	;# 
  3610     0112                     	;# 
  3611     0113                     	;# 
  3612     0114                     	;# 
  3613     0115                     	;# 
  3614     0116                     	;# 
  3615     0117                     	;# 
  3616     0118                     	;# 
  3617     0119                     	;# 
  3618     011C                     	;# 
  3619     018C                     	;# 
  3620     018D                     	;# 
  3621     018E                     	;# 
  3622     0191                     	;# 
  3623     0191                     	;# 
  3624     0192                     	;# 
  3625     0193                     	;# 
  3626     0193                     	;# 
  3627     0194                     	;# 
  3628     0195                     	;# 
  3629     0196                     	;# 
  3630     0197                     	;# 
  3631     0199                     	;# 
  3632     0199                     	;# 
  3633     0199                     	;# 
  3634     019A                     	;# 
  3635     019A                     	;# 
  3636     019A                     	;# 
  3637     019B                     	;# 
  3638     019B                     	;# 
  3639     019B                     	;# 
  3640     019B                     	;# 
  3641     019B                     	;# 
  3642     019C                     	;# 
  3643     019C                     	;# 
  3644     019C                     	;# 
  3645     019D                     	;# 
  3646     019D                     	;# 
  3647     019D                     	;# 
  3648     019E                     	;# 
  3649     019E                     	;# 
  3650     019E                     	;# 
  3651     019F                     	;# 
  3652     019F                     	;# 
  3653     019F                     	;# 
  3654     019F                     	;# 
  3655     019F                     	;# 
  3656     020C                     	;# 
  3657     020D                     	;# 
  3658     020E                     	;# 
  3659     0211                     	;# 
  3660     0211                     	;# 
  3661     0212                     	;# 
  3662     0212                     	;# 
  3663     0213                     	;# 
  3664     0213                     	;# 
  3665     0214                     	;# 
  3666     0214                     	;# 
  3667     0215                     	;# 
  3668     0215                     	;# 
  3669     0215                     	;# 
  3670     0215                     	;# 
  3671     0216                     	;# 
  3672     0216                     	;# 
  3673     0217                     	;# 
  3674     0217                     	;# 
  3675     028C                     	;# 
  3676     028D                     	;# 
  3677     028E                     	;# 
  3678     0291                     	;# 
  3679     0291                     	;# 
  3680     0292                     	;# 
  3681     0293                     	;# 
  3682     0294                     	;# 
  3683     0298                     	;# 
  3684     0298                     	;# 
  3685     0299                     	;# 
  3686     029A                     	;# 
  3687     029B                     	;# 
  3688     029E                     	;# 
  3689     030C                     	;# 
  3690     030D                     	;# 
  3691     030E                     	;# 
  3692     038C                     	;# 
  3693     038D                     	;# 
  3694     038E                     	;# 
  3695     0391                     	;# 
  3696     0392                     	;# 
  3697     0393                     	;# 
  3698     0394                     	;# 
  3699     0395                     	;# 
  3700     0396                     	;# 
  3701     0397                     	;# 
  3702     0398                     	;# 
  3703     0399                     	;# 
  3704     040E                     	;# 
  3705     0413                     	;# 
  3706     0413                     	;# 
  3707     0414                     	;# 
  3708     0414                     	;# 
  3709     0415                     	;# 
  3710     0416                     	;# 
  3711     0417                     	;# 
  3712     0418                     	;# 
  3713     041A                     	;# 
  3714     041A                     	;# 
  3715     041B                     	;# 
  3716     041B                     	;# 
  3717     041C                     	;# 
  3718     041D                     	;# 
  3719     041E                     	;# 
  3720     041F                     	;# 
  3721     0493                     	;# 
  3722     0494                     	;# 
  3723     0495                     	;# 
  3724     0496                     	;# 
  3725     049A                     	;# 
  3726     049B                     	;# 
  3727     049C                     	;# 
  3728     049D                     	;# 
  3729     058C                     	;# 
  3730     058C                     	;# 
  3731     058D                     	;# 
  3732     058E                     	;# 
  3733     058E                     	;# 
  3734     058F                     	;# 
  3735     0590                     	;# 
  3736     0590                     	;# 
  3737     0591                     	;# 
  3738     0592                     	;# 
  3739     0592                     	;# 
  3740     0593                     	;# 
  3741     0594                     	;# 
  3742     0594                     	;# 
  3743     0595                     	;# 
  3744     0596                     	;# 
  3745     0596                     	;# 
  3746     0597                     	;# 
  3747     0598                     	;# 
  3748     0599                     	;# 
  3749     059A                     	;# 
  3750     059B                     	;# 
  3751     059B                     	;# 
  3752     059C                     	;# 
  3753     059D                     	;# 
  3754     060C                     	;# 
  3755     060C                     	;# 
  3756     060D                     	;# 
  3757     060E                     	;# 
  3758     060F                     	;# 
  3759     060F                     	;# 
  3760     0610                     	;# 
  3761     0611                     	;# 
  3762     0612                     	;# 
  3763     0613                     	;# 
  3764     0614                     	;# 
  3765     0617                     	;# 
  3766     0617                     	;# 
  3767     0618                     	;# 
  3768     0619                     	;# 
  3769     061A                     	;# 
  3770     061A                     	;# 
  3771     061B                     	;# 
  3772     061C                     	;# 
  3773     0691                     	;# 
  3774     0692                     	;# 
  3775     0693                     	;# 
  3776     0694                     	;# 
  3777     0695                     	;# 
  3778     0696                     	;# 
  3779     0697                     	;# 
  3780     0699                     	;# 
  3781     069A                     	;# 
  3782     0711                     	;# 
  3783     0712                     	;# 
  3784     0713                     	;# 
  3785     0714                     	;# 
  3786     0715                     	;# 
  3787     0718                     	;# 
  3788     0718                     	;# 
  3789     0719                     	;# 
  3790     071A                     	;# 
  3791     071A                     	;# 
  3792     071B                     	;# 
  3793     071C                     	;# 
  3794     071D                     	;# 
  3795     0791                     	;# 
  3796     0791                     	;# 
  3797     0792                     	;# 
  3798     0793                     	;# 
  3799     0793                     	;# 
  3800     0794                     	;# 
  3801     0795                     	;# 
  3802     0795                     	;# 
  3803     0796                     	;# 
  3804     0797                     	;# 
  3805     0797                     	;# 
  3806     0798                     	;# 
  3807     0799                     	;# 
  3808     079A                     	;# 
  3809     080C                     	;# 
  3810     080C                     	;# 
  3811     080D                     	;# 
  3812     080E                     	;# 
  3813     080E                     	;# 
  3814     080F                     	;# 
  3815     0810                     	;# 
  3816     0810                     	;# 
  3817     0811                     	;# 
  3818     0812                     	;# 
  3819     0812                     	;# 
  3820     0813                     	;# 
  3821     0814                     	;# 
  3822     0815                     	;# 
  3823     0816                     	;# 
  3824     0817                     	;# 
  3825     0818                     	;# 
  3826     0819                     	;# 
  3827     081A                     	;# 
  3828     081A                     	;# 
  3829     081B                     	;# 
  3830     081C                     	;# 
  3831     081C                     	;# 
  3832     081D                     	;# 
  3833     088C                     	;# 
  3834     088D                     	;# 
  3835     088E                     	;# 
  3836     088F                     	;# 
  3837     088F                     	;# 
  3838     0890                     	;# 
  3839     0891                     	;# 
  3840     0892                     	;# 
  3841     0893                     	;# 
  3842     0893                     	;# 
  3843     0894                     	;# 
  3844     0895                     	;# 
  3845     0896                     	;# 
  3846     0897                     	;# 
  3847     0897                     	;# 
  3848     0898                     	;# 
  3849     0899                     	;# 
  3850     0D8C                     	;# 
  3851     0D8C                     	;# 
  3852     0D8D                     	;# 
  3853     0D8E                     	;# 
  3854     0D8F                     	;# 
  3855     0D8F                     	;# 
  3856     0D90                     	;# 
  3857     0D91                     	;# 
  3858     0D92                     	;# 
  3859     0D92                     	;# 
  3860     0D93                     	;# 
  3861     0D94                     	;# 
  3862     0D95                     	;# 
  3863     0D95                     	;# 
  3864     0D96                     	;# 
  3865     0D97                     	;# 
  3866     0D98                     	;# 
  3867     0D99                     	;# 
  3868     0D9A                     	;# 
  3869     0D9B                     	;# 
  3870     0D9C                     	;# 
  3871     0D9D                     	;# 
  3872     0D9E                     	;# 
  3873     0D9E                     	;# 
  3874     0D9F                     	;# 
  3875     0DA0                     	;# 
  3876     0DA1                     	;# 
  3877     0DA1                     	;# 
  3878     0DA2                     	;# 
  3879     0DA3                     	;# 
  3880     0DA4                     	;# 
  3881     0DA4                     	;# 
  3882     0DA5                     	;# 
  3883     0DA6                     	;# 
  3884     0DA7                     	;# 
  3885     0DA7                     	;# 
  3886     0DA8                     	;# 
  3887     0DA9                     	;# 
  3888     0DAA                     	;# 
  3889     0DAB                     	;# 
  3890     0DAC                     	;# 
  3891     0DAD                     	;# 
  3892     0DAE                     	;# 
  3893     0DAF                     	;# 
  3894     0E0F                     	;# 
  3895     0E10                     	;# 
  3896     0E11                     	;# 
  3897     0E12                     	;# 
  3898     0E13                     	;# 
  3899     0E14                     	;# 
  3900     0E15                     	;# 
  3901     0E16                     	;# 
  3902     0E17                     	;# 
  3903     0E17                     	;# 
  3904     0E18                     	;# 
  3905     0E18                     	;# 
  3906     0E19                     	;# 
  3907     0E1A                     	;# 
  3908     0E1B                     	;# 
  3909     0E1B                     	;# 
  3910     0E1C                     	;# 
  3911     0E1D                     	;# 
  3912     0E1E                     	;# 
  3913     0E1E                     	;# 
  3914     0E1F                     	;# 
  3915     0E20                     	;# 
  3916     0E21                     	;# 
  3917     0E22                     	;# 
  3918     0E23                     	;# 
  3919     0E24                     	;# 
  3920     0E25                     	;# 
  3921     0E26                     	;# 
  3922     0E27                     	;# 
  3923     0E28                     	;# 
  3924     0E29                     	;# 
  3925     0E2A                     	;# 
  3926     0E2B                     	;# 
  3927     0E2C                     	;# 
  3928     0E2D                     	;# 
  3929     0E2E                     	;# 
  3930     0E90                     	;# 
  3931     0E91                     	;# 
  3932     0E92                     	;# 
  3933     0E94                     	;# 
  3934     0E95                     	;# 
  3935     0E9C                     	;# 
  3936     0E9D                     	;# 
  3937     0E9E                     	;# 
  3938     0E9F                     	;# 
  3939     0EA0                     	;# 
  3940     0EA1                     	;# 
  3941     0EA2                     	;# 
  3942     0EA3                     	;# 
  3943     0EA4                     	;# 
  3944     0EA5                     	;# 
  3945     0EA6                     	;# 
  3946     0EA7                     	;# 
  3947     0F0F                     	;# 
  3948     0F10                     	;# 
  3949     0F11                     	;# 
  3950     0F12                     	;# 
  3951     0F13                     	;# 
  3952     0F14                     	;# 
  3953     0F15                     	;# 
  3954     0F16                     	;# 
  3955     0F17                     	;# 
  3956     0F18                     	;# 
  3957     0F19                     	;# 
  3958     0F1A                     	;# 
  3959     0F1B                     	;# 
  3960     0F1C                     	;# 
  3961     0F1D                     	;# 
  3962     0F1E                     	;# 
  3963     0F1F                     	;# 
  3964     0F20                     	;# 
  3965     0F21                     	;# 
  3966     0F22                     	;# 
  3967     0F23                     	;# 
  3968     0FE4                     	;# 
  3969     0FE5                     	;# 
  3970     0FE6                     	;# 
  3971     0FE7                     	;# 
  3972     0FE8                     	;# 
  3973     0FE9                     	;# 
  3974     0FEA                     	;# 
  3975     0FEB                     	;# 
  3976     0FED                     	;# 
  3977     0FEE                     	;# 
  3978     0FEF                     	;# 
  3979     0000                     	;# 
  3980     0001                     	;# 
  3981     0002                     	;# 
  3982     0003                     	;# 
  3983     0004                     	;# 
  3984     0005                     	;# 
  3985     0006                     	;# 
  3986     0007                     	;# 
  3987     0008                     	;# 
  3988     0009                     	;# 
  3989     000A                     	;# 
  3990     000B                     	;# 
  3991     000C                     	;# 
  3992     000D                     	;# 
  3993     000E                     	;# 
  3994     0010                     	;# 
  3995     0011                     	;# 
  3996     0012                     	;# 
  3997     0013                     	;# 
  3998     0014                     	;# 
  3999     0015                     	;# 
  4000     0016                     	;# 
  4001     0016                     	;# 
  4002     0017                     	;# 
  4003     0018                     	;# 
  4004     0019                     	;# 
  4005     001A                     	;# 
  4006     001A                     	;# 
  4007     001B                     	;# 
  4008     001B                     	;# 
  4009     001C                     	;# 
  4010     001D                     	;# 
  4011     001E                     	;# 
  4012     001F                     	;# 
  4013     008C                     	;# 
  4014     008D                     	;# 
  4015     008E                     	;# 
  4016     0090                     	;# 
  4017     0091                     	;# 
  4018     0092                     	;# 
  4019     0093                     	;# 
  4020     0094                     	;# 
  4021     0095                     	;# 
  4022     0096                     	;# 
  4023     0098                     	;# 
  4024     0099                     	;# 
  4025     009A                     	;# 
  4026     009B                     	;# 
  4027     009B                     	;# 
  4028     009C                     	;# 
  4029     009D                     	;# 
  4030     009E                     	;# 
  4031     009F                     	;# 
  4032     010C                     	;# 
  4033     010D                     	;# 
  4034     010E                     	;# 
  4035     0111                     	;# 
  4036     0112                     	;# 
  4037     0113                     	;# 
  4038     0114                     	;# 
  4039     0115                     	;# 
  4040     0116                     	;# 
  4041     0117                     	;# 
  4042     0118                     	;# 
  4043     0119                     	;# 
  4044     011C                     	;# 
  4045     018C                     	;# 
  4046     018D                     	;# 
  4047     018E                     	;# 
  4048     0191                     	;# 
  4049     0191                     	;# 
  4050     0192                     	;# 
  4051     0193                     	;# 
  4052     0193                     	;# 
  4053     0194                     	;# 
  4054     0195                     	;# 
  4055     0196                     	;# 
  4056     0197                     	;# 
  4057     0199                     	;# 
  4058     0199                     	;# 
  4059     0199                     	;# 
  4060     019A                     	;# 
  4061     019A                     	;# 
  4062     019A                     	;# 
  4063     019B                     	;# 
  4064     019B                     	;# 
  4065     019B                     	;# 
  4066     019B                     	;# 
  4067     019B                     	;# 
  4068     019C                     	;# 
  4069     019C                     	;# 
  4070     019C                     	;# 
  4071     019D                     	;# 
  4072     019D                     	;# 
  4073     019D                     	;# 
  4074     019E                     	;# 
  4075     019E                     	;# 
  4076     019E                     	;# 
  4077     019F                     	;# 
  4078     019F                     	;# 
  4079     019F                     	;# 
  4080     019F                     	;# 
  4081     019F                     	;# 
  4082     020C                     	;# 
  4083     020D                     	;# 
  4084     020E                     	;# 
  4085     0211                     	;# 
  4086     0211                     	;# 
  4087     0212                     	;# 
  4088     0212                     	;# 
  4089     0213                     	;# 
  4090     0213                     	;# 
  4091     0214                     	;# 
  4092     0214                     	;# 
  4093     0215                     	;# 
  4094     0215                     	;# 
  4095     0215                     	;# 
  4096     0215                     	;# 
  4097     0216                     	;# 
  4098     0216                     	;# 
  4099     0217                     	;# 
  4100     0217                     	;# 
  4101     028C                     	;# 
  4102     028D                     	;# 
  4103     028E                     	;# 
  4104     0291                     	;# 
  4105     0291                     	;# 
  4106     0292                     	;# 
  4107     0293                     	;# 
  4108     0294                     	;# 
  4109     0298                     	;# 
  4110     0298                     	;# 
  4111     0299                     	;# 
  4112     029A                     	;# 
  4113     029B                     	;# 
  4114     029E                     	;# 
  4115     030C                     	;# 
  4116     030D                     	;# 
  4117     030E                     	;# 
  4118     038C                     	;# 
  4119     038D                     	;# 
  4120     038E                     	;# 
  4121     0391                     	;# 
  4122     0392                     	;# 
  4123     0393                     	;# 
  4124     0394                     	;# 
  4125     0395                     	;# 
  4126     0396                     	;# 
  4127     0397                     	;# 
  4128     0398                     	;# 
  4129     0399                     	;# 
  4130     040E                     	;# 
  4131     0413                     	;# 
  4132     0413                     	;# 
  4133     0414                     	;# 
  4134     0414                     	;# 
  4135     0415                     	;# 
  4136     0416                     	;# 
  4137     0417                     	;# 
  4138     0418                     	;# 
  4139     041A                     	;# 
  4140     041A                     	;# 
  4141     041B                     	;# 
  4142     041B                     	;# 
  4143     041C                     	;# 
  4144     041D                     	;# 
  4145     041E                     	;# 
  4146     041F                     	;# 
  4147     0493                     	;# 
  4148     0494                     	;# 
  4149     0495                     	;# 
  4150     0496                     	;# 
  4151     049A                     	;# 
  4152     049B                     	;# 
  4153     049C                     	;# 
  4154     049D                     	;# 
  4155     058C                     	;# 
  4156     058C                     	;# 
  4157     058D                     	;# 
  4158     058E                     	;# 
  4159     058E                     	;# 
  4160     058F                     	;# 
  4161     0590                     	;# 
  4162     0590                     	;# 
  4163     0591                     	;# 
  4164     0592                     	;# 
  4165     0592                     	;# 
  4166     0593                     	;# 
  4167     0594                     	;# 
  4168     0594                     	;# 
  4169     0595                     	;# 
  4170     0596                     	;# 
  4171     0596                     	;# 
  4172     0597                     	;# 
  4173     0598                     	;# 
  4174     0599                     	;# 
  4175     059A                     	;# 
  4176     059B                     	;# 
  4177     059B                     	;# 
  4178     059C                     	;# 
  4179     059D                     	;# 
  4180     060C                     	;# 
  4181     060C                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     060F                     	;# 
  4186     0610                     	;# 
  4187     0611                     	;# 
  4188     0612                     	;# 
  4189     0613                     	;# 
  4190     0614                     	;# 
  4191     0617                     	;# 
  4192     0617                     	;# 
  4193     0618                     	;# 
  4194     0619                     	;# 
  4195     061A                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     0691                     	;# 
  4200     0692                     	;# 
  4201     0693                     	;# 
  4202     0694                     	;# 
  4203     0695                     	;# 
  4204     0696                     	;# 
  4205     0697                     	;# 
  4206     0699                     	;# 
  4207     069A                     	;# 
  4208     0711                     	;# 
  4209     0712                     	;# 
  4210     0713                     	;# 
  4211     0714                     	;# 
  4212     0715                     	;# 
  4213     0718                     	;# 
  4214     0718                     	;# 
  4215     0719                     	;# 
  4216     071A                     	;# 
  4217     071A                     	;# 
  4218     071B                     	;# 
  4219     071C                     	;# 
  4220     071D                     	;# 
  4221     0791                     	;# 
  4222     0791                     	;# 
  4223     0792                     	;# 
  4224     0793                     	;# 
  4225     0793                     	;# 
  4226     0794                     	;# 
  4227     0795                     	;# 
  4228     0795                     	;# 
  4229     0796                     	;# 
  4230     0797                     	;# 
  4231     0797                     	;# 
  4232     0798                     	;# 
  4233     0799                     	;# 
  4234     079A                     	;# 
  4235     080C                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080E                     	;# 
  4240     080F                     	;# 
  4241     0810                     	;# 
  4242     0810                     	;# 
  4243     0811                     	;# 
  4244     0812                     	;# 
  4245     0812                     	;# 
  4246     0813                     	;# 
  4247     0814                     	;# 
  4248     0815                     	;# 
  4249     0816                     	;# 
  4250     0817                     	;# 
  4251     0818                     	;# 
  4252     0819                     	;# 
  4253     081A                     	;# 
  4254     081A                     	;# 
  4255     081B                     	;# 
  4256     081C                     	;# 
  4257     081C                     	;# 
  4258     081D                     	;# 
  4259     088C                     	;# 
  4260     088D                     	;# 
  4261     088E                     	;# 
  4262     088F                     	;# 
  4263     088F                     	;# 
  4264     0890                     	;# 
  4265     0891                     	;# 
  4266     0892                     	;# 
  4267     0893                     	;# 
  4268     0893                     	;# 
  4269     0894                     	;# 
  4270     0895                     	;# 
  4271     0896                     	;# 
  4272     0897                     	;# 
  4273     0897                     	;# 
  4274     0898                     	;# 
  4275     0899                     	;# 
  4276     0D8C                     	;# 
  4277     0D8C                     	;# 
  4278     0D8D                     	;# 
  4279     0D8E                     	;# 
  4280     0D8F                     	;# 
  4281     0D8F                     	;# 
  4282     0D90                     	;# 
  4283     0D91                     	;# 
  4284     0D92                     	;# 
  4285     0D92                     	;# 
  4286     0D93                     	;# 
  4287     0D94                     	;# 
  4288     0D95                     	;# 
  4289     0D95                     	;# 
  4290     0D96                     	;# 
  4291     0D97                     	;# 
  4292     0D98                     	;# 
  4293     0D99                     	;# 
  4294     0D9A                     	;# 
  4295     0D9B                     	;# 
  4296     0D9C                     	;# 
  4297     0D9D                     	;# 
  4298     0D9E                     	;# 
  4299     0D9E                     	;# 
  4300     0D9F                     	;# 
  4301     0DA0                     	;# 
  4302     0DA1                     	;# 
  4303     0DA1                     	;# 
  4304     0DA2                     	;# 
  4305     0DA3                     	;# 
  4306     0DA4                     	;# 
  4307     0DA4                     	;# 
  4308     0DA5                     	;# 
  4309     0DA6                     	;# 
  4310     0DA7                     	;# 
  4311     0DA7                     	;# 
  4312     0DA8                     	;# 
  4313     0DA9                     	;# 
  4314     0DAA                     	;# 
  4315     0DAB                     	;# 
  4316     0DAC                     	;# 
  4317     0DAD                     	;# 
  4318     0DAE                     	;# 
  4319     0DAF                     	;# 
  4320     0E0F                     	;# 
  4321     0E10                     	;# 
  4322     0E11                     	;# 
  4323     0E12                     	;# 
  4324     0E13                     	;# 
  4325     0E14                     	;# 
  4326     0E15                     	;# 
  4327     0E16                     	;# 
  4328     0E17                     	;# 
  4329     0E17                     	;# 
  4330     0E18                     	;# 
  4331     0E18                     	;# 
  4332     0E19                     	;# 
  4333     0E1A                     	;# 
  4334     0E1B                     	;# 
  4335     0E1B                     	;# 
  4336     0E1C                     	;# 
  4337     0E1D                     	;# 
  4338     0E1E                     	;# 
  4339     0E1E                     	;# 
  4340     0E1F                     	;# 
  4341     0E20                     	;# 
  4342     0E21                     	;# 
  4343     0E22                     	;# 
  4344     0E23                     	;# 
  4345     0E24                     	;# 
  4346     0E25                     	;# 
  4347     0E26                     	;# 
  4348     0E27                     	;# 
  4349     0E28                     	;# 
  4350     0E29                     	;# 
  4351     0E2A                     	;# 
  4352     0E2B                     	;# 
  4353     0E2C                     	;# 
  4354     0E2D                     	;# 
  4355     0E2E                     	;# 
  4356     0E90                     	;# 
  4357     0E91                     	;# 
  4358     0E92                     	;# 
  4359     0E94                     	;# 
  4360     0E95                     	;# 
  4361     0E9C                     	;# 
  4362     0E9D                     	;# 
  4363     0E9E                     	;# 
  4364     0E9F                     	;# 
  4365     0EA0                     	;# 
  4366     0EA1                     	;# 
  4367     0EA2                     	;# 
  4368     0EA3                     	;# 
  4369     0EA4                     	;# 
  4370     0EA5                     	;# 
  4371     0EA6                     	;# 
  4372     0EA7                     	;# 
  4373     0F0F                     	;# 
  4374     0F10                     	;# 
  4375     0F11                     	;# 
  4376     0F12                     	;# 
  4377     0F13                     	;# 
  4378     0F14                     	;# 
  4379     0F15                     	;# 
  4380     0F16                     	;# 
  4381     0F17                     	;# 
  4382     0F18                     	;# 
  4383     0F19                     	;# 
  4384     0F1A                     	;# 
  4385     0F1B                     	;# 
  4386     0F1C                     	;# 
  4387     0F1D                     	;# 
  4388     0F1E                     	;# 
  4389     0F1F                     	;# 
  4390     0F20                     	;# 
  4391     0F21                     	;# 
  4392     0F22                     	;# 
  4393     0F23                     	;# 
  4394     0FE4                     	;# 
  4395     0FE5                     	;# 
  4396     0FE6                     	;# 
  4397     0FE7                     	;# 
  4398     0FE8                     	;# 
  4399     0FE9                     	;# 
  4400     0FEA                     	;# 
  4401     0FEB                     	;# 
  4402     0FED                     	;# 
  4403     0FEE                     	;# 
  4404     0FEF                     	;# 
  4405     0000                     	;# 
  4406     0001                     	;# 
  4407     0002                     	;# 
  4408     0003                     	;# 
  4409     0004                     	;# 
  4410     0005                     	;# 
  4411     0006                     	;# 
  4412     0007                     	;# 
  4413     0008                     	;# 
  4414     0009                     	;# 
  4415     000A                     	;# 
  4416     000B                     	;# 
  4417     000C                     	;# 
  4418     000D                     	;# 
  4419     000E                     	;# 
  4420     0010                     	;# 
  4421     0011                     	;# 
  4422     0012                     	;# 
  4423     0013                     	;# 
  4424     0014                     	;# 
  4425     0015                     	;# 
  4426     0016                     	;# 
  4427     0016                     	;# 
  4428     0017                     	;# 
  4429     0018                     	;# 
  4430     0019                     	;# 
  4431     001A                     	;# 
  4432     001A                     	;# 
  4433     001B                     	;# 
  4434     001B                     	;# 
  4435     001C                     	;# 
  4436     001D                     	;# 
  4437     001E                     	;# 
  4438     001F                     	;# 
  4439     008C                     	;# 
  4440     008D                     	;# 
  4441     008E                     	;# 
  4442     0090                     	;# 
  4443     0091                     	;# 
  4444     0092                     	;# 
  4445     0093                     	;# 
  4446     0094                     	;# 
  4447     0095                     	;# 
  4448     0096                     	;# 
  4449     0098                     	;# 
  4450     0099                     	;# 
  4451     009A                     	;# 
  4452     009B                     	;# 
  4453     009B                     	;# 
  4454     009C                     	;# 
  4455     009D                     	;# 
  4456     009E                     	;# 
  4457     009F                     	;# 
  4458     010C                     	;# 
  4459     010D                     	;# 
  4460     010E                     	;# 
  4461     0111                     	;# 
  4462     0112                     	;# 
  4463     0113                     	;# 
  4464     0114                     	;# 
  4465     0115                     	;# 
  4466     0116                     	;# 
  4467     0117                     	;# 
  4468     0118                     	;# 
  4469     0119                     	;# 
  4470     011C                     	;# 
  4471     018C                     	;# 
  4472     018D                     	;# 
  4473     018E                     	;# 
  4474     0191                     	;# 
  4475     0191                     	;# 
  4476     0192                     	;# 
  4477     0193                     	;# 
  4478     0193                     	;# 
  4479     0194                     	;# 
  4480     0195                     	;# 
  4481     0196                     	;# 
  4482     0197                     	;# 
  4483     0199                     	;# 
  4484     0199                     	;# 
  4485     0199                     	;# 
  4486     019A                     	;# 
  4487     019A                     	;# 
  4488     019A                     	;# 
  4489     019B                     	;# 
  4490     019B                     	;# 
  4491     019B                     	;# 
  4492     019B                     	;# 
  4493     019B                     	;# 
  4494     019C                     	;# 
  4495     019C                     	;# 
  4496     019C                     	;# 
  4497     019D                     	;# 
  4498     019D                     	;# 
  4499     019D                     	;# 
  4500     019E                     	;# 
  4501     019E                     	;# 
  4502     019E                     	;# 
  4503     019F                     	;# 
  4504     019F                     	;# 
  4505     019F                     	;# 
  4506     019F                     	;# 
  4507     019F                     	;# 
  4508     020C                     	;# 
  4509     020D                     	;# 
  4510     020E                     	;# 
  4511     0211                     	;# 
  4512     0211                     	;# 
  4513     0212                     	;# 
  4514     0212                     	;# 
  4515     0213                     	;# 
  4516     0213                     	;# 
  4517     0214                     	;# 
  4518     0214                     	;# 
  4519     0215                     	;# 
  4520     0215                     	;# 
  4521     0215                     	;# 
  4522     0215                     	;# 
  4523     0216                     	;# 
  4524     0216                     	;# 
  4525     0217                     	;# 
  4526     0217                     	;# 
  4527     028C                     	;# 
  4528     028D                     	;# 
  4529     028E                     	;# 
  4530     0291                     	;# 
  4531     0291                     	;# 
  4532     0292                     	;# 
  4533     0293                     	;# 
  4534     0294                     	;# 
  4535     0298                     	;# 
  4536     0298                     	;# 
  4537     0299                     	;# 
  4538     029A                     	;# 
  4539     029B                     	;# 
  4540     029E                     	;# 
  4541     030C                     	;# 
  4542     030D                     	;# 
  4543     030E                     	;# 
  4544     038C                     	;# 
  4545     038D                     	;# 
  4546     038E                     	;# 
  4547     0391                     	;# 
  4548     0392                     	;# 
  4549     0393                     	;# 
  4550     0394                     	;# 
  4551     0395                     	;# 
  4552     0396                     	;# 
  4553     0397                     	;# 
  4554     0398                     	;# 
  4555     0399                     	;# 
  4556     040E                     	;# 
  4557     0413                     	;# 
  4558     0413                     	;# 
  4559     0414                     	;# 
  4560     0414                     	;# 
  4561     0415                     	;# 
  4562     0416                     	;# 
  4563     0417                     	;# 
  4564     0418                     	;# 
  4565     041A                     	;# 
  4566     041A                     	;# 
  4567     041B                     	;# 
  4568     041B                     	;# 
  4569     041C                     	;# 
  4570     041D                     	;# 
  4571     041E                     	;# 
  4572     041F                     	;# 
  4573     0493                     	;# 
  4574     0494                     	;# 
  4575     0495                     	;# 
  4576     0496                     	;# 
  4577     049A                     	;# 
  4578     049B                     	;# 
  4579     049C                     	;# 
  4580     049D                     	;# 
  4581     058C                     	;# 
  4582     058C                     	;# 
  4583     058D                     	;# 
  4584     058E                     	;# 
  4585     058E                     	;# 
  4586     058F                     	;# 
  4587     0590                     	;# 
  4588     0590                     	;# 
  4589     0591                     	;# 
  4590     0592                     	;# 
  4591     0592                     	;# 
  4592     0593                     	;# 
  4593     0594                     	;# 
  4594     0594                     	;# 
  4595     0595                     	;# 
  4596     0596                     	;# 
  4597     0596                     	;# 
  4598     0597                     	;# 
  4599     0598                     	;# 
  4600     0599                     	;# 
  4601     059A                     	;# 
  4602     059B                     	;# 
  4603     059B                     	;# 
  4604     059C                     	;# 
  4605     059D                     	;# 
  4606     060C                     	;# 
  4607     060C                     	;# 
  4608     060D                     	;# 
  4609     060E                     	;# 
  4610     060F                     	;# 
  4611     060F                     	;# 
  4612     0610                     	;# 
  4613     0611                     	;# 
  4614     0612                     	;# 
  4615     0613                     	;# 
  4616     0614                     	;# 
  4617     0617                     	;# 
  4618     0617                     	;# 
  4619     0618                     	;# 
  4620     0619                     	;# 
  4621     061A                     	;# 
  4622     061A                     	;# 
  4623     061B                     	;# 
  4624     061C                     	;# 
  4625     0691                     	;# 
  4626     0692                     	;# 
  4627     0693                     	;# 
  4628     0694                     	;# 
  4629     0695                     	;# 
  4630     0696                     	;# 
  4631     0697                     	;# 
  4632     0699                     	;# 
  4633     069A                     	;# 
  4634     0711                     	;# 
  4635     0712                     	;# 
  4636     0713                     	;# 
  4637     0714                     	;# 
  4638     0715                     	;# 
  4639     0718                     	;# 
  4640     0718                     	;# 
  4641     0719                     	;# 
  4642     071A                     	;# 
  4643     071A                     	;# 
  4644     071B                     	;# 
  4645     071C                     	;# 
  4646     071D                     	;# 
  4647     0791                     	;# 
  4648     0791                     	;# 
  4649     0792                     	;# 
  4650     0793                     	;# 
  4651     0793                     	;# 
  4652     0794                     	;# 
  4653     0795                     	;# 
  4654     0795                     	;# 
  4655     0796                     	;# 
  4656     0797                     	;# 
  4657     0797                     	;# 
  4658     0798                     	;# 
  4659     0799                     	;# 
  4660     079A                     	;# 
  4661     080C                     	;# 
  4662     080C                     	;# 
  4663     080D                     	;# 
  4664     080E                     	;# 
  4665     080E                     	;# 
  4666     080F                     	;# 
  4667     0810                     	;# 
  4668     0810                     	;# 
  4669     0811                     	;# 
  4670     0812                     	;# 
  4671     0812                     	;# 
  4672     0813                     	;# 
  4673     0814                     	;# 
  4674     0815                     	;# 
  4675     0816                     	;# 
  4676     0817                     	;# 
  4677     0818                     	;# 
  4678     0819                     	;# 
  4679     081A                     	;# 
  4680     081A                     	;# 
  4681     081B                     	;# 
  4682     081C                     	;# 
  4683     081C                     	;# 
  4684     081D                     	;# 
  4685     088C                     	;# 
  4686     088D                     	;# 
  4687     088E                     	;# 
  4688     088F                     	;# 
  4689     088F                     	;# 
  4690     0890                     	;# 
  4691     0891                     	;# 
  4692     0892                     	;# 
  4693     0893                     	;# 
  4694     0893                     	;# 
  4695     0894                     	;# 
  4696     0895                     	;# 
  4697     0896                     	;# 
  4698     0897                     	;# 
  4699     0897                     	;# 
  4700     0898                     	;# 
  4701     0899                     	;# 
  4702     0D8C                     	;# 
  4703     0D8C                     	;# 
  4704     0D8D                     	;# 
  4705     0D8E                     	;# 
  4706     0D8F                     	;# 
  4707     0D8F                     	;# 
  4708     0D90                     	;# 
  4709     0D91                     	;# 
  4710     0D92                     	;# 
  4711     0D92                     	;# 
  4712     0D93                     	;# 
  4713     0D94                     	;# 
  4714     0D95                     	;# 
  4715     0D95                     	;# 
  4716     0D96                     	;# 
  4717     0D97                     	;# 
  4718     0D98                     	;# 
  4719     0D99                     	;# 
  4720     0D9A                     	;# 
  4721     0D9B                     	;# 
  4722     0D9C                     	;# 
  4723     0D9D                     	;# 
  4724     0D9E                     	;# 
  4725     0D9E                     	;# 
  4726     0D9F                     	;# 
  4727     0DA0                     	;# 
  4728     0DA1                     	;# 
  4729     0DA1                     	;# 
  4730     0DA2                     	;# 
  4731     0DA3                     	;# 
  4732     0DA4                     	;# 
  4733     0DA4                     	;# 
  4734     0DA5                     	;# 
  4735     0DA6                     	;# 
  4736     0DA7                     	;# 
  4737     0DA7                     	;# 
  4738     0DA8                     	;# 
  4739     0DA9                     	;# 
  4740     0DAA                     	;# 
  4741     0DAB                     	;# 
  4742     0DAC                     	;# 
  4743     0DAD                     	;# 
  4744     0DAE                     	;# 
  4745     0DAF                     	;# 
  4746     0E0F                     	;# 
  4747     0E10                     	;# 
  4748     0E11                     	;# 
  4749     0E12                     	;# 
  4750     0E13                     	;# 
  4751     0E14                     	;# 
  4752     0E15                     	;# 
  4753     0E16                     	;# 
  4754     0E17                     	;# 
  4755     0E17                     	;# 
  4756     0E18                     	;# 
  4757     0E18                     	;# 
  4758     0E19                     	;# 
  4759     0E1A                     	;# 
  4760     0E1B                     	;# 
  4761     0E1B                     	;# 
  4762     0E1C                     	;# 
  4763     0E1D                     	;# 
  4764     0E1E                     	;# 
  4765     0E1E                     	;# 
  4766     0E1F                     	;# 
  4767     0E20                     	;# 
  4768     0E21                     	;# 
  4769     0E22                     	;# 
  4770     0E23                     	;# 
  4771     0E24                     	;# 
  4772     0E25                     	;# 
  4773     0E26                     	;# 
  4774     0E27                     	;# 
  4775     0E28                     	;# 
  4776     0E29                     	;# 
  4777     0E2A                     	;# 
  4778     0E2B                     	;# 
  4779     0E2C                     	;# 
  4780     0E2D                     	;# 
  4781     0E2E                     	;# 
  4782     0E90                     	;# 
  4783     0E91                     	;# 
  4784     0E92                     	;# 
  4785     0E94                     	;# 
  4786     0E95                     	;# 
  4787     0E9C                     	;# 
  4788     0E9D                     	;# 
  4789     0E9E                     	;# 
  4790     0E9F                     	;# 
  4791     0EA0                     	;# 
  4792     0EA1                     	;# 
  4793     0EA2                     	;# 
  4794     0EA3                     	;# 
  4795     0EA4                     	;# 
  4796     0EA5                     	;# 
  4797     0EA6                     	;# 
  4798     0EA7                     	;# 
  4799     0F0F                     	;# 
  4800     0F10                     	;# 
  4801     0F11                     	;# 
  4802     0F12                     	;# 
  4803     0F13                     	;# 
  4804     0F14                     	;# 
  4805     0F15                     	;# 
  4806     0F16                     	;# 
  4807     0F17                     	;# 
  4808     0F18                     	;# 
  4809     0F19                     	;# 
  4810     0F1A                     	;# 
  4811     0F1B                     	;# 
  4812     0F1C                     	;# 
  4813     0F1D                     	;# 
  4814     0F1E                     	;# 
  4815     0F1F                     	;# 
  4816     0F20                     	;# 
  4817     0F21                     	;# 
  4818     0F22                     	;# 
  4819     0F23                     	;# 
  4820     0FE4                     	;# 
  4821     0FE5                     	;# 
  4822     0FE6                     	;# 
  4823     0FE7                     	;# 
  4824     0FE8                     	;# 
  4825     0FE9                     	;# 
  4826     0FEA                     	;# 
  4827     0FEB                     	;# 
  4828     0FED                     	;# 
  4829     0FEE                     	;# 
  4830     0FEF                     	;# 
  4831                           
  4832 ;; Function _I2C1_Deinitialize is unused but had its address taken
  4833     0000                     
  4834 ;; Function _I2C1_WriteRead is unused but had its address taken
  4835     0000                     
  4836 ;; Function _I2C1_ErrorGet is unused but had its address taken
  4837     0000                     
  4838 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  4839     0000                     
  4840 ;; Function _EUSART_Deinitialize is unused but had its address taken
  4841     0000                     
  4842 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  4843     0000                     
  4844 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  4845     0000                     
  4846 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  4847     0000                     
  4848 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  4849     0000                     
  4850 ;; Function _EUSART_IsTxDone is unused but had its address taken
  4851     0000                     
  4852 ;; Function _EUSART_ErrorGet is unused but had its address taken
  4853     0000                     
  4854                           	psect	idataBANK0
  4855     0D93                     __pidataBANK0:
  4856                           
  4857                           ;initializer for _kaps
  4858     0D93  3451               	retlw	81
  4859     0D94  3400               	retlw	0
  4860     0D95  3400               	retlw	0
  4861     0D96  3400               	retlw	0
  4862     0D97  3400               	retlw	0
  4863     0D98  3400               	retlw	0
  4864     0D99  3400               	retlw	0
  4865                           
  4866                           	psect	idataBANK1
  4867     0E91                     __pidataBANK1:
  4868                           
  4869                           ;initializer for _sspas
  4870     0E91  3401               	retlw	1
  4871     0E92  3400               	retlw	0
  4872     0E93  3400               	retlw	0
  4873     0E94  3400               	retlw	0
  4874     0E95  3400               	retlw	0
  4875     0E96  3400               	retlw	0
  4876     0E97  3400               	retlw	0
  4877     0E98  3400               	retlw	0
  4878     0E99  3401               	retlw	1
  4879     0E9A  3400               	retlw	0
  4880     0E9B  3400               	retlw	0
  4881     0E9C  3400               	retlw	0
  4882     0E9D  3400               	retlw	0
  4883     0E9E  3400               	retlw	0
  4884     0E9F  3400               	retlw	0
  4885     0EA0  3400               	retlw	0
  4886     0EA1  3401               	retlw	1
  4887     0EA2  3400               	retlw	0
  4888     0EA3  3400               	retlw	0
  4889     0EA4  3400               	retlw	0
  4890     0EA5  3400               	retlw	0
  4891     0EA6  3400               	retlw	0
  4892     0EA7  3400               	retlw	0
  4893     0EA8  3400               	retlw	0
  4894                           
  4895                           	psect	stringtext1
  4896     077E                     __pstringtext1:
  4897     077E                     _UART:
  4898     077E  34A9               	retlw	low _EUSART_Initialize
  4899     077F  340E               	retlw	high _EUSART_Initialize
  4900     0780  3400               	retlw	0
  4901     0781  3400               	retlw	0
  4902     0782  347C               	retlw	low _EUSART_Read
  4903     0783  340F               	retlw	high _EUSART_Read
  4904     0784  3423               	retlw	low _EUSART_Write
  4905     0785  340D               	retlw	high _EUSART_Write
  4906     0786  3435               	retlw	low _EUSART_IsRxReady
  4907     0787  340D               	retlw	high _EUSART_IsRxReady
  4908     0788  3411               	retlw	low _EUSART_IsTxReady
  4909     0789  340E               	retlw	high _EUSART_IsTxReady
  4910     078A  3400               	retlw	0
  4911     078B  3400               	retlw	0
  4912     078C  3400               	retlw	0
  4913     078D  3400               	retlw	0
  4914     078E  3400               	retlw	0
  4915     078F  3400               	retlw	0
  4916     0790  3400               	retlw	0
  4917     0791  3400               	retlw	0
  4918     0792  3400               	retlw	0
  4919     0793  3400               	retlw	0
  4920     0794  3400               	retlw	0
  4921     0795  3400               	retlw	0
  4922     0796  3400               	retlw	0
  4923     0797  3400               	retlw	0
  4924     0798  3400               	retlw	0
  4925     0799  3400               	retlw	0
  4926     079A  3400               	retlw	0
  4927     079B  3400               	retlw	0
  4928     079C  3400               	retlw	0
  4929     079D  3400               	retlw	0
  4930     079E  3400               	retlw	0
  4931     079F  3400               	retlw	0
  4932     07A0  3400               	retlw	0
  4933     07A1  3400               	retlw	0
  4934     07A2  3400               	retlw	0
  4935     07A3  3400               	retlw	0
  4936     07A4  3400               	retlw	0
  4937     07A5  3400               	retlw	0
  4938     07A6  34BD               	retlw	low _EUSART_FramingErrorCallbackRegister
  4939     07A7  340D               	retlw	high _EUSART_FramingErrorCallbackRegister
  4940     07A8  34EB               	retlw	low _EUSART_OverrunErrorCallbackRegister
  4941     07A9  340D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  4942     07AA  3400               	retlw	0
  4943     07AB  3400               	retlw	0
  4944     07AC  3400               	retlw	0
  4945     07AD  3400               	retlw	0
  4946     07AE                     __end_of_UART:
  4947                           
  4948                           	psect	stringtext2
  4949     07FE                     __pstringtext2:
  4950     07FE                     _I2C_Host:
  4951     07FE  347B               	retlw	low _I2C1_Initialize
  4952     07FF  340E               	retlw	high _I2C1_Initialize
  4953     0800  3400               	retlw	0
  4954     0801  3400               	retlw	0
  4955     0802  34C6               	retlw	low _I2C1_Write
  4956     0803  340E               	retlw	high _I2C1_Write
  4957     0804  34DC               	retlw	low _I2C1_Read
  4958     0805  3407               	retlw	high _I2C1_Read
  4959     0806  3400               	retlw	0
  4960     0807  3400               	retlw	0
  4961     0808  3400               	retlw	0
  4962     0809  3400               	retlw	0
  4963     080A  3400               	retlw	0
  4964     080B  3400               	retlw	0
  4965     080C  3420               	retlw	low _I2C1_IsBusy
  4966     080D  340E               	retlw	high _I2C1_IsBusy
  4967     080E  34F7               	retlw	low _I2C1_CallbackRegister
  4968     080F  340D               	retlw	high _I2C1_CallbackRegister
  4969     0810  3400               	retlw	0
  4970     0811  3400               	retlw	0
  4971     0812                     __end_of_I2C_Host:
  4972                           
  4973                           	psect	stringtext3
  4974     0812                     __pstringtext3:
  4975     0812                     _i2c1_eventTable:
  4976     0812  3413               	retlw	low _I2C1_EVENT_IDLE
  4977     0813  340D               	retlw	high _I2C1_EVENT_IDLE
  4978     0814  349A               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  4979     0815  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  4980     0816  3469               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  4981     0817  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  4982     0818  34A6               	retlw	low _I2C1_EVENT_TX
  4983     0819  340F               	retlw	high _I2C1_EVENT_TX
  4984     081A  34DE               	retlw	low _I2C1_EVENT_RX
  4985     081B  3406               	retlw	high _I2C1_EVENT_RX
  4986     081C  343F               	retlw	low _I2C1_EVENT_NACK
  4987     081D  340D               	retlw	high _I2C1_EVENT_NACK
  4988     081E  3445               	retlw	low _I2C1_EVENT_ERROR
  4989     081F  340D               	retlw	high _I2C1_EVENT_ERROR
  4990     0820  34A2               	retlw	low _I2C1_EVENT_STOP
  4991     0821  340D               	retlw	high _I2C1_EVENT_STOP
  4992     0822  3470               	retlw	low _I2C1_EVENT_RESET
  4993     0823  340D               	retlw	high _I2C1_EVENT_RESET
  4994     0824                     __end_of_i2c1_eventTable:
  4995                           
  4996                           	psect	nvBANK0
  4997     006B                     __pnvBANK0:
  4998     006B                     _ADC_InterruptHandler:
  4999     006B                     	ds	2
  5000     000B                     _INTCONbits	set	11
  5001     0011                     _PIR2bits	set	17
  5002     0010                     _PIR1bits	set	16
  5003     0095                     _OPTION_REGbits	set	149
  5004     008E                     _TRISC	set	142
  5005     008D                     _TRISB	set	141
  5006     008C                     _TRISA	set	140
  5007     0098                     _OSCTUNE	set	152
  5008     0099                     _OSCCON	set	153
  5009     0091                     _PIE2bits	set	145
  5010     009D                     _ADCON0bits	set	157
  5011     0090                     _PIE1bits	set	144
  5012     009D                     _ADCON0	set	157
  5013     009F                     _ADCON2	set	159
  5014     009C                     _ADRESH	set	156
  5015     009B                     _ADRESL	set	155
  5016     009E                     _ADCON1	set	158
  5017     010E                     _LATCbits	set	270
  5018     010E                     _LATC	set	270
  5019     010D                     _LATB	set	269
  5020     010C                     _LATA	set	268
  5021     0116                     _BORCON	set	278
  5022     019A                     _TX1REG	set	410
  5023     0199                     _RC1REG	set	409
  5024     019F                     _BAUD1CONbits	set	415
  5025     019E                     _TX1STAbits	set	414
  5026     019D                     _RC1STAbits	set	413
  5027     019C                     _SPBRGH	set	412
  5028     019B                     _SPBRGL	set	411
  5029     019E                     _TX1STA	set	414
  5030     019D                     _RC1STA	set	413
  5031     019F                     _BAUD1CON	set	415
  5032     018E                     _ANSELC	set	398
  5033     018D                     _ANSELB	set	397
  5034     018C                     _ANSELA	set	396
  5035     020E                     _WPUC	set	526
  5036     020D                     _WPUB	set	525
  5037     020C                     _WPUA	set	524
  5038     0216                     _SSP1CON2bits	set	534
  5039     0211                     _SSP1BUF	set	529
  5040     0214                     _SSP1STATbits	set	532
  5041     0215                     _SSP1CON1bits	set	533
  5042     0212                     _SSP1ADD	set	530
  5043     0217                     _SSP1CON3	set	535
  5044     0216                     _SSP1CON2	set	534
  5045     0215                     _SSP1CON1	set	533
  5046     0214                     _SSP1STAT	set	532
  5047     028E                     _ODCONC	set	654
  5048     028D                     _ODCONB	set	653
  5049     028C                     _ODCONA	set	652
  5050     030E                     _SLRCONC	set	782
  5051     030D                     _SLRCONB	set	781
  5052     030C                     _SLRCONA	set	780
  5053     0399                     _IOCCF	set	921
  5054     0398                     _IOCCN	set	920
  5055     0397                     _IOCCP	set	919
  5056     0396                     _IOCBF	set	918
  5057     0395                     _IOCBN	set	917
  5058     0394                     _IOCBP	set	916
  5059     0393                     _IOCAF	set	915
  5060     0392                     _IOCAN	set	914
  5061     0391                     _IOCAP	set	913
  5062     038E                     _INLVLC	set	910
  5063     038D                     _INLVLB	set	909
  5064     038C                     _INLVLA	set	908
  5065     0E21                     _SSPDATPPS	set	3617
  5066     0E20                     _SSPCLKPPS	set	3616
  5067     0E24                     _RXPPS	set	3620
  5068     0E9D                     _RB5PPS	set	3741
  5069     0E9E                     _RB6PPS	set	3742
  5070     0EA2                     _RC2PPS	set	3746
  5071                           
  5072                           	psect	cinit
  5073     0038                     start_initialization:	
  5074                           ; #config settings
  5075                           
  5076     0038                     __initialization:
  5077                           
  5078                           ; Initialize objects allocated to BANK0
  5079     0038  3093               	movlw	low __pidataBANK0
  5080     0039  0084               	movwf	4
  5081     003A  308D               	movlw	(high __pidataBANK0)| (0+128)
  5082     003B  0085               	movwf	5
  5083     003C  3064               	movlw	low __pdataBANK0
  5084     003D  0086               	movwf	6
  5085     003E  3000               	movlw	high __pdataBANK0
  5086     003F  0087               	movwf	7
  5087     0040  3007               	movlw	7
  5088     0041  318D  2563  3180   	fcall	init_ram
  5089                           
  5090                           ; Initialize objects allocated to BANK1
  5091     0044  3091               	movlw	low __pidataBANK1
  5092     0045  0084               	movwf	4
  5093     0046  308E               	movlw	(high __pidataBANK1)| (0+128)
  5094     0047  0085               	movwf	5
  5095     0048  30A0               	movlw	low __pdataBANK1
  5096     0049  0086               	movwf	6
  5097     004A  3000               	movlw	high __pdataBANK1
  5098     004B  0087               	movwf	7
  5099     004C  3018               	movlw	24
  5100     004D  318D  2563  3180   	fcall	init_ram
  5101                           
  5102                           ; Clear objects allocated to COMMON
  5103     0050  01F6               	clrf	__pbssCOMMON& (0+127)
  5104     0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5105     0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5106     0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5107                           
  5108                           ; Clear objects allocated to BANK0
  5109     0054  3052               	movlw	low __pbssBANK0
  5110     0055  0084               	movwf	4
  5111     0056  3000               	movlw	high __pbssBANK0
  5112     0057  0085               	movwf	5
  5113     0058  3012               	movlw	18
  5114     0059  318D  255D  3180   	fcall	clear_ram0
  5115                           
  5116                           ; Clear objects allocated to BANK1
  5117     005C  30B8               	movlw	low __pbssBANK1
  5118     005D  0084               	movwf	4
  5119     005E  3000               	movlw	high __pbssBANK1
  5120     005F  0085               	movwf	5
  5121     0060  3017               	movlw	23
  5122     0061  318D  255D  3180   	fcall	clear_ram0
  5123     0064                     end_of_initialization:	
  5124                           ;End of C runtime variable initialization code
  5125                           
  5126     0064                     __end_of__initialization:
  5127     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5128     0065  0020               	movlb	0
  5129     0066  318F  2F54         	ljmp	_main	;jump to C main() function
  5130                           
  5131                           	psect	bssCOMMON
  5132     0076                     __pbssCOMMON:
  5133     0076                     _EUSART_FramingErrorHandler:
  5134     0076                     	ds	2
  5135     0078                     _INT_InterruptHandler:
  5136     0078                     	ds	2
  5137                           
  5138                           	psect	bssBANK0
  5139     0052                     __pbssBANK0:
  5140     0052                     _i2c1Status:
  5141     0052                     	ds	12
  5142     005E                     _EUSART_OverrunErrorHandler:
  5143     005E                     	ds	2
  5144     0060                     _eusartRxLastError:
  5145     0060                     	ds	2
  5146     0062                     _I2C1_Callback:
  5147     0062                     	ds	2
  5148                           
  5149                           	psect	dataBANK0
  5150     0064                     __pdataBANK0:
  5151     0064                     _kaps:
  5152     0064                     	ds	7
  5153                           
  5154                           	psect	bssBANK1
  5155     00B8                     __pbssBANK1:
  5156     00B8                     _parser:
  5157     00B8                     	ds	8
  5158     00C0                     KAPS_getPos@F9702:
  5159     00C0                     	ds	4
  5160     00C4                     ProcessMsg@payload:
  5161     00C4                     	ds	6
  5162     00CA                     _parserDataBuffer:
  5163     00CA                     	ds	5
  5164                           
  5165                           	psect	dataBANK1
  5166     00A0                     __pdataBANK1:
  5167     00A0                     _sspas:
  5168     00A0                     	ds	24
  5169                           
  5170                           	psect	inittext
  5171     0D63                     init_ram:
  5172     0D63  00FE               	movwf	btemp
  5173     0D64                     initloop:
  5174     0D64  0012               	moviw fsr0++
  5175     0D65  001E               	movwi fsr1++
  5176     0D66  0BFE               	decfsz	btemp,f
  5177     0D67  2D64               	goto	initloop
  5178     0D68  3400               	retlw	0
  5179                           
  5180                           	psect	clrtext
  5181     0D5D                     clear_ram0:	
  5182                           ;	Called with FSR0 containing the base address, and
  5183                           ;	WREG with the size to clear
  5184                           
  5185     0D5D  0064               	clrwdt	;clear the watchdog before getting into this loop
  5186     0D5E                     clrloop0:
  5187     0D5E  0180               	clrf	0	;clear RAM location pointed to by FSR
  5188     0D5F  3101               	addfsr 0,1
  5189     0D60  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5190     0D61  2D5E               	goto	clrloop0	;have we reached the end yet?
  5191     0D62  3400               	retlw	0	;all done for this memory range, return
  5192                           
  5193                           	psect	cstackCOMMON
  5194     0070                     __pcstackCOMMON:
  5195     0070                     ?_ADC_DefaultInterruptHandler:
  5196     0070                     ??_ADC_DefaultInterruptHandler:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199     0070                     ?_I2C1_Initialize:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202     0070                     ?_I2C1_IsBusy:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205     0070                     ?_I2C1_EVENT_IDLE:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208     0070                     ??_I2C1_EVENT_IDLE:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220     0070                     ?_I2C1_EVENT_TX:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223     0070                     ?_I2C1_EVENT_RX:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226     0070                     ??_I2C1_EVENT_RX:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229     0070                     ?_I2C1_EVENT_NACK:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232     0070                     ??_I2C1_EVENT_NACK:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235     0070                     ?_I2C1_EVENT_ERROR:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238     0070                     ??_I2C1_EVENT_ERROR:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241     0070                     ?_I2C1_EVENT_STOP:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244     0070                     ??_I2C1_EVENT_STOP:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247     0070                     ?_I2C1_EVENT_RESET:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250     0070                     ??_I2C1_EVENT_RESET:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253     0070                     ?_I2C1_InterruptsEnable:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256     0070                     ?_I2C1_DefaultCallback:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259     0070                     ??_I2C1_DefaultCallback:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262     0070                     ?_I2C1_WriteStart:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265     0070                     ?_I2C1_ReadStart:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268     0070                     ?_I2C1_EventHandler:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271     0070                     ?_I2C1_ErrorEventHandler:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274     0070                     ?_I2C1_StartSend:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277     0070                     ?_I2C1_InterruptClear:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280     0070                     ??_I2C1_InterruptClear:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283     0070                     ?_I2C1_ErrorInterruptClear:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286     0070                     ??_I2C1_ErrorInterruptClear:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289     0070                     ?_I2C1_StatusFlagsClear:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292     0070                     ??_I2C1_StatusFlagsClear:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295     0070                     ?_I2C1_IsAddr:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298     0070                     ??_I2C1_IsAddr:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301     0070                     ?_I2C1_IsNack:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304     0070                     ??_I2C1_IsNack:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307     0070                     ?_I2C1_IsData:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310     0070                     ??_I2C1_IsData:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313     0070                     ?_I2C1_DataTransmit:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316     0070                     ??_I2C1_DataTransmit:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319     0070                     ?_I2C1_RestartEnable:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322     0070                     ??_I2C1_RestartEnable:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325     0070                     ?_I2C1_IsRxBufFull:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328     0070                     ??_I2C1_IsRxBufFull:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331     0070                     ?_I2C1_DataReceive:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334     0070                     ??_I2C1_DataReceive:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337     0070                     ?_I2C1_AckSend:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340     0070                     ??_I2C1_AckSend:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343     0070                     ?_I2C1_RestartDisable:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346     0070                     ??_I2C1_RestartDisable:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349     0070                     ?_I2C1_NackSend:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352     0070                     ??_I2C1_NackSend:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355     0070                     ?_I2C1_ReceiveEnable:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358     0070                     ??_I2C1_ReceiveEnable:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361     0070                     ?_I2C1_StopSend:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364     0070                     ??_I2C1_StopSend:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367     0070                     ?_I2C1_BusReset:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370     0070                     ??_I2C1_BusReset:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373     0070                     ?_EUSART_Initialize:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376     0070                     ?_EUSART_Read:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379     0070                     ?_EUSART_IsRxReady:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382     0070                     ?_EUSART_IsTxReady:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391     0070                     ?_SSPA_getTemp:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394     0070                     ?_SSPA_getPOut:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397     0070                     ?_KAPS_getStatus:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400     0070                     ?_KAPS_getPos:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403     0070                     ?_KAPS_getIndex:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406     0070                     ?_KAPS_GoToIdx:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409     0070                     ?_KAPS_setRelPos:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412     0070                     ?_Parse:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415     0070                     ?_ADC_Initialize:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418     0070                     ?_ADC_SelectChannel:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421     0070                     ?_ADC_StartConversion:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424     0070                     ?_ADC_IsConversionDone:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427     0070                     ?_ADC_ISR:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430     0070                     ??_ADC_ISR:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433     0070                     ?_I2C1_ISR:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436     0070                     ?_I2C1_ERROR_ISR:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439     0070                     ?_I2C1_Close:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442     0070                     ??_I2C1_Close:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445     0070                     ?_CLOCK_Initialize:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448     0070                     ?_PIN_MANAGER_Initialize:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451     0070                     ?_INTERRUPT_Initialize:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454     0070                     ?_INTERRUPT_InterruptManager:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457     0070                     ?_SYSTEM_Initialize:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460     0070                     ?_SendSync:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463     0070                     ?_SendNack:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466     0070                     ?_main:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469     0070                     I2C1_EVENT_NACK@retEventState:	
  5470                           ; 2 bytes @ 0x0
  5471                           
  5472     0070                     I2C1_EVENT_ERROR@retEventState:	
  5473                           ; 1 bytes @ 0x0
  5474                           
  5475     0070                     I2C1_DataTransmit@data:	
  5476                           ; 1 bytes @ 0x0
  5477                           
  5478                           
  5479                           ; 1 bytes @ 0x0
  5480     0070                     	ds	1
  5481     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  5482     0071                     ??_I2C1_EVENT_TX:	
  5483                           ; 1 bytes @ 0x1
  5484                           
  5485     0071                     I2C1_EVENT_TX@retEventState:	
  5486                           ; 1 bytes @ 0x1
  5487                           
  5488     0071                     I2C1_EVENT_RX@retEventState:	
  5489                           ; 1 bytes @ 0x1
  5490                           
  5491                           
  5492                           ; 1 bytes @ 0x1
  5493     0071                     	ds	1
  5494     0072                     ??_I2C1_EventHandler:
  5495     0072                     ??_I2C1_ErrorEventHandler:	
  5496                           ; 1 bytes @ 0x2
  5497                           
  5498                           
  5499                           ; 1 bytes @ 0x2
  5500     0072                     	ds	2
  5501     0074                     ?_ADC_SetInterruptHandler:
  5502     0074                     ??_I2C1_IsBusy:	
  5503                           ; 1 bytes @ 0x4
  5504                           
  5505     0074                     ?_I2C1_CallbackRegister:	
  5506                           ; 1 bytes @ 0x4
  5507                           
  5508     0074                     ??_I2C1_InterruptsEnable:	
  5509                           ; 1 bytes @ 0x4
  5510                           
  5511     0074                     ??_I2C1_WriteStart:	
  5512                           ; 1 bytes @ 0x4
  5513                           
  5514     0074                     ??_I2C1_ReadStart:	
  5515                           ; 1 bytes @ 0x4
  5516                           
  5517     0074                     ??_I2C1_StartSend:	
  5518                           ; 1 bytes @ 0x4
  5519                           
  5520     0074                     ?_INT_SetInterruptHandler:	
  5521                           ; 1 bytes @ 0x4
  5522                           
  5523     0074                     ??_EUSART_Read:	
  5524                           ; 1 bytes @ 0x4
  5525                           
  5526     0074                     ?_EUSART_Write:	
  5527                           ; 1 bytes @ 0x4
  5528                           
  5529     0074                     ??_EUSART_IsRxReady:	
  5530                           ; 1 bytes @ 0x4
  5531                           
  5532     0074                     ??_EUSART_IsTxReady:	
  5533                           ; 1 bytes @ 0x4
  5534                           
  5535     0074                     ?_EUSART_FramingErrorCallbackRegister:	
  5536                           ; 1 bytes @ 0x4
  5537                           
  5538     0074                     ?_EUSART_OverrunErrorCallbackRegister:	
  5539                           ; 1 bytes @ 0x4
  5540                           
  5541     0074                     ??_EUSART_DefaultFramingErrorCallback:	
  5542                           ; 1 bytes @ 0x4
  5543                           
  5544     0074                     ??_EUSART_DefaultOverrunErrorCallback:	
  5545                           ; 1 bytes @ 0x4
  5546                           
  5547     0074                     ??_unpackWord:	
  5548                           ; 1 bytes @ 0x4
  5549                           
  5550     0074                     ?_SSPA_setMute:	
  5551                           ; 1 bytes @ 0x4
  5552                           
  5553     0074                     ??_ADC_SelectChannel:	
  5554                           ; 1 bytes @ 0x4
  5555                           
  5556     0074                     ??_ADC_StartConversion:	
  5557                           ; 1 bytes @ 0x4
  5558                           
  5559     0074                     ??_ADC_IsConversionDone:	
  5560                           ; 1 bytes @ 0x4
  5561                           
  5562     0074                     ??_I2C1_ISR:	
  5563                           ; 1 bytes @ 0x4
  5564                           
  5565     0074                     ??_I2C1_ERROR_ISR:	
  5566                           ; 1 bytes @ 0x4
  5567                           
  5568     0074                     ??_CLOCK_Initialize:	
  5569                           ; 1 bytes @ 0x4
  5570                           
  5571     0074                     ??_PIN_MANAGER_Initialize:	
  5572                           ; 1 bytes @ 0x4
  5573                           
  5574     0074                     ??_INTERRUPT_InterruptManager:	
  5575                           ; 1 bytes @ 0x4
  5576                           
  5577     0074                     ??___lmul:	
  5578                           ; 1 bytes @ 0x4
  5579                           
  5580     0074                     ??___aldiv:	
  5581                           ; 1 bytes @ 0x4
  5582                           
  5583     0074                     ?_ADC_GetConversionResult:	
  5584                           ; 1 bytes @ 0x4
  5585                           
  5586     0074                     _I2C1_IsBusy$646:	
  5587                           ; 2 bytes @ 0x4
  5588                           
  5589     0074                     _EUSART_IsTxReady$1324:	
  5590                           ; 1 bytes @ 0x4
  5591                           
  5592     0074                     EUSART_Write@txData:	
  5593                           ; 1 bytes @ 0x4
  5594                           
  5595     0074                     SSPA_setMute@mute:	
  5596                           ; 1 bytes @ 0x4
  5597                           
  5598     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  5599                           ; 1 bytes @ 0x4
  5600                           
  5601     0074                     I2C1_CallbackRegister@callbackHandler:	
  5602                           ; 2 bytes @ 0x4
  5603                           
  5604     0074                     INT_SetInterruptHandler@InterruptHandler:	
  5605                           ; 2 bytes @ 0x4
  5606                           
  5607     0074                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  5608                           ; 2 bytes @ 0x4
  5609                           
  5610     0074                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  5611                           ; 2 bytes @ 0x4
  5612                           
  5613                           
  5614                           ; 2 bytes @ 0x4
  5615     0074                     	ds	1
  5616     0075                     ??_I2C1_Write:
  5617     0075                     ??_I2C1_Read:	
  5618                           ; 1 bytes @ 0x5
  5619                           
  5620     0075                     ??_EUSART_Write:	
  5621                           ; 1 bytes @ 0x5
  5622                           
  5623     0075                     ??_SendSync:	
  5624                           ; 1 bytes @ 0x5
  5625                           
  5626     0075                     ??_ADC2Amp:	
  5627                           ; 1 bytes @ 0x5
  5628                           
  5629     0075                     ??_ADC2dBm:	
  5630                           ; 1 bytes @ 0x5
  5631                           
  5632     0075                     ADC_SelectChannel@channel:	
  5633                           ; 1 bytes @ 0x5
  5634                           
  5635     0075                     I2C1_Read@retStatus:	
  5636                           ; 1 bytes @ 0x5
  5637                           
  5638     0075                     SendSync@data:	
  5639                           ; 1 bytes @ 0x5
  5640                           
  5641     0075                     SSPA_setMute@band:	
  5642                           ; 1 bytes @ 0x5
  5643                           
  5644                           
  5645                           ; 1 bytes @ 0x5
  5646     0075                     	ds	1
  5647     0076                     ??_ADC_SetInterruptHandler:
  5648     0076                     ??_I2C1_Initialize:	
  5649                           ; 1 bytes @ 0x6
  5650                           
  5651     0076                     ??_I2C1_CallbackRegister:	
  5652                           ; 1 bytes @ 0x6
  5653                           
  5654     0076                     ??_INT_SetInterruptHandler:	
  5655                           ; 1 bytes @ 0x6
  5656                           
  5657     0076                     ??_EUSART_Initialize:	
  5658                           ; 1 bytes @ 0x6
  5659                           
  5660     0076                     ??_EUSART_FramingErrorCallbackRegister:	
  5661                           ; 1 bytes @ 0x6
  5662                           
  5663     0076                     ??_EUSART_OverrunErrorCallbackRegister:	
  5664                           ; 1 bytes @ 0x6
  5665                           
  5666     0076                     ??_ADC_Initialize:	
  5667                           ; 1 bytes @ 0x6
  5668                           
  5669     0076                     ??_ADC_GetConversionResult:	
  5670                           ; 1 bytes @ 0x6
  5671                           
  5672     0076                     ??_INTERRUPT_Initialize:	
  5673                           ; 1 bytes @ 0x6
  5674                           
  5675     0076                     ??_SYSTEM_Initialize:	
  5676                           ; 1 bytes @ 0x6
  5677                           
  5678     0076                     ??_main:	
  5679                           ; 1 bytes @ 0x6
  5680                           
  5681     0076                     ??_SendNack:	
  5682                           ; 1 bytes @ 0x6
  5683                           
  5684                           
  5685                           	psect	cstackBANK0
  5686     0020                     __pcstackBANK0:	
  5687                           ; 1 bytes @ 0x6
  5688                           
  5689     0020                     ?_I2C1_Write:
  5690     0020                     ?_I2C1_Read:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693     0020                     ?_SendMsg:	
  5694                           ; 1 bytes @ 0x0
  5695                           
  5696     0020                     ?_unpackWord:	
  5697                           ; 1 bytes @ 0x0
  5698                           
  5699     0020                     ?_unpackLong:	
  5700                           ; 1 bytes @ 0x0
  5701                           
  5702     0020                     ??_SSPA_setMute:	
  5703                           ; 1 bytes @ 0x0
  5704                           
  5705     0020                     ?_getADCValue:	
  5706                           ; 1 bytes @ 0x0
  5707                           
  5708     0020                     ?_packLong:	
  5709                           ; 2 bytes @ 0x0
  5710                           
  5711     0020                     ?___lmul:	
  5712                           ; 4 bytes @ 0x0
  5713                           
  5714     0020                     SendMsg@data:	
  5715                           ; 4 bytes @ 0x0
  5716                           
  5717     0020                     I2C1_Write@address:	
  5718                           ; 1 bytes @ 0x0
  5719                           
  5720     0020                     I2C1_Read@address:	
  5721                           ; 2 bytes @ 0x0
  5722                           
  5723     0020                     unpackWord@value:	
  5724                           ; 2 bytes @ 0x0
  5725                           
  5726     0020                     unpackLong@value:	
  5727                           ; 2 bytes @ 0x0
  5728                           
  5729     0020                     ___lmul@multiplier:	
  5730                           ; 4 bytes @ 0x0
  5731                           
  5732                           
  5733                           ; 4 bytes @ 0x0
  5734     0020                     	ds	1
  5735     0021                     SendMsg@data_len:
  5736                           
  5737                           ; 1 bytes @ 0x1
  5738     0021                     	ds	1
  5739     0022                     ??_SendMsg:
  5740     0022                     ??_getADCValue:	
  5741                           ; 1 bytes @ 0x2
  5742                           
  5743     0022                     I2C1_Write@data:	
  5744                           ; 1 bytes @ 0x2
  5745                           
  5746     0022                     I2C1_Read@data:	
  5747                           ; 1 bytes @ 0x2
  5748                           
  5749     0022                     unpackWord@data:	
  5750                           ; 1 bytes @ 0x2
  5751                           
  5752                           
  5753                           ; 1 bytes @ 0x2
  5754     0022                     	ds	1
  5755     0023                     SendMsg@sum:
  5756     0023                     I2C1_Write@dataLength:	
  5757                           ; 1 bytes @ 0x3
  5758                           
  5759     0023                     I2C1_Read@dataLength:	
  5760                           ; 2 bytes @ 0x3
  5761                           
  5762                           
  5763                           ; 2 bytes @ 0x3
  5764     0023                     	ds	1
  5765     0024                     ??_packLong:
  5766     0024                     unpackLong@data:	
  5767                           ; 1 bytes @ 0x4
  5768                           
  5769     0024                     SendMsg@msg_id:	
  5770                           ; 1 bytes @ 0x4
  5771                           
  5772     0024                     getADCValue@channel:	
  5773                           ; 1 bytes @ 0x4
  5774                           
  5775     0024                     ___lmul@multiplicand:	
  5776                           ; 1 bytes @ 0x4
  5777                           
  5778                           
  5779                           ; 4 bytes @ 0x4
  5780     0024                     	ds	1
  5781     0025                     ??_unpackLong:
  5782     0025                     ??_KAPS_getStatus:	
  5783                           ; 1 bytes @ 0x5
  5784                           
  5785     0025                     ??_KAPS_getIndex:	
  5786                           ; 1 bytes @ 0x5
  5787                           
  5788     0025                     ??_KAPS_GoToIdx:	
  5789                           ; 1 bytes @ 0x5
  5790                           
  5791     0025                     ??_KAPS_setRelPos:	
  5792                           ; 1 bytes @ 0x5
  5793                           
  5794     0025                     SendNack@error:	
  5795                           ; 1 bytes @ 0x5
  5796                           
  5797     0025                     getADCValue@aux:	
  5798                           ; 1 bytes @ 0x5
  5799                           
  5800                           
  5801                           ; 2 bytes @ 0x5
  5802     0025                     	ds	1
  5803     0026                     ??_Parse:
  5804                           
  5805                           ; 1 bytes @ 0x6
  5806     0026                     	ds	1
  5807     0027                     KAPS_GoToIdx@idx:
  5808     0027                     KAPS_setRelPos@offset:	
  5809                           ; 1 bytes @ 0x7
  5810                           
  5811     0027                     KAPS_getStatus@reg:	
  5812                           ; 1 bytes @ 0x7
  5813                           
  5814     0027                     KAPS_getIndex@reg:	
  5815                           ; 1 bytes @ 0x7
  5816                           
  5817     0027                     getADCValue@sum:	
  5818                           ; 1 bytes @ 0x7
  5819                           
  5820                           
  5821                           ; 2 bytes @ 0x7
  5822     0027                     	ds	1
  5823     0028                     KAPS_GoToIdx@reg:
  5824     0028                     KAPS_setRelPos@reg:	
  5825                           ; 1 bytes @ 0x8
  5826                           
  5827     0028                     KAPS_getStatus@data:	
  5828                           ; 1 bytes @ 0x8
  5829                           
  5830     0028                     KAPS_getIndex@data:	
  5831                           ; 1 bytes @ 0x8
  5832                           
  5833     0028                     Parse@data:	
  5834                           ; 1 bytes @ 0x8
  5835                           
  5836     0028                     packLong@result:	
  5837                           ; 1 bytes @ 0x8
  5838                           
  5839     0028                     ___lmul@product:	
  5840                           ; 4 bytes @ 0x8
  5841                           
  5842                           
  5843                           ; 4 bytes @ 0x8
  5844     0028                     	ds	1
  5845     0029                     KAPS_setRelPos@value:
  5846     0029                     getADCValue@i:	
  5847                           ; 1 bytes @ 0x9
  5848                           
  5849                           
  5850                           ; 1 bytes @ 0x9
  5851     0029                     	ds	3
  5852     002C                     ?___aldiv:
  5853     002C                     packLong@data:	
  5854                           ; 4 bytes @ 0xC
  5855                           
  5856     002C                     ___aldiv@divisor:	
  5857                           ; 1 bytes @ 0xC
  5858                           
  5859                           
  5860                           ; 4 bytes @ 0xC
  5861     002C                     	ds	1
  5862     002D                     ??_KAPS_getPos:
  5863     002D                     ?_KAPS_setAbsPos:	
  5864                           ; 1 bytes @ 0xD
  5865                           
  5866     002D                     ?_KAPS_StorePos:	
  5867                           ; 1 bytes @ 0xD
  5868                           
  5869     002D                     KAPS_setAbsPos@pos:	
  5870                           ; 1 bytes @ 0xD
  5871                           
  5872     002D                     KAPS_StorePos@pos:	
  5873                           ; 4 bytes @ 0xD
  5874                           
  5875                           
  5876                           ; 4 bytes @ 0xD
  5877     002D                     	ds	2
  5878     002F                     KAPS_getPos@data:
  5879                           
  5880                           ; 4 bytes @ 0xF
  5881     002F                     	ds	1
  5882     0030                     ___aldiv@dividend:
  5883                           
  5884                           ; 4 bytes @ 0x10
  5885     0030                     	ds	1
  5886     0031                     ??_KAPS_setAbsPos:
  5887     0031                     ??_KAPS_StorePos:	
  5888                           ; 1 bytes @ 0x11
  5889                           
  5890                           
  5891                           ; 1 bytes @ 0x11
  5892     0031                     	ds	2
  5893     0033                     KAPS_getPos@reg:
  5894     0033                     KAPS_setAbsPos@data:	
  5895                           ; 1 bytes @ 0x13
  5896                           
  5897     0033                     KAPS_StorePos@data:	
  5898                           ; 4 bytes @ 0x13
  5899                           
  5900                           
  5901                           ; 4 bytes @ 0x13
  5902     0033                     	ds	1
  5903     0034                     ___aldiv@counter:
  5904                           
  5905                           ; 1 bytes @ 0x14
  5906     0034                     	ds	1
  5907     0035                     ___aldiv@sign:
  5908                           
  5909                           ; 1 bytes @ 0x15
  5910     0035                     	ds	1
  5911     0036                     ___aldiv@quotient:
  5912                           
  5913                           ; 4 bytes @ 0x16
  5914     0036                     	ds	1
  5915     0037                     KAPS_setAbsPos@reg:
  5916     0037                     KAPS_StorePos@reg:	
  5917                           ; 1 bytes @ 0x17
  5918                           
  5919                           
  5920                           ; 1 bytes @ 0x17
  5921     0037                     	ds	1
  5922     0038                     KAPS_StorePos@idx:
  5923                           
  5924                           ; 1 bytes @ 0x18
  5925     0038                     	ds	2
  5926     003A                     ?_ADC2dBm:
  5927     003A                     ?_ADC2Celsius:	
  5928                           ; 1 bytes @ 0x1A
  5929                           
  5930     003A                     ?_ADC2Amp:	
  5931                           ; 2 bytes @ 0x1A
  5932                           
  5933     003A                     ADC2Celsius@v:	
  5934                           ; 4 bytes @ 0x1A
  5935                           
  5936     003A                     ADC2Amp@v:	
  5937                           ; 2 bytes @ 0x1A
  5938                           
  5939     003A                     ADC2dBm@v:	
  5940                           ; 2 bytes @ 0x1A
  5941                           
  5942                           
  5943                           ; 2 bytes @ 0x1A
  5944     003A                     	ds	2
  5945     003C                     ??_ADC2Celsius:
  5946     003C                     ADC2dBm@value:	
  5947                           ; 1 bytes @ 0x1C
  5948                           
  5949                           
  5950                           ; 4 bytes @ 0x1C
  5951     003C                     	ds	2
  5952     003E                     ADC2Amp@value:
  5953                           
  5954                           ; 4 bytes @ 0x1E
  5955     003E                     	ds	2
  5956     0040                     ADC2Celsius@value:
  5957     0040                     ADC2dBm@result:	
  5958                           ; 4 bytes @ 0x20
  5959                           
  5960                           
  5961                           ; 4 bytes @ 0x20
  5962     0040                     	ds	2
  5963     0042                     ADC2Amp@result:
  5964                           
  5965                           ; 4 bytes @ 0x22
  5966     0042                     	ds	2
  5967     0044                     ADC2Celsius@result:
  5968                           
  5969                           ; 4 bytes @ 0x24
  5970     0044                     	ds	2
  5971     0046                     ??_SSPA_getPOut:
  5972                           
  5973                           ; 1 bytes @ 0x26
  5974     0046                     	ds	2
  5975     0048                     ??_SSPA_getTemp:
  5976     0048                     SSPA_getPOut@adc_value:	
  5977                           ; 1 bytes @ 0x28
  5978                           
  5979                           
  5980                           ; 2 bytes @ 0x28
  5981     0048                     	ds	2
  5982     004A                     SSPA_getPOut@band:
  5983     004A                     SSPA_getTemp@adc_value:	
  5984                           ; 1 bytes @ 0x2A
  5985                           
  5986                           
  5987                           ; 2 bytes @ 0x2A
  5988     004A                     	ds	2
  5989     004C                     SSPA_getTemp@channel:
  5990                           
  5991                           ; 1 bytes @ 0x2C
  5992     004C                     	ds	1
  5993     004D                     SSPA_getTemp@band:
  5994                           
  5995                           ; 1 bytes @ 0x2D
  5996     004D                     	ds	1
  5997     004E                     ?_ProcessMsg:
  5998     004E                     ProcessMsg@data:	
  5999                           ; 1 bytes @ 0x2E
  6000                           
  6001                           
  6002                           ; 1 bytes @ 0x2E
  6003     004E                     	ds	1
  6004     004F                     ??_ProcessMsg:
  6005                           
  6006                           ; 1 bytes @ 0x2F
  6007     004F                     	ds	1
  6008     0050                     ProcessMsg@msg_id:
  6009                           
  6010                           ; 1 bytes @ 0x30
  6011     0050                     	ds	1
  6012     0051                     main@data:
  6013                           
  6014                           ; 1 bytes @ 0x31
  6015     0051                     	ds	1
  6016                           
  6017                           	psect	maintext
  6018     0F54                     __pmaintext:	
  6019 ;;
  6020 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6021 ;;
  6022 ;; *************** function _main *****************
  6023 ;; Defined at:
  6024 ;;		line 115 in file "main.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  data            1   49[BANK0 ] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2  697[None  ] int 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : B1F/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6038 ;;      Params:         0       0       0       0       0       0       0       0
  6039 ;;      Locals:         0       1       0       0       0       0       0       0
  6040 ;;      Temps:          0       0       0       0       0       0       0       0
  6041 ;;      Totals:         0       1       0       0       0       0       0       0
  6042 ;;Total ram usage:        1 bytes
  6043 ;; Hardware stack levels required when called: 12
  6044 ;; This function calls:
  6045 ;;		_EUSART_IsRxReady
  6046 ;;		_EUSART_Read
  6047 ;;		_Parse
  6048 ;;		_ProcessMsg
  6049 ;;		_SYSTEM_Initialize
  6050 ;; This function is called by:
  6051 ;;		Startup code after reset
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055     0F54                     _main:	
  6056                           ;psect for function _main
  6057                           
  6058     0F54                     l4064:	
  6059                           ;incstack = 0
  6060                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6061                           
  6062                           
  6063                           ;main.c: 116:     SYSTEM_Initialize();
  6064     0F54  318E  2654  318F   	fcall	_SYSTEM_Initialize
  6065     0F57                     l4066:
  6066                           
  6067                           ;main.c: 118:     (INTCONbits.GIE = 1);
  6068     0F57  178B               	bsf	11,7	;volatile
  6069     0F58                     l4068:
  6070                           
  6071                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6072     0F58  170B               	bsf	11,6	;volatile
  6073     0F59                     l4070:
  6074     0F59                     l4072:
  6075                           
  6076                           ;main.c: 132:         if (EUSART_IsRxReady()) {
  6077     0F59  318D  2535  318F   	fcall	_EUSART_IsRxReady
  6078     0F5C  3A00               	xorlw	0
  6079     0F5D  1903               	skipnz
  6080     0F5E  2F60               	goto	u2061
  6081     0F5F  2F61               	goto	u2060
  6082     0F60                     u2061:
  6083     0F60  2F78               	goto	l699
  6084     0F61                     u2060:
  6085     0F61                     l4074:
  6086                           
  6087                           ;main.c: 133:             data = EUSART_Read();
  6088     0F61  318F  277C  318F   	fcall	_EUSART_Read
  6089     0F64  0020               	movlb	0	; select bank0
  6090     0F65  00D1               	movwf	main@data
  6091     0F66                     l4076:
  6092                           
  6093                           ;main.c: 135:             if (Parse(data))
  6094     0F66  0851               	movf	main@data,w
  6095     0F67  3181  21AC  318F   	fcall	_Parse
  6096     0F6A  3A00               	xorlw	0
  6097     0F6B  1903               	skipnz
  6098     0F6C  2F6E               	goto	u2071
  6099     0F6D  2F6F               	goto	u2070
  6100     0F6E                     u2071:
  6101     0F6E  2F59               	goto	l4072
  6102     0F6F                     u2070:
  6103     0F6F                     l4078:
  6104                           
  6105                           ;main.c: 136:                 ProcessMsg(parser.m_MsgID, parserDataBuffer);
  6106     0F6F  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
  6107     0F70  0020               	movlb	0	; select bank0
  6108     0F71  00CE               	movwf	ProcessMsg@data
  6109     0F72  0021               	movlb	1	; select bank1
  6110     0F73  0839               	movf	(_parser^(0+128)+1),w
  6111     0F74  3180  2068  318F   	fcall	_ProcessMsg
  6112     0F77  2F59               	goto	l4072
  6113     0F78                     l699:	
  6114                           ;main.c: 138:         else
  6115                           
  6116                           
  6117                           ;main.c: 139:             __nop();
  6118     0F78  0000               	nop
  6119     0F79  2F59               	goto	l4072
  6120     0F7A  3180  2836         	ljmp	start
  6121     0F7C                     __end_of_main:
  6122                           
  6123                           	psect	text1
  6124     0E54                     __ptext1:	
  6125 ;; *************** function _SYSTEM_Initialize *****************
  6126 ;; Defined at:
  6127 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0, pclath, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6141 ;;      Params:         0       0       0       0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 9
  6148 ;; This function calls:
  6149 ;;		_ADC_Initialize
  6150 ;;		_CLOCK_Initialize
  6151 ;;		_EUSART_Initialize
  6152 ;;		_I2C1_Initialize
  6153 ;;		_INTERRUPT_Initialize
  6154 ;;		_PIN_MANAGER_Initialize
  6155 ;; This function is called by:
  6156 ;;		_main
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160     0E54                     _SYSTEM_Initialize:	
  6161                           ;psect for function _SYSTEM_Initialize
  6162                           
  6163     0E54                     l3164:	
  6164                           ;incstack = 0
  6165                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6166                           
  6167                           
  6168                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  6169     0E54  318D  25AA  318E   	fcall	_CLOCK_Initialize
  6170                           
  6171                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  6172     0E57  3184  2421  318E   	fcall	_PIN_MANAGER_Initialize
  6173                           
  6174                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  6175     0E5A  318E  2667  318E   	fcall	_ADC_Initialize
  6176                           
  6177                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  6178     0E5D  318E  26A9  318E   	fcall	_EUSART_Initialize
  6179                           
  6180                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  6181     0E60  318E  267B  318E   	fcall	_I2C1_Initialize
  6182                           
  6183                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  6184     0E63  318D  25C8  318E   	fcall	_INTERRUPT_Initialize
  6185     0E66                     l483:
  6186     0E66  0008               	return
  6187     0E67                     __end_of_SYSTEM_Initialize:
  6188                           
  6189                           	psect	text2
  6190     0421                     __ptext2:	
  6191 ;; *************** function _PIN_MANAGER_Initialize *****************
  6192 ;; Defined at:
  6193 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6207 ;;      Params:         0       0       0       0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0
  6210 ;;      Totals:         0       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        0 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 7
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_SYSTEM_Initialize
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221     0421                     _PIN_MANAGER_Initialize:	
  6222                           ;psect for function _PIN_MANAGER_Initialize
  6223                           
  6224     0421                     l2948:	
  6225                           ;incstack = 0
  6226                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6227                           
  6228                           
  6229                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  6230     0421  0022               	movlb	2	; select bank2
  6231     0422  018C               	clrf	12	;volatile
  6232     0423                     l2950:
  6233                           
  6234                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  6235     0423  3060               	movlw	96
  6236     0424  008D               	movwf	13	;volatile
  6237     0425                     l2952:
  6238                           
  6239                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  6240     0425  018E               	clrf	14	;volatile
  6241                           
  6242                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  6243     0426  303F               	movlw	63
  6244     0427  0021               	movlb	1	; select bank1
  6245     0428  008C               	movwf	12	;volatile
  6246                           
  6247                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  6248     0429  30F0               	movlw	240
  6249     042A  008D               	movwf	13	;volatile
  6250                           
  6251                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  6252     042B  303B               	movlw	59
  6253     042C  008E               	movwf	14	;volatile
  6254                           
  6255                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  6256     042D  3017               	movlw	23
  6257     042E  0023               	movlb	3	; select bank3
  6258     042F  008C               	movwf	12	;volatile
  6259                           
  6260                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  6261     0430  3010               	movlw	16
  6262     0431  008D               	movwf	13	;volatile
  6263                           
  6264                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  6265     0432  300D               	movlw	13
  6266     0433  008E               	movwf	14	;volatile
  6267                           
  6268                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  6269     0434  302C               	movlw	44
  6270     0435  0024               	movlb	4	; select bank4
  6271     0436  008C               	movwf	12	;volatile
  6272                           
  6273                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  6274     0437  30E0               	movlw	224
  6275     0438  008D               	movwf	13	;volatile
  6276                           
  6277                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  6278     0439  30F7               	movlw	247
  6279     043A  008E               	movwf	14	;volatile
  6280     043B                     l2954:
  6281                           
  6282                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  6283     043B  0021               	movlb	1	; select bank1
  6284     043C  1395               	bcf	21,7	;volatile
  6285     043D                     l2956:
  6286                           
  6287                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  6288     043D  0025               	movlb	5	; select bank5
  6289     043E  018C               	clrf	12	;volatile
  6290     043F                     l2958:
  6291                           
  6292                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  6293     043F  018D               	clrf	13	;volatile
  6294     0440                     l2960:
  6295                           
  6296                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  6297     0440  018E               	clrf	14	;volatile
  6298     0441                     l2962:
  6299                           
  6300                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  6301     0441  3037               	movlw	55
  6302     0442  0026               	movlb	6	; select bank6
  6303     0443  008C               	movwf	12	;volatile
  6304     0444                     l2964:
  6305                           
  6306                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  6307     0444  30F0               	movlw	240
  6308     0445  008D               	movwf	13	;volatile
  6309     0446                     l2966:
  6310                           
  6311                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  6312     0446  30FF               	movlw	255
  6313     0447  008E               	movwf	14	;volatile
  6314     0448                     l2968:
  6315                           
  6316                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  6317     0448  303F               	movlw	63
  6318     0449  0027               	movlb	7	; select bank7
  6319     044A  008C               	movwf	12	;volatile
  6320     044B                     l2970:
  6321                           
  6322                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  6323     044B  30F0               	movlw	240
  6324     044C  008D               	movwf	13	;volatile
  6325     044D                     l2972:
  6326                           
  6327                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  6328     044D  30FF               	movlw	255
  6329     044E  008E               	movwf	14	;volatile
  6330     044F                     l2974:
  6331                           
  6332                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  6333     044F  3011               	movlw	17
  6334     0450  003C               	movlb	28	; select bank28
  6335     0451  00A4               	movwf	36	;volatile
  6336     0452                     l2976:
  6337                           
  6338                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  6339     0452  3006               	movlw	6
  6340     0453  003D               	movlb	29	; select bank29
  6341     0454  00A2               	movwf	34	;volatile
  6342     0455                     l2978:
  6343                           
  6344                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  6345     0455  300E               	movlw	14
  6346     0456  003C               	movlb	28	; select bank28
  6347     0457  00A0               	movwf	32	;volatile
  6348     0458                     l2980:
  6349                           
  6350                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  6351     0458  3010               	movlw	16
  6352     0459  003D               	movlb	29	; select bank29
  6353     045A  009E               	movwf	30	;volatile
  6354     045B                     l2982:
  6355                           
  6356                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  6357     045B  300D               	movlw	13
  6358     045C  003C               	movlb	28	; select bank28
  6359     045D  00A1               	movwf	33	;volatile
  6360     045E                     l2984:
  6361                           
  6362                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  6363     045E  3011               	movlw	17
  6364     045F  003D               	movlb	29	; select bank29
  6365     0460  009D               	movwf	29	;volatile
  6366     0461                     l2986:
  6367                           
  6368                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  6369     0461  0027               	movlb	7	; select bank7
  6370     0462  0191               	clrf	17	;volatile
  6371     0463                     l2988:
  6372                           
  6373                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  6374     0463  0192               	clrf	18	;volatile
  6375     0464                     l2990:
  6376                           
  6377                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  6378     0464  0193               	clrf	19	;volatile
  6379     0465                     l2992:
  6380                           
  6381                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  6382     0465  0194               	clrf	20	;volatile
  6383     0466                     l2994:
  6384                           
  6385                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  6386     0466  0195               	clrf	21	;volatile
  6387     0467                     l2996:
  6388                           
  6389                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  6390     0467  0196               	clrf	22	;volatile
  6391     0468                     l2998:
  6392                           
  6393                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  6394     0468  0197               	clrf	23	;volatile
  6395     0469                     l3000:
  6396                           
  6397                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  6398     0469  0198               	clrf	24	;volatile
  6399     046A                     l3002:
  6400                           
  6401                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  6402     046A  0199               	clrf	25	;volatile
  6403     046B                     l410:
  6404     046B  0008               	return
  6405     046C                     __end_of_PIN_MANAGER_Initialize:
  6406                           
  6407                           	psect	text3
  6408     0DC8                     __ptext3:	
  6409 ;; *************** function _INTERRUPT_Initialize *****************
  6410 ;; Defined at:
  6411 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, pclath, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6425 ;;      Params:         0       0       0       0       0       0       0       0
  6426 ;;      Locals:         0       0       0       0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0
  6428 ;;      Totals:         0       0       0       0       0       0       0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 8
  6432 ;; This function calls:
  6433 ;;		_INT_SetInterruptHandler
  6434 ;; This function is called by:
  6435 ;;		_SYSTEM_Initialize
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439     0DC8                     _INTERRUPT_Initialize:	
  6440                           ;psect for function _INTERRUPT_Initialize
  6441                           
  6442     0DC8                     l3004:	
  6443                           ;incstack = 0
  6444                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6445                           
  6446                           
  6447                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  6448     0DC8  108B               	bcf	11,1	;volatile
  6449                           
  6450                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  6451     0DC9  0021               	movlb	1	; select bank1
  6452     0DCA  1715               	bsf	21,6	;volatile
  6453     0DCB                     l3006:
  6454                           
  6455                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  6456     0DCB  3000               	movlw	0
  6457     0DCC  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  6458     0DCD  3000               	movlw	0
  6459     0DCE  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6460     0DCF  318D  253A  318D   	fcall	_INT_SetInterruptHandler
  6461     0DD2                     l442:
  6462     0DD2  0008               	return
  6463     0DD3                     __end_of_INTERRUPT_Initialize:
  6464                           
  6465                           	psect	text4
  6466     0D3A                     __ptext4:	
  6467 ;; *************** function _INT_SetInterruptHandler *****************
  6468 ;; Defined at:
  6469 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6472 ;;		 -> INT_DefaultInterruptHandler(1), 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;		None
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      void 
  6477 ;; Registers used:
  6478 ;;		wreg
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6484 ;;      Params:         2       0       0       0       0       0       0       0
  6485 ;;      Locals:         0       0       0       0       0       0       0       0
  6486 ;;      Temps:          0       0       0       0       0       0       0       0
  6487 ;;      Totals:         2       0       0       0       0       0       0       0
  6488 ;;Total ram usage:        2 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 7
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_INTERRUPT_Initialize
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498     0D3A                     _INT_SetInterruptHandler:	
  6499                           ;psect for function _INT_SetInterruptHandler
  6500                           
  6501     0D3A                     l2786:	
  6502                           ;incstack = 0
  6503                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6504                           
  6505                           
  6506                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  6507     0D3A  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6508     0D3B  00F9               	movwf	_INT_InterruptHandler+1
  6509     0D3C  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6510     0D3D  00F8               	movwf	_INT_InterruptHandler
  6511     0D3E                     l465:
  6512     0D3E  0008               	return
  6513     0D3F                     __end_of_INT_SetInterruptHandler:
  6514                           
  6515                           	psect	text5
  6516     0E7B                     __ptext5:	
  6517 ;; *************** function _I2C1_Initialize *****************
  6518 ;; Defined at:
  6519 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6533 ;;      Params:         0       0       0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; Hardware stack levels required when called: 8
  6540 ;; This function calls:
  6541 ;;		_I2C1_CallbackRegister
  6542 ;;		_I2C1_InterruptsEnable
  6543 ;; This function is called by:
  6544 ;;		_SYSTEM_Initialize
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548     0E7B                     _I2C1_Initialize:	
  6549                           ;psect for function _I2C1_Initialize
  6550                           
  6551     0E7B                     l2908:	
  6552                           ;incstack = 0
  6553                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6554                           
  6555                           
  6556                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  6557     0E7B  3080               	movlw	128
  6558     0E7C  0024               	movlb	4	; select bank4
  6559     0E7D  0094               	movwf	20	;volatile
  6560                           
  6561                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  6562     0E7E  3008               	movlw	8
  6563     0E7F  0095               	movwf	21	;volatile
  6564     0E80                     l2910:
  6565                           
  6566                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  6567     0E80  0196               	clrf	22	;volatile
  6568     0E81                     l2912:
  6569                           
  6570                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  6571     0E81  0197               	clrf	23	;volatile
  6572                           
  6573                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  6574     0E82  3027               	movlw	39
  6575     0E83  0092               	movwf	18	;volatile
  6576     0E84                     l2914:
  6577                           
  6578                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  6579     0E84  318D  2527  318E   	fcall	_I2C1_InterruptsEnable
  6580                           
  6581                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  6582     0E87  3002               	movlw	low _I2C1_DefaultCallback
  6583     0E88  00F4               	movwf	I2C1_CallbackRegister@callbackHandler
  6584     0E89  3000               	movlw	high _I2C1_DefaultCallback
  6585     0E8A  00F5               	movwf	I2C1_CallbackRegister@callbackHandler+1
  6586     0E8B  318D  25F7  318E   	fcall	_I2C1_CallbackRegister
  6587     0E8E                     l2916:
  6588                           
  6589                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  6590     0E8E  0024               	movlb	4	; select bank4
  6591     0E8F  1695               	bsf	21,5	;volatile
  6592     0E90                     l177:
  6593     0E90  0008               	return
  6594     0E91                     __end_of_I2C1_Initialize:
  6595                           
  6596                           	psect	text6
  6597     0D27                     __ptext6:	
  6598 ;; *************** function _I2C1_InterruptsEnable *****************
  6599 ;; Defined at:
  6600 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      void 
  6607 ;; Registers used:
  6608 ;;		None
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6614 ;;      Params:         0       0       0       0       0       0       0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0       0
  6617 ;;      Totals:         0       0       0       0       0       0       0       0
  6618 ;;Total ram usage:        0 bytes
  6619 ;; Hardware stack levels used: 1
  6620 ;; Hardware stack levels required when called: 7
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_I2C1_Initialize
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628     0D27                     _I2C1_InterruptsEnable:	
  6629                           ;psect for function _I2C1_InterruptsEnable
  6630                           
  6631     0D27                     l2634:	
  6632                           ;incstack = 0
  6633                           ; Regs used in _I2C1_InterruptsEnable: []
  6634                           
  6635                           
  6636                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  6637     0D27  0021               	movlb	1	; select bank1
  6638     0D28  1590               	bsf	16,3	;volatile
  6639                           
  6640                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  6641     0D29  1591               	bsf	17,3	;volatile
  6642     0D2A                     l312:
  6643     0D2A  0008               	return
  6644     0D2B                     __end_of_I2C1_InterruptsEnable:
  6645                           
  6646                           	psect	text7
  6647     0DF7                     __ptext7:	
  6648 ;; *************** function _I2C1_CallbackRegister *****************
  6649 ;; Defined at:
  6650 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6653 ;;		 -> I2C1_DefaultCallback(1), 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6665 ;;      Params:         2       0       0       0       0       0       0       0
  6666 ;;      Locals:         0       0       0       0       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0
  6668 ;;      Totals:         2       0       0       0       0       0       0       0
  6669 ;;Total ram usage:        2 bytes
  6670 ;; Hardware stack levels used: 1
  6671 ;; Hardware stack levels required when called: 7
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_I2C1_Initialize
  6676 ;;		_I2C1_Deinitialize
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680     0DF7                     _I2C1_CallbackRegister:	
  6681                           ;psect for function _I2C1_CallbackRegister
  6682                           
  6683     0DF7                     l2636:	
  6684                           ;incstack = 0
  6685                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  6686                           
  6687                           
  6688                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  6689     0DF7  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6690     0DF8  0475               	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  6691     0DF9  1903               	btfsc	3,2
  6692     0DFA  2DFC               	goto	u911
  6693     0DFB  2DFD               	goto	u910
  6694     0DFC                     u911:
  6695     0DFC  2E02               	goto	l204
  6696     0DFD                     u910:
  6697     0DFD                     l2638:
  6698                           
  6699                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  6700     0DFD  0875               	movf	I2C1_CallbackRegister@callbackHandler+1,w
  6701     0DFE  0020               	movlb	0	; select bank0
  6702     0DFF  00E3               	movwf	_I2C1_Callback+1
  6703     0E00  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6704     0E01  00E2               	movwf	_I2C1_Callback
  6705     0E02                     l204:
  6706     0E02  0008               	return
  6707     0E03                     __end_of_I2C1_CallbackRegister:
  6708                           
  6709                           	psect	text8
  6710     0EA9                     __ptext8:	
  6711 ;; *************** function _EUSART_Initialize *****************
  6712 ;; Defined at:
  6713 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0, pclath, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6727 ;;      Params:         0       0       0       0       0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0
  6730 ;;      Totals:         0       0       0       0       0       0       0       0
  6731 ;;Total ram usage:        0 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 8
  6734 ;; This function calls:
  6735 ;;		_EUSART_FramingErrorCallbackRegister
  6736 ;;		_EUSART_OverrunErrorCallbackRegister
  6737 ;; This function is called by:
  6738 ;;		_SYSTEM_Initialize
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742     0EA9                     _EUSART_Initialize:	
  6743                           ;psect for function _EUSART_Initialize
  6744                           
  6745     0EA9                     l3008:	
  6746                           ;incstack = 0
  6747                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6748                           
  6749                           
  6750                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  6751     0EA9  3048               	movlw	72
  6752     0EAA  0023               	movlb	3	; select bank3
  6753     0EAB  009F               	movwf	31	;volatile
  6754                           
  6755                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  6756     0EAC  3090               	movlw	144
  6757     0EAD  009D               	movwf	29	;volatile
  6758                           
  6759                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  6760     0EAE  3026               	movlw	38
  6761     0EAF  009E               	movwf	30	;volatile
  6762                           
  6763                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  6764     0EB0  30A0               	movlw	160
  6765     0EB1  009B               	movwf	27	;volatile
  6766                           
  6767                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  6768     0EB2  3001               	movlw	1
  6769     0EB3  009C               	movwf	28	;volatile
  6770     0EB4                     l3010:
  6771                           
  6772                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  6773     0EB4  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  6774     0EB5  00F4               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  6775     0EB6  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  6776     0EB7  00F5               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  6777     0EB8  318D  25BD  318E   	fcall	_EUSART_FramingErrorCallbackRegister
  6778     0EBB                     l3012:
  6779                           
  6780                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  6781     0EBB  301F               	movlw	low _EUSART_DefaultOverrunErrorCallback
  6782     0EBC  00F4               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  6783     0EBD  300D               	movlw	high _EUSART_DefaultOverrunErrorCallback
  6784     0EBE  00F5               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  6785     0EBF  318D  25EB  318E   	fcall	_EUSART_OverrunErrorCallbackRegister
  6786     0EC2                     l3014:
  6787                           
  6788                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  6789     0EC2  0020               	movlb	0	; select bank0
  6790     0EC3  01E0               	clrf	_eusartRxLastError	;volatile
  6791     0EC4  01E1               	clrf	_eusartRxLastError+1	;volatile
  6792     0EC5                     l548:
  6793     0EC5  0008               	return
  6794     0EC6                     __end_of_EUSART_Initialize:
  6795                           
  6796                           	psect	text9
  6797     0DEB                     __ptext9:	
  6798 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  6799 ;; Defined at:
  6800 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6803 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      void 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6815 ;;      Params:         2       0       0       0       0       0       0       0
  6816 ;;      Locals:         0       0       0       0       0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0
  6818 ;;      Totals:         2       0       0       0       0       0       0       0
  6819 ;;Total ram usage:        2 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; Hardware stack levels required when called: 7
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_EUSART_Initialize
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829     0DEB                     _EUSART_OverrunErrorCallbackRegister:	
  6830                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  6831                           
  6832     0DEB                     l2792:	
  6833                           ;incstack = 0
  6834                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  6835                           
  6836                           
  6837                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  6838     0DEB  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6839     0DEC  0475               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6840     0DED  1903               	btfsc	3,2
  6841     0DEE  2DF0               	goto	u1001
  6842     0DEF  2DF1               	goto	u1000
  6843     0DF0                     u1001:
  6844     0DF0  2DF6               	goto	l627
  6845     0DF1                     u1000:
  6846     0DF1                     l2794:
  6847                           
  6848                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6849     0DF1  0875               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6850     0DF2  0020               	movlb	0	; select bank0
  6851     0DF3  00DF               	movwf	_EUSART_OverrunErrorHandler+1
  6852     0DF4  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6853     0DF5  00DE               	movwf	_EUSART_OverrunErrorHandler
  6854     0DF6                     l627:
  6855     0DF6  0008               	return
  6856     0DF7                     __end_of_EUSART_OverrunErrorCallbackRegister:
  6857                           
  6858                           	psect	text10
  6859     0DBD                     __ptext10:	
  6860 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6861 ;; Defined at:
  6862 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6865 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6877 ;;      Params:         2       0       0       0       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0
  6880 ;;      Totals:         2       0       0       0       0       0       0       0
  6881 ;;Total ram usage:        2 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; Hardware stack levels required when called: 7
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_EUSART_Initialize
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891     0DBD                     _EUSART_FramingErrorCallbackRegister:	
  6892                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6893                           
  6894     0DBD                     l2788:	
  6895                           ;incstack = 0
  6896                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6897                           
  6898                           
  6899                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6900     0DBD  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6901     0DBE  0475               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6902     0DBF  1903               	btfsc	3,2
  6903     0DC0  2DC2               	goto	u991
  6904     0DC1  2DC3               	goto	u990
  6905     0DC2                     u991:
  6906     0DC2  2DC7               	goto	l623
  6907     0DC3                     u990:
  6908     0DC3                     l2790:
  6909                           
  6910                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6911     0DC3  0875               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6912     0DC4  00F7               	movwf	_EUSART_FramingErrorHandler+1
  6913     0DC5  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6914     0DC6  00F6               	movwf	_EUSART_FramingErrorHandler
  6915     0DC7                     l623:
  6916     0DC7  0008               	return
  6917     0DC8                     __end_of_EUSART_FramingErrorCallbackRegister:
  6918                           
  6919                           	psect	text11
  6920     0DAA                     __ptext11:	
  6921 ;; *************** function _CLOCK_Initialize *****************
  6922 ;; Defined at:
  6923 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6937 ;;      Params:         0       0       0       0       0       0       0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0
  6940 ;;      Totals:         0       0       0       0       0       0       0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 7
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_SYSTEM_Initialize
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951     0DAA                     _CLOCK_Initialize:	
  6952                           ;psect for function _CLOCK_Initialize
  6953                           
  6954     0DAA                     l2942:	
  6955                           ;incstack = 0
  6956                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6957                           
  6958                           
  6959                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6960     0DAA  307A               	movlw	122
  6961     0DAB  0021               	movlb	1	; select bank1
  6962     0DAC  0099               	movwf	25	;volatile
  6963     0DAD                     l2944:
  6964                           
  6965                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6966     0DAD  0022               	movlb	2	; select bank2
  6967     0DAE  0196               	clrf	22	;volatile
  6968     0DAF                     l2946:
  6969                           
  6970                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6971     0DAF  0021               	movlb	1	; select bank1
  6972     0DB0  0198               	clrf	24	;volatile
  6973     0DB1                     l333:
  6974     0DB1  0008               	return
  6975     0DB2                     __end_of_CLOCK_Initialize:
  6976                           
  6977                           	psect	text12
  6978     0E67                     __ptext12:	
  6979 ;; *************** function _ADC_Initialize *****************
  6980 ;; Defined at:
  6981 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0, pclath, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6995 ;;      Params:         0       0       0       0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; Hardware stack levels required when called: 8
  7002 ;; This function calls:
  7003 ;;		_ADC_SetInterruptHandler
  7004 ;; This function is called by:
  7005 ;;		_SYSTEM_Initialize
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009     0E67                     _ADC_Initialize:	
  7010                           ;psect for function _ADC_Initialize
  7011                           
  7012     0E67                     l2892:	
  7013                           ;incstack = 0
  7014                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7015                           
  7016                           
  7017                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  7018     0E67  3060               	movlw	96
  7019     0E68  0021               	movlb	1	; select bank1
  7020     0E69  009E               	movwf	30	;volatile
  7021     0E6A                     l2894:
  7022                           
  7023                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  7024     0E6A  019B               	clrf	27	;volatile
  7025     0E6B                     l2896:
  7026                           
  7027                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  7028     0E6B  019C               	clrf	28	;volatile
  7029     0E6C                     l2898:
  7030                           
  7031                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  7032     0E6C  019F               	clrf	31	;volatile
  7033     0E6D                     l2900:
  7034                           
  7035                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  7036     0E6D  3001               	movlw	1
  7037     0E6E  009D               	movwf	29	;volatile
  7038     0E6F                     l2902:
  7039                           
  7040                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  7041     0E6F  0020               	movlb	0	; select bank0
  7042     0E70  1310               	bcf	16,6	;volatile
  7043     0E71                     l2904:
  7044                           
  7045                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  7046     0E71  30E3               	movlw	low _ADC_DefaultInterruptHandler
  7047     0E72  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7048     0E73  300C               	movlw	high _ADC_DefaultInterruptHandler
  7049     0E74  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7050     0E75  318D  2557  318E   	fcall	_ADC_SetInterruptHandler
  7051     0E78                     l2906:
  7052                           
  7053                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  7054     0E78  0021               	movlb	1	; select bank1
  7055     0E79  1710               	bsf	16,6	;volatile
  7056     0E7A                     l27:
  7057     0E7A  0008               	return
  7058     0E7B                     __end_of_ADC_Initialize:
  7059                           
  7060                           	psect	text13
  7061     0D57                     __ptext13:	
  7062 ;; *************** function _ADC_SetInterruptHandler *****************
  7063 ;; Defined at:
  7064 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7067 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7079 ;;      Params:         2       0       0       0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0
  7082 ;;      Totals:         2       0       0       0       0       0       0       0
  7083 ;;Total ram usage:        2 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 7
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_ADC_Initialize
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093     0D57                     _ADC_SetInterruptHandler:	
  7094                           ;psect for function _ADC_SetInterruptHandler
  7095                           
  7096     0D57                     l2632:	
  7097                           ;incstack = 0
  7098                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7099                           
  7100                           
  7101                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  7102     0D57  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7103     0D58  0020               	movlb	0	; select bank0
  7104     0D59  00EC               	movwf	_ADC_InterruptHandler+1
  7105     0D5A  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7106     0D5B  00EB               	movwf	_ADC_InterruptHandler
  7107     0D5C                     l55:
  7108     0D5C  0008               	return
  7109     0D5D                     __end_of_ADC_SetInterruptHandler:
  7110                           
  7111                           	psect	text14
  7112     0068                     __ptext14:	
  7113 ;; *************** function _ProcessMsg *****************
  7114 ;; Defined at:
  7115 ;;		line 47 in file "main.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  msg_id          1    wreg     unsigned char 
  7118 ;;  data            1   46[BANK0 ] PTR unsigned char 
  7119 ;;		 -> parserDataBuffer(5), 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  msg_id          1   48[BANK0 ] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      void 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7131 ;;      Params:         0       1       0       0       0       0       0       0
  7132 ;;      Locals:         0       1       0       0       0       0       0       0
  7133 ;;      Temps:          0       1       0       0       0       0       0       0
  7134 ;;      Totals:         0       3       0       0       0       0       0       0
  7135 ;;Total ram usage:        3 bytes
  7136 ;; Hardware stack levels used: 1
  7137 ;; Hardware stack levels required when called: 11
  7138 ;; This function calls:
  7139 ;;		_KAPS_GoToIdx
  7140 ;;		_KAPS_StorePos
  7141 ;;		_KAPS_getIndex
  7142 ;;		_KAPS_getPos
  7143 ;;		_KAPS_getStatus
  7144 ;;		_KAPS_setAbsPos
  7145 ;;		_KAPS_setRelPos
  7146 ;;		_SSPA_getPOut
  7147 ;;		_SSPA_getTemp
  7148 ;;		_SSPA_setMute
  7149 ;;		_SendMsg
  7150 ;;		_packLong
  7151 ;;		_unpackLong
  7152 ;;		_unpackWord
  7153 ;; This function is called by:
  7154 ;;		_main
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158     0068                     _ProcessMsg:	
  7159                           ;psect for function _ProcessMsg
  7160                           
  7161                           
  7162                           ;incstack = 0
  7163                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7164                           ;ProcessMsg@msg_id stored from wreg
  7165     0068  0020               	movlb	0	; select bank0
  7166     0069  00D0               	movwf	ProcessMsg@msg_id
  7167     006A                     l3912:
  7168                           
  7169                           ;main.c: 48:     static uint8_t payload[6];;main.c: 50:     switch (msg_id) {
  7170     006A  2988               	goto	l3964
  7171     006B                     l3914:
  7172                           
  7173                           ;main.c: 52:             payload[0] = data[0];
  7174     006B  084E               	movf	ProcessMsg@data,w
  7175     006C  0086               	movwf	6
  7176     006D  0187               	clrf	7
  7177     006E  0801               	movf	1,w
  7178     006F  0021               	movlb	1	; select bank1
  7179     0070  00C4               	movwf	ProcessMsg@payload^(0+128)
  7180     0071                     l3916:
  7181                           
  7182                           ;main.c: 53:             payload[1] = (uint8_t) sspas[data[0]].m_Mute;
  7183     0071  0020               	movlb	0	; select bank0
  7184     0072  084E               	movf	ProcessMsg@data,w
  7185     0073  0086               	movwf	6
  7186     0074  0187               	clrf	7
  7187     0075  0801               	movf	1,w
  7188     0076  00CF               	movwf	??_ProcessMsg
  7189     0077  3002               	movlw	2
  7190     0078                     u1975:
  7191     0078  35CF               	lslf	??_ProcessMsg,f
  7192     0079  3EFF               	addlw	-1
  7193     007A  1D03               	skipz
  7194     007B  2878               	goto	u1975
  7195     007C  354F               	lslf	??_ProcessMsg,w
  7196     007D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7197     007E  0086               	movwf	6
  7198     007F  0187               	clrf	7
  7199     0080  0801               	movf	1,w
  7200     0081  0021               	movlb	1	; select bank1
  7201     0082  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7202     0083                     l3918:
  7203                           
  7204                           ;main.c: 54:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  7205     0083  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7206     0084  0020               	movlb	0	; select bank0
  7207     0085  00A0               	movwf	SendMsg@data
  7208     0086  3002               	movlw	2
  7209     0087  00A1               	movwf	SendMsg@data_len
  7210     0088  300C               	movlw	12
  7211     0089  3186  262C  3180   	fcall	_SendMsg
  7212                           
  7213                           ;main.c: 55:             break;
  7214     008C  29AB               	goto	l693
  7215     008D                     l3920:
  7216                           
  7217                           ;main.c: 58:             SSPA_getTemp((antenna_band_t) data[0]);
  7218     008D  084E               	movf	ProcessMsg@data,w
  7219     008E  0086               	movwf	6
  7220     008F  0187               	clrf	7
  7221     0090  0801               	movf	1,w
  7222     0091  3185  25B2  3180   	fcall	_SSPA_getTemp
  7223     0094                     l3922:
  7224                           
  7225                           ;main.c: 59:             payload[0] = data[0];
  7226     0094  0020               	movlb	0	; select bank0
  7227     0095  084E               	movf	ProcessMsg@data,w
  7228     0096  0086               	movwf	6
  7229     0097  0187               	clrf	7
  7230     0098  0801               	movf	1,w
  7231     0099  0021               	movlb	1	; select bank1
  7232     009A  00C4               	movwf	ProcessMsg@payload^(0+128)
  7233     009B                     l3924:
  7234                           
  7235                           ;main.c: 60:             unpackWord((uint16_t) sspas[data[0]].m_wTemp, &payload[1]);
  7236     009B  0020               	movlb	0	; select bank0
  7237     009C  084E               	movf	ProcessMsg@data,w
  7238     009D  0086               	movwf	6
  7239     009E  0187               	clrf	7
  7240     009F  0801               	movf	1,w
  7241     00A0  00CF               	movwf	??_ProcessMsg
  7242     00A1  3002               	movlw	2
  7243     00A2                     u1985:
  7244     00A2  35CF               	lslf	??_ProcessMsg,f
  7245     00A3  3EFF               	addlw	-1
  7246     00A4  1D03               	skipz
  7247     00A5  28A2               	goto	u1985
  7248     00A6  354F               	lslf	??_ProcessMsg,w
  7249     00A7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7250     00A8  0086               	movwf	6
  7251     00A9  0187               	clrf	7
  7252     00AA  3F40               	moviw [0]fsr1
  7253     00AB  00A0               	movwf	unpackWord@value
  7254     00AC  3F41               	moviw [1]fsr1
  7255     00AD  00A1               	movwf	unpackWord@value+1
  7256     00AE  30C5               	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7257     00AF  00A2               	movwf	unpackWord@data
  7258     00B0  318D  25DF  3180   	fcall	_unpackWord
  7259     00B3                     l3926:
  7260                           
  7261                           ;main.c: 61:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7262     00B3  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7263     00B4  0020               	movlb	0	; select bank0
  7264     00B5  00A0               	movwf	SendMsg@data
  7265     00B6  3003               	movlw	3
  7266     00B7  00A1               	movwf	SendMsg@data_len
  7267     00B8  300D               	movlw	13
  7268     00B9  3186  262C  3180   	fcall	_SendMsg
  7269                           
  7270                           ;main.c: 62:             break;
  7271     00BC  29AB               	goto	l693
  7272     00BD                     l3928:
  7273                           
  7274                           ;main.c: 65:             SSPA_getPOut((antenna_band_t) data[0]);
  7275     00BD  084E               	movf	ProcessMsg@data,w
  7276     00BE  0086               	movwf	6
  7277     00BF  0187               	clrf	7
  7278     00C0  0801               	movf	1,w
  7279     00C1  3182  22F4  3180   	fcall	_SSPA_getPOut
  7280     00C4                     l3930:
  7281                           
  7282                           ;main.c: 66:             payload[0] = data[0];
  7283     00C4  0020               	movlb	0	; select bank0
  7284     00C5  084E               	movf	ProcessMsg@data,w
  7285     00C6  0086               	movwf	6
  7286     00C7  0187               	clrf	7
  7287     00C8  0801               	movf	1,w
  7288     00C9  0021               	movlb	1	; select bank1
  7289     00CA  00C4               	movwf	ProcessMsg@payload^(0+128)
  7290     00CB                     l3932:
  7291                           
  7292                           ;main.c: 67:             payload[1] = sspas[data[0]].m_bPOut;
  7293     00CB  0020               	movlb	0	; select bank0
  7294     00CC  084E               	movf	ProcessMsg@data,w
  7295     00CD  0086               	movwf	6
  7296     00CE  0187               	clrf	7
  7297     00CF  0801               	movf	1,w
  7298     00D0  00CF               	movwf	??_ProcessMsg
  7299     00D1  3002               	movlw	2
  7300     00D2                     u1995:
  7301     00D2  35CF               	lslf	??_ProcessMsg,f
  7302     00D3  3EFF               	addlw	-1
  7303     00D4  1D03               	skipz
  7304     00D5  28D2               	goto	u1995
  7305     00D6  354F               	lslf	??_ProcessMsg,w
  7306     00D7  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  7307     00D8  0086               	movwf	6
  7308     00D9  0187               	clrf	7
  7309     00DA  0801               	movf	1,w
  7310     00DB  0021               	movlb	1	; select bank1
  7311     00DC  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7312     00DD                     l3934:
  7313                           
  7314                           ;main.c: 68:             unpackLong(sspas[data[0]].m_lCurrent, &payload[2]);
  7315     00DD  0020               	movlb	0	; select bank0
  7316     00DE  084E               	movf	ProcessMsg@data,w
  7317     00DF  0086               	movwf	6
  7318     00E0  0187               	clrf	7
  7319     00E1  0801               	movf	1,w
  7320     00E2  00CF               	movwf	??_ProcessMsg
  7321     00E3  3002               	movlw	2
  7322     00E4                     u2005:
  7323     00E4  35CF               	lslf	??_ProcessMsg,f
  7324     00E5  3EFF               	addlw	-1
  7325     00E6  1D03               	skipz
  7326     00E7  28E4               	goto	u2005
  7327     00E8  354F               	lslf	??_ProcessMsg,w
  7328     00E9  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  7329     00EA  0086               	movwf	6
  7330     00EB  0187               	clrf	7
  7331     00EC  3F40               	moviw [0]fsr1
  7332     00ED  00A0               	movwf	unpackLong@value
  7333     00EE  3F41               	moviw [1]fsr1
  7334     00EF  00A1               	movwf	unpackLong@value+1
  7335     00F0  3F42               	moviw [2]fsr1
  7336     00F1  00A2               	movwf	unpackLong@value+2
  7337     00F2  3F43               	moviw [3]fsr1
  7338     00F3  00A3               	movwf	unpackLong@value+3
  7339     00F4  30C6               	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7340     00F5  00A4               	movwf	unpackLong@data
  7341     00F6  3184  246C  3180   	fcall	_unpackLong
  7342     00F9                     l3936:
  7343                           
  7344                           ;main.c: 69:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7345     00F9  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7346     00FA  0020               	movlb	0	; select bank0
  7347     00FB  00A0               	movwf	SendMsg@data
  7348     00FC  3006               	movlw	6
  7349     00FD  00A1               	movwf	SendMsg@data_len
  7350     00FE  300E               	movlw	14
  7351     00FF  3186  262C  3180   	fcall	_SendMsg
  7352                           
  7353                           ;main.c: 70:             break;
  7354     0102  29AB               	goto	l693
  7355     0103                     l3938:
  7356                           
  7357                           ;main.c: 73:             KAPS_getStatus();
  7358     0103  3187  27AE  3180   	fcall	_KAPS_getStatus
  7359     0106                     l3940:
  7360                           
  7361                           ;main.c: 74:             payload[0] = (uint8_t) kaps.m_Status;
  7362     0106  0020               	movlb	0	; select bank0
  7363     0107  0865               	movf	_kaps+1,w
  7364     0108  0021               	movlb	1	; select bank1
  7365     0109  00C4               	movwf	ProcessMsg@payload^(0+128)
  7366     010A                     l3942:
  7367                           
  7368                           ;main.c: 75:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7369     010A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7370     010B  0020               	movlb	0	; select bank0
  7371     010C  00A0               	movwf	SendMsg@data
  7372     010D  01A1               	clrf	SendMsg@data_len
  7373     010E  0AA1               	incf	SendMsg@data_len,f
  7374     010F  300F               	movlw	15
  7375     0110  3186  262C  3180   	fcall	_SendMsg
  7376                           
  7377                           ;main.c: 76:             break;
  7378     0113  29AB               	goto	l693
  7379     0114                     l3944:
  7380                           
  7381                           ;main.c: 79:             KAPS_getPos();
  7382     0114  3185  2574  3180   	fcall	_KAPS_getPos
  7383                           
  7384                           ;main.c: 80:             unpackLong(kaps.m_lAbsPos, payload);
  7385     0117  3002               	movlw	2
  7386     0118  3E64               	addlw	(low (_kaps| 0))& (0+255)
  7387     0119  0086               	movwf	6
  7388     011A  0187               	clrf	7
  7389     011B  3F40               	moviw [0]fsr1
  7390     011C  0020               	movlb	0	; select bank0
  7391     011D  00A0               	movwf	unpackLong@value
  7392     011E  3F41               	moviw [1]fsr1
  7393     011F  00A1               	movwf	unpackLong@value+1
  7394     0120  3F42               	moviw [2]fsr1
  7395     0121  00A2               	movwf	unpackLong@value+2
  7396     0122  3F43               	moviw [3]fsr1
  7397     0123  00A3               	movwf	unpackLong@value+3
  7398     0124  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7399     0125  00A4               	movwf	unpackLong@data
  7400     0126  3184  246C  3180   	fcall	_unpackLong
  7401                           
  7402                           ;main.c: 81:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7403     0129  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7404     012A  0020               	movlb	0	; select bank0
  7405     012B  00A0               	movwf	SendMsg@data
  7406     012C  3004               	movlw	4
  7407     012D  00A1               	movwf	SendMsg@data_len
  7408     012E  3010               	movlw	16
  7409     012F  3186  262C  3180   	fcall	_SendMsg
  7410                           
  7411                           ;main.c: 82:             break;
  7412     0132  29AB               	goto	l693
  7413     0133                     l3946:
  7414                           
  7415                           ;main.c: 85:             KAPS_getIndex();
  7416     0133  318F  27D2  3180   	fcall	_KAPS_getIndex
  7417     0136                     l3948:
  7418                           
  7419                           ;main.c: 86:             payload[0] = kaps.m_bIdxPos;
  7420     0136  0020               	movlb	0	; select bank0
  7421     0137  086A               	movf	_kaps+6,w
  7422     0138  0021               	movlb	1	; select bank1
  7423     0139  00C4               	movwf	ProcessMsg@payload^(0+128)
  7424     013A                     l3950:
  7425                           
  7426                           ;main.c: 87:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7427     013A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7428     013B  0020               	movlb	0	; select bank0
  7429     013C  00A0               	movwf	SendMsg@data
  7430     013D  01A1               	clrf	SendMsg@data_len
  7431     013E  0AA1               	incf	SendMsg@data_len,f
  7432     013F  3012               	movlw	18
  7433     0140  3186  262C  3180   	fcall	_SendMsg
  7434                           
  7435                           ;main.c: 88:             break;
  7436     0143  29AB               	goto	l693
  7437     0144                     l3952:
  7438                           
  7439                           ;main.c: 91:             SSPA_setMute((antenna_band_t) data[0], (mute_t) data[1]);
  7440     0144  084E               	movf	ProcessMsg@data,w
  7441     0145  0086               	movwf	6
  7442     0146  0187               	clrf	7
  7443     0147  3F41               	moviw [1]fsr1
  7444     0148  00F4               	movwf	SSPA_setMute@mute
  7445     0149  084E               	movf	ProcessMsg@data,w
  7446     014A  0086               	movwf	6
  7447     014B  0187               	clrf	7
  7448     014C  0801               	movf	1,w
  7449     014D  3186  2668  3180   	fcall	_SSPA_setMute
  7450                           
  7451                           ;main.c: 92:             break;
  7452     0150  29AB               	goto	l693
  7453     0151                     l3954:
  7454                           
  7455                           ;main.c: 95:             KAPS_GoToIdx(data[0]);
  7456     0151  084E               	movf	ProcessMsg@data,w
  7457     0152  0086               	movwf	6
  7458     0153  0187               	clrf	7
  7459     0154  0801               	movf	1,w
  7460     0155  318F  2706  3180   	fcall	_KAPS_GoToIdx
  7461                           
  7462                           ;main.c: 96:             break;
  7463     0158  29AB               	goto	l693
  7464     0159                     l3956:
  7465                           
  7466                           ;main.c: 99:             KAPS_setAbsPos(packLong(data));
  7467     0159  084E               	movf	ProcessMsg@data,w
  7468     015A  3183  237E  3180   	fcall	_packLong
  7469     015D  0020               	movlb	0	; select bank0
  7470     015E  0823               	movf	?_packLong+3,w
  7471     015F  00B0               	movwf	KAPS_setAbsPos@pos+3
  7472     0160  0822               	movf	?_packLong+2,w
  7473     0161  00AF               	movwf	KAPS_setAbsPos@pos+2
  7474     0162  0821               	movf	?_packLong+1,w
  7475     0163  00AE               	movwf	KAPS_setAbsPos@pos+1
  7476     0164  0820               	movf	?_packLong,w
  7477     0165  00AD               	movwf	KAPS_setAbsPos@pos
  7478     0166  3187  274B  3180   	fcall	_KAPS_setAbsPos
  7479                           
  7480                           ;main.c: 100:             break;
  7481     0169  29AB               	goto	l693
  7482     016A                     l3958:
  7483                           
  7484                           ;main.c: 103:             KAPS_setRelPos((int8_t) data[0]);
  7485     016A  084E               	movf	ProcessMsg@data,w
  7486     016B  0086               	movwf	6
  7487     016C  0187               	clrf	7
  7488     016D  0801               	movf	1,w
  7489     016E  318F  272C  3180   	fcall	_KAPS_setRelPos
  7490                           
  7491                           ;main.c: 104:             break;
  7492     0171  29AB               	goto	l693
  7493     0172                     l3960:
  7494                           
  7495                           ;main.c: 107:             KAPS_StorePos(data[4], packLong(data));
  7496     0172  084E               	movf	ProcessMsg@data,w
  7497     0173  3183  237E  3180   	fcall	_packLong
  7498     0176  0020               	movlb	0	; select bank0
  7499     0177  0823               	movf	?_packLong+3,w
  7500     0178  00B0               	movwf	KAPS_StorePos@pos+3
  7501     0179  0822               	movf	?_packLong+2,w
  7502     017A  00AF               	movwf	KAPS_StorePos@pos+2
  7503     017B  0821               	movf	?_packLong+1,w
  7504     017C  00AE               	movwf	KAPS_StorePos@pos+1
  7505     017D  0820               	movf	?_packLong,w
  7506     017E  00AD               	movwf	KAPS_StorePos@pos
  7507     017F  084E               	movf	ProcessMsg@data,w
  7508     0180  3E04               	addlw	4
  7509     0181  0086               	movwf	6
  7510     0182  0187               	clrf	7
  7511     0183  0801               	movf	1,w
  7512     0184  3185  2534  3180   	fcall	_KAPS_StorePos
  7513                           
  7514                           ;main.c: 108:             break;
  7515     0187  29AB               	goto	l693
  7516     0188                     l3964:
  7517     0188  0850               	movf	ProcessMsg@msg_id,w
  7518                           
  7519                           ; Switch size 1, requested type "simple"
  7520                           ; Number of cases is 11, Range of values is 1 to 17
  7521                           ; switch strategies available:
  7522                           ; Name         Instructions Cycles
  7523                           ; simple_byte           34    18 (average)
  7524                           ; direct_byte           43     9 (fixed)
  7525                           ; jumptable            263     9 (fixed)
  7526                           ;	Chosen strategy is simple_byte
  7527     0189  3A01               	xorlw	1	; case 1
  7528     018A  1903               	skipnz
  7529     018B  2944               	goto	l3952
  7530     018C  3A03               	xorlw	3	; case 2
  7531     018D  1903               	skipnz
  7532     018E  286B               	goto	l3914
  7533     018F  3A01               	xorlw	1	; case 3
  7534     0190  1903               	skipnz
  7535     0191  288D               	goto	l3920
  7536     0192  3A07               	xorlw	7	; case 4
  7537     0193  1903               	skipnz
  7538     0194  28BD               	goto	l3928
  7539     0195  3A01               	xorlw	1	; case 5
  7540     0196  1903               	skipnz
  7541     0197  2903               	goto	l3938
  7542     0198  3A03               	xorlw	3	; case 6
  7543     0199  1903               	skipnz
  7544     019A  2914               	goto	l3944
  7545     019B  3A01               	xorlw	1	; case 7
  7546     019C  1903               	skipnz
  7547     019D  2951               	goto	l3954
  7548     019E  3A0F               	xorlw	15	; case 8
  7549     019F  1903               	skipnz
  7550     01A0  2959               	goto	l3956
  7551     01A1  3A01               	xorlw	1	; case 9
  7552     01A2  1903               	skipnz
  7553     01A3  296A               	goto	l3958
  7554     01A4  3A03               	xorlw	3	; case 10
  7555     01A5  1903               	skipnz
  7556     01A6  2972               	goto	l3960
  7557     01A7  3A1B               	xorlw	27	; case 17
  7558     01A8  1903               	skipnz
  7559     01A9  2933               	goto	l3946
  7560     01AA  29AB               	goto	l693
  7561     01AB                     l693:
  7562     01AB  0008               	return
  7563     01AC                     __end_of_ProcessMsg:
  7564                           
  7565                           	psect	text15
  7566     0DDF                     __ptext15:	
  7567 ;; *************** function _unpackWord *****************
  7568 ;; Defined at:
  7569 ;;		line 71 in file "utils.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  value           2    0[BANK0 ] unsigned short 
  7572 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7573 ;;		 -> ProcessMsg@payload(6), 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  1    wreg      void 
  7578 ;; Registers used:
  7579 ;;		wreg, fsr1l, fsr1h, status,2
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7585 ;;      Params:         0       3       0       0       0       0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0
  7588 ;;      Totals:         0       3       0       0       0       0       0       0
  7589 ;;Total ram usage:        3 bytes
  7590 ;; Hardware stack levels used: 1
  7591 ;; Hardware stack levels required when called: 7
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_ProcessMsg
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599     0DDF                     _unpackWord:	
  7600                           ;psect for function _unpackWord
  7601                           
  7602     0DDF                     l3796:	
  7603                           ;incstack = 0
  7604                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7605                           
  7606                           
  7607                           ;utils.c: 73:     data[0] = value & 0xFF;
  7608     0DDF  0020               	movlb	0	; select bank0
  7609     0DE0  0822               	movf	unpackWord@data,w
  7610     0DE1  0086               	movwf	6
  7611     0DE2  0187               	clrf	7
  7612     0DE3  0820               	movf	unpackWord@value,w
  7613     0DE4  0081               	movwf	1
  7614     0DE5                     l3798:
  7615                           
  7616                           ;utils.c: 74:     data[1] = (value >> 8) & 0xFF;
  7617     0DE5  0A22               	incf	unpackWord@data,w
  7618     0DE6  0086               	movwf	6
  7619     0DE7  0187               	clrf	7
  7620     0DE8  0821               	movf	unpackWord@value+1,w
  7621     0DE9  0081               	movwf	1
  7622     0DEA                     l751:
  7623     0DEA  0008               	return
  7624     0DEB                     __end_of_unpackWord:
  7625                           
  7626                           	psect	text16
  7627     0668                     __ptext16:	
  7628 ;; *************** function _SSPA_setMute *****************
  7629 ;; Defined at:
  7630 ;;		line 81 in file "sspa.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  band            1    wreg     enum E40
  7633 ;;  mute            1    4[COMMON] enum E36
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  band            1    5[COMMON] enum E40
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7645 ;;      Params:         1       0       0       0       0       0       0       0
  7646 ;;      Locals:         1       0       0       0       0       0       0       0
  7647 ;;      Temps:          0       2       0       0       0       0       0       0
  7648 ;;      Totals:         2       2       0       0       0       0       0       0
  7649 ;;Total ram usage:        4 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; Hardware stack levels required when called: 7
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_ProcessMsg
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659     0668                     _SSPA_setMute:	
  7660                           ;psect for function _SSPA_setMute
  7661                           
  7662                           
  7663                           ;incstack = 0
  7664                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7665                           ;SSPA_setMute@band stored from wreg
  7666     0668  00F5               	movwf	SSPA_setMute@band
  7667     0669                     l3860:
  7668                           
  7669                           ;sspa.c: 82:     switch (band) {
  7670     0669  2E80               	goto	l3868
  7671     066A                     l3862:
  7672                           
  7673                           ;sspa.c: 84:             if (mute == UNMUTE)
  7674     066A  0874               	movf	SSPA_setMute@mute,w
  7675     066B  1D03               	btfss	3,2
  7676     066C  2E6E               	goto	u1931
  7677     066D  2E6F               	goto	u1930
  7678     066E                     u1931:
  7679     066E  2E72               	goto	l850
  7680     066F                     u1930:
  7681     066F                     l847:	
  7682                           ;sspa.c: 85:                 do { LATCbits.LATC7 = 1; } while(0);
  7683                           
  7684     066F  0022               	movlb	2	; select bank2
  7685     0670  178E               	bsf	14,7	;volatile
  7686     0671  2E94               	goto	l3870
  7687     0672                     l850:	
  7688                           ;sspa.c: 87:                 do { LATCbits.LATC7 = 0; } while(0);
  7689                           
  7690     0672  0022               	movlb	2	; select bank2
  7691     0673  138E               	bcf	14,7	;volatile
  7692     0674  2E94               	goto	l3870
  7693     0675                     l3864:
  7694                           
  7695                           ;sspa.c: 91:             if (mute == UNMUTE)
  7696     0675  0874               	movf	SSPA_setMute@mute,w
  7697     0676  1D03               	btfss	3,2
  7698     0677  2E79               	goto	u1941
  7699     0678  2E7A               	goto	u1940
  7700     0679                     u1941:
  7701     0679  2E7D               	goto	l858
  7702     067A                     u1940:
  7703     067A                     l855:	
  7704                           ;sspa.c: 92:                 do { LATCbits.LATC6 = 1; } while(0);
  7705                           
  7706     067A  0022               	movlb	2	; select bank2
  7707     067B  170E               	bsf	14,6	;volatile
  7708     067C  2E94               	goto	l3870
  7709     067D                     l858:	
  7710                           ;sspa.c: 94:                 do { LATCbits.LATC6 = 0; } while(0);
  7711                           
  7712     067D  0022               	movlb	2	; select bank2
  7713     067E  130E               	bcf	14,6	;volatile
  7714     067F  2E94               	goto	l3870
  7715     0680                     l3868:
  7716     0680  0875               	movf	SSPA_setMute@band,w
  7717     0681  0020               	movlb	0	; select bank0
  7718     0682  00A0               	movwf	??_SSPA_setMute
  7719     0683  01A1               	clrf	??_SSPA_setMute+1
  7720                           
  7721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7722                           ; Switch size 1, requested type "simple"
  7723                           ; Number of cases is 1, Range of values is 0 to 0
  7724                           ; switch strategies available:
  7725                           ; Name         Instructions Cycles
  7726                           ; simple_byte            4     3 (average)
  7727                           ; direct_byte            8     6 (fixed)
  7728                           ; jumptable            260     6 (fixed)
  7729                           ;	Chosen strategy is simple_byte
  7730     0684  0821               	movf	??_SSPA_setMute+1,w
  7731     0685  3A00               	xorlw	0	; case 0
  7732     0686  1903               	skipnz
  7733     0687  2E89               	goto	l4214
  7734     0688  2E94               	goto	l3870
  7735     0689                     l4214:
  7736                           
  7737                           ; Switch size 1, requested type "simple"
  7738                           ; Number of cases is 3, Range of values is 0 to 2
  7739                           ; switch strategies available:
  7740                           ; Name         Instructions Cycles
  7741                           ; simple_byte           10     6 (average)
  7742                           ; direct_byte           12     6 (fixed)
  7743                           ; jumptable            260     6 (fixed)
  7744                           ;	Chosen strategy is simple_byte
  7745     0689  0820               	movf	??_SSPA_setMute,w
  7746     068A  3A00               	xorlw	0	; case 0
  7747     068B  1903               	skipnz
  7748     068C  2E94               	goto	l3870
  7749     068D  3A01               	xorlw	1	; case 1
  7750     068E  1903               	skipnz
  7751     068F  2E6A               	goto	l3862
  7752     0690  3A03               	xorlw	3	; case 2
  7753     0691  1903               	skipnz
  7754     0692  2E75               	goto	l3864
  7755     0693  2E94               	goto	l3870
  7756     0694                     l3870:
  7757                           
  7758                           ;sspa.c: 102:     sspas[band].m_Mute = mute;
  7759     0694  0875               	movf	SSPA_setMute@band,w
  7760     0695  0020               	movlb	0	; select bank0
  7761     0696  00A0               	movwf	??_SSPA_setMute
  7762     0697  3002               	movlw	2
  7763     0698                     u1955:
  7764     0698  35A0               	lslf	??_SSPA_setMute,f
  7765     0699  3EFF               	addlw	-1
  7766     069A  1D03               	skipz
  7767     069B  2E98               	goto	u1955
  7768     069C  3520               	lslf	??_SSPA_setMute,w
  7769     069D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7770     069E  0086               	movwf	6
  7771     069F  0187               	clrf	7
  7772     06A0  0874               	movf	SSPA_setMute@mute,w
  7773     06A1  0081               	movwf	1
  7774     06A2                     l862:
  7775     06A2  0008               	return
  7776     06A3                     __end_of_SSPA_setMute:
  7777                           
  7778                           	psect	text17
  7779     05B2                     __ptext17:	
  7780 ;; *************** function _SSPA_getTemp *****************
  7781 ;; Defined at:
  7782 ;;		line 109 in file "sspa.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  band            1    wreg     enum E40
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  band            1   45[BANK0 ] enum E40
  7787 ;;  adc_value       2   42[BANK0 ] unsigned short 
  7788 ;;  channel         1   44[BANK0 ] enum E9257
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7798 ;;      Params:         0       0       0       0       0       0       0       0
  7799 ;;      Locals:         0       4       0       0       0       0       0       0
  7800 ;;      Temps:          0       2       0       0       0       0       0       0
  7801 ;;      Totals:         0       6       0       0       0       0       0       0
  7802 ;;Total ram usage:        6 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 9
  7805 ;; This function calls:
  7806 ;;		_ADC2Celsius
  7807 ;;		_getADCValue
  7808 ;; This function is called by:
  7809 ;;		_ProcessMsg
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813     05B2                     _SSPA_getTemp:	
  7814                           ;psect for function _SSPA_getTemp
  7815                           
  7816                           
  7817                           ;incstack = 0
  7818                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7819                           ;SSPA_getTemp@band stored from wreg
  7820     05B2  0020               	movlb	0	; select bank0
  7821     05B3  00CD               	movwf	SSPA_getTemp@band
  7822     05B4                     l3776:
  7823                           
  7824                           ;sspa.c: 110:     adc_channel_t channel;;sspa.c: 111:     adc_result_t adc_value;;sspa.c
      +                          : 113:     switch (band) {
  7825     05B4  2DBB               	goto	l3784
  7826     05B5                     l3778:
  7827                           
  7828                           ;sspa.c: 115:             channel = TM_Ka;
  7829     05B5  3003               	movlw	3
  7830     05B6  00CC               	movwf	SSPA_getTemp@channel
  7831                           
  7832                           ;sspa.c: 116:             break;
  7833     05B7  2DCE               	goto	l3786
  7834     05B8                     l3780:
  7835                           
  7836                           ;sspa.c: 118:             channel = TM_X;
  7837     05B8  3007               	movlw	7
  7838     05B9  00CC               	movwf	SSPA_getTemp@channel
  7839                           
  7840                           ;sspa.c: 119:             break;
  7841     05BA  2DCE               	goto	l3786
  7842     05BB                     l3784:
  7843     05BB  084D               	movf	SSPA_getTemp@band,w
  7844     05BC  00C8               	movwf	??_SSPA_getTemp
  7845     05BD  01C9               	clrf	??_SSPA_getTemp+1
  7846                           
  7847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7848                           ; Switch size 1, requested type "simple"
  7849                           ; Number of cases is 1, Range of values is 0 to 0
  7850                           ; switch strategies available:
  7851                           ; Name         Instructions Cycles
  7852                           ; simple_byte            4     3 (average)
  7853                           ; direct_byte            8     6 (fixed)
  7854                           ; jumptable            260     6 (fixed)
  7855                           ;	Chosen strategy is simple_byte
  7856     05BE  0849               	movf	??_SSPA_getTemp+1,w
  7857     05BF  3A00               	xorlw	0	; case 0
  7858     05C0  1903               	skipnz
  7859     05C1  2DC3               	goto	l4216
  7860     05C2  2DCE               	goto	l3786
  7861     05C3                     l4216:
  7862                           
  7863                           ; Switch size 1, requested type "simple"
  7864                           ; Number of cases is 3, Range of values is 0 to 2
  7865                           ; switch strategies available:
  7866                           ; Name         Instructions Cycles
  7867                           ; simple_byte           10     6 (average)
  7868                           ; direct_byte           12     6 (fixed)
  7869                           ; jumptable            260     6 (fixed)
  7870                           ;	Chosen strategy is simple_byte
  7871     05C3  0848               	movf	??_SSPA_getTemp,w
  7872     05C4  3A00               	xorlw	0	; case 0
  7873     05C5  1903               	skipnz
  7874     05C6  2DCE               	goto	l3786
  7875     05C7  3A01               	xorlw	1	; case 1
  7876     05C8  1903               	skipnz
  7877     05C9  2DB5               	goto	l3778
  7878     05CA  3A03               	xorlw	3	; case 2
  7879     05CB  1903               	skipnz
  7880     05CC  2DB8               	goto	l3780
  7881     05CD  2DCE               	goto	l3786
  7882     05CE                     l3786:
  7883                           
  7884                           ;sspa.c: 126:     adc_value = getADCValue(channel);
  7885     05CE  084C               	movf	SSPA_getTemp@channel,w
  7886     05CF  3186  26A3  3185   	fcall	_getADCValue
  7887     05D2  0020               	movlb	0	; select bank0
  7888     05D3  0821               	movf	?_getADCValue+1,w
  7889     05D4  00CB               	movwf	SSPA_getTemp@adc_value+1
  7890     05D5  0820               	movf	?_getADCValue,w
  7891     05D6  00CA               	movwf	SSPA_getTemp@adc_value
  7892     05D7                     l3788:
  7893                           
  7894                           ;sspa.c: 128:     sspas[band].m_wTemp = ADC2Celsius(adc_value);
  7895     05D7  084B               	movf	SSPA_getTemp@adc_value+1,w
  7896     05D8  00BB               	movwf	ADC2Celsius@v+1
  7897     05D9  084A               	movf	SSPA_getTemp@adc_value,w
  7898     05DA  00BA               	movwf	ADC2Celsius@v
  7899     05DB  3183  23D5  3185   	fcall	_ADC2Celsius
  7900     05DE  0020               	movlb	0	; select bank0
  7901     05DF  084D               	movf	SSPA_getTemp@band,w
  7902     05E0  00C8               	movwf	??_SSPA_getTemp
  7903     05E1  3002               	movlw	2
  7904     05E2                     u1855:
  7905     05E2  35C8               	lslf	??_SSPA_getTemp,f
  7906     05E3  3EFF               	addlw	-1
  7907     05E4  1D03               	skipz
  7908     05E5  2DE2               	goto	u1855
  7909     05E6  3548               	lslf	??_SSPA_getTemp,w
  7910     05E7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7911     05E8  0086               	movwf	6
  7912     05E9  0187               	clrf	7
  7913     05EA  083A               	movf	?_ADC2Celsius,w
  7914     05EB  3FC0               	movwi [0]fsr1
  7915     05EC  083B               	movf	?_ADC2Celsius+1,w
  7916     05ED  3FC1               	movwi [1]fsr1
  7917     05EE                     l871:
  7918     05EE  0008               	return
  7919     05EF                     __end_of_SSPA_getTemp:
  7920                           
  7921                           	psect	text18
  7922     03D5                     __ptext18:	
  7923 ;; *************** function _ADC2Celsius *****************
  7924 ;; Defined at:
  7925 ;;		line 55 in file "sspa.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  v               2   26[BANK0 ] unsigned short 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  result          4   36[BANK0 ] long 
  7930 ;;  value           4   32[BANK0 ] long 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  2   26[BANK0 ] short 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, pclath, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7940 ;;      Params:         0       2       0       0       0       0       0       0
  7941 ;;      Locals:         0       8       0       0       0       0       0       0
  7942 ;;      Temps:          0       4       0       0       0       0       0       0
  7943 ;;      Totals:         0      14       0       0       0       0       0       0
  7944 ;;Total ram usage:       14 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 8
  7947 ;; This function calls:
  7948 ;;		___aldiv
  7949 ;;		___lmul
  7950 ;; This function is called by:
  7951 ;;		_SSPA_getTemp
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955     03D5                     _ADC2Celsius:	
  7956                           ;psect for function _ADC2Celsius
  7957                           
  7958     03D5                     l3752:	
  7959                           ;incstack = 0
  7960                           ; Regs used in _ADC2Celsius: [wreg+status,2+status,0+pclath+cstack]
  7961                           
  7962                           
  7963                           ;sspa.c: 56:     int32_t value = (int32_t) v;
  7964     03D5  0020               	movlb	0	; select bank0
  7965     03D6  083A               	movf	ADC2Celsius@v,w
  7966     03D7  00C0               	movwf	ADC2Celsius@value
  7967     03D8  083B               	movf	ADC2Celsius@v+1,w
  7968     03D9  00C1               	movwf	ADC2Celsius@value+1
  7969     03DA  01C2               	clrf	ADC2Celsius@value+2
  7970     03DB  01C3               	clrf	ADC2Celsius@value+3
  7971     03DC                     l3754:
  7972                           
  7973                           ;sspa.c: 57:     int32_t result = (int16_t)(160) - (value * (int16_t)(367822)) / (int16_
      +                          t)(1024000);
  7974     03DC  30FF               	movlw	255
  7975     03DD  00AF               	movwf	___aldiv@divisor+3
  7976     03DE  30FF               	movlw	255
  7977     03DF  00AE               	movwf	___aldiv@divisor+2
  7978     03E0  30A0               	movlw	160
  7979     03E1  00AD               	movwf	___aldiv@divisor+1
  7980     03E2  3000               	movlw	0
  7981     03E3  00AC               	movwf	___aldiv@divisor
  7982     03E4  0843               	movf	ADC2Celsius@value+3,w
  7983     03E5  00A3               	movwf	___lmul@multiplier+3
  7984     03E6  0842               	movf	ADC2Celsius@value+2,w
  7985     03E7  00A2               	movwf	___lmul@multiplier+2
  7986     03E8  0841               	movf	ADC2Celsius@value+1,w
  7987     03E9  00A1               	movwf	___lmul@multiplier+1
  7988     03EA  0840               	movf	ADC2Celsius@value,w
  7989     03EB  00A0               	movwf	___lmul@multiplier
  7990     03EC  30FF               	movlw	255
  7991     03ED  00A7               	movwf	___lmul@multiplicand+3
  7992     03EE  30FF               	movlw	255
  7993     03EF  00A6               	movwf	___lmul@multiplicand+2
  7994     03F0  309C               	movlw	156
  7995     03F1  00A5               	movwf	___lmul@multiplicand+1
  7996     03F2  30CE               	movlw	206
  7997     03F3  00A4               	movwf	___lmul@multiplicand
  7998     03F4  3187  2717  3183   	fcall	___lmul
  7999     03F7  0020               	movlb	0	; select bank0
  8000     03F8  0823               	movf	?___lmul+3,w
  8001     03F9  00B3               	movwf	___aldiv@dividend+3
  8002     03FA  0822               	movf	?___lmul+2,w
  8003     03FB  00B2               	movwf	___aldiv@dividend+2
  8004     03FC  0821               	movf	?___lmul+1,w
  8005     03FD  00B1               	movwf	___aldiv@dividend+1
  8006     03FE  0820               	movf	?___lmul,w
  8007     03FF  00B0               	movwf	___aldiv@dividend
  8008     0400  3182  2264  3183   	fcall	___aldiv
  8009     0403  30A0               	movlw	160
  8010     0404  0020               	movlb	0	; select bank0
  8011     0405  00BC               	movwf	??_ADC2Celsius
  8012     0406  3000               	movlw	0
  8013     0407  00BD               	movwf	??_ADC2Celsius+1
  8014     0408  3000               	movlw	0
  8015     0409  00BE               	movwf	??_ADC2Celsius+2
  8016     040A  3000               	movlw	0
  8017     040B  00BF               	movwf	??_ADC2Celsius+3
  8018     040C  082C               	movf	?___aldiv,w
  8019     040D  02BC               	subwf	??_ADC2Celsius,f
  8020     040E  082D               	movf	?___aldiv+1,w
  8021     040F  3BBD               	subwfb	??_ADC2Celsius+1,f
  8022     0410  082E               	movf	?___aldiv+2,w
  8023     0411  3BBE               	subwfb	??_ADC2Celsius+2,f
  8024     0412  082F               	movf	?___aldiv+3,w
  8025     0413  3BBF               	subwfb	??_ADC2Celsius+3,f
  8026     0414  083F               	movf	??_ADC2Celsius+3,w
  8027     0415  00C7               	movwf	ADC2Celsius@result+3
  8028     0416  083E               	movf	??_ADC2Celsius+2,w
  8029     0417  00C6               	movwf	ADC2Celsius@result+2
  8030     0418  083D               	movf	??_ADC2Celsius+1,w
  8031     0419  00C5               	movwf	ADC2Celsius@result+1
  8032     041A  083C               	movf	??_ADC2Celsius,w
  8033     041B  00C4               	movwf	ADC2Celsius@result
  8034     041C                     l3756:
  8035                           
  8036                           ;sspa.c: 59:     return (int16_t) result;
  8037     041C  0845               	movf	ADC2Celsius@result+1,w
  8038     041D  00BB               	movwf	?_ADC2Celsius+1
  8039     041E  0844               	movf	ADC2Celsius@result,w
  8040     041F  00BA               	movwf	?_ADC2Celsius
  8041     0420                     l835:
  8042     0420  0008               	return
  8043     0421                     __end_of_ADC2Celsius:
  8044                           
  8045                           	psect	text19
  8046     02F4                     __ptext19:	
  8047 ;; *************** function _SSPA_getPOut *****************
  8048 ;; Defined at:
  8049 ;;		line 135 in file "sspa.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  band            1    wreg     enum E40
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  band            1   42[BANK0 ] enum E40
  8054 ;;  adc_value       2   40[BANK0 ] unsigned short 
  8055 ;;  channel         1    0        enum E9257
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8065 ;;      Params:         0       0       0       0       0       0       0       0
  8066 ;;      Locals:         0       3       0       0       0       0       0       0
  8067 ;;      Temps:          0       2       0       0       0       0       0       0
  8068 ;;      Totals:         0       5       0       0       0       0       0       0
  8069 ;;Total ram usage:        5 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 9
  8072 ;; This function calls:
  8073 ;;		_ADC2Amp
  8074 ;;		_ADC2dBm
  8075 ;;		_getADCValue
  8076 ;; This function is called by:
  8077 ;;		_ProcessMsg
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081     02F4                     _SSPA_getPOut:	
  8082                           ;psect for function _SSPA_getPOut
  8083                           
  8084                           
  8085                           ;incstack = 0
  8086                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8087                           ;SSPA_getPOut@band stored from wreg
  8088     02F4  0020               	movlb	0	; select bank0
  8089     02F5  00CA               	movwf	SSPA_getPOut@band
  8090     02F6                     l3800:
  8091                           
  8092                           ;sspa.c: 136:     adc_channel_t channel;;sspa.c: 137:     adc_result_t adc_value;;sspa.c
      +                          : 139:     switch (band) {
  8093     02F6  2B6A               	goto	l3822
  8094     02F7                     l875:	
  8095                           ;sspa.c: 140:         case ANTENNABAND_KA:
  8096                           
  8097     02F7                     l3802:
  8098                           
  8099                           ;sspa.c: 142:             adc_value = getADCValue(channel);
  8100     02F7  3001               	movlw	1
  8101     02F8  3186  26A3  3182   	fcall	_getADCValue
  8102     02FB  0020               	movlb	0	; select bank0
  8103     02FC  0821               	movf	?_getADCValue+1,w
  8104     02FD  00C9               	movwf	SSPA_getPOut@adc_value+1
  8105     02FE  0820               	movf	?_getADCValue,w
  8106     02FF  00C8               	movwf	SSPA_getPOut@adc_value
  8107     0300                     l3804:
  8108                           
  8109                           ;sspa.c: 143:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8110     0300  0849               	movf	SSPA_getPOut@adc_value+1,w
  8111     0301  00BB               	movwf	ADC2Amp@v+1
  8112     0302  0848               	movf	SSPA_getPOut@adc_value,w
  8113     0303  00BA               	movwf	ADC2Amp@v
  8114     0304  3184  24F4  3182   	fcall	_ADC2Amp
  8115     0307  0020               	movlb	0	; select bank0
  8116     0308  084A               	movf	SSPA_getPOut@band,w
  8117     0309  00C6               	movwf	??_SSPA_getPOut
  8118     030A  3002               	movlw	2
  8119     030B                     u1865:
  8120     030B  35C6               	lslf	??_SSPA_getPOut,f
  8121     030C  3EFF               	addlw	-1
  8122     030D  1D03               	skipz
  8123     030E  2B0B               	goto	u1865
  8124     030F  3546               	lslf	??_SSPA_getPOut,w
  8125     0310  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8126     0311  0086               	movwf	6
  8127     0312  0187               	clrf	7
  8128     0313  083A               	movf	?_ADC2Amp,w
  8129     0314  3FC0               	movwi [0]fsr1
  8130     0315  083B               	movf	?_ADC2Amp+1,w
  8131     0316  3FC1               	movwi [1]fsr1
  8132     0317  083C               	movf	?_ADC2Amp+2,w
  8133     0318  3FC2               	movwi [2]fsr1
  8134     0319  083D               	movf	?_ADC2Amp+3,w
  8135     031A  3FC3               	movwi [3]fsr1
  8136     031B                     l3806:
  8137                           
  8138                           ;sspa.c: 144:             sspas[band].m_bPOut = 0xFF;
  8139     031B  084A               	movf	SSPA_getPOut@band,w
  8140     031C  00C6               	movwf	??_SSPA_getPOut
  8141     031D  3002               	movlw	2
  8142     031E                     u1875:
  8143     031E  35C6               	lslf	??_SSPA_getPOut,f
  8144     031F  3EFF               	addlw	-1
  8145     0320  1D03               	skipz
  8146     0321  2B1E               	goto	u1875
  8147     0322  3546               	lslf	??_SSPA_getPOut,w
  8148     0323  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8149     0324  0086               	movwf	6
  8150     0325  0187               	clrf	7
  8151     0326  30FF               	movlw	255
  8152     0327  0081               	movwf	1
  8153                           
  8154                           ;sspa.c: 145:             break;
  8155     0328  2B7D               	goto	l880
  8156     0329                     l3808:
  8157     0329                     l3810:
  8158                           
  8159                           ;sspa.c: 149:             adc_value = getADCValue(channel);
  8160     0329  300A               	movlw	10
  8161     032A  3186  26A3  3182   	fcall	_getADCValue
  8162     032D  0020               	movlb	0	; select bank0
  8163     032E  0821               	movf	?_getADCValue+1,w
  8164     032F  00C9               	movwf	SSPA_getPOut@adc_value+1
  8165     0330  0820               	movf	?_getADCValue,w
  8166     0331  00C8               	movwf	SSPA_getPOut@adc_value
  8167     0332                     l3812:
  8168                           
  8169                           ;sspa.c: 150:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8170     0332  0849               	movf	SSPA_getPOut@adc_value+1,w
  8171     0333  00BB               	movwf	ADC2Amp@v+1
  8172     0334  0848               	movf	SSPA_getPOut@adc_value,w
  8173     0335  00BA               	movwf	ADC2Amp@v
  8174     0336  3184  24F4  3182   	fcall	_ADC2Amp
  8175     0339  0020               	movlb	0	; select bank0
  8176     033A  084A               	movf	SSPA_getPOut@band,w
  8177     033B  00C6               	movwf	??_SSPA_getPOut
  8178     033C  3002               	movlw	2
  8179     033D                     u1885:
  8180     033D  35C6               	lslf	??_SSPA_getPOut,f
  8181     033E  3EFF               	addlw	-1
  8182     033F  1D03               	skipz
  8183     0340  2B3D               	goto	u1885
  8184     0341  3546               	lslf	??_SSPA_getPOut,w
  8185     0342  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8186     0343  0086               	movwf	6
  8187     0344  0187               	clrf	7
  8188     0345  083A               	movf	?_ADC2Amp,w
  8189     0346  3FC0               	movwi [0]fsr1
  8190     0347  083B               	movf	?_ADC2Amp+1,w
  8191     0348  3FC1               	movwi [1]fsr1
  8192     0349  083C               	movf	?_ADC2Amp+2,w
  8193     034A  3FC2               	movwi [2]fsr1
  8194     034B  083D               	movf	?_ADC2Amp+3,w
  8195     034C  3FC3               	movwi [3]fsr1
  8196     034D                     l3814:
  8197     034D                     l3816:
  8198                           
  8199                           ;sspa.c: 152:             adc_value = getADCValue(channel);
  8200     034D  3000               	movlw	0
  8201     034E  3186  26A3  3182   	fcall	_getADCValue
  8202     0351  0020               	movlb	0	; select bank0
  8203     0352  0821               	movf	?_getADCValue+1,w
  8204     0353  00C9               	movwf	SSPA_getPOut@adc_value+1
  8205     0354  0820               	movf	?_getADCValue,w
  8206     0355  00C8               	movwf	SSPA_getPOut@adc_value
  8207     0356                     l3818:
  8208                           
  8209                           ;sspa.c: 153:             sspas[band].m_bPOut = (uint8_t) ADC2dBm(adc_value);
  8210     0356  084A               	movf	SSPA_getPOut@band,w
  8211     0357  00C6               	movwf	??_SSPA_getPOut
  8212     0358  3002               	movlw	2
  8213     0359                     u1895:
  8214     0359  35C6               	lslf	??_SSPA_getPOut,f
  8215     035A  3EFF               	addlw	-1
  8216     035B  1D03               	skipz
  8217     035C  2B59               	goto	u1895
  8218     035D  3546               	lslf	??_SSPA_getPOut,w
  8219     035E  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8220     035F  0086               	movwf	6
  8221     0360  0187               	clrf	7
  8222     0361  0849               	movf	SSPA_getPOut@adc_value+1,w
  8223     0362  00BB               	movwf	ADC2dBm@v+1
  8224     0363  0848               	movf	SSPA_getPOut@adc_value,w
  8225     0364  00BA               	movwf	ADC2dBm@v
  8226     0365  3185  25EF  3182   	fcall	_ADC2dBm
  8227     0368  0081               	movwf	1
  8228                           
  8229                           ;sspa.c: 154:             break;
  8230     0369  2B7D               	goto	l880
  8231     036A                     l3822:
  8232     036A  084A               	movf	SSPA_getPOut@band,w
  8233     036B  00C6               	movwf	??_SSPA_getPOut
  8234     036C  01C7               	clrf	??_SSPA_getPOut+1
  8235                           
  8236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8237                           ; Switch size 1, requested type "simple"
  8238                           ; Number of cases is 1, Range of values is 0 to 0
  8239                           ; switch strategies available:
  8240                           ; Name         Instructions Cycles
  8241                           ; simple_byte            4     3 (average)
  8242                           ; direct_byte            8     6 (fixed)
  8243                           ; jumptable            260     6 (fixed)
  8244                           ;	Chosen strategy is simple_byte
  8245     036D  0847               	movf	??_SSPA_getPOut+1,w
  8246     036E  3A00               	xorlw	0	; case 0
  8247     036F  1903               	skipnz
  8248     0370  2B72               	goto	l4218
  8249     0371  2B7D               	goto	l880
  8250     0372                     l4218:
  8251                           
  8252                           ; Switch size 1, requested type "simple"
  8253                           ; Number of cases is 3, Range of values is 0 to 2
  8254                           ; switch strategies available:
  8255                           ; Name         Instructions Cycles
  8256                           ; simple_byte           10     6 (average)
  8257                           ; direct_byte           12     6 (fixed)
  8258                           ; jumptable            260     6 (fixed)
  8259                           ;	Chosen strategy is simple_byte
  8260     0372  0846               	movf	??_SSPA_getPOut,w
  8261     0373  3A00               	xorlw	0	; case 0
  8262     0374  1903               	skipnz
  8263     0375  2B7D               	goto	l880
  8264     0376  3A01               	xorlw	1	; case 1
  8265     0377  1903               	skipnz
  8266     0378  2AF7               	goto	l875
  8267     0379  3A03               	xorlw	3	; case 2
  8268     037A  1903               	skipnz
  8269     037B  2B29               	goto	l3808
  8270     037C  2B7D               	goto	l880
  8271     037D                     l880:
  8272     037D  0008               	return
  8273     037E                     __end_of_SSPA_getPOut:
  8274                           
  8275                           	psect	text20
  8276     06A3                     __ptext20:	
  8277 ;; *************** function _getADCValue *****************
  8278 ;; Defined at:
  8279 ;;		line 37 in file "sspa.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  channel         1    wreg     enum E9257
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  channel         1    4[BANK0 ] enum E9257
  8284 ;;  i               1    9[BANK0 ] unsigned char 
  8285 ;;  sum             2    7[BANK0 ] unsigned short 
  8286 ;;  aux             2    5[BANK0 ] unsigned short 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  2    0[BANK0 ] unsigned short 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0, pclath, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8296 ;;      Params:         0       2       0       0       0       0       0       0
  8297 ;;      Locals:         0       6       0       0       0       0       0       0
  8298 ;;      Temps:          0       2       0       0       0       0       0       0
  8299 ;;      Totals:         0      10       0       0       0       0       0       0
  8300 ;;Total ram usage:       10 bytes
  8301 ;; Hardware stack levels used: 1
  8302 ;; Hardware stack levels required when called: 8
  8303 ;; This function calls:
  8304 ;;		_ADC_GetConversionResult
  8305 ;;		_ADC_IsConversionDone
  8306 ;;		_ADC_SelectChannel
  8307 ;;		_ADC_StartConversion
  8308 ;; This function is called by:
  8309 ;;		_SSPA_getTemp
  8310 ;;		_SSPA_getPOut
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314     06A3                     _getADCValue:	
  8315                           ;psect for function _getADCValue
  8316                           
  8317                           
  8318                           ;incstack = 0
  8319                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8320                           ;getADCValue@channel stored from wreg
  8321     06A3  0020               	movlb	0	; select bank0
  8322     06A4  00A4               	movwf	getADCValue@channel
  8323     06A5                     l3728:
  8324                           
  8325                           ;sspa.c: 38:     adc_result_t sum = 0;
  8326     06A5  01A7               	clrf	getADCValue@sum
  8327     06A6  01A8               	clrf	getADCValue@sum+1
  8328     06A7                     l3730:
  8329                           
  8330                           ;sspa.c: 40:     ADC_StartConversion();
  8331     06A7  318C  24FC  3186   	fcall	_ADC_StartConversion
  8332     06AA                     l3732:
  8333                           
  8334                           ;sspa.c: 41:     ADC_SelectChannel(channel);
  8335     06AA  0020               	movlb	0	; select bank0
  8336     06AB  0824               	movf	getADCValue@channel,w
  8337     06AC  318D  25D3  3186   	fcall	_ADC_SelectChannel
  8338     06AF                     l3734:
  8339                           
  8340                           ;sspa.c: 43:     for (uint8_t i = 0; i < 32; i++)
  8341     06AF  0020               	movlb	0	; select bank0
  8342     06B0  01A9               	clrf	getADCValue@i
  8343     06B1                     l3738:
  8344                           
  8345                           ;sspa.c: 44:         if (ADC_IsConversionDone())
  8346     06B1  318D  258C  3186   	fcall	_ADC_IsConversionDone
  8347     06B4  3A00               	xorlw	0
  8348     06B5  1903               	skipnz
  8349     06B6  2EB8               	goto	u1821
  8350     06B7  2EB9               	goto	u1820
  8351     06B8                     u1821:
  8352     06B8  2EC1               	goto	l3742
  8353     06B9                     u1820:
  8354     06B9                     l3740:
  8355                           
  8356                           ;sspa.c: 45:             sum += ADC_GetConversionResult();
  8357     06B9  318D  2551  3186   	fcall	_ADC_GetConversionResult
  8358     06BC  0874               	movf	?_ADC_GetConversionResult,w
  8359     06BD  0020               	movlb	0	; select bank0
  8360     06BE  07A7               	addwf	getADCValue@sum,f
  8361     06BF  0875               	movf	?_ADC_GetConversionResult+1,w
  8362     06C0  3DA8               	addwfc	getADCValue@sum+1,f
  8363     06C1                     l3742:
  8364     06C1  3001               	movlw	1
  8365     06C2  0020               	movlb	0	; select bank0
  8366     06C3  00A2               	movwf	??_getADCValue
  8367     06C4  0822               	movf	??_getADCValue,w
  8368     06C5  07A9               	addwf	getADCValue@i,f
  8369     06C6                     l3744:
  8370     06C6  3020               	movlw	32
  8371     06C7  0229               	subwf	getADCValue@i,w
  8372     06C8  1C03               	skipc
  8373     06C9  2ECB               	goto	u1831
  8374     06CA  2ECC               	goto	u1830
  8375     06CB                     u1831:
  8376     06CB  2EB1               	goto	l3738
  8377     06CC                     u1830:
  8378     06CC                     l3746:
  8379                           
  8380                           ;sspa.c: 48:     adc_result_t aux;;sspa.c: 50:     aux = sum >> 5;
  8381     06CC  0828               	movf	getADCValue@sum+1,w
  8382     06CD  00A3               	movwf	??_getADCValue+1
  8383     06CE  0827               	movf	getADCValue@sum,w
  8384     06CF  00A2               	movwf	??_getADCValue
  8385     06D0  3005               	movlw	5
  8386     06D1                     u1845:
  8387     06D1  36A3               	lsrf	??_getADCValue+1,f
  8388     06D2  0CA2               	rrf	??_getADCValue,f
  8389     06D3  0B89               	decfsz	9,f
  8390     06D4  2ED1               	goto	u1845
  8391     06D5  0822               	movf	??_getADCValue,w
  8392     06D6  00A5               	movwf	getADCValue@aux
  8393     06D7  0823               	movf	??_getADCValue+1,w
  8394     06D8  00A6               	movwf	getADCValue@aux+1
  8395     06D9                     l3748:
  8396                           
  8397                           ;sspa.c: 52:     return aux;
  8398     06D9  0826               	movf	getADCValue@aux+1,w
  8399     06DA  00A1               	movwf	?_getADCValue+1
  8400     06DB  0825               	movf	getADCValue@aux,w
  8401     06DC  00A0               	movwf	?_getADCValue
  8402     06DD                     l832:
  8403     06DD  0008               	return
  8404     06DE                     __end_of_getADCValue:
  8405                           
  8406                           	psect	text21
  8407     0CFC                     __ptext21:	
  8408 ;; *************** function _ADC_StartConversion *****************
  8409 ;; Defined at:
  8410 ;;		line 88 in file "mcc_generated_files/adc/src/adc.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		None
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8424 ;;      Params:         0       0       0       0       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0       0
  8427 ;;      Totals:         0       0       0       0       0       0       0       0
  8428 ;;Total ram usage:        0 bytes
  8429 ;; Hardware stack levels used: 1
  8430 ;; Hardware stack levels required when called: 7
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_getADCValue
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438     0CFC                     _ADC_StartConversion:	
  8439                           ;psect for function _ADC_StartConversion
  8440                           
  8441     0CFC                     l3540:	
  8442                           ;incstack = 0
  8443                           ; Regs used in _ADC_StartConversion: []
  8444                           
  8445                           
  8446                           ;mcc_generated_files/adc/src/adc.c: 91:     ADCON0bits.GO_nDONE = 1;
  8447     0CFC  0021               	movlb	1	; select bank1
  8448     0CFD  149D               	bsf	29,1	;volatile
  8449     0CFE                     l33:
  8450     0CFE  0008               	return
  8451     0CFF                     __end_of_ADC_StartConversion:
  8452                           
  8453                           	psect	text22
  8454     0DD3                     __ptext22:	
  8455 ;; *************** function _ADC_SelectChannel *****************
  8456 ;; Defined at:
  8457 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  channel         1    wreg     enum E9234
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  channel         1    5[COMMON] enum E9234
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		wreg, status,2, status,0
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8471 ;;      Params:         0       0       0       0       0       0       0       0
  8472 ;;      Locals:         1       0       0       0       0       0       0       0
  8473 ;;      Temps:          1       0       0       0       0       0       0       0
  8474 ;;      Totals:         2       0       0       0       0       0       0       0
  8475 ;;Total ram usage:        2 bytes
  8476 ;; Hardware stack levels used: 1
  8477 ;; Hardware stack levels required when called: 7
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_getADCValue
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485     0DD3                     _ADC_SelectChannel:	
  8486                           ;psect for function _ADC_SelectChannel
  8487                           
  8488                           
  8489                           ;incstack = 0
  8490                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8491                           ;ADC_SelectChannel@channel stored from wreg
  8492     0DD3  00F5               	movwf	ADC_SelectChannel@channel
  8493     0DD4                     l3538:
  8494                           
  8495                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
  8496     0DD4  0875               	movf	ADC_SelectChannel@channel,w
  8497     0DD5  00F4               	movwf	??_ADC_SelectChannel
  8498     0DD6  0DF4               	rlf	??_ADC_SelectChannel,f
  8499     0DD7  0DF4               	rlf	??_ADC_SelectChannel,f
  8500     0DD8  0021               	movlb	1	; select bank1
  8501     0DD9  081D               	movf	29,w	;volatile
  8502     0DDA  0674               	xorwf	??_ADC_SelectChannel,w
  8503     0DDB  3983               	andlw	-125
  8504     0DDC  0674               	xorwf	??_ADC_SelectChannel,w
  8505     0DDD  009D               	movwf	29	;volatile
  8506     0DDE                     l30:
  8507     0DDE  0008               	return
  8508     0DDF                     __end_of_ADC_SelectChannel:
  8509                           
  8510                           	psect	text23
  8511     0D8C                     __ptext23:	
  8512 ;; *************** function _ADC_IsConversionDone *****************
  8513 ;; Defined at:
  8514 ;;		line 94 in file "mcc_generated_files/adc/src/adc.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;		None
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      _Bool 
  8521 ;; Registers used:
  8522 ;;		wreg, status,0
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8528 ;;      Params:         0       0       0       0       0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0
  8531 ;;      Totals:         0       0       0       0       0       0       0       0
  8532 ;;Total ram usage:        0 bytes
  8533 ;; Hardware stack levels used: 1
  8534 ;; Hardware stack levels required when called: 7
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		_getADCValue
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542     0D8C                     _ADC_IsConversionDone:	
  8543                           ;psect for function _ADC_IsConversionDone
  8544                           
  8545     0D8C                     l3542:	
  8546                           ;incstack = 0
  8547                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  8548                           
  8549                           
  8550                           ;mcc_generated_files/adc/src/adc.c: 97:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8551     0D8C  1003               	clrc
  8552     0D8D  0021               	movlb	1	; select bank1
  8553     0D8E  1C9D               	btfss	29,1	;volatile
  8554     0D8F  1403               	setc
  8555     0D90  3000               	movlw	0
  8556     0D91  3D09               	addwfc	9,w
  8557     0D92                     l36:
  8558     0D92  0008               	return
  8559     0D93                     __end_of_ADC_IsConversionDone:
  8560                           
  8561                           	psect	text24
  8562     0D51                     __ptext24:	
  8563 ;; *************** function _ADC_GetConversionResult *****************
  8564 ;; Defined at:
  8565 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;		None
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  2    4[COMMON] unsigned short 
  8572 ;; Registers used:
  8573 ;;		wreg
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8579 ;;      Params:         2       0       0       0       0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0
  8582 ;;      Totals:         2       0       0       0       0       0       0       0
  8583 ;;Total ram usage:        2 bytes
  8584 ;; Hardware stack levels used: 1
  8585 ;; Hardware stack levels required when called: 7
  8586 ;; This function calls:
  8587 ;;		Nothing
  8588 ;; This function is called by:
  8589 ;;		_getADCValue
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593     0D51                     _ADC_GetConversionResult:	
  8594                           ;psect for function _ADC_GetConversionResult
  8595                           
  8596     0D51                     l3546:	
  8597                           ;incstack = 0
  8598                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8599                           
  8600                           
  8601                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
  8602     0D51  0021               	movlb	1	; select bank1
  8603     0D52  081C               	movf	28,w	;volatile
  8604     0D53  00F5               	movwf	?_ADC_GetConversionResult+1
  8605     0D54  081B               	movf	27,w	;volatile
  8606     0D55  00F4               	movwf	?_ADC_GetConversionResult
  8607     0D56                     l39:
  8608     0D56  0008               	return
  8609     0D57                     __end_of_ADC_GetConversionResult:
  8610                           
  8611                           	psect	text25
  8612     05EF                     __ptext25:	
  8613 ;; *************** function _ADC2dBm *****************
  8614 ;; Defined at:
  8615 ;;		line 69 in file "sspa.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  v               2   26[BANK0 ] unsigned short 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  result          4   32[BANK0 ] long 
  8620 ;;  value           4   28[BANK0 ] long 
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      unsigned char 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8630 ;;      Params:         0       2       0       0       0       0       0       0
  8631 ;;      Locals:         0       8       0       0       0       0       0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0       0
  8633 ;;      Totals:         0      10       0       0       0       0       0       0
  8634 ;;Total ram usage:       10 bytes
  8635 ;; Hardware stack levels used: 1
  8636 ;; Hardware stack levels required when called: 8
  8637 ;; This function calls:
  8638 ;;		___aldiv
  8639 ;;		___lmul
  8640 ;; This function is called by:
  8641 ;;		_SSPA_getPOut
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645     05EF                     _ADC2dBm:	
  8646                           ;psect for function _ADC2dBm
  8647                           
  8648     05EF                     l3768:	
  8649                           ;incstack = 0
  8650                           ; Regs used in _ADC2dBm: [wreg+status,2+status,0+pclath+cstack]
  8651                           
  8652                           
  8653                           ;sspa.c: 70:     int32_t value = (int32_t) v;
  8654     05EF  0020               	movlb	0	; select bank0
  8655     05F0  083A               	movf	ADC2dBm@v,w
  8656     05F1  00BC               	movwf	ADC2dBm@value
  8657     05F2  083B               	movf	ADC2dBm@v+1,w
  8658     05F3  00BD               	movwf	ADC2dBm@value+1
  8659     05F4  01BE               	clrf	ADC2dBm@value+2
  8660     05F5  01BF               	clrf	ADC2dBm@value+3
  8661     05F6                     l3770:
  8662                           
  8663                           ;sspa.c: 71:     int32_t result = (uint16_t)(34) + (value * (uint16_t)(14319)) / (uint16
      +                          _t)(1024000);
  8664     05F6  3000               	movlw	0
  8665     05F7  00AF               	movwf	___aldiv@divisor+3
  8666     05F8  3000               	movlw	0
  8667     05F9  00AE               	movwf	___aldiv@divisor+2
  8668     05FA  30A0               	movlw	160
  8669     05FB  00AD               	movwf	___aldiv@divisor+1
  8670     05FC  3000               	movlw	0
  8671     05FD  00AC               	movwf	___aldiv@divisor
  8672     05FE  083F               	movf	ADC2dBm@value+3,w
  8673     05FF  00A3               	movwf	___lmul@multiplier+3
  8674     0600  083E               	movf	ADC2dBm@value+2,w
  8675     0601  00A2               	movwf	___lmul@multiplier+2
  8676     0602  083D               	movf	ADC2dBm@value+1,w
  8677     0603  00A1               	movwf	___lmul@multiplier+1
  8678     0604  083C               	movf	ADC2dBm@value,w
  8679     0605  00A0               	movwf	___lmul@multiplier
  8680     0606  3000               	movlw	0
  8681     0607  00A7               	movwf	___lmul@multiplicand+3
  8682     0608  3000               	movlw	0
  8683     0609  00A6               	movwf	___lmul@multiplicand+2
  8684     060A  3037               	movlw	55
  8685     060B  00A5               	movwf	___lmul@multiplicand+1
  8686     060C  30EF               	movlw	239
  8687     060D  00A4               	movwf	___lmul@multiplicand
  8688     060E  3187  2717  3185   	fcall	___lmul
  8689     0611  0020               	movlb	0	; select bank0
  8690     0612  0823               	movf	?___lmul+3,w
  8691     0613  00B3               	movwf	___aldiv@dividend+3
  8692     0614  0822               	movf	?___lmul+2,w
  8693     0615  00B2               	movwf	___aldiv@dividend+2
  8694     0616  0821               	movf	?___lmul+1,w
  8695     0617  00B1               	movwf	___aldiv@dividend+1
  8696     0618  0820               	movf	?___lmul,w
  8697     0619  00B0               	movwf	___aldiv@dividend
  8698     061A  3182  2264  3185   	fcall	___aldiv
  8699     061D  3022               	movlw	34
  8700     061E  0020               	movlb	0	; select bank0
  8701     061F  072C               	addwf	?___aldiv,w
  8702     0620  00C0               	movwf	ADC2dBm@result
  8703     0621  3000               	movlw	0
  8704     0622  3D2D               	addwfc	?___aldiv+1,w
  8705     0623  00C1               	movwf	ADC2dBm@result+1
  8706     0624  3000               	movlw	0
  8707     0625  3D2E               	addwfc	?___aldiv+2,w
  8708     0626  00C2               	movwf	ADC2dBm@result+2
  8709     0627  3000               	movlw	0
  8710     0628  3D2F               	addwfc	?___aldiv+3,w
  8711     0629  00C3               	movwf	ADC2dBm@result+3
  8712     062A                     l3772:
  8713                           
  8714                           ;sspa.c: 73:     return (uint8_t) result;
  8715     062A  0840               	movf	ADC2dBm@result,w
  8716     062B                     l841:
  8717     062B  0008               	return
  8718     062C                     __end_of_ADC2dBm:
  8719                           
  8720                           	psect	text26
  8721     04F4                     __ptext26:	
  8722 ;; *************** function _ADC2Amp *****************
  8723 ;; Defined at:
  8724 ;;		line 62 in file "sspa.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;  v               2   26[BANK0 ] unsigned short 
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;  result          4   34[BANK0 ] long 
  8729 ;;  value           4   30[BANK0 ] long 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  4   26[BANK0 ] unsigned long 
  8732 ;; Registers used:
  8733 ;;		wreg, status,2, status,0, pclath, cstack
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8739 ;;      Params:         0       4       0       0       0       0       0       0
  8740 ;;      Locals:         0       8       0       0       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0       0       0       0
  8742 ;;      Totals:         0      12       0       0       0       0       0       0
  8743 ;;Total ram usage:       12 bytes
  8744 ;; Hardware stack levels used: 1
  8745 ;; Hardware stack levels required when called: 8
  8746 ;; This function calls:
  8747 ;;		___aldiv
  8748 ;;		___lmul
  8749 ;; This function is called by:
  8750 ;;		_SSPA_getPOut
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754     04F4                     _ADC2Amp:	
  8755                           ;psect for function _ADC2Amp
  8756                           
  8757     04F4                     l3760:	
  8758                           ;incstack = 0
  8759                           ; Regs used in _ADC2Amp: [wreg+status,2+status,0+pclath+cstack]
  8760                           
  8761                           
  8762                           ;sspa.c: 63:     int32_t value = (int32_t) v;
  8763     04F4  0020               	movlb	0	; select bank0
  8764     04F5  083A               	movf	ADC2Amp@v,w
  8765     04F6  00BE               	movwf	ADC2Amp@value
  8766     04F7  083B               	movf	ADC2Amp@v+1,w
  8767     04F8  00BF               	movwf	ADC2Amp@value+1
  8768     04F9  01C0               	clrf	ADC2Amp@value+2
  8769     04FA  01C1               	clrf	ADC2Amp@value+3
  8770     04FB                     l3762:
  8771                           
  8772                           ;sspa.c: 64:     int32_t result = (uint16_t)(0) + (value * (uint16_t)(430)) / (uint16_t)
      +                          (10240);
  8773     04FB  3000               	movlw	0
  8774     04FC  00AF               	movwf	___aldiv@divisor+3
  8775     04FD  3000               	movlw	0
  8776     04FE  00AE               	movwf	___aldiv@divisor+2
  8777     04FF  3028               	movlw	40
  8778     0500  00AD               	movwf	___aldiv@divisor+1
  8779     0501  3000               	movlw	0
  8780     0502  00AC               	movwf	___aldiv@divisor
  8781     0503  0841               	movf	ADC2Amp@value+3,w
  8782     0504  00A3               	movwf	___lmul@multiplier+3
  8783     0505  0840               	movf	ADC2Amp@value+2,w
  8784     0506  00A2               	movwf	___lmul@multiplier+2
  8785     0507  083F               	movf	ADC2Amp@value+1,w
  8786     0508  00A1               	movwf	___lmul@multiplier+1
  8787     0509  083E               	movf	ADC2Amp@value,w
  8788     050A  00A0               	movwf	___lmul@multiplier
  8789     050B  3000               	movlw	0
  8790     050C  00A7               	movwf	___lmul@multiplicand+3
  8791     050D  3000               	movlw	0
  8792     050E  00A6               	movwf	___lmul@multiplicand+2
  8793     050F  3001               	movlw	1
  8794     0510  00A5               	movwf	___lmul@multiplicand+1
  8795     0511  30AE               	movlw	174
  8796     0512  00A4               	movwf	___lmul@multiplicand
  8797     0513  3187  2717  3184   	fcall	___lmul
  8798     0516  0020               	movlb	0	; select bank0
  8799     0517  0823               	movf	?___lmul+3,w
  8800     0518  00B3               	movwf	___aldiv@dividend+3
  8801     0519  0822               	movf	?___lmul+2,w
  8802     051A  00B2               	movwf	___aldiv@dividend+2
  8803     051B  0821               	movf	?___lmul+1,w
  8804     051C  00B1               	movwf	___aldiv@dividend+1
  8805     051D  0820               	movf	?___lmul,w
  8806     051E  00B0               	movwf	___aldiv@dividend
  8807     051F  3182  2264  3184   	fcall	___aldiv
  8808     0522  0020               	movlb	0	; select bank0
  8809     0523  082F               	movf	?___aldiv+3,w
  8810     0524  00C5               	movwf	ADC2Amp@result+3
  8811     0525  082E               	movf	?___aldiv+2,w
  8812     0526  00C4               	movwf	ADC2Amp@result+2
  8813     0527  082D               	movf	?___aldiv+1,w
  8814     0528  00C3               	movwf	ADC2Amp@result+1
  8815     0529  082C               	movf	?___aldiv,w
  8816     052A  00C2               	movwf	ADC2Amp@result
  8817     052B                     l3764:
  8818                           
  8819                           ;sspa.c: 66:     return (uint32_t) result;
  8820     052B  0845               	movf	ADC2Amp@result+3,w
  8821     052C  00BD               	movwf	?_ADC2Amp+3
  8822     052D  0844               	movf	ADC2Amp@result+2,w
  8823     052E  00BC               	movwf	?_ADC2Amp+2
  8824     052F  0843               	movf	ADC2Amp@result+1,w
  8825     0530  00BB               	movwf	?_ADC2Amp+1
  8826     0531  0842               	movf	ADC2Amp@result,w
  8827     0532  00BA               	movwf	?_ADC2Amp
  8828     0533                     l838:
  8829     0533  0008               	return
  8830     0534                     __end_of_ADC2Amp:
  8831                           
  8832                           	psect	text27
  8833     0717                     __ptext27:	
  8834 ;; *************** function ___lmul *****************
  8835 ;; Defined at:
  8836 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8839 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  product         4    8[BANK0 ] unsigned long 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  4    0[BANK0 ] unsigned long 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2, status,0
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8851 ;;      Params:         0       8       0       0       0       0       0       0
  8852 ;;      Locals:         0       4       0       0       0       0       0       0
  8853 ;;      Temps:          0       0       0       0       0       0       0       0
  8854 ;;      Totals:         0      12       0       0       0       0       0       0
  8855 ;;Total ram usage:       12 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 7
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_ADC2Celsius
  8862 ;;		_ADC2Amp
  8863 ;;		_ADC2dBm
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867     0717                     ___lmul:	
  8868                           ;psect for function ___lmul
  8869                           
  8870     0717                     l3576:	
  8871                           ;incstack = 0
  8872                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8873                           
  8874     0717  3000               	movlw	0
  8875     0718  0020               	movlb	0	; select bank0
  8876     0719  00AB               	movwf	___lmul@product+3
  8877     071A  3000               	movlw	0
  8878     071B  00AA               	movwf	___lmul@product+2
  8879     071C  3000               	movlw	0
  8880     071D  00A9               	movwf	___lmul@product+1
  8881     071E  3000               	movlw	0
  8882     071F  00A8               	movwf	___lmul@product
  8883     0720                     l3578:
  8884     0720  1C20               	btfss	___lmul@multiplier,0
  8885     0721  2F23               	goto	u1581
  8886     0722  2F24               	goto	u1580
  8887     0723                     u1581:
  8888     0723  2F2C               	goto	l3582
  8889     0724                     u1580:
  8890     0724                     l3580:
  8891     0724  0824               	movf	___lmul@multiplicand,w
  8892     0725  07A8               	addwf	___lmul@product,f
  8893     0726  0825               	movf	___lmul@multiplicand+1,w
  8894     0727  3DA9               	addwfc	___lmul@product+1,f
  8895     0728  0826               	movf	___lmul@multiplicand+2,w
  8896     0729  3DAA               	addwfc	___lmul@product+2,f
  8897     072A  0827               	movf	___lmul@multiplicand+3,w
  8898     072B  3DAB               	addwfc	___lmul@product+3,f
  8899     072C                     l3582:
  8900     072C  3001               	movlw	1
  8901     072D                     u1595:
  8902     072D  35A4               	lslf	___lmul@multiplicand,f
  8903     072E  0DA5               	rlf	___lmul@multiplicand+1,f
  8904     072F  0DA6               	rlf	___lmul@multiplicand+2,f
  8905     0730  0DA7               	rlf	___lmul@multiplicand+3,f
  8906     0731  0B89               	decfsz	9,f
  8907     0732  2F2D               	goto	u1595
  8908     0733                     l3584:
  8909     0733  3001               	movlw	1
  8910     0734                     u1605:
  8911     0734  36A3               	lsrf	___lmul@multiplier+3,f
  8912     0735  0CA2               	rrf	___lmul@multiplier+2,f
  8913     0736  0CA1               	rrf	___lmul@multiplier+1,f
  8914     0737  0CA0               	rrf	___lmul@multiplier,f
  8915     0738  0B89               	decfsz	9,f
  8916     0739  2F34               	goto	u1605
  8917     073A  0823               	movf	___lmul@multiplier+3,w
  8918     073B  0422               	iorwf	___lmul@multiplier+2,w
  8919     073C  0421               	iorwf	___lmul@multiplier+1,w
  8920     073D  0420               	iorwf	___lmul@multiplier,w
  8921     073E  1D03               	skipz
  8922     073F  2F41               	goto	u1611
  8923     0740  2F42               	goto	u1610
  8924     0741                     u1611:
  8925     0741  2F20               	goto	l3578
  8926     0742                     u1610:
  8927     0742                     l3586:
  8928     0742  082B               	movf	___lmul@product+3,w
  8929     0743  00A3               	movwf	?___lmul+3
  8930     0744  082A               	movf	___lmul@product+2,w
  8931     0745  00A2               	movwf	?___lmul+2
  8932     0746  0829               	movf	___lmul@product+1,w
  8933     0747  00A1               	movwf	?___lmul+1
  8934     0748  0828               	movf	___lmul@product,w
  8935     0749  00A0               	movwf	?___lmul
  8936     074A                     l962:
  8937     074A  0008               	return
  8938     074B                     __end_of___lmul:
  8939                           
  8940                           	psect	text28
  8941     0264                     __ptext28:	
  8942 ;; *************** function ___aldiv *****************
  8943 ;; Defined at:
  8944 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  divisor         4   12[BANK0 ] long 
  8947 ;;  dividend        4   16[BANK0 ] long 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  quotient        4   22[BANK0 ] long 
  8950 ;;  sign            1   21[BANK0 ] unsigned char 
  8951 ;;  counter         1   20[BANK0 ] unsigned char 
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  4   12[BANK0 ] long 
  8954 ;; Registers used:
  8955 ;;		wreg, status,2, status,0
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8961 ;;      Params:         0       8       0       0       0       0       0       0
  8962 ;;      Locals:         0       6       0       0       0       0       0       0
  8963 ;;      Temps:          1       0       0       0       0       0       0       0
  8964 ;;      Totals:         1      14       0       0       0       0       0       0
  8965 ;;Total ram usage:       15 bytes
  8966 ;; Hardware stack levels used: 1
  8967 ;; Hardware stack levels required when called: 7
  8968 ;; This function calls:
  8969 ;;		Nothing
  8970 ;; This function is called by:
  8971 ;;		_ADC2Celsius
  8972 ;;		_ADC2Amp
  8973 ;;		_ADC2dBm
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977     0264                     ___aldiv:	
  8978                           ;psect for function ___aldiv
  8979                           
  8980     0264                     l3590:	
  8981                           ;incstack = 0
  8982                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8983                           
  8984     0264  0020               	movlb	0	; select bank0
  8985     0265  01B5               	clrf	___aldiv@sign
  8986     0266                     l3592:
  8987     0266  1FAF               	btfss	___aldiv@divisor+3,7
  8988     0267  2A69               	goto	u1621
  8989     0268  2A6A               	goto	u1620
  8990     0269                     u1621:
  8991     0269  2A77               	goto	l1013
  8992     026A                     u1620:
  8993     026A                     l3594:
  8994     026A  09AC               	comf	___aldiv@divisor,f
  8995     026B  09AD               	comf	___aldiv@divisor+1,f
  8996     026C  09AE               	comf	___aldiv@divisor+2,f
  8997     026D  09AF               	comf	___aldiv@divisor+3,f
  8998     026E  0AAC               	incf	___aldiv@divisor,f
  8999     026F  1903               	skipnz
  9000     0270  0AAD               	incf	___aldiv@divisor+1,f
  9001     0271  1903               	skipnz
  9002     0272  0AAE               	incf	___aldiv@divisor+2,f
  9003     0273  1903               	skipnz
  9004     0274  0AAF               	incf	___aldiv@divisor+3,f
  9005     0275  01B5               	clrf	___aldiv@sign
  9006     0276  0AB5               	incf	___aldiv@sign,f
  9007     0277                     l1013:
  9008     0277  1FB3               	btfss	___aldiv@dividend+3,7
  9009     0278  2A7A               	goto	u1631
  9010     0279  2A7B               	goto	u1630
  9011     027A                     u1631:
  9012     027A  2A8A               	goto	l3600
  9013     027B                     u1630:
  9014     027B                     l3596:
  9015     027B  09B0               	comf	___aldiv@dividend,f
  9016     027C  09B1               	comf	___aldiv@dividend+1,f
  9017     027D  09B2               	comf	___aldiv@dividend+2,f
  9018     027E  09B3               	comf	___aldiv@dividend+3,f
  9019     027F  0AB0               	incf	___aldiv@dividend,f
  9020     0280  1903               	skipnz
  9021     0281  0AB1               	incf	___aldiv@dividend+1,f
  9022     0282  1903               	skipnz
  9023     0283  0AB2               	incf	___aldiv@dividend+2,f
  9024     0284  1903               	skipnz
  9025     0285  0AB3               	incf	___aldiv@dividend+3,f
  9026     0286                     l3598:
  9027     0286  3001               	movlw	1
  9028     0287  00F4               	movwf	??___aldiv
  9029     0288  0874               	movf	??___aldiv,w
  9030     0289  06B5               	xorwf	___aldiv@sign,f
  9031     028A                     l3600:
  9032     028A  3000               	movlw	0
  9033     028B  00B9               	movwf	___aldiv@quotient+3
  9034     028C  3000               	movlw	0
  9035     028D  00B8               	movwf	___aldiv@quotient+2
  9036     028E  3000               	movlw	0
  9037     028F  00B7               	movwf	___aldiv@quotient+1
  9038     0290  3000               	movlw	0
  9039     0291  00B6               	movwf	___aldiv@quotient
  9040     0292                     l3602:
  9041     0292  082F               	movf	___aldiv@divisor+3,w
  9042     0293  042E               	iorwf	___aldiv@divisor+2,w
  9043     0294  042D               	iorwf	___aldiv@divisor+1,w
  9044     0295  042C               	iorwf	___aldiv@divisor,w
  9045     0296  1903               	skipnz
  9046     0297  2A99               	goto	u1641
  9047     0298  2A9A               	goto	u1640
  9048     0299                     u1641:
  9049     0299  2ADB               	goto	l3622
  9050     029A                     u1640:
  9051     029A                     l3604:
  9052     029A  01B4               	clrf	___aldiv@counter
  9053     029B  0AB4               	incf	___aldiv@counter,f
  9054     029C  2AA8               	goto	l3608
  9055     029D                     l3606:
  9056     029D  3001               	movlw	1
  9057     029E                     u1655:
  9058     029E  35AC               	lslf	___aldiv@divisor,f
  9059     029F  0DAD               	rlf	___aldiv@divisor+1,f
  9060     02A0  0DAE               	rlf	___aldiv@divisor+2,f
  9061     02A1  0DAF               	rlf	___aldiv@divisor+3,f
  9062     02A2  0B89               	decfsz	9,f
  9063     02A3  2A9E               	goto	u1655
  9064     02A4  3001               	movlw	1
  9065     02A5  00F4               	movwf	??___aldiv
  9066     02A6  0874               	movf	??___aldiv,w
  9067     02A7  07B4               	addwf	___aldiv@counter,f
  9068     02A8                     l3608:
  9069     02A8  1FAF               	btfss	___aldiv@divisor+3,7
  9070     02A9  2AAB               	goto	u1661
  9071     02AA  2AAC               	goto	u1660
  9072     02AB                     u1661:
  9073     02AB  2A9D               	goto	l3606
  9074     02AC                     u1660:
  9075     02AC                     l3610:
  9076     02AC  3001               	movlw	1
  9077     02AD                     u1675:
  9078     02AD  35B6               	lslf	___aldiv@quotient,f
  9079     02AE  0DB7               	rlf	___aldiv@quotient+1,f
  9080     02AF  0DB8               	rlf	___aldiv@quotient+2,f
  9081     02B0  0DB9               	rlf	___aldiv@quotient+3,f
  9082     02B1  0B89               	decfsz	9,f
  9083     02B2  2AAD               	goto	u1675
  9084     02B3                     l3612:
  9085     02B3  082F               	movf	___aldiv@divisor+3,w
  9086     02B4  0233               	subwf	___aldiv@dividend+3,w
  9087     02B5  1D03               	skipz
  9088     02B6  2AC1               	goto	u1685
  9089     02B7  082E               	movf	___aldiv@divisor+2,w
  9090     02B8  0232               	subwf	___aldiv@dividend+2,w
  9091     02B9  1D03               	skipz
  9092     02BA  2AC1               	goto	u1685
  9093     02BB  082D               	movf	___aldiv@divisor+1,w
  9094     02BC  0231               	subwf	___aldiv@dividend+1,w
  9095     02BD  1D03               	skipz
  9096     02BE  2AC1               	goto	u1685
  9097     02BF  082C               	movf	___aldiv@divisor,w
  9098     02C0  0230               	subwf	___aldiv@dividend,w
  9099     02C1                     u1685:
  9100     02C1  1C03               	skipc
  9101     02C2  2AC4               	goto	u1681
  9102     02C3  2AC5               	goto	u1680
  9103     02C4                     u1681:
  9104     02C4  2ACE               	goto	l3618
  9105     02C5                     u1680:
  9106     02C5                     l3614:
  9107     02C5  082C               	movf	___aldiv@divisor,w
  9108     02C6  02B0               	subwf	___aldiv@dividend,f
  9109     02C7  082D               	movf	___aldiv@divisor+1,w
  9110     02C8  3BB1               	subwfb	___aldiv@dividend+1,f
  9111     02C9  082E               	movf	___aldiv@divisor+2,w
  9112     02CA  3BB2               	subwfb	___aldiv@dividend+2,f
  9113     02CB  082F               	movf	___aldiv@divisor+3,w
  9114     02CC  3BB3               	subwfb	___aldiv@dividend+3,f
  9115     02CD                     l3616:
  9116     02CD  1436               	bsf	___aldiv@quotient,0
  9117     02CE                     l3618:
  9118     02CE  3001               	movlw	1
  9119     02CF                     u1695:
  9120     02CF  36AF               	lsrf	___aldiv@divisor+3,f
  9121     02D0  0CAE               	rrf	___aldiv@divisor+2,f
  9122     02D1  0CAD               	rrf	___aldiv@divisor+1,f
  9123     02D2  0CAC               	rrf	___aldiv@divisor,f
  9124     02D3  0B89               	decfsz	9,f
  9125     02D4  2ACF               	goto	u1695
  9126     02D5                     l3620:
  9127     02D5  3001               	movlw	1
  9128     02D6  02B4               	subwf	___aldiv@counter,f
  9129     02D7  1D03               	btfss	3,2
  9130     02D8  2ADA               	goto	u1701
  9131     02D9  2ADB               	goto	u1700
  9132     02DA                     u1701:
  9133     02DA  2AAC               	goto	l3610
  9134     02DB                     u1700:
  9135     02DB                     l3622:
  9136     02DB  0835               	movf	___aldiv@sign,w
  9137     02DC  1903               	btfsc	3,2
  9138     02DD  2ADF               	goto	u1711
  9139     02DE  2AE0               	goto	u1710
  9140     02DF                     u1711:
  9141     02DF  2AEB               	goto	l3626
  9142     02E0                     u1710:
  9143     02E0                     l3624:
  9144     02E0  09B6               	comf	___aldiv@quotient,f
  9145     02E1  09B7               	comf	___aldiv@quotient+1,f
  9146     02E2  09B8               	comf	___aldiv@quotient+2,f
  9147     02E3  09B9               	comf	___aldiv@quotient+3,f
  9148     02E4  0AB6               	incf	___aldiv@quotient,f
  9149     02E5  1903               	skipnz
  9150     02E6  0AB7               	incf	___aldiv@quotient+1,f
  9151     02E7  1903               	skipnz
  9152     02E8  0AB8               	incf	___aldiv@quotient+2,f
  9153     02E9  1903               	skipnz
  9154     02EA  0AB9               	incf	___aldiv@quotient+3,f
  9155     02EB                     l3626:
  9156     02EB  0839               	movf	___aldiv@quotient+3,w
  9157     02EC  00AF               	movwf	?___aldiv+3
  9158     02ED  0838               	movf	___aldiv@quotient+2,w
  9159     02EE  00AE               	movwf	?___aldiv+2
  9160     02EF  0837               	movf	___aldiv@quotient+1,w
  9161     02F0  00AD               	movwf	?___aldiv+1
  9162     02F1  0836               	movf	___aldiv@quotient,w
  9163     02F2  00AC               	movwf	?___aldiv
  9164     02F3                     l1023:
  9165     02F3  0008               	return
  9166     02F4                     __end_of___aldiv:
  9167                           
  9168                           	psect	text29
  9169     0F2C                     __ptext29:	
  9170 ;; *************** function _KAPS_setRelPos *****************
  9171 ;; Defined at:
  9172 ;;		line 51 in file "kaps.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  offset          1    wreg     char 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  offset          1    7[BANK0 ] char 
  9177 ;;  value           1    9[BANK0 ] unsigned char 
  9178 ;;  reg             1    8[BANK0 ] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0, pclath, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9188 ;;      Params:         0       0       0       0       0       0       0       0
  9189 ;;      Locals:         0       3       0       0       0       0       0       0
  9190 ;;      Temps:          0       2       0       0       0       0       0       0
  9191 ;;      Totals:         0       5       0       0       0       0       0       0
  9192 ;;Total ram usage:        5 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 10
  9195 ;; This function calls:
  9196 ;;		_I2C1_Write
  9197 ;; This function is called by:
  9198 ;;		_ProcessMsg
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202     0F2C                     _KAPS_setRelPos:	
  9203                           ;psect for function _KAPS_setRelPos
  9204                           
  9205                           
  9206                           ;incstack = 0
  9207                           ; Regs used in _KAPS_setRelPos: [wreg+status,2+status,0+pclath+cstack]
  9208                           ;KAPS_setRelPos@offset stored from wreg
  9209     0F2C  0020               	movlb	0	; select bank0
  9210     0F2D  00A7               	movwf	KAPS_setRelPos@offset
  9211     0F2E                     l3892:
  9212                           
  9213                           ;kaps.c: 52:     uint8_t reg = 0x02;
  9214     0F2E  3002               	movlw	2
  9215     0F2F  00A8               	movwf	KAPS_setRelPos@reg
  9216                           
  9217                           ;kaps.c: 53:     uint8_t value = (uint8_t)offset;
  9218     0F30  0827               	movf	KAPS_setRelPos@offset,w
  9219     0F31  00A9               	movwf	KAPS_setRelPos@value
  9220     0F32                     l3894:
  9221                           
  9222                           ;kaps.c: 55:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9223     0F32  0864               	movf	_kaps,w
  9224     0F33  00A5               	movwf	??_KAPS_setRelPos
  9225     0F34  01A6               	clrf	??_KAPS_setRelPos+1
  9226     0F35  0825               	movf	??_KAPS_setRelPos,w
  9227     0F36  00A0               	movwf	I2C1_Write@address
  9228     0F37  0826               	movf	??_KAPS_setRelPos+1,w
  9229     0F38  00A1               	movwf	I2C1_Write@address+1
  9230     0F39  3028               	movlw	(low (KAPS_setRelPos@reg| 0))& (0+255)
  9231     0F3A  00A2               	movwf	I2C1_Write@data
  9232     0F3B  3001               	movlw	1
  9233     0F3C  00A3               	movwf	I2C1_Write@dataLength
  9234     0F3D  3000               	movlw	0
  9235     0F3E  00A4               	movwf	I2C1_Write@dataLength+1
  9236     0F3F  318E  26C6  318F   	fcall	_I2C1_Write
  9237     0F42                     l3896:
  9238                           
  9239                           ;kaps.c: 56:     I2C1_Write(kaps.m_bAddr, &value, 1);
  9240     0F42  0020               	movlb	0	; select bank0
  9241     0F43  0864               	movf	_kaps,w
  9242     0F44  00A5               	movwf	??_KAPS_setRelPos
  9243     0F45  01A6               	clrf	??_KAPS_setRelPos+1
  9244     0F46  0825               	movf	??_KAPS_setRelPos,w
  9245     0F47  00A0               	movwf	I2C1_Write@address
  9246     0F48  0826               	movf	??_KAPS_setRelPos+1,w
  9247     0F49  00A1               	movwf	I2C1_Write@address+1
  9248     0F4A  3029               	movlw	(low (KAPS_setRelPos@value| 0))& (0+255)
  9249     0F4B  00A2               	movwf	I2C1_Write@data
  9250     0F4C  3001               	movlw	1
  9251     0F4D  00A3               	movwf	I2C1_Write@dataLength
  9252     0F4E  3000               	movlw	0
  9253     0F4F  00A4               	movwf	I2C1_Write@dataLength+1
  9254     0F50  318E  26C6  318F   	fcall	_I2C1_Write
  9255     0F53                     l722:
  9256     0F53  0008               	return
  9257     0F54                     __end_of_KAPS_setRelPos:
  9258                           
  9259                           	psect	text30
  9260     074B                     __ptext30:	
  9261 ;; *************** function _KAPS_setAbsPos *****************
  9262 ;; Defined at:
  9263 ;;		line 36 in file "kaps.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  pos             4   13[BANK0 ] unsigned long 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  data            4   19[BANK0 ] unsigned char [4]
  9268 ;;  reg             1   23[BANK0 ] unsigned char 
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  1    wreg      void 
  9271 ;; Registers used:
  9272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9278 ;;      Params:         0       4       0       0       0       0       0       0
  9279 ;;      Locals:         0       5       0       0       0       0       0       0
  9280 ;;      Temps:          0       2       0       0       0       0       0       0
  9281 ;;      Totals:         0      11       0       0       0       0       0       0
  9282 ;;Total ram usage:       11 bytes
  9283 ;; Hardware stack levels used: 1
  9284 ;; Hardware stack levels required when called: 10
  9285 ;; This function calls:
  9286 ;;		_I2C1_Write
  9287 ;;		_unpackLong
  9288 ;; This function is called by:
  9289 ;;		_ProcessMsg
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293     074B                     _KAPS_setAbsPos:	
  9294                           ;psect for function _KAPS_setAbsPos
  9295                           
  9296     074B                     l3884:	
  9297                           ;incstack = 0
  9298                           ; Regs used in _KAPS_setAbsPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9299                           
  9300                           
  9301                           ;kaps.c: 37:     uint8_t reg = 0x01;
  9302     074B  0020               	movlb	0	; select bank0
  9303     074C  01B7               	clrf	KAPS_setAbsPos@reg
  9304     074D  0AB7               	incf	KAPS_setAbsPos@reg,f
  9305     074E                     l3886:
  9306                           
  9307                           ;kaps.c: 38:     uint8_t data[4];;kaps.c: 40:     unpackLong(pos, data);
  9308     074E  0830               	movf	KAPS_setAbsPos@pos+3,w
  9309     074F  00A3               	movwf	unpackLong@value+3
  9310     0750  082F               	movf	KAPS_setAbsPos@pos+2,w
  9311     0751  00A2               	movwf	unpackLong@value+2
  9312     0752  082E               	movf	KAPS_setAbsPos@pos+1,w
  9313     0753  00A1               	movwf	unpackLong@value+1
  9314     0754  082D               	movf	KAPS_setAbsPos@pos,w
  9315     0755  00A0               	movwf	unpackLong@value
  9316     0756  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9317     0757  00A4               	movwf	unpackLong@data
  9318     0758  3184  246C  3187   	fcall	_unpackLong
  9319     075B                     l3888:
  9320                           
  9321                           ;kaps.c: 42:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9322     075B  0020               	movlb	0	; select bank0
  9323     075C  0864               	movf	_kaps,w
  9324     075D  00B1               	movwf	??_KAPS_setAbsPos
  9325     075E  01B2               	clrf	??_KAPS_setAbsPos+1
  9326     075F  0831               	movf	??_KAPS_setAbsPos,w
  9327     0760  00A0               	movwf	I2C1_Write@address
  9328     0761  0832               	movf	??_KAPS_setAbsPos+1,w
  9329     0762  00A1               	movwf	I2C1_Write@address+1
  9330     0763  3037               	movlw	(low (KAPS_setAbsPos@reg| 0))& (0+255)
  9331     0764  00A2               	movwf	I2C1_Write@data
  9332     0765  3001               	movlw	1
  9333     0766  00A3               	movwf	I2C1_Write@dataLength
  9334     0767  3000               	movlw	0
  9335     0768  00A4               	movwf	I2C1_Write@dataLength+1
  9336     0769  318E  26C6  3187   	fcall	_I2C1_Write
  9337     076C                     l3890:
  9338                           
  9339                           ;kaps.c: 43:     I2C1_Write(kaps.m_bAddr, data, 4);
  9340     076C  0020               	movlb	0	; select bank0
  9341     076D  0864               	movf	_kaps,w
  9342     076E  00B1               	movwf	??_KAPS_setAbsPos
  9343     076F  01B2               	clrf	??_KAPS_setAbsPos+1
  9344     0770  0831               	movf	??_KAPS_setAbsPos,w
  9345     0771  00A0               	movwf	I2C1_Write@address
  9346     0772  0832               	movf	??_KAPS_setAbsPos+1,w
  9347     0773  00A1               	movwf	I2C1_Write@address+1
  9348     0774  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9349     0775  00A2               	movwf	I2C1_Write@data
  9350     0776  3004               	movlw	4
  9351     0777  00A3               	movwf	I2C1_Write@dataLength
  9352     0778  3000               	movlw	0
  9353     0779  00A4               	movwf	I2C1_Write@dataLength+1
  9354     077A  318E  26C6  3187   	fcall	_I2C1_Write
  9355     077D                     l719:
  9356     077D  0008               	return
  9357     077E                     __end_of_KAPS_setAbsPos:
  9358                           
  9359                           	psect	text31
  9360     07AE                     __ptext31:	
  9361 ;; *************** function _KAPS_getStatus *****************
  9362 ;; Defined at:
  9363 ;;		line 81 in file "kaps.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  data            1    8[BANK0 ] unsigned char 
  9368 ;;  reg             1    7[BANK0 ] unsigned char 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0, pclath, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9378 ;;      Params:         0       0       0       0       0       0       0       0
  9379 ;;      Locals:         0       2       0       0       0       0       0       0
  9380 ;;      Temps:          0       2       0       0       0       0       0       0
  9381 ;;      Totals:         0       4       0       0       0       0       0       0
  9382 ;;Total ram usage:        4 bytes
  9383 ;; Hardware stack levels used: 1
  9384 ;; Hardware stack levels required when called: 10
  9385 ;; This function calls:
  9386 ;;		_I2C1_Read
  9387 ;;		_I2C1_Write
  9388 ;; This function is called by:
  9389 ;;		_ProcessMsg
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393     07AE                     _KAPS_getStatus:	
  9394                           ;psect for function _KAPS_getStatus
  9395                           
  9396     07AE                     l3830:	
  9397                           ;incstack = 0
  9398                           ; Regs used in _KAPS_getStatus: [wreg+status,2+status,0+pclath+cstack]
  9399                           
  9400                           
  9401                           ;kaps.c: 82:     uint8_t reg = 0xFF;
  9402     07AE  30FF               	movlw	255
  9403     07AF  0020               	movlb	0	; select bank0
  9404     07B0  00A7               	movwf	KAPS_getStatus@reg
  9405     07B1                     l3832:
  9406                           
  9407                           ;kaps.c: 83:     uint8_t data = 0x00;
  9408     07B1  01A8               	clrf	KAPS_getStatus@data
  9409     07B2                     l3834:
  9410                           
  9411                           ;kaps.c: 85:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9412     07B2  0864               	movf	_kaps,w
  9413     07B3  00A5               	movwf	??_KAPS_getStatus
  9414     07B4  01A6               	clrf	??_KAPS_getStatus+1
  9415     07B5  0825               	movf	??_KAPS_getStatus,w
  9416     07B6  00A0               	movwf	I2C1_Write@address
  9417     07B7  0826               	movf	??_KAPS_getStatus+1,w
  9418     07B8  00A1               	movwf	I2C1_Write@address+1
  9419     07B9  3027               	movlw	(low (KAPS_getStatus@reg| 0))& (0+255)
  9420     07BA  00A2               	movwf	I2C1_Write@data
  9421     07BB  3001               	movlw	1
  9422     07BC  00A3               	movwf	I2C1_Write@dataLength
  9423     07BD  3000               	movlw	0
  9424     07BE  00A4               	movwf	I2C1_Write@dataLength+1
  9425     07BF  318E  26C6  3187   	fcall	_I2C1_Write
  9426     07C2                     l3836:
  9427                           
  9428                           ;kaps.c: 87:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9429     07C2  0020               	movlb	0	; select bank0
  9430     07C3  0864               	movf	_kaps,w
  9431     07C4  00A5               	movwf	??_KAPS_getStatus
  9432     07C5  01A6               	clrf	??_KAPS_getStatus+1
  9433     07C6  0825               	movf	??_KAPS_getStatus,w
  9434     07C7  00A0               	movwf	I2C1_Read@address
  9435     07C8  0826               	movf	??_KAPS_getStatus+1,w
  9436     07C9  00A1               	movwf	I2C1_Read@address+1
  9437     07CA  3028               	movlw	(low (KAPS_getStatus@data| 0))& (0+255)
  9438     07CB  00A2               	movwf	I2C1_Read@data
  9439     07CC  3001               	movlw	1
  9440     07CD  00A3               	movwf	I2C1_Read@dataLength
  9441     07CE  3000               	movlw	0
  9442     07CF  00A4               	movwf	I2C1_Read@dataLength+1
  9443     07D0  3187  27DC  3187   	fcall	_I2C1_Read
  9444     07D3  3A00               	xorlw	0
  9445     07D4  1903               	skipnz
  9446     07D5  2FD7               	goto	u1901
  9447     07D6  2FD8               	goto	u1900
  9448     07D7                     u1901:
  9449     07D7  2FDB               	goto	l729
  9450     07D8                     u1900:
  9451     07D8                     l3838:
  9452                           
  9453                           ;kaps.c: 88:         kaps.m_Status = (kaps_status_t) data;
  9454     07D8  0020               	movlb	0	; select bank0
  9455     07D9  0828               	movf	KAPS_getStatus@data,w
  9456     07DA  00E5               	movwf	_kaps+1
  9457     07DB                     l729:
  9458     07DB  0008               	return
  9459     07DC                     __end_of_KAPS_getStatus:
  9460                           
  9461                           	psect	text32
  9462     0574                     __ptext32:	
  9463 ;; *************** function _KAPS_getPos *****************
  9464 ;; Defined at:
  9465 ;;		line 107 in file "kaps.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;		None
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  data            4   15[BANK0 ] unsigned char [4]
  9470 ;;  reg             1   19[BANK0 ] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9480 ;;      Params:         0       0       0       0       0       0       0       0
  9481 ;;      Locals:         0       5       0       0       0       0       0       0
  9482 ;;      Temps:          0       2       0       0       0       0       0       0
  9483 ;;      Totals:         0       7       0       0       0       0       0       0
  9484 ;;Total ram usage:        7 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; Hardware stack levels required when called: 10
  9487 ;; This function calls:
  9488 ;;		_I2C1_Read
  9489 ;;		_I2C1_Write
  9490 ;;		_packLong
  9491 ;; This function is called by:
  9492 ;;		_ProcessMsg
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496     0574                     _KAPS_getPos:	
  9497                           ;psect for function _KAPS_getPos
  9498                           
  9499     0574                     l3840:	
  9500                           ;incstack = 0
  9501                           ; Regs used in _KAPS_getPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9502                           
  9503                           
  9504                           ;kaps.c: 108:     uint8_t reg = 0x00;
  9505     0574  0020               	movlb	0	; select bank0
  9506     0575  01B3               	clrf	KAPS_getPos@reg
  9507     0576                     l3842:
  9508                           
  9509                           ;kaps.c: 109:     uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
  9510     0576  3000               	movlw	0
  9511     0577  00B2               	movwf	KAPS_getPos@data+3
  9512     0578  3000               	movlw	0
  9513     0579  00B1               	movwf	KAPS_getPos@data+2
  9514     057A  3000               	movlw	0
  9515     057B  00B0               	movwf	KAPS_getPos@data+1
  9516     057C  3000               	movlw	0
  9517     057D  00AF               	movwf	KAPS_getPos@data
  9518     057E                     l3844:
  9519                           
  9520                           ;kaps.c: 111:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9521     057E  0864               	movf	_kaps,w
  9522     057F  00AD               	movwf	??_KAPS_getPos
  9523     0580  01AE               	clrf	??_KAPS_getPos+1
  9524     0581  082D               	movf	??_KAPS_getPos,w
  9525     0582  00A0               	movwf	I2C1_Write@address
  9526     0583  082E               	movf	??_KAPS_getPos+1,w
  9527     0584  00A1               	movwf	I2C1_Write@address+1
  9528     0585  3033               	movlw	(low (KAPS_getPos@reg| 0))& (0+255)
  9529     0586  00A2               	movwf	I2C1_Write@data
  9530     0587  3001               	movlw	1
  9531     0588  00A3               	movwf	I2C1_Write@dataLength
  9532     0589  3000               	movlw	0
  9533     058A  00A4               	movwf	I2C1_Write@dataLength+1
  9534     058B  318E  26C6  3185   	fcall	_I2C1_Write
  9535     058E                     l3846:
  9536                           
  9537                           ;kaps.c: 113:     if (I2C1_Read(kaps.m_bAddr, data, 4))
  9538     058E  0020               	movlb	0	; select bank0
  9539     058F  0864               	movf	_kaps,w
  9540     0590  00AD               	movwf	??_KAPS_getPos
  9541     0591  01AE               	clrf	??_KAPS_getPos+1
  9542     0592  082D               	movf	??_KAPS_getPos,w
  9543     0593  00A0               	movwf	I2C1_Read@address
  9544     0594  082E               	movf	??_KAPS_getPos+1,w
  9545     0595  00A1               	movwf	I2C1_Read@address+1
  9546     0596  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9547     0597  00A2               	movwf	I2C1_Read@data
  9548     0598  3004               	movlw	4
  9549     0599  00A3               	movwf	I2C1_Read@dataLength
  9550     059A  3000               	movlw	0
  9551     059B  00A4               	movwf	I2C1_Read@dataLength+1
  9552     059C  3187  27DC  3185   	fcall	_I2C1_Read
  9553     059F  3A00               	xorlw	0
  9554     05A0  1903               	skipnz
  9555     05A1  2DA3               	goto	u1911
  9556     05A2  2DA4               	goto	u1910
  9557     05A3                     u1911:
  9558     05A3  2DB1               	goto	l739
  9559     05A4                     u1910:
  9560     05A4                     l3848:
  9561                           
  9562                           ;kaps.c: 114:         kaps.m_lAbsPos = packLong(data);
  9563     05A4  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9564     05A5  3183  237E  3185   	fcall	_packLong
  9565     05A8  0020               	movlb	0	; select bank0
  9566     05A9  0823               	movf	?_packLong+3,w
  9567     05AA  00E9               	movwf	_kaps+5
  9568     05AB  0822               	movf	?_packLong+2,w
  9569     05AC  00E8               	movwf	_kaps+4
  9570     05AD  0821               	movf	?_packLong+1,w
  9571     05AE  00E7               	movwf	_kaps+3
  9572     05AF  0820               	movf	?_packLong,w
  9573     05B0  00E6               	movwf	_kaps+2
  9574     05B1                     l739:
  9575     05B1  0008               	return
  9576     05B2                     __end_of_KAPS_getPos:
  9577                           
  9578                           	psect	text33
  9579     037E                     __ptext33:	
  9580 ;; *************** function _packLong *****************
  9581 ;; Defined at:
  9582 ;;		line 20 in file "utils.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  data            1    wreg     PTR unsigned char 
  9585 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  data            1   12[BANK0 ] PTR unsigned char 
  9588 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9589 ;;  result          4    8[BANK0 ] unsigned long 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  4    0[BANK0 ] unsigned long 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9599 ;;      Params:         0       4       0       0       0       0       0       0
  9600 ;;      Locals:         0       5       0       0       0       0       0       0
  9601 ;;      Temps:          0       4       0       0       0       0       0       0
  9602 ;;      Totals:         0      13       0       0       0       0       0       0
  9603 ;;Total ram usage:       13 bytes
  9604 ;; Hardware stack levels used: 1
  9605 ;; Hardware stack levels required when called: 7
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_ProcessMsg
  9610 ;;		_KAPS_getPos
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614     037E                     _packLong:	
  9615                           ;psect for function _packLong
  9616                           
  9617                           
  9618                           ;incstack = 0
  9619                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  9620                           ;packLong@data stored from wreg
  9621     037E  0020               	movlb	0	; select bank0
  9622     037F  00AC               	movwf	packLong@data
  9623     0380                     l3716:
  9624     0380                     l3718:
  9625                           
  9626                           ;utils.c: 26:     result = (uint32_t) data[0] << 24;
  9627     0380  082C               	movf	packLong@data,w
  9628     0381  0086               	movwf	6
  9629     0382  0187               	clrf	7
  9630     0383  0801               	movf	1,w
  9631     0384  00A4               	movwf	??_packLong
  9632     0385  01A5               	clrf	??_packLong+1
  9633     0386  01A6               	clrf	??_packLong+2
  9634     0387  01A7               	clrf	??_packLong+3
  9635     0388  3018               	movlw	24
  9636     0389                     u1795:
  9637     0389  35A4               	lslf	??_packLong,f
  9638     038A  0DA5               	rlf	??_packLong+1,f
  9639     038B  0DA6               	rlf	??_packLong+2,f
  9640     038C  0DA7               	rlf	??_packLong+3,f
  9641     038D                     u1790:
  9642     038D  0B89               	decfsz	9,f
  9643     038E  2B89               	goto	u1795
  9644     038F  0827               	movf	??_packLong+3,w
  9645     0390  00AB               	movwf	packLong@result+3
  9646     0391  0826               	movf	??_packLong+2,w
  9647     0392  00AA               	movwf	packLong@result+2
  9648     0393  0825               	movf	??_packLong+1,w
  9649     0394  00A9               	movwf	packLong@result+1
  9650     0395  0824               	movf	??_packLong,w
  9651     0396  00A8               	movwf	packLong@result
  9652     0397                     l3720:
  9653                           
  9654                           ;utils.c: 27:     result |= (uint32_t) data[1] << 16;
  9655     0397  0A2C               	incf	packLong@data,w
  9656     0398  0086               	movwf	6
  9657     0399  0187               	clrf	7
  9658     039A  0801               	movf	1,w
  9659     039B  00A4               	movwf	??_packLong
  9660     039C  01A5               	clrf	??_packLong+1
  9661     039D  01A6               	clrf	??_packLong+2
  9662     039E  01A7               	clrf	??_packLong+3
  9663     039F  3010               	movlw	16
  9664     03A0                     u1805:
  9665     03A0  35A4               	lslf	??_packLong,f
  9666     03A1  0DA5               	rlf	??_packLong+1,f
  9667     03A2  0DA6               	rlf	??_packLong+2,f
  9668     03A3  0DA7               	rlf	??_packLong+3,f
  9669     03A4                     u1800:
  9670     03A4  0B89               	decfsz	9,f
  9671     03A5  2BA0               	goto	u1805
  9672     03A6  0824               	movf	??_packLong,w
  9673     03A7  04A8               	iorwf	packLong@result,f
  9674     03A8  0825               	movf	??_packLong+1,w
  9675     03A9  04A9               	iorwf	packLong@result+1,f
  9676     03AA  0826               	movf	??_packLong+2,w
  9677     03AB  04AA               	iorwf	packLong@result+2,f
  9678     03AC  0827               	movf	??_packLong+3,w
  9679     03AD  04AB               	iorwf	packLong@result+3,f
  9680     03AE                     l3722:
  9681                           
  9682                           ;utils.c: 28:     result |= (uint32_t) data[2] << 8;
  9683     03AE  082C               	movf	packLong@data,w
  9684     03AF  3E02               	addlw	2
  9685     03B0  0086               	movwf	6
  9686     03B1  0187               	clrf	7
  9687     03B2  0801               	movf	1,w
  9688     03B3  00A4               	movwf	??_packLong
  9689     03B4  01A5               	clrf	??_packLong+1
  9690     03B5  01A6               	clrf	??_packLong+2
  9691     03B6  01A7               	clrf	??_packLong+3
  9692     03B7  3008               	movlw	8
  9693     03B8                     u1815:
  9694     03B8  35A4               	lslf	??_packLong,f
  9695     03B9  0DA5               	rlf	??_packLong+1,f
  9696     03BA  0DA6               	rlf	??_packLong+2,f
  9697     03BB  0DA7               	rlf	??_packLong+3,f
  9698     03BC                     u1810:
  9699     03BC  0B89               	decfsz	9,f
  9700     03BD  2BB8               	goto	u1815
  9701     03BE  0824               	movf	??_packLong,w
  9702     03BF  04A8               	iorwf	packLong@result,f
  9703     03C0  0825               	movf	??_packLong+1,w
  9704     03C1  04A9               	iorwf	packLong@result+1,f
  9705     03C2  0826               	movf	??_packLong+2,w
  9706     03C3  04AA               	iorwf	packLong@result+2,f
  9707     03C4  0827               	movf	??_packLong+3,w
  9708     03C5  04AB               	iorwf	packLong@result+3,f
  9709     03C6                     l3724:
  9710                           
  9711                           ;utils.c: 29:     result |= (uint32_t) data[3];
  9712     03C6  082C               	movf	packLong@data,w
  9713     03C7  3E03               	addlw	3
  9714     03C8  0086               	movwf	6
  9715     03C9  0187               	clrf	7
  9716     03CA  0801               	movf	1,w
  9717     03CB  04A8               	iorwf	packLong@result,f
  9718                           
  9719                           ;utils.c: 31:     return result;
  9720     03CC  082B               	movf	packLong@result+3,w
  9721     03CD  00A3               	movwf	?_packLong+3
  9722     03CE  082A               	movf	packLong@result+2,w
  9723     03CF  00A2               	movwf	?_packLong+2
  9724     03D0  0829               	movf	packLong@result+1,w
  9725     03D1  00A1               	movwf	?_packLong+1
  9726     03D2  0828               	movf	packLong@result,w
  9727     03D3  00A0               	movwf	?_packLong
  9728     03D4                     l742:
  9729     03D4  0008               	return
  9730     03D5                     __end_of_packLong:
  9731                           
  9732                           	psect	text34
  9733     0FD2                     __ptext34:	
  9734 ;; *************** function _KAPS_getIndex *****************
  9735 ;; Defined at:
  9736 ;;		line 94 in file "kaps.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;  data            1    8[BANK0 ] unsigned char 
  9741 ;;  reg             1    7[BANK0 ] unsigned char 
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  1    wreg      void 
  9744 ;; Registers used:
  9745 ;;		wreg, status,2, status,0, pclath, cstack
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9751 ;;      Params:         0       0       0       0       0       0       0       0
  9752 ;;      Locals:         0       2       0       0       0       0       0       0
  9753 ;;      Temps:          0       2       0       0       0       0       0       0
  9754 ;;      Totals:         0       4       0       0       0       0       0       0
  9755 ;;Total ram usage:        4 bytes
  9756 ;; Hardware stack levels used: 1
  9757 ;; Hardware stack levels required when called: 10
  9758 ;; This function calls:
  9759 ;;		_I2C1_Read
  9760 ;;		_I2C1_Write
  9761 ;; This function is called by:
  9762 ;;		_ProcessMsg
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766     0FD2                     _KAPS_getIndex:	
  9767                           ;psect for function _KAPS_getIndex
  9768                           
  9769     0FD2                     l3850:	
  9770                           ;incstack = 0
  9771                           ; Regs used in _KAPS_getIndex: [wreg+status,2+status,0+pclath+cstack]
  9772                           
  9773                           
  9774                           ;kaps.c: 95:     uint8_t reg = 0xFE;
  9775     0FD2  30FE               	movlw	254
  9776     0FD3  0020               	movlb	0	; select bank0
  9777     0FD4  00A7               	movwf	KAPS_getIndex@reg
  9778     0FD5                     l3852:
  9779                           
  9780                           ;kaps.c: 96:     uint8_t data = 0x00;
  9781     0FD5  01A8               	clrf	KAPS_getIndex@data
  9782     0FD6                     l3854:
  9783                           
  9784                           ;kaps.c: 98:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9785     0FD6  0864               	movf	_kaps,w
  9786     0FD7  00A5               	movwf	??_KAPS_getIndex
  9787     0FD8  01A6               	clrf	??_KAPS_getIndex+1
  9788     0FD9  0825               	movf	??_KAPS_getIndex,w
  9789     0FDA  00A0               	movwf	I2C1_Write@address
  9790     0FDB  0826               	movf	??_KAPS_getIndex+1,w
  9791     0FDC  00A1               	movwf	I2C1_Write@address+1
  9792     0FDD  3027               	movlw	(low (KAPS_getIndex@reg| 0))& (0+255)
  9793     0FDE  00A2               	movwf	I2C1_Write@data
  9794     0FDF  3001               	movlw	1
  9795     0FE0  00A3               	movwf	I2C1_Write@dataLength
  9796     0FE1  3000               	movlw	0
  9797     0FE2  00A4               	movwf	I2C1_Write@dataLength+1
  9798     0FE3  318E  26C6  318F   	fcall	_I2C1_Write
  9799     0FE6                     l3856:
  9800                           
  9801                           ;kaps.c: 100:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9802     0FE6  0020               	movlb	0	; select bank0
  9803     0FE7  0864               	movf	_kaps,w
  9804     0FE8  00A5               	movwf	??_KAPS_getIndex
  9805     0FE9  01A6               	clrf	??_KAPS_getIndex+1
  9806     0FEA  0825               	movf	??_KAPS_getIndex,w
  9807     0FEB  00A0               	movwf	I2C1_Read@address
  9808     0FEC  0826               	movf	??_KAPS_getIndex+1,w
  9809     0FED  00A1               	movwf	I2C1_Read@address+1
  9810     0FEE  3028               	movlw	(low (KAPS_getIndex@data| 0))& (0+255)
  9811     0FEF  00A2               	movwf	I2C1_Read@data
  9812     0FF0  3001               	movlw	1
  9813     0FF1  00A3               	movwf	I2C1_Read@dataLength
  9814     0FF2  3000               	movlw	0
  9815     0FF3  00A4               	movwf	I2C1_Read@dataLength+1
  9816     0FF4  3187  27DC  318F   	fcall	_I2C1_Read
  9817     0FF7  3A00               	xorlw	0
  9818     0FF8  1903               	skipnz
  9819     0FF9  2FFB               	goto	u1921
  9820     0FFA  2FFC               	goto	u1920
  9821     0FFB                     u1921:
  9822     0FFB  2FFF               	goto	l733
  9823     0FFC                     u1920:
  9824     0FFC                     l3858:
  9825                           
  9826                           ;kaps.c: 101:         kaps.m_bIdxPos = data;
  9827     0FFC  0020               	movlb	0	; select bank0
  9828     0FFD  0828               	movf	KAPS_getIndex@data,w
  9829     0FFE  00EA               	movwf	_kaps+6
  9830     0FFF                     l733:
  9831     0FFF  0008               	return
  9832     1000                     __end_of_KAPS_getIndex:
  9833                           
  9834                           	psect	text35
  9835     07DC                     __ptext35:	
  9836 ;; *************** function _I2C1_Read *****************
  9837 ;; Defined at:
  9838 ;;		line 161 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  address         2    0[BANK0 ] unsigned short 
  9841 ;;  data            1    2[BANK0 ] PTR unsigned char 
  9842 ;;		 -> KAPS_getPos@data(4), KAPS_getIndex@data(1), KAPS_getStatus@data(1), 
  9843 ;;  dataLength      2    3[BANK0 ] unsigned int 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  retStatus       1    5[COMMON] _Bool 
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      _Bool 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0, pclath, cstack
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9855 ;;      Params:         0       5       0       0       0       0       0       0
  9856 ;;      Locals:         1       0       0       0       0       0       0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0       0
  9858 ;;      Totals:         1       5       0       0       0       0       0       0
  9859 ;;Total ram usage:        6 bytes
  9860 ;; Hardware stack levels used: 1
  9861 ;; Hardware stack levels required when called: 9
  9862 ;; This function calls:
  9863 ;;		_I2C1_IsBusy
  9864 ;;		_I2C1_ReadStart
  9865 ;; This function is called by:
  9866 ;;		_KAPS_getStatus
  9867 ;;		_KAPS_getIndex
  9868 ;;		_KAPS_getPos
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872     07DC                     _I2C1_Read:	
  9873                           ;psect for function _I2C1_Read
  9874                           
  9875     07DC                     l3654:	
  9876                           ;incstack = 0
  9877                           ; Regs used in _I2C1_Read: [wreg+status,2+status,0+pclath+cstack]
  9878                           
  9879                           
  9880                           ;mcc_generated_files/i2c_host/src/mssp.c: 161: _Bool I2C1_Read(uint16_t address, uint8_t
      +                           *data, size_t dataLength);mcc_generated_files/i2c_host/src/mssp.c: 162: {;mcc_generated
      +                          _files/i2c_host/src/mssp.c: 163:     _Bool retStatus = 0;
  9881     07DC  01F5               	clrf	I2C1_Read@retStatus
  9882     07DD                     l3656:
  9883                           
  9884                           ;mcc_generated_files/i2c_host/src/mssp.c: 164:     if (!I2C1_IsBusy())
  9885     07DD  318E  2620  3187   	fcall	_I2C1_IsBusy
  9886     07E0  3A00               	xorlw	0
  9887     07E1  1D03               	skipz
  9888     07E2  2FE4               	goto	u1731
  9889     07E3  2FE5               	goto	u1730
  9890     07E4                     u1731:
  9891     07E4  2FFC               	goto	l3676
  9892     07E5                     u1730:
  9893     07E5                     l3658:
  9894                           
  9895                           ;mcc_generated_files/i2c_host/src/mssp.c: 165:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 166:         i2c1Status.busy = 1;
  9896     07E5  3001               	movlw	1
  9897     07E6  0020               	movlb	0	; select bank0
  9898     07E7  00D2               	movwf	_i2c1Status	;volatile
  9899                           
  9900                           ;mcc_generated_files/i2c_host/src/mssp.c: 167:         i2c1Status.address = address;
  9901     07E8  0821               	movf	I2C1_Read@address+1,w
  9902     07E9  00D4               	movwf	_i2c1Status+2	;volatile
  9903     07EA  0820               	movf	I2C1_Read@address,w
  9904     07EB  00D3               	movwf	_i2c1Status+1	;volatile
  9905     07EC                     l3660:
  9906                           
  9907                           ;mcc_generated_files/i2c_host/src/mssp.c: 168:         i2c1Status.switchToRead = 0;
  9908     07EC  01DB               	clrf	_i2c1Status+9	;volatile
  9909     07ED                     l3662:
  9910                           
  9911                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:         i2c1Status.readPtr = data;
  9912     07ED  0822               	movf	I2C1_Read@data,w
  9913     07EE  00D8               	movwf	low ((_i2c1Status| 0+6))	;volatile
  9914     07EF                     l3664:
  9915                           
  9916                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:         i2c1Status.readLength = dataLengt
      +                          h;
  9917     07EF  0824               	movf	I2C1_Read@dataLength+1,w
  9918     07F0  00DA               	movwf	_i2c1Status+8	;volatile
  9919     07F1  0823               	movf	I2C1_Read@dataLength,w
  9920     07F2  00D9               	movwf	_i2c1Status+7	;volatile
  9921     07F3                     l3666:
  9922                           
  9923                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:         i2c1Status.writePtr = ((void*)0);
  9924     07F3  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
  9925     07F4                     l3668:
  9926                           
  9927                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:         i2c1Status.writeLength = 0;
  9928     07F4  01D6               	clrf	_i2c1Status+4	;volatile
  9929     07F5  01D7               	clrf	_i2c1Status+5	;volatile
  9930     07F6                     l3670:
  9931                           
  9932                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
  9933     07F6  01DC               	clrf	_i2c1Status+10	;volatile
  9934     07F7                     l3672:
  9935                           
  9936                           ;mcc_generated_files/i2c_host/src/mssp.c: 174:         I2C1_ReadStart();
  9937     07F7  318D  2585  3187   	fcall	_I2C1_ReadStart
  9938     07FA                     l3674:
  9939                           
  9940                           ;mcc_generated_files/i2c_host/src/mssp.c: 175:         retStatus = 1;
  9941     07FA  01F5               	clrf	I2C1_Read@retStatus
  9942     07FB  0AF5               	incf	I2C1_Read@retStatus,f
  9943     07FC                     l3676:
  9944                           
  9945                           ;mcc_generated_files/i2c_host/src/mssp.c: 177:     return retStatus;
  9946     07FC  0875               	movf	I2C1_Read@retStatus,w
  9947     07FD                     l188:
  9948     07FD  0008               	return
  9949     07FE                     __end_of_I2C1_Read:
  9950                           
  9951                           	psect	text36
  9952     0D85                     __ptext36:	
  9953 ;; *************** function _I2C1_ReadStart *****************
  9954 ;; Defined at:
  9955 ;;		line 232 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;		None
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0, pclath, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9969 ;;      Params:         0       0       0       0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0
  9972 ;;      Totals:         0       0       0       0       0       0       0       0
  9973 ;;Total ram usage:        0 bytes
  9974 ;; Hardware stack levels used: 1
  9975 ;; Hardware stack levels required when called: 8
  9976 ;; This function calls:
  9977 ;;		_I2C1_StartSend
  9978 ;; This function is called by:
  9979 ;;		_I2C1_Read
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983     0D85                     _I2C1_ReadStart:	
  9984                           ;psect for function _I2C1_ReadStart
  9985                           
  9986     0D85                     l3566:	
  9987                           ;incstack = 0
  9988                           ; Regs used in _I2C1_ReadStart: [wreg+status,2+status,0+pclath+cstack]
  9989                           
  9990                           
  9991                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:     I2C1_StartSend();
  9992     0D85  318C  24F9  318D   	fcall	_I2C1_StartSend
  9993     0D88                     l3568:
  9994                           
  9995                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:     i2c1Status.state = I2C_STATE_SEND_RD_
      +                          ADDR;
  9996     0D88  3001               	movlw	1
  9997     0D89  0020               	movlb	0	; select bank0
  9998     0D8A  00DD               	movwf	_i2c1Status+11	;volatile
  9999     0D8B                     l213:
 10000     0D8B  0008               	return
 10001     0D8C                     __end_of_I2C1_ReadStart:
 10002                           
 10003                           	psect	text37
 10004     0534                     __ptext37:	
 10005 ;; *************** function _KAPS_StorePos *****************
 10006 ;; Defined at:
 10007 ;;		line 65 in file "kaps.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;  idx             1    wreg     unsigned char 
 10010 ;;  pos             4   13[BANK0 ] unsigned long 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  idx             1   24[BANK0 ] unsigned char 
 10013 ;;  data            4   19[BANK0 ] unsigned char [4]
 10014 ;;  reg             1   23[BANK0 ] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10024 ;;      Params:         0       4       0       0       0       0       0       0
 10025 ;;      Locals:         0       6       0       0       0       0       0       0
 10026 ;;      Temps:          0       2       0       0       0       0       0       0
 10027 ;;      Totals:         0      12       0       0       0       0       0       0
 10028 ;;Total ram usage:       12 bytes
 10029 ;; Hardware stack levels used: 1
 10030 ;; Hardware stack levels required when called: 10
 10031 ;; This function calls:
 10032 ;;		_I2C1_Write
 10033 ;;		_unpackLong
 10034 ;; This function is called by:
 10035 ;;		_ProcessMsg
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039     0534                     _KAPS_StorePos:	
 10040                           ;psect for function _KAPS_StorePos
 10041                           
 10042                           
 10043                           ;incstack = 0
 10044                           ; Regs used in _KAPS_StorePos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10045                           ;KAPS_StorePos@idx stored from wreg
 10046     0534  0020               	movlb	0	; select bank0
 10047     0535  00B8               	movwf	KAPS_StorePos@idx
 10048     0536                     l3898:
 10049                           
 10050                           ;kaps.c: 66:     idx--;
 10051     0536  3001               	movlw	1
 10052     0537  02B8               	subwf	KAPS_StorePos@idx,f
 10053     0538                     l3900:
 10054                           
 10055                           ;kaps.c: 68:     uint8_t reg = (idx)*4 + 0x04;
 10056     0538  0838               	movf	KAPS_StorePos@idx,w
 10057     0539  00B1               	movwf	??_KAPS_StorePos
 10058     053A  3001               	movlw	1
 10059     053B                     u1965:
 10060     053B  35B1               	lslf	??_KAPS_StorePos,f
 10061     053C  3EFF               	addlw	-1
 10062     053D  1D03               	skipz
 10063     053E  2D3B               	goto	u1965
 10064     053F  3531               	lslf	??_KAPS_StorePos,w
 10065     0540  3E04               	addlw	4
 10066     0541  00B7               	movwf	KAPS_StorePos@reg
 10067     0542                     l3902:
 10068                           
 10069                           ;kaps.c: 69:     uint8_t data[4];;kaps.c: 71:     data[0] = idx;
 10070     0542  0838               	movf	KAPS_StorePos@idx,w
 10071     0543  00B3               	movwf	KAPS_StorePos@data
 10072     0544                     l3904:
 10073                           
 10074                           ;kaps.c: 72:     unpackLong(pos, &data[0]);
 10075     0544  0830               	movf	KAPS_StorePos@pos+3,w
 10076     0545  00A3               	movwf	unpackLong@value+3
 10077     0546  082F               	movf	KAPS_StorePos@pos+2,w
 10078     0547  00A2               	movwf	unpackLong@value+2
 10079     0548  082E               	movf	KAPS_StorePos@pos+1,w
 10080     0549  00A1               	movwf	unpackLong@value+1
 10081     054A  082D               	movf	KAPS_StorePos@pos,w
 10082     054B  00A0               	movwf	unpackLong@value
 10083     054C  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10084     054D  00A4               	movwf	unpackLong@data
 10085     054E  3184  246C  3185   	fcall	_unpackLong
 10086     0551                     l3906:
 10087                           
 10088                           ;kaps.c: 74:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10089     0551  0020               	movlb	0	; select bank0
 10090     0552  0864               	movf	_kaps,w
 10091     0553  00B1               	movwf	??_KAPS_StorePos
 10092     0554  01B2               	clrf	??_KAPS_StorePos+1
 10093     0555  0831               	movf	??_KAPS_StorePos,w
 10094     0556  00A0               	movwf	I2C1_Write@address
 10095     0557  0832               	movf	??_KAPS_StorePos+1,w
 10096     0558  00A1               	movwf	I2C1_Write@address+1
 10097     0559  3037               	movlw	(low (KAPS_StorePos@reg| 0))& (0+255)
 10098     055A  00A2               	movwf	I2C1_Write@data
 10099     055B  3001               	movlw	1
 10100     055C  00A3               	movwf	I2C1_Write@dataLength
 10101     055D  3000               	movlw	0
 10102     055E  00A4               	movwf	I2C1_Write@dataLength+1
 10103     055F  318E  26C6  3185   	fcall	_I2C1_Write
 10104     0562                     l3908:
 10105                           
 10106                           ;kaps.c: 75:     I2C1_Write(kaps.m_bAddr, data, 4);
 10107     0562  0020               	movlb	0	; select bank0
 10108     0563  0864               	movf	_kaps,w
 10109     0564  00B1               	movwf	??_KAPS_StorePos
 10110     0565  01B2               	clrf	??_KAPS_StorePos+1
 10111     0566  0831               	movf	??_KAPS_StorePos,w
 10112     0567  00A0               	movwf	I2C1_Write@address
 10113     0568  0832               	movf	??_KAPS_StorePos+1,w
 10114     0569  00A1               	movwf	I2C1_Write@address+1
 10115     056A  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10116     056B  00A2               	movwf	I2C1_Write@data
 10117     056C  3004               	movlw	4
 10118     056D  00A3               	movwf	I2C1_Write@dataLength
 10119     056E  3000               	movlw	0
 10120     056F  00A4               	movwf	I2C1_Write@dataLength+1
 10121     0570  318E  26C6  3185   	fcall	_I2C1_Write
 10122     0573                     l725:
 10123     0573  0008               	return
 10124     0574                     __end_of_KAPS_StorePos:
 10125                           
 10126                           	psect	text38
 10127     046C                     __ptext38:	
 10128 ;; *************** function _unpackLong *****************
 10129 ;; Defined at:
 10130 ;;		line 57 in file "utils.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  value           4    0[BANK0 ] unsigned long 
 10133 ;;  data            1    4[BANK0 ] PTR unsigned char 
 10134 ;;		 -> KAPS_StorePos@data(4), KAPS_setAbsPos@data(4), ProcessMsg@payload(6), 
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;		None
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  1    wreg      void 
 10139 ;; Registers used:
 10140 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10146 ;;      Params:         0       5       0       0       0       0       0       0
 10147 ;;      Locals:         0       0       0       0       0       0       0       0
 10148 ;;      Temps:          0       4       0       0       0       0       0       0
 10149 ;;      Totals:         0       9       0       0       0       0       0       0
 10150 ;;Total ram usage:        9 bytes
 10151 ;; Hardware stack levels used: 1
 10152 ;; Hardware stack levels required when called: 7
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_ProcessMsg
 10157 ;;		_KAPS_setAbsPos
 10158 ;;		_KAPS_StorePos
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162     046C                     _unpackLong:	
 10163                           ;psect for function _unpackLong
 10164                           
 10165     046C                     l3708:	
 10166                           ;incstack = 0
 10167                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
 10168                           
 10169                           
 10170                           ;utils.c: 59:     data[0] = (value & 0XFF);
 10171     046C  0020               	movlb	0	; select bank0
 10172     046D  0824               	movf	unpackLong@data,w
 10173     046E  0086               	movwf	6
 10174     046F  0187               	clrf	7
 10175     0470  0820               	movf	unpackLong@value,w
 10176     0471  0081               	movwf	1
 10177     0472                     l3710:
 10178                           
 10179                           ;utils.c: 60:     data[1] = (value >> 8) & 0xFF;
 10180     0472  0A24               	incf	unpackLong@data,w
 10181     0473  0086               	movwf	6
 10182     0474  0187               	clrf	7
 10183     0475  0820               	movf	unpackLong@value,w
 10184     0476  00A5               	movwf	??_unpackLong
 10185     0477  0821               	movf	unpackLong@value+1,w
 10186     0478  00A6               	movwf	??_unpackLong+1
 10187     0479  0822               	movf	unpackLong@value+2,w
 10188     047A  00A7               	movwf	??_unpackLong+2
 10189     047B  0823               	movf	unpackLong@value+3,w
 10190     047C  00A8               	movwf	??_unpackLong+3
 10191     047D  3008               	movlw	8
 10192     047E                     u1765:
 10193     047E  36A8               	lsrf	??_unpackLong+3,f
 10194     047F  0CA7               	rrf	??_unpackLong+2,f
 10195     0480  0CA6               	rrf	??_unpackLong+1,f
 10196     0481  0CA5               	rrf	??_unpackLong,f
 10197     0482                     u1760:
 10198     0482  0B89               	decfsz	9,f
 10199     0483  2C7E               	goto	u1765
 10200     0484  0825               	movf	??_unpackLong,w
 10201     0485  0081               	movwf	1
 10202     0486                     l3712:
 10203                           
 10204                           ;utils.c: 61:     data[2] = (value >> 16) & 0xFF;
 10205     0486  0824               	movf	unpackLong@data,w
 10206     0487  3E02               	addlw	2
 10207     0488  0086               	movwf	6
 10208     0489  0187               	clrf	7
 10209     048A  0820               	movf	unpackLong@value,w
 10210     048B  00A5               	movwf	??_unpackLong
 10211     048C  0821               	movf	unpackLong@value+1,w
 10212     048D  00A6               	movwf	??_unpackLong+1
 10213     048E  0822               	movf	unpackLong@value+2,w
 10214     048F  00A7               	movwf	??_unpackLong+2
 10215     0490  0823               	movf	unpackLong@value+3,w
 10216     0491  00A8               	movwf	??_unpackLong+3
 10217     0492  3010               	movlw	16
 10218     0493                     u1775:
 10219     0493  36A8               	lsrf	??_unpackLong+3,f
 10220     0494  0CA7               	rrf	??_unpackLong+2,f
 10221     0495  0CA6               	rrf	??_unpackLong+1,f
 10222     0496  0CA5               	rrf	??_unpackLong,f
 10223     0497                     u1770:
 10224     0497  0B89               	decfsz	9,f
 10225     0498  2C93               	goto	u1775
 10226     0499  0825               	movf	??_unpackLong,w
 10227     049A  0081               	movwf	1
 10228     049B                     l3714:
 10229                           
 10230                           ;utils.c: 62:     data[3] = (value >> 24) & 0xFF;
 10231     049B  0824               	movf	unpackLong@data,w
 10232     049C  3E03               	addlw	3
 10233     049D  0086               	movwf	6
 10234     049E  0187               	clrf	7
 10235     049F  0820               	movf	unpackLong@value,w
 10236     04A0  00A5               	movwf	??_unpackLong
 10237     04A1  0821               	movf	unpackLong@value+1,w
 10238     04A2  00A6               	movwf	??_unpackLong+1
 10239     04A3  0822               	movf	unpackLong@value+2,w
 10240     04A4  00A7               	movwf	??_unpackLong+2
 10241     04A5  0823               	movf	unpackLong@value+3,w
 10242     04A6  00A8               	movwf	??_unpackLong+3
 10243     04A7  3018               	movlw	24
 10244     04A8                     u1785:
 10245     04A8  36A8               	lsrf	??_unpackLong+3,f
 10246     04A9  0CA7               	rrf	??_unpackLong+2,f
 10247     04AA  0CA6               	rrf	??_unpackLong+1,f
 10248     04AB  0CA5               	rrf	??_unpackLong,f
 10249     04AC                     u1780:
 10250     04AC  0B89               	decfsz	9,f
 10251     04AD  2CA8               	goto	u1785
 10252     04AE  0825               	movf	??_unpackLong,w
 10253     04AF  0081               	movwf	1
 10254     04B0                     l748:
 10255     04B0  0008               	return
 10256     04B1                     __end_of_unpackLong:
 10257                           
 10258                           	psect	text39
 10259     0F06                     __ptext39:	
 10260 ;; *************** function _KAPS_GoToIdx *****************
 10261 ;; Defined at:
 10262 ;;		line 24 in file "kaps.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  idx             1    wreg     unsigned char 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  idx             1    7[BANK0 ] unsigned char 
 10267 ;;  reg             1    8[BANK0 ] unsigned char 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      void 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2, status,0, pclath, cstack
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10277 ;;      Params:         0       0       0       0       0       0       0       0
 10278 ;;      Locals:         0       2       0       0       0       0       0       0
 10279 ;;      Temps:          0       2       0       0       0       0       0       0
 10280 ;;      Totals:         0       4       0       0       0       0       0       0
 10281 ;;Total ram usage:        4 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; Hardware stack levels required when called: 10
 10284 ;; This function calls:
 10285 ;;		_I2C1_Write
 10286 ;; This function is called by:
 10287 ;;		_ProcessMsg
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291     0F06                     _KAPS_GoToIdx:	
 10292                           ;psect for function _KAPS_GoToIdx
 10293                           
 10294                           
 10295                           ;incstack = 0
 10296                           ; Regs used in _KAPS_GoToIdx: [wreg+status,2+status,0+pclath+cstack]
 10297                           ;KAPS_GoToIdx@idx stored from wreg
 10298     0F06  0020               	movlb	0	; select bank0
 10299     0F07  00A7               	movwf	KAPS_GoToIdx@idx
 10300     0F08                     l3878:
 10301                           
 10302                           ;kaps.c: 25:     uint8_t reg = 0xFE;
 10303     0F08  30FE               	movlw	254
 10304     0F09  00A8               	movwf	KAPS_GoToIdx@reg
 10305     0F0A                     l3880:
 10306                           
 10307                           ;kaps.c: 27:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10308     0F0A  0864               	movf	_kaps,w
 10309     0F0B  00A5               	movwf	??_KAPS_GoToIdx
 10310     0F0C  01A6               	clrf	??_KAPS_GoToIdx+1
 10311     0F0D  0825               	movf	??_KAPS_GoToIdx,w
 10312     0F0E  00A0               	movwf	I2C1_Write@address
 10313     0F0F  0826               	movf	??_KAPS_GoToIdx+1,w
 10314     0F10  00A1               	movwf	I2C1_Write@address+1
 10315     0F11  3028               	movlw	(low (KAPS_GoToIdx@reg| 0))& (0+255)
 10316     0F12  00A2               	movwf	I2C1_Write@data
 10317     0F13  3001               	movlw	1
 10318     0F14  00A3               	movwf	I2C1_Write@dataLength
 10319     0F15  3000               	movlw	0
 10320     0F16  00A4               	movwf	I2C1_Write@dataLength+1
 10321     0F17  318E  26C6  318F   	fcall	_I2C1_Write
 10322     0F1A                     l3882:
 10323                           
 10324                           ;kaps.c: 28:     I2C1_Write(kaps.m_bAddr, &idx, 1);
 10325     0F1A  0020               	movlb	0	; select bank0
 10326     0F1B  0864               	movf	_kaps,w
 10327     0F1C  00A5               	movwf	??_KAPS_GoToIdx
 10328     0F1D  01A6               	clrf	??_KAPS_GoToIdx+1
 10329     0F1E  0825               	movf	??_KAPS_GoToIdx,w
 10330     0F1F  00A0               	movwf	I2C1_Write@address
 10331     0F20  0826               	movf	??_KAPS_GoToIdx+1,w
 10332     0F21  00A1               	movwf	I2C1_Write@address+1
 10333     0F22  3027               	movlw	(low (KAPS_GoToIdx@idx| 0))& (0+255)
 10334     0F23  00A2               	movwf	I2C1_Write@data
 10335     0F24  3001               	movlw	1
 10336     0F25  00A3               	movwf	I2C1_Write@dataLength
 10337     0F26  3000               	movlw	0
 10338     0F27  00A4               	movwf	I2C1_Write@dataLength+1
 10339     0F28  318E  26C6  318F   	fcall	_I2C1_Write
 10340     0F2B                     l716:
 10341     0F2B  0008               	return
 10342     0F2C                     __end_of_KAPS_GoToIdx:
 10343                           
 10344                           	psect	text40
 10345     0EC6                     __ptext40:	
 10346 ;; *************** function _I2C1_Write *****************
 10347 ;; Defined at:
 10348 ;;		line 142 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  address         2    0[BANK0 ] unsigned short 
 10351 ;;  data            1    2[BANK0 ] PTR unsigned char 
 10352 ;;		 -> KAPS_getPos@reg(1), KAPS_getIndex@reg(1), KAPS_getStatus@reg(1), KAPS_StorePos@data(4), 
 10353 ;;		 -> KAPS_StorePos@reg(1), KAPS_setRelPos@value(1), KAPS_setRelPos@reg(1), KAPS_setAbsPos@data(4), 
 10354 ;;		 -> KAPS_setAbsPos@reg(1), KAPS_GoToIdx@idx(1), KAPS_GoToIdx@reg(1), 
 10355 ;;  dataLength      2    3[BANK0 ] unsigned int 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;  retStatus       1    0        _Bool 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      _Bool 
 10360 ;; Registers used:
 10361 ;;		wreg, status,2, status,0, pclath, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10367 ;;      Params:         0       5       0       0       0       0       0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0       0
 10370 ;;      Totals:         0       5       0       0       0       0       0       0
 10371 ;;Total ram usage:        5 bytes
 10372 ;; Hardware stack levels used: 1
 10373 ;; Hardware stack levels required when called: 9
 10374 ;; This function calls:
 10375 ;;		_I2C1_IsBusy
 10376 ;;		_I2C1_WriteStart
 10377 ;; This function is called by:
 10378 ;;		_KAPS_GoToIdx
 10379 ;;		_KAPS_setAbsPos
 10380 ;;		_KAPS_setRelPos
 10381 ;;		_KAPS_StorePos
 10382 ;;		_KAPS_getStatus
 10383 ;;		_KAPS_getIndex
 10384 ;;		_KAPS_getPos
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388     0EC6                     _I2C1_Write:	
 10389                           ;psect for function _I2C1_Write
 10390                           
 10391     0EC6                     l3630:	
 10392                           ;incstack = 0
 10393                           ; Regs used in _I2C1_Write: [wreg+status,2+status,0+pclath+cstack]
 10394                           
 10395     0EC6                     l3632:
 10396                           
 10397                           ;mcc_generated_files/i2c_host/src/mssp.c: 145:     if (!I2C1_IsBusy())
 10398     0EC6  318E  2620  318E   	fcall	_I2C1_IsBusy
 10399     0EC9  3A00               	xorlw	0
 10400     0ECA  1D03               	skipz
 10401     0ECB  2ECD               	goto	u1721
 10402     0ECC  2ECE               	goto	u1720
 10403     0ECD                     u1721:
 10404     0ECD  2EE3               	goto	l184
 10405     0ECE                     u1720:
 10406     0ECE                     l3634:
 10407                           
 10408                           ;mcc_generated_files/i2c_host/src/mssp.c: 146:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 147:         i2c1Status.busy = 1;
 10409     0ECE  3001               	movlw	1
 10410     0ECF  0020               	movlb	0	; select bank0
 10411     0ED0  00D2               	movwf	_i2c1Status	;volatile
 10412                           
 10413                           ;mcc_generated_files/i2c_host/src/mssp.c: 148:         i2c1Status.address = address;
 10414     0ED1  0821               	movf	I2C1_Write@address+1,w
 10415     0ED2  00D4               	movwf	_i2c1Status+2	;volatile
 10416     0ED3  0820               	movf	I2C1_Write@address,w
 10417     0ED4  00D3               	movwf	_i2c1Status+1	;volatile
 10418     0ED5                     l3636:
 10419                           
 10420                           ;mcc_generated_files/i2c_host/src/mssp.c: 149:         i2c1Status.switchToRead = 0;
 10421     0ED5  01DB               	clrf	_i2c1Status+9	;volatile
 10422     0ED6                     l3638:
 10423                           
 10424                           ;mcc_generated_files/i2c_host/src/mssp.c: 150:         i2c1Status.writePtr = data;
 10425     0ED6  0822               	movf	I2C1_Write@data,w
 10426     0ED7  00D5               	movwf	low ((_i2c1Status| 0+3))	;volatile
 10427     0ED8                     l3640:
 10428                           
 10429                           ;mcc_generated_files/i2c_host/src/mssp.c: 151:         i2c1Status.writeLength = dataLeng
      +                          th;
 10430     0ED8  0824               	movf	I2C1_Write@dataLength+1,w
 10431     0ED9  00D7               	movwf	_i2c1Status+5	;volatile
 10432     0EDA  0823               	movf	I2C1_Write@dataLength,w
 10433     0EDB  00D6               	movwf	_i2c1Status+4	;volatile
 10434     0EDC                     l3642:
 10435                           
 10436                           ;mcc_generated_files/i2c_host/src/mssp.c: 152:         i2c1Status.readPtr = ((void*)0);
 10437     0EDC  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 10438     0EDD                     l3644:
 10439                           
 10440                           ;mcc_generated_files/i2c_host/src/mssp.c: 153:         i2c1Status.readLength = 0;
 10441     0EDD  01D9               	clrf	_i2c1Status+7	;volatile
 10442     0EDE  01DA               	clrf	_i2c1Status+8	;volatile
 10443     0EDF                     l3646:
 10444                           
 10445                           ;mcc_generated_files/i2c_host/src/mssp.c: 154:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 10446     0EDF  01DC               	clrf	_i2c1Status+10	;volatile
 10447     0EE0                     l3648:
 10448                           
 10449                           ;mcc_generated_files/i2c_host/src/mssp.c: 155:         I2C1_WriteStart();
 10450     0EE0  318D  257E  318E   	fcall	_I2C1_WriteStart
 10451     0EE3                     l3650:
 10452     0EE3                     l184:
 10453     0EE3  0008               	return
 10454     0EE4                     __end_of_I2C1_Write:
 10455                           
 10456                           	psect	text41
 10457     0D7E                     __ptext41:	
 10458 ;; *************** function _I2C1_WriteStart *****************
 10459 ;; Defined at:
 10460 ;;		line 238 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;		None
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0, pclath, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10474 ;;      Params:         0       0       0       0       0       0       0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0
 10477 ;;      Totals:         0       0       0       0       0       0       0       0
 10478 ;;Total ram usage:        0 bytes
 10479 ;; Hardware stack levels used: 1
 10480 ;; Hardware stack levels required when called: 8
 10481 ;; This function calls:
 10482 ;;		_I2C1_StartSend
 10483 ;; This function is called by:
 10484 ;;		_I2C1_Write
 10485 ;;		_I2C1_WriteRead
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489     0D7E                     _I2C1_WriteStart:	
 10490                           ;psect for function _I2C1_WriteStart
 10491                           
 10492     0D7E                     l3562:	
 10493                           ;incstack = 0
 10494                           ; Regs used in _I2C1_WriteStart: [wreg+status,2+status,0+pclath+cstack]
 10495                           
 10496                           
 10497                           ;mcc_generated_files/i2c_host/src/mssp.c: 240:     I2C1_StartSend();
 10498     0D7E  318C  24F9  318D   	fcall	_I2C1_StartSend
 10499     0D81                     l3564:
 10500                           
 10501                           ;mcc_generated_files/i2c_host/src/mssp.c: 241:     i2c1Status.state = I2C_STATE_SEND_WR_
      +                          ADDR;
 10502     0D81  3002               	movlw	2
 10503     0D82  0020               	movlb	0	; select bank0
 10504     0D83  00DD               	movwf	_i2c1Status+11	;volatile
 10505     0D84                     l216:
 10506     0D84  0008               	return
 10507     0D85                     __end_of_I2C1_WriteStart:
 10508                           
 10509                           	psect	text42
 10510     0CF9                     __ptext42:	
 10511 ;; *************** function _I2C1_StartSend *****************
 10512 ;; Defined at:
 10513 ;;		line 425 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		None
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10527 ;;      Params:         0       0       0       0       0       0       0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0       0
 10529 ;;      Temps:          0       0       0       0       0       0       0       0
 10530 ;;      Totals:         0       0       0       0       0       0       0       0
 10531 ;;Total ram usage:        0 bytes
 10532 ;; Hardware stack levels used: 1
 10533 ;; Hardware stack levels required when called: 7
 10534 ;; This function calls:
 10535 ;;		Nothing
 10536 ;; This function is called by:
 10537 ;;		_I2C1_ReadStart
 10538 ;;		_I2C1_WriteStart
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542     0CF9                     _I2C1_StartSend:	
 10543                           ;psect for function _I2C1_StartSend
 10544                           
 10545     0CF9                     l3522:	
 10546                           ;incstack = 0
 10547                           ; Regs used in _I2C1_StartSend: []
 10548                           
 10549                           
 10550                           ;mcc_generated_files/i2c_host/src/mssp.c: 427:     SSP1CON2bits.SEN = 1;
 10551     0CF9  0024               	movlb	4	; select bank4
 10552     0CFA  1416               	bsf	22,0	;volatile
 10553     0CFB                     l288:
 10554     0CFB  0008               	return
 10555     0CFC                     __end_of_I2C1_StartSend:
 10556                           
 10557                           	psect	text43
 10558     0E20                     __ptext43:	
 10559 ;; *************** function _I2C1_IsBusy *****************
 10560 ;; Defined at:
 10561 ;;		line 206 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10562 ;; Parameters:    Size  Location     Type
 10563 ;;		None
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;		None
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1    wreg      _Bool 
 10568 ;; Registers used:
 10569 ;;		wreg, status,2, status,0
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10575 ;;      Params:         0       0       0       0       0       0       0       0
 10576 ;;      Locals:         1       0       0       0       0       0       0       0
 10577 ;;      Temps:          0       0       0       0       0       0       0       0
 10578 ;;      Totals:         1       0       0       0       0       0       0       0
 10579 ;;Total ram usage:        1 bytes
 10580 ;; Hardware stack levels used: 1
 10581 ;; Hardware stack levels required when called: 7
 10582 ;; This function calls:
 10583 ;;		Nothing
 10584 ;; This function is called by:
 10585 ;;		_I2C1_Write
 10586 ;;		_I2C1_Read
 10587 ;;		_I2C1_WriteRead
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591     0E20                     _I2C1_IsBusy:	
 10592                           ;psect for function _I2C1_IsBusy
 10593                           
 10594     0E20                     l3550:	
 10595                           ;incstack = 0
 10596                           ; Regs used in _I2C1_IsBusy: [wreg+status,2+status,0]
 10597                           
 10598                           
 10599                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return i2c1Status.busy || SSP1STATbit
      +                          s.S;
 10600     0E20  01F4               	clrf	_I2C1_IsBusy$646
 10601     0E21  0AF4               	incf	_I2C1_IsBusy$646,f
 10602     0E22                     l3552:
 10603     0E22  0020               	movlb	0	; select bank0
 10604     0E23  0852               	movf	_i2c1Status,w	;volatile
 10605     0E24  1D03               	btfss	3,2
 10606     0E25  2E27               	goto	u1551
 10607     0E26  2E28               	goto	u1550
 10608     0E27                     u1551:
 10609     0E27  2E2E               	goto	l3558
 10610     0E28                     u1550:
 10611     0E28                     l3554:
 10612     0E28  0024               	movlb	4	; select bank4
 10613     0E29  1994               	btfsc	20,3	;volatile
 10614     0E2A  2E2C               	goto	u1561
 10615     0E2B  2E2D               	goto	u1560
 10616     0E2C                     u1561:
 10617     0E2C  2E2E               	goto	l3558
 10618     0E2D                     u1560:
 10619     0E2D                     l3556:
 10620     0E2D  01F4               	clrf	_I2C1_IsBusy$646
 10621     0E2E                     l3558:
 10622     0E2E  0874               	movf	_I2C1_IsBusy$646,w
 10623     0E2F                     l200:
 10624     0E2F  0008               	return
 10625     0E30                     __end_of_I2C1_IsBusy:
 10626                           
 10627                           	psect	text44
 10628     01AC                     __ptext44:	
 10629 ;; *************** function _Parse *****************
 10630 ;; Defined at:
 10631 ;;		line 74 in file "parser.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  data            1    wreg     unsigned char 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  data            1    8[BANK0 ] unsigned char 
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  1    wreg      _Bool 
 10638 ;; Registers used:
 10639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10645 ;;      Params:         0       0       0       0       0       0       0       0
 10646 ;;      Locals:         0       1       0       0       0       0       0       0
 10647 ;;      Temps:          0       2       0       0       0       0       0       0
 10648 ;;      Totals:         0       3       0       0       0       0       0       0
 10649 ;;Total ram usage:        3 bytes
 10650 ;; Hardware stack levels used: 1
 10651 ;; Hardware stack levels required when called: 11
 10652 ;; This function calls:
 10653 ;;		_SendMsg
 10654 ;;		_SendNack
 10655 ;; This function is called by:
 10656 ;;		_main
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660     01AC                     _Parse:	
 10661                           ;psect for function _Parse
 10662                           
 10663                           
 10664                           ;incstack = 0
 10665                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10666                           ;Parse@data stored from wreg
 10667     01AC  0020               	movlb	0	; select bank0
 10668     01AD  00A8               	movwf	Parse@data
 10669     01AE                     l3966:
 10670                           
 10671                           ;parser.c: 75:     switch (parser.m_State) {
 10672     01AE  2A4A               	goto	l4034
 10673     01AF                     l3968:
 10674                           
 10675                           ;parser.c: 77:             if (data == 0x01) {
 10676     01AF  0328               	decf	Parse@data,w
 10677     01B0  1D03               	btfss	3,2
 10678     01B1  29B3               	goto	u2011
 10679     01B2  29B4               	goto	u2010
 10680     01B3                     u2011:
 10681     01B3  29BA               	goto	l3974
 10682     01B4                     u2010:
 10683     01B4                     l3970:
 10684                           
 10685                           ;parser.c: 78:                 parser.m_State = WAIT_ID;
 10686     01B4  0021               	movlb	1	; select bank1
 10687     01B5  01B8               	clrf	_parser^(0+128)
 10688     01B6  0AB8               	incf	_parser^(0+128),f
 10689     01B7                     l3972:
 10690                           
 10691                           ;parser.c: 79:                 parser.m_bSum = 0x00;
 10692     01B7  01BE               	clrf	(_parser^(0+128)+6)
 10693                           
 10694                           ;parser.c: 80:                 parser.m_bDataIndex = 0;
 10695     01B8  01BA               	clrf	(_parser^(0+128)+2)
 10696                           
 10697                           ;parser.c: 81:             } else
 10698     01B9  2A62               	goto	l4036
 10699     01BA                     l3974:
 10700                           
 10701                           ;parser.c: 82:                 SendNack(WRONG_MESSAGE);
 10702     01BA  3002               	movlw	2
 10703     01BB  318D  25B2  3181   	fcall	_SendNack
 10704     01BE  2A62               	goto	l4036
 10705     01BF                     l3976:
 10706                           
 10707                           ;parser.c: 86:             parser.m_MsgID = data;
 10708     01BF  0828               	movf	Parse@data,w
 10709     01C0  0021               	movlb	1	; select bank1
 10710     01C1  00B9               	movwf	(_parser^(0+128)+1)
 10711     01C2                     l3978:
 10712                           
 10713                           ;parser.c: 87:             parser.m_bEcho = 1;
 10714     01C2  01BF               	clrf	(_parser^(0+128)+7)
 10715     01C3  0ABF               	incf	(_parser^(0+128)+7),f
 10716                           
 10717                           ;parser.c: 89:             parser.m_State = WAIT_VALUE;
 10718     01C4  3002               	movlw	2
 10719     01C5  00B8               	movwf	_parser^(0+128)
 10720                           
 10721                           ;parser.c: 91:             switch ((uint8_t) parser.m_MsgID) {
 10722     01C6  29E5               	goto	l3998
 10723     01C7                     l3980:
 10724                           
 10725                           ;parser.c: 95:                     parser.m_bEcho = 0;
 10726     01C7  01BF               	clrf	(_parser^(0+128)+7)
 10727                           
 10728                           ;parser.c: 96:                     parser.m_bReplySize = 0;
 10729     01C8  01BC               	clrf	(_parser^(0+128)+4)
 10730                           
 10731                           ;parser.c: 97:                     parser.m_bDataSize = 0;
 10732     01C9  01BB               	clrf	(_parser^(0+128)+3)
 10733     01CA                     l3982:
 10734                           
 10735                           ;parser.c: 98:                     parser.m_State = WAIT_CKSUM;
 10736     01CA  3003               	movlw	3
 10737     01CB  00B8               	movwf	_parser^(0+128)
 10738                           
 10739                           ;parser.c: 99:                     break;
 10740     01CC  2A62               	goto	l4036
 10741     01CD                     l792:	
 10742                           ;parser.c: 103:                 case NVT_RFDU_SSPAPout:
 10743                           
 10744     01CD                     l3984:
 10745                           
 10746                           ;parser.c: 105:                     parser.m_bEcho = 0;
 10747     01CD  01BF               	clrf	(_parser^(0+128)+7)
 10748     01CE                     l3986:
 10749                           
 10750                           ;parser.c: 107:                     parser.m_bReplySize = 1;
 10751     01CE  01BC               	clrf	(_parser^(0+128)+4)
 10752     01CF  0ABC               	incf	(_parser^(0+128)+4),f
 10753     01D0                     l3988:
 10754                           
 10755                           ;parser.c: 108:                     parser.m_bDataSize = 1;
 10756     01D0  01BB               	clrf	(_parser^(0+128)+3)
 10757     01D1  0ABB               	incf	(_parser^(0+128)+3),f
 10758                           
 10759                           ;parser.c: 109:                     break;
 10760     01D2  2A62               	goto	l4036
 10761     01D3                     l3990:
 10762                           
 10763                           ;parser.c: 112:                     parser.m_bReplySize = 2;
 10764     01D3  3002               	movlw	2
 10765     01D4  00BC               	movwf	(_parser^(0+128)+4)
 10766                           
 10767                           ;parser.c: 113:                     parser.m_bDataSize = 2;
 10768     01D5  3002               	movlw	2
 10769     01D6  00BB               	movwf	(_parser^(0+128)+3)
 10770                           
 10771                           ;parser.c: 114:                     break;
 10772     01D7  2A62               	goto	l4036
 10773     01D8                     l3992:
 10774                           
 10775                           ;parser.c: 117:                     parser.m_bReplySize = 4;
 10776     01D8  3004               	movlw	4
 10777     01D9  00BC               	movwf	(_parser^(0+128)+4)
 10778                           
 10779                           ;parser.c: 118:                     parser.m_bDataSize = 4;
 10780     01DA  3004               	movlw	4
 10781     01DB  00BB               	movwf	(_parser^(0+128)+3)
 10782                           
 10783                           ;parser.c: 119:                     break;
 10784     01DC  2A62               	goto	l4036
 10785     01DD                     l3994:
 10786                           
 10787                           ;parser.c: 122:                     parser.m_bReplySize = 5;
 10788     01DD  3005               	movlw	5
 10789     01DE  00BC               	movwf	(_parser^(0+128)+4)
 10790                           
 10791                           ;parser.c: 123:                     parser.m_bDataSize = 5;
 10792     01DF  3005               	movlw	5
 10793     01E0  00BB               	movwf	(_parser^(0+128)+3)
 10794                           
 10795                           ;parser.c: 124:                     break;
 10796     01E1  2A62               	goto	l4036
 10797     01E2                     l3996:
 10798                           
 10799                           ;parser.c: 127:                     parser.m_State = WAIT_SOM;
 10800     01E2  0021               	movlb	1	; select bank1
 10801     01E3  01B8               	clrf	_parser^(0+128)
 10802                           
 10803                           ;parser.c: 128:             }
 10804     01E4  2A62               	goto	l4036
 10805     01E5                     l3998:
 10806     01E5  0839               	movf	(_parser^(0+128)+1),w
 10807                           
 10808                           ; Switch size 1, requested type "simple"
 10809                           ; Number of cases is 11, Range of values is 1 to 17
 10810                           ; switch strategies available:
 10811                           ; Name         Instructions Cycles
 10812                           ; simple_byte           34    18 (average)
 10813                           ; direct_byte           43     9 (fixed)
 10814                           ; jumptable            263     9 (fixed)
 10815                           ;	Chosen strategy is simple_byte
 10816     01E6  3A01               	xorlw	1	; case 1
 10817     01E7  1903               	skipnz
 10818     01E8  29D3               	goto	l3990
 10819     01E9  3A03               	xorlw	3	; case 2
 10820     01EA  1903               	skipnz
 10821     01EB  29CD               	goto	l792
 10822     01EC  3A01               	xorlw	1	; case 3
 10823     01ED  1903               	skipnz
 10824     01EE  29CD               	goto	l3984
 10825     01EF  3A07               	xorlw	7	; case 4
 10826     01F0  1903               	skipnz
 10827     01F1  29CD               	goto	l3984
 10828     01F2  3A01               	xorlw	1	; case 5
 10829     01F3  1903               	skipnz
 10830     01F4  29C7               	goto	l3980
 10831     01F5  3A03               	xorlw	3	; case 6
 10832     01F6  1903               	skipnz
 10833     01F7  29C7               	goto	l3980
 10834     01F8  3A01               	xorlw	1	; case 7
 10835     01F9  1903               	skipnz
 10836     01FA  29CE               	goto	l3986
 10837     01FB  3A0F               	xorlw	15	; case 8
 10838     01FC  1903               	skipnz
 10839     01FD  29D8               	goto	l3992
 10840     01FE  3A01               	xorlw	1	; case 9
 10841     01FF  1903               	skipnz
 10842     0200  29CD               	goto	l3984
 10843     0201  3A03               	xorlw	3	; case 10
 10844     0202  1903               	skipnz
 10845     0203  29DD               	goto	l3994
 10846     0204  3A1B               	xorlw	27	; case 17
 10847     0205  1903               	skipnz
 10848     0206  29C7               	goto	l3980
 10849     0207  29E2               	goto	l3996
 10850     0208                     l4000:
 10851                           
 10852                           ;parser.c: 132:             parserDataBuffer[parser.m_bDataIndex] = data;
 10853     0208  0021               	movlb	1	; select bank1
 10854     0209  083A               	movf	(_parser^(0+128)+2),w
 10855     020A  3ECA               	addlw	(low (_parserDataBuffer| 0))& (0+255)
 10856     020B  0086               	movwf	6
 10857     020C  0187               	clrf	7
 10858     020D  0020               	movlb	0	; select bank0
 10859     020E  0828               	movf	Parse@data,w
 10860     020F  0081               	movwf	1
 10861     0210                     l4002:
 10862                           
 10863                           ;parser.c: 133:             parser.m_bSum += data;
 10864     0210  0828               	movf	Parse@data,w
 10865     0211  00A6               	movwf	??_Parse
 10866     0212  0826               	movf	??_Parse,w
 10867     0213  0021               	movlb	1	; select bank1
 10868     0214  07BE               	addwf	(_parser^(0+128)+6),f
 10869     0215                     l4004:
 10870                           
 10871                           ;parser.c: 134:             parser.m_bDataIndex++;
 10872     0215  3001               	movlw	1
 10873     0216  0020               	movlb	0	; select bank0
 10874     0217  00A6               	movwf	??_Parse
 10875     0218  0826               	movf	??_Parse,w
 10876     0219  0021               	movlb	1	; select bank1
 10877     021A  07BA               	addwf	(_parser^(0+128)+2),f
 10878     021B                     l4006:
 10879                           
 10880                           ;parser.c: 135:             parser.m_bDataSize--;
 10881     021B  3001               	movlw	1
 10882     021C  02BB               	subwf	(_parser^(0+128)+3),f
 10883     021D                     l4008:
 10884                           
 10885                           ;parser.c: 136:             if (parser.m_bDataSize == 0)
 10886     021D  083B               	movf	(_parser^(0+128)+3),w
 10887     021E  1D03               	btfss	3,2
 10888     021F  2A21               	goto	u2021
 10889     0220  2A22               	goto	u2020
 10890     0221                     u2021:
 10891     0221  2A62               	goto	l4036
 10892     0222                     u2020:
 10893     0222  29CA               	goto	l3982
 10894     0223                     l4012:
 10895                           
 10896                           ;parser.c: 141:             parser.m_bCkSum = data;
 10897     0223  0828               	movf	Parse@data,w
 10898     0224  0021               	movlb	1	; select bank1
 10899     0225  00BD               	movwf	(_parser^(0+128)+5)
 10900     0226                     l4014:
 10901                           
 10902                           ;parser.c: 142:             parser.m_State = WAIT_SOM;
 10903     0226  01B8               	clrf	_parser^(0+128)
 10904     0227                     l4016:
 10905                           
 10906                           ;parser.c: 144:             if (parser.m_bSum == parser.m_bCkSum) {
 10907     0227  083E               	movf	(_parser^(0+128)+6),w
 10908     0228  063D               	xorwf	(_parser^(0+128)+5),w
 10909     0229  1D03               	skipz
 10910     022A  2A2C               	goto	u2031
 10911     022B  2A2D               	goto	u2030
 10912     022C                     u2031:
 10913     022C  2A40               	goto	l4028
 10914     022D                     u2030:
 10915     022D                     l4018:
 10916                           
 10917                           ;parser.c: 145:                 if (parser.m_bEcho)
 10918     022D  083F               	movf	(_parser^(0+128)+7),w
 10919     022E  1903               	btfsc	3,2
 10920     022F  2A31               	goto	u2041
 10921     0230  2A32               	goto	u2040
 10922     0231                     u2041:
 10923     0231  2A3E               	goto	l4022
 10924     0232                     u2040:
 10925     0232                     l4020:
 10926                           
 10927                           ;parser.c: 146:                     SendMsg(parser.m_MsgID, parserDataBuffer, parser.m_b
      +                          ReplySize);
 10928     0232  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
 10929     0233  0020               	movlb	0	; select bank0
 10930     0234  00A0               	movwf	SendMsg@data
 10931     0235  0021               	movlb	1	; select bank1
 10932     0236  083C               	movf	(_parser^(0+128)+4),w
 10933     0237  0020               	movlb	0	; select bank0
 10934     0238  00A1               	movwf	SendMsg@data_len
 10935     0239  0021               	movlb	1	; select bank1
 10936     023A  0839               	movf	(_parser^(0+128)+1),w
 10937     023B  3186  262C  3181   	fcall	_SendMsg
 10938     023E                     l4022:
 10939                           
 10940                           ;parser.c: 148:                 return 1;
 10941     023E  3001               	movlw	1
 10942     023F  2A63               	goto	l804
 10943     0240                     l4028:
 10944                           
 10945                           ;parser.c: 150:                 SendNack(CKSUM_ERR);
 10946     0240  3001               	movlw	1
 10947     0241  318D  25B2  3181   	fcall	_SendNack
 10948     0244  2A62               	goto	l4036
 10949     0245                     l4030:
 10950                           
 10951                           ;parser.c: 154:             SendNack(WRONG_MESSAGE);
 10952     0245  3002               	movlw	2
 10953     0246  318D  25B2  3181   	fcall	_SendNack
 10954     0249  29E2               	goto	l3996
 10955     024A                     l4034:
 10956     024A  0021               	movlb	1	; select bank1
 10957     024B  0838               	movf	_parser^(0+128),w
 10958     024C  0020               	movlb	0	; select bank0
 10959     024D  00A6               	movwf	??_Parse
 10960     024E  01A7               	clrf	??_Parse+1
 10961                           
 10962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10963                           ; Switch size 1, requested type "simple"
 10964                           ; Number of cases is 1, Range of values is 0 to 0
 10965                           ; switch strategies available:
 10966                           ; Name         Instructions Cycles
 10967                           ; simple_byte            4     3 (average)
 10968                           ; direct_byte            8     6 (fixed)
 10969                           ; jumptable            260     6 (fixed)
 10970                           ;	Chosen strategy is simple_byte
 10971     024F  0827               	movf	??_Parse+1,w
 10972     0250  3A00               	xorlw	0	; case 0
 10973     0251  1903               	skipnz
 10974     0252  2A54               	goto	l4220
 10975     0253  2A45               	goto	l4030
 10976     0254                     l4220:
 10977                           
 10978                           ; Switch size 1, requested type "simple"
 10979                           ; Number of cases is 4, Range of values is 0 to 3
 10980                           ; switch strategies available:
 10981                           ; Name         Instructions Cycles
 10982                           ; simple_byte           13     7 (average)
 10983                           ; direct_byte           14     6 (fixed)
 10984                           ; jumptable            260     6 (fixed)
 10985                           ;	Chosen strategy is simple_byte
 10986     0254  0826               	movf	??_Parse,w
 10987     0255  3A00               	xorlw	0	; case 0
 10988     0256  1903               	skipnz
 10989     0257  29AF               	goto	l3968
 10990     0258  3A01               	xorlw	1	; case 1
 10991     0259  1903               	skipnz
 10992     025A  29BF               	goto	l3976
 10993     025B  3A03               	xorlw	3	; case 2
 10994     025C  1903               	skipnz
 10995     025D  2A08               	goto	l4000
 10996     025E  3A01               	xorlw	1	; case 3
 10997     025F  1903               	skipnz
 10998     0260  2A23               	goto	l4012
 10999     0261  2A45               	goto	l4030
 11000     0262                     l4036:
 11001                           
 11002                           ;parser.c: 158:     return 0;
 11003     0262  3000               	movlw	0
 11004     0263                     l804:
 11005     0263  0008               	return
 11006     0264                     __end_of_Parse:
 11007                           
 11008                           	psect	text45
 11009     0DB2                     __ptext45:	
 11010 ;; *************** function _SendNack *****************
 11011 ;; Defined at:
 11012 ;;		line 62 in file "parser.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  error           1    wreg     unsigned char 
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;  error           1    5[BANK0 ] unsigned char 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1    wreg      void 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11026 ;;      Params:         0       0       0       0       0       0       0       0
 11027 ;;      Locals:         0       1       0       0       0       0       0       0
 11028 ;;      Temps:          0       0       0       0       0       0       0       0
 11029 ;;      Totals:         0       1       0       0       0       0       0       0
 11030 ;;Total ram usage:        1 bytes
 11031 ;; Hardware stack levels used: 1
 11032 ;; Hardware stack levels required when called: 10
 11033 ;; This function calls:
 11034 ;;		_SendMsg
 11035 ;; This function is called by:
 11036 ;;		_Parse
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040     0DB2                     _SendNack:	
 11041                           ;psect for function _SendNack
 11042                           
 11043                           
 11044                           ;incstack = 0
 11045                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11046                           ;SendNack@error stored from wreg
 11047     0DB2  0020               	movlb	0	; select bank0
 11048     0DB3  00A5               	movwf	SendNack@error
 11049     0DB4                     l3910:
 11050                           
 11051                           ;parser.c: 63:     SendMsg(RFDU_NVT_NACK, &error, 1);
 11052     0DB4  3025               	movlw	(low (SendNack@error| 0))& (0+255)
 11053     0DB5  00A0               	movwf	SendMsg@data
 11054     0DB6  01A1               	clrf	SendMsg@data_len
 11055     0DB7  0AA1               	incf	SendMsg@data_len,f
 11056     0DB8  300B               	movlw	11
 11057     0DB9  3186  262C  318D   	fcall	_SendMsg
 11058     0DBC                     l776:
 11059     0DBC  0008               	return
 11060     0DBD                     __end_of_SendNack:
 11061                           
 11062                           	psect	text46
 11063     062C                     __ptext46:	
 11064 ;; *************** function _SendMsg *****************
 11065 ;; Defined at:
 11066 ;;		line 36 in file "parser.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  msg_id          1    wreg     unsigned char 
 11069 ;;  data            1    0[BANK0 ] PTR unsigned char 
 11070 ;;		 -> SendNack@error(1), parserDataBuffer(5), ProcessMsg@payload(6), 
 11071 ;;  data_len        1    1[BANK0 ] unsigned char 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  msg_id          1    4[BANK0 ] unsigned char 
 11074 ;;  sum             1    3[BANK0 ] unsigned char 
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  1    wreg      void 
 11077 ;; Registers used:
 11078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11084 ;;      Params:         0       2       0       0       0       0       0       0
 11085 ;;      Locals:         0       2       0       0       0       0       0       0
 11086 ;;      Temps:          0       1       0       0       0       0       0       0
 11087 ;;      Totals:         0       5       0       0       0       0       0       0
 11088 ;;Total ram usage:        5 bytes
 11089 ;; Hardware stack levels used: 1
 11090 ;; Hardware stack levels required when called: 9
 11091 ;; This function calls:
 11092 ;;		_SendSync
 11093 ;; This function is called by:
 11094 ;;		_ProcessMsg
 11095 ;;		_SendNack
 11096 ;;		_Parse
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100     062C                     _SendMsg:	
 11101                           ;psect for function _SendMsg
 11102                           
 11103                           
 11104                           ;incstack = 0
 11105                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11106                           ;SendMsg@msg_id stored from wreg
 11107     062C  0020               	movlb	0	; select bank0
 11108     062D  00A4               	movwf	SendMsg@msg_id
 11109     062E                     l3680:
 11110                           
 11111                           ;parser.c: 37:     uint8_t sum = 0x00;
 11112     062E  01A3               	clrf	SendMsg@sum
 11113     062F                     l3682:
 11114                           
 11115                           ;parser.c: 39:     SendSync(0x01);
 11116     062F  3001               	movlw	1
 11117     0630  318E  2630  3186   	fcall	_SendSync
 11118     0633                     l3684:
 11119                           
 11120                           ;parser.c: 41:     SendSync(msg_id);
 11121     0633  0020               	movlb	0	; select bank0
 11122     0634  0824               	movf	SendMsg@msg_id,w
 11123     0635  318E  2630  3186   	fcall	_SendSync
 11124     0638                     l3686:
 11125                           
 11126                           ;parser.c: 43:     if (msg_id == RFDU_NVT_NACK)
 11127     0638  300B               	movlw	11
 11128     0639  0020               	movlb	0	; select bank0
 11129     063A  0624               	xorwf	SendMsg@msg_id,w
 11130     063B  1D03               	btfss	3,2
 11131     063C  2E3E               	goto	u1741
 11132     063D  2E3F               	goto	u1740
 11133     063E                     u1741:
 11134     063E  2E47               	goto	l3692
 11135     063F                     u1740:
 11136     063F                     l3688:
 11137                           
 11138                           ;parser.c: 44:     {;parser.c: 45:         SendSync(*data);
 11139     063F  0820               	movf	SendMsg@data,w
 11140     0640  0086               	movwf	6
 11141     0641  0187               	clrf	7
 11142     0642  0801               	movf	1,w
 11143     0643  318E  2630  3186   	fcall	_SendSync
 11144     0646  2E67               	goto	l771
 11145     0647                     l3692:
 11146                           
 11147                           ;parser.c: 49:     for (; data_len > 0; data_len--) {
 11148     0647  0821               	movf	SendMsg@data_len,w
 11149     0648  1D03               	btfss	3,2
 11150     0649  2E4B               	goto	u1751
 11151     064A  2E4C               	goto	u1750
 11152     064B                     u1751:
 11153     064B  2E4D               	goto	l3696
 11154     064C                     u1750:
 11155     064C  2E63               	goto	l3706
 11156     064D                     l3696:
 11157                           
 11158                           ;parser.c: 50:         SendSync(*data);
 11159     064D  0820               	movf	SendMsg@data,w
 11160     064E  0086               	movwf	6
 11161     064F  0187               	clrf	7
 11162     0650  0801               	movf	1,w
 11163     0651  318E  2630  3186   	fcall	_SendSync
 11164     0654                     l3698:
 11165                           
 11166                           ;parser.c: 51:         sum += *data;
 11167     0654  0020               	movlb	0	; select bank0
 11168     0655  0820               	movf	SendMsg@data,w
 11169     0656  0086               	movwf	6
 11170     0657  0187               	clrf	7
 11171     0658  0801               	movf	1,w
 11172     0659  00A2               	movwf	??_SendMsg
 11173     065A  0822               	movf	??_SendMsg,w
 11174     065B  07A3               	addwf	SendMsg@sum,f
 11175     065C                     l3700:
 11176                           
 11177                           ;parser.c: 52:         data++;
 11178     065C  3001               	movlw	1
 11179     065D  00A2               	movwf	??_SendMsg
 11180     065E  0822               	movf	??_SendMsg,w
 11181     065F  07A0               	addwf	SendMsg@data,f
 11182     0660                     l3702:
 11183                           
 11184                           ;parser.c: 53:     }
 11185     0660  3001               	movlw	1
 11186     0661  02A1               	subwf	SendMsg@data_len,f
 11187     0662  2E47               	goto	l3692
 11188     0663                     l3706:
 11189                           
 11190                           ;parser.c: 55:     SendSync(sum);
 11191     0663  0823               	movf	SendMsg@sum,w
 11192     0664  318E  2630  3186   	fcall	_SendSync
 11193     0667                     l771:
 11194     0667  0008               	return
 11195     0668                     __end_of_SendMsg:
 11196                           
 11197                           	psect	text47
 11198     0E30                     __ptext47:	
 11199 ;; *************** function _SendSync *****************
 11200 ;; Defined at:
 11201 ;;		line 23 in file "parser.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  data            1    wreg     unsigned char 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  data            1    5[COMMON] unsigned char 
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  1    wreg      void 
 11208 ;; Registers used:
 11209 ;;		wreg, status,2, status,0, pclath, cstack
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11215 ;;      Params:         0       0       0       0       0       0       0       0
 11216 ;;      Locals:         1       0       0       0       0       0       0       0
 11217 ;;      Temps:          0       0       0       0       0       0       0       0
 11218 ;;      Totals:         1       0       0       0       0       0       0       0
 11219 ;;Total ram usage:        1 bytes
 11220 ;; Hardware stack levels used: 1
 11221 ;; Hardware stack levels required when called: 8
 11222 ;; This function calls:
 11223 ;;		_EUSART_IsTxReady
 11224 ;;		_EUSART_Write
 11225 ;; This function is called by:
 11226 ;;		_SendMsg
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230     0E30                     _SendSync:	
 11231                           ;psect for function _SendSync
 11232                           
 11233                           
 11234                           ;incstack = 0
 11235                           ; Regs used in _SendSync: [wreg+status,2+status,0+pclath+cstack]
 11236                           ;SendSync@data stored from wreg
 11237     0E30  00F5               	movwf	SendSync@data
 11238     0E31                     l3570:
 11239                           
 11240                           ;parser.c: 23: void SendSync(uint8_t data);parser.c: 24: {;parser.c: 25:     while(!EUSA
      +                          RT_IsTxReady())
 11241     0E31  2E33               	goto	l3572
 11242     0E32                     l765:
 11243                           
 11244                           ;parser.c: 26:         __nop();
 11245     0E32  0000               	nop
 11246     0E33                     l3572:
 11247                           
 11248                           ;parser.c: 25:     while(!EUSART_IsTxReady())
 11249     0E33  318E  2611  318E   	fcall	_EUSART_IsTxReady
 11250     0E36  3A00               	xorlw	0
 11251     0E37  1903               	skipnz
 11252     0E38  2E3A               	goto	u1571
 11253     0E39  2E3B               	goto	u1570
 11254     0E3A                     u1571:
 11255     0E3A  2E32               	goto	l765
 11256     0E3B                     u1570:
 11257     0E3B                     l3574:
 11258                           
 11259                           ;parser.c: 27:     EUSART_Write(data);
 11260     0E3B  0875               	movf	SendSync@data,w
 11261     0E3C  00F4               	movwf	EUSART_Write@txData
 11262     0E3D  318D  2523  318E   	fcall	_EUSART_Write
 11263     0E40                     l767:
 11264     0E40  0008               	return
 11265     0E41                     __end_of_SendSync:
 11266                           
 11267                           	psect	text48
 11268     0D23                     __ptext48:	
 11269 ;; *************** function _EUSART_Write *****************
 11270 ;; Defined at:
 11271 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  txData          1    4[COMMON] unsigned char 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;		None
 11276 ;; Return value:  Size  Location     Type
 11277 ;;                  1    wreg      void 
 11278 ;; Registers used:
 11279 ;;		wreg
 11280 ;; Tracked objects:
 11281 ;;		On entry : 0/0
 11282 ;;		On exit  : 0/0
 11283 ;;		Unchanged: 0/0
 11284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11285 ;;      Params:         1       0       0       0       0       0       0       0
 11286 ;;      Locals:         0       0       0       0       0       0       0       0
 11287 ;;      Temps:          0       0       0       0       0       0       0       0
 11288 ;;      Totals:         1       0       0       0       0       0       0       0
 11289 ;;Total ram usage:        1 bytes
 11290 ;; Hardware stack levels used: 1
 11291 ;; Hardware stack levels required when called: 7
 11292 ;; This function calls:
 11293 ;;		Nothing
 11294 ;; This function is called by:
 11295 ;;		_SendSync
 11296 ;;		_EUSART_sendMsg
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300     0D23                     _EUSART_Write:	
 11301                           ;psect for function _EUSART_Write
 11302                           
 11303     0D23                     l3536:	
 11304                           ;incstack = 0
 11305                           ; Regs used in _EUSART_Write: [wreg]
 11306                           
 11307                           
 11308                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
 11309     0D23  0874               	movf	EUSART_Write@txData,w
 11310     0D24  0023               	movlb	3	; select bank3
 11311     0D25  009A               	movwf	26	;volatile
 11312     0D26                     l613:
 11313     0D26  0008               	return
 11314     0D27                     __end_of_EUSART_Write:
 11315                           
 11316                           	psect	text49
 11317     0E11                     __ptext49:	
 11318 ;; *************** function _EUSART_IsTxReady *****************
 11319 ;; Defined at:
 11320 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;		None
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      _Bool 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11334 ;;      Params:         0       0       0       0       0       0       0       0
 11335 ;;      Locals:         1       0       0       0       0       0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0
 11337 ;;      Totals:         1       0       0       0       0       0       0       0
 11338 ;;Total ram usage:        1 bytes
 11339 ;; Hardware stack levels used: 1
 11340 ;; Hardware stack levels required when called: 7
 11341 ;; This function calls:
 11342 ;;		Nothing
 11343 ;; This function is called by:
 11344 ;;		_SendSync
 11345 ;;		_EUSART_sendMsg
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349     0E11                     _EUSART_IsTxReady:	
 11350                           ;psect for function _EUSART_IsTxReady
 11351                           
 11352     0E11                     l3524:	
 11353                           ;incstack = 0
 11354                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2]
 11355                           
 11356                           
 11357                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TXIF && TX1STAb
      +                          its.TXEN);
 11358     0E11  01F4               	clrf	_EUSART_IsTxReady$1324
 11359     0E12                     l3526:
 11360     0E12  0020               	movlb	0	; select bank0
 11361     0E13  1E10               	btfss	16,4	;volatile
 11362     0E14  2E16               	goto	u1531
 11363     0E15  2E17               	goto	u1530
 11364     0E16                     u1531:
 11365     0E16  2E1E               	goto	l3532
 11366     0E17                     u1530:
 11367     0E17                     l3528:
 11368     0E17  0023               	movlb	3	; select bank3
 11369     0E18  1E9E               	btfss	30,5	;volatile
 11370     0E19  2E1B               	goto	u1541
 11371     0E1A  2E1C               	goto	u1540
 11372     0E1B                     u1541:
 11373     0E1B  2E1E               	goto	l3532
 11374     0E1C                     u1540:
 11375     0E1C                     l3530:
 11376     0E1C  01F4               	clrf	_EUSART_IsTxReady$1324
 11377     0E1D  0AF4               	incf	_EUSART_IsTxReady$1324,f
 11378     0E1E                     l3532:
 11379     0E1E  0874               	movf	_EUSART_IsTxReady$1324,w
 11380     0E1F                     l597:
 11381     0E1F  0008               	return
 11382     0E20                     __end_of_EUSART_IsTxReady:
 11383                           
 11384                           	psect	text50
 11385     0F7C                     __ptext50:	
 11386 ;; *************** function _EUSART_Read *****************
 11387 ;; Defined at:
 11388 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;		None
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;		None
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      unsigned char 
 11395 ;; Registers used:
 11396 ;;		wreg, status,2, status,0, pclath, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11402 ;;      Params:         0       0       0       0       0       0       0       0
 11403 ;;      Locals:         0       0       0       0       0       0       0       0
 11404 ;;      Temps:          0       0       0       0       0       0       0       0
 11405 ;;      Totals:         0       0       0       0       0       0       0       0
 11406 ;;Total ram usage:        0 bytes
 11407 ;; Hardware stack levels used: 1
 11408 ;; Hardware stack levels required when called: 8
 11409 ;; This function calls:
 11410 ;;		NULL
 11411 ;;		_EUSART_DefaultFramingErrorCallback
 11412 ;;		_EUSART_DefaultOverrunErrorCallback
 11413 ;; This function is called by:
 11414 ;;		_main
 11415 ;; This function uses a non-reentrant model
 11416 ;;
 11417                           
 11418     0F7C                     _EUSART_Read:	
 11419                           ;psect for function _EUSART_Read
 11420                           
 11421     0F7C                     l3170:	
 11422                           ;incstack = 0
 11423                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 11424                           
 11425                           
 11426                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 11427     0F7C  0020               	movlb	0	; select bank0
 11428     0F7D  01E0               	clrf	_eusartRxLastError	;volatile
 11429     0F7E  01E1               	clrf	_eusartRxLastError+1	;volatile
 11430     0F7F                     l3172:
 11431                           
 11432                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 11433     0F7F  0023               	movlb	3	; select bank3
 11434     0F80  1C9D               	btfss	29,1	;volatile
 11435     0F81  2F83               	goto	u1291
 11436     0F82  2F84               	goto	u1290
 11437     0F83                     u1291:
 11438     0F83  2F91               	goto	l3180
 11439     0F84                     u1290:
 11440     0F84                     l3174:
 11441                           
 11442                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 11443     0F84  0020               	movlb	0	; select bank0
 11444     0F85  1560               	bsf	_eusartRxLastError,2	;volatile
 11445     0F86                     l3176:
 11446                           
 11447                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 11448     0F86  085E               	movf	_EUSART_OverrunErrorHandler,w
 11449     0F87  045F               	iorwf	_EUSART_OverrunErrorHandler+1,w
 11450     0F88  1903               	btfsc	3,2
 11451     0F89  2F8B               	goto	u1301
 11452     0F8A  2F8C               	goto	u1300
 11453     0F8B                     u1301:
 11454     0F8B  2F91               	goto	l3180
 11455     0F8C                     u1300:
 11456     0F8C                     l3178:
 11457                           
 11458                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 11459     0F8C  085F               	movf	_EUSART_OverrunErrorHandler+1,w
 11460     0F8D  008A               	movwf	10
 11461     0F8E  085E               	movf	_EUSART_OverrunErrorHandler,w
 11462     0F8F  000A               	callw
 11463     0F90  318F               	pagesel	$
 11464     0F91                     l3180:
 11465                           
 11466                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 11467     0F91  0023               	movlb	3	; select bank3
 11468     0F92  1D1D               	btfss	29,2	;volatile
 11469     0F93  2F95               	goto	u1311
 11470     0F94  2F96               	goto	u1310
 11471     0F95                     u1311:
 11472     0F95  2FA3               	goto	l3188
 11473     0F96                     u1310:
 11474     0F96                     l3182:
 11475                           
 11476                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 11477     0F96  0020               	movlb	0	; select bank0
 11478     0F97  14E0               	bsf	_eusartRxLastError,1	;volatile
 11479     0F98                     l3184:
 11480                           
 11481                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 11482     0F98  0876               	movf	_EUSART_FramingErrorHandler,w
 11483     0F99  0477               	iorwf	_EUSART_FramingErrorHandler+1,w
 11484     0F9A  1903               	btfsc	3,2
 11485     0F9B  2F9D               	goto	u1321
 11486     0F9C  2F9E               	goto	u1320
 11487     0F9D                     u1321:
 11488     0F9D  2FA3               	goto	l3188
 11489     0F9E                     u1320:
 11490     0F9E                     l3186:
 11491                           
 11492                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 11493     0F9E  0877               	movf	_EUSART_FramingErrorHandler+1,w
 11494     0F9F  008A               	movwf	10
 11495     0FA0  0876               	movf	_EUSART_FramingErrorHandler,w
 11496     0FA1  000A               	callw
 11497     0FA2  318F               	pagesel	$
 11498     0FA3                     l3188:
 11499                           
 11500                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 11501     0FA3  0023               	movlb	3	; select bank3
 11502     0FA4  0819               	movf	25,w	;volatile
 11503     0FA5                     l610:
 11504     0FA5  0008               	return
 11505     0FA6                     __end_of_EUSART_Read:
 11506                           
 11507                           	psect	text51
 11508     0D1F                     __ptext51:	
 11509 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 11510 ;; Defined at:
 11511 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;		None
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  1    wreg      void 
 11518 ;; Registers used:
 11519 ;;		None
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11525 ;;      Params:         0       0       0       0       0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0
 11528 ;;      Totals:         0       0       0       0       0       0       0       0
 11529 ;;Total ram usage:        0 bytes
 11530 ;; Hardware stack levels used: 1
 11531 ;; Hardware stack levels required when called: 7
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_EUSART_Initialize
 11536 ;;		_EUSART_Read
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540     0D1F                     _EUSART_DefaultOverrunErrorCallback:	
 11541                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11542                           
 11543     0D1F                     l3016:	
 11544                           ;incstack = 0
 11545                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11546                           
 11547                           
 11548                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 11549     0D1F  0023               	movlb	3	; select bank3
 11550     0D20  121D               	bcf	29,4	;volatile
 11551                           
 11552                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 11553     0D21  161D               	bsf	29,4	;volatile
 11554     0D22                     l619:
 11555     0D22  0008               	return
 11556     0D23                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11557                           
 11558                           	psect	text52
 11559     0003                     __ptext52:	
 11560 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11561 ;; Defined at:
 11562 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;		None
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  1    wreg      void 
 11569 ;; Registers used:
 11570 ;;		None
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11576 ;;      Params:         0       0       0       0       0       0       0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0
 11579 ;;      Totals:         0       0       0       0       0       0       0       0
 11580 ;;Total ram usage:        0 bytes
 11581 ;; Hardware stack levels used: 1
 11582 ;; Hardware stack levels required when called: 7
 11583 ;; This function calls:
 11584 ;;		Nothing
 11585 ;; This function is called by:
 11586 ;;		_EUSART_Initialize
 11587 ;;		_EUSART_Read
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591     0003                     _EUSART_DefaultFramingErrorCallback:	
 11592                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11593                           
 11594     0003                     l616:	
 11595                           ;incstack = 0
 11596                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11597                           
 11598     0003  0008               	return
 11599     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11600                           
 11601                           	psect	text53
 11602     0D35                     __ptext53:	
 11603 ;; *************** function _EUSART_IsRxReady *****************
 11604 ;; Defined at:
 11605 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 11606 ;; Parameters:    Size  Location     Type
 11607 ;;		None
 11608 ;; Auto vars:     Size  Location     Type
 11609 ;;		None
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  1    wreg      _Bool 
 11612 ;; Registers used:
 11613 ;;		wreg, status,2, status,0
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11619 ;;      Params:         0       0       0       0       0       0       0       0
 11620 ;;      Locals:         0       0       0       0       0       0       0       0
 11621 ;;      Temps:          0       0       0       0       0       0       0       0
 11622 ;;      Totals:         0       0       0       0       0       0       0       0
 11623 ;;Total ram usage:        0 bytes
 11624 ;; Hardware stack levels used: 1
 11625 ;; Hardware stack levels required when called: 7
 11626 ;; This function calls:
 11627 ;;		Nothing
 11628 ;; This function is called by:
 11629 ;;		_main
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633     0D35                     _EUSART_IsRxReady:	
 11634                           ;psect for function _EUSART_IsRxReady
 11635                           
 11636     0D35                     l3166:	
 11637                           ;incstack = 0
 11638                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11639                           
 11640                           
 11641                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 11642     0D35  0020               	movlb	0	; select bank0
 11643     0D36  0E10               	swapf	16,w	;volatile
 11644     0D37  0C89               	rrf	9,f
 11645     0D38  3901               	andlw	1
 11646     0D39                     l592:
 11647     0D39  0008               	return
 11648     0D3A                     __end_of_EUSART_IsRxReady:
 11649                           
 11650                           	psect	intentry
 11651     0004                     __pintentry:	
 11652 ;; *************** function _INTERRUPT_InterruptManager *****************
 11653 ;; Defined at:
 11654 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;		None
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;		None
 11659 ;; Return value:  Size  Location     Type
 11660 ;;                  1    wreg      void 
 11661 ;; Registers used:
 11662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11663 ;; Tracked objects:
 11664 ;;		On entry : 0/0
 11665 ;;		On exit  : 0/0
 11666 ;;		Unchanged: 0/0
 11667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11668 ;;      Params:         0       0       0       0       0       0       0       0
 11669 ;;      Locals:         0       0       0       0       0       0       0       0
 11670 ;;      Temps:          0       0       0       0       0       0       0       0
 11671 ;;      Totals:         0       0       0       0       0       0       0       0
 11672 ;;Total ram usage:        0 bytes
 11673 ;; Hardware stack levels used: 1
 11674 ;; Hardware stack levels required when called: 6
 11675 ;; This function calls:
 11676 ;;		_ADC_ISR
 11677 ;;		_I2C1_ERROR_ISR
 11678 ;;		_I2C1_ISR
 11679 ;; This function is called by:
 11680 ;;		Interrupt level 1
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684     0004                     _INTERRUPT_InterruptManager:
 11685                           
 11686                           ;incstack = 0
 11687     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11688                           
 11689                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11690     0005  3180               	pagesel	$
 11691     0006                     i1l3356:
 11692                           
 11693                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11694     0006  1F0B               	btfss	11,6	;volatile
 11695     0007  2809               	goto	u142_21
 11696     0008  280A               	goto	u142_20
 11697     0009                     u142_21:
 11698     0009  2834               	goto	i1l455
 11699     000A                     u142_20:
 11700     000A                     i1l3358:
 11701                           
 11702                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11703     000A  0021               	movlb	1	; select bank1
 11704     000B  1F10               	btfss	16,6	;volatile
 11705     000C  280E               	goto	u143_21
 11706     000D  280F               	goto	u143_20
 11707     000E                     u143_21:
 11708     000E  2818               	goto	i1l448
 11709     000F                     u143_20:
 11710     000F                     i1l3360:
 11711     000F  0020               	movlb	0	; select bank0
 11712     0010  1F10               	btfss	16,6	;volatile
 11713     0011  2813               	goto	u144_21
 11714     0012  2814               	goto	u144_20
 11715     0013                     u144_21:
 11716     0013  2818               	goto	i1l448
 11717     0014                     u144_20:
 11718     0014                     i1l3362:
 11719                           
 11720                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 11721     0014  318E  2603  3180   	fcall	_ADC_ISR
 11722                           
 11723                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 11724     0017  2834               	goto	i1l455
 11725     0018                     i1l448:	
 11726                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 11727                           
 11728     0018  0021               	movlb	1	; select bank1
 11729     0019  1D91               	btfss	17,3	;volatile
 11730     001A  281C               	goto	u145_21
 11731     001B  281D               	goto	u145_20
 11732     001C                     u145_21:
 11733     001C  2826               	goto	i1l450
 11734     001D                     u145_20:
 11735     001D                     i1l3364:
 11736     001D  0020               	movlb	0	; select bank0
 11737     001E  1D91               	btfss	17,3	;volatile
 11738     001F  2821               	goto	u146_21
 11739     0020  2822               	goto	u146_20
 11740     0021                     u146_21:
 11741     0021  2826               	goto	i1l450
 11742     0022                     u146_20:
 11743     0022                     i1l3366:
 11744                           
 11745                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 11746     0022  318D  2517  3180   	fcall	_I2C1_ERROR_ISR
 11747                           
 11748                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 11749     0025  2834               	goto	i1l455
 11750     0026                     i1l450:	
 11751                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 11752                           
 11753     0026  0021               	movlb	1	; select bank1
 11754     0027  1D90               	btfss	16,3	;volatile
 11755     0028  282A               	goto	u147_21
 11756     0029  282B               	goto	u147_20
 11757     002A                     u147_21:
 11758     002A  2834               	goto	i1l449
 11759     002B                     u147_20:
 11760     002B                     i1l3368:
 11761     002B  0020               	movlb	0	; select bank0
 11762     002C  1D90               	btfss	16,3	;volatile
 11763     002D  282F               	goto	u148_21
 11764     002E  2830               	goto	u148_20
 11765     002F                     u148_21:
 11766     002F  2834               	goto	i1l449
 11767     0030                     u148_20:
 11768     0030                     i1l3370:
 11769                           
 11770                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 11771     0030  318D  251B  3180   	fcall	_I2C1_ISR
 11772                           
 11773                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 11774     0033  2834               	goto	i1l455
 11775     0034                     i1l449:
 11776     0034                     i1l455:	
 11777                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 11778                           
 11779     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11780     0035  0009               	retfie
 11781     0036                     __end_of_INTERRUPT_InterruptManager:
 11782                           
 11783                           	psect	text55
 11784     0D1B                     __ptext55:	
 11785 ;; *************** function _I2C1_ISR *****************
 11786 ;; Defined at:
 11787 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;		None
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;		None
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11801 ;;      Params:         0       0       0       0       0       0       0       0
 11802 ;;      Locals:         0       0       0       0       0       0       0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0
 11804 ;;      Totals:         0       0       0       0       0       0       0       0
 11805 ;;Total ram usage:        0 bytes
 11806 ;; Hardware stack levels used: 1
 11807 ;; Hardware stack levels required when called: 5
 11808 ;; This function calls:
 11809 ;;		_I2C1_EventHandler
 11810 ;; This function is called by:
 11811 ;;		_INTERRUPT_InterruptManager
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815     0D1B                     _I2C1_ISR:	
 11816                           ;psect for function _I2C1_ISR
 11817                           
 11818     0D1B                     i1l3160:	
 11819                           ;incstack = 0
 11820                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11821                           
 11822                           
 11823                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 11824     0D1B  3184  24B1  318D   	fcall	_I2C1_EventHandler
 11825     0D1E                     i1l207:
 11826     0D1E  0008               	return
 11827     0D1F                     __end_of_I2C1_ISR:
 11828                           
 11829                           	psect	text56
 11830     04B1                     __ptext56:	
 11831 ;; *************** function _I2C1_EventHandler *****************
 11832 ;; Defined at:
 11833 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;		None
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;		None
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      void 
 11840 ;; Registers used:
 11841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11847 ;;      Params:         0       0       0       0       0       0       0       0
 11848 ;;      Locals:         0       0       0       0       0       0       0       0
 11849 ;;      Temps:          2       0       0       0       0       0       0       0
 11850 ;;      Totals:         2       0       0       0       0       0       0       0
 11851 ;;Total ram usage:        2 bytes
 11852 ;; Hardware stack levels used: 1
 11853 ;; Hardware stack levels required when called: 4
 11854 ;; This function calls:
 11855 ;;		_I2C1_EVENT_ERROR
 11856 ;;		_I2C1_EVENT_IDLE
 11857 ;;		_I2C1_EVENT_NACK
 11858 ;;		_I2C1_EVENT_RESET
 11859 ;;		_I2C1_EVENT_RX
 11860 ;;		_I2C1_EVENT_SEND_RD_ADDR
 11861 ;;		_I2C1_EVENT_SEND_WR_ADDR
 11862 ;;		_I2C1_EVENT_STOP
 11863 ;;		_I2C1_EVENT_TX
 11864 ;;		_I2C1_InterruptClear
 11865 ;;		_I2C1_IsAddr
 11866 ;;		_I2C1_IsData
 11867 ;;		_I2C1_IsNack
 11868 ;; This function is called by:
 11869 ;;		_I2C1_ISR
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873     04B1                     _I2C1_EventHandler:	
 11874                           ;psect for function _I2C1_EventHandler
 11875                           
 11876     04B1                     i1l2918:	
 11877                           ;incstack = 0
 11878                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11879                           
 11880                           
 11881                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 11882     04B1  318C  24E7  3184   	fcall	_I2C1_InterruptClear
 11883     04B4                     i1l2920:
 11884                           
 11885                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 11886     04B4  318D  2577  3184   	fcall	_I2C1_IsAddr
 11887     04B7  3A00               	xorlw	0
 11888     04B8  1903               	skipnz
 11889     04B9  2CBB               	goto	u112_21
 11890     04BA  2CBC               	goto	u112_20
 11891     04BB                     u112_21:
 11892     04BB  2CCA               	goto	i1l2926
 11893     04BC                     u112_20:
 11894     04BC                     i1l2922:
 11895     04BC  318D  254B  3184   	fcall	_I2C1_IsNack
 11896     04BF  3A00               	xorlw	0
 11897     04C0  1903               	skipnz
 11898     04C1  2CC3               	goto	u113_21
 11899     04C2  2CC4               	goto	u113_20
 11900     04C3                     u113_21:
 11901     04C3  2CCA               	goto	i1l2926
 11902     04C4                     u113_20:
 11903     04C4                     i1l2924:
 11904                           
 11905                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 11906     04C4  3005               	movlw	5
 11907     04C5  0020               	movlb	0	; select bank0
 11908     04C6  00DD               	movwf	_i2c1Status+11	;volatile
 11909                           
 11910                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 11911     04C7  3001               	movlw	1
 11912     04C8  00DC               	movwf	_i2c1Status+10	;volatile
 11913                           
 11914                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 11915     04C9  2CDF               	goto	i1l2932
 11916     04CA                     i1l2926:
 11917     04CA  318D  2530  3184   	fcall	_I2C1_IsData
 11918     04CD  3A00               	xorlw	0
 11919     04CE  1903               	skipnz
 11920     04CF  2CD1               	goto	u114_21
 11921     04D0  2CD2               	goto	u114_20
 11922     04D1                     u114_21:
 11923     04D1  2CDF               	goto	i1l2932
 11924     04D2                     u114_20:
 11925     04D2                     i1l2928:
 11926     04D2  318D  254B  3184   	fcall	_I2C1_IsNack
 11927     04D5  3A00               	xorlw	0
 11928     04D6  1903               	skipnz
 11929     04D7  2CD9               	goto	u115_21
 11930     04D8  2CDA               	goto	u115_20
 11931     04D9                     u115_21:
 11932     04D9  2CDF               	goto	i1l2932
 11933     04DA                     u115_20:
 11934     04DA                     i1l2930:
 11935                           
 11936                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 11937     04DA  3005               	movlw	5
 11938     04DB  0020               	movlb	0	; select bank0
 11939     04DC  00DD               	movwf	_i2c1Status+11	;volatile
 11940                           
 11941                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 11942     04DD  3002               	movlw	2
 11943     04DE  00DC               	movwf	_i2c1Status+10	;volatile
 11944     04DF                     i1l2932:
 11945                           
 11946                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 11947     04DF  0020               	movlb	0	; select bank0
 11948     04E0  085D               	movf	_i2c1Status+11,w	;volatile
 11949     04E1  00F2               	movwf	??_I2C1_EventHandler
 11950     04E2  01F3               	clrf	??_I2C1_EventHandler+1
 11951     04E3  35F2               	lslf	??_I2C1_EventHandler,f
 11952     04E4  0DF3               	rlf	??_I2C1_EventHandler+1,f
 11953     04E5  3012               	movlw	low _i2c1_eventTable
 11954     04E6  0772               	addwf	??_I2C1_EventHandler,w
 11955     04E7  0084               	movwf	4
 11956     04E8  3008               	movlw	high _i2c1_eventTable
 11957     04E9  3D73               	addwfc	??_I2C1_EventHandler+1,w
 11958     04EA  3880               	iorlw	128
 11959     04EB  0085               	movwf	5
 11960     04EC  3F01               	moviw [1]fsr0
 11961     04ED  008A               	movwf	10
 11962     04EE  3F00               	moviw [0]fsr0
 11963     04EF  000A               	callw
 11964     04F0  3184               	pagesel	$
 11965     04F1  0020               	movlb	0	; select bank0
 11966     04F2  00DD               	movwf	_i2c1Status+11	;volatile
 11967     04F3                     i1l225:
 11968     04F3  0008               	return
 11969     04F4                     __end_of_I2C1_EventHandler:
 11970                           
 11971                           	psect	text57
 11972     0D4B                     __ptext57:	
 11973 ;; *************** function _I2C1_IsNack *****************
 11974 ;; Defined at:
 11975 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;		None
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;		None
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      _Bool 
 11982 ;; Registers used:
 11983 ;;		wreg, status,2, status,0
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11989 ;;      Params:         0       0       0       0       0       0       0       0
 11990 ;;      Locals:         0       0       0       0       0       0       0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0
 11992 ;;      Totals:         0       0       0       0       0       0       0       0
 11993 ;;Total ram usage:        0 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; This function calls:
 11996 ;;		Nothing
 11997 ;; This function is called by:
 11998 ;;		_I2C1_EventHandler
 11999 ;; This function uses a non-reentrant model
 12000 ;;
 12001                           
 12002     0D4B                     _I2C1_IsNack:	
 12003                           ;psect for function _I2C1_IsNack
 12004                           
 12005     0D4B                     i1l2694:	
 12006                           ;incstack = 0
 12007                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 12008                           
 12009                           
 12010                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 12011     0D4B  0024               	movlb	4	; select bank4
 12012     0D4C  0E16               	swapf	22,w	;volatile
 12013     0D4D  0C89               	rrf	9,f
 12014     0D4E  0C89               	rrf	9,f
 12015     0D4F  3901               	andlw	1
 12016     0D50                     i1l300:
 12017     0D50  0008               	return
 12018     0D51                     __end_of_I2C1_IsNack:
 12019                           
 12020                           	psect	text58
 12021     0D30                     __ptext58:	
 12022 ;; *************** function _I2C1_IsData *****************
 12023 ;; Defined at:
 12024 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      _Bool 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12038 ;;      Params:         0       0       0       0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_I2C1_EventHandler
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051     0D30                     _I2C1_IsData:	
 12052                           ;psect for function _I2C1_IsData
 12053                           
 12054     0D30                     i1l2698:	
 12055                           ;incstack = 0
 12056                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 12057                           
 12058                           
 12059                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 12060     0D30  0024               	movlb	4	; select bank4
 12061     0D31  0E14               	swapf	20,w	;volatile
 12062     0D32  0C89               	rrf	9,f
 12063     0D33  3901               	andlw	1
 12064     0D34                     i1l303:
 12065     0D34  0008               	return
 12066     0D35                     __end_of_I2C1_IsData:
 12067                           
 12068                           	psect	text59
 12069     0D77                     __ptext59:	
 12070 ;; *************** function _I2C1_IsAddr *****************
 12071 ;; Defined at:
 12072 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12073 ;; Parameters:    Size  Location     Type
 12074 ;;		None
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;		None
 12077 ;; Return value:  Size  Location     Type
 12078 ;;                  1    wreg      _Bool 
 12079 ;; Registers used:
 12080 ;;		wreg, status,0
 12081 ;; Tracked objects:
 12082 ;;		On entry : 0/0
 12083 ;;		On exit  : 0/0
 12084 ;;		Unchanged: 0/0
 12085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12086 ;;      Params:         0       0       0       0       0       0       0       0
 12087 ;;      Locals:         0       0       0       0       0       0       0       0
 12088 ;;      Temps:          0       0       0       0       0       0       0       0
 12089 ;;      Totals:         0       0       0       0       0       0       0       0
 12090 ;;Total ram usage:        0 bytes
 12091 ;; Hardware stack levels used: 1
 12092 ;; This function calls:
 12093 ;;		Nothing
 12094 ;; This function is called by:
 12095 ;;		_I2C1_EventHandler
 12096 ;; This function uses a non-reentrant model
 12097 ;;
 12098                           
 12099     0D77                     _I2C1_IsAddr:	
 12100                           ;psect for function _I2C1_IsAddr
 12101                           
 12102     0D77                     i1l2690:	
 12103                           ;incstack = 0
 12104                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12105                           
 12106                           
 12107                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12108     0D77  1003               	clrc
 12109     0D78  0024               	movlb	4	; select bank4
 12110     0D79  1E94               	btfss	20,5	;volatile
 12111     0D7A  1403               	setc
 12112     0D7B  3000               	movlw	0
 12113     0D7C  3D09               	addwfc	9,w
 12114     0D7D                     i1l306:
 12115     0D7D  0008               	return
 12116     0D7E                     __end_of_I2C1_IsAddr:
 12117                           
 12118                           	psect	text60
 12119     0D17                     __ptext60:	
 12120 ;; *************** function _I2C1_ERROR_ISR *****************
 12121 ;; Defined at:
 12122 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;		None
 12125 ;; Auto vars:     Size  Location     Type
 12126 ;;		None
 12127 ;; Return value:  Size  Location     Type
 12128 ;;                  1    wreg      void 
 12129 ;; Registers used:
 12130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12136 ;;      Params:         0       0       0       0       0       0       0       0
 12137 ;;      Locals:         0       0       0       0       0       0       0       0
 12138 ;;      Temps:          0       0       0       0       0       0       0       0
 12139 ;;      Totals:         0       0       0       0       0       0       0       0
 12140 ;;Total ram usage:        0 bytes
 12141 ;; Hardware stack levels used: 1
 12142 ;; Hardware stack levels required when called: 5
 12143 ;; This function calls:
 12144 ;;		_I2C1_ErrorEventHandler
 12145 ;; This function is called by:
 12146 ;;		_INTERRUPT_InterruptManager
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150     0D17                     _I2C1_ERROR_ISR:	
 12151                           ;psect for function _I2C1_ERROR_ISR
 12152                           
 12153     0D17                     i1l3162:	
 12154                           ;incstack = 0
 12155                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12156                           
 12157                           
 12158                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12159     0D17  318E  26E4  318D   	fcall	_I2C1_ErrorEventHandler
 12160     0D1A                     i1l210:
 12161     0D1A  0008               	return
 12162     0D1B                     __end_of_I2C1_ERROR_ISR:
 12163                           
 12164                           	psect	text61
 12165     0EE4                     __ptext61:	
 12166 ;; *************** function _I2C1_ErrorEventHandler *****************
 12167 ;; Defined at:
 12168 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;		None
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;		None
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12182 ;;      Params:         0       0       0       0       0       0       0       0
 12183 ;;      Locals:         0       0       0       0       0       0       0       0
 12184 ;;      Temps:          2       0       0       0       0       0       0       0
 12185 ;;      Totals:         2       0       0       0       0       0       0       0
 12186 ;;Total ram usage:        2 bytes
 12187 ;; Hardware stack levels used: 1
 12188 ;; Hardware stack levels required when called: 4
 12189 ;; This function calls:
 12190 ;;		NULL
 12191 ;;		_I2C1_DefaultCallback
 12192 ;;		_I2C1_EVENT_ERROR
 12193 ;;		_I2C1_EVENT_IDLE
 12194 ;;		_I2C1_EVENT_NACK
 12195 ;;		_I2C1_EVENT_RESET
 12196 ;;		_I2C1_EVENT_RX
 12197 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12198 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12199 ;;		_I2C1_EVENT_STOP
 12200 ;;		_I2C1_EVENT_TX
 12201 ;;		_I2C1_ErrorInterruptClear
 12202 ;; This function is called by:
 12203 ;;		_I2C1_ERROR_ISR
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207     0EE4                     _I2C1_ErrorEventHandler:	
 12208                           ;psect for function _I2C1_ErrorEventHandler
 12209                           
 12210     0EE4                     i1l2934:	
 12211                           ;incstack = 0
 12212                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12213                           
 12214                           
 12215                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12216     0EE4  3006               	movlw	6
 12217     0EE5  0020               	movlb	0	; select bank0
 12218     0EE6  00DD               	movwf	_i2c1Status+11	;volatile
 12219                           
 12220                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12221     0EE7  3003               	movlw	3
 12222     0EE8  00DC               	movwf	_i2c1Status+10	;volatile
 12223     0EE9                     i1l2936:
 12224                           
 12225                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12226     0EE9  318C  24E4  318E   	fcall	_I2C1_ErrorInterruptClear
 12227     0EEC                     i1l2938:
 12228                           
 12229                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12230     0EEC  0020               	movlb	0	; select bank0
 12231     0EED  085D               	movf	_i2c1Status+11,w	;volatile
 12232     0EEE  00F2               	movwf	??_I2C1_ErrorEventHandler
 12233     0EEF  01F3               	clrf	??_I2C1_ErrorEventHandler+1
 12234     0EF0  35F2               	lslf	??_I2C1_ErrorEventHandler,f
 12235     0EF1  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
 12236     0EF2  3012               	movlw	low _i2c1_eventTable
 12237     0EF3  0772               	addwf	??_I2C1_ErrorEventHandler,w
 12238     0EF4  0084               	movwf	4
 12239     0EF5  3008               	movlw	high _i2c1_eventTable
 12240     0EF6  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12241     0EF7  3880               	iorlw	128
 12242     0EF8  0085               	movwf	5
 12243     0EF9  3F01               	moviw [1]fsr0
 12244     0EFA  008A               	movwf	10
 12245     0EFB  3F00               	moviw [0]fsr0
 12246     0EFC  000A               	callw
 12247     0EFD  318E               	pagesel	$
 12248     0EFE  0020               	movlb	0	; select bank0
 12249     0EFF  00DD               	movwf	_i2c1Status+11	;volatile
 12250     0F00                     i1l2940:
 12251                           
 12252                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12253     0F00  0863               	movf	_I2C1_Callback+1,w
 12254     0F01  008A               	movwf	10
 12255     0F02  0862               	movf	_I2C1_Callback,w
 12256     0F03  000A               	callw
 12257     0F04  318E               	pagesel	$
 12258     0F05                     i1l228:
 12259     0F05  0008               	return
 12260     0F06                     __end_of_I2C1_ErrorEventHandler:
 12261                           
 12262                           	psect	text62
 12263     0D70                     __ptext62:	
 12264 ;; *************** function _I2C1_EVENT_RESET *****************
 12265 ;; Defined at:
 12266 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;		None
 12269 ;; Auto vars:     Size  Location     Type
 12270 ;;		None
 12271 ;; Return value:  Size  Location     Type
 12272 ;;                  1    wreg      enum E9559
 12273 ;; Registers used:
 12274 ;;		wreg, status,2, status,0, pclath, cstack
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/0
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12280 ;;      Params:         0       0       0       0       0       0       0       0
 12281 ;;      Locals:         0       0       0       0       0       0       0       0
 12282 ;;      Temps:          0       0       0       0       0       0       0       0
 12283 ;;      Totals:         0       0       0       0       0       0       0       0
 12284 ;;Total ram usage:        0 bytes
 12285 ;; Hardware stack levels used: 1
 12286 ;; Hardware stack levels required when called: 1
 12287 ;; This function calls:
 12288 ;;		_I2C1_BusReset
 12289 ;; This function is called by:
 12290 ;;		_I2C1_EVENT_ERROR
 12291 ;;		_I2C1_EventHandler
 12292 ;;		_I2C1_ErrorEventHandler
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296     0D70                     _I2C1_EVENT_RESET:	
 12297                           ;psect for function _I2C1_EVENT_RESET
 12298                           
 12299     0D70                     i1l2564:	
 12300                           ;incstack = 0
 12301                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12302                           
 12303                           
 12304                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12305     0D70  318C  24FF  318D   	fcall	_I2C1_BusReset
 12306     0D73                     i1l2566:
 12307                           
 12308                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12309     0D73  0020               	movlb	0	; select bank0
 12310     0D74  01D2               	clrf	_i2c1Status	;volatile
 12311     0D75                     i1l2568:
 12312                           
 12313                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12314     0D75  3000               	movlw	0
 12315     0D76                     i1l267:
 12316     0D76  0008               	return
 12317     0D77                     __end_of_I2C1_EVENT_RESET:
 12318                           
 12319                           	psect	text63
 12320     0DA2                     __ptext63:	
 12321 ;; *************** function _I2C1_EVENT_STOP *****************
 12322 ;; Defined at:
 12323 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      enum E9559
 12330 ;; Registers used:
 12331 ;;		wreg, status,2, status,0, pclath, cstack
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/0
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12337 ;;      Params:         0       0       0       0       0       0       0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used: 1
 12343 ;; Hardware stack levels required when called: 2
 12344 ;; This function calls:
 12345 ;;		_I2C1_Close
 12346 ;;		_I2C1_StopSend
 12347 ;; This function is called by:
 12348 ;;		_I2C1_EVENT_TX
 12349 ;;		_I2C1_EVENT_NACK
 12350 ;;		_I2C1_EventHandler
 12351 ;;		_I2C1_ErrorEventHandler
 12352 ;; This function uses a non-reentrant model
 12353 ;;
 12354                           
 12355     0DA2                     _I2C1_EVENT_STOP:	
 12356                           ;psect for function _I2C1_EVENT_STOP
 12357                           
 12358     0DA2                     i1l2542:	
 12359                           ;incstack = 0
 12360                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12361                           
 12362                           
 12363                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12364     0DA2  318C  24EA  318D   	fcall	_I2C1_StopSend
 12365                           
 12366                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12367     0DA5  318E  2641  318D   	fcall	_I2C1_Close
 12368     0DA8                     i1l2544:
 12369                           
 12370                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12371     0DA8  3000               	movlw	0
 12372     0DA9                     i1l264:
 12373     0DA9  0008               	return
 12374     0DAA                     __end_of_I2C1_EVENT_STOP:
 12375                           
 12376                           	psect	text64
 12377     0D45                     __ptext64:	
 12378 ;; *************** function _I2C1_EVENT_ERROR *****************
 12379 ;; Defined at:
 12380 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12381 ;; Parameters:    Size  Location     Type
 12382 ;;		None
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;  retEventStat    1    0[COMMON] enum E9559
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      enum E9559
 12387 ;; Registers used:
 12388 ;;		wreg, status,2, status,0, pclath, cstack
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12394 ;;      Params:         0       0       0       0       0       0       0       0
 12395 ;;      Locals:         1       0       0       0       0       0       0       0
 12396 ;;      Temps:          0       0       0       0       0       0       0       0
 12397 ;;      Totals:         1       0       0       0       0       0       0       0
 12398 ;;Total ram usage:        1 bytes
 12399 ;; Hardware stack levels used: 1
 12400 ;; Hardware stack levels required when called: 2
 12401 ;; This function calls:
 12402 ;;		_I2C1_EVENT_RESET
 12403 ;; This function is called by:
 12404 ;;		_I2C1_EventHandler
 12405 ;;		_I2C1_ErrorEventHandler
 12406 ;; This function uses a non-reentrant model
 12407 ;;
 12408                           
 12409     0D45                     _I2C1_EVENT_ERROR:	
 12410                           ;psect for function _I2C1_EVENT_ERROR
 12411                           
 12412     0D45                     i1l2778:	
 12413                           ;incstack = 0
 12414                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12415                           
 12416     0D45                     i1l2780:
 12417                           
 12418                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12419     0D45  318D  2570  318D   	fcall	_I2C1_EVENT_RESET
 12420     0D48  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12421     0D49                     i1l2782:
 12422                           
 12423                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12424     0D49  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12425     0D4A                     i1l261:
 12426     0D4A  0008               	return
 12427     0D4B                     __end_of_I2C1_EVENT_ERROR:
 12428                           
 12429                           	psect	text65
 12430     0D3F                     __ptext65:	
 12431 ;; *************** function _I2C1_EVENT_NACK *****************
 12432 ;; Defined at:
 12433 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;		None
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;  retEventStat    1    0[COMMON] enum E9559
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      enum E9559
 12440 ;; Registers used:
 12441 ;;		wreg, status,2, status,0, pclath, cstack
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12447 ;;      Params:         0       0       0       0       0       0       0       0
 12448 ;;      Locals:         1       0       0       0       0       0       0       0
 12449 ;;      Temps:          0       0       0       0       0       0       0       0
 12450 ;;      Totals:         1       0       0       0       0       0       0       0
 12451 ;;Total ram usage:        1 bytes
 12452 ;; Hardware stack levels used: 1
 12453 ;; Hardware stack levels required when called: 3
 12454 ;; This function calls:
 12455 ;;		_I2C1_EVENT_STOP
 12456 ;; This function is called by:
 12457 ;;		_I2C1_EventHandler
 12458 ;;		_I2C1_ErrorEventHandler
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462     0D3F                     _I2C1_EVENT_NACK:	
 12463                           ;psect for function _I2C1_EVENT_NACK
 12464                           
 12465     0D3F                     i1l2770:	
 12466                           ;incstack = 0
 12467                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12468                           
 12469     0D3F                     i1l2772:
 12470                           
 12471                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12472     0D3F  318D  25A2  318D   	fcall	_I2C1_EVENT_STOP
 12473     0D42  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12474     0D43                     i1l2774:
 12475                           
 12476                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12477     0D43  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12478     0D44                     i1l258:
 12479     0D44  0008               	return
 12480     0D45                     __end_of_I2C1_EVENT_NACK:
 12481                           
 12482                           	psect	text66
 12483     06DE                     __ptext66:	
 12484 ;; *************** function _I2C1_EVENT_RX *****************
 12485 ;; Defined at:
 12486 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;		None
 12489 ;; Auto vars:     Size  Location     Type
 12490 ;;  retEventStat    1    1[COMMON] enum E9559
 12491 ;; Return value:  Size  Location     Type
 12492 ;;                  1    wreg      enum E9559
 12493 ;; Registers used:
 12494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12495 ;; Tracked objects:
 12496 ;;		On entry : 0/0
 12497 ;;		On exit  : 0/0
 12498 ;;		Unchanged: 0/0
 12499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12500 ;;      Params:         0       0       0       0       0       0       0       0
 12501 ;;      Locals:         1       0       0       0       0       0       0       0
 12502 ;;      Temps:          1       0       0       0       0       0       0       0
 12503 ;;      Totals:         2       0       0       0       0       0       0       0
 12504 ;;Total ram usage:        2 bytes
 12505 ;; Hardware stack levels used: 1
 12506 ;; Hardware stack levels required when called: 1
 12507 ;; This function calls:
 12508 ;;		_I2C1_AckSend
 12509 ;;		_I2C1_DataReceive
 12510 ;;		_I2C1_IsRxBufFull
 12511 ;;		_I2C1_NackSend
 12512 ;;		_I2C1_ReceiveEnable
 12513 ;;		_I2C1_RestartDisable
 12514 ;; This function is called by:
 12515 ;;		_I2C1_EventHandler
 12516 ;;		_I2C1_ErrorEventHandler
 12517 ;; This function uses a non-reentrant model
 12518 ;;
 12519                           
 12520     06DE                     _I2C1_EVENT_RX:	
 12521                           ;psect for function _I2C1_EVENT_RX
 12522                           
 12523     06DE                     i1l2744:	
 12524                           ;incstack = 0
 12525                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12526                           
 12527                           
 12528                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12529     06DE  3004               	movlw	4
 12530     06DF  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12531     06E0                     i1l2746:
 12532                           
 12533                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12534     06E0  318D  250B  3186   	fcall	_I2C1_IsRxBufFull
 12535     06E3  3A00               	xorlw	0
 12536     06E4  1903               	skipnz
 12537     06E5  2EE7               	goto	u96_21
 12538     06E6  2EE8               	goto	u96_20
 12539     06E7                     u96_21:
 12540     06E7  2F12               	goto	i1l2764
 12541     06E8                     u96_20:
 12542     06E8                     i1l2748:
 12543                           
 12544                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12545     06E8  0020               	movlb	0	; select bank0
 12546     06E9  0859               	movf	_i2c1Status+7,w	;volatile
 12547     06EA  045A               	iorwf	_i2c1Status+8,w	;volatile
 12548     06EB  1903               	btfsc	3,2
 12549     06EC  2EEE               	goto	u97_21
 12550     06ED  2EEF               	goto	u97_20
 12551     06EE                     u97_21:
 12552     06EE  2EFF               	goto	i1l2756
 12553     06EF                     u97_20:
 12554     06EF                     i1l2750:
 12555                           
 12556                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12557     06EF  0858               	movf	low ((_i2c1Status| 0+6)),w	;volatile
 12558     06F0  0086               	movwf	6
 12559     06F1  0187               	clrf	7
 12560     06F2  318C  24ED  3186   	fcall	_I2C1_DataReceive
 12561     06F5  0081               	movwf	1
 12562     06F6                     i1l2752:
 12563     06F6  3001               	movlw	1
 12564     06F7  00F0               	movwf	??_I2C1_EVENT_RX
 12565     06F8  0870               	movf	??_I2C1_EVENT_RX,w
 12566     06F9  0020               	movlb	0	; select bank0
 12567     06FA  07D8               	addwf	low ((_i2c1Status| 0+6)),f	;volatile
 12568     06FB                     i1l2754:
 12569                           
 12570                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12571     06FB  3001               	movlw	1
 12572     06FC  02D9               	subwf	_i2c1Status+7,f	;volatile
 12573     06FD  3000               	movlw	0
 12574     06FE  3BDA               	subwfb	_i2c1Status+8,f	;volatile
 12575     06FF                     i1l2756:
 12576                           
 12577                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12578     06FF  0859               	movf	_i2c1Status+7,w	;volatile
 12579     0700  045A               	iorwf	_i2c1Status+8,w	;volatile
 12580     0701  1903               	btfsc	3,2
 12581     0702  2F04               	goto	u98_21
 12582     0703  2F05               	goto	u98_20
 12583     0704                     u98_21:
 12584     0704  2F09               	goto	i1l2760
 12585     0705                     u98_20:
 12586     0705                     i1l2758:
 12587                           
 12588                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12589     0705  318D  2507  3186   	fcall	_I2C1_AckSend
 12590                           
 12591                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12592     0708  2F15               	goto	i1l2766
 12593     0709                     i1l2760:
 12594                           
 12595                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12596     0709  318C  24F3  3186   	fcall	_I2C1_RestartDisable
 12597                           
 12598                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12599     070C  318D  250F  3186   	fcall	_I2C1_NackSend
 12600     070F                     i1l2762:
 12601                           
 12602                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12603     070F  3007               	movlw	7
 12604     0710  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12605     0711  2F15               	goto	i1l2766
 12606     0712                     i1l2764:
 12607                           
 12608                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12609     0712  318C  24F0  3186   	fcall	_I2C1_ReceiveEnable
 12610     0715                     i1l2766:
 12611                           
 12612                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12613     0715  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12614     0716                     i1l255:
 12615     0716  0008               	return
 12616     0717                     __end_of_I2C1_EVENT_RX:
 12617                           
 12618                           	psect	text67
 12619     0D69                     __ptext67:	
 12620 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12621 ;; Defined at:
 12622 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;		None
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;		None
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      enum E9559
 12629 ;; Registers used:
 12630 ;;		wreg, status,2, status,0, pclath, cstack
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12636 ;;      Params:         0       0       0       0       0       0       0       0
 12637 ;;      Locals:         0       0       0       0       0       0       0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0
 12639 ;;      Totals:         0       0       0       0       0       0       0       0
 12640 ;;Total ram usage:        0 bytes
 12641 ;; Hardware stack levels used: 1
 12642 ;; Hardware stack levels required when called: 1
 12643 ;; This function calls:
 12644 ;;		_I2C1_DataTransmit
 12645 ;; This function is called by:
 12646 ;;		_I2C1_EventHandler
 12647 ;;		_I2C1_ErrorEventHandler
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651     0D69                     _I2C1_EVENT_SEND_WR_ADDR:	
 12652                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12653                           
 12654     0D69                     i1l2714:	
 12655                           ;incstack = 0
 12656                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12657                           
 12658                           
 12659                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12660     0D69  0020               	movlb	0	; select bank0
 12661     0D6A  3553               	lslf	_i2c1Status+1,w	;volatile
 12662     0D6B  318D  252B  318D   	fcall	_I2C1_DataTransmit
 12663     0D6E                     i1l2716:
 12664                           
 12665                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12666     0D6E  3003               	movlw	3
 12667     0D6F                     i1l240:
 12668     0D6F  0008               	return
 12669     0D70                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12670                           
 12671                           	psect	text68
 12672     0D9A                     __ptext68:	
 12673 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12674 ;; Defined at:
 12675 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;		None
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;		None
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  1    wreg      enum E9559
 12682 ;; Registers used:
 12683 ;;		wreg, status,2, status,0, pclath, cstack
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12689 ;;      Params:         0       0       0       0       0       0       0       0
 12690 ;;      Locals:         0       0       0       0       0       0       0       0
 12691 ;;      Temps:          0       0       0       0       0       0       0       0
 12692 ;;      Totals:         0       0       0       0       0       0       0       0
 12693 ;;Total ram usage:        0 bytes
 12694 ;; Hardware stack levels used: 1
 12695 ;; Hardware stack levels required when called: 1
 12696 ;; This function calls:
 12697 ;;		_I2C1_DataTransmit
 12698 ;; This function is called by:
 12699 ;;		_I2C1_EventHandler
 12700 ;;		_I2C1_ErrorEventHandler
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704     0D9A                     _I2C1_EVENT_SEND_RD_ADDR:	
 12705                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12706                           
 12707     0D9A                     i1l2708:	
 12708                           ;incstack = 0
 12709                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12710                           
 12711                           
 12712                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12713     0D9A  1403               	setc
 12714     0D9B  0020               	movlb	0	; select bank0
 12715     0D9C  0D53               	rlf	_i2c1Status+1,w	;volatile
 12716     0D9D  318D  252B  318D   	fcall	_I2C1_DataTransmit
 12717     0DA0                     i1l2710:
 12718                           
 12719                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 12720     0DA0  3004               	movlw	4
 12721     0DA1                     i1l237:
 12722     0DA1  0008               	return
 12723     0DA2                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 12724                           
 12725                           	psect	text69
 12726     0D13                     __ptext69:	
 12727 ;; *************** function _I2C1_EVENT_IDLE *****************
 12728 ;; Defined at:
 12729 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;		None
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;		None
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  1    wreg      enum E9559
 12736 ;; Registers used:
 12737 ;;		wreg, status,2
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12743 ;;      Params:         0       0       0       0       0       0       0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0
 12745 ;;      Temps:          0       0       0       0       0       0       0       0
 12746 ;;      Totals:         0       0       0       0       0       0       0       0
 12747 ;;Total ram usage:        0 bytes
 12748 ;; Hardware stack levels used: 1
 12749 ;; This function calls:
 12750 ;;		Nothing
 12751 ;; This function is called by:
 12752 ;;		_I2C1_EventHandler
 12753 ;;		_I2C1_ErrorEventHandler
 12754 ;; This function uses a non-reentrant model
 12755 ;;
 12756                           
 12757     0D13                     _I2C1_EVENT_IDLE:	
 12758                           ;psect for function _I2C1_EVENT_IDLE
 12759                           
 12760     0D13                     i1l2702:	
 12761                           ;incstack = 0
 12762                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 12763                           
 12764                           
 12765                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 12766     0D13  0020               	movlb	0	; select bank0
 12767     0D14  01D2               	clrf	_i2c1Status	;volatile
 12768     0D15                     i1l2704:
 12769                           
 12770                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 12771     0D15  3008               	movlw	8
 12772     0D16                     i1l234:
 12773     0D16  0008               	return
 12774     0D17                     __end_of_I2C1_EVENT_IDLE:
 12775                           
 12776                           	psect	text70
 12777     0FA6                     __ptext70:	
 12778 ;; *************** function _I2C1_EVENT_TX *****************
 12779 ;; Defined at:
 12780 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;		None
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;  retEventStat    1    1[COMMON] enum E9559
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1    wreg      enum E9559
 12787 ;; Registers used:
 12788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12794 ;;      Params:         0       0       0       0       0       0       0       0
 12795 ;;      Locals:         1       0       0       0       0       0       0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0
 12797 ;;      Totals:         1       0       0       0       0       0       0       0
 12798 ;;Total ram usage:        1 bytes
 12799 ;; Hardware stack levels used: 1
 12800 ;; Hardware stack levels required when called: 3
 12801 ;; This function calls:
 12802 ;;		_I2C1_DataTransmit
 12803 ;;		_I2C1_EVENT_STOP
 12804 ;;		_I2C1_RestartEnable
 12805 ;; This function is called by:
 12806 ;;		_I2C1_EventHandler
 12807 ;;		_I2C1_ErrorEventHandler
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811     0FA6                     _I2C1_EVENT_TX:	
 12812                           ;psect for function _I2C1_EVENT_TX
 12813                           
 12814     0FA6                     i1l2720:	
 12815                           ;incstack = 0
 12816                           ; Regs used in _I2C1_EVENT_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12817                           
 12818     0FA6                     i1l2722:
 12819                           
 12820                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 12821     0FA6  0020               	movlb	0	; select bank0
 12822     0FA7  0856               	movf	_i2c1Status+4,w	;volatile
 12823     0FA8  0457               	iorwf	_i2c1Status+5,w	;volatile
 12824     0FA9  1903               	btfsc	3,2
 12825     0FAA  2FAC               	goto	u94_21
 12826     0FAB  2FAD               	goto	u94_20
 12827     0FAC                     u94_21:
 12828     0FAC  2FC0               	goto	i1l2730
 12829     0FAD                     u94_20:
 12830     0FAD                     i1l2724:
 12831                           
 12832                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 12833     0FAD  3001               	movlw	1
 12834     0FAE  02D6               	subwf	_i2c1Status+4,f	;volatile
 12835     0FAF  3000               	movlw	0
 12836     0FB0  3BD7               	subwfb	_i2c1Status+5,f	;volatile
 12837     0FB1                     i1l2726:
 12838                           
 12839                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 12840     0FB1  3003               	movlw	3
 12841     0FB2  3E52               	addlw	(low (_i2c1Status| 0))& (0+255)
 12842     0FB3  0086               	movwf	6
 12843     0FB4  0187               	clrf	7
 12844     0FB5  3F40               	moviw [0]fsr1
 12845     0FB6  0084               	movwf	4
 12846     0FB7  0185               	clrf	5
 12847     0FB8  0A81               	incf	1,f
 12848     0FB9  0800               	movf	0,w
 12849     0FBA  318D  252B  318F   	fcall	_I2C1_DataTransmit
 12850     0FBD                     i1l2728:
 12851                           
 12852                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 12853     0FBD  3003               	movlw	3
 12854     0FBE  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12855                           
 12856                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 12857     0FBF  2FD0               	goto	i1l2740
 12858     0FC0                     i1l2730:
 12859                           
 12860                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 12861     0FC0  085B               	movf	_i2c1Status+9,w	;volatile
 12862     0FC1  1903               	btfsc	3,2
 12863     0FC2  2FC4               	goto	u95_21
 12864     0FC3  2FC5               	goto	u95_20
 12865     0FC4                     u95_21:
 12866     0FC4  2FCC               	goto	i1l2738
 12867     0FC5                     u95_20:
 12868     0FC5                     i1l2732:
 12869                           
 12870                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 12871     0FC5  01DB               	clrf	_i2c1Status+9	;volatile
 12872     0FC6                     i1l2734:
 12873                           
 12874                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 12875     0FC6  318C  24F6  318F   	fcall	_I2C1_RestartEnable
 12876     0FC9                     i1l2736:
 12877                           
 12878                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 12879     0FC9  01F1               	clrf	I2C1_EVENT_TX@retEventState
 12880     0FCA  0AF1               	incf	I2C1_EVENT_TX@retEventState,f
 12881                           
 12882                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 12883     0FCB  2FD0               	goto	i1l2740
 12884     0FCC                     i1l2738:
 12885                           
 12886                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 12887     0FCC  318D  25A2  318F   	fcall	_I2C1_EVENT_STOP
 12888     0FCF  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12889     0FD0                     i1l2740:
 12890                           
 12891                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 12892     0FD0  0871               	movf	I2C1_EVENT_TX@retEventState,w
 12893     0FD1                     i1l247:
 12894     0FD1  0008               	return
 12895     0FD2                     __end_of_I2C1_EVENT_TX:
 12896                           
 12897                           	psect	text71
 12898     0CF6                     __ptext71:	
 12899 ;; *************** function _I2C1_RestartEnable *****************
 12900 ;; Defined at:
 12901 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		None
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12915 ;;      Params:         0       0       0       0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0       0
 12918 ;;      Totals:         0       0       0       0       0       0       0       0
 12919 ;;Total ram usage:        0 bytes
 12920 ;; Hardware stack levels used: 1
 12921 ;; This function calls:
 12922 ;;		Nothing
 12923 ;; This function is called by:
 12924 ;;		_I2C1_EVENT_TX
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928     0CF6                     _I2C1_RestartEnable:	
 12929                           ;psect for function _I2C1_RestartEnable
 12930                           
 12931     0CF6                     i1l2540:	
 12932                           ;incstack = 0
 12933                           ; Regs used in _I2C1_RestartEnable: []
 12934                           
 12935                           
 12936                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 12937     0CF6  0024               	movlb	4	; select bank4
 12938     0CF7  1496               	bsf	22,1	;volatile
 12939     0CF8                     i1l282:
 12940     0CF8  0008               	return
 12941     0CF9                     __end_of_I2C1_RestartEnable:
 12942                           
 12943                           	psect	text72
 12944     0D2B                     __ptext72:	
 12945 ;; *************** function _I2C1_DataTransmit *****************
 12946 ;; Defined at:
 12947 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;  data            1    wreg     unsigned char 
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;  data            1    0[COMMON] unsigned char 
 12952 ;; Return value:  Size  Location     Type
 12953 ;;                  1    wreg      void 
 12954 ;; Registers used:
 12955 ;;		wreg
 12956 ;; Tracked objects:
 12957 ;;		On entry : 0/0
 12958 ;;		On exit  : 0/0
 12959 ;;		Unchanged: 0/0
 12960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12961 ;;      Params:         0       0       0       0       0       0       0       0
 12962 ;;      Locals:         1       0       0       0       0       0       0       0
 12963 ;;      Temps:          0       0       0       0       0       0       0       0
 12964 ;;      Totals:         1       0       0       0       0       0       0       0
 12965 ;;Total ram usage:        1 bytes
 12966 ;; Hardware stack levels used: 1
 12967 ;; This function calls:
 12968 ;;		Nothing
 12969 ;; This function is called by:
 12970 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12971 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12972 ;;		_I2C1_EVENT_TX
 12973 ;; This function uses a non-reentrant model
 12974 ;;
 12975                           
 12976     0D2B                     _I2C1_DataTransmit:	
 12977                           ;psect for function _I2C1_DataTransmit
 12978                           
 12979                           
 12980                           ;incstack = 0
 12981                           ; Regs used in _I2C1_DataTransmit: [wreg]
 12982                           ;I2C1_DataTransmit@data stored from wreg
 12983     0D2B  00F0               	movwf	I2C1_DataTransmit@data
 12984     0D2C                     i1l2538:
 12985                           
 12986                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 12987     0D2C  0870               	movf	I2C1_DataTransmit@data,w
 12988     0D2D  0024               	movlb	4	; select bank4
 12989     0D2E  0091               	movwf	17	;volatile
 12990     0D2F                     i1l273:
 12991     0D2F  0008               	return
 12992     0D30                     __end_of_I2C1_DataTransmit:
 12993                           
 12994                           	psect	text73
 12995     0CF3                     __ptext73:	
 12996 ;; *************** function _I2C1_RestartDisable *****************
 12997 ;; Defined at:
 12998 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;		None
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;		None
 13003 ;; Return value:  Size  Location     Type
 13004 ;;                  1    wreg      void 
 13005 ;; Registers used:
 13006 ;;		None
 13007 ;; Tracked objects:
 13008 ;;		On entry : 0/0
 13009 ;;		On exit  : 0/0
 13010 ;;		Unchanged: 0/0
 13011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13012 ;;      Params:         0       0       0       0       0       0       0       0
 13013 ;;      Locals:         0       0       0       0       0       0       0       0
 13014 ;;      Temps:          0       0       0       0       0       0       0       0
 13015 ;;      Totals:         0       0       0       0       0       0       0       0
 13016 ;;Total ram usage:        0 bytes
 13017 ;; Hardware stack levels used: 1
 13018 ;; This function calls:
 13019 ;;		Nothing
 13020 ;; This function is called by:
 13021 ;;		_I2C1_EVENT_RX
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025     0CF3                     _I2C1_RestartDisable:	
 13026                           ;psect for function _I2C1_RestartDisable
 13027                           
 13028     0CF3                     i1l2558:	
 13029                           ;incstack = 0
 13030                           ; Regs used in _I2C1_RestartDisable: []
 13031                           
 13032                           
 13033                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 13034     0CF3  0024               	movlb	4	; select bank4
 13035     0CF4  1096               	bcf	22,1	;volatile
 13036     0CF5                     i1l285:
 13037     0CF5  0008               	return
 13038     0CF6                     __end_of_I2C1_RestartDisable:
 13039                           
 13040                           	psect	text74
 13041     0CF0                     __ptext74:	
 13042 ;; *************** function _I2C1_ReceiveEnable *****************
 13043 ;; Defined at:
 13044 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;		None
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		None
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13058 ;;      Params:         0       0       0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used: 1
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_I2C1_EVENT_RX
 13068 ;; This function uses a non-reentrant model
 13069 ;;
 13070                           
 13071     0CF0                     _I2C1_ReceiveEnable:	
 13072                           ;psect for function _I2C1_ReceiveEnable
 13073                           
 13074     0CF0                     i1l2562:	
 13075                           ;incstack = 0
 13076                           ; Regs used in _I2C1_ReceiveEnable: []
 13077                           
 13078                           
 13079                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13080     0CF0  0024               	movlb	4	; select bank4
 13081     0CF1  1596               	bsf	22,3	;volatile
 13082     0CF2                     i1l279:
 13083     0CF2  0008               	return
 13084     0CF3                     __end_of_I2C1_ReceiveEnable:
 13085                           
 13086                           	psect	text75
 13087     0D0F                     __ptext75:	
 13088 ;; *************** function _I2C1_NackSend *****************
 13089 ;; Defined at:
 13090 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;		None
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;		None
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      void 
 13097 ;; Registers used:
 13098 ;;		None
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13104 ;;      Params:         0       0       0       0       0       0       0       0
 13105 ;;      Locals:         0       0       0       0       0       0       0       0
 13106 ;;      Temps:          0       0       0       0       0       0       0       0
 13107 ;;      Totals:         0       0       0       0       0       0       0       0
 13108 ;;Total ram usage:        0 bytes
 13109 ;; Hardware stack levels used: 1
 13110 ;; This function calls:
 13111 ;;		Nothing
 13112 ;; This function is called by:
 13113 ;;		_I2C1_EVENT_RX
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117     0D0F                     _I2C1_NackSend:	
 13118                           ;psect for function _I2C1_NackSend
 13119                           
 13120     0D0F                     i1l2560:	
 13121                           ;incstack = 0
 13122                           ; Regs used in _I2C1_NackSend: []
 13123                           
 13124                           
 13125                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13126     0D0F  0024               	movlb	4	; select bank4
 13127     0D10  1696               	bsf	22,5	;volatile
 13128                           
 13129                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13130     0D11  1616               	bsf	22,4	;volatile
 13131     0D12                     i1l297:
 13132     0D12  0008               	return
 13133     0D13                     __end_of_I2C1_NackSend:
 13134                           
 13135                           	psect	text76
 13136     0D0B                     __ptext76:	
 13137 ;; *************** function _I2C1_IsRxBufFull *****************
 13138 ;; Defined at:
 13139 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;		None
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;		None
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  1    wreg      _Bool 
 13146 ;; Registers used:
 13147 ;;		wreg, status,2, status,0
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13153 ;;      Params:         0       0       0       0       0       0       0       0
 13154 ;;      Locals:         0       0       0       0       0       0       0       0
 13155 ;;      Temps:          0       0       0       0       0       0       0       0
 13156 ;;      Totals:         0       0       0       0       0       0       0       0
 13157 ;;Total ram usage:        0 bytes
 13158 ;; Hardware stack levels used: 1
 13159 ;; This function calls:
 13160 ;;		Nothing
 13161 ;; This function is called by:
 13162 ;;		_I2C1_EVENT_RX
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166     0D0B                     _I2C1_IsRxBufFull:	
 13167                           ;psect for function _I2C1_IsRxBufFull
 13168                           
 13169     0D0B                     i1l2548:	
 13170                           ;incstack = 0
 13171                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13172                           
 13173                           
 13174                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13175     0D0B  0024               	movlb	4	; select bank4
 13176     0D0C  0814               	movf	20,w	;volatile
 13177     0D0D  3901               	andlw	1
 13178     0D0E                     i1l309:
 13179     0D0E  0008               	return
 13180     0D0F                     __end_of_I2C1_IsRxBufFull:
 13181                           
 13182                           	psect	text77
 13183     0CED                     __ptext77:	
 13184 ;; *************** function _I2C1_DataReceive *****************
 13185 ;; Defined at:
 13186 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;		None
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;		None
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  1    wreg      unsigned char 
 13193 ;; Registers used:
 13194 ;;		wreg
 13195 ;; Tracked objects:
 13196 ;;		On entry : 0/0
 13197 ;;		On exit  : 0/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13200 ;;      Params:         0       0       0       0       0       0       0       0
 13201 ;;      Locals:         0       0       0       0       0       0       0       0
 13202 ;;      Temps:          0       0       0       0       0       0       0       0
 13203 ;;      Totals:         0       0       0       0       0       0       0       0
 13204 ;;Total ram usage:        0 bytes
 13205 ;; Hardware stack levels used: 1
 13206 ;; This function calls:
 13207 ;;		Nothing
 13208 ;; This function is called by:
 13209 ;;		_I2C1_EVENT_RX
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213     0CED                     _I2C1_DataReceive:	
 13214                           ;psect for function _I2C1_DataReceive
 13215                           
 13216     0CED                     i1l2552:	
 13217                           ;incstack = 0
 13218                           ; Regs used in _I2C1_DataReceive: [wreg]
 13219                           
 13220                           
 13221                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13222     0CED  0024               	movlb	4	; select bank4
 13223     0CEE  0811               	movf	17,w	;volatile
 13224     0CEF                     i1l270:
 13225     0CEF  0008               	return
 13226     0CF0                     __end_of_I2C1_DataReceive:
 13227                           
 13228                           	psect	text78
 13229     0D07                     __ptext78:	
 13230 ;; *************** function _I2C1_AckSend *****************
 13231 ;; Defined at:
 13232 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13233 ;; Parameters:    Size  Location     Type
 13234 ;;		None
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;		None
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		None
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13246 ;;      Params:         0       0       0       0       0       0       0       0
 13247 ;;      Locals:         0       0       0       0       0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0
 13249 ;;      Totals:         0       0       0       0       0       0       0       0
 13250 ;;Total ram usage:        0 bytes
 13251 ;; Hardware stack levels used: 1
 13252 ;; This function calls:
 13253 ;;		Nothing
 13254 ;; This function is called by:
 13255 ;;		_I2C1_EVENT_RX
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           
 13259     0D07                     _I2C1_AckSend:	
 13260                           ;psect for function _I2C1_AckSend
 13261                           
 13262     0D07                     i1l2556:	
 13263                           ;incstack = 0
 13264                           ; Regs used in _I2C1_AckSend: []
 13265                           
 13266                           
 13267                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13268     0D07  0024               	movlb	4	; select bank4
 13269     0D08  1296               	bcf	22,5	;volatile
 13270                           
 13271                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13272     0D09  1616               	bsf	22,4	;volatile
 13273     0D0A                     i1l294:
 13274     0D0A  0008               	return
 13275     0D0B                     __end_of_I2C1_AckSend:
 13276                           
 13277                           	psect	text79
 13278     0CEA                     __ptext79:	
 13279 ;; *************** function _I2C1_StopSend *****************
 13280 ;; Defined at:
 13281 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13282 ;; Parameters:    Size  Location     Type
 13283 ;;		None
 13284 ;; Auto vars:     Size  Location     Type
 13285 ;;		None
 13286 ;; Return value:  Size  Location     Type
 13287 ;;                  1    wreg      void 
 13288 ;; Registers used:
 13289 ;;		None
 13290 ;; Tracked objects:
 13291 ;;		On entry : 0/0
 13292 ;;		On exit  : 0/0
 13293 ;;		Unchanged: 0/0
 13294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13295 ;;      Params:         0       0       0       0       0       0       0       0
 13296 ;;      Locals:         0       0       0       0       0       0       0       0
 13297 ;;      Temps:          0       0       0       0       0       0       0       0
 13298 ;;      Totals:         0       0       0       0       0       0       0       0
 13299 ;;Total ram usage:        0 bytes
 13300 ;; Hardware stack levels used: 1
 13301 ;; This function calls:
 13302 ;;		Nothing
 13303 ;; This function is called by:
 13304 ;;		_I2C1_EVENT_STOP
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308     0CEA                     _I2C1_StopSend:	
 13309                           ;psect for function _I2C1_StopSend
 13310                           
 13311     0CEA                     i1l2488:	
 13312                           ;incstack = 0
 13313                           ; Regs used in _I2C1_StopSend: []
 13314                           
 13315                           
 13316                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13317     0CEA  0024               	movlb	4	; select bank4
 13318     0CEB  1516               	bsf	22,2	;volatile
 13319     0CEC                     i1l291:
 13320     0CEC  0008               	return
 13321     0CED                     __end_of_I2C1_StopSend:
 13322                           
 13323                           	psect	text80
 13324     0E41                     __ptext80:	
 13325 ;; *************** function _I2C1_Close *****************
 13326 ;; Defined at:
 13327 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;		None
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;		None
 13332 ;; Return value:  Size  Location     Type
 13333 ;;                  1    wreg      void 
 13334 ;; Registers used:
 13335 ;;		status,2, status,0, pclath, cstack
 13336 ;; Tracked objects:
 13337 ;;		On entry : 0/0
 13338 ;;		On exit  : 0/0
 13339 ;;		Unchanged: 0/0
 13340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13341 ;;      Params:         0       0       0       0       0       0       0       0
 13342 ;;      Locals:         0       0       0       0       0       0       0       0
 13343 ;;      Temps:          0       0       0       0       0       0       0       0
 13344 ;;      Totals:         0       0       0       0       0       0       0       0
 13345 ;;Total ram usage:        0 bytes
 13346 ;; Hardware stack levels used: 1
 13347 ;; Hardware stack levels required when called: 1
 13348 ;; This function calls:
 13349 ;;		_I2C1_ErrorInterruptClear
 13350 ;;		_I2C1_InterruptClear
 13351 ;;		_I2C1_StatusFlagsClear
 13352 ;; This function is called by:
 13353 ;;		_I2C1_EVENT_STOP
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357     0E41                     _I2C1_Close:	
 13358                           ;psect for function _I2C1_Close
 13359                           
 13360     0E41                     i1l2478:	
 13361                           ;incstack = 0
 13362                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13363                           
 13364                           
 13365                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13366     0E41  0020               	movlb	0	; select bank0
 13367     0E42  01D2               	clrf	_i2c1Status	;volatile
 13368     0E43                     i1l2480:
 13369                           
 13370                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13371     0E43  3000               	movlw	0
 13372     0E44  00D4               	movwf	_i2c1Status+2	;volatile
 13373     0E45  30FF               	movlw	255
 13374     0E46  00D3               	movwf	_i2c1Status+1	;volatile
 13375                           
 13376                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13377     0E47  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
 13378                           
 13379                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13380     0E48  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 13381                           
 13382                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13383     0E49  01DD               	clrf	_i2c1Status+11	;volatile
 13384     0E4A                     i1l2482:
 13385                           
 13386                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13387     0E4A  318C  24E7  318E   	fcall	_I2C1_InterruptClear
 13388     0E4D                     i1l2484:
 13389                           
 13390                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13391     0E4D  318C  24E4  318E   	fcall	_I2C1_ErrorInterruptClear
 13392     0E50                     i1l2486:
 13393                           
 13394                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13395     0E50  318D  2503  318E   	fcall	_I2C1_StatusFlagsClear
 13396     0E53                     i1l219:
 13397     0E53  0008               	return
 13398     0E54                     __end_of_I2C1_Close:
 13399                           
 13400                           	psect	text81
 13401     0D03                     __ptext81:	
 13402 ;; *************** function _I2C1_StatusFlagsClear *****************
 13403 ;; Defined at:
 13404 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;		None
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;		None
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		None
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13418 ;;      Params:         0       0       0       0       0       0       0       0
 13419 ;;      Locals:         0       0       0       0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0
 13421 ;;      Totals:         0       0       0       0       0       0       0       0
 13422 ;;Total ram usage:        0 bytes
 13423 ;; Hardware stack levels used: 1
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_I2C1_Close
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431     0D03                     _I2C1_StatusFlagsClear:	
 13432                           ;psect for function _I2C1_StatusFlagsClear
 13433                           
 13434     0D03                     i1l2474:	
 13435                           ;incstack = 0
 13436                           ; Regs used in _I2C1_StatusFlagsClear: []
 13437                           
 13438                           
 13439                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13440     0D03  0024               	movlb	4	; select bank4
 13441     0D04  1395               	bcf	21,7	;volatile
 13442                           
 13443                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13444     0D05  1315               	bcf	21,6	;volatile
 13445     0D06                     i1l324:
 13446     0D06  0008               	return
 13447     0D07                     __end_of_I2C1_StatusFlagsClear:
 13448                           
 13449                           	psect	text82
 13450     0CE7                     __ptext82:	
 13451 ;; *************** function _I2C1_InterruptClear *****************
 13452 ;; Defined at:
 13453 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		None
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13467 ;;      Params:         0       0       0       0       0       0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0
 13470 ;;      Totals:         0       0       0       0       0       0       0       0
 13471 ;;Total ram usage:        0 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; This function calls:
 13474 ;;		Nothing
 13475 ;; This function is called by:
 13476 ;;		_I2C1_Close
 13477 ;;		_I2C1_EventHandler
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481     0CE7                     _I2C1_InterruptClear:	
 13482                           ;psect for function _I2C1_InterruptClear
 13483                           
 13484     0CE7                     i1l2470:	
 13485                           ;incstack = 0
 13486                           ; Regs used in _I2C1_InterruptClear: []
 13487                           
 13488                           
 13489                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13490     0CE7  0020               	movlb	0	; select bank0
 13491     0CE8  1190               	bcf	16,3	;volatile
 13492     0CE9                     i1l318:
 13493     0CE9  0008               	return
 13494     0CEA                     __end_of_I2C1_InterruptClear:
 13495                           
 13496                           	psect	text83
 13497     0CE4                     __ptext83:	
 13498 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13499 ;; Defined at:
 13500 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;		None
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;		None
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      void 
 13507 ;; Registers used:
 13508 ;;		None
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13514 ;;      Params:         0       0       0       0       0       0       0       0
 13515 ;;      Locals:         0       0       0       0       0       0       0       0
 13516 ;;      Temps:          0       0       0       0       0       0       0       0
 13517 ;;      Totals:         0       0       0       0       0       0       0       0
 13518 ;;Total ram usage:        0 bytes
 13519 ;; Hardware stack levels used: 1
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_I2C1_Close
 13524 ;;		_I2C1_ErrorEventHandler
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528     0CE4                     _I2C1_ErrorInterruptClear:	
 13529                           ;psect for function _I2C1_ErrorInterruptClear
 13530                           
 13531     0CE4                     i1l2472:	
 13532                           ;incstack = 0
 13533                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13534                           
 13535                           
 13536                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13537     0CE4  0020               	movlb	0	; select bank0
 13538     0CE5  1191               	bcf	17,3	;volatile
 13539     0CE6                     i1l321:
 13540     0CE6  0008               	return
 13541     0CE7                     __end_of_I2C1_ErrorInterruptClear:
 13542                           
 13543                           	psect	text84
 13544     0CFF                     __ptext84:	
 13545 ;; *************** function _I2C1_BusReset *****************
 13546 ;; Defined at:
 13547 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;		None
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;		None
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  1    wreg      void 
 13554 ;; Registers used:
 13555 ;;		None
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13561 ;;      Params:         0       0       0       0       0       0       0       0
 13562 ;;      Locals:         0       0       0       0       0       0       0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0
 13564 ;;      Totals:         0       0       0       0       0       0       0       0
 13565 ;;Total ram usage:        0 bytes
 13566 ;; Hardware stack levels used: 1
 13567 ;; This function calls:
 13568 ;;		Nothing
 13569 ;; This function is called by:
 13570 ;;		_I2C1_EVENT_RESET
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574     0CFF                     _I2C1_BusReset:	
 13575                           ;psect for function _I2C1_BusReset
 13576                           
 13577     0CFF                     i1l2490:	
 13578                           ;incstack = 0
 13579                           ; Regs used in _I2C1_BusReset: []
 13580                           
 13581                           
 13582                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13583     0CFF  0024               	movlb	4	; select bank4
 13584     0D00  1295               	bcf	21,5	;volatile
 13585                           
 13586                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13587     0D01  1695               	bsf	21,5	;volatile
 13588     0D02                     i1l276:
 13589     0D02  0008               	return
 13590     0D03                     __end_of_I2C1_BusReset:
 13591                           
 13592                           	psect	text85
 13593     0002                     __ptext85:	
 13594 ;; *************** function _I2C1_DefaultCallback *****************
 13595 ;; Defined at:
 13596 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13597 ;; Parameters:    Size  Location     Type
 13598 ;;		None
 13599 ;; Auto vars:     Size  Location     Type
 13600 ;;		None
 13601 ;; Return value:  Size  Location     Type
 13602 ;;                  1    wreg      void 
 13603 ;; Registers used:
 13604 ;;		None
 13605 ;; Tracked objects:
 13606 ;;		On entry : 0/0
 13607 ;;		On exit  : 0/0
 13608 ;;		Unchanged: 0/0
 13609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13610 ;;      Params:         0       0       0       0       0       0       0       0
 13611 ;;      Locals:         0       0       0       0       0       0       0       0
 13612 ;;      Temps:          0       0       0       0       0       0       0       0
 13613 ;;      Totals:         0       0       0       0       0       0       0       0
 13614 ;;Total ram usage:        0 bytes
 13615 ;; Hardware stack levels used: 1
 13616 ;; This function calls:
 13617 ;;		Nothing
 13618 ;; This function is called by:
 13619 ;;		_I2C1_Initialize
 13620 ;;		_I2C1_Deinitialize
 13621 ;;		_I2C1_ErrorEventHandler
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625     0002                     _I2C1_DefaultCallback:	
 13626                           ;psect for function _I2C1_DefaultCallback
 13627                           
 13628     0002                     i1l231:	
 13629                           ;incstack = 0
 13630                           ; Regs used in _I2C1_DefaultCallback: []
 13631                           
 13632     0002  0008               	return
 13633     0003                     __end_of_I2C1_DefaultCallback:
 13634                           
 13635                           	psect	text86
 13636     0E03                     __ptext86:	
 13637 ;; *************** function _ADC_ISR *****************
 13638 ;; Defined at:
 13639 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 13640 ;; Parameters:    Size  Location     Type
 13641 ;;		None
 13642 ;; Auto vars:     Size  Location     Type
 13643 ;;		None
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  1    wreg      void 
 13646 ;; Registers used:
 13647 ;;		wreg, status,2, status,0, pclath, cstack
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13653 ;;      Params:         0       0       0       0       0       0       0       0
 13654 ;;      Locals:         0       0       0       0       0       0       0       0
 13655 ;;      Temps:          0       0       0       0       0       0       0       0
 13656 ;;      Totals:         0       0       0       0       0       0       0       0
 13657 ;;Total ram usage:        0 bytes
 13658 ;; Hardware stack levels used: 1
 13659 ;; Hardware stack levels required when called: 1
 13660 ;; This function calls:
 13661 ;;		NULL
 13662 ;;		_ADC_DefaultInterruptHandler
 13663 ;; This function is called by:
 13664 ;;		_INTERRUPT_InterruptManager
 13665 ;; This function uses a non-reentrant model
 13666 ;;
 13667                           
 13668     0E03                     _ADC_ISR:	
 13669                           ;psect for function _ADC_ISR
 13670                           
 13671     0E03                     i1l3154:	
 13672                           ;incstack = 0
 13673                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 13674                           
 13675                           
 13676                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 13677     0E03  0020               	movlb	0	; select bank0
 13678     0E04  1310               	bcf	16,6	;volatile
 13679     0E05                     i1l3156:
 13680                           
 13681                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 13682     0E05  086B               	movf	_ADC_InterruptHandler,w
 13683     0E06  046C               	iorwf	_ADC_InterruptHandler+1,w
 13684     0E07  1903               	btfsc	3,2
 13685     0E08  2E0A               	goto	u128_21
 13686     0E09  2E0B               	goto	u128_20
 13687     0E0A                     u128_21:
 13688     0E0A  2E10               	goto	i1l52
 13689     0E0B                     u128_20:
 13690     0E0B                     i1l3158:
 13691                           
 13692                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 13693     0E0B  086C               	movf	_ADC_InterruptHandler+1,w
 13694     0E0C  008A               	movwf	10
 13695     0E0D  086B               	movf	_ADC_InterruptHandler,w
 13696     0E0E  000A               	callw
 13697     0E0F  318E               	pagesel	$
 13698     0E10                     i1l52:
 13699     0E10  0008               	return
 13700     0E11                     __end_of_ADC_ISR:
 13701                           
 13702                           	psect	text87
 13703     0CE3                     __ptext87:	
 13704 ;; *************** function _ADC_DefaultInterruptHandler *****************
 13705 ;; Defined at:
 13706 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;		None
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1    wreg      void 
 13713 ;; Registers used:
 13714 ;;		None
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13720 ;;      Params:         0       0       0       0       0       0       0       0
 13721 ;;      Locals:         0       0       0       0       0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0
 13723 ;;      Totals:         0       0       0       0       0       0       0       0
 13724 ;;Total ram usage:        0 bytes
 13725 ;; Hardware stack levels used: 1
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_ADC_Initialize
 13730 ;;		_ADC_ISR
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734     0CE3                     _ADC_DefaultInterruptHandler:	
 13735                           ;psect for function _ADC_DefaultInterruptHandler
 13736                           
 13737     0CE3                     i1l58:	
 13738                           ;incstack = 0
 13739                           ; Regs used in _ADC_DefaultInterruptHandler: []
 13740                           
 13741     0CE3  0008               	return
 13742     0CE4                     __end_of_ADC_DefaultInterruptHandler:
 13743     007E                     btemp	set	126	;btemp
 13744     007E                     int$flags	set	126
 13745     007E                     wtemp0	set	126
 13746                           
 13747                           	psect	config
 13748                           
 13749                           ;Config register CONFIG1 @ 0x8007
 13750                           ;	Oscillator Selection Bits
 13751                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13752                           ;	Power-up Timer Enable
 13753                           ;	PWRTE = OFF, PWRT disabled
 13754                           ;	MCLR Pin Function Select
 13755                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13756                           ;	Flash Program Memory Code Protection
 13757                           ;	CP = OFF, Program memory code protection is disabled
 13758                           ;	Brown-out Reset Enable
 13759                           ;	BOREN = ON, Brown-out Reset enabled
 13760                           ;	Clock Out Enable
 13761                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13762     8007                     	org	32775
 13763     8007  3FFC               	dw	16380
 13764                           
 13765                           ;Config register CONFIG2 @ 0x8008
 13766                           ;	Flash Memory Self-Write Protection
 13767                           ;	WRT = OFF, Write protection off
 13768                           ;	Peripheral Pin Select one-way control
 13769                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13770                           ;	Zero Cross Detect Disable Bit
 13771                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13772                           ;	PLL Enable Bit
 13773                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13774                           ;	Stack Overflow/Underflow Reset Enable
 13775                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13776                           ;	Brown-out Reset Voltage Selection
 13777                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13778                           ;	Low-Power Brown Out Reset
 13779                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13780                           ;	In-Circuit Debugger Mode
 13781                           ;	DEBUG = 0x1, unprogrammed default
 13782                           ;	Low-Voltage Programming Enable
 13783                           ;	LVP = ON, Low-voltage programming enabled
 13784     8008                     	org	32776
 13785     8008  3EFF               	dw	16127
 13786                           
 13787                           ;Config register CONFIG3 @ 0x8009
 13788                           ;	WDT Period Select
 13789                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13790                           ;	Watchdog Timer Enable
 13791                           ;	WDTE = OFF, WDT disabled
 13792                           ;	WDT Window Select
 13793                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13794                           ;	WDT Input Clock Selector
 13795                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13796     8009                     	org	32777
 13797     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    86
    Data        31
    BSS         45
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      77
    BANK1            80      0      47
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9559[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Read@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    I2C1_Write@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    packLong@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getPos@data(BANK0[4]), parserDataBuffer(BANK1[5]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 5
		 -> parserDataBuffer(BANK1[5]), 

    S189$2$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    S189$3$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S288$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 6
		 -> parserDataBuffer(BANK1[5]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> KAPS_setAbsPos@data(BANK0[4]), KAPS_StorePos@data(BANK0[4]), ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 


Critical Paths under _main in COMMON

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ProcessMsg->_SSPA_setMute
    _ADC2Celsius->___aldiv
    _getADCValue->_ADC_GetConversionResult
    _getADCValue->_ADC_SelectChannel
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getPos->_I2C1_Read
    _KAPS_getIndex->_I2C1_Read
    _I2C1_Read->_I2C1_IsBusy
    _I2C1_Write->_I2C1_IsBusy
    _SendMsg->_SendSync
    _SendSync->_EUSART_IsTxReady
    _SendSync->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_RX
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_RX
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _main->_ProcessMsg
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->_ADC2Celsius
    _ADC2Celsius->___aldiv
    _SSPA_getPOut->_ADC2Amp
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    ___aldiv->___lmul
    _KAPS_setRelPos->_I2C1_Write
    _KAPS_setAbsPos->_packLong
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getStatus->_I2C1_Write
    _KAPS_getPos->_packLong
    _KAPS_getIndex->_I2C1_Read
    _KAPS_getIndex->_I2C1_Write
    _KAPS_StorePos->_packLong
    _KAPS_GoToIdx->_I2C1_Write
    _Parse->_SendNack
    _SendNack->_SendMsg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44057
                                             49 BANK0      1     1      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                         _ProcessMsg
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     632
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     196
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     196
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessMsg                                           3     2      1   39235
                                             46 BANK0      3     2      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (2) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SSPA_setMute                                         4     3      1     245
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SSPA_getTemp                                         6     6      0    2184
                                             40 BANK0      6     6      0
                        _ADC2Celsius
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _ADC2Celsius                                         14    12      2    1850
                                             26 BANK0     14    12      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SSPA_getPOut                                         6     6      0    4350
                                             38 BANK0      5     5      0
                            _ADC2Amp
                            _ADC2dBm
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                         10     8      2     201
                                              0 BANK0     10     8      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_SelectChannel                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC2dBm                                             10     8      2    1850
                                             26 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ADC2Amp                                             12     8      4    1940
                                             26 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     985
                                              4 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _KAPS_setRelPos                                       5     5      0    3218
                                              5 BANK0      5     5      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_setAbsPos                                      11     7      4    4328
                                             13 BANK0     11     7      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _KAPS_getStatus                                       4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_getPos                                          7     7      0    4638
                                             13 BANK0      7     7      0
                          _I2C1_Read
                         _I2C1_Write
                           _packLong
 ---------------------------------------------------------------------------------
 (2) _packLong                                            13     9      4     428
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _KAPS_getIndex                                        4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read                                            6     1      5     977
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                     _I2C1_ReadStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadStart                                       0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (2) _KAPS_StorePos                                       12     8      4    4396
                                             13 BANK0     12     8      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _unpackLong                                           9     4      5     968
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _KAPS_GoToIdx                                         4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write                                           6     1      5    3113
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteStart                                      0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (5) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_IsBusy                                          1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parse                                                3     3      0    4153
                                              6 BANK0      3     3      0
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    2019
                                              5 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _SendMsg                                              5     3      2    1979
                                              0 BANK0      5     3      2
                           _SendSync
 ---------------------------------------------------------------------------------
 (3) _SendSync                                             1     1      0     279
                                              5 COMMON     1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     211
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_IsTxReady                                     1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_EventHandler                                    2     2      0     164
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_ErrorEventHandler                               2     2      0     164
                                              2 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_TX                                        1     1      0      48
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _SendMsg
       _SendSync
         _EUSART_IsTxReady
         _EUSART_Write
     _SendNack
       _SendMsg
   _ProcessMsg
     _KAPS_GoToIdx
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_StartSend
     _KAPS_StorePos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_getIndex
       _I2C1_Read
         _I2C1_IsBusy
         _I2C1_ReadStart
           _I2C1_StartSend
       _I2C1_Write
     _KAPS_getPos
       _I2C1_Read
       _I2C1_Write
       _packLong
     _KAPS_getStatus
       _I2C1_Read
       _I2C1_Write
     _KAPS_setAbsPos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_setRelPos
       _I2C1_Write
     _SSPA_getPOut
       _ADC2Amp
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _ADC2dBm
         ___aldiv
         ___lmul
       _getADCValue
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_SelectChannel
         _ADC_StartConversion
     _SSPA_getTemp
       _ADC2Celsius
         ___aldiv
         ___lmul
       _getADCValue
     _SSPA_setMute
     _SendMsg
     _packLong
     _unpackLong
     _unpackWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      86       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      86      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 10:28:23 2024

                                    I2C1_Write@data 0022                              ??_I2C1_DefaultCallback 0070  
                                                l30 0DDE                                                  l33 0CFE  
                                                l27 0E7A                                                  l36 0D92  
                                                l39 0D56                                                  l55 0D5C  
       __end_of_EUSART_OverrunErrorCallbackRegister 0DF7               ??_EUSART_OverrunErrorCallbackRegister 0076  
              ?_EUSART_OverrunErrorCallbackRegister 0074                 _EUSART_OverrunErrorCallbackRegister 0DEB  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                                     ?_KAPS_GoToIdx 0070                                       _KAPS_StorePos 0534  
                                      _SSPA_getPOut 02F4                                        _SSPA_getTemp 05B2  
                                               l200 0E2F                                     __end_of_ADC2Amp 0534  
                                               l204 0E02                                                 l213 0D8B  
                                               l216 0D84                                                 l312 0D2A  
                                               l410 046B                                                 l333 0DB1  
                                               l184 0EE3                                                 l177 0E90  
                                               l610 0FA5                                                 l442 0DD2  
                                               l188 07FD                                                 l613 0D26  
                                               l623 0DC7                                                 l616 0003  
                                               l288 0CFB                                                 l465 0D3E  
                                               l722 0F53                                                 l619 0D22  
                                               l627 0DF6                                                 l483 0E66  
                                               l804 0263                                                 l716 0F2B  
                                               l548 0EC5                                                 l725 0573  
                                               l733 0FFF                                                 l742 03D4  
                                               l719 077D                                                 l751 0DEA  
                                               l592 0D39                                                 l832 06DD  
                                               l729 07DB                                                 l841 062B  
                                               l850 0672                                                 l771 0667  
                                               l739 05B1                                                 l835 0420  
                                               l748 04B0                                                 l597 0E1F  
                                               l765 0E32                                                 l693 01AB  
                                               l838 0533                                                 l862 06A2  
                                               l767 0E40                                                 l871 05EE  
                                               l855 067A                                                 l847 066F  
                                               l776 0DBC                                                 l792 01CD  
                                               l880 037D                                                 l962 074A  
                                               l858 067D                                                 l875 02F7  
                                               l699 0F78                                     __end_of_ADC2dBm 062C  
                                               u910 0DFD                                                 u911 0DFC  
                                               u990 0DC3                                                 u991 0DC2  
                                      ?_KAPS_getPos 0070                           __end_of_I2C1_DataTransmit 0D30  
                                   __end_of_ADC_ISR 0E11                     __end_of_ADC_SetInterruptHandler 0D5D  
                                               wreg 0009                                        ADC2dBm@value 003C  
                          _I2C1_ErrorInterruptClear 0CE4                                        _SSPA_setMute 0668  
                      ?_ADC_DefaultInterruptHandler 0070                                       SendMsg@msg_id 0024  
                                     _KAPS_getIndex 0FD2                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                    __end_of_I2C1_ISR 0D1F  
                                              l1013 0277                                                l1023 02F3  
                                              l3000 0469                                                l3010 0EB4  
                                              l3002 046A                                                l3012 0EBB  
                                              l3004 0DC8                                                l3014 0EC2  
                                              l3006 0DCB                                                l3016 0D1F  
                                              l4000 0208                                                l3008 0EA9  
                                              l4002 0210                                                l4020 0232  
                                              l4012 0223                                                l4004 0215  
                                              l4030 0245                                                l4022 023E  
                                              l4014 0226                                                l4006 021B  
                                              l4016 0227                                                l4008 021D  
                                              l3170 0F7C                                                l4018 022D  
                                              l4034 024A                                                l3180 0F91  
                                              l3172 0F7F                                                l4220 0254  
                                              l4028 0240                                                l4036 0262  
                                              l3164 0E54                                                l3166 0D35  
                                              l3182 0F96                                                l3174 0F84  
                                              l4214 0689                                                l4070 0F59  
                                              l3184 0F98                                                l3176 0F86  
                                              l3600 028A                                                l4216 05C3  
                                              l2632 0D57                                                l4072 0F59  
                                              l4064 0F54                                                l3186 0F9E  
                                              l3178 0F8C                                                l3530 0E1C  
                                              l3522 0CF9                                                l3610 02AC  
                                              l3602 0292                                                l4218 0372  
                                              l2634 0D27                                                l4074 0F61  
                                              l4066 0F57                                                l3188 0FA3  
                                              l3532 0E1E                                                l3524 0E11  
                                              l3700 065C                                                l3620 02D5  
                                              l3612 02B3                                                l3604 029A  
                                              l3540 0CFC                                                l2900 0E6D  
                                              l2636 0DF7                                                l4076 0F66  
                                              l4068 0F58                                                l3526 0E12  
                                              l3702 0660                                                l3550 0E20  
                                              l3630 0EC6                                                l3710 0472  
                                              l3614 02C5                                                l3606 029D  
                                              l3622 02DB                                                l3542 0D8C  
                                              l2902 0E6F                                                l2638 0DFD  
                                              l2910 0E80                                                l4078 0F6F  
                                              l3528 0E17                                                l3536 0D23  
                                              l3552 0E22                                                l3640 0ED8  
                                              l3632 0EC6                                                l3712 0486  
                                              l3720 0397                                                l3624 02E0  
                                              l3616 02CD                                                l3608 02A8  
                                              l3800 02F6                                                l2904 0E71  
                                              l2912 0E81                                                l3570 0E31  
                                              l3706 0663                                                l3554 0E28  
                                              l3562 0D7E                                                l3650 0EE3  
                                              l3642 0EDC                                                l3634 0ECE  
                                              l3714 049B                                                l3722 03AE  
                                              l3626 02EB                                                l3618 02CE  
                                              l3546 0D51                                                l3538 0DD4  
                                              l3730 06A7                                                l3810 0329  
                                              l3802 02F7                                                l2906 0E78  
                                              l2914 0E84                                                l3572 0E33  
                                              l3556 0E2D                                                l3564 0D81  
                                              l3644 0EDD                                                l3636 0ED5  
                                              l3708 046C                                                l3900 0538  
                                              l3660 07EC                                                l3724 03C6  
                                              l3716 0380                                                l3580 0724  
                                              l3740 06B9                                                l3732 06AA  
                                              l3812 0332                                                l3804 0300  
                                              l2916 0E8E                                                l2908 0E7B  
                                              l3574 0E3B                                                l3910 0DB4  
                                              l3558 0E2E                                                l3646 0EDF  
                                              l3638 0ED6                                                l3902 0542  
                                              l3566 0D85                                                l3670 07F6  
                                              l3662 07ED                                                l3654 07DC  
                                              l3718 0380                                                l3830 07AE  
                                              l3590 0264                                                l3582 072C  
                                              l3742 06C1                                                l3734 06AF  
                                              l3814 034D                                                l3806 031B  
                                              l3822 036A                                                l2942 0DAA  
                                              l2790 0DC3                                                l2950 0423  
                                              l3680 062E                                                l3648 0EE0  
                                              l3904 0544                                                l3568 0D88  
                                              l3672 07F7                                                l3664 07EF  
                                              l3656 07DD                                                l3840 0574  
                                              l3832 07B1                                                l3592 0266  
                                              l3584 0733                                                l3576 0717  
                                              l3760 04F4                                                l3744 06C6  
                                              l3728 06A5                                                l3816 034D  
                                              l3808 0329                                                l3752 03D5  
                                              l3920 008D                                                l3912 006A  
                                              l2944 0DAD                                                l2792 0DEB  
                                              l2960 0440                                                l2952 0425  
                                              l3682 062F                                                l3906 0551  
                                              l3674 07FA                                                l3666 07F3  
                                              l3658 07E5                                                l3850 0FD2  
                                              l3842 0576                                                l3834 07B2  
                                              l3594 026A                                                l3586 0742  
                                              l3578 0720                                                l3762 04FB  
                                              l3770 05F6                                                l3746 06CC  
                                              l3738 06B1                                                l3818 0356  
                                              l3754 03DC                                                l3930 00C4  
                                              l3922 0094                                                l3914 006B  
                                              l2946 0DAF                                                l2794 0DF1  
                                              l2786 0D3A                                                l2970 044B  
                                              l2962 0441                                                l2954 043B  
                                              l3692 0647                                                l3684 0633  
                                              l3908 0562                                                l3668 07F4  
                                              l3676 07FC                                                l3852 0FD5  
                                              l3844 057E                                                l3836 07C2  
                                              l3596 027B                                                l3764 052B  
                                              l3772 062A                                                l3748 06D9  
                                              l3756 041C                                                l3780 05B8  
                                              l3860 0669                                                l3940 0106  
                                              l3932 00CB                                                l3924 009B  
                                              l3916 0071                                                l2892 0E67  
                                              l2788 0DBD                                                l2980 0458  
                                              l2972 044D                                                l2964 0444  
                                              l2956 043D                                                l2948 0421  
                                              l3686 0638                                                l3854 0FD6  
                                              l3846 058E                                                l3838 07D8  
                                              l3598 0286                                                l3870 0694  
                                              l3862 066A                                                l3950 013A  
                                              l3942 010A                                                l3934 00DD  
                                              l3926 00B3                                                l3918 0083  
                                              l2894 0E6A                                                l2990 0464  
                                              l2982 045B                                                l2974 044F  
                                              l2966 0446                                                l2958 043F  
                                              l3696 064D                                                l3688 063F  
                                              l3880 0F0A                                                l3856 0FE6  
                                              l3848 05A4                                                l3768 05EF  
                                              l3784 05BB                                                l3776 05B4  
                                              l3864 0675                                                l3960 0172  
                                              l3952 0144                                                l3944 0114  
                                              l3936 00F9                                                l3928 00BD  
                                              l2896 0E6B                                                l2992 0465  
                                              l2984 045E                                                l2976 0452  
                                              l2968 0448                                                l3698 0654  
                                              l3970 01B4                                                l3882 0F1A  
                                              l3858 0FFC                                                l3890 076C  
                                              l3786 05CE                                                l3778 05B5  
                                              l3954 0151                                                l3946 0133  
                                              l3938 0103                                                l2898 0E6C  
                                              l2994 0466                                                l2986 0461  
                                              l2978 0455                                                l3980 01C7  
                                              l3972 01B7                                                l3884 074B  
                                              l3892 0F2E                                                l3788 05D7  
                                              l3868 0680                                                l3796 0DDF  
                                              l3956 0159                                                l3948 0136  
                                              l3964 0188                                                l2996 0467  
                                              l2988 0463                                                l3990 01D3  
                                              l3982 01CA                                                l3974 01BA  
                                              l3966 01AE                                                l3878 0F08  
                                              l3886 074E                                                l3894 0F32  
                                              l3798 0DE5                                                l3958 016A  
                                              l2998 0468                                                l3992 01D8  
                                              l3984 01CD                                                l3976 01BF  
                                              l3968 01AF                                                l3888 075B  
                                              l3896 0F42                                                l3994 01DD  
                                              l3986 01CE                                                l3978 01C2  
                                              l3898 0536                                                l3996 01E2  
                                              l3988 01D0                                                l3998 01E5  
                                 _I2C1_Deinitialize 0000                                                u1000 0DF1  
                                              u1001 0DF0                                                u2010 01B4  
                                              u2011 01B3                                                u1300 0F8C  
                                              u2020 0222                                                u1301 0F8B  
                                              u2021 0221                                                u2005 00E4  
                                              u1310 0F96                                                u2030 022D  
                                              u1311 0F95                                                u2031 022C  
                                              u1320 0F9E                                                u2040 0232  
                                              u1321 0F9D                                                u2041 0231  
                                              u2060 0F61                                                u2061 0F60  
                                              _LATA 010C                                                u2070 0F6F  
                                              _LATB 010D                                                u2071 0F6E  
                                              _LATC 010E                                                u1290 0F84  
                                              u1530 0E17                                                u1610 0742  
                                              u1291 0F83                                                u1531 0E16  
                                              u1611 0741                                                u1540 0E1C  
                                              u1700 02DB                                                u1620 026A  
                                              u1541 0E1B                                                u1701 02DA  
                                              u1621 0269                                                u1605 0734  
                                              u1550 0E28                                                u1710 02E0  
                                              u1630 027B                                                u1551 0E27  
                                              u1711 02DF                                                u1631 027A  
                                              u1560 0E2D                                                u1720 0ECE  
                                              u1800 03A4                                                u1640 029A  
                                              u1561 0E2C                                                u1721 0ECD  
                                              u1641 0299                                                u1570 0E3B  
                                              u1730 07E5                                                u1810 03BC  
                                              u1571 0E3A                                                u1731 07E4  
                                              u1740 063F                                                u1900 07D8  
                                              u1660 02AC                                                u1580 0724  
                                              u1820 06B9                                                u1741 063E  
                                              u1805 03A0                                                u1901 07D7  
                                              u1661 02AB                                                u1581 0723  
                                              u1821 06B8                                                u1750 064C  
                                              u1910 05A4                                                u1830 06CC  
                                              u1751 064B                                                u1815 03B8  
                                              u1911 05A3                                                u1655 029E  
                                              u1831 06CB                                                u1760 0482  
                                              u1920 0FFC                                                u1680 02C5  
                                              u1921 0FFB                                                u1681 02C4  
                                              u1770 0497                                                u1930 066F  
                                              u1675 02AD                                                u1595 072D  
                                              u1931 066E                                                u1780 04AC  
                                              u1940 067A                                                u1765 047E  
                                              u1685 02C1                                                u1845 06D1  
                                              u1941 0679                                                u1790 038D  
                                              u1775 0493                                                u1695 02CF  
                                              u1855 05E2                                                u1785 04A8  
                                              u1865 030B                                                u1795 0389  
                                              u1875 031E                                                u1955 0698  
                                              u1965 053B                                                u1885 033D  
                                              u1895 0359                                                u1975 0078  
                                              u1985 00A2                                                u1995 00D2  
                                              i1l52 0E10                                                i1l58 0CE3  
                                              _UART 077E                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                                  ??_I2C1_ReadStart 0074                                     ??_I2C1_StopSend 0070  
                                 I2C1_Write@address 0020                                                _main 0F54  
                                              _kaps 0064                                    __end_of_I2C_Host 0812  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                              start 0036          __end_of_EUSART_DefaultOverrunErrorCallback 0D23  
              ??_EUSART_DefaultOverrunErrorCallback 0074                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 0D1F                                       ADC2dBm@result 0040  
                   __end_of_INT_SetInterruptHandler 0D3F                                     _I2C1_EVENT_IDLE 0D13  
                                   _I2C1_EVENT_NACK 0D3F                                          _i2c1Status 0052  
                                   _I2C1_EVENT_STOP 0DA2                                     __end_of_SendMsg 0668  
                                    ??_KAPS_GoToIdx 0025                                      ?_KAPS_StorePos 002D  
                                    _KAPS_getStatus 07AE                                       ?_EUSART_Write 0074  
                                 __end_of_I2C1_Read 07FE                                     __end_of___aldiv 02F4  
                                             ?_main 0070                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             i1l210 0D1A                                               i1l300 0D50  
                                             i1l231 0002                                               i1l303 0D34  
                                             i1l207 0D1E                                               i1l240 0D6F  
                                             i1l321 0CE6                                               i1l225 04F3  
                                             i1l234 0D16                                               i1l306 0D7D  
                                             i1l219 0E53                                               i1l324 0D06  
                                             i1l228 0F05                                               i1l309 0D0E  
                                             i1l237 0DA1                                               i1l261 0D4A  
                                             i1l318 0CE9                                               i1l270 0CEF  
                                             i1l247 0FD1                                               i1l255 0716  
                                             i1l264 0DA9                                               i1l273 0D2F  
                                             i1l282 0CF8                                               i1l258 0D44  
                                             i1l450 0026                                               i1l291 0CEC  
                                             i1l267 0D76                                               i1l276 0D02  
                                             i1l285 0CF5                                               i1l294 0D0A  
                                             i1l279 0CF2                                               i1l455 0034  
                                             i1l448 0018                                               i1l297 0D12  
                                             i1l449 0034                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             u94_20 0FAD                                               u94_21 0FAC  
                                             u95_20 0FC5                                               u95_21 0FC4  
                                             u96_20 06E8                                               u96_21 06E7  
                                             _RXPPS 0E24                                               u97_20 06EF  
                                             u97_21 06EE                                               u98_20 0705  
                                             u98_21 0704                                    ??_I2C1_StartSend 0074  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                 ___lmul@multiplicand 0024  
                                             _Parse 01AC                                      ?_KAPS_getIndex 0070  
                                 ??_I2C1_Initialize 0076                                     SendMsg@data_len 0021  
                           ??_I2C1_CallbackRegister 0076                                   ?_I2C1_IsRxBufFull 0070  
                                  ProcessMsg@msg_id 0050                            ?_I2C1_EVENT_SEND_WR_ADDR 0070  
                                             _sspas 00A0                                               pclath 000A  
                             I2C1_DataTransmit@data 0070                                      _KAPS_setAbsPos 074B  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                      _KAPS_setRelPos 0F2C  
                                      ??_I2C1_Close 0070                                          SendMsg@sum 0023  
                                      __end_of_UART 07AE                                        ??_I2C1_Write 0075  
                                   __initialization 0038                            ??_I2C1_ErrorEventHandler 0072  
                                      __end_of_main 0F7C                              __end_of_KAPS_getStatus 07DC  
                                         ??_ADC2Amp 0075                                      getADCValue@aux 0025  
                                         ??_ADC2dBm 0075                                      getADCValue@sum 0027  
                                  _I2C1_EVENT_ERROR 0D45                                      ??_EUSART_Write 0075  
                                  _I2C1_EVENT_RESET 0D70                                           ??_ADC_ISR 0070  
                       ?_INTERRUPT_InterruptManager 0070                                    __end_of_SendNack 0DBD  
                                            ??_main 0076                                    __end_of_SendSync 0E41  
                                  SSPA_setMute@band 0075                                    SSPA_setMute@mute 0074  
EUSART_OverrunErrorCallbackRegister@callbackHandler 0074  EUSART_FramingErrorCallbackRegister@callbackHandler 0074  
              I2C1_CallbackRegister@callbackHandler 0074                                              ?_Parse 0070  
                                __end_of_I2C1_Close 0E54                                              _ADCON0 009D  
                                            _ADCON1 009E                                              _ADCON2 009F  
                        _EUSART_OverrunErrorHandler 005E                               _I2C1_InterruptsEnable 0D27  
                                            _ADRESH 009C                                              _ADRESL 009B  
                            __end_of_KAPS_setAbsPos 077E                                  __end_of_I2C1_Write 0EE4  
                                            _ANSELA 018C                                              _ANSELB 018D  
                                            _ANSELC 018E                                              _BORCON 0116  
                                 KAPS_setAbsPos@reg 0037                                   KAPS_setAbsPos@pos 002D  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RC2PPS 0EA2                                              _RB5PPS 0E9D  
                                            _RB6PPS 0E9E                                              u112_20 04BC  
                                            u112_21 04BB                                              _ODCONA 028C  
                                            _ODCONB 028D                                              _ODCONC 028E  
                                            u113_20 04C4                                              i1l3160 0D1B  
                                            u113_21 04C3                                              i1l3154 0E03  
                                            i1l3162 0D17                                              i1l3156 0E05  
                                            i1l2540 0CF6                                              i1l3158 0E0B  
                                            i1l2470 0CE7                                              i1l2702 0D13  
                                            i1l2710 0DA0                                              i1l2542 0DA2  
                                            i1l2472 0CE4                                              i1l2480 0E43  
                                            i1l2552 0CED                                              i1l2560 0D0F  
                                            i1l2720 0FA6                                              i1l2704 0D15  
                                            i1l2544 0DA8                                              u114_20 04D2  
                                            i1l3360 000F                                              u114_21 04D1  
                                            i1l2490 0CFF                                              i1l2474 0D03  
                                            i1l2482 0E4A                                              i1l2562 0CF0  
                                            i1l2538 0D2C                                              i1l2730 0FC0  
                                            i1l2722 0FA6                                              i1l2714 0D69  
                                            i1l3370 0030                                              i1l3362 0014  
                                            i1l2484 0E4D                                              i1l2556 0D07  
                                            i1l2548 0D0B                                              i1l2732 0FC5  
                                            i1l2740 0FD0                                              i1l2724 0FAD  
                                            i1l2708 0D9A                                              i1l2716 0D6E  
                                            i1l2564 0D70                                              i1l3364 001D  
                                            i1l3356 0006                                              i1l2486 0E50  
                                            i1l2478 0E41                                              i1l2558 0CF3  
                                            i1l2734 0FC6                                              i1l2726 0FB1  
                                            i1l2750 06EF                                              i1l2566 0D73  
                                            i1l3366 0022                                              i1l3358 000A  
                                            i1l2488 0CEA                                              i1l2736 0FC9  
                                            i1l2728 0FBD                                              i1l2760 0709  
                                            i1l2752 06F6                                              i1l2744 06DE  
                                            i1l2568 0D75                                              u115_20 04DA  
                                            i1l2920 04B4                                              i1l3368 002B  
                                            u115_21 04D9                                              i1l2738 0FCC  
                                            i1l2762 070F                                              i1l2754 06FB  
                                            i1l2746 06E0                                              i1l2770 0D3F  
                                            i1l2690 0D77                                              i1l2930 04DA  
                                            i1l2922 04BC                                              i1l2756 06FF  
                                            i1l2748 06E8                                              i1l2764 0712  
                                            i1l2772 0D3F                                              i1l2780 0D45  
                                            i1l2940 0F00                                              i1l2932 04DF  
                                            i1l2924 04C4                                              i1l2766 0715  
                                            i1l2758 0705                                              i1l2774 0D43  
                                            i1l2782 0D49                                              i1l2934 0EE4  
                                            i1l2694 0D4B                                              i1l2926 04CA  
                                            i1l2918 04B1                                              i1l2936 0EE9  
                                            i1l2928 04D2                                              i1l2778 0D45  
                                            i1l2938 0EEC                                              i1l2698 0D30  
                                            u142_20 000A                                              u142_21 0009  
                                            u143_20 000F                                              u143_21 000E  
                                            u128_20 0E0B                                              u144_20 0014  
                                            u128_21 0E0A                                              u144_21 0013  
                                            _INLVLA 038C                                              _INLVLB 038D  
                                            _INLVLC 038E                                              u145_20 001D  
                                            u145_21 001C                                              u146_20 0022  
                                            u146_21 0021                                              u147_20 002B  
                                            u147_21 002A                                              u148_20 0030  
                                            u148_21 002F                                              _OSCCON 0099  
                            __end_of_KAPS_setRelPos 0F54                                              _SPBRGH 019C  
                                            _SPBRGL 019B                                              _TX1REG 019A  
                                            _TX1STA 019E                             __end_of_I2C1_EVENT_IDLE 0D17  
                           __end_of_I2C1_EVENT_NACK 0D45                                  KAPS_getStatus@data 0028  
                           __end_of_I2C1_EVENT_STOP 0DAA                               SSPA_getPOut@adc_value 0048  
                                         ??_SendMsg 0022                         __end_of_I2C1_InterruptClear 0CEA  
                                   ??_KAPS_StorePos 0031                                              ___lmul 0717  
                                         ??___aldiv 0074                                     ?_KAPS_getStatus 0070  
                                  __end_of_packLong 03D5                                  _I2C1_RestartEnable 0CF6  
                                         ?_I2C1_ISR 0070                                              _parser 00B8  
                                 ?_EUSART_IsRxReady 0070                     __end_of_I2C1_EVENT_SEND_RD_ADDR 0DA2  
                                 ?_EUSART_IsTxReady 0070                                   ProcessMsg@payload 00C4  
                                        _ProcessMsg 0068                                        packLong@data 002C  
                                 ?_CLOCK_Initialize 0070                                  ??_EUSART_IsRxReady 0074  
                                   ??_KAPS_getIndex 0025                                  ??_EUSART_IsTxReady 0074  
                                ??_CLOCK_Initialize 0074                     __end_of_I2C1_EVENT_SEND_WR_ADDR 0D70  
                               ?_I2C1_RestartEnable 0070                                   ??_I2C1_WriteStart 0074  
           INT_SetInterruptHandler@InterruptHandler 0074             ADC_SetInterruptHandler@InterruptHandler 0074  
                                   ?_KAPS_setAbsPos 002D                                __end_of_KAPS_GoToIdx 0F2C  
                                 _SYSTEM_Initialize 0E54                             __end_of__initialization 0064  
                                   ?_KAPS_setRelPos 0070                                       ??_I2C1_IsAddr 0070  
                                     ??_I2C1_IsData 0070                                       ??_I2C1_IsNack 0070  
                                     ??_I2C1_IsBusy 0074                                  ?_SYSTEM_Initialize 0070  
                                       SendMsg@data 0020                                  getADCValue@channel 0024  
                                     ??_ADC2Celsius 003C                                ??_I2C1_RestartEnable 0070  
                                    __pcstackCOMMON 0070                                       __end_of_Parse 0264  
                                      __pidataBANK0 0D93                                        __pidataBANK1 0E91  
                               ??_SYSTEM_Initialize 0076                                 KAPS_setRelPos@value 0029  
                        ??_I2C1_ErrorInterruptClear 0070                                     _I2C1_IsBusy$646 0074  
                                        ??_I2C1_ISR 0074                             _ADC_GetConversionResult 0D51  
                                    _OPTION_REGbits 0095                               __end_of_I2C1_EVENT_RX 0717  
                             __end_of_I2C1_EVENT_TX 0FD2                                             ??_Parse 0026  
                            ?_I2C1_InterruptsEnable 0070                                   _I2C1_EventHandler 04B1  
                         __end_of_SYSTEM_Initialize 0E67                                          __pbssBANK0 0052  
                                        __pbssBANK1 00B8                                __end_of_EUSART_Write 0D27  
                                ?_I2C1_EventHandler 0070                                   KAPS_setRelPos@reg 0028  
                             _I2C1_StatusFlagsClear 0D03                                    ?_I2C1_EVENT_IDLE 0070  
                                  ?_I2C1_EVENT_NACK 0070                                           ?_SendNack 0070  
                                  ?_I2C1_EVENT_STOP 0070                                           ?_SendSync 0070  
                               ??_I2C1_EventHandler 0072                                          __pmaintext 0F54  
                               __end_of_I2C1_IsAddr 0D7E                                 __end_of_I2C1_IsData 0D35  
                               __end_of_I2C1_IsNack 0D51                                             ?___lmul 0020  
                               __end_of_I2C1_IsBusy 0E30                                             _ADC2Amp 04F4  
                                           _ADC2dBm 05EF                                          __pintentry 0004  
                                   _I2C1_Initialize 0E7B                                _EUSART_AutoBaudQuery 0000  
                               __end_of_ADC2Celsius 0421                                             _ADC_ISR 0E03  
                                    ___lmul@product 0028                                         ?_ProcessMsg 004E  
                                KAPS_setAbsPos@data 0033                               __end_of_I2C1_NackSend 0D13  
                             __end_of_I2C1_BusReset 0D03                                     _EUSART_IsTxDone 0000  
                                   _EUSART_ErrorGet 0000                                           _I2C1_Read 07DC  
                         __end_of_I2C1_EventHandler 04F4                              _I2C1_ErrorEventHandler 0EE4  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                          __end_of_I2C1_EVENT_ERROR 0D4B                            __end_of_I2C1_EVENT_RESET 0D77  
                                         ?_packLong 0020                       __end_of_I2C1_CallbackRegister 0E03  
                                   KAPS_getPos@data 002F                               __end_of_I2C1_StopSend 0CED  
                                        ??_SendNack 0076                                          ??_SendSync 0075  
                              _ADC_InterruptHandler 006B                                             _SendMsg 062C  
                           _ADC_SetInterruptHandler 0D57                                       ??_getADCValue 0022  
                                           ___aldiv 0264                                    KAPS_StorePos@idx 0038  
                                  KAPS_StorePos@reg 0037                                    KAPS_StorePos@pos 002D  
                         ??_ADC_GetConversionResult 0076                                             __ptext1 0E54  
                                           __ptext2 0421                                             __ptext3 0DC8  
                                           __ptext4 0D3A                                             __ptext5 0E7B  
                                           __ptext6 0D27                                             __ptext7 0DF7  
                                           __ptext8 0EA9                                             __ptext9 0DEB  
                              I2C1_Write@dataLength 0023                                 _I2C1_RestartDisable 0CF3  
                                  ___aldiv@dividend 0030                            ??_PIN_MANAGER_Initialize 0074  
                                        ?_I2C1_Read 0020                                       ?_I2C1_AckSend 0070  
                           _INT_SetInterruptHandler 0D3A                                     _i2c1_eventTable 0812  
                                           clrloop0 0D5E                                end_of_initialization 0064  
                                        ??_packLong 0024                              ?_I2C1_StatusFlagsClear 0070  
                                           init_ram 0D63                                             initloop 0D64  
                                       _I2C1_IsAddr 0D77                                         _I2C1_IsData 0D30  
                                       _I2C1_IsNack 0D4B                                         _I2C1_IsBusy 0E20  
                                  ??_KAPS_getStatus 0025                                   _EUSART_Initialize 0EA9  
                              ?_I2C1_RestartDisable 0070                                    I2C1_Read@address 0020  
                           __end_of_I2C1_Initialize 0E91                        __end_of_ADC_IsConversionDone 0D93  
                                       _ADC2Celsius 03D5                                  ?_EUSART_Initialize 0070  
                                 KAPS_getIndex@data 0028                                    ___aldiv@quotient 0036  
                                  _I2C1_DataReceive 0CED                                     _I2C1_WriteStart 0D7E  
                               __end_of_getADCValue 06DE                                 ??_EUSART_Initialize 0076  
                                      _KAPS_GoToIdx 0F06                                           _SSPDATPPS 0E21  
                                         _SSPCLKPPS 0E20                                    ??_KAPS_setAbsPos 0031  
                                    ??_I2C1_AckSend 0070                 __end_of_ADC_DefaultInterruptHandler 0CE4  
                       _ADC_DefaultInterruptHandler 0CE3                                 _ADC_StartConversion 0CFC  
                                  ??_KAPS_setRelPos 0025                                 _EUSART_Deinitialize 0000  
                                        _unpackLong 046C                                          _unpackWord 0DDF  
                         __end_of_EUSART_Initialize 0EC6                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 0076                               ??_I2C1_RestartDisable 0070  
                                    ProcessMsg@data 004E                                ?_ADC_StartConversion 0070  
                                      getADCValue@i 0029                        __end_of_INTERRUPT_Initialize 0DD3  
                                    _I2C1_ERROR_ISR 0D17                                      __end_of___lmul 074B  
                             __end_of_KAPS_StorePos 0574                                           Parse@data 0028  
                                     ?_SSPA_getPOut 0070                          __end_of_I2C1_ReceiveEnable 0CF3  
                                      _EUSART_Write 0D23                                       ?_SSPA_getTemp 0070  
                           __end_of_i2c1_eventTable 0824                                      _ADC_Initialize 0E67  
                              KAPS_setRelPos@offset 0027                           ??_INT_SetInterruptHandler 0076  
                           ??_I2C1_InterruptsEnable 0074                                       ??_KAPS_getPos 002D  
                                          ADC2Amp@v 003A                                 start_initialization 0038  
                                     ?_SSPA_setMute 0074                                         ??_I2C1_Read 0075  
                                          ADC2dBm@v 003A                               __end_of_KAPS_getIndex 1000  
                                      SendSync@data 0075                                       ??_EUSART_Read 0074  
                           _I2C1_EVENT_SEND_RD_ADDR 0D9A                             __end_of_I2C1_WriteStart 0D85  
                                  ?_I2C1_Initialize 0070                                   KAPS_getStatus@reg 0027  
                             ??_ADC_StartConversion 0074                             _I2C1_EVENT_SEND_WR_ADDR 0D69  
                                       _getADCValue 06A3                              __end_of_I2C1_ERROR_ISR 0D1B  
                        _EUSART_FramingErrorHandler 0076                                    _I2C1_IsRxBufFull 0D0B  
                                          ??___lmul 0074                                            ?_ADC2Amp 003A  
                                          ?_ADC2dBm 003A                              __end_of_ADC_Initialize 0E7B  
                                       __pdataBANK0 0064                                         __pdataBANK1 00A0  
                                    ??_SSPA_getPOut 0046                                      ??_SSPA_getTemp 0048  
                                          ?_ADC_ISR 0070                                     unpackLong@value 0020  
                                      ??_ProcessMsg 004F                             ?_I2C1_ErrorEventHandler 0070  
                                    ??_SSPA_setMute 0020                                         __pbssCOMMON 0076  
                                         ___latbits 0001                                       __pcstackBANK0 0020  
                              _ADC_IsConversionDone 0D8C                                         ?_unpackLong 0020  
                               __end_of_KAPS_getPos 05B2                                         ?_unpackWord 0020  
                         ?_I2C1_ErrorInterruptClear 0070                        __end_of_I2C1_DefaultCallback 0003  
                                 ?_I2C1_EVENT_ERROR 0070                                   ?_I2C1_EVENT_RESET 0070  
                               __end_of_EUSART_Read 0FA6                                  ??_I2C1_EVENT_ERROR 0070  
                                ??_I2C1_EVENT_RESET 0070                                           __pnvBANK0 006B  
                                __end_of_ProcessMsg 01AC                                            ?_SendMsg 0020  
                              __end_of_I2C1_AckSend 0D0B                              _PIN_MANAGER_Initialize 0421  
                                   ?_I2C1_ERROR_ISR 0070                                   ADC2Celsius@result 0044  
                                    _I2C1_ReadStart 0D85                                   _ADC_SelectChannel 0DD3  
                                          ?___aldiv 002C                                     ?_ADC_Initialize 0070  
                                ?_ADC_SelectChannel 0070                                            _I2C1_ISR 0D1B  
                      ??_INTERRUPT_InterruptManager 0074                      __end_of_I2C1_ErrorEventHandler 0F06  
                                          _BAUD1CON 019F                                      KAPS_getPos@reg 0033  
                            _EUSART_TransmitDisable 0000                                    SSPA_getPOut@band 004A  
                                          _I2C_Host 07FE                                 ??_ADC_SelectChannel 0074  
                             ?_ADC_IsConversionDone 0070                                 I2C1_Read@dataLength 0023  
                     I2C1_EVENT_ERROR@retEventState 0070                             ??_I2C1_StatusFlagsClear 0070  
                          __end_of_I2C1_DataReceive 0CF0                           ??_I2C1_EVENT_SEND_RD_ADDR 0070  
                                  _EUSART_IsRxReady 0D35                                _INTERRUPT_Initialize 0DC8  
                                   unpackWord@value 0020                                    _EUSART_IsTxReady 0E11  
                                   ___aldiv@divisor 002C                                    _CLOCK_Initialize 0DAA  
                                    _I2C1_StartSend 0CF9                                     ___aldiv@counter 0034  
                                      ?_I2C1_IsAddr 0070                                        ?_I2C1_IsData 0070  
                                          _LATCbits 010E                                        ?_I2C1_IsNack 0070  
                         ??_I2C1_EVENT_SEND_WR_ADDR 0071                                        ?_I2C1_IsBusy 0070  
                             _I2C1_CallbackRegister 0DF7                                           clear_ram0 0D5D  
                                          _PIE1bits 0090                                            _PIE2bits 0091  
                                  ?_I2C1_WriteStart 0070                                   _eusartRxLastError 0060  
                                        _I2C1_Close 0E41                              __end_of_I2C1_ReadStart 0D8C  
                         __end_of_ADC_SelectChannel 0DDF                                        ?_ADC2Celsius 003A  
                                          _PIR1bits 0010                                            _PIR2bits 0011  
                                        _I2C1_Write 0EC6                                    KAPS_getIndex@reg 0027  
                                    _I2C1_WriteRead 0000                                            _SSP1CON1 0215  
                                          _SSP1CON2 0216                                            _SSP1CON3 0217  
                                          _SSP1STAT 0214                                    KAPS_getPos@F9702 00C0  
                                  SSPA_getTemp@band 004D                                          _ADCON0bits 009D  
                          ADC_SelectChannel@channel 0075                                         _KAPS_getPos 0574  
                      I2C1_EVENT_NACK@retEventState 0070                                       _I2C1_EVENT_RX 06DE  
                                     _I2C1_EVENT_TX 0FA6                                         _EUSART_Read 0F7C  
                                 ___lmul@multiplier 0020                               ?_INTERRUPT_Initialize 0070  
                            __end_of_I2C1_StartSend 0CFC                                __end_of_SSPA_getPOut 037E  
                              __end_of_SSPA_getTemp 05EF                                 _I2C1_InterruptClear 0CE7  
                                          _SendNack 0DB2                                            _SendSync 0E30  
                              __end_of_SSPA_setMute 06A3                                     ?_I2C1_ReadStart 0070  
                          ?_ADC_GetConversionResult 0074                               _EUSART_IsTxReady$1324 0074  
                                    unpackLong@data 0024                                       _I2C1_Callback 0062  
                                 KAPS_StorePos@data 0033                                _I2C1_DefaultCallback 0002  
                                   KAPS_GoToIdx@idx 0027                                     KAPS_GoToIdx@reg 0028  
                              ?_I2C1_InterruptClear 0070                                       _I2C1_NackSend 0D0F  
                            ??_ADC_IsConversionDone 0074                                       _I2C1_BusReset 0CFF  
                                 ??_I2C1_EVENT_IDLE 0070                                   ??_I2C1_EVENT_NACK 0070  
                                 ??_I2C1_EVENT_STOP 0070                       __end_of_I2C1_InterruptsEnable 0D2B  
                                    ?_I2C1_EVENT_RX 0070                                      ?_I2C1_EVENT_TX 0070  
                                  ADC2Celsius@value 0040                                       _I2C1_ErrorGet 0000  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 0DBD  
                                          __ptext11 0DAA                                            __ptext20 06A3  
                                          __ptext12 0E67                                            __ptext21 0CFC  
                                          __ptext13 0D57                                            __ptext30 074B  
                                          __ptext22 0DD3                                            __ptext14 0068  
                                          __ptext31 07AE                                            __ptext23 0D8C  
                                          __ptext15 0DDF                                            __ptext40 0EC6  
                                          __ptext32 0574                                            __ptext24 0D51  
                                          __ptext16 0668                                            __ptext41 0D7E  
                                          __ptext33 037E                                            __ptext25 05EF  
                                          __ptext17 05B2                                            __ptext50 0F7C  
                                          __ptext42 0CF9                                            __ptext34 0FD2  
                                          __ptext26 04F4                                            __ptext18 03D5  
                                          __ptext51 0D1F                                            __ptext43 0E20  
                                          __ptext35 07DC                                            __ptext27 0717  
                                          __ptext19 02F4                                            __ptext60 0D17  
                                          __ptext52 0003                                            __ptext44 01AC  
                                          __ptext36 0D85                                            __ptext28 0264  
                                          __ptext61 0EE4                                            __ptext53 0D35  
                                          __ptext45 0DB2                                            __ptext37 0534  
                                          __ptext29 0F2C                                            __ptext70 0FA6  
                                          __ptext62 0D70                                            __ptext46 062C  
                                          __ptext38 046C                                            __ptext71 0CF6  
                                          __ptext63 0DA2                                            __ptext55 0D1B  
                                          __ptext47 0E30                                            __ptext39 0F06  
                                          __ptext80 0E41                                            __ptext72 0D2B  
                                          __ptext64 0D45                                            __ptext56 04B1  
                                          __ptext48 0D23                                            __ptext81 0D03  
                                          __ptext73 0CF3                                            __ptext65 0D3F  
                                          __ptext57 0D4B                                            __ptext49 0E11  
                                          __ptext82 0CE7                                            __ptext74 0CF0  
                                          __ptext66 06DE                                            __ptext58 0D30  
                                          __ptext83 0CE4                                            __ptext75 0D0F  
                                          __ptext67 0D69                                            __ptext59 0D77  
                                          __ptext84 0CFF                                            __ptext76 0D0B  
                                          __ptext68 0D9A                                            __ptext85 0002  
                                          __ptext77 0CED                                            __ptext69 0D13  
                                          __ptext86 0E03                                            __ptext78 0D07  
                                          __ptext87 0CE3                                            __ptext79 0CEA  
                          __end_of_I2C1_IsRxBufFull 0D0F                                        _SSP1CON1bits 0215  
                                      _SSP1CON2bits 0216                         __end_of_I2C1_RestartDisable 0CF6  
                                _I2C1_ReceiveEnable 0CF0                                     ?_I2C1_StartSend 0070  
                             _EUSART_TransmitEnable 0000                                            _packLong 037E  
                            ?_I2C1_CallbackRegister 0074                                      unpackWord@data 0022  
                               ?_I2C1_ReceiveEnable 0070                                    _parserDataBuffer 00CA  
                                       ?_I2C1_Close 0070                                       _I2C1_StopSend 0CEA  
                                      ?_getADCValue 0020                                          _RC1STAbits 019D  
                                       ?_I2C1_Write 0020                                            int$flags 007E  
                __end_of_INTERRUPT_InterruptManager 0036                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 0DC8               ??_EUSART_FramingErrorCallbackRegister 0076  
              ?_EUSART_FramingErrorCallbackRegister 0074                 _EUSART_FramingErrorCallbackRegister 0DBD  
                             ?_I2C1_DefaultCallback 0070                                            main@data 0051  
                                      _SSP1STATbits 0214                               ??_I2C1_InterruptClear 0070  
                  __end_of_I2C1_ErrorInterruptClear 0CE7                               SSPA_getTemp@adc_value 004A  
                                    ?_I2C1_NackSend 0070                                      ?_I2C1_BusReset 0070  
                              ??_I2C1_ReceiveEnable 0070                                      packLong@result 0028  
                                        _INTCONbits 000B                                        _I2C1_AckSend 0D07  
                              _INT_InterruptHandler 0078                              ??_INTERRUPT_Initialize 0076  
                                      ??_unpackLong 0025                          I2C1_EVENT_RX@retEventState 0071  
                          ?_ADC_SetInterruptHandler 0074                                        ??_unpackWord 0074  
                                          intlevel1 0000                         __end_of_ADC_StartConversion 0CFF  
                                  ??_I2C1_ERROR_ISR 0074                                  I2C1_Read@retStatus 0075  
                           ?_PIN_MANAGER_Initialize 0070                          __end_of_I2C1_RestartEnable 0CF9  
        __end_of_EUSART_DefaultFramingErrorCallback 0004                ??_EUSART_DefaultFramingErrorCallback 0074  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 0003  
                   __end_of_ADC_GetConversionResult 0D57                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 0076                                       I2C1_Read@data 0022  
                          ?_INT_SetInterruptHandler 0074                            __end_of_EUSART_IsRxReady 0D3A  
                          __end_of_EUSART_IsTxReady 0E20                                  __end_of_unpackLong 04B1  
                          __end_of_CLOCK_Initialize 0DB2                                  __end_of_unpackWord 0DEB  
                                     __pstringtext1 077E                                       __pstringtext2 07FE  
                                     __pstringtext3 0812                                       ADC2Amp@result 0042  
                                   ??_I2C1_EVENT_RX 0070                                     ??_I2C1_EVENT_TX 0071  
                                      ___aldiv@sign 0035                                   _I2C1_DataTransmit 0D2B  
                                        _TX1STAbits 019E                                  ?_I2C1_DataTransmit 0070  
                               SSPA_getTemp@channel 004C                                        ADC2Amp@value 003E  
                                 ?_I2C1_DataReceive 0070                                  EUSART_Write@txData 0074  
                                     SendNack@error 0025                      __end_of_PIN_MANAGER_Initialize 046C  
                     __end_of_I2C1_StatusFlagsClear 0D07                                  ??_I2C1_DataReceive 0070  
                                      ADC2Celsius@v 003A                          I2C1_EVENT_TX@retEventState 0071  
                               ??_I2C1_DataTransmit 0070  
