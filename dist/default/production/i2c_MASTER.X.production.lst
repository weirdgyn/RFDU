

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 16:54:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	text87,local,class=CODE,merge=1,delta=2
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110     0000                     
   111                           ; Generated 07/09/2023 GMT
   112                           ; 
   113                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F1618 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     0111                     	;# 
   202     0112                     	;# 
   203     0113                     	;# 
   204     0114                     	;# 
   205     0115                     	;# 
   206     0116                     	;# 
   207     0117                     	;# 
   208     0118                     	;# 
   209     0119                     	;# 
   210     011C                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     018E                     	;# 
   214     0191                     	;# 
   215     0191                     	;# 
   216     0192                     	;# 
   217     0193                     	;# 
   218     0193                     	;# 
   219     0194                     	;# 
   220     0195                     	;# 
   221     0196                     	;# 
   222     0197                     	;# 
   223     0199                     	;# 
   224     0199                     	;# 
   225     0199                     	;# 
   226     019A                     	;# 
   227     019A                     	;# 
   228     019A                     	;# 
   229     019B                     	;# 
   230     019B                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019B                     	;# 
   234     019C                     	;# 
   235     019C                     	;# 
   236     019C                     	;# 
   237     019D                     	;# 
   238     019D                     	;# 
   239     019D                     	;# 
   240     019E                     	;# 
   241     019E                     	;# 
   242     019E                     	;# 
   243     019F                     	;# 
   244     019F                     	;# 
   245     019F                     	;# 
   246     019F                     	;# 
   247     019F                     	;# 
   248     020C                     	;# 
   249     020D                     	;# 
   250     020E                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0215                     	;# 
   263     0216                     	;# 
   264     0216                     	;# 
   265     0217                     	;# 
   266     0217                     	;# 
   267     028C                     	;# 
   268     028D                     	;# 
   269     028E                     	;# 
   270     0291                     	;# 
   271     0291                     	;# 
   272     0292                     	;# 
   273     0293                     	;# 
   274     0294                     	;# 
   275     0298                     	;# 
   276     0298                     	;# 
   277     0299                     	;# 
   278     029A                     	;# 
   279     029B                     	;# 
   280     029E                     	;# 
   281     030C                     	;# 
   282     030D                     	;# 
   283     030E                     	;# 
   284     038C                     	;# 
   285     038D                     	;# 
   286     038E                     	;# 
   287     0391                     	;# 
   288     0392                     	;# 
   289     0393                     	;# 
   290     0394                     	;# 
   291     0395                     	;# 
   292     0396                     	;# 
   293     0397                     	;# 
   294     0398                     	;# 
   295     0399                     	;# 
   296     040E                     	;# 
   297     0413                     	;# 
   298     0413                     	;# 
   299     0414                     	;# 
   300     0414                     	;# 
   301     0415                     	;# 
   302     0416                     	;# 
   303     0417                     	;# 
   304     0418                     	;# 
   305     041A                     	;# 
   306     041A                     	;# 
   307     041B                     	;# 
   308     041B                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     041F                     	;# 
   313     0493                     	;# 
   314     0494                     	;# 
   315     0495                     	;# 
   316     0496                     	;# 
   317     049A                     	;# 
   318     049B                     	;# 
   319     049C                     	;# 
   320     049D                     	;# 
   321     058C                     	;# 
   322     058C                     	;# 
   323     058D                     	;# 
   324     058E                     	;# 
   325     058E                     	;# 
   326     058F                     	;# 
   327     0590                     	;# 
   328     0590                     	;# 
   329     0591                     	;# 
   330     0592                     	;# 
   331     0592                     	;# 
   332     0593                     	;# 
   333     0594                     	;# 
   334     0594                     	;# 
   335     0595                     	;# 
   336     0596                     	;# 
   337     0596                     	;# 
   338     0597                     	;# 
   339     0598                     	;# 
   340     0599                     	;# 
   341     059A                     	;# 
   342     059B                     	;# 
   343     059B                     	;# 
   344     059C                     	;# 
   345     059D                     	;# 
   346     060C                     	;# 
   347     060C                     	;# 
   348     060D                     	;# 
   349     060E                     	;# 
   350     060F                     	;# 
   351     060F                     	;# 
   352     0610                     	;# 
   353     0611                     	;# 
   354     0612                     	;# 
   355     0613                     	;# 
   356     0614                     	;# 
   357     0617                     	;# 
   358     0617                     	;# 
   359     0618                     	;# 
   360     0619                     	;# 
   361     061A                     	;# 
   362     061A                     	;# 
   363     061B                     	;# 
   364     061C                     	;# 
   365     0691                     	;# 
   366     0692                     	;# 
   367     0693                     	;# 
   368     0694                     	;# 
   369     0695                     	;# 
   370     0696                     	;# 
   371     0697                     	;# 
   372     0699                     	;# 
   373     069A                     	;# 
   374     0711                     	;# 
   375     0712                     	;# 
   376     0713                     	;# 
   377     0714                     	;# 
   378     0715                     	;# 
   379     0718                     	;# 
   380     0718                     	;# 
   381     0719                     	;# 
   382     071A                     	;# 
   383     071A                     	;# 
   384     071B                     	;# 
   385     071C                     	;# 
   386     071D                     	;# 
   387     0791                     	;# 
   388     0791                     	;# 
   389     0792                     	;# 
   390     0793                     	;# 
   391     0793                     	;# 
   392     0794                     	;# 
   393     0795                     	;# 
   394     0795                     	;# 
   395     0796                     	;# 
   396     0797                     	;# 
   397     0797                     	;# 
   398     0798                     	;# 
   399     0799                     	;# 
   400     079A                     	;# 
   401     080C                     	;# 
   402     080C                     	;# 
   403     080D                     	;# 
   404     080E                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0810                     	;# 
   409     0811                     	;# 
   410     0812                     	;# 
   411     0812                     	;# 
   412     0813                     	;# 
   413     0814                     	;# 
   414     0815                     	;# 
   415     0816                     	;# 
   416     0817                     	;# 
   417     0818                     	;# 
   418     0819                     	;# 
   419     081A                     	;# 
   420     081A                     	;# 
   421     081B                     	;# 
   422     081C                     	;# 
   423     081C                     	;# 
   424     081D                     	;# 
   425     088C                     	;# 
   426     088D                     	;# 
   427     088E                     	;# 
   428     088F                     	;# 
   429     088F                     	;# 
   430     0890                     	;# 
   431     0891                     	;# 
   432     0892                     	;# 
   433     0893                     	;# 
   434     0893                     	;# 
   435     0894                     	;# 
   436     0895                     	;# 
   437     0896                     	;# 
   438     0897                     	;# 
   439     0897                     	;# 
   440     0898                     	;# 
   441     0899                     	;# 
   442     0D8C                     	;# 
   443     0D8C                     	;# 
   444     0D8D                     	;# 
   445     0D8E                     	;# 
   446     0D8F                     	;# 
   447     0D8F                     	;# 
   448     0D90                     	;# 
   449     0D91                     	;# 
   450     0D92                     	;# 
   451     0D92                     	;# 
   452     0D93                     	;# 
   453     0D94                     	;# 
   454     0D95                     	;# 
   455     0D95                     	;# 
   456     0D96                     	;# 
   457     0D97                     	;# 
   458     0D98                     	;# 
   459     0D99                     	;# 
   460     0D9A                     	;# 
   461     0D9B                     	;# 
   462     0D9C                     	;# 
   463     0D9D                     	;# 
   464     0D9E                     	;# 
   465     0D9E                     	;# 
   466     0D9F                     	;# 
   467     0DA0                     	;# 
   468     0DA1                     	;# 
   469     0DA1                     	;# 
   470     0DA2                     	;# 
   471     0DA3                     	;# 
   472     0DA4                     	;# 
   473     0DA4                     	;# 
   474     0DA5                     	;# 
   475     0DA6                     	;# 
   476     0DA7                     	;# 
   477     0DA7                     	;# 
   478     0DA8                     	;# 
   479     0DA9                     	;# 
   480     0DAA                     	;# 
   481     0DAB                     	;# 
   482     0DAC                     	;# 
   483     0DAD                     	;# 
   484     0DAE                     	;# 
   485     0DAF                     	;# 
   486     0E0F                     	;# 
   487     0E10                     	;# 
   488     0E11                     	;# 
   489     0E12                     	;# 
   490     0E13                     	;# 
   491     0E14                     	;# 
   492     0E15                     	;# 
   493     0E16                     	;# 
   494     0E17                     	;# 
   495     0E17                     	;# 
   496     0E18                     	;# 
   497     0E18                     	;# 
   498     0E19                     	;# 
   499     0E1A                     	;# 
   500     0E1B                     	;# 
   501     0E1B                     	;# 
   502     0E1C                     	;# 
   503     0E1D                     	;# 
   504     0E1E                     	;# 
   505     0E1E                     	;# 
   506     0E1F                     	;# 
   507     0E20                     	;# 
   508     0E21                     	;# 
   509     0E22                     	;# 
   510     0E23                     	;# 
   511     0E24                     	;# 
   512     0E25                     	;# 
   513     0E26                     	;# 
   514     0E27                     	;# 
   515     0E28                     	;# 
   516     0E29                     	;# 
   517     0E2A                     	;# 
   518     0E2B                     	;# 
   519     0E2C                     	;# 
   520     0E2D                     	;# 
   521     0E2E                     	;# 
   522     0E90                     	;# 
   523     0E91                     	;# 
   524     0E92                     	;# 
   525     0E94                     	;# 
   526     0E95                     	;# 
   527     0E9C                     	;# 
   528     0E9D                     	;# 
   529     0E9E                     	;# 
   530     0E9F                     	;# 
   531     0EA0                     	;# 
   532     0EA1                     	;# 
   533     0EA2                     	;# 
   534     0EA3                     	;# 
   535     0EA4                     	;# 
   536     0EA5                     	;# 
   537     0EA6                     	;# 
   538     0EA7                     	;# 
   539     0F0F                     	;# 
   540     0F10                     	;# 
   541     0F11                     	;# 
   542     0F12                     	;# 
   543     0F13                     	;# 
   544     0F14                     	;# 
   545     0F15                     	;# 
   546     0F16                     	;# 
   547     0F17                     	;# 
   548     0F18                     	;# 
   549     0F19                     	;# 
   550     0F1A                     	;# 
   551     0F1B                     	;# 
   552     0F1C                     	;# 
   553     0F1D                     	;# 
   554     0F1E                     	;# 
   555     0F1F                     	;# 
   556     0F20                     	;# 
   557     0F21                     	;# 
   558     0F22                     	;# 
   559     0F23                     	;# 
   560     0FE4                     	;# 
   561     0FE5                     	;# 
   562     0FE6                     	;# 
   563     0FE7                     	;# 
   564     0FE8                     	;# 
   565     0FE9                     	;# 
   566     0FEA                     	;# 
   567     0FEB                     	;# 
   568     0FED                     	;# 
   569     0FEE                     	;# 
   570     0FEF                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000D                     	;# 
   585     000E                     	;# 
   586     0010                     	;# 
   587     0011                     	;# 
   588     0012                     	;# 
   589     0013                     	;# 
   590     0014                     	;# 
   591     0015                     	;# 
   592     0016                     	;# 
   593     0016                     	;# 
   594     0017                     	;# 
   595     0018                     	;# 
   596     0019                     	;# 
   597     001A                     	;# 
   598     001A                     	;# 
   599     001B                     	;# 
   600     001B                     	;# 
   601     001C                     	;# 
   602     001D                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     008E                     	;# 
   608     0090                     	;# 
   609     0091                     	;# 
   610     0092                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0098                     	;# 
   616     0099                     	;# 
   617     009A                     	;# 
   618     009B                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     009F                     	;# 
   624     010C                     	;# 
   625     010D                     	;# 
   626     010E                     	;# 
   627     0111                     	;# 
   628     0112                     	;# 
   629     0113                     	;# 
   630     0114                     	;# 
   631     0115                     	;# 
   632     0116                     	;# 
   633     0117                     	;# 
   634     0118                     	;# 
   635     0119                     	;# 
   636     011C                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     018E                     	;# 
   640     0191                     	;# 
   641     0191                     	;# 
   642     0192                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0197                     	;# 
   649     0199                     	;# 
   650     0199                     	;# 
   651     0199                     	;# 
   652     019A                     	;# 
   653     019A                     	;# 
   654     019A                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019B                     	;# 
   659     019B                     	;# 
   660     019C                     	;# 
   661     019C                     	;# 
   662     019C                     	;# 
   663     019D                     	;# 
   664     019D                     	;# 
   665     019D                     	;# 
   666     019E                     	;# 
   667     019E                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     019F                     	;# 
   671     019F                     	;# 
   672     019F                     	;# 
   673     019F                     	;# 
   674     020C                     	;# 
   675     020D                     	;# 
   676     020E                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0216                     	;# 
   690     0216                     	;# 
   691     0217                     	;# 
   692     0217                     	;# 
   693     028C                     	;# 
   694     028D                     	;# 
   695     028E                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0298                     	;# 
   702     0298                     	;# 
   703     0299                     	;# 
   704     029A                     	;# 
   705     029B                     	;# 
   706     029E                     	;# 
   707     030C                     	;# 
   708     030D                     	;# 
   709     030E                     	;# 
   710     038C                     	;# 
   711     038D                     	;# 
   712     038E                     	;# 
   713     0391                     	;# 
   714     0392                     	;# 
   715     0393                     	;# 
   716     0394                     	;# 
   717     0395                     	;# 
   718     0396                     	;# 
   719     0397                     	;# 
   720     0398                     	;# 
   721     0399                     	;# 
   722     040E                     	;# 
   723     0413                     	;# 
   724     0413                     	;# 
   725     0414                     	;# 
   726     0414                     	;# 
   727     0415                     	;# 
   728     0416                     	;# 
   729     0417                     	;# 
   730     0418                     	;# 
   731     041A                     	;# 
   732     041A                     	;# 
   733     041B                     	;# 
   734     041B                     	;# 
   735     041C                     	;# 
   736     041D                     	;# 
   737     041E                     	;# 
   738     041F                     	;# 
   739     0493                     	;# 
   740     0494                     	;# 
   741     0495                     	;# 
   742     0496                     	;# 
   743     049A                     	;# 
   744     049B                     	;# 
   745     049C                     	;# 
   746     049D                     	;# 
   747     058C                     	;# 
   748     058C                     	;# 
   749     058D                     	;# 
   750     058E                     	;# 
   751     058E                     	;# 
   752     058F                     	;# 
   753     0590                     	;# 
   754     0590                     	;# 
   755     0591                     	;# 
   756     0592                     	;# 
   757     0592                     	;# 
   758     0593                     	;# 
   759     0594                     	;# 
   760     0594                     	;# 
   761     0595                     	;# 
   762     0596                     	;# 
   763     0596                     	;# 
   764     0597                     	;# 
   765     0598                     	;# 
   766     0599                     	;# 
   767     059A                     	;# 
   768     059B                     	;# 
   769     059B                     	;# 
   770     059C                     	;# 
   771     059D                     	;# 
   772     060C                     	;# 
   773     060C                     	;# 
   774     060D                     	;# 
   775     060E                     	;# 
   776     060F                     	;# 
   777     060F                     	;# 
   778     0610                     	;# 
   779     0611                     	;# 
   780     0612                     	;# 
   781     0613                     	;# 
   782     0614                     	;# 
   783     0617                     	;# 
   784     0617                     	;# 
   785     0618                     	;# 
   786     0619                     	;# 
   787     061A                     	;# 
   788     061A                     	;# 
   789     061B                     	;# 
   790     061C                     	;# 
   791     0691                     	;# 
   792     0692                     	;# 
   793     0693                     	;# 
   794     0694                     	;# 
   795     0695                     	;# 
   796     0696                     	;# 
   797     0697                     	;# 
   798     0699                     	;# 
   799     069A                     	;# 
   800     0711                     	;# 
   801     0712                     	;# 
   802     0713                     	;# 
   803     0714                     	;# 
   804     0715                     	;# 
   805     0718                     	;# 
   806     0718                     	;# 
   807     0719                     	;# 
   808     071A                     	;# 
   809     071A                     	;# 
   810     071B                     	;# 
   811     071C                     	;# 
   812     071D                     	;# 
   813     0791                     	;# 
   814     0791                     	;# 
   815     0792                     	;# 
   816     0793                     	;# 
   817     0793                     	;# 
   818     0794                     	;# 
   819     0795                     	;# 
   820     0795                     	;# 
   821     0796                     	;# 
   822     0797                     	;# 
   823     0797                     	;# 
   824     0798                     	;# 
   825     0799                     	;# 
   826     079A                     	;# 
   827     080C                     	;# 
   828     080C                     	;# 
   829     080D                     	;# 
   830     080E                     	;# 
   831     080E                     	;# 
   832     080F                     	;# 
   833     0810                     	;# 
   834     0810                     	;# 
   835     0811                     	;# 
   836     0812                     	;# 
   837     0812                     	;# 
   838     0813                     	;# 
   839     0814                     	;# 
   840     0815                     	;# 
   841     0816                     	;# 
   842     0817                     	;# 
   843     0818                     	;# 
   844     0819                     	;# 
   845     081A                     	;# 
   846     081A                     	;# 
   847     081B                     	;# 
   848     081C                     	;# 
   849     081C                     	;# 
   850     081D                     	;# 
   851     088C                     	;# 
   852     088D                     	;# 
   853     088E                     	;# 
   854     088F                     	;# 
   855     088F                     	;# 
   856     0890                     	;# 
   857     0891                     	;# 
   858     0892                     	;# 
   859     0893                     	;# 
   860     0893                     	;# 
   861     0894                     	;# 
   862     0895                     	;# 
   863     0896                     	;# 
   864     0897                     	;# 
   865     0897                     	;# 
   866     0898                     	;# 
   867     0899                     	;# 
   868     0D8C                     	;# 
   869     0D8C                     	;# 
   870     0D8D                     	;# 
   871     0D8E                     	;# 
   872     0D8F                     	;# 
   873     0D8F                     	;# 
   874     0D90                     	;# 
   875     0D91                     	;# 
   876     0D92                     	;# 
   877     0D92                     	;# 
   878     0D93                     	;# 
   879     0D94                     	;# 
   880     0D95                     	;# 
   881     0D95                     	;# 
   882     0D96                     	;# 
   883     0D97                     	;# 
   884     0D98                     	;# 
   885     0D99                     	;# 
   886     0D9A                     	;# 
   887     0D9B                     	;# 
   888     0D9C                     	;# 
   889     0D9D                     	;# 
   890     0D9E                     	;# 
   891     0D9E                     	;# 
   892     0D9F                     	;# 
   893     0DA0                     	;# 
   894     0DA1                     	;# 
   895     0DA1                     	;# 
   896     0DA2                     	;# 
   897     0DA3                     	;# 
   898     0DA4                     	;# 
   899     0DA4                     	;# 
   900     0DA5                     	;# 
   901     0DA6                     	;# 
   902     0DA7                     	;# 
   903     0DA7                     	;# 
   904     0DA8                     	;# 
   905     0DA9                     	;# 
   906     0DAA                     	;# 
   907     0DAB                     	;# 
   908     0DAC                     	;# 
   909     0DAD                     	;# 
   910     0DAE                     	;# 
   911     0DAF                     	;# 
   912     0E0F                     	;# 
   913     0E10                     	;# 
   914     0E11                     	;# 
   915     0E12                     	;# 
   916     0E13                     	;# 
   917     0E14                     	;# 
   918     0E15                     	;# 
   919     0E16                     	;# 
   920     0E17                     	;# 
   921     0E17                     	;# 
   922     0E18                     	;# 
   923     0E18                     	;# 
   924     0E19                     	;# 
   925     0E1A                     	;# 
   926     0E1B                     	;# 
   927     0E1B                     	;# 
   928     0E1C                     	;# 
   929     0E1D                     	;# 
   930     0E1E                     	;# 
   931     0E1E                     	;# 
   932     0E1F                     	;# 
   933     0E20                     	;# 
   934     0E21                     	;# 
   935     0E22                     	;# 
   936     0E23                     	;# 
   937     0E24                     	;# 
   938     0E25                     	;# 
   939     0E26                     	;# 
   940     0E27                     	;# 
   941     0E28                     	;# 
   942     0E29                     	;# 
   943     0E2A                     	;# 
   944     0E2B                     	;# 
   945     0E2C                     	;# 
   946     0E2D                     	;# 
   947     0E2E                     	;# 
   948     0E90                     	;# 
   949     0E91                     	;# 
   950     0E92                     	;# 
   951     0E94                     	;# 
   952     0E95                     	;# 
   953     0E9C                     	;# 
   954     0E9D                     	;# 
   955     0E9E                     	;# 
   956     0E9F                     	;# 
   957     0EA0                     	;# 
   958     0EA1                     	;# 
   959     0EA2                     	;# 
   960     0EA3                     	;# 
   961     0EA4                     	;# 
   962     0EA5                     	;# 
   963     0EA6                     	;# 
   964     0EA7                     	;# 
   965     0F0F                     	;# 
   966     0F10                     	;# 
   967     0F11                     	;# 
   968     0F12                     	;# 
   969     0F13                     	;# 
   970     0F14                     	;# 
   971     0F15                     	;# 
   972     0F16                     	;# 
   973     0F17                     	;# 
   974     0F18                     	;# 
   975     0F19                     	;# 
   976     0F1A                     	;# 
   977     0F1B                     	;# 
   978     0F1C                     	;# 
   979     0F1D                     	;# 
   980     0F1E                     	;# 
   981     0F1F                     	;# 
   982     0F20                     	;# 
   983     0F21                     	;# 
   984     0F22                     	;# 
   985     0F23                     	;# 
   986     0FE4                     	;# 
   987     0FE5                     	;# 
   988     0FE6                     	;# 
   989     0FE7                     	;# 
   990     0FE8                     	;# 
   991     0FE9                     	;# 
   992     0FEA                     	;# 
   993     0FEB                     	;# 
   994     0FED                     	;# 
   995     0FEE                     	;# 
   996     0FEF                     	;# 
   997     0000                     	;# 
   998     0001                     	;# 
   999     0002                     	;# 
  1000     0003                     	;# 
  1001     0004                     	;# 
  1002     0005                     	;# 
  1003     0006                     	;# 
  1004     0007                     	;# 
  1005     0008                     	;# 
  1006     0009                     	;# 
  1007     000A                     	;# 
  1008     000B                     	;# 
  1009     000C                     	;# 
  1010     000D                     	;# 
  1011     000E                     	;# 
  1012     0010                     	;# 
  1013     0011                     	;# 
  1014     0012                     	;# 
  1015     0013                     	;# 
  1016     0014                     	;# 
  1017     0015                     	;# 
  1018     0016                     	;# 
  1019     0016                     	;# 
  1020     0017                     	;# 
  1021     0018                     	;# 
  1022     0019                     	;# 
  1023     001A                     	;# 
  1024     001A                     	;# 
  1025     001B                     	;# 
  1026     001B                     	;# 
  1027     001C                     	;# 
  1028     001D                     	;# 
  1029     001E                     	;# 
  1030     001F                     	;# 
  1031     008C                     	;# 
  1032     008D                     	;# 
  1033     008E                     	;# 
  1034     0090                     	;# 
  1035     0091                     	;# 
  1036     0092                     	;# 
  1037     0093                     	;# 
  1038     0094                     	;# 
  1039     0095                     	;# 
  1040     0096                     	;# 
  1041     0098                     	;# 
  1042     0099                     	;# 
  1043     009A                     	;# 
  1044     009B                     	;# 
  1045     009B                     	;# 
  1046     009C                     	;# 
  1047     009D                     	;# 
  1048     009E                     	;# 
  1049     009F                     	;# 
  1050     010C                     	;# 
  1051     010D                     	;# 
  1052     010E                     	;# 
  1053     0111                     	;# 
  1054     0112                     	;# 
  1055     0113                     	;# 
  1056     0114                     	;# 
  1057     0115                     	;# 
  1058     0116                     	;# 
  1059     0117                     	;# 
  1060     0118                     	;# 
  1061     0119                     	;# 
  1062     011C                     	;# 
  1063     018C                     	;# 
  1064     018D                     	;# 
  1065     018E                     	;# 
  1066     0191                     	;# 
  1067     0191                     	;# 
  1068     0192                     	;# 
  1069     0193                     	;# 
  1070     0193                     	;# 
  1071     0194                     	;# 
  1072     0195                     	;# 
  1073     0196                     	;# 
  1074     0197                     	;# 
  1075     0199                     	;# 
  1076     0199                     	;# 
  1077     0199                     	;# 
  1078     019A                     	;# 
  1079     019A                     	;# 
  1080     019A                     	;# 
  1081     019B                     	;# 
  1082     019B                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019B                     	;# 
  1086     019C                     	;# 
  1087     019C                     	;# 
  1088     019C                     	;# 
  1089     019D                     	;# 
  1090     019D                     	;# 
  1091     019D                     	;# 
  1092     019E                     	;# 
  1093     019E                     	;# 
  1094     019E                     	;# 
  1095     019F                     	;# 
  1096     019F                     	;# 
  1097     019F                     	;# 
  1098     019F                     	;# 
  1099     019F                     	;# 
  1100     020C                     	;# 
  1101     020D                     	;# 
  1102     020E                     	;# 
  1103     0211                     	;# 
  1104     0211                     	;# 
  1105     0212                     	;# 
  1106     0212                     	;# 
  1107     0213                     	;# 
  1108     0213                     	;# 
  1109     0214                     	;# 
  1110     0214                     	;# 
  1111     0215                     	;# 
  1112     0215                     	;# 
  1113     0215                     	;# 
  1114     0215                     	;# 
  1115     0216                     	;# 
  1116     0216                     	;# 
  1117     0217                     	;# 
  1118     0217                     	;# 
  1119     028C                     	;# 
  1120     028D                     	;# 
  1121     028E                     	;# 
  1122     0291                     	;# 
  1123     0291                     	;# 
  1124     0292                     	;# 
  1125     0293                     	;# 
  1126     0294                     	;# 
  1127     0298                     	;# 
  1128     0298                     	;# 
  1129     0299                     	;# 
  1130     029A                     	;# 
  1131     029B                     	;# 
  1132     029E                     	;# 
  1133     030C                     	;# 
  1134     030D                     	;# 
  1135     030E                     	;# 
  1136     038C                     	;# 
  1137     038D                     	;# 
  1138     038E                     	;# 
  1139     0391                     	;# 
  1140     0392                     	;# 
  1141     0393                     	;# 
  1142     0394                     	;# 
  1143     0395                     	;# 
  1144     0396                     	;# 
  1145     0397                     	;# 
  1146     0398                     	;# 
  1147     0399                     	;# 
  1148     040E                     	;# 
  1149     0413                     	;# 
  1150     0413                     	;# 
  1151     0414                     	;# 
  1152     0414                     	;# 
  1153     0415                     	;# 
  1154     0416                     	;# 
  1155     0417                     	;# 
  1156     0418                     	;# 
  1157     041A                     	;# 
  1158     041A                     	;# 
  1159     041B                     	;# 
  1160     041B                     	;# 
  1161     041C                     	;# 
  1162     041D                     	;# 
  1163     041E                     	;# 
  1164     041F                     	;# 
  1165     0493                     	;# 
  1166     0494                     	;# 
  1167     0495                     	;# 
  1168     0496                     	;# 
  1169     049A                     	;# 
  1170     049B                     	;# 
  1171     049C                     	;# 
  1172     049D                     	;# 
  1173     058C                     	;# 
  1174     058C                     	;# 
  1175     058D                     	;# 
  1176     058E                     	;# 
  1177     058E                     	;# 
  1178     058F                     	;# 
  1179     0590                     	;# 
  1180     0590                     	;# 
  1181     0591                     	;# 
  1182     0592                     	;# 
  1183     0592                     	;# 
  1184     0593                     	;# 
  1185     0594                     	;# 
  1186     0594                     	;# 
  1187     0595                     	;# 
  1188     0596                     	;# 
  1189     0596                     	;# 
  1190     0597                     	;# 
  1191     0598                     	;# 
  1192     0599                     	;# 
  1193     059A                     	;# 
  1194     059B                     	;# 
  1195     059B                     	;# 
  1196     059C                     	;# 
  1197     059D                     	;# 
  1198     060C                     	;# 
  1199     060C                     	;# 
  1200     060D                     	;# 
  1201     060E                     	;# 
  1202     060F                     	;# 
  1203     060F                     	;# 
  1204     0610                     	;# 
  1205     0611                     	;# 
  1206     0612                     	;# 
  1207     0613                     	;# 
  1208     0614                     	;# 
  1209     0617                     	;# 
  1210     0617                     	;# 
  1211     0618                     	;# 
  1212     0619                     	;# 
  1213     061A                     	;# 
  1214     061A                     	;# 
  1215     061B                     	;# 
  1216     061C                     	;# 
  1217     0691                     	;# 
  1218     0692                     	;# 
  1219     0693                     	;# 
  1220     0694                     	;# 
  1221     0695                     	;# 
  1222     0696                     	;# 
  1223     0697                     	;# 
  1224     0699                     	;# 
  1225     069A                     	;# 
  1226     0711                     	;# 
  1227     0712                     	;# 
  1228     0713                     	;# 
  1229     0714                     	;# 
  1230     0715                     	;# 
  1231     0718                     	;# 
  1232     0718                     	;# 
  1233     0719                     	;# 
  1234     071A                     	;# 
  1235     071A                     	;# 
  1236     071B                     	;# 
  1237     071C                     	;# 
  1238     071D                     	;# 
  1239     0791                     	;# 
  1240     0791                     	;# 
  1241     0792                     	;# 
  1242     0793                     	;# 
  1243     0793                     	;# 
  1244     0794                     	;# 
  1245     0795                     	;# 
  1246     0795                     	;# 
  1247     0796                     	;# 
  1248     0797                     	;# 
  1249     0797                     	;# 
  1250     0798                     	;# 
  1251     0799                     	;# 
  1252     079A                     	;# 
  1253     080C                     	;# 
  1254     080C                     	;# 
  1255     080D                     	;# 
  1256     080E                     	;# 
  1257     080E                     	;# 
  1258     080F                     	;# 
  1259     0810                     	;# 
  1260     0810                     	;# 
  1261     0811                     	;# 
  1262     0812                     	;# 
  1263     0812                     	;# 
  1264     0813                     	;# 
  1265     0814                     	;# 
  1266     0815                     	;# 
  1267     0816                     	;# 
  1268     0817                     	;# 
  1269     0818                     	;# 
  1270     0819                     	;# 
  1271     081A                     	;# 
  1272     081A                     	;# 
  1273     081B                     	;# 
  1274     081C                     	;# 
  1275     081C                     	;# 
  1276     081D                     	;# 
  1277     088C                     	;# 
  1278     088D                     	;# 
  1279     088E                     	;# 
  1280     088F                     	;# 
  1281     088F                     	;# 
  1282     0890                     	;# 
  1283     0891                     	;# 
  1284     0892                     	;# 
  1285     0893                     	;# 
  1286     0893                     	;# 
  1287     0894                     	;# 
  1288     0895                     	;# 
  1289     0896                     	;# 
  1290     0897                     	;# 
  1291     0897                     	;# 
  1292     0898                     	;# 
  1293     0899                     	;# 
  1294     0D8C                     	;# 
  1295     0D8C                     	;# 
  1296     0D8D                     	;# 
  1297     0D8E                     	;# 
  1298     0D8F                     	;# 
  1299     0D8F                     	;# 
  1300     0D90                     	;# 
  1301     0D91                     	;# 
  1302     0D92                     	;# 
  1303     0D92                     	;# 
  1304     0D93                     	;# 
  1305     0D94                     	;# 
  1306     0D95                     	;# 
  1307     0D95                     	;# 
  1308     0D96                     	;# 
  1309     0D97                     	;# 
  1310     0D98                     	;# 
  1311     0D99                     	;# 
  1312     0D9A                     	;# 
  1313     0D9B                     	;# 
  1314     0D9C                     	;# 
  1315     0D9D                     	;# 
  1316     0D9E                     	;# 
  1317     0D9E                     	;# 
  1318     0D9F                     	;# 
  1319     0DA0                     	;# 
  1320     0DA1                     	;# 
  1321     0DA1                     	;# 
  1322     0DA2                     	;# 
  1323     0DA3                     	;# 
  1324     0DA4                     	;# 
  1325     0DA4                     	;# 
  1326     0DA5                     	;# 
  1327     0DA6                     	;# 
  1328     0DA7                     	;# 
  1329     0DA7                     	;# 
  1330     0DA8                     	;# 
  1331     0DA9                     	;# 
  1332     0DAA                     	;# 
  1333     0DAB                     	;# 
  1334     0DAC                     	;# 
  1335     0DAD                     	;# 
  1336     0DAE                     	;# 
  1337     0DAF                     	;# 
  1338     0E0F                     	;# 
  1339     0E10                     	;# 
  1340     0E11                     	;# 
  1341     0E12                     	;# 
  1342     0E13                     	;# 
  1343     0E14                     	;# 
  1344     0E15                     	;# 
  1345     0E16                     	;# 
  1346     0E17                     	;# 
  1347     0E17                     	;# 
  1348     0E18                     	;# 
  1349     0E18                     	;# 
  1350     0E19                     	;# 
  1351     0E1A                     	;# 
  1352     0E1B                     	;# 
  1353     0E1B                     	;# 
  1354     0E1C                     	;# 
  1355     0E1D                     	;# 
  1356     0E1E                     	;# 
  1357     0E1E                     	;# 
  1358     0E1F                     	;# 
  1359     0E20                     	;# 
  1360     0E21                     	;# 
  1361     0E22                     	;# 
  1362     0E23                     	;# 
  1363     0E24                     	;# 
  1364     0E25                     	;# 
  1365     0E26                     	;# 
  1366     0E27                     	;# 
  1367     0E28                     	;# 
  1368     0E29                     	;# 
  1369     0E2A                     	;# 
  1370     0E2B                     	;# 
  1371     0E2C                     	;# 
  1372     0E2D                     	;# 
  1373     0E2E                     	;# 
  1374     0E90                     	;# 
  1375     0E91                     	;# 
  1376     0E92                     	;# 
  1377     0E94                     	;# 
  1378     0E95                     	;# 
  1379     0E9C                     	;# 
  1380     0E9D                     	;# 
  1381     0E9E                     	;# 
  1382     0E9F                     	;# 
  1383     0EA0                     	;# 
  1384     0EA1                     	;# 
  1385     0EA2                     	;# 
  1386     0EA3                     	;# 
  1387     0EA4                     	;# 
  1388     0EA5                     	;# 
  1389     0EA6                     	;# 
  1390     0EA7                     	;# 
  1391     0F0F                     	;# 
  1392     0F10                     	;# 
  1393     0F11                     	;# 
  1394     0F12                     	;# 
  1395     0F13                     	;# 
  1396     0F14                     	;# 
  1397     0F15                     	;# 
  1398     0F16                     	;# 
  1399     0F17                     	;# 
  1400     0F18                     	;# 
  1401     0F19                     	;# 
  1402     0F1A                     	;# 
  1403     0F1B                     	;# 
  1404     0F1C                     	;# 
  1405     0F1D                     	;# 
  1406     0F1E                     	;# 
  1407     0F1F                     	;# 
  1408     0F20                     	;# 
  1409     0F21                     	;# 
  1410     0F22                     	;# 
  1411     0F23                     	;# 
  1412     0FE4                     	;# 
  1413     0FE5                     	;# 
  1414     0FE6                     	;# 
  1415     0FE7                     	;# 
  1416     0FE8                     	;# 
  1417     0FE9                     	;# 
  1418     0FEA                     	;# 
  1419     0FEB                     	;# 
  1420     0FED                     	;# 
  1421     0FEE                     	;# 
  1422     0FEF                     	;# 
  1423     0000                     	;# 
  1424     0001                     	;# 
  1425     0002                     	;# 
  1426     0003                     	;# 
  1427     0004                     	;# 
  1428     0005                     	;# 
  1429     0006                     	;# 
  1430     0007                     	;# 
  1431     0008                     	;# 
  1432     0009                     	;# 
  1433     000A                     	;# 
  1434     000B                     	;# 
  1435     000C                     	;# 
  1436     000D                     	;# 
  1437     000E                     	;# 
  1438     0010                     	;# 
  1439     0011                     	;# 
  1440     0012                     	;# 
  1441     0013                     	;# 
  1442     0014                     	;# 
  1443     0015                     	;# 
  1444     0016                     	;# 
  1445     0016                     	;# 
  1446     0017                     	;# 
  1447     0018                     	;# 
  1448     0019                     	;# 
  1449     001A                     	;# 
  1450     001A                     	;# 
  1451     001B                     	;# 
  1452     001B                     	;# 
  1453     001C                     	;# 
  1454     001D                     	;# 
  1455     001E                     	;# 
  1456     001F                     	;# 
  1457     008C                     	;# 
  1458     008D                     	;# 
  1459     008E                     	;# 
  1460     0090                     	;# 
  1461     0091                     	;# 
  1462     0092                     	;# 
  1463     0093                     	;# 
  1464     0094                     	;# 
  1465     0095                     	;# 
  1466     0096                     	;# 
  1467     0098                     	;# 
  1468     0099                     	;# 
  1469     009A                     	;# 
  1470     009B                     	;# 
  1471     009B                     	;# 
  1472     009C                     	;# 
  1473     009D                     	;# 
  1474     009E                     	;# 
  1475     009F                     	;# 
  1476     010C                     	;# 
  1477     010D                     	;# 
  1478     010E                     	;# 
  1479     0111                     	;# 
  1480     0112                     	;# 
  1481     0113                     	;# 
  1482     0114                     	;# 
  1483     0115                     	;# 
  1484     0116                     	;# 
  1485     0117                     	;# 
  1486     0118                     	;# 
  1487     0119                     	;# 
  1488     011C                     	;# 
  1489     018C                     	;# 
  1490     018D                     	;# 
  1491     018E                     	;# 
  1492     0191                     	;# 
  1493     0191                     	;# 
  1494     0192                     	;# 
  1495     0193                     	;# 
  1496     0193                     	;# 
  1497     0194                     	;# 
  1498     0195                     	;# 
  1499     0196                     	;# 
  1500     0197                     	;# 
  1501     0199                     	;# 
  1502     0199                     	;# 
  1503     0199                     	;# 
  1504     019A                     	;# 
  1505     019A                     	;# 
  1506     019A                     	;# 
  1507     019B                     	;# 
  1508     019B                     	;# 
  1509     019B                     	;# 
  1510     019B                     	;# 
  1511     019B                     	;# 
  1512     019C                     	;# 
  1513     019C                     	;# 
  1514     019C                     	;# 
  1515     019D                     	;# 
  1516     019D                     	;# 
  1517     019D                     	;# 
  1518     019E                     	;# 
  1519     019E                     	;# 
  1520     019E                     	;# 
  1521     019F                     	;# 
  1522     019F                     	;# 
  1523     019F                     	;# 
  1524     019F                     	;# 
  1525     019F                     	;# 
  1526     020C                     	;# 
  1527     020D                     	;# 
  1528     020E                     	;# 
  1529     0211                     	;# 
  1530     0211                     	;# 
  1531     0212                     	;# 
  1532     0212                     	;# 
  1533     0213                     	;# 
  1534     0213                     	;# 
  1535     0214                     	;# 
  1536     0214                     	;# 
  1537     0215                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0215                     	;# 
  1541     0216                     	;# 
  1542     0216                     	;# 
  1543     0217                     	;# 
  1544     0217                     	;# 
  1545     028C                     	;# 
  1546     028D                     	;# 
  1547     028E                     	;# 
  1548     0291                     	;# 
  1549     0291                     	;# 
  1550     0292                     	;# 
  1551     0293                     	;# 
  1552     0294                     	;# 
  1553     0298                     	;# 
  1554     0298                     	;# 
  1555     0299                     	;# 
  1556     029A                     	;# 
  1557     029B                     	;# 
  1558     029E                     	;# 
  1559     030C                     	;# 
  1560     030D                     	;# 
  1561     030E                     	;# 
  1562     038C                     	;# 
  1563     038D                     	;# 
  1564     038E                     	;# 
  1565     0391                     	;# 
  1566     0392                     	;# 
  1567     0393                     	;# 
  1568     0394                     	;# 
  1569     0395                     	;# 
  1570     0396                     	;# 
  1571     0397                     	;# 
  1572     0398                     	;# 
  1573     0399                     	;# 
  1574     040E                     	;# 
  1575     0413                     	;# 
  1576     0413                     	;# 
  1577     0414                     	;# 
  1578     0414                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     0418                     	;# 
  1583     041A                     	;# 
  1584     041A                     	;# 
  1585     041B                     	;# 
  1586     041B                     	;# 
  1587     041C                     	;# 
  1588     041D                     	;# 
  1589     041E                     	;# 
  1590     041F                     	;# 
  1591     0493                     	;# 
  1592     0494                     	;# 
  1593     0495                     	;# 
  1594     0496                     	;# 
  1595     049A                     	;# 
  1596     049B                     	;# 
  1597     049C                     	;# 
  1598     049D                     	;# 
  1599     058C                     	;# 
  1600     058C                     	;# 
  1601     058D                     	;# 
  1602     058E                     	;# 
  1603     058E                     	;# 
  1604     058F                     	;# 
  1605     0590                     	;# 
  1606     0590                     	;# 
  1607     0591                     	;# 
  1608     0592                     	;# 
  1609     0592                     	;# 
  1610     0593                     	;# 
  1611     0594                     	;# 
  1612     0594                     	;# 
  1613     0595                     	;# 
  1614     0596                     	;# 
  1615     0596                     	;# 
  1616     0597                     	;# 
  1617     0598                     	;# 
  1618     0599                     	;# 
  1619     059A                     	;# 
  1620     059B                     	;# 
  1621     059B                     	;# 
  1622     059C                     	;# 
  1623     059D                     	;# 
  1624     060C                     	;# 
  1625     060C                     	;# 
  1626     060D                     	;# 
  1627     060E                     	;# 
  1628     060F                     	;# 
  1629     060F                     	;# 
  1630     0610                     	;# 
  1631     0611                     	;# 
  1632     0612                     	;# 
  1633     0613                     	;# 
  1634     0614                     	;# 
  1635     0617                     	;# 
  1636     0617                     	;# 
  1637     0618                     	;# 
  1638     0619                     	;# 
  1639     061A                     	;# 
  1640     061A                     	;# 
  1641     061B                     	;# 
  1642     061C                     	;# 
  1643     0691                     	;# 
  1644     0692                     	;# 
  1645     0693                     	;# 
  1646     0694                     	;# 
  1647     0695                     	;# 
  1648     0696                     	;# 
  1649     0697                     	;# 
  1650     0699                     	;# 
  1651     069A                     	;# 
  1652     0711                     	;# 
  1653     0712                     	;# 
  1654     0713                     	;# 
  1655     0714                     	;# 
  1656     0715                     	;# 
  1657     0718                     	;# 
  1658     0718                     	;# 
  1659     0719                     	;# 
  1660     071A                     	;# 
  1661     071A                     	;# 
  1662     071B                     	;# 
  1663     071C                     	;# 
  1664     071D                     	;# 
  1665     0791                     	;# 
  1666     0791                     	;# 
  1667     0792                     	;# 
  1668     0793                     	;# 
  1669     0793                     	;# 
  1670     0794                     	;# 
  1671     0795                     	;# 
  1672     0795                     	;# 
  1673     0796                     	;# 
  1674     0797                     	;# 
  1675     0797                     	;# 
  1676     0798                     	;# 
  1677     0799                     	;# 
  1678     079A                     	;# 
  1679     080C                     	;# 
  1680     080C                     	;# 
  1681     080D                     	;# 
  1682     080E                     	;# 
  1683     080E                     	;# 
  1684     080F                     	;# 
  1685     0810                     	;# 
  1686     0810                     	;# 
  1687     0811                     	;# 
  1688     0812                     	;# 
  1689     0812                     	;# 
  1690     0813                     	;# 
  1691     0814                     	;# 
  1692     0815                     	;# 
  1693     0816                     	;# 
  1694     0817                     	;# 
  1695     0818                     	;# 
  1696     0819                     	;# 
  1697     081A                     	;# 
  1698     081A                     	;# 
  1699     081B                     	;# 
  1700     081C                     	;# 
  1701     081C                     	;# 
  1702     081D                     	;# 
  1703     088C                     	;# 
  1704     088D                     	;# 
  1705     088E                     	;# 
  1706     088F                     	;# 
  1707     088F                     	;# 
  1708     0890                     	;# 
  1709     0891                     	;# 
  1710     0892                     	;# 
  1711     0893                     	;# 
  1712     0893                     	;# 
  1713     0894                     	;# 
  1714     0895                     	;# 
  1715     0896                     	;# 
  1716     0897                     	;# 
  1717     0897                     	;# 
  1718     0898                     	;# 
  1719     0899                     	;# 
  1720     0D8C                     	;# 
  1721     0D8C                     	;# 
  1722     0D8D                     	;# 
  1723     0D8E                     	;# 
  1724     0D8F                     	;# 
  1725     0D8F                     	;# 
  1726     0D90                     	;# 
  1727     0D91                     	;# 
  1728     0D92                     	;# 
  1729     0D92                     	;# 
  1730     0D93                     	;# 
  1731     0D94                     	;# 
  1732     0D95                     	;# 
  1733     0D95                     	;# 
  1734     0D96                     	;# 
  1735     0D97                     	;# 
  1736     0D98                     	;# 
  1737     0D99                     	;# 
  1738     0D9A                     	;# 
  1739     0D9B                     	;# 
  1740     0D9C                     	;# 
  1741     0D9D                     	;# 
  1742     0D9E                     	;# 
  1743     0D9E                     	;# 
  1744     0D9F                     	;# 
  1745     0DA0                     	;# 
  1746     0DA1                     	;# 
  1747     0DA1                     	;# 
  1748     0DA2                     	;# 
  1749     0DA3                     	;# 
  1750     0DA4                     	;# 
  1751     0DA4                     	;# 
  1752     0DA5                     	;# 
  1753     0DA6                     	;# 
  1754     0DA7                     	;# 
  1755     0DA7                     	;# 
  1756     0DA8                     	;# 
  1757     0DA9                     	;# 
  1758     0DAA                     	;# 
  1759     0DAB                     	;# 
  1760     0DAC                     	;# 
  1761     0DAD                     	;# 
  1762     0DAE                     	;# 
  1763     0DAF                     	;# 
  1764     0E0F                     	;# 
  1765     0E10                     	;# 
  1766     0E11                     	;# 
  1767     0E12                     	;# 
  1768     0E13                     	;# 
  1769     0E14                     	;# 
  1770     0E15                     	;# 
  1771     0E16                     	;# 
  1772     0E17                     	;# 
  1773     0E17                     	;# 
  1774     0E18                     	;# 
  1775     0E18                     	;# 
  1776     0E19                     	;# 
  1777     0E1A                     	;# 
  1778     0E1B                     	;# 
  1779     0E1B                     	;# 
  1780     0E1C                     	;# 
  1781     0E1D                     	;# 
  1782     0E1E                     	;# 
  1783     0E1E                     	;# 
  1784     0E1F                     	;# 
  1785     0E20                     	;# 
  1786     0E21                     	;# 
  1787     0E22                     	;# 
  1788     0E23                     	;# 
  1789     0E24                     	;# 
  1790     0E25                     	;# 
  1791     0E26                     	;# 
  1792     0E27                     	;# 
  1793     0E28                     	;# 
  1794     0E29                     	;# 
  1795     0E2A                     	;# 
  1796     0E2B                     	;# 
  1797     0E2C                     	;# 
  1798     0E2D                     	;# 
  1799     0E2E                     	;# 
  1800     0E90                     	;# 
  1801     0E91                     	;# 
  1802     0E92                     	;# 
  1803     0E94                     	;# 
  1804     0E95                     	;# 
  1805     0E9C                     	;# 
  1806     0E9D                     	;# 
  1807     0E9E                     	;# 
  1808     0E9F                     	;# 
  1809     0EA0                     	;# 
  1810     0EA1                     	;# 
  1811     0EA2                     	;# 
  1812     0EA3                     	;# 
  1813     0EA4                     	;# 
  1814     0EA5                     	;# 
  1815     0EA6                     	;# 
  1816     0EA7                     	;# 
  1817     0F0F                     	;# 
  1818     0F10                     	;# 
  1819     0F11                     	;# 
  1820     0F12                     	;# 
  1821     0F13                     	;# 
  1822     0F14                     	;# 
  1823     0F15                     	;# 
  1824     0F16                     	;# 
  1825     0F17                     	;# 
  1826     0F18                     	;# 
  1827     0F19                     	;# 
  1828     0F1A                     	;# 
  1829     0F1B                     	;# 
  1830     0F1C                     	;# 
  1831     0F1D                     	;# 
  1832     0F1E                     	;# 
  1833     0F1F                     	;# 
  1834     0F20                     	;# 
  1835     0F21                     	;# 
  1836     0F22                     	;# 
  1837     0F23                     	;# 
  1838     0FE4                     	;# 
  1839     0FE5                     	;# 
  1840     0FE6                     	;# 
  1841     0FE7                     	;# 
  1842     0FE8                     	;# 
  1843     0FE9                     	;# 
  1844     0FEA                     	;# 
  1845     0FEB                     	;# 
  1846     0FED                     	;# 
  1847     0FEE                     	;# 
  1848     0FEF                     	;# 
  1849     0000                     	;# 
  1850     0001                     	;# 
  1851     0002                     	;# 
  1852     0003                     	;# 
  1853     0004                     	;# 
  1854     0005                     	;# 
  1855     0006                     	;# 
  1856     0007                     	;# 
  1857     0008                     	;# 
  1858     0009                     	;# 
  1859     000A                     	;# 
  1860     000B                     	;# 
  1861     000C                     	;# 
  1862     000D                     	;# 
  1863     000E                     	;# 
  1864     0010                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001A                     	;# 
  1877     001B                     	;# 
  1878     001B                     	;# 
  1879     001C                     	;# 
  1880     001D                     	;# 
  1881     001E                     	;# 
  1882     001F                     	;# 
  1883     008C                     	;# 
  1884     008D                     	;# 
  1885     008E                     	;# 
  1886     0090                     	;# 
  1887     0091                     	;# 
  1888     0092                     	;# 
  1889     0093                     	;# 
  1890     0094                     	;# 
  1891     0095                     	;# 
  1892     0096                     	;# 
  1893     0098                     	;# 
  1894     0099                     	;# 
  1895     009A                     	;# 
  1896     009B                     	;# 
  1897     009B                     	;# 
  1898     009C                     	;# 
  1899     009D                     	;# 
  1900     009E                     	;# 
  1901     009F                     	;# 
  1902     010C                     	;# 
  1903     010D                     	;# 
  1904     010E                     	;# 
  1905     0111                     	;# 
  1906     0112                     	;# 
  1907     0113                     	;# 
  1908     0114                     	;# 
  1909     0115                     	;# 
  1910     0116                     	;# 
  1911     0117                     	;# 
  1912     0118                     	;# 
  1913     0119                     	;# 
  1914     011C                     	;# 
  1915     018C                     	;# 
  1916     018D                     	;# 
  1917     018E                     	;# 
  1918     0191                     	;# 
  1919     0191                     	;# 
  1920     0192                     	;# 
  1921     0193                     	;# 
  1922     0193                     	;# 
  1923     0194                     	;# 
  1924     0195                     	;# 
  1925     0196                     	;# 
  1926     0197                     	;# 
  1927     0199                     	;# 
  1928     0199                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019A                     	;# 
  1932     019A                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019B                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019C                     	;# 
  1941     019D                     	;# 
  1942     019D                     	;# 
  1943     019D                     	;# 
  1944     019E                     	;# 
  1945     019E                     	;# 
  1946     019E                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     019F                     	;# 
  1952     020C                     	;# 
  1953     020D                     	;# 
  1954     020E                     	;# 
  1955     0211                     	;# 
  1956     0211                     	;# 
  1957     0212                     	;# 
  1958     0212                     	;# 
  1959     0213                     	;# 
  1960     0213                     	;# 
  1961     0214                     	;# 
  1962     0214                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0215                     	;# 
  1967     0216                     	;# 
  1968     0216                     	;# 
  1969     0217                     	;# 
  1970     0217                     	;# 
  1971     028C                     	;# 
  1972     028D                     	;# 
  1973     028E                     	;# 
  1974     0291                     	;# 
  1975     0291                     	;# 
  1976     0292                     	;# 
  1977     0293                     	;# 
  1978     0294                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     029A                     	;# 
  1983     029B                     	;# 
  1984     029E                     	;# 
  1985     030C                     	;# 
  1986     030D                     	;# 
  1987     030E                     	;# 
  1988     038C                     	;# 
  1989     038D                     	;# 
  1990     038E                     	;# 
  1991     0391                     	;# 
  1992     0392                     	;# 
  1993     0393                     	;# 
  1994     0394                     	;# 
  1995     0395                     	;# 
  1996     0396                     	;# 
  1997     0397                     	;# 
  1998     0398                     	;# 
  1999     0399                     	;# 
  2000     040E                     	;# 
  2001     0413                     	;# 
  2002     0413                     	;# 
  2003     0414                     	;# 
  2004     0414                     	;# 
  2005     0415                     	;# 
  2006     0416                     	;# 
  2007     0417                     	;# 
  2008     0418                     	;# 
  2009     041A                     	;# 
  2010     041A                     	;# 
  2011     041B                     	;# 
  2012     041B                     	;# 
  2013     041C                     	;# 
  2014     041D                     	;# 
  2015     041E                     	;# 
  2016     041F                     	;# 
  2017     0493                     	;# 
  2018     0494                     	;# 
  2019     0495                     	;# 
  2020     0496                     	;# 
  2021     049A                     	;# 
  2022     049B                     	;# 
  2023     049C                     	;# 
  2024     049D                     	;# 
  2025     058C                     	;# 
  2026     058C                     	;# 
  2027     058D                     	;# 
  2028     058E                     	;# 
  2029     058E                     	;# 
  2030     058F                     	;# 
  2031     0590                     	;# 
  2032     0590                     	;# 
  2033     0591                     	;# 
  2034     0592                     	;# 
  2035     0592                     	;# 
  2036     0593                     	;# 
  2037     0594                     	;# 
  2038     0594                     	;# 
  2039     0595                     	;# 
  2040     0596                     	;# 
  2041     0596                     	;# 
  2042     0597                     	;# 
  2043     0598                     	;# 
  2044     0599                     	;# 
  2045     059A                     	;# 
  2046     059B                     	;# 
  2047     059B                     	;# 
  2048     059C                     	;# 
  2049     059D                     	;# 
  2050     060C                     	;# 
  2051     060C                     	;# 
  2052     060D                     	;# 
  2053     060E                     	;# 
  2054     060F                     	;# 
  2055     060F                     	;# 
  2056     0610                     	;# 
  2057     0611                     	;# 
  2058     0612                     	;# 
  2059     0613                     	;# 
  2060     0614                     	;# 
  2061     0617                     	;# 
  2062     0617                     	;# 
  2063     0618                     	;# 
  2064     0619                     	;# 
  2065     061A                     	;# 
  2066     061A                     	;# 
  2067     061B                     	;# 
  2068     061C                     	;# 
  2069     0691                     	;# 
  2070     0692                     	;# 
  2071     0693                     	;# 
  2072     0694                     	;# 
  2073     0695                     	;# 
  2074     0696                     	;# 
  2075     0697                     	;# 
  2076     0699                     	;# 
  2077     069A                     	;# 
  2078     0711                     	;# 
  2079     0712                     	;# 
  2080     0713                     	;# 
  2081     0714                     	;# 
  2082     0715                     	;# 
  2083     0718                     	;# 
  2084     0718                     	;# 
  2085     0719                     	;# 
  2086     071A                     	;# 
  2087     071A                     	;# 
  2088     071B                     	;# 
  2089     071C                     	;# 
  2090     071D                     	;# 
  2091     0791                     	;# 
  2092     0791                     	;# 
  2093     0792                     	;# 
  2094     0793                     	;# 
  2095     0793                     	;# 
  2096     0794                     	;# 
  2097     0795                     	;# 
  2098     0795                     	;# 
  2099     0796                     	;# 
  2100     0797                     	;# 
  2101     0797                     	;# 
  2102     0798                     	;# 
  2103     0799                     	;# 
  2104     079A                     	;# 
  2105     080C                     	;# 
  2106     080C                     	;# 
  2107     080D                     	;# 
  2108     080E                     	;# 
  2109     080E                     	;# 
  2110     080F                     	;# 
  2111     0810                     	;# 
  2112     0810                     	;# 
  2113     0811                     	;# 
  2114     0812                     	;# 
  2115     0812                     	;# 
  2116     0813                     	;# 
  2117     0814                     	;# 
  2118     0815                     	;# 
  2119     0816                     	;# 
  2120     0817                     	;# 
  2121     0818                     	;# 
  2122     0819                     	;# 
  2123     081A                     	;# 
  2124     081A                     	;# 
  2125     081B                     	;# 
  2126     081C                     	;# 
  2127     081C                     	;# 
  2128     081D                     	;# 
  2129     088C                     	;# 
  2130     088D                     	;# 
  2131     088E                     	;# 
  2132     088F                     	;# 
  2133     088F                     	;# 
  2134     0890                     	;# 
  2135     0891                     	;# 
  2136     0892                     	;# 
  2137     0893                     	;# 
  2138     0893                     	;# 
  2139     0894                     	;# 
  2140     0895                     	;# 
  2141     0896                     	;# 
  2142     0897                     	;# 
  2143     0897                     	;# 
  2144     0898                     	;# 
  2145     0899                     	;# 
  2146     0D8C                     	;# 
  2147     0D8C                     	;# 
  2148     0D8D                     	;# 
  2149     0D8E                     	;# 
  2150     0D8F                     	;# 
  2151     0D8F                     	;# 
  2152     0D90                     	;# 
  2153     0D91                     	;# 
  2154     0D92                     	;# 
  2155     0D92                     	;# 
  2156     0D93                     	;# 
  2157     0D94                     	;# 
  2158     0D95                     	;# 
  2159     0D95                     	;# 
  2160     0D96                     	;# 
  2161     0D97                     	;# 
  2162     0D98                     	;# 
  2163     0D99                     	;# 
  2164     0D9A                     	;# 
  2165     0D9B                     	;# 
  2166     0D9C                     	;# 
  2167     0D9D                     	;# 
  2168     0D9E                     	;# 
  2169     0D9E                     	;# 
  2170     0D9F                     	;# 
  2171     0DA0                     	;# 
  2172     0DA1                     	;# 
  2173     0DA1                     	;# 
  2174     0DA2                     	;# 
  2175     0DA3                     	;# 
  2176     0DA4                     	;# 
  2177     0DA4                     	;# 
  2178     0DA5                     	;# 
  2179     0DA6                     	;# 
  2180     0DA7                     	;# 
  2181     0DA7                     	;# 
  2182     0DA8                     	;# 
  2183     0DA9                     	;# 
  2184     0DAA                     	;# 
  2185     0DAB                     	;# 
  2186     0DAC                     	;# 
  2187     0DAD                     	;# 
  2188     0DAE                     	;# 
  2189     0DAF                     	;# 
  2190     0E0F                     	;# 
  2191     0E10                     	;# 
  2192     0E11                     	;# 
  2193     0E12                     	;# 
  2194     0E13                     	;# 
  2195     0E14                     	;# 
  2196     0E15                     	;# 
  2197     0E16                     	;# 
  2198     0E17                     	;# 
  2199     0E17                     	;# 
  2200     0E18                     	;# 
  2201     0E18                     	;# 
  2202     0E19                     	;# 
  2203     0E1A                     	;# 
  2204     0E1B                     	;# 
  2205     0E1B                     	;# 
  2206     0E1C                     	;# 
  2207     0E1D                     	;# 
  2208     0E1E                     	;# 
  2209     0E1E                     	;# 
  2210     0E1F                     	;# 
  2211     0E20                     	;# 
  2212     0E21                     	;# 
  2213     0E22                     	;# 
  2214     0E23                     	;# 
  2215     0E24                     	;# 
  2216     0E25                     	;# 
  2217     0E26                     	;# 
  2218     0E27                     	;# 
  2219     0E28                     	;# 
  2220     0E29                     	;# 
  2221     0E2A                     	;# 
  2222     0E2B                     	;# 
  2223     0E2C                     	;# 
  2224     0E2D                     	;# 
  2225     0E2E                     	;# 
  2226     0E90                     	;# 
  2227     0E91                     	;# 
  2228     0E92                     	;# 
  2229     0E94                     	;# 
  2230     0E95                     	;# 
  2231     0E9C                     	;# 
  2232     0E9D                     	;# 
  2233     0E9E                     	;# 
  2234     0E9F                     	;# 
  2235     0EA0                     	;# 
  2236     0EA1                     	;# 
  2237     0EA2                     	;# 
  2238     0EA3                     	;# 
  2239     0EA4                     	;# 
  2240     0EA5                     	;# 
  2241     0EA6                     	;# 
  2242     0EA7                     	;# 
  2243     0F0F                     	;# 
  2244     0F10                     	;# 
  2245     0F11                     	;# 
  2246     0F12                     	;# 
  2247     0F13                     	;# 
  2248     0F14                     	;# 
  2249     0F15                     	;# 
  2250     0F16                     	;# 
  2251     0F17                     	;# 
  2252     0F18                     	;# 
  2253     0F19                     	;# 
  2254     0F1A                     	;# 
  2255     0F1B                     	;# 
  2256     0F1C                     	;# 
  2257     0F1D                     	;# 
  2258     0F1E                     	;# 
  2259     0F1F                     	;# 
  2260     0F20                     	;# 
  2261     0F21                     	;# 
  2262     0F22                     	;# 
  2263     0F23                     	;# 
  2264     0FE4                     	;# 
  2265     0FE5                     	;# 
  2266     0FE6                     	;# 
  2267     0FE7                     	;# 
  2268     0FE8                     	;# 
  2269     0FE9                     	;# 
  2270     0FEA                     	;# 
  2271     0FEB                     	;# 
  2272     0FED                     	;# 
  2273     0FEE                     	;# 
  2274     0FEF                     	;# 
  2275     0000                     	;# 
  2276     0001                     	;# 
  2277     0002                     	;# 
  2278     0003                     	;# 
  2279     0004                     	;# 
  2280     0005                     	;# 
  2281     0006                     	;# 
  2282     0007                     	;# 
  2283     0008                     	;# 
  2284     0009                     	;# 
  2285     000A                     	;# 
  2286     000B                     	;# 
  2287     000C                     	;# 
  2288     000D                     	;# 
  2289     000E                     	;# 
  2290     0010                     	;# 
  2291     0011                     	;# 
  2292     0012                     	;# 
  2293     0013                     	;# 
  2294     0014                     	;# 
  2295     0015                     	;# 
  2296     0016                     	;# 
  2297     0016                     	;# 
  2298     0017                     	;# 
  2299     0018                     	;# 
  2300     0019                     	;# 
  2301     001A                     	;# 
  2302     001A                     	;# 
  2303     001B                     	;# 
  2304     001B                     	;# 
  2305     001C                     	;# 
  2306     001D                     	;# 
  2307     001E                     	;# 
  2308     001F                     	;# 
  2309     008C                     	;# 
  2310     008D                     	;# 
  2311     008E                     	;# 
  2312     0090                     	;# 
  2313     0091                     	;# 
  2314     0092                     	;# 
  2315     0093                     	;# 
  2316     0094                     	;# 
  2317     0095                     	;# 
  2318     0096                     	;# 
  2319     0098                     	;# 
  2320     0099                     	;# 
  2321     009A                     	;# 
  2322     009B                     	;# 
  2323     009B                     	;# 
  2324     009C                     	;# 
  2325     009D                     	;# 
  2326     009E                     	;# 
  2327     009F                     	;# 
  2328     010C                     	;# 
  2329     010D                     	;# 
  2330     010E                     	;# 
  2331     0111                     	;# 
  2332     0112                     	;# 
  2333     0113                     	;# 
  2334     0114                     	;# 
  2335     0115                     	;# 
  2336     0116                     	;# 
  2337     0117                     	;# 
  2338     0118                     	;# 
  2339     0119                     	;# 
  2340     011C                     	;# 
  2341     018C                     	;# 
  2342     018D                     	;# 
  2343     018E                     	;# 
  2344     0191                     	;# 
  2345     0191                     	;# 
  2346     0192                     	;# 
  2347     0193                     	;# 
  2348     0193                     	;# 
  2349     0194                     	;# 
  2350     0195                     	;# 
  2351     0196                     	;# 
  2352     0197                     	;# 
  2353     0199                     	;# 
  2354     0199                     	;# 
  2355     0199                     	;# 
  2356     019A                     	;# 
  2357     019A                     	;# 
  2358     019A                     	;# 
  2359     019B                     	;# 
  2360     019B                     	;# 
  2361     019B                     	;# 
  2362     019B                     	;# 
  2363     019B                     	;# 
  2364     019C                     	;# 
  2365     019C                     	;# 
  2366     019C                     	;# 
  2367     019D                     	;# 
  2368     019D                     	;# 
  2369     019D                     	;# 
  2370     019E                     	;# 
  2371     019E                     	;# 
  2372     019E                     	;# 
  2373     019F                     	;# 
  2374     019F                     	;# 
  2375     019F                     	;# 
  2376     019F                     	;# 
  2377     019F                     	;# 
  2378     020C                     	;# 
  2379     020D                     	;# 
  2380     020E                     	;# 
  2381     0211                     	;# 
  2382     0211                     	;# 
  2383     0212                     	;# 
  2384     0212                     	;# 
  2385     0213                     	;# 
  2386     0213                     	;# 
  2387     0214                     	;# 
  2388     0214                     	;# 
  2389     0215                     	;# 
  2390     0215                     	;# 
  2391     0215                     	;# 
  2392     0215                     	;# 
  2393     0216                     	;# 
  2394     0216                     	;# 
  2395     0217                     	;# 
  2396     0217                     	;# 
  2397     028C                     	;# 
  2398     028D                     	;# 
  2399     028E                     	;# 
  2400     0291                     	;# 
  2401     0291                     	;# 
  2402     0292                     	;# 
  2403     0293                     	;# 
  2404     0294                     	;# 
  2405     0298                     	;# 
  2406     0298                     	;# 
  2407     0299                     	;# 
  2408     029A                     	;# 
  2409     029B                     	;# 
  2410     029E                     	;# 
  2411     030C                     	;# 
  2412     030D                     	;# 
  2413     030E                     	;# 
  2414     038C                     	;# 
  2415     038D                     	;# 
  2416     038E                     	;# 
  2417     0391                     	;# 
  2418     0392                     	;# 
  2419     0393                     	;# 
  2420     0394                     	;# 
  2421     0395                     	;# 
  2422     0396                     	;# 
  2423     0397                     	;# 
  2424     0398                     	;# 
  2425     0399                     	;# 
  2426     040E                     	;# 
  2427     0413                     	;# 
  2428     0413                     	;# 
  2429     0414                     	;# 
  2430     0414                     	;# 
  2431     0415                     	;# 
  2432     0416                     	;# 
  2433     0417                     	;# 
  2434     0418                     	;# 
  2435     041A                     	;# 
  2436     041A                     	;# 
  2437     041B                     	;# 
  2438     041B                     	;# 
  2439     041C                     	;# 
  2440     041D                     	;# 
  2441     041E                     	;# 
  2442     041F                     	;# 
  2443     0493                     	;# 
  2444     0494                     	;# 
  2445     0495                     	;# 
  2446     0496                     	;# 
  2447     049A                     	;# 
  2448     049B                     	;# 
  2449     049C                     	;# 
  2450     049D                     	;# 
  2451     058C                     	;# 
  2452     058C                     	;# 
  2453     058D                     	;# 
  2454     058E                     	;# 
  2455     058E                     	;# 
  2456     058F                     	;# 
  2457     0590                     	;# 
  2458     0590                     	;# 
  2459     0591                     	;# 
  2460     0592                     	;# 
  2461     0592                     	;# 
  2462     0593                     	;# 
  2463     0594                     	;# 
  2464     0594                     	;# 
  2465     0595                     	;# 
  2466     0596                     	;# 
  2467     0596                     	;# 
  2468     0597                     	;# 
  2469     0598                     	;# 
  2470     0599                     	;# 
  2471     059A                     	;# 
  2472     059B                     	;# 
  2473     059B                     	;# 
  2474     059C                     	;# 
  2475     059D                     	;# 
  2476     060C                     	;# 
  2477     060C                     	;# 
  2478     060D                     	;# 
  2479     060E                     	;# 
  2480     060F                     	;# 
  2481     060F                     	;# 
  2482     0610                     	;# 
  2483     0611                     	;# 
  2484     0612                     	;# 
  2485     0613                     	;# 
  2486     0614                     	;# 
  2487     0617                     	;# 
  2488     0617                     	;# 
  2489     0618                     	;# 
  2490     0619                     	;# 
  2491     061A                     	;# 
  2492     061A                     	;# 
  2493     061B                     	;# 
  2494     061C                     	;# 
  2495     0691                     	;# 
  2496     0692                     	;# 
  2497     0693                     	;# 
  2498     0694                     	;# 
  2499     0695                     	;# 
  2500     0696                     	;# 
  2501     0697                     	;# 
  2502     0699                     	;# 
  2503     069A                     	;# 
  2504     0711                     	;# 
  2505     0712                     	;# 
  2506     0713                     	;# 
  2507     0714                     	;# 
  2508     0715                     	;# 
  2509     0718                     	;# 
  2510     0718                     	;# 
  2511     0719                     	;# 
  2512     071A                     	;# 
  2513     071A                     	;# 
  2514     071B                     	;# 
  2515     071C                     	;# 
  2516     071D                     	;# 
  2517     0791                     	;# 
  2518     0791                     	;# 
  2519     0792                     	;# 
  2520     0793                     	;# 
  2521     0793                     	;# 
  2522     0794                     	;# 
  2523     0795                     	;# 
  2524     0795                     	;# 
  2525     0796                     	;# 
  2526     0797                     	;# 
  2527     0797                     	;# 
  2528     0798                     	;# 
  2529     0799                     	;# 
  2530     079A                     	;# 
  2531     080C                     	;# 
  2532     080C                     	;# 
  2533     080D                     	;# 
  2534     080E                     	;# 
  2535     080E                     	;# 
  2536     080F                     	;# 
  2537     0810                     	;# 
  2538     0810                     	;# 
  2539     0811                     	;# 
  2540     0812                     	;# 
  2541     0812                     	;# 
  2542     0813                     	;# 
  2543     0814                     	;# 
  2544     0815                     	;# 
  2545     0816                     	;# 
  2546     0817                     	;# 
  2547     0818                     	;# 
  2548     0819                     	;# 
  2549     081A                     	;# 
  2550     081A                     	;# 
  2551     081B                     	;# 
  2552     081C                     	;# 
  2553     081C                     	;# 
  2554     081D                     	;# 
  2555     088C                     	;# 
  2556     088D                     	;# 
  2557     088E                     	;# 
  2558     088F                     	;# 
  2559     088F                     	;# 
  2560     0890                     	;# 
  2561     0891                     	;# 
  2562     0892                     	;# 
  2563     0893                     	;# 
  2564     0893                     	;# 
  2565     0894                     	;# 
  2566     0895                     	;# 
  2567     0896                     	;# 
  2568     0897                     	;# 
  2569     0897                     	;# 
  2570     0898                     	;# 
  2571     0899                     	;# 
  2572     0D8C                     	;# 
  2573     0D8C                     	;# 
  2574     0D8D                     	;# 
  2575     0D8E                     	;# 
  2576     0D8F                     	;# 
  2577     0D8F                     	;# 
  2578     0D90                     	;# 
  2579     0D91                     	;# 
  2580     0D92                     	;# 
  2581     0D92                     	;# 
  2582     0D93                     	;# 
  2583     0D94                     	;# 
  2584     0D95                     	;# 
  2585     0D95                     	;# 
  2586     0D96                     	;# 
  2587     0D97                     	;# 
  2588     0D98                     	;# 
  2589     0D99                     	;# 
  2590     0D9A                     	;# 
  2591     0D9B                     	;# 
  2592     0D9C                     	;# 
  2593     0D9D                     	;# 
  2594     0D9E                     	;# 
  2595     0D9E                     	;# 
  2596     0D9F                     	;# 
  2597     0DA0                     	;# 
  2598     0DA1                     	;# 
  2599     0DA1                     	;# 
  2600     0DA2                     	;# 
  2601     0DA3                     	;# 
  2602     0DA4                     	;# 
  2603     0DA4                     	;# 
  2604     0DA5                     	;# 
  2605     0DA6                     	;# 
  2606     0DA7                     	;# 
  2607     0DA7                     	;# 
  2608     0DA8                     	;# 
  2609     0DA9                     	;# 
  2610     0DAA                     	;# 
  2611     0DAB                     	;# 
  2612     0DAC                     	;# 
  2613     0DAD                     	;# 
  2614     0DAE                     	;# 
  2615     0DAF                     	;# 
  2616     0E0F                     	;# 
  2617     0E10                     	;# 
  2618     0E11                     	;# 
  2619     0E12                     	;# 
  2620     0E13                     	;# 
  2621     0E14                     	;# 
  2622     0E15                     	;# 
  2623     0E16                     	;# 
  2624     0E17                     	;# 
  2625     0E17                     	;# 
  2626     0E18                     	;# 
  2627     0E18                     	;# 
  2628     0E19                     	;# 
  2629     0E1A                     	;# 
  2630     0E1B                     	;# 
  2631     0E1B                     	;# 
  2632     0E1C                     	;# 
  2633     0E1D                     	;# 
  2634     0E1E                     	;# 
  2635     0E1E                     	;# 
  2636     0E1F                     	;# 
  2637     0E20                     	;# 
  2638     0E21                     	;# 
  2639     0E22                     	;# 
  2640     0E23                     	;# 
  2641     0E24                     	;# 
  2642     0E25                     	;# 
  2643     0E26                     	;# 
  2644     0E27                     	;# 
  2645     0E28                     	;# 
  2646     0E29                     	;# 
  2647     0E2A                     	;# 
  2648     0E2B                     	;# 
  2649     0E2C                     	;# 
  2650     0E2D                     	;# 
  2651     0E2E                     	;# 
  2652     0E90                     	;# 
  2653     0E91                     	;# 
  2654     0E92                     	;# 
  2655     0E94                     	;# 
  2656     0E95                     	;# 
  2657     0E9C                     	;# 
  2658     0E9D                     	;# 
  2659     0E9E                     	;# 
  2660     0E9F                     	;# 
  2661     0EA0                     	;# 
  2662     0EA1                     	;# 
  2663     0EA2                     	;# 
  2664     0EA3                     	;# 
  2665     0EA4                     	;# 
  2666     0EA5                     	;# 
  2667     0EA6                     	;# 
  2668     0EA7                     	;# 
  2669     0F0F                     	;# 
  2670     0F10                     	;# 
  2671     0F11                     	;# 
  2672     0F12                     	;# 
  2673     0F13                     	;# 
  2674     0F14                     	;# 
  2675     0F15                     	;# 
  2676     0F16                     	;# 
  2677     0F17                     	;# 
  2678     0F18                     	;# 
  2679     0F19                     	;# 
  2680     0F1A                     	;# 
  2681     0F1B                     	;# 
  2682     0F1C                     	;# 
  2683     0F1D                     	;# 
  2684     0F1E                     	;# 
  2685     0F1F                     	;# 
  2686     0F20                     	;# 
  2687     0F21                     	;# 
  2688     0F22                     	;# 
  2689     0F23                     	;# 
  2690     0FE4                     	;# 
  2691     0FE5                     	;# 
  2692     0FE6                     	;# 
  2693     0FE7                     	;# 
  2694     0FE8                     	;# 
  2695     0FE9                     	;# 
  2696     0FEA                     	;# 
  2697     0FEB                     	;# 
  2698     0FED                     	;# 
  2699     0FEE                     	;# 
  2700     0FEF                     	;# 
  2701     0000                     	;# 
  2702     0001                     	;# 
  2703     0002                     	;# 
  2704     0003                     	;# 
  2705     0004                     	;# 
  2706     0005                     	;# 
  2707     0006                     	;# 
  2708     0007                     	;# 
  2709     0008                     	;# 
  2710     0009                     	;# 
  2711     000A                     	;# 
  2712     000B                     	;# 
  2713     000C                     	;# 
  2714     000D                     	;# 
  2715     000E                     	;# 
  2716     0010                     	;# 
  2717     0011                     	;# 
  2718     0012                     	;# 
  2719     0013                     	;# 
  2720     0014                     	;# 
  2721     0015                     	;# 
  2722     0016                     	;# 
  2723     0016                     	;# 
  2724     0017                     	;# 
  2725     0018                     	;# 
  2726     0019                     	;# 
  2727     001A                     	;# 
  2728     001A                     	;# 
  2729     001B                     	;# 
  2730     001B                     	;# 
  2731     001C                     	;# 
  2732     001D                     	;# 
  2733     001E                     	;# 
  2734     001F                     	;# 
  2735     008C                     	;# 
  2736     008D                     	;# 
  2737     008E                     	;# 
  2738     0090                     	;# 
  2739     0091                     	;# 
  2740     0092                     	;# 
  2741     0093                     	;# 
  2742     0094                     	;# 
  2743     0095                     	;# 
  2744     0096                     	;# 
  2745     0098                     	;# 
  2746     0099                     	;# 
  2747     009A                     	;# 
  2748     009B                     	;# 
  2749     009B                     	;# 
  2750     009C                     	;# 
  2751     009D                     	;# 
  2752     009E                     	;# 
  2753     009F                     	;# 
  2754     010C                     	;# 
  2755     010D                     	;# 
  2756     010E                     	;# 
  2757     0111                     	;# 
  2758     0112                     	;# 
  2759     0113                     	;# 
  2760     0114                     	;# 
  2761     0115                     	;# 
  2762     0116                     	;# 
  2763     0117                     	;# 
  2764     0118                     	;# 
  2765     0119                     	;# 
  2766     011C                     	;# 
  2767     018C                     	;# 
  2768     018D                     	;# 
  2769     018E                     	;# 
  2770     0191                     	;# 
  2771     0191                     	;# 
  2772     0192                     	;# 
  2773     0193                     	;# 
  2774     0193                     	;# 
  2775     0194                     	;# 
  2776     0195                     	;# 
  2777     0196                     	;# 
  2778     0197                     	;# 
  2779     0199                     	;# 
  2780     0199                     	;# 
  2781     0199                     	;# 
  2782     019A                     	;# 
  2783     019A                     	;# 
  2784     019A                     	;# 
  2785     019B                     	;# 
  2786     019B                     	;# 
  2787     019B                     	;# 
  2788     019B                     	;# 
  2789     019B                     	;# 
  2790     019C                     	;# 
  2791     019C                     	;# 
  2792     019C                     	;# 
  2793     019D                     	;# 
  2794     019D                     	;# 
  2795     019D                     	;# 
  2796     019E                     	;# 
  2797     019E                     	;# 
  2798     019E                     	;# 
  2799     019F                     	;# 
  2800     019F                     	;# 
  2801     019F                     	;# 
  2802     019F                     	;# 
  2803     019F                     	;# 
  2804     020C                     	;# 
  2805     020D                     	;# 
  2806     020E                     	;# 
  2807     0211                     	;# 
  2808     0211                     	;# 
  2809     0212                     	;# 
  2810     0212                     	;# 
  2811     0213                     	;# 
  2812     0213                     	;# 
  2813     0214                     	;# 
  2814     0214                     	;# 
  2815     0215                     	;# 
  2816     0215                     	;# 
  2817     0215                     	;# 
  2818     0215                     	;# 
  2819     0216                     	;# 
  2820     0216                     	;# 
  2821     0217                     	;# 
  2822     0217                     	;# 
  2823     028C                     	;# 
  2824     028D                     	;# 
  2825     028E                     	;# 
  2826     0291                     	;# 
  2827     0291                     	;# 
  2828     0292                     	;# 
  2829     0293                     	;# 
  2830     0294                     	;# 
  2831     0298                     	;# 
  2832     0298                     	;# 
  2833     0299                     	;# 
  2834     029A                     	;# 
  2835     029B                     	;# 
  2836     029E                     	;# 
  2837     030C                     	;# 
  2838     030D                     	;# 
  2839     030E                     	;# 
  2840     038C                     	;# 
  2841     038D                     	;# 
  2842     038E                     	;# 
  2843     0391                     	;# 
  2844     0392                     	;# 
  2845     0393                     	;# 
  2846     0394                     	;# 
  2847     0395                     	;# 
  2848     0396                     	;# 
  2849     0397                     	;# 
  2850     0398                     	;# 
  2851     0399                     	;# 
  2852     040E                     	;# 
  2853     0413                     	;# 
  2854     0413                     	;# 
  2855     0414                     	;# 
  2856     0414                     	;# 
  2857     0415                     	;# 
  2858     0416                     	;# 
  2859     0417                     	;# 
  2860     0418                     	;# 
  2861     041A                     	;# 
  2862     041A                     	;# 
  2863     041B                     	;# 
  2864     041B                     	;# 
  2865     041C                     	;# 
  2866     041D                     	;# 
  2867     041E                     	;# 
  2868     041F                     	;# 
  2869     0493                     	;# 
  2870     0494                     	;# 
  2871     0495                     	;# 
  2872     0496                     	;# 
  2873     049A                     	;# 
  2874     049B                     	;# 
  2875     049C                     	;# 
  2876     049D                     	;# 
  2877     058C                     	;# 
  2878     058C                     	;# 
  2879     058D                     	;# 
  2880     058E                     	;# 
  2881     058E                     	;# 
  2882     058F                     	;# 
  2883     0590                     	;# 
  2884     0590                     	;# 
  2885     0591                     	;# 
  2886     0592                     	;# 
  2887     0592                     	;# 
  2888     0593                     	;# 
  2889     0594                     	;# 
  2890     0594                     	;# 
  2891     0595                     	;# 
  2892     0596                     	;# 
  2893     0596                     	;# 
  2894     0597                     	;# 
  2895     0598                     	;# 
  2896     0599                     	;# 
  2897     059A                     	;# 
  2898     059B                     	;# 
  2899     059B                     	;# 
  2900     059C                     	;# 
  2901     059D                     	;# 
  2902     060C                     	;# 
  2903     060C                     	;# 
  2904     060D                     	;# 
  2905     060E                     	;# 
  2906     060F                     	;# 
  2907     060F                     	;# 
  2908     0610                     	;# 
  2909     0611                     	;# 
  2910     0612                     	;# 
  2911     0613                     	;# 
  2912     0614                     	;# 
  2913     0617                     	;# 
  2914     0617                     	;# 
  2915     0618                     	;# 
  2916     0619                     	;# 
  2917     061A                     	;# 
  2918     061A                     	;# 
  2919     061B                     	;# 
  2920     061C                     	;# 
  2921     0691                     	;# 
  2922     0692                     	;# 
  2923     0693                     	;# 
  2924     0694                     	;# 
  2925     0695                     	;# 
  2926     0696                     	;# 
  2927     0697                     	;# 
  2928     0699                     	;# 
  2929     069A                     	;# 
  2930     0711                     	;# 
  2931     0712                     	;# 
  2932     0713                     	;# 
  2933     0714                     	;# 
  2934     0715                     	;# 
  2935     0718                     	;# 
  2936     0718                     	;# 
  2937     0719                     	;# 
  2938     071A                     	;# 
  2939     071A                     	;# 
  2940     071B                     	;# 
  2941     071C                     	;# 
  2942     071D                     	;# 
  2943     0791                     	;# 
  2944     0791                     	;# 
  2945     0792                     	;# 
  2946     0793                     	;# 
  2947     0793                     	;# 
  2948     0794                     	;# 
  2949     0795                     	;# 
  2950     0795                     	;# 
  2951     0796                     	;# 
  2952     0797                     	;# 
  2953     0797                     	;# 
  2954     0798                     	;# 
  2955     0799                     	;# 
  2956     079A                     	;# 
  2957     080C                     	;# 
  2958     080C                     	;# 
  2959     080D                     	;# 
  2960     080E                     	;# 
  2961     080E                     	;# 
  2962     080F                     	;# 
  2963     0810                     	;# 
  2964     0810                     	;# 
  2965     0811                     	;# 
  2966     0812                     	;# 
  2967     0812                     	;# 
  2968     0813                     	;# 
  2969     0814                     	;# 
  2970     0815                     	;# 
  2971     0816                     	;# 
  2972     0817                     	;# 
  2973     0818                     	;# 
  2974     0819                     	;# 
  2975     081A                     	;# 
  2976     081A                     	;# 
  2977     081B                     	;# 
  2978     081C                     	;# 
  2979     081C                     	;# 
  2980     081D                     	;# 
  2981     088C                     	;# 
  2982     088D                     	;# 
  2983     088E                     	;# 
  2984     088F                     	;# 
  2985     088F                     	;# 
  2986     0890                     	;# 
  2987     0891                     	;# 
  2988     0892                     	;# 
  2989     0893                     	;# 
  2990     0893                     	;# 
  2991     0894                     	;# 
  2992     0895                     	;# 
  2993     0896                     	;# 
  2994     0897                     	;# 
  2995     0897                     	;# 
  2996     0898                     	;# 
  2997     0899                     	;# 
  2998     0D8C                     	;# 
  2999     0D8C                     	;# 
  3000     0D8D                     	;# 
  3001     0D8E                     	;# 
  3002     0D8F                     	;# 
  3003     0D8F                     	;# 
  3004     0D90                     	;# 
  3005     0D91                     	;# 
  3006     0D92                     	;# 
  3007     0D92                     	;# 
  3008     0D93                     	;# 
  3009     0D94                     	;# 
  3010     0D95                     	;# 
  3011     0D95                     	;# 
  3012     0D96                     	;# 
  3013     0D97                     	;# 
  3014     0D98                     	;# 
  3015     0D99                     	;# 
  3016     0D9A                     	;# 
  3017     0D9B                     	;# 
  3018     0D9C                     	;# 
  3019     0D9D                     	;# 
  3020     0D9E                     	;# 
  3021     0D9E                     	;# 
  3022     0D9F                     	;# 
  3023     0DA0                     	;# 
  3024     0DA1                     	;# 
  3025     0DA1                     	;# 
  3026     0DA2                     	;# 
  3027     0DA3                     	;# 
  3028     0DA4                     	;# 
  3029     0DA4                     	;# 
  3030     0DA5                     	;# 
  3031     0DA6                     	;# 
  3032     0DA7                     	;# 
  3033     0DA7                     	;# 
  3034     0DA8                     	;# 
  3035     0DA9                     	;# 
  3036     0DAA                     	;# 
  3037     0DAB                     	;# 
  3038     0DAC                     	;# 
  3039     0DAD                     	;# 
  3040     0DAE                     	;# 
  3041     0DAF                     	;# 
  3042     0E0F                     	;# 
  3043     0E10                     	;# 
  3044     0E11                     	;# 
  3045     0E12                     	;# 
  3046     0E13                     	;# 
  3047     0E14                     	;# 
  3048     0E15                     	;# 
  3049     0E16                     	;# 
  3050     0E17                     	;# 
  3051     0E17                     	;# 
  3052     0E18                     	;# 
  3053     0E18                     	;# 
  3054     0E19                     	;# 
  3055     0E1A                     	;# 
  3056     0E1B                     	;# 
  3057     0E1B                     	;# 
  3058     0E1C                     	;# 
  3059     0E1D                     	;# 
  3060     0E1E                     	;# 
  3061     0E1E                     	;# 
  3062     0E1F                     	;# 
  3063     0E20                     	;# 
  3064     0E21                     	;# 
  3065     0E22                     	;# 
  3066     0E23                     	;# 
  3067     0E24                     	;# 
  3068     0E25                     	;# 
  3069     0E26                     	;# 
  3070     0E27                     	;# 
  3071     0E28                     	;# 
  3072     0E29                     	;# 
  3073     0E2A                     	;# 
  3074     0E2B                     	;# 
  3075     0E2C                     	;# 
  3076     0E2D                     	;# 
  3077     0E2E                     	;# 
  3078     0E90                     	;# 
  3079     0E91                     	;# 
  3080     0E92                     	;# 
  3081     0E94                     	;# 
  3082     0E95                     	;# 
  3083     0E9C                     	;# 
  3084     0E9D                     	;# 
  3085     0E9E                     	;# 
  3086     0E9F                     	;# 
  3087     0EA0                     	;# 
  3088     0EA1                     	;# 
  3089     0EA2                     	;# 
  3090     0EA3                     	;# 
  3091     0EA4                     	;# 
  3092     0EA5                     	;# 
  3093     0EA6                     	;# 
  3094     0EA7                     	;# 
  3095     0F0F                     	;# 
  3096     0F10                     	;# 
  3097     0F11                     	;# 
  3098     0F12                     	;# 
  3099     0F13                     	;# 
  3100     0F14                     	;# 
  3101     0F15                     	;# 
  3102     0F16                     	;# 
  3103     0F17                     	;# 
  3104     0F18                     	;# 
  3105     0F19                     	;# 
  3106     0F1A                     	;# 
  3107     0F1B                     	;# 
  3108     0F1C                     	;# 
  3109     0F1D                     	;# 
  3110     0F1E                     	;# 
  3111     0F1F                     	;# 
  3112     0F20                     	;# 
  3113     0F21                     	;# 
  3114     0F22                     	;# 
  3115     0F23                     	;# 
  3116     0FE4                     	;# 
  3117     0FE5                     	;# 
  3118     0FE6                     	;# 
  3119     0FE7                     	;# 
  3120     0FE8                     	;# 
  3121     0FE9                     	;# 
  3122     0FEA                     	;# 
  3123     0FEB                     	;# 
  3124     0FED                     	;# 
  3125     0FEE                     	;# 
  3126     0FEF                     	;# 
  3127     0000                     	;# 
  3128     0001                     	;# 
  3129     0002                     	;# 
  3130     0003                     	;# 
  3131     0004                     	;# 
  3132     0005                     	;# 
  3133     0006                     	;# 
  3134     0007                     	;# 
  3135     0008                     	;# 
  3136     0009                     	;# 
  3137     000A                     	;# 
  3138     000B                     	;# 
  3139     000C                     	;# 
  3140     000D                     	;# 
  3141     000E                     	;# 
  3142     0010                     	;# 
  3143     0011                     	;# 
  3144     0012                     	;# 
  3145     0013                     	;# 
  3146     0014                     	;# 
  3147     0015                     	;# 
  3148     0016                     	;# 
  3149     0016                     	;# 
  3150     0017                     	;# 
  3151     0018                     	;# 
  3152     0019                     	;# 
  3153     001A                     	;# 
  3154     001A                     	;# 
  3155     001B                     	;# 
  3156     001B                     	;# 
  3157     001C                     	;# 
  3158     001D                     	;# 
  3159     001E                     	;# 
  3160     001F                     	;# 
  3161     008C                     	;# 
  3162     008D                     	;# 
  3163     008E                     	;# 
  3164     0090                     	;# 
  3165     0091                     	;# 
  3166     0092                     	;# 
  3167     0093                     	;# 
  3168     0094                     	;# 
  3169     0095                     	;# 
  3170     0096                     	;# 
  3171     0098                     	;# 
  3172     0099                     	;# 
  3173     009A                     	;# 
  3174     009B                     	;# 
  3175     009B                     	;# 
  3176     009C                     	;# 
  3177     009D                     	;# 
  3178     009E                     	;# 
  3179     009F                     	;# 
  3180     010C                     	;# 
  3181     010D                     	;# 
  3182     010E                     	;# 
  3183     0111                     	;# 
  3184     0112                     	;# 
  3185     0113                     	;# 
  3186     0114                     	;# 
  3187     0115                     	;# 
  3188     0116                     	;# 
  3189     0117                     	;# 
  3190     0118                     	;# 
  3191     0119                     	;# 
  3192     011C                     	;# 
  3193     018C                     	;# 
  3194     018D                     	;# 
  3195     018E                     	;# 
  3196     0191                     	;# 
  3197     0191                     	;# 
  3198     0192                     	;# 
  3199     0193                     	;# 
  3200     0193                     	;# 
  3201     0194                     	;# 
  3202     0195                     	;# 
  3203     0196                     	;# 
  3204     0197                     	;# 
  3205     0199                     	;# 
  3206     0199                     	;# 
  3207     0199                     	;# 
  3208     019A                     	;# 
  3209     019A                     	;# 
  3210     019A                     	;# 
  3211     019B                     	;# 
  3212     019B                     	;# 
  3213     019B                     	;# 
  3214     019B                     	;# 
  3215     019B                     	;# 
  3216     019C                     	;# 
  3217     019C                     	;# 
  3218     019C                     	;# 
  3219     019D                     	;# 
  3220     019D                     	;# 
  3221     019D                     	;# 
  3222     019E                     	;# 
  3223     019E                     	;# 
  3224     019E                     	;# 
  3225     019F                     	;# 
  3226     019F                     	;# 
  3227     019F                     	;# 
  3228     019F                     	;# 
  3229     019F                     	;# 
  3230     020C                     	;# 
  3231     020D                     	;# 
  3232     020E                     	;# 
  3233     0211                     	;# 
  3234     0211                     	;# 
  3235     0212                     	;# 
  3236     0212                     	;# 
  3237     0213                     	;# 
  3238     0213                     	;# 
  3239     0214                     	;# 
  3240     0214                     	;# 
  3241     0215                     	;# 
  3242     0215                     	;# 
  3243     0215                     	;# 
  3244     0215                     	;# 
  3245     0216                     	;# 
  3246     0216                     	;# 
  3247     0217                     	;# 
  3248     0217                     	;# 
  3249     028C                     	;# 
  3250     028D                     	;# 
  3251     028E                     	;# 
  3252     0291                     	;# 
  3253     0291                     	;# 
  3254     0292                     	;# 
  3255     0293                     	;# 
  3256     0294                     	;# 
  3257     0298                     	;# 
  3258     0298                     	;# 
  3259     0299                     	;# 
  3260     029A                     	;# 
  3261     029B                     	;# 
  3262     029E                     	;# 
  3263     030C                     	;# 
  3264     030D                     	;# 
  3265     030E                     	;# 
  3266     038C                     	;# 
  3267     038D                     	;# 
  3268     038E                     	;# 
  3269     0391                     	;# 
  3270     0392                     	;# 
  3271     0393                     	;# 
  3272     0394                     	;# 
  3273     0395                     	;# 
  3274     0396                     	;# 
  3275     0397                     	;# 
  3276     0398                     	;# 
  3277     0399                     	;# 
  3278     040E                     	;# 
  3279     0413                     	;# 
  3280     0413                     	;# 
  3281     0414                     	;# 
  3282     0414                     	;# 
  3283     0415                     	;# 
  3284     0416                     	;# 
  3285     0417                     	;# 
  3286     0418                     	;# 
  3287     041A                     	;# 
  3288     041A                     	;# 
  3289     041B                     	;# 
  3290     041B                     	;# 
  3291     041C                     	;# 
  3292     041D                     	;# 
  3293     041E                     	;# 
  3294     041F                     	;# 
  3295     0493                     	;# 
  3296     0494                     	;# 
  3297     0495                     	;# 
  3298     0496                     	;# 
  3299     049A                     	;# 
  3300     049B                     	;# 
  3301     049C                     	;# 
  3302     049D                     	;# 
  3303     058C                     	;# 
  3304     058C                     	;# 
  3305     058D                     	;# 
  3306     058E                     	;# 
  3307     058E                     	;# 
  3308     058F                     	;# 
  3309     0590                     	;# 
  3310     0590                     	;# 
  3311     0591                     	;# 
  3312     0592                     	;# 
  3313     0592                     	;# 
  3314     0593                     	;# 
  3315     0594                     	;# 
  3316     0594                     	;# 
  3317     0595                     	;# 
  3318     0596                     	;# 
  3319     0596                     	;# 
  3320     0597                     	;# 
  3321     0598                     	;# 
  3322     0599                     	;# 
  3323     059A                     	;# 
  3324     059B                     	;# 
  3325     059B                     	;# 
  3326     059C                     	;# 
  3327     059D                     	;# 
  3328     060C                     	;# 
  3329     060C                     	;# 
  3330     060D                     	;# 
  3331     060E                     	;# 
  3332     060F                     	;# 
  3333     060F                     	;# 
  3334     0610                     	;# 
  3335     0611                     	;# 
  3336     0612                     	;# 
  3337     0613                     	;# 
  3338     0614                     	;# 
  3339     0617                     	;# 
  3340     0617                     	;# 
  3341     0618                     	;# 
  3342     0619                     	;# 
  3343     061A                     	;# 
  3344     061A                     	;# 
  3345     061B                     	;# 
  3346     061C                     	;# 
  3347     0691                     	;# 
  3348     0692                     	;# 
  3349     0693                     	;# 
  3350     0694                     	;# 
  3351     0695                     	;# 
  3352     0696                     	;# 
  3353     0697                     	;# 
  3354     0699                     	;# 
  3355     069A                     	;# 
  3356     0711                     	;# 
  3357     0712                     	;# 
  3358     0713                     	;# 
  3359     0714                     	;# 
  3360     0715                     	;# 
  3361     0718                     	;# 
  3362     0718                     	;# 
  3363     0719                     	;# 
  3364     071A                     	;# 
  3365     071A                     	;# 
  3366     071B                     	;# 
  3367     071C                     	;# 
  3368     071D                     	;# 
  3369     0791                     	;# 
  3370     0791                     	;# 
  3371     0792                     	;# 
  3372     0793                     	;# 
  3373     0793                     	;# 
  3374     0794                     	;# 
  3375     0795                     	;# 
  3376     0795                     	;# 
  3377     0796                     	;# 
  3378     0797                     	;# 
  3379     0797                     	;# 
  3380     0798                     	;# 
  3381     0799                     	;# 
  3382     079A                     	;# 
  3383     080C                     	;# 
  3384     080C                     	;# 
  3385     080D                     	;# 
  3386     080E                     	;# 
  3387     080E                     	;# 
  3388     080F                     	;# 
  3389     0810                     	;# 
  3390     0810                     	;# 
  3391     0811                     	;# 
  3392     0812                     	;# 
  3393     0812                     	;# 
  3394     0813                     	;# 
  3395     0814                     	;# 
  3396     0815                     	;# 
  3397     0816                     	;# 
  3398     0817                     	;# 
  3399     0818                     	;# 
  3400     0819                     	;# 
  3401     081A                     	;# 
  3402     081A                     	;# 
  3403     081B                     	;# 
  3404     081C                     	;# 
  3405     081C                     	;# 
  3406     081D                     	;# 
  3407     088C                     	;# 
  3408     088D                     	;# 
  3409     088E                     	;# 
  3410     088F                     	;# 
  3411     088F                     	;# 
  3412     0890                     	;# 
  3413     0891                     	;# 
  3414     0892                     	;# 
  3415     0893                     	;# 
  3416     0893                     	;# 
  3417     0894                     	;# 
  3418     0895                     	;# 
  3419     0896                     	;# 
  3420     0897                     	;# 
  3421     0897                     	;# 
  3422     0898                     	;# 
  3423     0899                     	;# 
  3424     0D8C                     	;# 
  3425     0D8C                     	;# 
  3426     0D8D                     	;# 
  3427     0D8E                     	;# 
  3428     0D8F                     	;# 
  3429     0D8F                     	;# 
  3430     0D90                     	;# 
  3431     0D91                     	;# 
  3432     0D92                     	;# 
  3433     0D92                     	;# 
  3434     0D93                     	;# 
  3435     0D94                     	;# 
  3436     0D95                     	;# 
  3437     0D95                     	;# 
  3438     0D96                     	;# 
  3439     0D97                     	;# 
  3440     0D98                     	;# 
  3441     0D99                     	;# 
  3442     0D9A                     	;# 
  3443     0D9B                     	;# 
  3444     0D9C                     	;# 
  3445     0D9D                     	;# 
  3446     0D9E                     	;# 
  3447     0D9E                     	;# 
  3448     0D9F                     	;# 
  3449     0DA0                     	;# 
  3450     0DA1                     	;# 
  3451     0DA1                     	;# 
  3452     0DA2                     	;# 
  3453     0DA3                     	;# 
  3454     0DA4                     	;# 
  3455     0DA4                     	;# 
  3456     0DA5                     	;# 
  3457     0DA6                     	;# 
  3458     0DA7                     	;# 
  3459     0DA7                     	;# 
  3460     0DA8                     	;# 
  3461     0DA9                     	;# 
  3462     0DAA                     	;# 
  3463     0DAB                     	;# 
  3464     0DAC                     	;# 
  3465     0DAD                     	;# 
  3466     0DAE                     	;# 
  3467     0DAF                     	;# 
  3468     0E0F                     	;# 
  3469     0E10                     	;# 
  3470     0E11                     	;# 
  3471     0E12                     	;# 
  3472     0E13                     	;# 
  3473     0E14                     	;# 
  3474     0E15                     	;# 
  3475     0E16                     	;# 
  3476     0E17                     	;# 
  3477     0E17                     	;# 
  3478     0E18                     	;# 
  3479     0E18                     	;# 
  3480     0E19                     	;# 
  3481     0E1A                     	;# 
  3482     0E1B                     	;# 
  3483     0E1B                     	;# 
  3484     0E1C                     	;# 
  3485     0E1D                     	;# 
  3486     0E1E                     	;# 
  3487     0E1E                     	;# 
  3488     0E1F                     	;# 
  3489     0E20                     	;# 
  3490     0E21                     	;# 
  3491     0E22                     	;# 
  3492     0E23                     	;# 
  3493     0E24                     	;# 
  3494     0E25                     	;# 
  3495     0E26                     	;# 
  3496     0E27                     	;# 
  3497     0E28                     	;# 
  3498     0E29                     	;# 
  3499     0E2A                     	;# 
  3500     0E2B                     	;# 
  3501     0E2C                     	;# 
  3502     0E2D                     	;# 
  3503     0E2E                     	;# 
  3504     0E90                     	;# 
  3505     0E91                     	;# 
  3506     0E92                     	;# 
  3507     0E94                     	;# 
  3508     0E95                     	;# 
  3509     0E9C                     	;# 
  3510     0E9D                     	;# 
  3511     0E9E                     	;# 
  3512     0E9F                     	;# 
  3513     0EA0                     	;# 
  3514     0EA1                     	;# 
  3515     0EA2                     	;# 
  3516     0EA3                     	;# 
  3517     0EA4                     	;# 
  3518     0EA5                     	;# 
  3519     0EA6                     	;# 
  3520     0EA7                     	;# 
  3521     0F0F                     	;# 
  3522     0F10                     	;# 
  3523     0F11                     	;# 
  3524     0F12                     	;# 
  3525     0F13                     	;# 
  3526     0F14                     	;# 
  3527     0F15                     	;# 
  3528     0F16                     	;# 
  3529     0F17                     	;# 
  3530     0F18                     	;# 
  3531     0F19                     	;# 
  3532     0F1A                     	;# 
  3533     0F1B                     	;# 
  3534     0F1C                     	;# 
  3535     0F1D                     	;# 
  3536     0F1E                     	;# 
  3537     0F1F                     	;# 
  3538     0F20                     	;# 
  3539     0F21                     	;# 
  3540     0F22                     	;# 
  3541     0F23                     	;# 
  3542     0FE4                     	;# 
  3543     0FE5                     	;# 
  3544     0FE6                     	;# 
  3545     0FE7                     	;# 
  3546     0FE8                     	;# 
  3547     0FE9                     	;# 
  3548     0FEA                     	;# 
  3549     0FEB                     	;# 
  3550     0FED                     	;# 
  3551     0FEE                     	;# 
  3552     0FEF                     	;# 
  3553     0000                     	;# 
  3554     0001                     	;# 
  3555     0002                     	;# 
  3556     0003                     	;# 
  3557     0004                     	;# 
  3558     0005                     	;# 
  3559     0006                     	;# 
  3560     0007                     	;# 
  3561     0008                     	;# 
  3562     0009                     	;# 
  3563     000A                     	;# 
  3564     000B                     	;# 
  3565     000C                     	;# 
  3566     000D                     	;# 
  3567     000E                     	;# 
  3568     0010                     	;# 
  3569     0011                     	;# 
  3570     0012                     	;# 
  3571     0013                     	;# 
  3572     0014                     	;# 
  3573     0015                     	;# 
  3574     0016                     	;# 
  3575     0016                     	;# 
  3576     0017                     	;# 
  3577     0018                     	;# 
  3578     0019                     	;# 
  3579     001A                     	;# 
  3580     001A                     	;# 
  3581     001B                     	;# 
  3582     001B                     	;# 
  3583     001C                     	;# 
  3584     001D                     	;# 
  3585     001E                     	;# 
  3586     001F                     	;# 
  3587     008C                     	;# 
  3588     008D                     	;# 
  3589     008E                     	;# 
  3590     0090                     	;# 
  3591     0091                     	;# 
  3592     0092                     	;# 
  3593     0093                     	;# 
  3594     0094                     	;# 
  3595     0095                     	;# 
  3596     0096                     	;# 
  3597     0098                     	;# 
  3598     0099                     	;# 
  3599     009A                     	;# 
  3600     009B                     	;# 
  3601     009B                     	;# 
  3602     009C                     	;# 
  3603     009D                     	;# 
  3604     009E                     	;# 
  3605     009F                     	;# 
  3606     010C                     	;# 
  3607     010D                     	;# 
  3608     010E                     	;# 
  3609     0111                     	;# 
  3610     0112                     	;# 
  3611     0113                     	;# 
  3612     0114                     	;# 
  3613     0115                     	;# 
  3614     0116                     	;# 
  3615     0117                     	;# 
  3616     0118                     	;# 
  3617     0119                     	;# 
  3618     011C                     	;# 
  3619     018C                     	;# 
  3620     018D                     	;# 
  3621     018E                     	;# 
  3622     0191                     	;# 
  3623     0191                     	;# 
  3624     0192                     	;# 
  3625     0193                     	;# 
  3626     0193                     	;# 
  3627     0194                     	;# 
  3628     0195                     	;# 
  3629     0196                     	;# 
  3630     0197                     	;# 
  3631     0199                     	;# 
  3632     0199                     	;# 
  3633     0199                     	;# 
  3634     019A                     	;# 
  3635     019A                     	;# 
  3636     019A                     	;# 
  3637     019B                     	;# 
  3638     019B                     	;# 
  3639     019B                     	;# 
  3640     019B                     	;# 
  3641     019B                     	;# 
  3642     019C                     	;# 
  3643     019C                     	;# 
  3644     019C                     	;# 
  3645     019D                     	;# 
  3646     019D                     	;# 
  3647     019D                     	;# 
  3648     019E                     	;# 
  3649     019E                     	;# 
  3650     019E                     	;# 
  3651     019F                     	;# 
  3652     019F                     	;# 
  3653     019F                     	;# 
  3654     019F                     	;# 
  3655     019F                     	;# 
  3656     020C                     	;# 
  3657     020D                     	;# 
  3658     020E                     	;# 
  3659     0211                     	;# 
  3660     0211                     	;# 
  3661     0212                     	;# 
  3662     0212                     	;# 
  3663     0213                     	;# 
  3664     0213                     	;# 
  3665     0214                     	;# 
  3666     0214                     	;# 
  3667     0215                     	;# 
  3668     0215                     	;# 
  3669     0215                     	;# 
  3670     0215                     	;# 
  3671     0216                     	;# 
  3672     0216                     	;# 
  3673     0217                     	;# 
  3674     0217                     	;# 
  3675     028C                     	;# 
  3676     028D                     	;# 
  3677     028E                     	;# 
  3678     0291                     	;# 
  3679     0291                     	;# 
  3680     0292                     	;# 
  3681     0293                     	;# 
  3682     0294                     	;# 
  3683     0298                     	;# 
  3684     0298                     	;# 
  3685     0299                     	;# 
  3686     029A                     	;# 
  3687     029B                     	;# 
  3688     029E                     	;# 
  3689     030C                     	;# 
  3690     030D                     	;# 
  3691     030E                     	;# 
  3692     038C                     	;# 
  3693     038D                     	;# 
  3694     038E                     	;# 
  3695     0391                     	;# 
  3696     0392                     	;# 
  3697     0393                     	;# 
  3698     0394                     	;# 
  3699     0395                     	;# 
  3700     0396                     	;# 
  3701     0397                     	;# 
  3702     0398                     	;# 
  3703     0399                     	;# 
  3704     040E                     	;# 
  3705     0413                     	;# 
  3706     0413                     	;# 
  3707     0414                     	;# 
  3708     0414                     	;# 
  3709     0415                     	;# 
  3710     0416                     	;# 
  3711     0417                     	;# 
  3712     0418                     	;# 
  3713     041A                     	;# 
  3714     041A                     	;# 
  3715     041B                     	;# 
  3716     041B                     	;# 
  3717     041C                     	;# 
  3718     041D                     	;# 
  3719     041E                     	;# 
  3720     041F                     	;# 
  3721     0493                     	;# 
  3722     0494                     	;# 
  3723     0495                     	;# 
  3724     0496                     	;# 
  3725     049A                     	;# 
  3726     049B                     	;# 
  3727     049C                     	;# 
  3728     049D                     	;# 
  3729     058C                     	;# 
  3730     058C                     	;# 
  3731     058D                     	;# 
  3732     058E                     	;# 
  3733     058E                     	;# 
  3734     058F                     	;# 
  3735     0590                     	;# 
  3736     0590                     	;# 
  3737     0591                     	;# 
  3738     0592                     	;# 
  3739     0592                     	;# 
  3740     0593                     	;# 
  3741     0594                     	;# 
  3742     0594                     	;# 
  3743     0595                     	;# 
  3744     0596                     	;# 
  3745     0596                     	;# 
  3746     0597                     	;# 
  3747     0598                     	;# 
  3748     0599                     	;# 
  3749     059A                     	;# 
  3750     059B                     	;# 
  3751     059B                     	;# 
  3752     059C                     	;# 
  3753     059D                     	;# 
  3754     060C                     	;# 
  3755     060C                     	;# 
  3756     060D                     	;# 
  3757     060E                     	;# 
  3758     060F                     	;# 
  3759     060F                     	;# 
  3760     0610                     	;# 
  3761     0611                     	;# 
  3762     0612                     	;# 
  3763     0613                     	;# 
  3764     0614                     	;# 
  3765     0617                     	;# 
  3766     0617                     	;# 
  3767     0618                     	;# 
  3768     0619                     	;# 
  3769     061A                     	;# 
  3770     061A                     	;# 
  3771     061B                     	;# 
  3772     061C                     	;# 
  3773     0691                     	;# 
  3774     0692                     	;# 
  3775     0693                     	;# 
  3776     0694                     	;# 
  3777     0695                     	;# 
  3778     0696                     	;# 
  3779     0697                     	;# 
  3780     0699                     	;# 
  3781     069A                     	;# 
  3782     0711                     	;# 
  3783     0712                     	;# 
  3784     0713                     	;# 
  3785     0714                     	;# 
  3786     0715                     	;# 
  3787     0718                     	;# 
  3788     0718                     	;# 
  3789     0719                     	;# 
  3790     071A                     	;# 
  3791     071A                     	;# 
  3792     071B                     	;# 
  3793     071C                     	;# 
  3794     071D                     	;# 
  3795     0791                     	;# 
  3796     0791                     	;# 
  3797     0792                     	;# 
  3798     0793                     	;# 
  3799     0793                     	;# 
  3800     0794                     	;# 
  3801     0795                     	;# 
  3802     0795                     	;# 
  3803     0796                     	;# 
  3804     0797                     	;# 
  3805     0797                     	;# 
  3806     0798                     	;# 
  3807     0799                     	;# 
  3808     079A                     	;# 
  3809     080C                     	;# 
  3810     080C                     	;# 
  3811     080D                     	;# 
  3812     080E                     	;# 
  3813     080E                     	;# 
  3814     080F                     	;# 
  3815     0810                     	;# 
  3816     0810                     	;# 
  3817     0811                     	;# 
  3818     0812                     	;# 
  3819     0812                     	;# 
  3820     0813                     	;# 
  3821     0814                     	;# 
  3822     0815                     	;# 
  3823     0816                     	;# 
  3824     0817                     	;# 
  3825     0818                     	;# 
  3826     0819                     	;# 
  3827     081A                     	;# 
  3828     081A                     	;# 
  3829     081B                     	;# 
  3830     081C                     	;# 
  3831     081C                     	;# 
  3832     081D                     	;# 
  3833     088C                     	;# 
  3834     088D                     	;# 
  3835     088E                     	;# 
  3836     088F                     	;# 
  3837     088F                     	;# 
  3838     0890                     	;# 
  3839     0891                     	;# 
  3840     0892                     	;# 
  3841     0893                     	;# 
  3842     0893                     	;# 
  3843     0894                     	;# 
  3844     0895                     	;# 
  3845     0896                     	;# 
  3846     0897                     	;# 
  3847     0897                     	;# 
  3848     0898                     	;# 
  3849     0899                     	;# 
  3850     0D8C                     	;# 
  3851     0D8C                     	;# 
  3852     0D8D                     	;# 
  3853     0D8E                     	;# 
  3854     0D8F                     	;# 
  3855     0D8F                     	;# 
  3856     0D90                     	;# 
  3857     0D91                     	;# 
  3858     0D92                     	;# 
  3859     0D92                     	;# 
  3860     0D93                     	;# 
  3861     0D94                     	;# 
  3862     0D95                     	;# 
  3863     0D95                     	;# 
  3864     0D96                     	;# 
  3865     0D97                     	;# 
  3866     0D98                     	;# 
  3867     0D99                     	;# 
  3868     0D9A                     	;# 
  3869     0D9B                     	;# 
  3870     0D9C                     	;# 
  3871     0D9D                     	;# 
  3872     0D9E                     	;# 
  3873     0D9E                     	;# 
  3874     0D9F                     	;# 
  3875     0DA0                     	;# 
  3876     0DA1                     	;# 
  3877     0DA1                     	;# 
  3878     0DA2                     	;# 
  3879     0DA3                     	;# 
  3880     0DA4                     	;# 
  3881     0DA4                     	;# 
  3882     0DA5                     	;# 
  3883     0DA6                     	;# 
  3884     0DA7                     	;# 
  3885     0DA7                     	;# 
  3886     0DA8                     	;# 
  3887     0DA9                     	;# 
  3888     0DAA                     	;# 
  3889     0DAB                     	;# 
  3890     0DAC                     	;# 
  3891     0DAD                     	;# 
  3892     0DAE                     	;# 
  3893     0DAF                     	;# 
  3894     0E0F                     	;# 
  3895     0E10                     	;# 
  3896     0E11                     	;# 
  3897     0E12                     	;# 
  3898     0E13                     	;# 
  3899     0E14                     	;# 
  3900     0E15                     	;# 
  3901     0E16                     	;# 
  3902     0E17                     	;# 
  3903     0E17                     	;# 
  3904     0E18                     	;# 
  3905     0E18                     	;# 
  3906     0E19                     	;# 
  3907     0E1A                     	;# 
  3908     0E1B                     	;# 
  3909     0E1B                     	;# 
  3910     0E1C                     	;# 
  3911     0E1D                     	;# 
  3912     0E1E                     	;# 
  3913     0E1E                     	;# 
  3914     0E1F                     	;# 
  3915     0E20                     	;# 
  3916     0E21                     	;# 
  3917     0E22                     	;# 
  3918     0E23                     	;# 
  3919     0E24                     	;# 
  3920     0E25                     	;# 
  3921     0E26                     	;# 
  3922     0E27                     	;# 
  3923     0E28                     	;# 
  3924     0E29                     	;# 
  3925     0E2A                     	;# 
  3926     0E2B                     	;# 
  3927     0E2C                     	;# 
  3928     0E2D                     	;# 
  3929     0E2E                     	;# 
  3930     0E90                     	;# 
  3931     0E91                     	;# 
  3932     0E92                     	;# 
  3933     0E94                     	;# 
  3934     0E95                     	;# 
  3935     0E9C                     	;# 
  3936     0E9D                     	;# 
  3937     0E9E                     	;# 
  3938     0E9F                     	;# 
  3939     0EA0                     	;# 
  3940     0EA1                     	;# 
  3941     0EA2                     	;# 
  3942     0EA3                     	;# 
  3943     0EA4                     	;# 
  3944     0EA5                     	;# 
  3945     0EA6                     	;# 
  3946     0EA7                     	;# 
  3947     0F0F                     	;# 
  3948     0F10                     	;# 
  3949     0F11                     	;# 
  3950     0F12                     	;# 
  3951     0F13                     	;# 
  3952     0F14                     	;# 
  3953     0F15                     	;# 
  3954     0F16                     	;# 
  3955     0F17                     	;# 
  3956     0F18                     	;# 
  3957     0F19                     	;# 
  3958     0F1A                     	;# 
  3959     0F1B                     	;# 
  3960     0F1C                     	;# 
  3961     0F1D                     	;# 
  3962     0F1E                     	;# 
  3963     0F1F                     	;# 
  3964     0F20                     	;# 
  3965     0F21                     	;# 
  3966     0F22                     	;# 
  3967     0F23                     	;# 
  3968     0FE4                     	;# 
  3969     0FE5                     	;# 
  3970     0FE6                     	;# 
  3971     0FE7                     	;# 
  3972     0FE8                     	;# 
  3973     0FE9                     	;# 
  3974     0FEA                     	;# 
  3975     0FEB                     	;# 
  3976     0FED                     	;# 
  3977     0FEE                     	;# 
  3978     0FEF                     	;# 
  3979     0000                     	;# 
  3980     0001                     	;# 
  3981     0002                     	;# 
  3982     0003                     	;# 
  3983     0004                     	;# 
  3984     0005                     	;# 
  3985     0006                     	;# 
  3986     0007                     	;# 
  3987     0008                     	;# 
  3988     0009                     	;# 
  3989     000A                     	;# 
  3990     000B                     	;# 
  3991     000C                     	;# 
  3992     000D                     	;# 
  3993     000E                     	;# 
  3994     0010                     	;# 
  3995     0011                     	;# 
  3996     0012                     	;# 
  3997     0013                     	;# 
  3998     0014                     	;# 
  3999     0015                     	;# 
  4000     0016                     	;# 
  4001     0016                     	;# 
  4002     0017                     	;# 
  4003     0018                     	;# 
  4004     0019                     	;# 
  4005     001A                     	;# 
  4006     001A                     	;# 
  4007     001B                     	;# 
  4008     001B                     	;# 
  4009     001C                     	;# 
  4010     001D                     	;# 
  4011     001E                     	;# 
  4012     001F                     	;# 
  4013     008C                     	;# 
  4014     008D                     	;# 
  4015     008E                     	;# 
  4016     0090                     	;# 
  4017     0091                     	;# 
  4018     0092                     	;# 
  4019     0093                     	;# 
  4020     0094                     	;# 
  4021     0095                     	;# 
  4022     0096                     	;# 
  4023     0098                     	;# 
  4024     0099                     	;# 
  4025     009A                     	;# 
  4026     009B                     	;# 
  4027     009B                     	;# 
  4028     009C                     	;# 
  4029     009D                     	;# 
  4030     009E                     	;# 
  4031     009F                     	;# 
  4032     010C                     	;# 
  4033     010D                     	;# 
  4034     010E                     	;# 
  4035     0111                     	;# 
  4036     0112                     	;# 
  4037     0113                     	;# 
  4038     0114                     	;# 
  4039     0115                     	;# 
  4040     0116                     	;# 
  4041     0117                     	;# 
  4042     0118                     	;# 
  4043     0119                     	;# 
  4044     011C                     	;# 
  4045     018C                     	;# 
  4046     018D                     	;# 
  4047     018E                     	;# 
  4048     0191                     	;# 
  4049     0191                     	;# 
  4050     0192                     	;# 
  4051     0193                     	;# 
  4052     0193                     	;# 
  4053     0194                     	;# 
  4054     0195                     	;# 
  4055     0196                     	;# 
  4056     0197                     	;# 
  4057     0199                     	;# 
  4058     0199                     	;# 
  4059     0199                     	;# 
  4060     019A                     	;# 
  4061     019A                     	;# 
  4062     019A                     	;# 
  4063     019B                     	;# 
  4064     019B                     	;# 
  4065     019B                     	;# 
  4066     019B                     	;# 
  4067     019B                     	;# 
  4068     019C                     	;# 
  4069     019C                     	;# 
  4070     019C                     	;# 
  4071     019D                     	;# 
  4072     019D                     	;# 
  4073     019D                     	;# 
  4074     019E                     	;# 
  4075     019E                     	;# 
  4076     019E                     	;# 
  4077     019F                     	;# 
  4078     019F                     	;# 
  4079     019F                     	;# 
  4080     019F                     	;# 
  4081     019F                     	;# 
  4082     020C                     	;# 
  4083     020D                     	;# 
  4084     020E                     	;# 
  4085     0211                     	;# 
  4086     0211                     	;# 
  4087     0212                     	;# 
  4088     0212                     	;# 
  4089     0213                     	;# 
  4090     0213                     	;# 
  4091     0214                     	;# 
  4092     0214                     	;# 
  4093     0215                     	;# 
  4094     0215                     	;# 
  4095     0215                     	;# 
  4096     0215                     	;# 
  4097     0216                     	;# 
  4098     0216                     	;# 
  4099     0217                     	;# 
  4100     0217                     	;# 
  4101     028C                     	;# 
  4102     028D                     	;# 
  4103     028E                     	;# 
  4104     0291                     	;# 
  4105     0291                     	;# 
  4106     0292                     	;# 
  4107     0293                     	;# 
  4108     0294                     	;# 
  4109     0298                     	;# 
  4110     0298                     	;# 
  4111     0299                     	;# 
  4112     029A                     	;# 
  4113     029B                     	;# 
  4114     029E                     	;# 
  4115     030C                     	;# 
  4116     030D                     	;# 
  4117     030E                     	;# 
  4118     038C                     	;# 
  4119     038D                     	;# 
  4120     038E                     	;# 
  4121     0391                     	;# 
  4122     0392                     	;# 
  4123     0393                     	;# 
  4124     0394                     	;# 
  4125     0395                     	;# 
  4126     0396                     	;# 
  4127     0397                     	;# 
  4128     0398                     	;# 
  4129     0399                     	;# 
  4130     040E                     	;# 
  4131     0413                     	;# 
  4132     0413                     	;# 
  4133     0414                     	;# 
  4134     0414                     	;# 
  4135     0415                     	;# 
  4136     0416                     	;# 
  4137     0417                     	;# 
  4138     0418                     	;# 
  4139     041A                     	;# 
  4140     041A                     	;# 
  4141     041B                     	;# 
  4142     041B                     	;# 
  4143     041C                     	;# 
  4144     041D                     	;# 
  4145     041E                     	;# 
  4146     041F                     	;# 
  4147     0493                     	;# 
  4148     0494                     	;# 
  4149     0495                     	;# 
  4150     0496                     	;# 
  4151     049A                     	;# 
  4152     049B                     	;# 
  4153     049C                     	;# 
  4154     049D                     	;# 
  4155     058C                     	;# 
  4156     058C                     	;# 
  4157     058D                     	;# 
  4158     058E                     	;# 
  4159     058E                     	;# 
  4160     058F                     	;# 
  4161     0590                     	;# 
  4162     0590                     	;# 
  4163     0591                     	;# 
  4164     0592                     	;# 
  4165     0592                     	;# 
  4166     0593                     	;# 
  4167     0594                     	;# 
  4168     0594                     	;# 
  4169     0595                     	;# 
  4170     0596                     	;# 
  4171     0596                     	;# 
  4172     0597                     	;# 
  4173     0598                     	;# 
  4174     0599                     	;# 
  4175     059A                     	;# 
  4176     059B                     	;# 
  4177     059B                     	;# 
  4178     059C                     	;# 
  4179     059D                     	;# 
  4180     060C                     	;# 
  4181     060C                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     060F                     	;# 
  4186     0610                     	;# 
  4187     0611                     	;# 
  4188     0612                     	;# 
  4189     0613                     	;# 
  4190     0614                     	;# 
  4191     0617                     	;# 
  4192     0617                     	;# 
  4193     0618                     	;# 
  4194     0619                     	;# 
  4195     061A                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     0691                     	;# 
  4200     0692                     	;# 
  4201     0693                     	;# 
  4202     0694                     	;# 
  4203     0695                     	;# 
  4204     0696                     	;# 
  4205     0697                     	;# 
  4206     0699                     	;# 
  4207     069A                     	;# 
  4208     0711                     	;# 
  4209     0712                     	;# 
  4210     0713                     	;# 
  4211     0714                     	;# 
  4212     0715                     	;# 
  4213     0718                     	;# 
  4214     0718                     	;# 
  4215     0719                     	;# 
  4216     071A                     	;# 
  4217     071A                     	;# 
  4218     071B                     	;# 
  4219     071C                     	;# 
  4220     071D                     	;# 
  4221     0791                     	;# 
  4222     0791                     	;# 
  4223     0792                     	;# 
  4224     0793                     	;# 
  4225     0793                     	;# 
  4226     0794                     	;# 
  4227     0795                     	;# 
  4228     0795                     	;# 
  4229     0796                     	;# 
  4230     0797                     	;# 
  4231     0797                     	;# 
  4232     0798                     	;# 
  4233     0799                     	;# 
  4234     079A                     	;# 
  4235     080C                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080E                     	;# 
  4240     080F                     	;# 
  4241     0810                     	;# 
  4242     0810                     	;# 
  4243     0811                     	;# 
  4244     0812                     	;# 
  4245     0812                     	;# 
  4246     0813                     	;# 
  4247     0814                     	;# 
  4248     0815                     	;# 
  4249     0816                     	;# 
  4250     0817                     	;# 
  4251     0818                     	;# 
  4252     0819                     	;# 
  4253     081A                     	;# 
  4254     081A                     	;# 
  4255     081B                     	;# 
  4256     081C                     	;# 
  4257     081C                     	;# 
  4258     081D                     	;# 
  4259     088C                     	;# 
  4260     088D                     	;# 
  4261     088E                     	;# 
  4262     088F                     	;# 
  4263     088F                     	;# 
  4264     0890                     	;# 
  4265     0891                     	;# 
  4266     0892                     	;# 
  4267     0893                     	;# 
  4268     0893                     	;# 
  4269     0894                     	;# 
  4270     0895                     	;# 
  4271     0896                     	;# 
  4272     0897                     	;# 
  4273     0897                     	;# 
  4274     0898                     	;# 
  4275     0899                     	;# 
  4276     0D8C                     	;# 
  4277     0D8C                     	;# 
  4278     0D8D                     	;# 
  4279     0D8E                     	;# 
  4280     0D8F                     	;# 
  4281     0D8F                     	;# 
  4282     0D90                     	;# 
  4283     0D91                     	;# 
  4284     0D92                     	;# 
  4285     0D92                     	;# 
  4286     0D93                     	;# 
  4287     0D94                     	;# 
  4288     0D95                     	;# 
  4289     0D95                     	;# 
  4290     0D96                     	;# 
  4291     0D97                     	;# 
  4292     0D98                     	;# 
  4293     0D99                     	;# 
  4294     0D9A                     	;# 
  4295     0D9B                     	;# 
  4296     0D9C                     	;# 
  4297     0D9D                     	;# 
  4298     0D9E                     	;# 
  4299     0D9E                     	;# 
  4300     0D9F                     	;# 
  4301     0DA0                     	;# 
  4302     0DA1                     	;# 
  4303     0DA1                     	;# 
  4304     0DA2                     	;# 
  4305     0DA3                     	;# 
  4306     0DA4                     	;# 
  4307     0DA4                     	;# 
  4308     0DA5                     	;# 
  4309     0DA6                     	;# 
  4310     0DA7                     	;# 
  4311     0DA7                     	;# 
  4312     0DA8                     	;# 
  4313     0DA9                     	;# 
  4314     0DAA                     	;# 
  4315     0DAB                     	;# 
  4316     0DAC                     	;# 
  4317     0DAD                     	;# 
  4318     0DAE                     	;# 
  4319     0DAF                     	;# 
  4320     0E0F                     	;# 
  4321     0E10                     	;# 
  4322     0E11                     	;# 
  4323     0E12                     	;# 
  4324     0E13                     	;# 
  4325     0E14                     	;# 
  4326     0E15                     	;# 
  4327     0E16                     	;# 
  4328     0E17                     	;# 
  4329     0E17                     	;# 
  4330     0E18                     	;# 
  4331     0E18                     	;# 
  4332     0E19                     	;# 
  4333     0E1A                     	;# 
  4334     0E1B                     	;# 
  4335     0E1B                     	;# 
  4336     0E1C                     	;# 
  4337     0E1D                     	;# 
  4338     0E1E                     	;# 
  4339     0E1E                     	;# 
  4340     0E1F                     	;# 
  4341     0E20                     	;# 
  4342     0E21                     	;# 
  4343     0E22                     	;# 
  4344     0E23                     	;# 
  4345     0E24                     	;# 
  4346     0E25                     	;# 
  4347     0E26                     	;# 
  4348     0E27                     	;# 
  4349     0E28                     	;# 
  4350     0E29                     	;# 
  4351     0E2A                     	;# 
  4352     0E2B                     	;# 
  4353     0E2C                     	;# 
  4354     0E2D                     	;# 
  4355     0E2E                     	;# 
  4356     0E90                     	;# 
  4357     0E91                     	;# 
  4358     0E92                     	;# 
  4359     0E94                     	;# 
  4360     0E95                     	;# 
  4361     0E9C                     	;# 
  4362     0E9D                     	;# 
  4363     0E9E                     	;# 
  4364     0E9F                     	;# 
  4365     0EA0                     	;# 
  4366     0EA1                     	;# 
  4367     0EA2                     	;# 
  4368     0EA3                     	;# 
  4369     0EA4                     	;# 
  4370     0EA5                     	;# 
  4371     0EA6                     	;# 
  4372     0EA7                     	;# 
  4373     0F0F                     	;# 
  4374     0F10                     	;# 
  4375     0F11                     	;# 
  4376     0F12                     	;# 
  4377     0F13                     	;# 
  4378     0F14                     	;# 
  4379     0F15                     	;# 
  4380     0F16                     	;# 
  4381     0F17                     	;# 
  4382     0F18                     	;# 
  4383     0F19                     	;# 
  4384     0F1A                     	;# 
  4385     0F1B                     	;# 
  4386     0F1C                     	;# 
  4387     0F1D                     	;# 
  4388     0F1E                     	;# 
  4389     0F1F                     	;# 
  4390     0F20                     	;# 
  4391     0F21                     	;# 
  4392     0F22                     	;# 
  4393     0F23                     	;# 
  4394     0FE4                     	;# 
  4395     0FE5                     	;# 
  4396     0FE6                     	;# 
  4397     0FE7                     	;# 
  4398     0FE8                     	;# 
  4399     0FE9                     	;# 
  4400     0FEA                     	;# 
  4401     0FEB                     	;# 
  4402     0FED                     	;# 
  4403     0FEE                     	;# 
  4404     0FEF                     	;# 
  4405     0000                     	;# 
  4406     0001                     	;# 
  4407     0002                     	;# 
  4408     0003                     	;# 
  4409     0004                     	;# 
  4410     0005                     	;# 
  4411     0006                     	;# 
  4412     0007                     	;# 
  4413     0008                     	;# 
  4414     0009                     	;# 
  4415     000A                     	;# 
  4416     000B                     	;# 
  4417     000C                     	;# 
  4418     000D                     	;# 
  4419     000E                     	;# 
  4420     0010                     	;# 
  4421     0011                     	;# 
  4422     0012                     	;# 
  4423     0013                     	;# 
  4424     0014                     	;# 
  4425     0015                     	;# 
  4426     0016                     	;# 
  4427     0016                     	;# 
  4428     0017                     	;# 
  4429     0018                     	;# 
  4430     0019                     	;# 
  4431     001A                     	;# 
  4432     001A                     	;# 
  4433     001B                     	;# 
  4434     001B                     	;# 
  4435     001C                     	;# 
  4436     001D                     	;# 
  4437     001E                     	;# 
  4438     001F                     	;# 
  4439     008C                     	;# 
  4440     008D                     	;# 
  4441     008E                     	;# 
  4442     0090                     	;# 
  4443     0091                     	;# 
  4444     0092                     	;# 
  4445     0093                     	;# 
  4446     0094                     	;# 
  4447     0095                     	;# 
  4448     0096                     	;# 
  4449     0098                     	;# 
  4450     0099                     	;# 
  4451     009A                     	;# 
  4452     009B                     	;# 
  4453     009B                     	;# 
  4454     009C                     	;# 
  4455     009D                     	;# 
  4456     009E                     	;# 
  4457     009F                     	;# 
  4458     010C                     	;# 
  4459     010D                     	;# 
  4460     010E                     	;# 
  4461     0111                     	;# 
  4462     0112                     	;# 
  4463     0113                     	;# 
  4464     0114                     	;# 
  4465     0115                     	;# 
  4466     0116                     	;# 
  4467     0117                     	;# 
  4468     0118                     	;# 
  4469     0119                     	;# 
  4470     011C                     	;# 
  4471     018C                     	;# 
  4472     018D                     	;# 
  4473     018E                     	;# 
  4474     0191                     	;# 
  4475     0191                     	;# 
  4476     0192                     	;# 
  4477     0193                     	;# 
  4478     0193                     	;# 
  4479     0194                     	;# 
  4480     0195                     	;# 
  4481     0196                     	;# 
  4482     0197                     	;# 
  4483     0199                     	;# 
  4484     0199                     	;# 
  4485     0199                     	;# 
  4486     019A                     	;# 
  4487     019A                     	;# 
  4488     019A                     	;# 
  4489     019B                     	;# 
  4490     019B                     	;# 
  4491     019B                     	;# 
  4492     019B                     	;# 
  4493     019B                     	;# 
  4494     019C                     	;# 
  4495     019C                     	;# 
  4496     019C                     	;# 
  4497     019D                     	;# 
  4498     019D                     	;# 
  4499     019D                     	;# 
  4500     019E                     	;# 
  4501     019E                     	;# 
  4502     019E                     	;# 
  4503     019F                     	;# 
  4504     019F                     	;# 
  4505     019F                     	;# 
  4506     019F                     	;# 
  4507     019F                     	;# 
  4508     020C                     	;# 
  4509     020D                     	;# 
  4510     020E                     	;# 
  4511     0211                     	;# 
  4512     0211                     	;# 
  4513     0212                     	;# 
  4514     0212                     	;# 
  4515     0213                     	;# 
  4516     0213                     	;# 
  4517     0214                     	;# 
  4518     0214                     	;# 
  4519     0215                     	;# 
  4520     0215                     	;# 
  4521     0215                     	;# 
  4522     0215                     	;# 
  4523     0216                     	;# 
  4524     0216                     	;# 
  4525     0217                     	;# 
  4526     0217                     	;# 
  4527     028C                     	;# 
  4528     028D                     	;# 
  4529     028E                     	;# 
  4530     0291                     	;# 
  4531     0291                     	;# 
  4532     0292                     	;# 
  4533     0293                     	;# 
  4534     0294                     	;# 
  4535     0298                     	;# 
  4536     0298                     	;# 
  4537     0299                     	;# 
  4538     029A                     	;# 
  4539     029B                     	;# 
  4540     029E                     	;# 
  4541     030C                     	;# 
  4542     030D                     	;# 
  4543     030E                     	;# 
  4544     038C                     	;# 
  4545     038D                     	;# 
  4546     038E                     	;# 
  4547     0391                     	;# 
  4548     0392                     	;# 
  4549     0393                     	;# 
  4550     0394                     	;# 
  4551     0395                     	;# 
  4552     0396                     	;# 
  4553     0397                     	;# 
  4554     0398                     	;# 
  4555     0399                     	;# 
  4556     040E                     	;# 
  4557     0413                     	;# 
  4558     0413                     	;# 
  4559     0414                     	;# 
  4560     0414                     	;# 
  4561     0415                     	;# 
  4562     0416                     	;# 
  4563     0417                     	;# 
  4564     0418                     	;# 
  4565     041A                     	;# 
  4566     041A                     	;# 
  4567     041B                     	;# 
  4568     041B                     	;# 
  4569     041C                     	;# 
  4570     041D                     	;# 
  4571     041E                     	;# 
  4572     041F                     	;# 
  4573     0493                     	;# 
  4574     0494                     	;# 
  4575     0495                     	;# 
  4576     0496                     	;# 
  4577     049A                     	;# 
  4578     049B                     	;# 
  4579     049C                     	;# 
  4580     049D                     	;# 
  4581     058C                     	;# 
  4582     058C                     	;# 
  4583     058D                     	;# 
  4584     058E                     	;# 
  4585     058E                     	;# 
  4586     058F                     	;# 
  4587     0590                     	;# 
  4588     0590                     	;# 
  4589     0591                     	;# 
  4590     0592                     	;# 
  4591     0592                     	;# 
  4592     0593                     	;# 
  4593     0594                     	;# 
  4594     0594                     	;# 
  4595     0595                     	;# 
  4596     0596                     	;# 
  4597     0596                     	;# 
  4598     0597                     	;# 
  4599     0598                     	;# 
  4600     0599                     	;# 
  4601     059A                     	;# 
  4602     059B                     	;# 
  4603     059B                     	;# 
  4604     059C                     	;# 
  4605     059D                     	;# 
  4606     060C                     	;# 
  4607     060C                     	;# 
  4608     060D                     	;# 
  4609     060E                     	;# 
  4610     060F                     	;# 
  4611     060F                     	;# 
  4612     0610                     	;# 
  4613     0611                     	;# 
  4614     0612                     	;# 
  4615     0613                     	;# 
  4616     0614                     	;# 
  4617     0617                     	;# 
  4618     0617                     	;# 
  4619     0618                     	;# 
  4620     0619                     	;# 
  4621     061A                     	;# 
  4622     061A                     	;# 
  4623     061B                     	;# 
  4624     061C                     	;# 
  4625     0691                     	;# 
  4626     0692                     	;# 
  4627     0693                     	;# 
  4628     0694                     	;# 
  4629     0695                     	;# 
  4630     0696                     	;# 
  4631     0697                     	;# 
  4632     0699                     	;# 
  4633     069A                     	;# 
  4634     0711                     	;# 
  4635     0712                     	;# 
  4636     0713                     	;# 
  4637     0714                     	;# 
  4638     0715                     	;# 
  4639     0718                     	;# 
  4640     0718                     	;# 
  4641     0719                     	;# 
  4642     071A                     	;# 
  4643     071A                     	;# 
  4644     071B                     	;# 
  4645     071C                     	;# 
  4646     071D                     	;# 
  4647     0791                     	;# 
  4648     0791                     	;# 
  4649     0792                     	;# 
  4650     0793                     	;# 
  4651     0793                     	;# 
  4652     0794                     	;# 
  4653     0795                     	;# 
  4654     0795                     	;# 
  4655     0796                     	;# 
  4656     0797                     	;# 
  4657     0797                     	;# 
  4658     0798                     	;# 
  4659     0799                     	;# 
  4660     079A                     	;# 
  4661     080C                     	;# 
  4662     080C                     	;# 
  4663     080D                     	;# 
  4664     080E                     	;# 
  4665     080E                     	;# 
  4666     080F                     	;# 
  4667     0810                     	;# 
  4668     0810                     	;# 
  4669     0811                     	;# 
  4670     0812                     	;# 
  4671     0812                     	;# 
  4672     0813                     	;# 
  4673     0814                     	;# 
  4674     0815                     	;# 
  4675     0816                     	;# 
  4676     0817                     	;# 
  4677     0818                     	;# 
  4678     0819                     	;# 
  4679     081A                     	;# 
  4680     081A                     	;# 
  4681     081B                     	;# 
  4682     081C                     	;# 
  4683     081C                     	;# 
  4684     081D                     	;# 
  4685     088C                     	;# 
  4686     088D                     	;# 
  4687     088E                     	;# 
  4688     088F                     	;# 
  4689     088F                     	;# 
  4690     0890                     	;# 
  4691     0891                     	;# 
  4692     0892                     	;# 
  4693     0893                     	;# 
  4694     0893                     	;# 
  4695     0894                     	;# 
  4696     0895                     	;# 
  4697     0896                     	;# 
  4698     0897                     	;# 
  4699     0897                     	;# 
  4700     0898                     	;# 
  4701     0899                     	;# 
  4702     0D8C                     	;# 
  4703     0D8C                     	;# 
  4704     0D8D                     	;# 
  4705     0D8E                     	;# 
  4706     0D8F                     	;# 
  4707     0D8F                     	;# 
  4708     0D90                     	;# 
  4709     0D91                     	;# 
  4710     0D92                     	;# 
  4711     0D92                     	;# 
  4712     0D93                     	;# 
  4713     0D94                     	;# 
  4714     0D95                     	;# 
  4715     0D95                     	;# 
  4716     0D96                     	;# 
  4717     0D97                     	;# 
  4718     0D98                     	;# 
  4719     0D99                     	;# 
  4720     0D9A                     	;# 
  4721     0D9B                     	;# 
  4722     0D9C                     	;# 
  4723     0D9D                     	;# 
  4724     0D9E                     	;# 
  4725     0D9E                     	;# 
  4726     0D9F                     	;# 
  4727     0DA0                     	;# 
  4728     0DA1                     	;# 
  4729     0DA1                     	;# 
  4730     0DA2                     	;# 
  4731     0DA3                     	;# 
  4732     0DA4                     	;# 
  4733     0DA4                     	;# 
  4734     0DA5                     	;# 
  4735     0DA6                     	;# 
  4736     0DA7                     	;# 
  4737     0DA7                     	;# 
  4738     0DA8                     	;# 
  4739     0DA9                     	;# 
  4740     0DAA                     	;# 
  4741     0DAB                     	;# 
  4742     0DAC                     	;# 
  4743     0DAD                     	;# 
  4744     0DAE                     	;# 
  4745     0DAF                     	;# 
  4746     0E0F                     	;# 
  4747     0E10                     	;# 
  4748     0E11                     	;# 
  4749     0E12                     	;# 
  4750     0E13                     	;# 
  4751     0E14                     	;# 
  4752     0E15                     	;# 
  4753     0E16                     	;# 
  4754     0E17                     	;# 
  4755     0E17                     	;# 
  4756     0E18                     	;# 
  4757     0E18                     	;# 
  4758     0E19                     	;# 
  4759     0E1A                     	;# 
  4760     0E1B                     	;# 
  4761     0E1B                     	;# 
  4762     0E1C                     	;# 
  4763     0E1D                     	;# 
  4764     0E1E                     	;# 
  4765     0E1E                     	;# 
  4766     0E1F                     	;# 
  4767     0E20                     	;# 
  4768     0E21                     	;# 
  4769     0E22                     	;# 
  4770     0E23                     	;# 
  4771     0E24                     	;# 
  4772     0E25                     	;# 
  4773     0E26                     	;# 
  4774     0E27                     	;# 
  4775     0E28                     	;# 
  4776     0E29                     	;# 
  4777     0E2A                     	;# 
  4778     0E2B                     	;# 
  4779     0E2C                     	;# 
  4780     0E2D                     	;# 
  4781     0E2E                     	;# 
  4782     0E90                     	;# 
  4783     0E91                     	;# 
  4784     0E92                     	;# 
  4785     0E94                     	;# 
  4786     0E95                     	;# 
  4787     0E9C                     	;# 
  4788     0E9D                     	;# 
  4789     0E9E                     	;# 
  4790     0E9F                     	;# 
  4791     0EA0                     	;# 
  4792     0EA1                     	;# 
  4793     0EA2                     	;# 
  4794     0EA3                     	;# 
  4795     0EA4                     	;# 
  4796     0EA5                     	;# 
  4797     0EA6                     	;# 
  4798     0EA7                     	;# 
  4799     0F0F                     	;# 
  4800     0F10                     	;# 
  4801     0F11                     	;# 
  4802     0F12                     	;# 
  4803     0F13                     	;# 
  4804     0F14                     	;# 
  4805     0F15                     	;# 
  4806     0F16                     	;# 
  4807     0F17                     	;# 
  4808     0F18                     	;# 
  4809     0F19                     	;# 
  4810     0F1A                     	;# 
  4811     0F1B                     	;# 
  4812     0F1C                     	;# 
  4813     0F1D                     	;# 
  4814     0F1E                     	;# 
  4815     0F1F                     	;# 
  4816     0F20                     	;# 
  4817     0F21                     	;# 
  4818     0F22                     	;# 
  4819     0F23                     	;# 
  4820     0FE4                     	;# 
  4821     0FE5                     	;# 
  4822     0FE6                     	;# 
  4823     0FE7                     	;# 
  4824     0FE8                     	;# 
  4825     0FE9                     	;# 
  4826     0FEA                     	;# 
  4827     0FEB                     	;# 
  4828     0FED                     	;# 
  4829     0FEE                     	;# 
  4830     0FEF                     	;# 
  4831                           
  4832 ;; Function _I2C1_Deinitialize is unused but had its address taken
  4833     0000                     
  4834 ;; Function _I2C1_WriteRead is unused but had its address taken
  4835     0000                     
  4836 ;; Function _I2C1_ErrorGet is unused but had its address taken
  4837     0000                     
  4838 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  4839     0000                     
  4840 ;; Function _EUSART_Deinitialize is unused but had its address taken
  4841     0000                     
  4842 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  4843     0000                     
  4844 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  4845     0000                     
  4846 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  4847     0000                     
  4848 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  4849     0000                     
  4850 ;; Function _EUSART_IsTxDone is unused but had its address taken
  4851     0000                     
  4852 ;; Function _EUSART_ErrorGet is unused but had its address taken
  4853     0000                     
  4854                           	psect	idataBANK0
  4855     0DA4                     __pidataBANK0:
  4856                           
  4857                           ;initializer for _kaps
  4858     0DA4  3451               	retlw	81
  4859     0DA5  3400               	retlw	0
  4860     0DA6  3400               	retlw	0
  4861     0DA7  3400               	retlw	0
  4862     0DA8  3400               	retlw	0
  4863     0DA9  3400               	retlw	0
  4864     0DAA  3400               	retlw	0
  4865                           
  4866                           	psect	idataBANK1
  4867     0EA1                     __pidataBANK1:
  4868                           
  4869                           ;initializer for _sspas
  4870     0EA1  3401               	retlw	1
  4871     0EA2  3400               	retlw	0
  4872     0EA3  3400               	retlw	0
  4873     0EA4  3400               	retlw	0
  4874     0EA5  3400               	retlw	0
  4875     0EA6  3400               	retlw	0
  4876     0EA7  3400               	retlw	0
  4877     0EA8  3400               	retlw	0
  4878     0EA9  3401               	retlw	1
  4879     0EAA  3400               	retlw	0
  4880     0EAB  3400               	retlw	0
  4881     0EAC  3400               	retlw	0
  4882     0EAD  3400               	retlw	0
  4883     0EAE  3400               	retlw	0
  4884     0EAF  3400               	retlw	0
  4885     0EB0  3400               	retlw	0
  4886     0EB1  3401               	retlw	1
  4887     0EB2  3400               	retlw	0
  4888     0EB3  3400               	retlw	0
  4889     0EB4  3400               	retlw	0
  4890     0EB5  3400               	retlw	0
  4891     0EB6  3400               	retlw	0
  4892     0EB7  3400               	retlw	0
  4893     0EB8  3400               	retlw	0
  4894                           
  4895                           	psect	stringtext1
  4896     076F                     __pstringtext1:
  4897     076F                     _UART:
  4898     076F  34B9               	retlw	low _EUSART_Initialize
  4899     0770  340E               	retlw	high _EUSART_Initialize
  4900     0771  3400               	retlw	0
  4901     0772  3400               	retlw	0
  4902     0773  34AA               	retlw	low _EUSART_Read
  4903     0774  340F               	retlw	high _EUSART_Read
  4904     0775  3434               	retlw	low _EUSART_Write
  4905     0776  340D               	retlw	high _EUSART_Write
  4906     0777  3446               	retlw	low _EUSART_IsRxReady
  4907     0778  340D               	retlw	high _EUSART_IsRxReady
  4908     0779  3423               	retlw	low _EUSART_IsTxReady
  4909     077A  340E               	retlw	high _EUSART_IsTxReady
  4910     077B  3400               	retlw	0
  4911     077C  3400               	retlw	0
  4912     077D  3400               	retlw	0
  4913     077E  3400               	retlw	0
  4914     077F  3400               	retlw	0
  4915     0780  3400               	retlw	0
  4916     0781  3400               	retlw	0
  4917     0782  3400               	retlw	0
  4918     0783  3400               	retlw	0
  4919     0784  3400               	retlw	0
  4920     0785  3400               	retlw	0
  4921     0786  3400               	retlw	0
  4922     0787  3400               	retlw	0
  4923     0788  3400               	retlw	0
  4924     0789  3400               	retlw	0
  4925     078A  3400               	retlw	0
  4926     078B  3400               	retlw	0
  4927     078C  3400               	retlw	0
  4928     078D  3400               	retlw	0
  4929     078E  3400               	retlw	0
  4930     078F  3400               	retlw	0
  4931     0790  3400               	retlw	0
  4932     0791  3400               	retlw	0
  4933     0792  3400               	retlw	0
  4934     0793  3400               	retlw	0
  4935     0794  3400               	retlw	0
  4936     0795  3400               	retlw	0
  4937     0796  3400               	retlw	0
  4938     0797  34CE               	retlw	low _EUSART_FramingErrorCallbackRegister
  4939     0798  340D               	retlw	high _EUSART_FramingErrorCallbackRegister
  4940     0799  34FC               	retlw	low _EUSART_OverrunErrorCallbackRegister
  4941     079A  340D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  4942     079B  3400               	retlw	0
  4943     079C  3400               	retlw	0
  4944     079D  3400               	retlw	0
  4945     079E  3400               	retlw	0
  4946     079F                     __end_of_UART:
  4947                           
  4948                           	psect	stringtext2
  4949     07FB                     __pstringtext2:
  4950     07FB                     _I2C_Host:
  4951     07FB  348B               	retlw	low _I2C1_Initialize
  4952     07FC  340E               	retlw	high _I2C1_Initialize
  4953     07FD  3400               	retlw	0
  4954     07FE  3400               	retlw	0
  4955     07FF  34D6               	retlw	low _I2C1_Write
  4956     0800  340E               	retlw	high _I2C1_Write
  4957     0801  34F4               	retlw	low _I2C1_Read
  4958     0802  340E               	retlw	high _I2C1_Read
  4959     0803  3400               	retlw	0
  4960     0804  3400               	retlw	0
  4961     0805  3400               	retlw	0
  4962     0806  3400               	retlw	0
  4963     0807  3400               	retlw	0
  4964     0808  3400               	retlw	0
  4965     0809  3441               	retlw	low _I2C1_IsBusy
  4966     080A  340E               	retlw	high _I2C1_IsBusy
  4967     080B  3408               	retlw	low _I2C1_CallbackRegister
  4968     080C  340E               	retlw	high _I2C1_CallbackRegister
  4969     080D  3400               	retlw	0
  4970     080E  3400               	retlw	0
  4971     080F                     __end_of_I2C_Host:
  4972                           
  4973                           	psect	stringtext3
  4974     080F                     __pstringtext3:
  4975     080F                     _i2c1_eventTable:
  4976     080F  3424               	retlw	low _I2C1_EVENT_IDLE
  4977     0810  340D               	retlw	high _I2C1_EVENT_IDLE
  4978     0811  34AB               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  4979     0812  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  4980     0813  347A               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  4981     0814  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  4982     0815  34D4               	retlw	low _I2C1_EVENT_TX
  4983     0816  340F               	retlw	high _I2C1_EVENT_TX
  4984     0817  3463               	retlw	low _I2C1_EVENT_RX
  4985     0818  3406               	retlw	high _I2C1_EVENT_RX
  4986     0819  3450               	retlw	low _I2C1_EVENT_NACK
  4987     081A  340D               	retlw	high _I2C1_EVENT_NACK
  4988     081B  3456               	retlw	low _I2C1_EVENT_ERROR
  4989     081C  340D               	retlw	high _I2C1_EVENT_ERROR
  4990     081D  34B3               	retlw	low _I2C1_EVENT_STOP
  4991     081E  340D               	retlw	high _I2C1_EVENT_STOP
  4992     081F  3481               	retlw	low _I2C1_EVENT_RESET
  4993     0820  340D               	retlw	high _I2C1_EVENT_RESET
  4994     0821                     __end_of_i2c1_eventTable:
  4995                           
  4996                           	psect	nvBANK1
  4997     00CD                     __pnvBANK1:
  4998     00CD                     _ADC_InterruptHandler:
  4999     00CD                     	ds	2
  5000     000B                     _INTCONbits	set	11
  5001     0011                     _PIR2bits	set	17
  5002     0010                     _PIR1bits	set	16
  5003     0095                     _OPTION_REGbits	set	149
  5004     008E                     _TRISC	set	142
  5005     008D                     _TRISB	set	141
  5006     008C                     _TRISA	set	140
  5007     0098                     _OSCTUNE	set	152
  5008     0099                     _OSCCON	set	153
  5009     0091                     _PIE2bits	set	145
  5010     009D                     _ADCON0bits	set	157
  5011     0090                     _PIE1bits	set	144
  5012     009D                     _ADCON0	set	157
  5013     009F                     _ADCON2	set	159
  5014     009C                     _ADRESH	set	156
  5015     009B                     _ADRESL	set	155
  5016     009E                     _ADCON1	set	158
  5017     010E                     _LATCbits	set	270
  5018     010E                     _LATC	set	270
  5019     010D                     _LATB	set	269
  5020     010C                     _LATA	set	268
  5021     0116                     _BORCON	set	278
  5022     019A                     _TX1REG	set	410
  5023     0199                     _RC1REG	set	409
  5024     019F                     _BAUD1CONbits	set	415
  5025     019E                     _TX1STAbits	set	414
  5026     019D                     _RC1STAbits	set	413
  5027     019C                     _SPBRGH	set	412
  5028     019B                     _SPBRGL	set	411
  5029     019E                     _TX1STA	set	414
  5030     019D                     _RC1STA	set	413
  5031     019F                     _BAUD1CON	set	415
  5032     018E                     _ANSELC	set	398
  5033     018D                     _ANSELB	set	397
  5034     018C                     _ANSELA	set	396
  5035     020E                     _WPUC	set	526
  5036     020D                     _WPUB	set	525
  5037     020C                     _WPUA	set	524
  5038     0216                     _SSP1CON2bits	set	534
  5039     0211                     _SSP1BUF	set	529
  5040     0214                     _SSP1STATbits	set	532
  5041     0215                     _SSP1CON1bits	set	533
  5042     0212                     _SSP1ADD	set	530
  5043     0217                     _SSP1CON3	set	535
  5044     0216                     _SSP1CON2	set	534
  5045     0215                     _SSP1CON1	set	533
  5046     0214                     _SSP1STAT	set	532
  5047     028E                     _ODCONC	set	654
  5048     028D                     _ODCONB	set	653
  5049     028C                     _ODCONA	set	652
  5050     030E                     _SLRCONC	set	782
  5051     030D                     _SLRCONB	set	781
  5052     030C                     _SLRCONA	set	780
  5053     0399                     _IOCCF	set	921
  5054     0398                     _IOCCN	set	920
  5055     0397                     _IOCCP	set	919
  5056     0396                     _IOCBF	set	918
  5057     0395                     _IOCBN	set	917
  5058     0394                     _IOCBP	set	916
  5059     0393                     _IOCAF	set	915
  5060     0392                     _IOCAN	set	914
  5061     0391                     _IOCAP	set	913
  5062     038E                     _INLVLC	set	910
  5063     038D                     _INLVLB	set	909
  5064     038C                     _INLVLA	set	908
  5065     0E21                     _SSPDATPPS	set	3617
  5066     0E20                     _SSPCLKPPS	set	3616
  5067     0E24                     _RXPPS	set	3620
  5068     0E9D                     _RB5PPS	set	3741
  5069     0E9E                     _RB6PPS	set	3742
  5070     0EA2                     _RC2PPS	set	3746
  5071                           
  5072                           	psect	cinit
  5073     0038                     start_initialization:	
  5074                           ; #config settings
  5075                           
  5076     0038                     __initialization:
  5077                           
  5078                           ; Initialize objects allocated to BANK0
  5079     0038  30A4               	movlw	low __pidataBANK0
  5080     0039  0084               	movwf	4
  5081     003A  308D               	movlw	(high __pidataBANK0)| (0+128)
  5082     003B  0085               	movwf	5
  5083     003C  3066               	movlw	low __pdataBANK0
  5084     003D  0086               	movwf	6
  5085     003E  3000               	movlw	high __pdataBANK0
  5086     003F  0087               	movwf	7
  5087     0040  3007               	movlw	7
  5088     0041  318D  2574  3180   	fcall	init_ram
  5089                           
  5090                           ; Initialize objects allocated to BANK1
  5091     0044  30A1               	movlw	low __pidataBANK1
  5092     0045  0084               	movwf	4
  5093     0046  308E               	movlw	(high __pidataBANK1)| (0+128)
  5094     0047  0085               	movwf	5
  5095     0048  30A0               	movlw	low __pdataBANK1
  5096     0049  0086               	movwf	6
  5097     004A  3000               	movlw	high __pdataBANK1
  5098     004B  0087               	movwf	7
  5099     004C  3018               	movlw	24
  5100     004D  318D  2574  3180   	fcall	init_ram
  5101                           
  5102                           ; Clear objects allocated to COMMON
  5103     0050  01F6               	clrf	__pbssCOMMON& (0+127)
  5104     0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5105     0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5106     0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5107                           
  5108                           ; Clear objects allocated to BANK0
  5109     0054  3052               	movlw	low __pbssBANK0
  5110     0055  0084               	movwf	4
  5111     0056  3000               	movlw	high __pbssBANK0
  5112     0057  0085               	movwf	5
  5113     0058  3014               	movlw	20
  5114     0059  318D  256E  3180   	fcall	clear_ram0
  5115                           
  5116                           ; Clear objects allocated to BANK1
  5117     005C  30B8               	movlw	low __pbssBANK1
  5118     005D  0084               	movwf	4
  5119     005E  3000               	movlw	high __pbssBANK1
  5120     005F  0085               	movwf	5
  5121     0060  3015               	movlw	21
  5122     0061  318D  256E  3180   	fcall	clear_ram0
  5123     0064                     end_of_initialization:	
  5124                           ;End of C runtime variable initialization code
  5125                           
  5126     0064                     __end_of__initialization:
  5127     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5128     0065  0020               	movlb	0
  5129     0066  318F  2F39         	ljmp	_main	;jump to C main() function
  5130                           
  5131                           	psect	bssCOMMON
  5132     0076                     __pbssCOMMON:
  5133     0076                     _EUSART_FramingErrorHandler:
  5134     0076                     	ds	2
  5135     0078                     _INT_InterruptHandler:
  5136     0078                     	ds	2
  5137                           
  5138                           	psect	bssBANK0
  5139     0052                     __pbssBANK0:
  5140     0052                     _i2c1Status:
  5141     0052                     	ds	12
  5142     005E                     _parser:
  5143     005E                     	ds	8
  5144                           
  5145                           	psect	dataBANK0
  5146     0066                     __pdataBANK0:
  5147     0066                     _kaps:
  5148     0066                     	ds	7
  5149                           
  5150                           	psect	bssBANK1
  5151     00B8                     __pbssBANK1:
  5152     00B8                     KAPS_getPos@F9701:
  5153     00B8                     	ds	4
  5154     00BC                     _EUSART_OverrunErrorHandler:
  5155     00BC                     	ds	2
  5156     00BE                     _eusartRxLastError:
  5157     00BE                     	ds	2
  5158     00C0                     _I2C1_Callback:
  5159     00C0                     	ds	2
  5160     00C2                     ProcessMsg@payload:
  5161     00C2                     	ds	6
  5162     00C8                     _parserDataBuffer:
  5163     00C8                     	ds	5
  5164                           
  5165                           	psect	dataBANK1
  5166     00A0                     __pdataBANK1:
  5167     00A0                     _sspas:
  5168     00A0                     	ds	24
  5169                           
  5170                           	psect	inittext
  5171     0D74                     init_ram:
  5172     0D74  00FE               	movwf	btemp
  5173     0D75                     initloop:
  5174     0D75  0012               	moviw fsr0++
  5175     0D76  001E               	movwi fsr1++
  5176     0D77  0BFE               	decfsz	btemp,f
  5177     0D78  2D75               	goto	initloop
  5178     0D79  3400               	retlw	0
  5179                           
  5180                           	psect	clrtext
  5181     0D6E                     clear_ram0:	
  5182                           ;	Called with FSR0 containing the base address, and
  5183                           ;	WREG with the size to clear
  5184                           
  5185     0D6E  0064               	clrwdt	;clear the watchdog before getting into this loop
  5186     0D6F                     clrloop0:
  5187     0D6F  0180               	clrf	0	;clear RAM location pointed to by FSR
  5188     0D70  3101               	addfsr 0,1
  5189     0D71  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5190     0D72  2D6F               	goto	clrloop0	;have we reached the end yet?
  5191     0D73  3400               	retlw	0	;all done for this memory range, return
  5192                           
  5193                           	psect	cstackCOMMON
  5194     0070                     __pcstackCOMMON:
  5195     0070                     ?_ADC_DefaultInterruptHandler:
  5196     0070                     ??_ADC_DefaultInterruptHandler:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199     0070                     ?_I2C1_Initialize:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202     0070                     ?_I2C1_IsBusy:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205     0070                     ?_I2C1_EVENT_IDLE:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208     0070                     ??_I2C1_EVENT_IDLE:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220     0070                     ?_I2C1_EVENT_TX:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223     0070                     ?_I2C1_EVENT_RX:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226     0070                     ??_I2C1_EVENT_RX:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229     0070                     ?_I2C1_EVENT_NACK:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232     0070                     ??_I2C1_EVENT_NACK:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235     0070                     ?_I2C1_EVENT_ERROR:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238     0070                     ??_I2C1_EVENT_ERROR:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241     0070                     ?_I2C1_EVENT_STOP:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244     0070                     ??_I2C1_EVENT_STOP:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247     0070                     ?_I2C1_EVENT_RESET:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250     0070                     ??_I2C1_EVENT_RESET:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253     0070                     ?_I2C1_InterruptsEnable:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256     0070                     ?_I2C1_DefaultCallback:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259     0070                     ??_I2C1_DefaultCallback:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262     0070                     ?_I2C1_WriteStart:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265     0070                     ?_I2C1_ReadStart:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268     0070                     ?_I2C1_EventHandler:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271     0070                     ?_I2C1_ErrorEventHandler:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274     0070                     ?_I2C1_StartSend:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277     0070                     ?_I2C1_InterruptClear:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280     0070                     ??_I2C1_InterruptClear:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283     0070                     ?_I2C1_ErrorInterruptClear:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286     0070                     ??_I2C1_ErrorInterruptClear:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289     0070                     ?_I2C1_StatusFlagsClear:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292     0070                     ??_I2C1_StatusFlagsClear:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295     0070                     ?_I2C1_IsAddr:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298     0070                     ??_I2C1_IsAddr:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301     0070                     ?_I2C1_IsNack:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304     0070                     ??_I2C1_IsNack:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307     0070                     ?_I2C1_IsData:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310     0070                     ??_I2C1_IsData:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313     0070                     ?_I2C1_DataTransmit:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316     0070                     ??_I2C1_DataTransmit:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319     0070                     ?_I2C1_RestartEnable:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322     0070                     ??_I2C1_RestartEnable:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325     0070                     ?_I2C1_IsRxBufFull:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328     0070                     ??_I2C1_IsRxBufFull:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331     0070                     ?_I2C1_DataReceive:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334     0070                     ??_I2C1_DataReceive:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337     0070                     ?_I2C1_AckSend:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340     0070                     ??_I2C1_AckSend:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343     0070                     ?_I2C1_RestartDisable:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346     0070                     ??_I2C1_RestartDisable:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349     0070                     ?_I2C1_NackSend:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352     0070                     ??_I2C1_NackSend:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355     0070                     ?_I2C1_ReceiveEnable:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358     0070                     ??_I2C1_ReceiveEnable:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361     0070                     ?_I2C1_StopSend:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364     0070                     ??_I2C1_StopSend:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367     0070                     ?_I2C1_BusReset:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370     0070                     ??_I2C1_BusReset:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373     0070                     ?_EUSART_Initialize:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376     0070                     ?_EUSART_Read:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379     0070                     ?_EUSART_IsRxReady:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382     0070                     ?_EUSART_IsTxReady:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391     0070                     ?_SSPA_getTemp:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394     0070                     ?_SSPA_getPOut:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397     0070                     ?_KAPS_getStatus:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400     0070                     ?_KAPS_getPos:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403     0070                     ?_KAPS_getIndex:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406     0070                     ?_KAPS_GoToIdx:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409     0070                     ?_KAPS_setRelPos:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412     0070                     ?_Parse:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415     0070                     ?_ADC_Initialize:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418     0070                     ?_ADC_SelectChannel:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421     0070                     ?_ADC_StartConversion:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424     0070                     ?_ADC_IsConversionDone:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427     0070                     ?_ADC_ISR:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430     0070                     ??_ADC_ISR:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433     0070                     ?_I2C1_ISR:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436     0070                     ?_I2C1_ERROR_ISR:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439     0070                     ?_I2C1_Close:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442     0070                     ??_I2C1_Close:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445     0070                     ?_CLOCK_Initialize:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448     0070                     ?_PIN_MANAGER_Initialize:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451     0070                     ?_INTERRUPT_Initialize:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454     0070                     ?_INTERRUPT_InterruptManager:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457     0070                     ?_SYSTEM_Initialize:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460     0070                     ?_SendSync:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463     0070                     ?_SendNack:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466     0070                     ?_main:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469     0070                     I2C1_EVENT_NACK@retEventState:	
  5470                           ; 2 bytes @ 0x0
  5471                           
  5472     0070                     I2C1_EVENT_ERROR@retEventState:	
  5473                           ; 1 bytes @ 0x0
  5474                           
  5475     0070                     I2C1_DataTransmit@data:	
  5476                           ; 1 bytes @ 0x0
  5477                           
  5478                           
  5479                           ; 1 bytes @ 0x0
  5480     0070                     	ds	1
  5481     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  5482     0071                     ??_I2C1_EVENT_TX:	
  5483                           ; 1 bytes @ 0x1
  5484                           
  5485     0071                     I2C1_EVENT_TX@retEventState:	
  5486                           ; 1 bytes @ 0x1
  5487                           
  5488     0071                     I2C1_EVENT_RX@retEventState:	
  5489                           ; 1 bytes @ 0x1
  5490                           
  5491                           
  5492                           ; 1 bytes @ 0x1
  5493     0071                     	ds	1
  5494     0072                     ??_I2C1_EventHandler:
  5495     0072                     ??_I2C1_ErrorEventHandler:	
  5496                           ; 1 bytes @ 0x2
  5497                           
  5498                           
  5499                           ; 1 bytes @ 0x2
  5500     0072                     	ds	2
  5501     0074                     ?_ADC_SetInterruptHandler:
  5502     0074                     ??_I2C1_IsBusy:	
  5503                           ; 1 bytes @ 0x4
  5504                           
  5505     0074                     ?_I2C1_CallbackRegister:	
  5506                           ; 1 bytes @ 0x4
  5507                           
  5508     0074                     ??_I2C1_InterruptsEnable:	
  5509                           ; 1 bytes @ 0x4
  5510                           
  5511     0074                     ??_I2C1_WriteStart:	
  5512                           ; 1 bytes @ 0x4
  5513                           
  5514     0074                     ??_I2C1_ReadStart:	
  5515                           ; 1 bytes @ 0x4
  5516                           
  5517     0074                     ??_I2C1_StartSend:	
  5518                           ; 1 bytes @ 0x4
  5519                           
  5520     0074                     ?_INT_SetInterruptHandler:	
  5521                           ; 1 bytes @ 0x4
  5522                           
  5523     0074                     ??_EUSART_Read:	
  5524                           ; 1 bytes @ 0x4
  5525                           
  5526     0074                     ?_EUSART_Write:	
  5527                           ; 1 bytes @ 0x4
  5528                           
  5529     0074                     ??_EUSART_IsRxReady:	
  5530                           ; 1 bytes @ 0x4
  5531                           
  5532     0074                     ??_EUSART_IsTxReady:	
  5533                           ; 1 bytes @ 0x4
  5534                           
  5535     0074                     ?_EUSART_FramingErrorCallbackRegister:	
  5536                           ; 1 bytes @ 0x4
  5537                           
  5538     0074                     ?_EUSART_OverrunErrorCallbackRegister:	
  5539                           ; 1 bytes @ 0x4
  5540                           
  5541     0074                     ??_EUSART_DefaultFramingErrorCallback:	
  5542                           ; 1 bytes @ 0x4
  5543                           
  5544     0074                     ??_EUSART_DefaultOverrunErrorCallback:	
  5545                           ; 1 bytes @ 0x4
  5546                           
  5547     0074                     ??_unpackWord:	
  5548                           ; 1 bytes @ 0x4
  5549                           
  5550     0074                     ?_SSPA_setMute:	
  5551                           ; 1 bytes @ 0x4
  5552                           
  5553     0074                     ??_ADC_SelectChannel:	
  5554                           ; 1 bytes @ 0x4
  5555                           
  5556     0074                     ??_ADC_StartConversion:	
  5557                           ; 1 bytes @ 0x4
  5558                           
  5559     0074                     ??_ADC_IsConversionDone:	
  5560                           ; 1 bytes @ 0x4
  5561                           
  5562     0074                     ??_I2C1_ISR:	
  5563                           ; 1 bytes @ 0x4
  5564                           
  5565     0074                     ??_I2C1_ERROR_ISR:	
  5566                           ; 1 bytes @ 0x4
  5567                           
  5568     0074                     ??_CLOCK_Initialize:	
  5569                           ; 1 bytes @ 0x4
  5570                           
  5571     0074                     ??_PIN_MANAGER_Initialize:	
  5572                           ; 1 bytes @ 0x4
  5573                           
  5574     0074                     ??_INTERRUPT_InterruptManager:	
  5575                           ; 1 bytes @ 0x4
  5576                           
  5577     0074                     ??___lmul:	
  5578                           ; 1 bytes @ 0x4
  5579                           
  5580     0074                     ??___aldiv:	
  5581                           ; 1 bytes @ 0x4
  5582                           
  5583     0074                     ?_ADC_GetConversionResult:	
  5584                           ; 1 bytes @ 0x4
  5585                           
  5586     0074                     _I2C1_IsBusy$646:	
  5587                           ; 2 bytes @ 0x4
  5588                           
  5589     0074                     _EUSART_IsTxReady$1324:	
  5590                           ; 1 bytes @ 0x4
  5591                           
  5592     0074                     EUSART_Write@txData:	
  5593                           ; 1 bytes @ 0x4
  5594                           
  5595     0074                     SSPA_setMute@mute:	
  5596                           ; 1 bytes @ 0x4
  5597                           
  5598     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  5599                           ; 1 bytes @ 0x4
  5600                           
  5601     0074                     I2C1_CallbackRegister@callbackHandler:	
  5602                           ; 2 bytes @ 0x4
  5603                           
  5604     0074                     INT_SetInterruptHandler@InterruptHandler:	
  5605                           ; 2 bytes @ 0x4
  5606                           
  5607     0074                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  5608                           ; 2 bytes @ 0x4
  5609                           
  5610     0074                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  5611                           ; 2 bytes @ 0x4
  5612                           
  5613                           
  5614                           ; 2 bytes @ 0x4
  5615     0074                     	ds	1
  5616     0075                     ??_I2C1_Write:
  5617     0075                     ??_I2C1_Read:	
  5618                           ; 1 bytes @ 0x5
  5619                           
  5620     0075                     ??_EUSART_Write:	
  5621                           ; 1 bytes @ 0x5
  5622                           
  5623     0075                     ??_SendSync:	
  5624                           ; 1 bytes @ 0x5
  5625                           
  5626     0075                     ??_ADC2Amp:	
  5627                           ; 1 bytes @ 0x5
  5628                           
  5629     0075                     ??_ADC2dBm:	
  5630                           ; 1 bytes @ 0x5
  5631                           
  5632     0075                     ADC_SelectChannel@channel:	
  5633                           ; 1 bytes @ 0x5
  5634                           
  5635     0075                     I2C1_Read@retStatus:	
  5636                           ; 1 bytes @ 0x5
  5637                           
  5638     0075                     SendSync@data:	
  5639                           ; 1 bytes @ 0x5
  5640                           
  5641     0075                     SSPA_setMute@band:	
  5642                           ; 1 bytes @ 0x5
  5643                           
  5644                           
  5645                           ; 1 bytes @ 0x5
  5646     0075                     	ds	1
  5647     0076                     ??_ADC_SetInterruptHandler:
  5648     0076                     ??_I2C1_Initialize:	
  5649                           ; 1 bytes @ 0x6
  5650                           
  5651     0076                     ??_I2C1_CallbackRegister:	
  5652                           ; 1 bytes @ 0x6
  5653                           
  5654     0076                     ??_INT_SetInterruptHandler:	
  5655                           ; 1 bytes @ 0x6
  5656                           
  5657     0076                     ??_EUSART_Initialize:	
  5658                           ; 1 bytes @ 0x6
  5659                           
  5660     0076                     ??_EUSART_FramingErrorCallbackRegister:	
  5661                           ; 1 bytes @ 0x6
  5662                           
  5663     0076                     ??_EUSART_OverrunErrorCallbackRegister:	
  5664                           ; 1 bytes @ 0x6
  5665                           
  5666     0076                     ??_ADC_Initialize:	
  5667                           ; 1 bytes @ 0x6
  5668                           
  5669     0076                     ??_ADC_GetConversionResult:	
  5670                           ; 1 bytes @ 0x6
  5671                           
  5672     0076                     ??_INTERRUPT_Initialize:	
  5673                           ; 1 bytes @ 0x6
  5674                           
  5675     0076                     ??_SYSTEM_Initialize:	
  5676                           ; 1 bytes @ 0x6
  5677                           
  5678     0076                     ??_main:	
  5679                           ; 1 bytes @ 0x6
  5680                           
  5681     0076                     ??_SendNack:	
  5682                           ; 1 bytes @ 0x6
  5683                           
  5684                           
  5685                           	psect	cstackBANK0
  5686     0020                     __pcstackBANK0:	
  5687                           ; 1 bytes @ 0x6
  5688                           
  5689     0020                     ?_I2C1_Write:
  5690     0020                     ?_I2C1_Read:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693     0020                     ?_SendMsg:	
  5694                           ; 1 bytes @ 0x0
  5695                           
  5696     0020                     ?_unpackWord:	
  5697                           ; 1 bytes @ 0x0
  5698                           
  5699     0020                     ?_unpackLong:	
  5700                           ; 1 bytes @ 0x0
  5701                           
  5702     0020                     ??_SSPA_setMute:	
  5703                           ; 1 bytes @ 0x0
  5704                           
  5705     0020                     ?_getADCValue:	
  5706                           ; 1 bytes @ 0x0
  5707                           
  5708     0020                     ?_packLong:	
  5709                           ; 2 bytes @ 0x0
  5710                           
  5711     0020                     ?___lmul:	
  5712                           ; 4 bytes @ 0x0
  5713                           
  5714     0020                     SendMsg@data:	
  5715                           ; 4 bytes @ 0x0
  5716                           
  5717     0020                     I2C1_Write@address:	
  5718                           ; 1 bytes @ 0x0
  5719                           
  5720     0020                     I2C1_Read@address:	
  5721                           ; 2 bytes @ 0x0
  5722                           
  5723     0020                     unpackWord@value:	
  5724                           ; 2 bytes @ 0x0
  5725                           
  5726     0020                     unpackLong@value:	
  5727                           ; 2 bytes @ 0x0
  5728                           
  5729     0020                     ___lmul@multiplier:	
  5730                           ; 4 bytes @ 0x0
  5731                           
  5732                           
  5733                           ; 4 bytes @ 0x0
  5734     0020                     	ds	1
  5735     0021                     SendMsg@data_len:
  5736                           
  5737                           ; 1 bytes @ 0x1
  5738     0021                     	ds	1
  5739     0022                     ??_SendMsg:
  5740     0022                     ??_getADCValue:	
  5741                           ; 1 bytes @ 0x2
  5742                           
  5743     0022                     I2C1_Write@data:	
  5744                           ; 1 bytes @ 0x2
  5745                           
  5746     0022                     I2C1_Read@data:	
  5747                           ; 1 bytes @ 0x2
  5748                           
  5749     0022                     unpackWord@data:	
  5750                           ; 1 bytes @ 0x2
  5751                           
  5752                           
  5753                           ; 1 bytes @ 0x2
  5754     0022                     	ds	1
  5755     0023                     SendMsg@sum:
  5756     0023                     I2C1_Write@dataLength:	
  5757                           ; 1 bytes @ 0x3
  5758                           
  5759     0023                     I2C1_Read@dataLength:	
  5760                           ; 2 bytes @ 0x3
  5761                           
  5762                           
  5763                           ; 2 bytes @ 0x3
  5764     0023                     	ds	1
  5765     0024                     ??_packLong:
  5766     0024                     unpackLong@data:	
  5767                           ; 1 bytes @ 0x4
  5768                           
  5769     0024                     SendMsg@msg_id:	
  5770                           ; 1 bytes @ 0x4
  5771                           
  5772     0024                     getADCValue@channel:	
  5773                           ; 1 bytes @ 0x4
  5774                           
  5775     0024                     ___lmul@multiplicand:	
  5776                           ; 1 bytes @ 0x4
  5777                           
  5778                           
  5779                           ; 4 bytes @ 0x4
  5780     0024                     	ds	1
  5781     0025                     ??_unpackLong:
  5782     0025                     ??_KAPS_getStatus:	
  5783                           ; 1 bytes @ 0x5
  5784                           
  5785     0025                     ??_KAPS_getIndex:	
  5786                           ; 1 bytes @ 0x5
  5787                           
  5788     0025                     ??_KAPS_GoToIdx:	
  5789                           ; 1 bytes @ 0x5
  5790                           
  5791     0025                     ??_KAPS_setRelPos:	
  5792                           ; 1 bytes @ 0x5
  5793                           
  5794     0025                     SendNack@error:	
  5795                           ; 1 bytes @ 0x5
  5796                           
  5797     0025                     getADCValue@sum:	
  5798                           ; 1 bytes @ 0x5
  5799                           
  5800                           
  5801                           ; 2 bytes @ 0x5
  5802     0025                     	ds	1
  5803     0026                     ??_Parse:
  5804                           
  5805                           ; 1 bytes @ 0x6
  5806     0026                     	ds	1
  5807     0027                     KAPS_GoToIdx@idx:
  5808     0027                     KAPS_setRelPos@offset:	
  5809                           ; 1 bytes @ 0x7
  5810                           
  5811     0027                     KAPS_getStatus@reg:	
  5812                           ; 1 bytes @ 0x7
  5813                           
  5814     0027                     KAPS_getIndex@reg:	
  5815                           ; 1 bytes @ 0x7
  5816                           
  5817     0027                     getADCValue@i:	
  5818                           ; 1 bytes @ 0x7
  5819                           
  5820                           
  5821                           ; 1 bytes @ 0x7
  5822     0027                     	ds	1
  5823     0028                     KAPS_GoToIdx@reg:
  5824     0028                     KAPS_setRelPos@reg:	
  5825                           ; 1 bytes @ 0x8
  5826                           
  5827     0028                     KAPS_getStatus@data:	
  5828                           ; 1 bytes @ 0x8
  5829                           
  5830     0028                     KAPS_getIndex@data:	
  5831                           ; 1 bytes @ 0x8
  5832                           
  5833     0028                     Parse@data:	
  5834                           ; 1 bytes @ 0x8
  5835                           
  5836     0028                     packLong@result:	
  5837                           ; 1 bytes @ 0x8
  5838                           
  5839     0028                     ___lmul@product:	
  5840                           ; 4 bytes @ 0x8
  5841                           
  5842                           
  5843                           ; 4 bytes @ 0x8
  5844     0028                     	ds	4
  5845     002C                     ?___aldiv:
  5846     002C                     packLong@data:	
  5847                           ; 4 bytes @ 0xC
  5848                           
  5849     002C                     ___aldiv@divisor:	
  5850                           ; 1 bytes @ 0xC
  5851                           
  5852                           
  5853                           ; 4 bytes @ 0xC
  5854     002C                     	ds	1
  5855     002D                     ??_KAPS_getPos:
  5856     002D                     ?_KAPS_setAbsPos:	
  5857                           ; 1 bytes @ 0xD
  5858                           
  5859     002D                     ?_KAPS_StorePos:	
  5860                           ; 1 bytes @ 0xD
  5861                           
  5862     002D                     KAPS_setAbsPos@pos:	
  5863                           ; 1 bytes @ 0xD
  5864                           
  5865     002D                     KAPS_StorePos@pos:	
  5866                           ; 4 bytes @ 0xD
  5867                           
  5868                           
  5869                           ; 4 bytes @ 0xD
  5870     002D                     	ds	2
  5871     002F                     KAPS_getPos@data:
  5872                           
  5873                           ; 4 bytes @ 0xF
  5874     002F                     	ds	1
  5875     0030                     ___aldiv@dividend:
  5876                           
  5877                           ; 4 bytes @ 0x10
  5878     0030                     	ds	1
  5879     0031                     ??_KAPS_setAbsPos:
  5880     0031                     ??_KAPS_StorePos:	
  5881                           ; 1 bytes @ 0x11
  5882                           
  5883                           
  5884                           ; 1 bytes @ 0x11
  5885     0031                     	ds	2
  5886     0033                     KAPS_getPos@reg:
  5887     0033                     KAPS_setAbsPos@data:	
  5888                           ; 1 bytes @ 0x13
  5889                           
  5890     0033                     KAPS_StorePos@data:	
  5891                           ; 4 bytes @ 0x13
  5892                           
  5893                           
  5894                           ; 5 bytes @ 0x13
  5895     0033                     	ds	1
  5896     0034                     ___aldiv@counter:
  5897                           
  5898                           ; 1 bytes @ 0x14
  5899     0034                     	ds	1
  5900     0035                     ___aldiv@sign:
  5901                           
  5902                           ; 1 bytes @ 0x15
  5903     0035                     	ds	1
  5904     0036                     ___aldiv@quotient:
  5905                           
  5906                           ; 4 bytes @ 0x16
  5907     0036                     	ds	1
  5908     0037                     KAPS_setAbsPos@reg:
  5909                           
  5910                           ; 1 bytes @ 0x17
  5911     0037                     	ds	1
  5912     0038                     KAPS_StorePos@reg:
  5913                           
  5914                           ; 1 bytes @ 0x18
  5915     0038                     	ds	1
  5916     0039                     KAPS_StorePos@idx:
  5917                           
  5918                           ; 1 bytes @ 0x19
  5919     0039                     	ds	1
  5920     003A                     ?_ADC2dBm:
  5921     003A                     ?_ADC2Celsius:	
  5922                           ; 1 bytes @ 0x1A
  5923                           
  5924     003A                     ?_ADC2Amp:	
  5925                           ; 2 bytes @ 0x1A
  5926                           
  5927     003A                     ADC2Celsius@v:	
  5928                           ; 4 bytes @ 0x1A
  5929                           
  5930     003A                     ADC2Amp@v:	
  5931                           ; 2 bytes @ 0x1A
  5932                           
  5933     003A                     ADC2dBm@v:	
  5934                           ; 2 bytes @ 0x1A
  5935                           
  5936                           
  5937                           ; 2 bytes @ 0x1A
  5938     003A                     	ds	2
  5939     003C                     ??_ADC2Celsius:
  5940     003C                     ADC2dBm@value:	
  5941                           ; 1 bytes @ 0x1C
  5942                           
  5943                           
  5944                           ; 4 bytes @ 0x1C
  5945     003C                     	ds	2
  5946     003E                     ADC2Amp@value:
  5947                           
  5948                           ; 4 bytes @ 0x1E
  5949     003E                     	ds	2
  5950     0040                     ADC2Celsius@value:
  5951     0040                     ADC2dBm@result:	
  5952                           ; 4 bytes @ 0x20
  5953                           
  5954                           
  5955                           ; 4 bytes @ 0x20
  5956     0040                     	ds	2
  5957     0042                     ADC2Amp@result:
  5958                           
  5959                           ; 4 bytes @ 0x22
  5960     0042                     	ds	2
  5961     0044                     ADC2Celsius@result:
  5962                           
  5963                           ; 4 bytes @ 0x24
  5964     0044                     	ds	2
  5965     0046                     ??_SSPA_getPOut:
  5966                           
  5967                           ; 1 bytes @ 0x26
  5968     0046                     	ds	2
  5969     0048                     ??_SSPA_getTemp:
  5970     0048                     SSPA_getPOut@adc_value:	
  5971                           ; 1 bytes @ 0x28
  5972                           
  5973                           
  5974                           ; 2 bytes @ 0x28
  5975     0048                     	ds	2
  5976     004A                     SSPA_getPOut@band:
  5977     004A                     SSPA_getTemp@adc_value:	
  5978                           ; 1 bytes @ 0x2A
  5979                           
  5980                           
  5981                           ; 2 bytes @ 0x2A
  5982     004A                     	ds	2
  5983     004C                     SSPA_getTemp@channel:
  5984                           
  5985                           ; 1 bytes @ 0x2C
  5986     004C                     	ds	1
  5987     004D                     SSPA_getTemp@band:
  5988                           
  5989                           ; 1 bytes @ 0x2D
  5990     004D                     	ds	1
  5991     004E                     ?_ProcessMsg:
  5992     004E                     ProcessMsg@data:	
  5993                           ; 1 bytes @ 0x2E
  5994                           
  5995                           
  5996                           ; 1 bytes @ 0x2E
  5997     004E                     	ds	1
  5998     004F                     ??_ProcessMsg:
  5999                           
  6000                           ; 1 bytes @ 0x2F
  6001     004F                     	ds	1
  6002     0050                     ProcessMsg@msg_id:
  6003                           
  6004                           ; 1 bytes @ 0x30
  6005     0050                     	ds	1
  6006     0051                     main@data:
  6007                           
  6008                           ; 1 bytes @ 0x31
  6009     0051                     	ds	1
  6010                           
  6011                           	psect	maintext
  6012     0F39                     __pmaintext:	
  6013 ;;
  6014 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6015 ;;
  6016 ;; *************** function _main *****************
  6017 ;; Defined at:
  6018 ;;		line 115 in file "main.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  data            1   49[BANK0 ] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  2  695[None  ] int 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : B1F/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6032 ;;      Params:         0       0       0       0       0       0       0       0
  6033 ;;      Locals:         0       1       0       0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0
  6035 ;;      Totals:         0       1       0       0       0       0       0       0
  6036 ;;Total ram usage:        1 bytes
  6037 ;; Hardware stack levels required when called: 12
  6038 ;; This function calls:
  6039 ;;		_EUSART_IsRxReady
  6040 ;;		_EUSART_Read
  6041 ;;		_Parse
  6042 ;;		_ProcessMsg
  6043 ;;		_SYSTEM_Initialize
  6044 ;; This function is called by:
  6045 ;;		Startup code after reset
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049     0F39                     _main:	
  6050                           ;psect for function _main
  6051                           
  6052     0F39                     l4065:	
  6053                           ;incstack = 0
  6054                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6055                           
  6056                           
  6057                           ;main.c: 116:     SYSTEM_Initialize();
  6058     0F39  318E  2664  318F   	fcall	_SYSTEM_Initialize
  6059     0F3C                     l4067:
  6060                           
  6061                           ;main.c: 118:     (INTCONbits.GIE = 1);
  6062     0F3C  178B               	bsf	11,7	;volatile
  6063     0F3D                     l4069:
  6064                           
  6065                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6066     0F3D  170B               	bsf	11,6	;volatile
  6067     0F3E                     l4071:
  6068     0F3E                     l4073:
  6069                           
  6070                           ;main.c: 133:         if (EUSART_IsRxReady()) {
  6071     0F3E  318D  2546  318F   	fcall	_EUSART_IsRxReady
  6072     0F41  3A00               	xorlw	0
  6073     0F42  1903               	skipnz
  6074     0F43  2F45               	goto	u2061
  6075     0F44  2F46               	goto	u2060
  6076     0F45                     u2061:
  6077     0F45  2F3E               	goto	l4071
  6078     0F46                     u2060:
  6079     0F46                     l4075:
  6080                           
  6081                           ;main.c: 134:             data = EUSART_Read();
  6082     0F46  318F  27AA  318F   	fcall	_EUSART_Read
  6083     0F49  0020               	movlb	0	; select bank0
  6084     0F4A  00D1               	movwf	main@data
  6085     0F4B                     l4077:
  6086                           
  6087                           ;main.c: 136:             if (Parse(data))
  6088     0F4B  0851               	movf	main@data,w
  6089     0F4C  3181  21AC  318F   	fcall	_Parse
  6090     0F4F  3A00               	xorlw	0
  6091     0F50  1903               	skipnz
  6092     0F51  2F53               	goto	u2071
  6093     0F52  2F54               	goto	u2070
  6094     0F53                     u2071:
  6095     0F53  2F3E               	goto	l4071
  6096     0F54                     u2070:
  6097     0F54                     l4079:
  6098                           
  6099                           ;main.c: 137:                 ProcessMsg(parser.m_MsgID, parserDataBuffer);
  6100     0F54  30C8               	movlw	(low (_parserDataBuffer| 0))& (0+255)
  6101     0F55  0020               	movlb	0	; select bank0
  6102     0F56  00CE               	movwf	ProcessMsg@data
  6103     0F57  085F               	movf	_parser+1,w
  6104     0F58  3180  2068  318F   	fcall	_ProcessMsg
  6105     0F5B  2F3E               	goto	l4071
  6106     0F5C  3180  2836         	ljmp	start
  6107     0F5E                     __end_of_main:
  6108                           
  6109                           	psect	text1
  6110     0E64                     __ptext1:	
  6111 ;; *************** function _SYSTEM_Initialize *****************
  6112 ;; Defined at:
  6113 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, pclath, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6127 ;;      Params:         0       0       0       0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 9
  6134 ;; This function calls:
  6135 ;;		_ADC_Initialize
  6136 ;;		_CLOCK_Initialize
  6137 ;;		_EUSART_Initialize
  6138 ;;		_I2C1_Initialize
  6139 ;;		_INTERRUPT_Initialize
  6140 ;;		_PIN_MANAGER_Initialize
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146     0E64                     _SYSTEM_Initialize:	
  6147                           ;psect for function _SYSTEM_Initialize
  6148                           
  6149     0E64                     l3161:	
  6150                           ;incstack = 0
  6151                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6152                           
  6153                           
  6154                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  6155     0E64  318D  25BB  318E   	fcall	_CLOCK_Initialize
  6156                           
  6157                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  6158     0E67  3184  241D  318E   	fcall	_PIN_MANAGER_Initialize
  6159                           
  6160                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  6161     0E6A  318E  2677  318E   	fcall	_ADC_Initialize
  6162                           
  6163                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  6164     0E6D  318E  26B9  318E   	fcall	_EUSART_Initialize
  6165                           
  6166                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  6167     0E70  318E  268B  318E   	fcall	_I2C1_Initialize
  6168                           
  6169                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  6170     0E73  318D  25D9  318E   	fcall	_INTERRUPT_Initialize
  6171     0E76                     l483:
  6172     0E76  0008               	return
  6173     0E77                     __end_of_SYSTEM_Initialize:
  6174                           
  6175                           	psect	text2
  6176     041D                     __ptext2:	
  6177 ;; *************** function _PIN_MANAGER_Initialize *****************
  6178 ;; Defined at:
  6179 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      void 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6193 ;;      Params:         0       0       0       0       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0
  6196 ;;      Totals:         0       0       0       0       0       0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; Hardware stack levels required when called: 7
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_SYSTEM_Initialize
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207     041D                     _PIN_MANAGER_Initialize:	
  6208                           ;psect for function _PIN_MANAGER_Initialize
  6209                           
  6210     041D                     l2945:	
  6211                           ;incstack = 0
  6212                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6213                           
  6214                           
  6215                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  6216     041D  0022               	movlb	2	; select bank2
  6217     041E  018C               	clrf	12	;volatile
  6218     041F                     l2947:
  6219                           
  6220                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  6221     041F  3060               	movlw	96
  6222     0420  008D               	movwf	13	;volatile
  6223     0421                     l2949:
  6224                           
  6225                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  6226     0421  018E               	clrf	14	;volatile
  6227                           
  6228                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  6229     0422  303F               	movlw	63
  6230     0423  0021               	movlb	1	; select bank1
  6231     0424  008C               	movwf	12	;volatile
  6232                           
  6233                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  6234     0425  30F0               	movlw	240
  6235     0426  008D               	movwf	13	;volatile
  6236                           
  6237                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  6238     0427  303B               	movlw	59
  6239     0428  008E               	movwf	14	;volatile
  6240                           
  6241                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  6242     0429  3017               	movlw	23
  6243     042A  0023               	movlb	3	; select bank3
  6244     042B  008C               	movwf	12	;volatile
  6245                           
  6246                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  6247     042C  3010               	movlw	16
  6248     042D  008D               	movwf	13	;volatile
  6249                           
  6250                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  6251     042E  300D               	movlw	13
  6252     042F  008E               	movwf	14	;volatile
  6253                           
  6254                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  6255     0430  302C               	movlw	44
  6256     0431  0024               	movlb	4	; select bank4
  6257     0432  008C               	movwf	12	;volatile
  6258                           
  6259                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  6260     0433  30E0               	movlw	224
  6261     0434  008D               	movwf	13	;volatile
  6262                           
  6263                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  6264     0435  30F7               	movlw	247
  6265     0436  008E               	movwf	14	;volatile
  6266     0437                     l2951:
  6267                           
  6268                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  6269     0437  0021               	movlb	1	; select bank1
  6270     0438  1395               	bcf	21,7	;volatile
  6271     0439                     l2953:
  6272                           
  6273                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  6274     0439  0025               	movlb	5	; select bank5
  6275     043A  018C               	clrf	12	;volatile
  6276     043B                     l2955:
  6277                           
  6278                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  6279     043B  018D               	clrf	13	;volatile
  6280     043C                     l2957:
  6281                           
  6282                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  6283     043C  018E               	clrf	14	;volatile
  6284     043D                     l2959:
  6285                           
  6286                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  6287     043D  3037               	movlw	55
  6288     043E  0026               	movlb	6	; select bank6
  6289     043F  008C               	movwf	12	;volatile
  6290     0440                     l2961:
  6291                           
  6292                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  6293     0440  30F0               	movlw	240
  6294     0441  008D               	movwf	13	;volatile
  6295     0442                     l2963:
  6296                           
  6297                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  6298     0442  30FF               	movlw	255
  6299     0443  008E               	movwf	14	;volatile
  6300     0444                     l2965:
  6301                           
  6302                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  6303     0444  303F               	movlw	63
  6304     0445  0027               	movlb	7	; select bank7
  6305     0446  008C               	movwf	12	;volatile
  6306     0447                     l2967:
  6307                           
  6308                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  6309     0447  30F0               	movlw	240
  6310     0448  008D               	movwf	13	;volatile
  6311     0449                     l2969:
  6312                           
  6313                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  6314     0449  30FF               	movlw	255
  6315     044A  008E               	movwf	14	;volatile
  6316     044B                     l2971:
  6317                           
  6318                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  6319     044B  3011               	movlw	17
  6320     044C  003C               	movlb	28	; select bank28
  6321     044D  00A4               	movwf	36	;volatile
  6322     044E                     l2973:
  6323                           
  6324                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  6325     044E  3006               	movlw	6
  6326     044F  003D               	movlb	29	; select bank29
  6327     0450  00A2               	movwf	34	;volatile
  6328     0451                     l2975:
  6329                           
  6330                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  6331     0451  300E               	movlw	14
  6332     0452  003C               	movlb	28	; select bank28
  6333     0453  00A0               	movwf	32	;volatile
  6334     0454                     l2977:
  6335                           
  6336                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  6337     0454  3010               	movlw	16
  6338     0455  003D               	movlb	29	; select bank29
  6339     0456  009E               	movwf	30	;volatile
  6340     0457                     l2979:
  6341                           
  6342                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  6343     0457  300D               	movlw	13
  6344     0458  003C               	movlb	28	; select bank28
  6345     0459  00A1               	movwf	33	;volatile
  6346     045A                     l2981:
  6347                           
  6348                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  6349     045A  3011               	movlw	17
  6350     045B  003D               	movlb	29	; select bank29
  6351     045C  009D               	movwf	29	;volatile
  6352     045D                     l2983:
  6353                           
  6354                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  6355     045D  0027               	movlb	7	; select bank7
  6356     045E  0191               	clrf	17	;volatile
  6357     045F                     l2985:
  6358                           
  6359                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  6360     045F  0192               	clrf	18	;volatile
  6361     0460                     l2987:
  6362                           
  6363                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  6364     0460  0193               	clrf	19	;volatile
  6365     0461                     l2989:
  6366                           
  6367                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  6368     0461  0194               	clrf	20	;volatile
  6369     0462                     l2991:
  6370                           
  6371                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  6372     0462  0195               	clrf	21	;volatile
  6373     0463                     l2993:
  6374                           
  6375                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  6376     0463  0196               	clrf	22	;volatile
  6377     0464                     l2995:
  6378                           
  6379                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  6380     0464  0197               	clrf	23	;volatile
  6381     0465                     l2997:
  6382                           
  6383                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  6384     0465  0198               	clrf	24	;volatile
  6385     0466                     l2999:
  6386                           
  6387                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  6388     0466  0199               	clrf	25	;volatile
  6389     0467                     l410:
  6390     0467  0008               	return
  6391     0468                     __end_of_PIN_MANAGER_Initialize:
  6392                           
  6393                           	psect	text3
  6394     0DD9                     __ptext3:	
  6395 ;; *************** function _INTERRUPT_Initialize *****************
  6396 ;; Defined at:
  6397 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0, pclath, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6411 ;;      Params:         0       0       0       0       0       0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0
  6414 ;;      Totals:         0       0       0       0       0       0       0       0
  6415 ;;Total ram usage:        0 bytes
  6416 ;; Hardware stack levels used: 1
  6417 ;; Hardware stack levels required when called: 8
  6418 ;; This function calls:
  6419 ;;		_INT_SetInterruptHandler
  6420 ;; This function is called by:
  6421 ;;		_SYSTEM_Initialize
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425     0DD9                     _INTERRUPT_Initialize:	
  6426                           ;psect for function _INTERRUPT_Initialize
  6427                           
  6428     0DD9                     l3001:	
  6429                           ;incstack = 0
  6430                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6431                           
  6432                           
  6433                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  6434     0DD9  108B               	bcf	11,1	;volatile
  6435                           
  6436                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  6437     0DDA  0021               	movlb	1	; select bank1
  6438     0DDB  1715               	bsf	21,6	;volatile
  6439     0DDC                     l3003:
  6440                           
  6441                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  6442     0DDC  3000               	movlw	0
  6443     0DDD  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  6444     0DDE  3000               	movlw	0
  6445     0DDF  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6446     0DE0  318D  254B  318D   	fcall	_INT_SetInterruptHandler
  6447     0DE3                     l442:
  6448     0DE3  0008               	return
  6449     0DE4                     __end_of_INTERRUPT_Initialize:
  6450                           
  6451                           	psect	text4
  6452     0D4B                     __ptext4:	
  6453 ;; *************** function _INT_SetInterruptHandler *****************
  6454 ;; Defined at:
  6455 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6458 ;;		 -> INT_DefaultInterruptHandler(1), 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6470 ;;      Params:         2       0       0       0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0
  6473 ;;      Totals:         2       0       0       0       0       0       0       0
  6474 ;;Total ram usage:        2 bytes
  6475 ;; Hardware stack levels used: 1
  6476 ;; Hardware stack levels required when called: 7
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_INTERRUPT_Initialize
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484     0D4B                     _INT_SetInterruptHandler:	
  6485                           ;psect for function _INT_SetInterruptHandler
  6486                           
  6487     0D4B                     l2787:	
  6488                           ;incstack = 0
  6489                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6490                           
  6491                           
  6492                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  6493     0D4B  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6494     0D4C  00F9               	movwf	_INT_InterruptHandler+1
  6495     0D4D  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6496     0D4E  00F8               	movwf	_INT_InterruptHandler
  6497     0D4F                     l465:
  6498     0D4F  0008               	return
  6499     0D50                     __end_of_INT_SetInterruptHandler:
  6500                           
  6501                           	psect	text5
  6502     0E8B                     __ptext5:	
  6503 ;; *************** function _I2C1_Initialize *****************
  6504 ;; Defined at:
  6505 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6519 ;;      Params:         0       0       0       0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; Hardware stack levels required when called: 8
  6526 ;; This function calls:
  6527 ;;		_I2C1_CallbackRegister
  6528 ;;		_I2C1_InterruptsEnable
  6529 ;; This function is called by:
  6530 ;;		_SYSTEM_Initialize
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534     0E8B                     _I2C1_Initialize:	
  6535                           ;psect for function _I2C1_Initialize
  6536                           
  6537     0E8B                     l2905:	
  6538                           ;incstack = 0
  6539                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6540                           
  6541                           
  6542                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  6543     0E8B  3080               	movlw	128
  6544     0E8C  0024               	movlb	4	; select bank4
  6545     0E8D  0094               	movwf	20	;volatile
  6546                           
  6547                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  6548     0E8E  3008               	movlw	8
  6549     0E8F  0095               	movwf	21	;volatile
  6550     0E90                     l2907:
  6551                           
  6552                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  6553     0E90  0196               	clrf	22	;volatile
  6554     0E91                     l2909:
  6555                           
  6556                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  6557     0E91  0197               	clrf	23	;volatile
  6558                           
  6559                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  6560     0E92  3027               	movlw	39
  6561     0E93  0092               	movwf	18	;volatile
  6562     0E94                     l2911:
  6563                           
  6564                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  6565     0E94  318D  2538  318E   	fcall	_I2C1_InterruptsEnable
  6566                           
  6567                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  6568     0E97  3002               	movlw	low _I2C1_DefaultCallback
  6569     0E98  00F4               	movwf	I2C1_CallbackRegister@callbackHandler
  6570     0E99  3000               	movlw	high _I2C1_DefaultCallback
  6571     0E9A  00F5               	movwf	I2C1_CallbackRegister@callbackHandler+1
  6572     0E9B  318E  2608  318E   	fcall	_I2C1_CallbackRegister
  6573     0E9E                     l2913:
  6574                           
  6575                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  6576     0E9E  0024               	movlb	4	; select bank4
  6577     0E9F  1695               	bsf	21,5	;volatile
  6578     0EA0                     l177:
  6579     0EA0  0008               	return
  6580     0EA1                     __end_of_I2C1_Initialize:
  6581                           
  6582                           	psect	text6
  6583     0D38                     __ptext6:	
  6584 ;; *************** function _I2C1_InterruptsEnable *****************
  6585 ;; Defined at:
  6586 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		None
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6600 ;;      Params:         0       0       0       0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0
  6603 ;;      Totals:         0       0       0       0       0       0       0       0
  6604 ;;Total ram usage:        0 bytes
  6605 ;; Hardware stack levels used: 1
  6606 ;; Hardware stack levels required when called: 7
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_I2C1_Initialize
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614     0D38                     _I2C1_InterruptsEnable:	
  6615                           ;psect for function _I2C1_InterruptsEnable
  6616                           
  6617     0D38                     l2635:	
  6618                           ;incstack = 0
  6619                           ; Regs used in _I2C1_InterruptsEnable: []
  6620                           
  6621                           
  6622                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  6623     0D38  0021               	movlb	1	; select bank1
  6624     0D39  1590               	bsf	16,3	;volatile
  6625                           
  6626                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  6627     0D3A  1591               	bsf	17,3	;volatile
  6628     0D3B                     l312:
  6629     0D3B  0008               	return
  6630     0D3C                     __end_of_I2C1_InterruptsEnable:
  6631                           
  6632                           	psect	text7
  6633     0E08                     __ptext7:	
  6634 ;; *************** function _I2C1_CallbackRegister *****************
  6635 ;; Defined at:
  6636 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6639 ;;		 -> I2C1_DefaultCallback(1), 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, status,2, status,0
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6651 ;;      Params:         2       0       0       0       0       0       0       0
  6652 ;;      Locals:         0       0       0       0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0
  6654 ;;      Totals:         2       0       0       0       0       0       0       0
  6655 ;;Total ram usage:        2 bytes
  6656 ;; Hardware stack levels used: 1
  6657 ;; Hardware stack levels required when called: 7
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_I2C1_Initialize
  6662 ;;		_I2C1_Deinitialize
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666     0E08                     _I2C1_CallbackRegister:	
  6667                           ;psect for function _I2C1_CallbackRegister
  6668                           
  6669     0E08                     l2637:	
  6670                           ;incstack = 0
  6671                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  6672                           
  6673                           
  6674                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  6675     0E08  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6676     0E09  0475               	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  6677     0E0A  1903               	btfsc	3,2
  6678     0E0B  2E0D               	goto	u911
  6679     0E0C  2E0E               	goto	u910
  6680     0E0D                     u911:
  6681     0E0D  2E13               	goto	l204
  6682     0E0E                     u910:
  6683     0E0E                     l2639:
  6684                           
  6685                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  6686     0E0E  0875               	movf	I2C1_CallbackRegister@callbackHandler+1,w
  6687     0E0F  0021               	movlb	1	; select bank1
  6688     0E10  00C1               	movwf	(_I2C1_Callback+1)^(0+128)
  6689     0E11  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6690     0E12  00C0               	movwf	_I2C1_Callback^(0+128)
  6691     0E13                     l204:
  6692     0E13  0008               	return
  6693     0E14                     __end_of_I2C1_CallbackRegister:
  6694                           
  6695                           	psect	text8
  6696     0EB9                     __ptext8:	
  6697 ;; *************** function _EUSART_Initialize *****************
  6698 ;; Defined at:
  6699 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0, pclath, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6713 ;;      Params:         0       0       0       0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0
  6716 ;;      Totals:         0       0       0       0       0       0       0       0
  6717 ;;Total ram usage:        0 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 8
  6720 ;; This function calls:
  6721 ;;		_EUSART_FramingErrorCallbackRegister
  6722 ;;		_EUSART_OverrunErrorCallbackRegister
  6723 ;; This function is called by:
  6724 ;;		_SYSTEM_Initialize
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728     0EB9                     _EUSART_Initialize:	
  6729                           ;psect for function _EUSART_Initialize
  6730                           
  6731     0EB9                     l3005:	
  6732                           ;incstack = 0
  6733                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6734                           
  6735                           
  6736                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  6737     0EB9  3048               	movlw	72
  6738     0EBA  0023               	movlb	3	; select bank3
  6739     0EBB  009F               	movwf	31	;volatile
  6740                           
  6741                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  6742     0EBC  3090               	movlw	144
  6743     0EBD  009D               	movwf	29	;volatile
  6744                           
  6745                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  6746     0EBE  3026               	movlw	38
  6747     0EBF  009E               	movwf	30	;volatile
  6748                           
  6749                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  6750     0EC0  30A0               	movlw	160
  6751     0EC1  009B               	movwf	27	;volatile
  6752                           
  6753                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  6754     0EC2  3001               	movlw	1
  6755     0EC3  009C               	movwf	28	;volatile
  6756     0EC4                     l3007:
  6757                           
  6758                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  6759     0EC4  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  6760     0EC5  00F4               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  6761     0EC6  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  6762     0EC7  00F5               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  6763     0EC8  318D  25CE  318E   	fcall	_EUSART_FramingErrorCallbackRegister
  6764     0ECB                     l3009:
  6765                           
  6766                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  6767     0ECB  3030               	movlw	low _EUSART_DefaultOverrunErrorCallback
  6768     0ECC  00F4               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  6769     0ECD  300D               	movlw	high _EUSART_DefaultOverrunErrorCallback
  6770     0ECE  00F5               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  6771     0ECF  318D  25FC  318E   	fcall	_EUSART_OverrunErrorCallbackRegister
  6772     0ED2                     l3011:
  6773                           
  6774                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  6775     0ED2  0021               	movlb	1	; select bank1
  6776     0ED3  01BE               	clrf	_eusartRxLastError^(0+128)	;volatile
  6777     0ED4  01BF               	clrf	(_eusartRxLastError+1)^(0+128)	;volatile
  6778     0ED5                     l548:
  6779     0ED5  0008               	return
  6780     0ED6                     __end_of_EUSART_Initialize:
  6781                           
  6782                           	psect	text9
  6783     0DFC                     __ptext9:	
  6784 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  6785 ;; Defined at:
  6786 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6789 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6801 ;;      Params:         2       0       0       0       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0       0       0       0
  6804 ;;      Totals:         2       0       0       0       0       0       0       0
  6805 ;;Total ram usage:        2 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 7
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_EUSART_Initialize
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815     0DFC                     _EUSART_OverrunErrorCallbackRegister:	
  6816                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  6817                           
  6818     0DFC                     l2793:	
  6819                           ;incstack = 0
  6820                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  6821                           
  6822                           
  6823                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  6824     0DFC  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6825     0DFD  0475               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6826     0DFE  1903               	btfsc	3,2
  6827     0DFF  2E01               	goto	u1001
  6828     0E00  2E02               	goto	u1000
  6829     0E01                     u1001:
  6830     0E01  2E07               	goto	l627
  6831     0E02                     u1000:
  6832     0E02                     l2795:
  6833                           
  6834                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6835     0E02  0875               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6836     0E03  0021               	movlb	1	; select bank1
  6837     0E04  00BD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6838     0E05  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6839     0E06  00BC               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6840     0E07                     l627:
  6841     0E07  0008               	return
  6842     0E08                     __end_of_EUSART_OverrunErrorCallbackRegister:
  6843                           
  6844                           	psect	text10
  6845     0DCE                     __ptext10:	
  6846 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6847 ;; Defined at:
  6848 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6851 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6863 ;;      Params:         2       0       0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0
  6866 ;;      Totals:         2       0       0       0       0       0       0       0
  6867 ;;Total ram usage:        2 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 7
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_EUSART_Initialize
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877     0DCE                     _EUSART_FramingErrorCallbackRegister:	
  6878                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6879                           
  6880     0DCE                     l2789:	
  6881                           ;incstack = 0
  6882                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6883                           
  6884                           
  6885                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6886     0DCE  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6887     0DCF  0475               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6888     0DD0  1903               	btfsc	3,2
  6889     0DD1  2DD3               	goto	u991
  6890     0DD2  2DD4               	goto	u990
  6891     0DD3                     u991:
  6892     0DD3  2DD8               	goto	l623
  6893     0DD4                     u990:
  6894     0DD4                     l2791:
  6895                           
  6896                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6897     0DD4  0875               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6898     0DD5  00F7               	movwf	_EUSART_FramingErrorHandler+1
  6899     0DD6  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6900     0DD7  00F6               	movwf	_EUSART_FramingErrorHandler
  6901     0DD8                     l623:
  6902     0DD8  0008               	return
  6903     0DD9                     __end_of_EUSART_FramingErrorCallbackRegister:
  6904                           
  6905                           	psect	text11
  6906     0DBB                     __ptext11:	
  6907 ;; *************** function _CLOCK_Initialize *****************
  6908 ;; Defined at:
  6909 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6923 ;;      Params:         0       0       0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0
  6926 ;;      Totals:         0       0       0       0       0       0       0       0
  6927 ;;Total ram usage:        0 bytes
  6928 ;; Hardware stack levels used: 1
  6929 ;; Hardware stack levels required when called: 7
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_SYSTEM_Initialize
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937     0DBB                     _CLOCK_Initialize:	
  6938                           ;psect for function _CLOCK_Initialize
  6939                           
  6940     0DBB                     l2939:	
  6941                           ;incstack = 0
  6942                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6943                           
  6944                           
  6945                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6946     0DBB  307A               	movlw	122
  6947     0DBC  0021               	movlb	1	; select bank1
  6948     0DBD  0099               	movwf	25	;volatile
  6949     0DBE                     l2941:
  6950                           
  6951                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6952     0DBE  0022               	movlb	2	; select bank2
  6953     0DBF  0196               	clrf	22	;volatile
  6954     0DC0                     l2943:
  6955                           
  6956                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6957     0DC0  0021               	movlb	1	; select bank1
  6958     0DC1  0198               	clrf	24	;volatile
  6959     0DC2                     l333:
  6960     0DC2  0008               	return
  6961     0DC3                     __end_of_CLOCK_Initialize:
  6962                           
  6963                           	psect	text12
  6964     0E77                     __ptext12:	
  6965 ;; *************** function _ADC_Initialize *****************
  6966 ;; Defined at:
  6967 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, pclath, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6981 ;;      Params:         0       0       0       0       0       0       0       0
  6982 ;;      Locals:         0       0       0       0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0
  6984 ;;      Totals:         0       0       0       0       0       0       0       0
  6985 ;;Total ram usage:        0 bytes
  6986 ;; Hardware stack levels used: 1
  6987 ;; Hardware stack levels required when called: 8
  6988 ;; This function calls:
  6989 ;;		_ADC_SetInterruptHandler
  6990 ;; This function is called by:
  6991 ;;		_SYSTEM_Initialize
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995     0E77                     _ADC_Initialize:	
  6996                           ;psect for function _ADC_Initialize
  6997                           
  6998     0E77                     l2889:	
  6999                           ;incstack = 0
  7000                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7001                           
  7002                           
  7003                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  7004     0E77  3060               	movlw	96
  7005     0E78  0021               	movlb	1	; select bank1
  7006     0E79  009E               	movwf	30	;volatile
  7007     0E7A                     l2891:
  7008                           
  7009                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  7010     0E7A  019B               	clrf	27	;volatile
  7011     0E7B                     l2893:
  7012                           
  7013                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  7014     0E7B  019C               	clrf	28	;volatile
  7015     0E7C                     l2895:
  7016                           
  7017                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  7018     0E7C  019F               	clrf	31	;volatile
  7019     0E7D                     l2897:
  7020                           
  7021                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  7022     0E7D  3001               	movlw	1
  7023     0E7E  009D               	movwf	29	;volatile
  7024     0E7F                     l2899:
  7025                           
  7026                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  7027     0E7F  0020               	movlb	0	; select bank0
  7028     0E80  1310               	bcf	16,6	;volatile
  7029     0E81                     l2901:
  7030                           
  7031                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  7032     0E81  30F4               	movlw	low _ADC_DefaultInterruptHandler
  7033     0E82  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7034     0E83  300C               	movlw	high _ADC_DefaultInterruptHandler
  7035     0E84  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7036     0E85  318D  2568  318E   	fcall	_ADC_SetInterruptHandler
  7037     0E88                     l2903:
  7038                           
  7039                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  7040     0E88  0021               	movlb	1	; select bank1
  7041     0E89  1710               	bsf	16,6	;volatile
  7042     0E8A                     l27:
  7043     0E8A  0008               	return
  7044     0E8B                     __end_of_ADC_Initialize:
  7045                           
  7046                           	psect	text13
  7047     0D68                     __ptext13:	
  7048 ;; *************** function _ADC_SetInterruptHandler *****************
  7049 ;; Defined at:
  7050 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7053 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      void 
  7058 ;; Registers used:
  7059 ;;		wreg
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7065 ;;      Params:         2       0       0       0       0       0       0       0
  7066 ;;      Locals:         0       0       0       0       0       0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0
  7068 ;;      Totals:         2       0       0       0       0       0       0       0
  7069 ;;Total ram usage:        2 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; Hardware stack levels required when called: 7
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_ADC_Initialize
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079     0D68                     _ADC_SetInterruptHandler:	
  7080                           ;psect for function _ADC_SetInterruptHandler
  7081                           
  7082     0D68                     l2633:	
  7083                           ;incstack = 0
  7084                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7085                           
  7086                           
  7087                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  7088     0D68  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7089     0D69  0021               	movlb	1	; select bank1
  7090     0D6A  00CE               	movwf	(_ADC_InterruptHandler+1)^(0+128)
  7091     0D6B  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7092     0D6C  00CD               	movwf	_ADC_InterruptHandler^(0+128)
  7093     0D6D                     l55:
  7094     0D6D  0008               	return
  7095     0D6E                     __end_of_ADC_SetInterruptHandler:
  7096                           
  7097                           	psect	text14
  7098     0068                     __ptext14:	
  7099 ;; *************** function _ProcessMsg *****************
  7100 ;; Defined at:
  7101 ;;		line 47 in file "main.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  msg_id          1    wreg     unsigned char 
  7104 ;;  data            1   46[BANK0 ] PTR unsigned char 
  7105 ;;		 -> parserDataBuffer(5), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  msg_id          1   48[BANK0 ] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  1    wreg      void 
  7110 ;; Registers used:
  7111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7117 ;;      Params:         0       1       0       0       0       0       0       0
  7118 ;;      Locals:         0       1       0       0       0       0       0       0
  7119 ;;      Temps:          0       1       0       0       0       0       0       0
  7120 ;;      Totals:         0       3       0       0       0       0       0       0
  7121 ;;Total ram usage:        3 bytes
  7122 ;; Hardware stack levels used: 1
  7123 ;; Hardware stack levels required when called: 11
  7124 ;; This function calls:
  7125 ;;		_KAPS_GoToIdx
  7126 ;;		_KAPS_StorePos
  7127 ;;		_KAPS_getIndex
  7128 ;;		_KAPS_getPos
  7129 ;;		_KAPS_getStatus
  7130 ;;		_KAPS_setAbsPos
  7131 ;;		_KAPS_setRelPos
  7132 ;;		_SSPA_getPOut
  7133 ;;		_SSPA_getTemp
  7134 ;;		_SSPA_setMute
  7135 ;;		_SendMsg
  7136 ;;		_packLong
  7137 ;;		_unpackLong
  7138 ;;		_unpackWord
  7139 ;; This function is called by:
  7140 ;;		_main
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144     0068                     _ProcessMsg:	
  7145                           ;psect for function _ProcessMsg
  7146                           
  7147                           
  7148                           ;incstack = 0
  7149                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7150                           ;ProcessMsg@msg_id stored from wreg
  7151     0068  0020               	movlb	0	; select bank0
  7152     0069  00D0               	movwf	ProcessMsg@msg_id
  7153     006A                     l3909:
  7154                           
  7155                           ;main.c: 48:     static uint8_t payload[6];;main.c: 50:     switch (msg_id) {
  7156     006A  2988               	goto	l3961
  7157     006B                     l3911:
  7158                           
  7159                           ;main.c: 52:             payload[0] = data[0];
  7160     006B  084E               	movf	ProcessMsg@data,w
  7161     006C  0086               	movwf	6
  7162     006D  0187               	clrf	7
  7163     006E  0801               	movf	1,w
  7164     006F  0021               	movlb	1	; select bank1
  7165     0070  00C2               	movwf	ProcessMsg@payload^(0+128)
  7166     0071                     l3913:
  7167                           
  7168                           ;main.c: 53:             payload[1] = (uint8_t) sspas[data[0]].m_Mute;
  7169     0071  0020               	movlb	0	; select bank0
  7170     0072  084E               	movf	ProcessMsg@data,w
  7171     0073  0086               	movwf	6
  7172     0074  0187               	clrf	7
  7173     0075  0801               	movf	1,w
  7174     0076  00CF               	movwf	??_ProcessMsg
  7175     0077  3002               	movlw	2
  7176     0078                     u1975:
  7177     0078  35CF               	lslf	??_ProcessMsg,f
  7178     0079  3EFF               	addlw	-1
  7179     007A  1D03               	skipz
  7180     007B  2878               	goto	u1975
  7181     007C  354F               	lslf	??_ProcessMsg,w
  7182     007D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7183     007E  0086               	movwf	6
  7184     007F  0187               	clrf	7
  7185     0080  0801               	movf	1,w
  7186     0081  0021               	movlb	1	; select bank1
  7187     0082  00C3               	movwf	(ProcessMsg@payload^(0+128)+1)
  7188     0083                     l3915:
  7189                           
  7190                           ;main.c: 54:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  7191     0083  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7192     0084  0020               	movlb	0	; select bank0
  7193     0085  00A0               	movwf	SendMsg@data
  7194     0086  3002               	movlw	2
  7195     0087  00A1               	movwf	SendMsg@data_len
  7196     0088  300C               	movlw	12
  7197     0089  3186  26D3  3180   	fcall	_SendMsg
  7198                           
  7199                           ;main.c: 55:             break;
  7200     008C  29AB               	goto	l691
  7201     008D                     l3917:
  7202                           
  7203                           ;main.c: 58:             SSPA_getTemp((antenna_band_t) data[0]);
  7204     008D  084E               	movf	ProcessMsg@data,w
  7205     008E  0086               	movwf	6
  7206     008F  0187               	clrf	7
  7207     0090  0801               	movf	1,w
  7208     0091  3185  25AE  3180   	fcall	_SSPA_getTemp
  7209     0094                     l3919:
  7210                           
  7211                           ;main.c: 59:             payload[0] = data[0];
  7212     0094  0020               	movlb	0	; select bank0
  7213     0095  084E               	movf	ProcessMsg@data,w
  7214     0096  0086               	movwf	6
  7215     0097  0187               	clrf	7
  7216     0098  0801               	movf	1,w
  7217     0099  0021               	movlb	1	; select bank1
  7218     009A  00C2               	movwf	ProcessMsg@payload^(0+128)
  7219     009B                     l3921:
  7220                           
  7221                           ;main.c: 60:             unpackWord((uint16_t) sspas[data[0]].m_wTemp, &payload[1]);
  7222     009B  0020               	movlb	0	; select bank0
  7223     009C  084E               	movf	ProcessMsg@data,w
  7224     009D  0086               	movwf	6
  7225     009E  0187               	clrf	7
  7226     009F  0801               	movf	1,w
  7227     00A0  00CF               	movwf	??_ProcessMsg
  7228     00A1  3002               	movlw	2
  7229     00A2                     u1985:
  7230     00A2  35CF               	lslf	??_ProcessMsg,f
  7231     00A3  3EFF               	addlw	-1
  7232     00A4  1D03               	skipz
  7233     00A5  28A2               	goto	u1985
  7234     00A6  354F               	lslf	??_ProcessMsg,w
  7235     00A7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7236     00A8  0086               	movwf	6
  7237     00A9  0187               	clrf	7
  7238     00AA  3F40               	moviw [0]fsr1
  7239     00AB  00A0               	movwf	unpackWord@value
  7240     00AC  3F41               	moviw [1]fsr1
  7241     00AD  00A1               	movwf	unpackWord@value+1
  7242     00AE  30C3               	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7243     00AF  00A2               	movwf	unpackWord@data
  7244     00B0  318D  25F0  3180   	fcall	_unpackWord
  7245     00B3                     l3923:
  7246                           
  7247                           ;main.c: 61:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7248     00B3  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7249     00B4  0020               	movlb	0	; select bank0
  7250     00B5  00A0               	movwf	SendMsg@data
  7251     00B6  3003               	movlw	3
  7252     00B7  00A1               	movwf	SendMsg@data_len
  7253     00B8  300D               	movlw	13
  7254     00B9  3186  26D3  3180   	fcall	_SendMsg
  7255                           
  7256                           ;main.c: 62:             break;
  7257     00BC  29AB               	goto	l691
  7258     00BD                     l3925:
  7259                           
  7260                           ;main.c: 65:             SSPA_getPOut((antenna_band_t) data[0]);
  7261     00BD  084E               	movf	ProcessMsg@data,w
  7262     00BE  0086               	movwf	6
  7263     00BF  0187               	clrf	7
  7264     00C0  0801               	movf	1,w
  7265     00C1  3182  22F0  3180   	fcall	_SSPA_getPOut
  7266     00C4                     l3927:
  7267                           
  7268                           ;main.c: 66:             payload[0] = data[0];
  7269     00C4  0020               	movlb	0	; select bank0
  7270     00C5  084E               	movf	ProcessMsg@data,w
  7271     00C6  0086               	movwf	6
  7272     00C7  0187               	clrf	7
  7273     00C8  0801               	movf	1,w
  7274     00C9  0021               	movlb	1	; select bank1
  7275     00CA  00C2               	movwf	ProcessMsg@payload^(0+128)
  7276     00CB                     l3929:
  7277                           
  7278                           ;main.c: 67:             payload[1] = sspas[data[0]].m_bPOut;
  7279     00CB  0020               	movlb	0	; select bank0
  7280     00CC  084E               	movf	ProcessMsg@data,w
  7281     00CD  0086               	movwf	6
  7282     00CE  0187               	clrf	7
  7283     00CF  0801               	movf	1,w
  7284     00D0  00CF               	movwf	??_ProcessMsg
  7285     00D1  3002               	movlw	2
  7286     00D2                     u1995:
  7287     00D2  35CF               	lslf	??_ProcessMsg,f
  7288     00D3  3EFF               	addlw	-1
  7289     00D4  1D03               	skipz
  7290     00D5  28D2               	goto	u1995
  7291     00D6  354F               	lslf	??_ProcessMsg,w
  7292     00D7  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  7293     00D8  0086               	movwf	6
  7294     00D9  0187               	clrf	7
  7295     00DA  0801               	movf	1,w
  7296     00DB  0021               	movlb	1	; select bank1
  7297     00DC  00C3               	movwf	(ProcessMsg@payload^(0+128)+1)
  7298     00DD                     l3931:
  7299                           
  7300                           ;main.c: 68:             unpackLong(sspas[data[0]].m_lCurrent, &payload[2]);
  7301     00DD  0020               	movlb	0	; select bank0
  7302     00DE  084E               	movf	ProcessMsg@data,w
  7303     00DF  0086               	movwf	6
  7304     00E0  0187               	clrf	7
  7305     00E1  0801               	movf	1,w
  7306     00E2  00CF               	movwf	??_ProcessMsg
  7307     00E3  3002               	movlw	2
  7308     00E4                     u2005:
  7309     00E4  35CF               	lslf	??_ProcessMsg,f
  7310     00E5  3EFF               	addlw	-1
  7311     00E6  1D03               	skipz
  7312     00E7  28E4               	goto	u2005
  7313     00E8  354F               	lslf	??_ProcessMsg,w
  7314     00E9  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  7315     00EA  0086               	movwf	6
  7316     00EB  0187               	clrf	7
  7317     00EC  3F40               	moviw [0]fsr1
  7318     00ED  00A0               	movwf	unpackLong@value
  7319     00EE  3F41               	moviw [1]fsr1
  7320     00EF  00A1               	movwf	unpackLong@value+1
  7321     00F0  3F42               	moviw [2]fsr1
  7322     00F1  00A2               	movwf	unpackLong@value+2
  7323     00F2  3F43               	moviw [3]fsr1
  7324     00F3  00A3               	movwf	unpackLong@value+3
  7325     00F4  30C4               	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7326     00F5  00A4               	movwf	unpackLong@data
  7327     00F6  3184  2468  3180   	fcall	_unpackLong
  7328     00F9                     l3933:
  7329                           
  7330                           ;main.c: 69:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7331     00F9  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7332     00FA  0020               	movlb	0	; select bank0
  7333     00FB  00A0               	movwf	SendMsg@data
  7334     00FC  3006               	movlw	6
  7335     00FD  00A1               	movwf	SendMsg@data_len
  7336     00FE  300E               	movlw	14
  7337     00FF  3186  26D3  3180   	fcall	_SendMsg
  7338                           
  7339                           ;main.c: 70:             break;
  7340     0102  29AB               	goto	l691
  7341     0103                     l3935:
  7342                           
  7343                           ;main.c: 73:             KAPS_getStatus();
  7344     0103  3187  279F  3180   	fcall	_KAPS_getStatus
  7345     0106                     l3937:
  7346                           
  7347                           ;main.c: 74:             payload[0] = (uint8_t) kaps.m_Status;
  7348     0106  0020               	movlb	0	; select bank0
  7349     0107  0867               	movf	_kaps+1,w
  7350     0108  0021               	movlb	1	; select bank1
  7351     0109  00C2               	movwf	ProcessMsg@payload^(0+128)
  7352     010A                     l3939:
  7353                           
  7354                           ;main.c: 75:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7355     010A  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7356     010B  0020               	movlb	0	; select bank0
  7357     010C  00A0               	movwf	SendMsg@data
  7358     010D  01A1               	clrf	SendMsg@data_len
  7359     010E  0AA1               	incf	SendMsg@data_len,f
  7360     010F  300F               	movlw	15
  7361     0110  3186  26D3  3180   	fcall	_SendMsg
  7362                           
  7363                           ;main.c: 76:             break;
  7364     0113  29AB               	goto	l691
  7365     0114                     l3941:
  7366                           
  7367                           ;main.c: 79:             KAPS_getPos();
  7368     0114  3185  2570  3180   	fcall	_KAPS_getPos
  7369                           
  7370                           ;main.c: 80:             unpackLong(kaps.m_lAbsPos, payload);
  7371     0117  3002               	movlw	2
  7372     0118  3E66               	addlw	(low (_kaps| 0))& (0+255)
  7373     0119  0086               	movwf	6
  7374     011A  0187               	clrf	7
  7375     011B  3F40               	moviw [0]fsr1
  7376     011C  0020               	movlb	0	; select bank0
  7377     011D  00A0               	movwf	unpackLong@value
  7378     011E  3F41               	moviw [1]fsr1
  7379     011F  00A1               	movwf	unpackLong@value+1
  7380     0120  3F42               	moviw [2]fsr1
  7381     0121  00A2               	movwf	unpackLong@value+2
  7382     0122  3F43               	moviw [3]fsr1
  7383     0123  00A3               	movwf	unpackLong@value+3
  7384     0124  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7385     0125  00A4               	movwf	unpackLong@data
  7386     0126  3184  2468  3180   	fcall	_unpackLong
  7387                           
  7388                           ;main.c: 81:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7389     0129  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7390     012A  0020               	movlb	0	; select bank0
  7391     012B  00A0               	movwf	SendMsg@data
  7392     012C  3004               	movlw	4
  7393     012D  00A1               	movwf	SendMsg@data_len
  7394     012E  3010               	movlw	16
  7395     012F  3186  26D3  3180   	fcall	_SendMsg
  7396                           
  7397                           ;main.c: 82:             break;
  7398     0132  29AB               	goto	l691
  7399     0133                     l3943:
  7400                           
  7401                           ;main.c: 85:             KAPS_getIndex();
  7402     0133  3187  27CD  3180   	fcall	_KAPS_getIndex
  7403     0136                     l3945:
  7404                           
  7405                           ;main.c: 86:             payload[0] = kaps.m_bIdxPos;
  7406     0136  0020               	movlb	0	; select bank0
  7407     0137  086C               	movf	_kaps+6,w
  7408     0138  0021               	movlb	1	; select bank1
  7409     0139  00C2               	movwf	ProcessMsg@payload^(0+128)
  7410     013A                     l3947:
  7411                           
  7412                           ;main.c: 87:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7413     013A  30C2               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7414     013B  0020               	movlb	0	; select bank0
  7415     013C  00A0               	movwf	SendMsg@data
  7416     013D  01A1               	clrf	SendMsg@data_len
  7417     013E  0AA1               	incf	SendMsg@data_len,f
  7418     013F  3012               	movlw	18
  7419     0140  3186  26D3  3180   	fcall	_SendMsg
  7420                           
  7421                           ;main.c: 88:             break;
  7422     0143  29AB               	goto	l691
  7423     0144                     l3949:
  7424                           
  7425                           ;main.c: 91:             SSPA_setMute((antenna_band_t) data[0], (mute_t) data[1]);
  7426     0144  084E               	movf	ProcessMsg@data,w
  7427     0145  0086               	movwf	6
  7428     0146  0187               	clrf	7
  7429     0147  3F41               	moviw [1]fsr1
  7430     0148  00F4               	movwf	SSPA_setMute@mute
  7431     0149  084E               	movf	ProcessMsg@data,w
  7432     014A  0086               	movwf	6
  7433     014B  0187               	clrf	7
  7434     014C  0801               	movf	1,w
  7435     014D  3186  2628  3180   	fcall	_SSPA_setMute
  7436                           
  7437                           ;main.c: 92:             break;
  7438     0150  29AB               	goto	l691
  7439     0151                     l3951:
  7440                           
  7441                           ;main.c: 95:             KAPS_GoToIdx(data[0]);
  7442     0151  084E               	movf	ProcessMsg@data,w
  7443     0152  0086               	movwf	6
  7444     0153  0187               	clrf	7
  7445     0154  0801               	movf	1,w
  7446     0155  318F  275E  3180   	fcall	_KAPS_GoToIdx
  7447                           
  7448                           ;main.c: 96:             break;
  7449     0158  29AB               	goto	l691
  7450     0159                     l3953:
  7451                           
  7452                           ;main.c: 99:             KAPS_setAbsPos(packLong(data));
  7453     0159  084E               	movf	ProcessMsg@data,w
  7454     015A  3183  237A  3180   	fcall	_packLong
  7455     015D  0020               	movlb	0	; select bank0
  7456     015E  0823               	movf	?_packLong+3,w
  7457     015F  00B0               	movwf	KAPS_setAbsPos@pos+3
  7458     0160  0822               	movf	?_packLong+2,w
  7459     0161  00AF               	movwf	KAPS_setAbsPos@pos+2
  7460     0162  0821               	movf	?_packLong+1,w
  7461     0163  00AE               	movwf	KAPS_setAbsPos@pos+1
  7462     0164  0820               	movf	?_packLong,w
  7463     0165  00AD               	movwf	KAPS_setAbsPos@pos
  7464     0166  3187  273C  3180   	fcall	_KAPS_setAbsPos
  7465                           
  7466                           ;main.c: 100:             break;
  7467     0169  29AB               	goto	l691
  7468     016A                     l3955:
  7469                           
  7470                           ;main.c: 103:             KAPS_setRelPos((int8_t) data[0]);
  7471     016A  084E               	movf	ProcessMsg@data,w
  7472     016B  0086               	movwf	6
  7473     016C  0187               	clrf	7
  7474     016D  0801               	movf	1,w
  7475     016E  318F  2784  3180   	fcall	_KAPS_setRelPos
  7476                           
  7477                           ;main.c: 104:             break;
  7478     0171  29AB               	goto	l691
  7479     0172                     l3957:
  7480                           
  7481                           ;main.c: 107:             KAPS_StorePos(data[4], packLong(data));
  7482     0172  084E               	movf	ProcessMsg@data,w
  7483     0173  3183  237A  3180   	fcall	_packLong
  7484     0176  0020               	movlb	0	; select bank0
  7485     0177  0823               	movf	?_packLong+3,w
  7486     0178  00B0               	movwf	KAPS_StorePos@pos+3
  7487     0179  0822               	movf	?_packLong+2,w
  7488     017A  00AF               	movwf	KAPS_StorePos@pos+2
  7489     017B  0821               	movf	?_packLong+1,w
  7490     017C  00AE               	movwf	KAPS_StorePos@pos+1
  7491     017D  0820               	movf	?_packLong,w
  7492     017E  00AD               	movwf	KAPS_StorePos@pos
  7493     017F  084E               	movf	ProcessMsg@data,w
  7494     0180  3E04               	addlw	4
  7495     0181  0086               	movwf	6
  7496     0182  0187               	clrf	7
  7497     0183  0801               	movf	1,w
  7498     0184  3185  2530  3180   	fcall	_KAPS_StorePos
  7499                           
  7500                           ;main.c: 108:             break;
  7501     0187  29AB               	goto	l691
  7502     0188                     l3961:
  7503     0188  0850               	movf	ProcessMsg@msg_id,w
  7504                           
  7505                           ; Switch size 1, requested type "simple"
  7506                           ; Number of cases is 11, Range of values is 1 to 17
  7507                           ; switch strategies available:
  7508                           ; Name         Instructions Cycles
  7509                           ; simple_byte           34    18 (average)
  7510                           ; direct_byte           43     9 (fixed)
  7511                           ; jumptable            263     9 (fixed)
  7512                           ;	Chosen strategy is simple_byte
  7513     0189  3A01               	xorlw	1	; case 1
  7514     018A  1903               	skipnz
  7515     018B  2944               	goto	l3949
  7516     018C  3A03               	xorlw	3	; case 2
  7517     018D  1903               	skipnz
  7518     018E  286B               	goto	l3911
  7519     018F  3A01               	xorlw	1	; case 3
  7520     0190  1903               	skipnz
  7521     0191  288D               	goto	l3917
  7522     0192  3A07               	xorlw	7	; case 4
  7523     0193  1903               	skipnz
  7524     0194  28BD               	goto	l3925
  7525     0195  3A01               	xorlw	1	; case 5
  7526     0196  1903               	skipnz
  7527     0197  2903               	goto	l3935
  7528     0198  3A03               	xorlw	3	; case 6
  7529     0199  1903               	skipnz
  7530     019A  2914               	goto	l3941
  7531     019B  3A01               	xorlw	1	; case 7
  7532     019C  1903               	skipnz
  7533     019D  2951               	goto	l3951
  7534     019E  3A0F               	xorlw	15	; case 8
  7535     019F  1903               	skipnz
  7536     01A0  2959               	goto	l3953
  7537     01A1  3A01               	xorlw	1	; case 9
  7538     01A2  1903               	skipnz
  7539     01A3  296A               	goto	l3955
  7540     01A4  3A03               	xorlw	3	; case 10
  7541     01A5  1903               	skipnz
  7542     01A6  2972               	goto	l3957
  7543     01A7  3A1B               	xorlw	27	; case 17
  7544     01A8  1903               	skipnz
  7545     01A9  2933               	goto	l3943
  7546     01AA  29AB               	goto	l691
  7547     01AB                     l691:
  7548     01AB  0008               	return
  7549     01AC                     __end_of_ProcessMsg:
  7550                           
  7551                           	psect	text15
  7552     0DF0                     __ptext15:	
  7553 ;; *************** function _unpackWord *****************
  7554 ;; Defined at:
  7555 ;;		line 71 in file "utils.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  value           2    0[BANK0 ] unsigned short 
  7558 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7559 ;;		 -> ProcessMsg@payload(6), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, fsr1l, fsr1h, status,2
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7571 ;;      Params:         0       3       0       0       0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0
  7574 ;;      Totals:         0       3       0       0       0       0       0       0
  7575 ;;Total ram usage:        3 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; Hardware stack levels required when called: 7
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_ProcessMsg
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585     0DF0                     _unpackWord:	
  7586                           ;psect for function _unpackWord
  7587                           
  7588     0DF0                     l3793:	
  7589                           ;incstack = 0
  7590                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7591                           
  7592                           
  7593                           ;utils.c: 73:     data[0] = value & 0xFF;
  7594     0DF0  0020               	movlb	0	; select bank0
  7595     0DF1  0822               	movf	unpackWord@data,w
  7596     0DF2  0086               	movwf	6
  7597     0DF3  0187               	clrf	7
  7598     0DF4  0820               	movf	unpackWord@value,w
  7599     0DF5  0081               	movwf	1
  7600     0DF6                     l3795:
  7601                           
  7602                           ;utils.c: 74:     data[1] = (value >> 8) & 0xFF;
  7603     0DF6  0A22               	incf	unpackWord@data,w
  7604     0DF7  0086               	movwf	6
  7605     0DF8  0187               	clrf	7
  7606     0DF9  0821               	movf	unpackWord@value+1,w
  7607     0DFA  0081               	movwf	1
  7608     0DFB                     l748:
  7609     0DFB  0008               	return
  7610     0DFC                     __end_of_unpackWord:
  7611                           
  7612                           	psect	text16
  7613     0628                     __ptext16:	
  7614 ;; *************** function _SSPA_setMute *****************
  7615 ;; Defined at:
  7616 ;;		line 76 in file "sspa.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  band            1    wreg     enum E40
  7619 ;;  mute            1    4[COMMON] enum E36
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  band            1    5[COMMON] enum E40
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1    wreg      void 
  7624 ;; Registers used:
  7625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7631 ;;      Params:         1       0       0       0       0       0       0       0
  7632 ;;      Locals:         1       0       0       0       0       0       0       0
  7633 ;;      Temps:          0       2       0       0       0       0       0       0
  7634 ;;      Totals:         2       2       0       0       0       0       0       0
  7635 ;;Total ram usage:        4 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; Hardware stack levels required when called: 7
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_ProcessMsg
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645     0628                     _SSPA_setMute:	
  7646                           ;psect for function _SSPA_setMute
  7647                           
  7648                           
  7649                           ;incstack = 0
  7650                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7651                           ;SSPA_setMute@band stored from wreg
  7652     0628  00F5               	movwf	SSPA_setMute@band
  7653     0629                     l3857:
  7654                           
  7655                           ;sspa.c: 77:     switch (band) {
  7656     0629  2E40               	goto	l3865
  7657     062A                     l3859:
  7658                           
  7659                           ;sspa.c: 79:             if (mute == UNMUTE)
  7660     062A  0874               	movf	SSPA_setMute@mute,w
  7661     062B  1D03               	btfss	3,2
  7662     062C  2E2E               	goto	u1931
  7663     062D  2E2F               	goto	u1930
  7664     062E                     u1931:
  7665     062E  2E32               	goto	l843
  7666     062F                     u1930:
  7667     062F                     l840:	
  7668                           ;sspa.c: 80:                 do { LATCbits.LATC7 = 1; } while(0);
  7669                           
  7670     062F  0022               	movlb	2	; select bank2
  7671     0630  178E               	bsf	14,7	;volatile
  7672     0631  2E54               	goto	l3867
  7673     0632                     l843:	
  7674                           ;sspa.c: 82:                 do { LATCbits.LATC7 = 0; } while(0);
  7675                           
  7676     0632  0022               	movlb	2	; select bank2
  7677     0633  138E               	bcf	14,7	;volatile
  7678     0634  2E54               	goto	l3867
  7679     0635                     l3861:
  7680                           
  7681                           ;sspa.c: 86:             if (mute == UNMUTE)
  7682     0635  0874               	movf	SSPA_setMute@mute,w
  7683     0636  1D03               	btfss	3,2
  7684     0637  2E39               	goto	u1941
  7685     0638  2E3A               	goto	u1940
  7686     0639                     u1941:
  7687     0639  2E3D               	goto	l851
  7688     063A                     u1940:
  7689     063A                     l848:	
  7690                           ;sspa.c: 87:                 do { LATCbits.LATC6 = 1; } while(0);
  7691                           
  7692     063A  0022               	movlb	2	; select bank2
  7693     063B  170E               	bsf	14,6	;volatile
  7694     063C  2E54               	goto	l3867
  7695     063D                     l851:	
  7696                           ;sspa.c: 89:                 do { LATCbits.LATC6 = 0; } while(0);
  7697                           
  7698     063D  0022               	movlb	2	; select bank2
  7699     063E  130E               	bcf	14,6	;volatile
  7700     063F  2E54               	goto	l3867
  7701     0640                     l3865:
  7702     0640  0875               	movf	SSPA_setMute@band,w
  7703     0641  0020               	movlb	0	; select bank0
  7704     0642  00A0               	movwf	??_SSPA_setMute
  7705     0643  01A1               	clrf	??_SSPA_setMute+1
  7706                           
  7707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7708                           ; Switch size 1, requested type "simple"
  7709                           ; Number of cases is 1, Range of values is 0 to 0
  7710                           ; switch strategies available:
  7711                           ; Name         Instructions Cycles
  7712                           ; simple_byte            4     3 (average)
  7713                           ; direct_byte            8     6 (fixed)
  7714                           ; jumptable            260     6 (fixed)
  7715                           ;	Chosen strategy is simple_byte
  7716     0644  0821               	movf	??_SSPA_setMute+1,w
  7717     0645  3A00               	xorlw	0	; case 0
  7718     0646  1903               	skipnz
  7719     0647  2E49               	goto	l4215
  7720     0648  2E54               	goto	l3867
  7721     0649                     l4215:
  7722                           
  7723                           ; Switch size 1, requested type "simple"
  7724                           ; Number of cases is 3, Range of values is 0 to 2
  7725                           ; switch strategies available:
  7726                           ; Name         Instructions Cycles
  7727                           ; simple_byte           10     6 (average)
  7728                           ; direct_byte           12     6 (fixed)
  7729                           ; jumptable            260     6 (fixed)
  7730                           ;	Chosen strategy is simple_byte
  7731     0649  0820               	movf	??_SSPA_setMute,w
  7732     064A  3A00               	xorlw	0	; case 0
  7733     064B  1903               	skipnz
  7734     064C  2E54               	goto	l3867
  7735     064D  3A01               	xorlw	1	; case 1
  7736     064E  1903               	skipnz
  7737     064F  2E2A               	goto	l3859
  7738     0650  3A03               	xorlw	3	; case 2
  7739     0651  1903               	skipnz
  7740     0652  2E35               	goto	l3861
  7741     0653  2E54               	goto	l3867
  7742     0654                     l3867:
  7743                           
  7744                           ;sspa.c: 97:     sspas[band].m_Mute = mute;
  7745     0654  0875               	movf	SSPA_setMute@band,w
  7746     0655  0020               	movlb	0	; select bank0
  7747     0656  00A0               	movwf	??_SSPA_setMute
  7748     0657  3002               	movlw	2
  7749     0658                     u1955:
  7750     0658  35A0               	lslf	??_SSPA_setMute,f
  7751     0659  3EFF               	addlw	-1
  7752     065A  1D03               	skipz
  7753     065B  2E58               	goto	u1955
  7754     065C  3520               	lslf	??_SSPA_setMute,w
  7755     065D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7756     065E  0086               	movwf	6
  7757     065F  0187               	clrf	7
  7758     0660  0874               	movf	SSPA_setMute@mute,w
  7759     0661  0081               	movwf	1
  7760     0662                     l855:
  7761     0662  0008               	return
  7762     0663                     __end_of_SSPA_setMute:
  7763                           
  7764                           	psect	text17
  7765     05AE                     __ptext17:	
  7766 ;; *************** function _SSPA_getTemp *****************
  7767 ;; Defined at:
  7768 ;;		line 104 in file "sspa.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  band            1    wreg     enum E40
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  band            1   45[BANK0 ] enum E40
  7773 ;;  adc_value       2   42[BANK0 ] unsigned short 
  7774 ;;  channel         1   44[BANK0 ] enum E9257
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7784 ;;      Params:         0       0       0       0       0       0       0       0
  7785 ;;      Locals:         0       4       0       0       0       0       0       0
  7786 ;;      Temps:          0       2       0       0       0       0       0       0
  7787 ;;      Totals:         0       6       0       0       0       0       0       0
  7788 ;;Total ram usage:        6 bytes
  7789 ;; Hardware stack levels used: 1
  7790 ;; Hardware stack levels required when called: 9
  7791 ;; This function calls:
  7792 ;;		_ADC2Celsius
  7793 ;;		_getADCValue
  7794 ;; This function is called by:
  7795 ;;		_ProcessMsg
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799     05AE                     _SSPA_getTemp:	
  7800                           ;psect for function _SSPA_getTemp
  7801                           
  7802                           
  7803                           ;incstack = 0
  7804                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7805                           ;SSPA_getTemp@band stored from wreg
  7806     05AE  0020               	movlb	0	; select bank0
  7807     05AF  00CD               	movwf	SSPA_getTemp@band
  7808     05B0                     l3773:
  7809                           
  7810                           ;sspa.c: 105:     adc_channel_t channel;;sspa.c: 106:     adc_result_t adc_value;;sspa.c
      +                          : 108:     switch (band) {
  7811     05B0  2DB7               	goto	l3781
  7812     05B1                     l3775:
  7813                           
  7814                           ;sspa.c: 110:             channel = TM_Ka;
  7815     05B1  3003               	movlw	3
  7816     05B2  00CC               	movwf	SSPA_getTemp@channel
  7817                           
  7818                           ;sspa.c: 112:             break;
  7819     05B3  2DCA               	goto	l3783
  7820     05B4                     l3777:
  7821                           
  7822                           ;sspa.c: 114:             channel = TM_X;
  7823     05B4  3007               	movlw	7
  7824     05B5  00CC               	movwf	SSPA_getTemp@channel
  7825                           
  7826                           ;sspa.c: 115:             break;
  7827     05B6  2DCA               	goto	l3783
  7828     05B7                     l3781:
  7829     05B7  084D               	movf	SSPA_getTemp@band,w
  7830     05B8  00C8               	movwf	??_SSPA_getTemp
  7831     05B9  01C9               	clrf	??_SSPA_getTemp+1
  7832                           
  7833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7834                           ; Switch size 1, requested type "simple"
  7835                           ; Number of cases is 1, Range of values is 0 to 0
  7836                           ; switch strategies available:
  7837                           ; Name         Instructions Cycles
  7838                           ; simple_byte            4     3 (average)
  7839                           ; direct_byte            8     6 (fixed)
  7840                           ; jumptable            260     6 (fixed)
  7841                           ;	Chosen strategy is simple_byte
  7842     05BA  0849               	movf	??_SSPA_getTemp+1,w
  7843     05BB  3A00               	xorlw	0	; case 0
  7844     05BC  1903               	skipnz
  7845     05BD  2DBF               	goto	l4217
  7846     05BE  2DCA               	goto	l3783
  7847     05BF                     l4217:
  7848                           
  7849                           ; Switch size 1, requested type "simple"
  7850                           ; Number of cases is 3, Range of values is 0 to 2
  7851                           ; switch strategies available:
  7852                           ; Name         Instructions Cycles
  7853                           ; simple_byte           10     6 (average)
  7854                           ; direct_byte           12     6 (fixed)
  7855                           ; jumptable            260     6 (fixed)
  7856                           ;	Chosen strategy is simple_byte
  7857     05BF  0848               	movf	??_SSPA_getTemp,w
  7858     05C0  3A00               	xorlw	0	; case 0
  7859     05C1  1903               	skipnz
  7860     05C2  2DCA               	goto	l3783
  7861     05C3  3A01               	xorlw	1	; case 1
  7862     05C4  1903               	skipnz
  7863     05C5  2DB1               	goto	l3775
  7864     05C6  3A03               	xorlw	3	; case 2
  7865     05C7  1903               	skipnz
  7866     05C8  2DB4               	goto	l3777
  7867     05C9  2DCA               	goto	l3783
  7868     05CA                     l3783:
  7869                           
  7870                           ;sspa.c: 122:     adc_value = getADCValue(channel);
  7871     05CA  084C               	movf	SSPA_getTemp@channel,w
  7872     05CB  3186  269C  3185   	fcall	_getADCValue
  7873     05CE  0020               	movlb	0	; select bank0
  7874     05CF  0821               	movf	?_getADCValue+1,w
  7875     05D0  00CB               	movwf	SSPA_getTemp@adc_value+1
  7876     05D1  0820               	movf	?_getADCValue,w
  7877     05D2  00CA               	movwf	SSPA_getTemp@adc_value
  7878     05D3                     l3785:
  7879                           
  7880                           ;sspa.c: 124:     sspas[band].m_wTemp = ADC2Celsius(adc_value);
  7881     05D3  084B               	movf	SSPA_getTemp@adc_value+1,w
  7882     05D4  00BB               	movwf	ADC2Celsius@v+1
  7883     05D5  084A               	movf	SSPA_getTemp@adc_value,w
  7884     05D6  00BA               	movwf	ADC2Celsius@v
  7885     05D7  3183  23D1  3185   	fcall	_ADC2Celsius
  7886     05DA  0020               	movlb	0	; select bank0
  7887     05DB  084D               	movf	SSPA_getTemp@band,w
  7888     05DC  00C8               	movwf	??_SSPA_getTemp
  7889     05DD  3002               	movlw	2
  7890     05DE                     u1855:
  7891     05DE  35C8               	lslf	??_SSPA_getTemp,f
  7892     05DF  3EFF               	addlw	-1
  7893     05E0  1D03               	skipz
  7894     05E1  2DDE               	goto	u1855
  7895     05E2  3548               	lslf	??_SSPA_getTemp,w
  7896     05E3  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7897     05E4  0086               	movwf	6
  7898     05E5  0187               	clrf	7
  7899     05E6  083A               	movf	?_ADC2Celsius,w
  7900     05E7  3FC0               	movwi [0]fsr1
  7901     05E8  083B               	movf	?_ADC2Celsius+1,w
  7902     05E9  3FC1               	movwi [1]fsr1
  7903     05EA                     l864:
  7904     05EA  0008               	return
  7905     05EB                     __end_of_SSPA_getTemp:
  7906                           
  7907                           	psect	text18
  7908     03D1                     __ptext18:	
  7909 ;; *************** function _ADC2Celsius *****************
  7910 ;; Defined at:
  7911 ;;		line 50 in file "sspa.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  v               2   26[BANK0 ] unsigned short 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  result          4   36[BANK0 ] long 
  7916 ;;  value           4   32[BANK0 ] long 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  2   26[BANK0 ] short 
  7919 ;; Registers used:
  7920 ;;		wreg, status,2, status,0, pclath, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7926 ;;      Params:         0       2       0       0       0       0       0       0
  7927 ;;      Locals:         0       8       0       0       0       0       0       0
  7928 ;;      Temps:          0       4       0       0       0       0       0       0
  7929 ;;      Totals:         0      14       0       0       0       0       0       0
  7930 ;;Total ram usage:       14 bytes
  7931 ;; Hardware stack levels used: 1
  7932 ;; Hardware stack levels required when called: 8
  7933 ;; This function calls:
  7934 ;;		___aldiv
  7935 ;;		___lmul
  7936 ;; This function is called by:
  7937 ;;		_SSPA_getTemp
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941     03D1                     _ADC2Celsius:	
  7942                           ;psect for function _ADC2Celsius
  7943                           
  7944     03D1                     l3749:	
  7945                           ;incstack = 0
  7946                           ; Regs used in _ADC2Celsius: [wreg+status,2+status,0+pclath+cstack]
  7947                           
  7948                           
  7949                           ;sspa.c: 51:     int32_t value = (int32_t) v;
  7950     03D1  0020               	movlb	0	; select bank0
  7951     03D2  083A               	movf	ADC2Celsius@v,w
  7952     03D3  00C0               	movwf	ADC2Celsius@value
  7953     03D4  083B               	movf	ADC2Celsius@v+1,w
  7954     03D5  00C1               	movwf	ADC2Celsius@value+1
  7955     03D6  01C2               	clrf	ADC2Celsius@value+2
  7956     03D7  01C3               	clrf	ADC2Celsius@value+3
  7957     03D8                     l3751:
  7958                           
  7959                           ;sspa.c: 52:     int32_t result = (int16_t)(160) - (value * (int16_t)(367822)) / (int16_
      +                          t)(1024000);
  7960     03D8  30FF               	movlw	255
  7961     03D9  00AF               	movwf	___aldiv@divisor+3
  7962     03DA  30FF               	movlw	255
  7963     03DB  00AE               	movwf	___aldiv@divisor+2
  7964     03DC  30A0               	movlw	160
  7965     03DD  00AD               	movwf	___aldiv@divisor+1
  7966     03DE  3000               	movlw	0
  7967     03DF  00AC               	movwf	___aldiv@divisor
  7968     03E0  0843               	movf	ADC2Celsius@value+3,w
  7969     03E1  00A3               	movwf	___lmul@multiplier+3
  7970     03E2  0842               	movf	ADC2Celsius@value+2,w
  7971     03E3  00A2               	movwf	___lmul@multiplier+2
  7972     03E4  0841               	movf	ADC2Celsius@value+1,w
  7973     03E5  00A1               	movwf	___lmul@multiplier+1
  7974     03E6  0840               	movf	ADC2Celsius@value,w
  7975     03E7  00A0               	movwf	___lmul@multiplier
  7976     03E8  30FF               	movlw	255
  7977     03E9  00A7               	movwf	___lmul@multiplicand+3
  7978     03EA  30FF               	movlw	255
  7979     03EB  00A6               	movwf	___lmul@multiplicand+2
  7980     03EC  309C               	movlw	156
  7981     03ED  00A5               	movwf	___lmul@multiplicand+1
  7982     03EE  30CE               	movlw	206
  7983     03EF  00A4               	movwf	___lmul@multiplicand
  7984     03F0  3187  2708  3183   	fcall	___lmul
  7985     03F3  0020               	movlb	0	; select bank0
  7986     03F4  0823               	movf	?___lmul+3,w
  7987     03F5  00B3               	movwf	___aldiv@dividend+3
  7988     03F6  0822               	movf	?___lmul+2,w
  7989     03F7  00B2               	movwf	___aldiv@dividend+2
  7990     03F8  0821               	movf	?___lmul+1,w
  7991     03F9  00B1               	movwf	___aldiv@dividend+1
  7992     03FA  0820               	movf	?___lmul,w
  7993     03FB  00B0               	movwf	___aldiv@dividend
  7994     03FC  3182  2260  3183   	fcall	___aldiv
  7995     03FF  30A0               	movlw	160
  7996     0400  0020               	movlb	0	; select bank0
  7997     0401  00BC               	movwf	??_ADC2Celsius
  7998     0402  3000               	movlw	0
  7999     0403  00BD               	movwf	??_ADC2Celsius+1
  8000     0404  3000               	movlw	0
  8001     0405  00BE               	movwf	??_ADC2Celsius+2
  8002     0406  3000               	movlw	0
  8003     0407  00BF               	movwf	??_ADC2Celsius+3
  8004     0408  082C               	movf	?___aldiv,w
  8005     0409  02BC               	subwf	??_ADC2Celsius,f
  8006     040A  082D               	movf	?___aldiv+1,w
  8007     040B  3BBD               	subwfb	??_ADC2Celsius+1,f
  8008     040C  082E               	movf	?___aldiv+2,w
  8009     040D  3BBE               	subwfb	??_ADC2Celsius+2,f
  8010     040E  082F               	movf	?___aldiv+3,w
  8011     040F  3BBF               	subwfb	??_ADC2Celsius+3,f
  8012     0410  083F               	movf	??_ADC2Celsius+3,w
  8013     0411  00C7               	movwf	ADC2Celsius@result+3
  8014     0412  083E               	movf	??_ADC2Celsius+2,w
  8015     0413  00C6               	movwf	ADC2Celsius@result+2
  8016     0414  083D               	movf	??_ADC2Celsius+1,w
  8017     0415  00C5               	movwf	ADC2Celsius@result+1
  8018     0416  083C               	movf	??_ADC2Celsius,w
  8019     0417  00C4               	movwf	ADC2Celsius@result
  8020     0418                     l3753:
  8021                           
  8022                           ;sspa.c: 54:     return (int16_t) result;
  8023     0418  0845               	movf	ADC2Celsius@result+1,w
  8024     0419  00BB               	movwf	?_ADC2Celsius+1
  8025     041A  0844               	movf	ADC2Celsius@result,w
  8026     041B  00BA               	movwf	?_ADC2Celsius
  8027     041C                     l828:
  8028     041C  0008               	return
  8029     041D                     __end_of_ADC2Celsius:
  8030                           
  8031                           	psect	text19
  8032     02F0                     __ptext19:	
  8033 ;; *************** function _SSPA_getPOut *****************
  8034 ;; Defined at:
  8035 ;;		line 131 in file "sspa.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  band            1    wreg     enum E40
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  band            1   42[BANK0 ] enum E40
  8040 ;;  adc_value       2   40[BANK0 ] unsigned short 
  8041 ;;  channel         1    0        enum E9257
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8051 ;;      Params:         0       0       0       0       0       0       0       0
  8052 ;;      Locals:         0       3       0       0       0       0       0       0
  8053 ;;      Temps:          0       2       0       0       0       0       0       0
  8054 ;;      Totals:         0       5       0       0       0       0       0       0
  8055 ;;Total ram usage:        5 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; Hardware stack levels required when called: 9
  8058 ;; This function calls:
  8059 ;;		_ADC2Amp
  8060 ;;		_ADC2dBm
  8061 ;;		_getADCValue
  8062 ;; This function is called by:
  8063 ;;		_ProcessMsg
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067     02F0                     _SSPA_getPOut:	
  8068                           ;psect for function _SSPA_getPOut
  8069                           
  8070                           
  8071                           ;incstack = 0
  8072                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8073                           ;SSPA_getPOut@band stored from wreg
  8074     02F0  0020               	movlb	0	; select bank0
  8075     02F1  00CA               	movwf	SSPA_getPOut@band
  8076     02F2                     l3797:
  8077                           
  8078                           ;sspa.c: 132:     adc_channel_t channel;;sspa.c: 133:     adc_result_t adc_value;;sspa.c
      +                          : 135:     switch (band) {
  8079     02F2  2B66               	goto	l3819
  8080     02F3                     l868:	
  8081                           ;sspa.c: 136:         case ANTENNABAND_KA:
  8082                           
  8083     02F3                     l3799:
  8084                           
  8085                           ;sspa.c: 138:             adc_value = getADCValue(channel);
  8086     02F3  3001               	movlw	1
  8087     02F4  3186  269C  3182   	fcall	_getADCValue
  8088     02F7  0020               	movlb	0	; select bank0
  8089     02F8  0821               	movf	?_getADCValue+1,w
  8090     02F9  00C9               	movwf	SSPA_getPOut@adc_value+1
  8091     02FA  0820               	movf	?_getADCValue,w
  8092     02FB  00C8               	movwf	SSPA_getPOut@adc_value
  8093     02FC                     l3801:
  8094                           
  8095                           ;sspa.c: 139:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8096     02FC  0849               	movf	SSPA_getPOut@adc_value+1,w
  8097     02FD  00BB               	movwf	ADC2Amp@v+1
  8098     02FE  0848               	movf	SSPA_getPOut@adc_value,w
  8099     02FF  00BA               	movwf	ADC2Amp@v
  8100     0300  3184  24F0  3182   	fcall	_ADC2Amp
  8101     0303  0020               	movlb	0	; select bank0
  8102     0304  084A               	movf	SSPA_getPOut@band,w
  8103     0305  00C6               	movwf	??_SSPA_getPOut
  8104     0306  3002               	movlw	2
  8105     0307                     u1865:
  8106     0307  35C6               	lslf	??_SSPA_getPOut,f
  8107     0308  3EFF               	addlw	-1
  8108     0309  1D03               	skipz
  8109     030A  2B07               	goto	u1865
  8110     030B  3546               	lslf	??_SSPA_getPOut,w
  8111     030C  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8112     030D  0086               	movwf	6
  8113     030E  0187               	clrf	7
  8114     030F  083A               	movf	?_ADC2Amp,w
  8115     0310  3FC0               	movwi [0]fsr1
  8116     0311  083B               	movf	?_ADC2Amp+1,w
  8117     0312  3FC1               	movwi [1]fsr1
  8118     0313  083C               	movf	?_ADC2Amp+2,w
  8119     0314  3FC2               	movwi [2]fsr1
  8120     0315  083D               	movf	?_ADC2Amp+3,w
  8121     0316  3FC3               	movwi [3]fsr1
  8122     0317                     l3803:
  8123                           
  8124                           ;sspa.c: 140:             sspas[band].m_bPOut = 0xFF;
  8125     0317  084A               	movf	SSPA_getPOut@band,w
  8126     0318  00C6               	movwf	??_SSPA_getPOut
  8127     0319  3002               	movlw	2
  8128     031A                     u1875:
  8129     031A  35C6               	lslf	??_SSPA_getPOut,f
  8130     031B  3EFF               	addlw	-1
  8131     031C  1D03               	skipz
  8132     031D  2B1A               	goto	u1875
  8133     031E  3546               	lslf	??_SSPA_getPOut,w
  8134     031F  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8135     0320  0086               	movwf	6
  8136     0321  0187               	clrf	7
  8137     0322  30FF               	movlw	255
  8138     0323  0081               	movwf	1
  8139                           
  8140                           ;sspa.c: 141:             break;
  8141     0324  2B79               	goto	l873
  8142     0325                     l3805:
  8143     0325                     l3807:
  8144                           
  8145                           ;sspa.c: 145:             adc_value = getADCValue(channel);
  8146     0325  300A               	movlw	10
  8147     0326  3186  269C  3182   	fcall	_getADCValue
  8148     0329  0020               	movlb	0	; select bank0
  8149     032A  0821               	movf	?_getADCValue+1,w
  8150     032B  00C9               	movwf	SSPA_getPOut@adc_value+1
  8151     032C  0820               	movf	?_getADCValue,w
  8152     032D  00C8               	movwf	SSPA_getPOut@adc_value
  8153     032E                     l3809:
  8154                           
  8155                           ;sspa.c: 146:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8156     032E  0849               	movf	SSPA_getPOut@adc_value+1,w
  8157     032F  00BB               	movwf	ADC2Amp@v+1
  8158     0330  0848               	movf	SSPA_getPOut@adc_value,w
  8159     0331  00BA               	movwf	ADC2Amp@v
  8160     0332  3184  24F0  3182   	fcall	_ADC2Amp
  8161     0335  0020               	movlb	0	; select bank0
  8162     0336  084A               	movf	SSPA_getPOut@band,w
  8163     0337  00C6               	movwf	??_SSPA_getPOut
  8164     0338  3002               	movlw	2
  8165     0339                     u1885:
  8166     0339  35C6               	lslf	??_SSPA_getPOut,f
  8167     033A  3EFF               	addlw	-1
  8168     033B  1D03               	skipz
  8169     033C  2B39               	goto	u1885
  8170     033D  3546               	lslf	??_SSPA_getPOut,w
  8171     033E  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8172     033F  0086               	movwf	6
  8173     0340  0187               	clrf	7
  8174     0341  083A               	movf	?_ADC2Amp,w
  8175     0342  3FC0               	movwi [0]fsr1
  8176     0343  083B               	movf	?_ADC2Amp+1,w
  8177     0344  3FC1               	movwi [1]fsr1
  8178     0345  083C               	movf	?_ADC2Amp+2,w
  8179     0346  3FC2               	movwi [2]fsr1
  8180     0347  083D               	movf	?_ADC2Amp+3,w
  8181     0348  3FC3               	movwi [3]fsr1
  8182     0349                     l3811:
  8183     0349                     l3813:
  8184                           
  8185                           ;sspa.c: 148:             adc_value = getADCValue(channel);
  8186     0349  3000               	movlw	0
  8187     034A  3186  269C  3182   	fcall	_getADCValue
  8188     034D  0020               	movlb	0	; select bank0
  8189     034E  0821               	movf	?_getADCValue+1,w
  8190     034F  00C9               	movwf	SSPA_getPOut@adc_value+1
  8191     0350  0820               	movf	?_getADCValue,w
  8192     0351  00C8               	movwf	SSPA_getPOut@adc_value
  8193     0352                     l3815:
  8194                           
  8195                           ;sspa.c: 149:             sspas[band].m_bPOut = (uint8_t) ADC2dBm(adc_value);
  8196     0352  084A               	movf	SSPA_getPOut@band,w
  8197     0353  00C6               	movwf	??_SSPA_getPOut
  8198     0354  3002               	movlw	2
  8199     0355                     u1895:
  8200     0355  35C6               	lslf	??_SSPA_getPOut,f
  8201     0356  3EFF               	addlw	-1
  8202     0357  1D03               	skipz
  8203     0358  2B55               	goto	u1895
  8204     0359  3546               	lslf	??_SSPA_getPOut,w
  8205     035A  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8206     035B  0086               	movwf	6
  8207     035C  0187               	clrf	7
  8208     035D  0849               	movf	SSPA_getPOut@adc_value+1,w
  8209     035E  00BB               	movwf	ADC2dBm@v+1
  8210     035F  0848               	movf	SSPA_getPOut@adc_value,w
  8211     0360  00BA               	movwf	ADC2dBm@v
  8212     0361  3185  25EB  3182   	fcall	_ADC2dBm
  8213     0364  0081               	movwf	1
  8214                           
  8215                           ;sspa.c: 150:             break;
  8216     0365  2B79               	goto	l873
  8217     0366                     l3819:
  8218     0366  084A               	movf	SSPA_getPOut@band,w
  8219     0367  00C6               	movwf	??_SSPA_getPOut
  8220     0368  01C7               	clrf	??_SSPA_getPOut+1
  8221                           
  8222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8223                           ; Switch size 1, requested type "simple"
  8224                           ; Number of cases is 1, Range of values is 0 to 0
  8225                           ; switch strategies available:
  8226                           ; Name         Instructions Cycles
  8227                           ; simple_byte            4     3 (average)
  8228                           ; direct_byte            8     6 (fixed)
  8229                           ; jumptable            260     6 (fixed)
  8230                           ;	Chosen strategy is simple_byte
  8231     0369  0847               	movf	??_SSPA_getPOut+1,w
  8232     036A  3A00               	xorlw	0	; case 0
  8233     036B  1903               	skipnz
  8234     036C  2B6E               	goto	l4219
  8235     036D  2B79               	goto	l873
  8236     036E                     l4219:
  8237                           
  8238                           ; Switch size 1, requested type "simple"
  8239                           ; Number of cases is 3, Range of values is 0 to 2
  8240                           ; switch strategies available:
  8241                           ; Name         Instructions Cycles
  8242                           ; simple_byte           10     6 (average)
  8243                           ; direct_byte           12     6 (fixed)
  8244                           ; jumptable            260     6 (fixed)
  8245                           ;	Chosen strategy is simple_byte
  8246     036E  0846               	movf	??_SSPA_getPOut,w
  8247     036F  3A00               	xorlw	0	; case 0
  8248     0370  1903               	skipnz
  8249     0371  2B79               	goto	l873
  8250     0372  3A01               	xorlw	1	; case 1
  8251     0373  1903               	skipnz
  8252     0374  2AF3               	goto	l868
  8253     0375  3A03               	xorlw	3	; case 2
  8254     0376  1903               	skipnz
  8255     0377  2B25               	goto	l3805
  8256     0378  2B79               	goto	l873
  8257     0379                     l873:
  8258     0379  0008               	return
  8259     037A                     __end_of_SSPA_getPOut:
  8260                           
  8261                           	psect	text20
  8262     069C                     __ptext20:	
  8263 ;; *************** function _getADCValue *****************
  8264 ;; Defined at:
  8265 ;;		line 37 in file "sspa.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  channel         1    wreg     enum E9257
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  channel         1    4[BANK0 ] enum E9257
  8270 ;;  i               1    7[BANK0 ] unsigned char 
  8271 ;;  sum             2    5[BANK0 ] unsigned short 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  2    0[BANK0 ] unsigned short 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0, pclath, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8281 ;;      Params:         0       2       0       0       0       0       0       0
  8282 ;;      Locals:         0       4       0       0       0       0       0       0
  8283 ;;      Temps:          0       2       0       0       0       0       0       0
  8284 ;;      Totals:         0       8       0       0       0       0       0       0
  8285 ;;Total ram usage:        8 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; Hardware stack levels required when called: 8
  8288 ;; This function calls:
  8289 ;;		_ADC_GetConversionResult
  8290 ;;		_ADC_IsConversionDone
  8291 ;;		_ADC_SelectChannel
  8292 ;;		_ADC_StartConversion
  8293 ;; This function is called by:
  8294 ;;		_SSPA_getTemp
  8295 ;;		_SSPA_getPOut
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299     069C                     _getADCValue:	
  8300                           ;psect for function _getADCValue
  8301                           
  8302                           
  8303                           ;incstack = 0
  8304                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8305                           ;getADCValue@channel stored from wreg
  8306     069C  0020               	movlb	0	; select bank0
  8307     069D  00A4               	movwf	getADCValue@channel
  8308     069E                     l3727:
  8309                           
  8310                           ;sspa.c: 38:     adc_result_t sum = 0;
  8311     069E  01A5               	clrf	getADCValue@sum
  8312     069F  01A6               	clrf	getADCValue@sum+1
  8313     06A0                     l3729:
  8314                           
  8315                           ;sspa.c: 40:     ADC_StartConversion();
  8316     06A0  318D  250D  3186   	fcall	_ADC_StartConversion
  8317     06A3                     l3731:
  8318                           
  8319                           ;sspa.c: 41:     ADC_SelectChannel(channel);
  8320     06A3  0020               	movlb	0	; select bank0
  8321     06A4  0824               	movf	getADCValue@channel,w
  8322     06A5  318D  25E4  3186   	fcall	_ADC_SelectChannel
  8323     06A8                     l3733:
  8324                           
  8325                           ;sspa.c: 43:     for (uint8_t i = 0; i < 32; i++)
  8326     06A8  0020               	movlb	0	; select bank0
  8327     06A9  01A7               	clrf	getADCValue@i
  8328     06AA                     l3737:
  8329                           
  8330                           ;sspa.c: 44:         if (ADC_IsConversionDone())
  8331     06AA  318D  259D  3186   	fcall	_ADC_IsConversionDone
  8332     06AD  3A00               	xorlw	0
  8333     06AE  1903               	skipnz
  8334     06AF  2EB1               	goto	u1821
  8335     06B0  2EB2               	goto	u1820
  8336     06B1                     u1821:
  8337     06B1  2EBA               	goto	l3741
  8338     06B2                     u1820:
  8339     06B2                     l3739:
  8340                           
  8341                           ;sspa.c: 45:             sum += ADC_GetConversionResult();
  8342     06B2  318D  2562  3186   	fcall	_ADC_GetConversionResult
  8343     06B5  0874               	movf	?_ADC_GetConversionResult,w
  8344     06B6  0020               	movlb	0	; select bank0
  8345     06B7  07A5               	addwf	getADCValue@sum,f
  8346     06B8  0875               	movf	?_ADC_GetConversionResult+1,w
  8347     06B9  3DA6               	addwfc	getADCValue@sum+1,f
  8348     06BA                     l3741:
  8349     06BA  3001               	movlw	1
  8350     06BB  0020               	movlb	0	; select bank0
  8351     06BC  00A2               	movwf	??_getADCValue
  8352     06BD  0822               	movf	??_getADCValue,w
  8353     06BE  07A7               	addwf	getADCValue@i,f
  8354     06BF                     l3743:
  8355     06BF  3020               	movlw	32
  8356     06C0  0227               	subwf	getADCValue@i,w
  8357     06C1  1C03               	skipc
  8358     06C2  2EC4               	goto	u1831
  8359     06C3  2EC5               	goto	u1830
  8360     06C4                     u1831:
  8361     06C4  2EAA               	goto	l3737
  8362     06C5                     u1830:
  8363     06C5                     l3745:
  8364                           
  8365                           ;sspa.c: 47:     return sum >> 5;
  8366     06C5  0826               	movf	getADCValue@sum+1,w
  8367     06C6  00A3               	movwf	??_getADCValue+1
  8368     06C7  0825               	movf	getADCValue@sum,w
  8369     06C8  00A2               	movwf	??_getADCValue
  8370     06C9  3005               	movlw	5
  8371     06CA                     u1845:
  8372     06CA  36A3               	lsrf	??_getADCValue+1,f
  8373     06CB  0CA2               	rrf	??_getADCValue,f
  8374     06CC  0B89               	decfsz	9,f
  8375     06CD  2ECA               	goto	u1845
  8376     06CE  0822               	movf	??_getADCValue,w
  8377     06CF  00A0               	movwf	?_getADCValue
  8378     06D0  0823               	movf	??_getADCValue+1,w
  8379     06D1  00A1               	movwf	?_getADCValue+1
  8380     06D2                     l825:
  8381     06D2  0008               	return
  8382     06D3                     __end_of_getADCValue:
  8383                           
  8384                           	psect	text21
  8385     0D0D                     __ptext21:	
  8386 ;; *************** function _ADC_StartConversion *****************
  8387 ;; Defined at:
  8388 ;;		line 88 in file "mcc_generated_files/adc/src/adc.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;		None
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;		None
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  1    wreg      void 
  8395 ;; Registers used:
  8396 ;;		None
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8402 ;;      Params:         0       0       0       0       0       0       0       0
  8403 ;;      Locals:         0       0       0       0       0       0       0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0       0
  8405 ;;      Totals:         0       0       0       0       0       0       0       0
  8406 ;;Total ram usage:        0 bytes
  8407 ;; Hardware stack levels used: 1
  8408 ;; Hardware stack levels required when called: 7
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_getADCValue
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416     0D0D                     _ADC_StartConversion:	
  8417                           ;psect for function _ADC_StartConversion
  8418                           
  8419     0D0D                     l3541:	
  8420                           ;incstack = 0
  8421                           ; Regs used in _ADC_StartConversion: []
  8422                           
  8423                           
  8424                           ;mcc_generated_files/adc/src/adc.c: 91:     ADCON0bits.GO_nDONE = 1;
  8425     0D0D  0021               	movlb	1	; select bank1
  8426     0D0E  149D               	bsf	29,1	;volatile
  8427     0D0F                     l33:
  8428     0D0F  0008               	return
  8429     0D10                     __end_of_ADC_StartConversion:
  8430                           
  8431                           	psect	text22
  8432     0DE4                     __ptext22:	
  8433 ;; *************** function _ADC_SelectChannel *****************
  8434 ;; Defined at:
  8435 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  channel         1    wreg     enum E9234
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  channel         1    5[COMMON] enum E9234
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8449 ;;      Params:         0       0       0       0       0       0       0       0
  8450 ;;      Locals:         1       0       0       0       0       0       0       0
  8451 ;;      Temps:          1       0       0       0       0       0       0       0
  8452 ;;      Totals:         2       0       0       0       0       0       0       0
  8453 ;;Total ram usage:        2 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 7
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_getADCValue
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463     0DE4                     _ADC_SelectChannel:	
  8464                           ;psect for function _ADC_SelectChannel
  8465                           
  8466                           
  8467                           ;incstack = 0
  8468                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8469                           ;ADC_SelectChannel@channel stored from wreg
  8470     0DE4  00F5               	movwf	ADC_SelectChannel@channel
  8471     0DE5                     l3539:
  8472                           
  8473                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
  8474     0DE5  0875               	movf	ADC_SelectChannel@channel,w
  8475     0DE6  00F4               	movwf	??_ADC_SelectChannel
  8476     0DE7  0DF4               	rlf	??_ADC_SelectChannel,f
  8477     0DE8  0DF4               	rlf	??_ADC_SelectChannel,f
  8478     0DE9  0021               	movlb	1	; select bank1
  8479     0DEA  081D               	movf	29,w	;volatile
  8480     0DEB  0674               	xorwf	??_ADC_SelectChannel,w
  8481     0DEC  3983               	andlw	-125
  8482     0DED  0674               	xorwf	??_ADC_SelectChannel,w
  8483     0DEE  009D               	movwf	29	;volatile
  8484     0DEF                     l30:
  8485     0DEF  0008               	return
  8486     0DF0                     __end_of_ADC_SelectChannel:
  8487                           
  8488                           	psect	text23
  8489     0D9D                     __ptext23:	
  8490 ;; *************** function _ADC_IsConversionDone *****************
  8491 ;; Defined at:
  8492 ;;		line 94 in file "mcc_generated_files/adc/src/adc.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;		None
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      _Bool 
  8499 ;; Registers used:
  8500 ;;		wreg, status,0
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8506 ;;      Params:         0       0       0       0       0       0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0
  8509 ;;      Totals:         0       0       0       0       0       0       0       0
  8510 ;;Total ram usage:        0 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 7
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_getADCValue
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520     0D9D                     _ADC_IsConversionDone:	
  8521                           ;psect for function _ADC_IsConversionDone
  8522                           
  8523     0D9D                     l3543:	
  8524                           ;incstack = 0
  8525                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  8526                           
  8527                           
  8528                           ;mcc_generated_files/adc/src/adc.c: 97:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8529     0D9D  1003               	clrc
  8530     0D9E  0021               	movlb	1	; select bank1
  8531     0D9F  1C9D               	btfss	29,1	;volatile
  8532     0DA0  1403               	setc
  8533     0DA1  3000               	movlw	0
  8534     0DA2  3D09               	addwfc	9,w
  8535     0DA3                     l36:
  8536     0DA3  0008               	return
  8537     0DA4                     __end_of_ADC_IsConversionDone:
  8538                           
  8539                           	psect	text24
  8540     0D62                     __ptext24:	
  8541 ;; *************** function _ADC_GetConversionResult *****************
  8542 ;; Defined at:
  8543 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;		None
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;		None
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  2    4[COMMON] unsigned short 
  8550 ;; Registers used:
  8551 ;;		wreg
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8557 ;;      Params:         2       0       0       0       0       0       0       0
  8558 ;;      Locals:         0       0       0       0       0       0       0       0
  8559 ;;      Temps:          0       0       0       0       0       0       0       0
  8560 ;;      Totals:         2       0       0       0       0       0       0       0
  8561 ;;Total ram usage:        2 bytes
  8562 ;; Hardware stack levels used: 1
  8563 ;; Hardware stack levels required when called: 7
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		_getADCValue
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571     0D62                     _ADC_GetConversionResult:	
  8572                           ;psect for function _ADC_GetConversionResult
  8573                           
  8574     0D62                     l3547:	
  8575                           ;incstack = 0
  8576                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8577                           
  8578                           
  8579                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
  8580     0D62  0021               	movlb	1	; select bank1
  8581     0D63  081C               	movf	28,w	;volatile
  8582     0D64  00F5               	movwf	?_ADC_GetConversionResult+1
  8583     0D65  081B               	movf	27,w	;volatile
  8584     0D66  00F4               	movwf	?_ADC_GetConversionResult
  8585     0D67                     l39:
  8586     0D67  0008               	return
  8587     0D68                     __end_of_ADC_GetConversionResult:
  8588                           
  8589                           	psect	text25
  8590     05EB                     __ptext25:	
  8591 ;; *************** function _ADC2dBm *****************
  8592 ;; Defined at:
  8593 ;;		line 64 in file "sspa.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  v               2   26[BANK0 ] unsigned short 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  result          4   32[BANK0 ] long 
  8598 ;;  value           4   28[BANK0 ] long 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      unsigned char 
  8601 ;; Registers used:
  8602 ;;		wreg, status,2, status,0, pclath, cstack
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8608 ;;      Params:         0       2       0       0       0       0       0       0
  8609 ;;      Locals:         0       8       0       0       0       0       0       0
  8610 ;;      Temps:          0       0       0       0       0       0       0       0
  8611 ;;      Totals:         0      10       0       0       0       0       0       0
  8612 ;;Total ram usage:       10 bytes
  8613 ;; Hardware stack levels used: 1
  8614 ;; Hardware stack levels required when called: 8
  8615 ;; This function calls:
  8616 ;;		___aldiv
  8617 ;;		___lmul
  8618 ;; This function is called by:
  8619 ;;		_SSPA_getPOut
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623     05EB                     _ADC2dBm:	
  8624                           ;psect for function _ADC2dBm
  8625                           
  8626     05EB                     l3765:	
  8627                           ;incstack = 0
  8628                           ; Regs used in _ADC2dBm: [wreg+status,2+status,0+pclath+cstack]
  8629                           
  8630                           
  8631                           ;sspa.c: 65:     int32_t value = (int32_t) v;
  8632     05EB  0020               	movlb	0	; select bank0
  8633     05EC  083A               	movf	ADC2dBm@v,w
  8634     05ED  00BC               	movwf	ADC2dBm@value
  8635     05EE  083B               	movf	ADC2dBm@v+1,w
  8636     05EF  00BD               	movwf	ADC2dBm@value+1
  8637     05F0  01BE               	clrf	ADC2dBm@value+2
  8638     05F1  01BF               	clrf	ADC2dBm@value+3
  8639     05F2                     l3767:
  8640                           
  8641                           ;sspa.c: 66:     int32_t result = (uint16_t)(34) + (value * (uint16_t)(14319)) / (uint16
      +                          _t)(1024000);
  8642     05F2  3000               	movlw	0
  8643     05F3  00AF               	movwf	___aldiv@divisor+3
  8644     05F4  3000               	movlw	0
  8645     05F5  00AE               	movwf	___aldiv@divisor+2
  8646     05F6  30A0               	movlw	160
  8647     05F7  00AD               	movwf	___aldiv@divisor+1
  8648     05F8  3000               	movlw	0
  8649     05F9  00AC               	movwf	___aldiv@divisor
  8650     05FA  083F               	movf	ADC2dBm@value+3,w
  8651     05FB  00A3               	movwf	___lmul@multiplier+3
  8652     05FC  083E               	movf	ADC2dBm@value+2,w
  8653     05FD  00A2               	movwf	___lmul@multiplier+2
  8654     05FE  083D               	movf	ADC2dBm@value+1,w
  8655     05FF  00A1               	movwf	___lmul@multiplier+1
  8656     0600  083C               	movf	ADC2dBm@value,w
  8657     0601  00A0               	movwf	___lmul@multiplier
  8658     0602  3000               	movlw	0
  8659     0603  00A7               	movwf	___lmul@multiplicand+3
  8660     0604  3000               	movlw	0
  8661     0605  00A6               	movwf	___lmul@multiplicand+2
  8662     0606  3037               	movlw	55
  8663     0607  00A5               	movwf	___lmul@multiplicand+1
  8664     0608  30EF               	movlw	239
  8665     0609  00A4               	movwf	___lmul@multiplicand
  8666     060A  3187  2708  3185   	fcall	___lmul
  8667     060D  0020               	movlb	0	; select bank0
  8668     060E  0823               	movf	?___lmul+3,w
  8669     060F  00B3               	movwf	___aldiv@dividend+3
  8670     0610  0822               	movf	?___lmul+2,w
  8671     0611  00B2               	movwf	___aldiv@dividend+2
  8672     0612  0821               	movf	?___lmul+1,w
  8673     0613  00B1               	movwf	___aldiv@dividend+1
  8674     0614  0820               	movf	?___lmul,w
  8675     0615  00B0               	movwf	___aldiv@dividend
  8676     0616  3182  2260  3185   	fcall	___aldiv
  8677     0619  3022               	movlw	34
  8678     061A  0020               	movlb	0	; select bank0
  8679     061B  072C               	addwf	?___aldiv,w
  8680     061C  00C0               	movwf	ADC2dBm@result
  8681     061D  3000               	movlw	0
  8682     061E  3D2D               	addwfc	?___aldiv+1,w
  8683     061F  00C1               	movwf	ADC2dBm@result+1
  8684     0620  3000               	movlw	0
  8685     0621  3D2E               	addwfc	?___aldiv+2,w
  8686     0622  00C2               	movwf	ADC2dBm@result+2
  8687     0623  3000               	movlw	0
  8688     0624  3D2F               	addwfc	?___aldiv+3,w
  8689     0625  00C3               	movwf	ADC2dBm@result+3
  8690     0626                     l3769:
  8691                           
  8692                           ;sspa.c: 68:     return (uint8_t) result;
  8693     0626  0840               	movf	ADC2dBm@result,w
  8694     0627                     l834:
  8695     0627  0008               	return
  8696     0628                     __end_of_ADC2dBm:
  8697                           
  8698                           	psect	text26
  8699     04F0                     __ptext26:	
  8700 ;; *************** function _ADC2Amp *****************
  8701 ;; Defined at:
  8702 ;;		line 57 in file "sspa.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  v               2   26[BANK0 ] unsigned short 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  result          4   34[BANK0 ] long 
  8707 ;;  value           4   30[BANK0 ] long 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  4   26[BANK0 ] unsigned long 
  8710 ;; Registers used:
  8711 ;;		wreg, status,2, status,0, pclath, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8717 ;;      Params:         0       4       0       0       0       0       0       0
  8718 ;;      Locals:         0       8       0       0       0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0
  8720 ;;      Totals:         0      12       0       0       0       0       0       0
  8721 ;;Total ram usage:       12 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; Hardware stack levels required when called: 8
  8724 ;; This function calls:
  8725 ;;		___aldiv
  8726 ;;		___lmul
  8727 ;; This function is called by:
  8728 ;;		_SSPA_getPOut
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732     04F0                     _ADC2Amp:	
  8733                           ;psect for function _ADC2Amp
  8734                           
  8735     04F0                     l3757:	
  8736                           ;incstack = 0
  8737                           ; Regs used in _ADC2Amp: [wreg+status,2+status,0+pclath+cstack]
  8738                           
  8739                           
  8740                           ;sspa.c: 58:     int32_t value = (int32_t) v;
  8741     04F0  0020               	movlb	0	; select bank0
  8742     04F1  083A               	movf	ADC2Amp@v,w
  8743     04F2  00BE               	movwf	ADC2Amp@value
  8744     04F3  083B               	movf	ADC2Amp@v+1,w
  8745     04F4  00BF               	movwf	ADC2Amp@value+1
  8746     04F5  01C0               	clrf	ADC2Amp@value+2
  8747     04F6  01C1               	clrf	ADC2Amp@value+3
  8748     04F7                     l3759:
  8749                           
  8750                           ;sspa.c: 59:     int32_t result = (uint16_t)(0) + (value * (uint16_t)(430)) / (uint16_t)
      +                          (10240);
  8751     04F7  3000               	movlw	0
  8752     04F8  00AF               	movwf	___aldiv@divisor+3
  8753     04F9  3000               	movlw	0
  8754     04FA  00AE               	movwf	___aldiv@divisor+2
  8755     04FB  3028               	movlw	40
  8756     04FC  00AD               	movwf	___aldiv@divisor+1
  8757     04FD  3000               	movlw	0
  8758     04FE  00AC               	movwf	___aldiv@divisor
  8759     04FF  0841               	movf	ADC2Amp@value+3,w
  8760     0500  00A3               	movwf	___lmul@multiplier+3
  8761     0501  0840               	movf	ADC2Amp@value+2,w
  8762     0502  00A2               	movwf	___lmul@multiplier+2
  8763     0503  083F               	movf	ADC2Amp@value+1,w
  8764     0504  00A1               	movwf	___lmul@multiplier+1
  8765     0505  083E               	movf	ADC2Amp@value,w
  8766     0506  00A0               	movwf	___lmul@multiplier
  8767     0507  3000               	movlw	0
  8768     0508  00A7               	movwf	___lmul@multiplicand+3
  8769     0509  3000               	movlw	0
  8770     050A  00A6               	movwf	___lmul@multiplicand+2
  8771     050B  3001               	movlw	1
  8772     050C  00A5               	movwf	___lmul@multiplicand+1
  8773     050D  30AE               	movlw	174
  8774     050E  00A4               	movwf	___lmul@multiplicand
  8775     050F  3187  2708  3184   	fcall	___lmul
  8776     0512  0020               	movlb	0	; select bank0
  8777     0513  0823               	movf	?___lmul+3,w
  8778     0514  00B3               	movwf	___aldiv@dividend+3
  8779     0515  0822               	movf	?___lmul+2,w
  8780     0516  00B2               	movwf	___aldiv@dividend+2
  8781     0517  0821               	movf	?___lmul+1,w
  8782     0518  00B1               	movwf	___aldiv@dividend+1
  8783     0519  0820               	movf	?___lmul,w
  8784     051A  00B0               	movwf	___aldiv@dividend
  8785     051B  3182  2260  3184   	fcall	___aldiv
  8786     051E  0020               	movlb	0	; select bank0
  8787     051F  082F               	movf	?___aldiv+3,w
  8788     0520  00C5               	movwf	ADC2Amp@result+3
  8789     0521  082E               	movf	?___aldiv+2,w
  8790     0522  00C4               	movwf	ADC2Amp@result+2
  8791     0523  082D               	movf	?___aldiv+1,w
  8792     0524  00C3               	movwf	ADC2Amp@result+1
  8793     0525  082C               	movf	?___aldiv,w
  8794     0526  00C2               	movwf	ADC2Amp@result
  8795     0527                     l3761:
  8796                           
  8797                           ;sspa.c: 61:     return (uint32_t) result;
  8798     0527  0845               	movf	ADC2Amp@result+3,w
  8799     0528  00BD               	movwf	?_ADC2Amp+3
  8800     0529  0844               	movf	ADC2Amp@result+2,w
  8801     052A  00BC               	movwf	?_ADC2Amp+2
  8802     052B  0843               	movf	ADC2Amp@result+1,w
  8803     052C  00BB               	movwf	?_ADC2Amp+1
  8804     052D  0842               	movf	ADC2Amp@result,w
  8805     052E  00BA               	movwf	?_ADC2Amp
  8806     052F                     l831:
  8807     052F  0008               	return
  8808     0530                     __end_of_ADC2Amp:
  8809                           
  8810                           	psect	text27
  8811     0708                     __ptext27:	
  8812 ;; *************** function ___lmul *****************
  8813 ;; Defined at:
  8814 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8817 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  product         4    8[BANK0 ] unsigned long 
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  4    0[BANK0 ] unsigned long 
  8822 ;; Registers used:
  8823 ;;		wreg, status,2, status,0
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8829 ;;      Params:         0       8       0       0       0       0       0       0
  8830 ;;      Locals:         0       4       0       0       0       0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0       0
  8832 ;;      Totals:         0      12       0       0       0       0       0       0
  8833 ;;Total ram usage:       12 bytes
  8834 ;; Hardware stack levels used: 1
  8835 ;; Hardware stack levels required when called: 7
  8836 ;; This function calls:
  8837 ;;		Nothing
  8838 ;; This function is called by:
  8839 ;;		_ADC2Celsius
  8840 ;;		_ADC2Amp
  8841 ;;		_ADC2dBm
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845     0708                     ___lmul:	
  8846                           ;psect for function ___lmul
  8847                           
  8848     0708                     l3577:	
  8849                           ;incstack = 0
  8850                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8851                           
  8852     0708  3000               	movlw	0
  8853     0709  0020               	movlb	0	; select bank0
  8854     070A  00AB               	movwf	___lmul@product+3
  8855     070B  3000               	movlw	0
  8856     070C  00AA               	movwf	___lmul@product+2
  8857     070D  3000               	movlw	0
  8858     070E  00A9               	movwf	___lmul@product+1
  8859     070F  3000               	movlw	0
  8860     0710  00A8               	movwf	___lmul@product
  8861     0711                     l3579:
  8862     0711  1C20               	btfss	___lmul@multiplier,0
  8863     0712  2F14               	goto	u1581
  8864     0713  2F15               	goto	u1580
  8865     0714                     u1581:
  8866     0714  2F1D               	goto	l3583
  8867     0715                     u1580:
  8868     0715                     l3581:
  8869     0715  0824               	movf	___lmul@multiplicand,w
  8870     0716  07A8               	addwf	___lmul@product,f
  8871     0717  0825               	movf	___lmul@multiplicand+1,w
  8872     0718  3DA9               	addwfc	___lmul@product+1,f
  8873     0719  0826               	movf	___lmul@multiplicand+2,w
  8874     071A  3DAA               	addwfc	___lmul@product+2,f
  8875     071B  0827               	movf	___lmul@multiplicand+3,w
  8876     071C  3DAB               	addwfc	___lmul@product+3,f
  8877     071D                     l3583:
  8878     071D  3001               	movlw	1
  8879     071E                     u1595:
  8880     071E  35A4               	lslf	___lmul@multiplicand,f
  8881     071F  0DA5               	rlf	___lmul@multiplicand+1,f
  8882     0720  0DA6               	rlf	___lmul@multiplicand+2,f
  8883     0721  0DA7               	rlf	___lmul@multiplicand+3,f
  8884     0722  0B89               	decfsz	9,f
  8885     0723  2F1E               	goto	u1595
  8886     0724                     l3585:
  8887     0724  3001               	movlw	1
  8888     0725                     u1605:
  8889     0725  36A3               	lsrf	___lmul@multiplier+3,f
  8890     0726  0CA2               	rrf	___lmul@multiplier+2,f
  8891     0727  0CA1               	rrf	___lmul@multiplier+1,f
  8892     0728  0CA0               	rrf	___lmul@multiplier,f
  8893     0729  0B89               	decfsz	9,f
  8894     072A  2F25               	goto	u1605
  8895     072B  0823               	movf	___lmul@multiplier+3,w
  8896     072C  0422               	iorwf	___lmul@multiplier+2,w
  8897     072D  0421               	iorwf	___lmul@multiplier+1,w
  8898     072E  0420               	iorwf	___lmul@multiplier,w
  8899     072F  1D03               	skipz
  8900     0730  2F32               	goto	u1611
  8901     0731  2F33               	goto	u1610
  8902     0732                     u1611:
  8903     0732  2F11               	goto	l3579
  8904     0733                     u1610:
  8905     0733                     l3587:
  8906     0733  082B               	movf	___lmul@product+3,w
  8907     0734  00A3               	movwf	?___lmul+3
  8908     0735  082A               	movf	___lmul@product+2,w
  8909     0736  00A2               	movwf	?___lmul+2
  8910     0737  0829               	movf	___lmul@product+1,w
  8911     0738  00A1               	movwf	?___lmul+1
  8912     0739  0828               	movf	___lmul@product,w
  8913     073A  00A0               	movwf	?___lmul
  8914     073B                     l955:
  8915     073B  0008               	return
  8916     073C                     __end_of___lmul:
  8917                           
  8918                           	psect	text28
  8919     0260                     __ptext28:	
  8920 ;; *************** function ___aldiv *****************
  8921 ;; Defined at:
  8922 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  divisor         4   12[BANK0 ] long 
  8925 ;;  dividend        4   16[BANK0 ] long 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;  quotient        4   22[BANK0 ] long 
  8928 ;;  sign            1   21[BANK0 ] unsigned char 
  8929 ;;  counter         1   20[BANK0 ] unsigned char 
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  4   12[BANK0 ] long 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2, status,0
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8939 ;;      Params:         0       8       0       0       0       0       0       0
  8940 ;;      Locals:         0       6       0       0       0       0       0       0
  8941 ;;      Temps:          1       0       0       0       0       0       0       0
  8942 ;;      Totals:         1      14       0       0       0       0       0       0
  8943 ;;Total ram usage:       15 bytes
  8944 ;; Hardware stack levels used: 1
  8945 ;; Hardware stack levels required when called: 7
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_ADC2Celsius
  8950 ;;		_ADC2Amp
  8951 ;;		_ADC2dBm
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955     0260                     ___aldiv:	
  8956                           ;psect for function ___aldiv
  8957                           
  8958     0260                     l3591:	
  8959                           ;incstack = 0
  8960                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8961                           
  8962     0260  0020               	movlb	0	; select bank0
  8963     0261  01B5               	clrf	___aldiv@sign
  8964     0262                     l3593:
  8965     0262  1FAF               	btfss	___aldiv@divisor+3,7
  8966     0263  2A65               	goto	u1621
  8967     0264  2A66               	goto	u1620
  8968     0265                     u1621:
  8969     0265  2A73               	goto	l1006
  8970     0266                     u1620:
  8971     0266                     l3595:
  8972     0266  09AC               	comf	___aldiv@divisor,f
  8973     0267  09AD               	comf	___aldiv@divisor+1,f
  8974     0268  09AE               	comf	___aldiv@divisor+2,f
  8975     0269  09AF               	comf	___aldiv@divisor+3,f
  8976     026A  0AAC               	incf	___aldiv@divisor,f
  8977     026B  1903               	skipnz
  8978     026C  0AAD               	incf	___aldiv@divisor+1,f
  8979     026D  1903               	skipnz
  8980     026E  0AAE               	incf	___aldiv@divisor+2,f
  8981     026F  1903               	skipnz
  8982     0270  0AAF               	incf	___aldiv@divisor+3,f
  8983     0271  01B5               	clrf	___aldiv@sign
  8984     0272  0AB5               	incf	___aldiv@sign,f
  8985     0273                     l1006:
  8986     0273  1FB3               	btfss	___aldiv@dividend+3,7
  8987     0274  2A76               	goto	u1631
  8988     0275  2A77               	goto	u1630
  8989     0276                     u1631:
  8990     0276  2A86               	goto	l3601
  8991     0277                     u1630:
  8992     0277                     l3597:
  8993     0277  09B0               	comf	___aldiv@dividend,f
  8994     0278  09B1               	comf	___aldiv@dividend+1,f
  8995     0279  09B2               	comf	___aldiv@dividend+2,f
  8996     027A  09B3               	comf	___aldiv@dividend+3,f
  8997     027B  0AB0               	incf	___aldiv@dividend,f
  8998     027C  1903               	skipnz
  8999     027D  0AB1               	incf	___aldiv@dividend+1,f
  9000     027E  1903               	skipnz
  9001     027F  0AB2               	incf	___aldiv@dividend+2,f
  9002     0280  1903               	skipnz
  9003     0281  0AB3               	incf	___aldiv@dividend+3,f
  9004     0282                     l3599:
  9005     0282  3001               	movlw	1
  9006     0283  00F4               	movwf	??___aldiv
  9007     0284  0874               	movf	??___aldiv,w
  9008     0285  06B5               	xorwf	___aldiv@sign,f
  9009     0286                     l3601:
  9010     0286  3000               	movlw	0
  9011     0287  00B9               	movwf	___aldiv@quotient+3
  9012     0288  3000               	movlw	0
  9013     0289  00B8               	movwf	___aldiv@quotient+2
  9014     028A  3000               	movlw	0
  9015     028B  00B7               	movwf	___aldiv@quotient+1
  9016     028C  3000               	movlw	0
  9017     028D  00B6               	movwf	___aldiv@quotient
  9018     028E                     l3603:
  9019     028E  082F               	movf	___aldiv@divisor+3,w
  9020     028F  042E               	iorwf	___aldiv@divisor+2,w
  9021     0290  042D               	iorwf	___aldiv@divisor+1,w
  9022     0291  042C               	iorwf	___aldiv@divisor,w
  9023     0292  1903               	skipnz
  9024     0293  2A95               	goto	u1641
  9025     0294  2A96               	goto	u1640
  9026     0295                     u1641:
  9027     0295  2AD7               	goto	l3623
  9028     0296                     u1640:
  9029     0296                     l3605:
  9030     0296  01B4               	clrf	___aldiv@counter
  9031     0297  0AB4               	incf	___aldiv@counter,f
  9032     0298  2AA4               	goto	l3609
  9033     0299                     l3607:
  9034     0299  3001               	movlw	1
  9035     029A                     u1655:
  9036     029A  35AC               	lslf	___aldiv@divisor,f
  9037     029B  0DAD               	rlf	___aldiv@divisor+1,f
  9038     029C  0DAE               	rlf	___aldiv@divisor+2,f
  9039     029D  0DAF               	rlf	___aldiv@divisor+3,f
  9040     029E  0B89               	decfsz	9,f
  9041     029F  2A9A               	goto	u1655
  9042     02A0  3001               	movlw	1
  9043     02A1  00F4               	movwf	??___aldiv
  9044     02A2  0874               	movf	??___aldiv,w
  9045     02A3  07B4               	addwf	___aldiv@counter,f
  9046     02A4                     l3609:
  9047     02A4  1FAF               	btfss	___aldiv@divisor+3,7
  9048     02A5  2AA7               	goto	u1661
  9049     02A6  2AA8               	goto	u1660
  9050     02A7                     u1661:
  9051     02A7  2A99               	goto	l3607
  9052     02A8                     u1660:
  9053     02A8                     l3611:
  9054     02A8  3001               	movlw	1
  9055     02A9                     u1675:
  9056     02A9  35B6               	lslf	___aldiv@quotient,f
  9057     02AA  0DB7               	rlf	___aldiv@quotient+1,f
  9058     02AB  0DB8               	rlf	___aldiv@quotient+2,f
  9059     02AC  0DB9               	rlf	___aldiv@quotient+3,f
  9060     02AD  0B89               	decfsz	9,f
  9061     02AE  2AA9               	goto	u1675
  9062     02AF                     l3613:
  9063     02AF  082F               	movf	___aldiv@divisor+3,w
  9064     02B0  0233               	subwf	___aldiv@dividend+3,w
  9065     02B1  1D03               	skipz
  9066     02B2  2ABD               	goto	u1685
  9067     02B3  082E               	movf	___aldiv@divisor+2,w
  9068     02B4  0232               	subwf	___aldiv@dividend+2,w
  9069     02B5  1D03               	skipz
  9070     02B6  2ABD               	goto	u1685
  9071     02B7  082D               	movf	___aldiv@divisor+1,w
  9072     02B8  0231               	subwf	___aldiv@dividend+1,w
  9073     02B9  1D03               	skipz
  9074     02BA  2ABD               	goto	u1685
  9075     02BB  082C               	movf	___aldiv@divisor,w
  9076     02BC  0230               	subwf	___aldiv@dividend,w
  9077     02BD                     u1685:
  9078     02BD  1C03               	skipc
  9079     02BE  2AC0               	goto	u1681
  9080     02BF  2AC1               	goto	u1680
  9081     02C0                     u1681:
  9082     02C0  2ACA               	goto	l3619
  9083     02C1                     u1680:
  9084     02C1                     l3615:
  9085     02C1  082C               	movf	___aldiv@divisor,w
  9086     02C2  02B0               	subwf	___aldiv@dividend,f
  9087     02C3  082D               	movf	___aldiv@divisor+1,w
  9088     02C4  3BB1               	subwfb	___aldiv@dividend+1,f
  9089     02C5  082E               	movf	___aldiv@divisor+2,w
  9090     02C6  3BB2               	subwfb	___aldiv@dividend+2,f
  9091     02C7  082F               	movf	___aldiv@divisor+3,w
  9092     02C8  3BB3               	subwfb	___aldiv@dividend+3,f
  9093     02C9                     l3617:
  9094     02C9  1436               	bsf	___aldiv@quotient,0
  9095     02CA                     l3619:
  9096     02CA  3001               	movlw	1
  9097     02CB                     u1695:
  9098     02CB  36AF               	lsrf	___aldiv@divisor+3,f
  9099     02CC  0CAE               	rrf	___aldiv@divisor+2,f
  9100     02CD  0CAD               	rrf	___aldiv@divisor+1,f
  9101     02CE  0CAC               	rrf	___aldiv@divisor,f
  9102     02CF  0B89               	decfsz	9,f
  9103     02D0  2ACB               	goto	u1695
  9104     02D1                     l3621:
  9105     02D1  3001               	movlw	1
  9106     02D2  02B4               	subwf	___aldiv@counter,f
  9107     02D3  1D03               	btfss	3,2
  9108     02D4  2AD6               	goto	u1701
  9109     02D5  2AD7               	goto	u1700
  9110     02D6                     u1701:
  9111     02D6  2AA8               	goto	l3611
  9112     02D7                     u1700:
  9113     02D7                     l3623:
  9114     02D7  0835               	movf	___aldiv@sign,w
  9115     02D8  1903               	btfsc	3,2
  9116     02D9  2ADB               	goto	u1711
  9117     02DA  2ADC               	goto	u1710
  9118     02DB                     u1711:
  9119     02DB  2AE7               	goto	l3627
  9120     02DC                     u1710:
  9121     02DC                     l3625:
  9122     02DC  09B6               	comf	___aldiv@quotient,f
  9123     02DD  09B7               	comf	___aldiv@quotient+1,f
  9124     02DE  09B8               	comf	___aldiv@quotient+2,f
  9125     02DF  09B9               	comf	___aldiv@quotient+3,f
  9126     02E0  0AB6               	incf	___aldiv@quotient,f
  9127     02E1  1903               	skipnz
  9128     02E2  0AB7               	incf	___aldiv@quotient+1,f
  9129     02E3  1903               	skipnz
  9130     02E4  0AB8               	incf	___aldiv@quotient+2,f
  9131     02E5  1903               	skipnz
  9132     02E6  0AB9               	incf	___aldiv@quotient+3,f
  9133     02E7                     l3627:
  9134     02E7  0839               	movf	___aldiv@quotient+3,w
  9135     02E8  00AF               	movwf	?___aldiv+3
  9136     02E9  0838               	movf	___aldiv@quotient+2,w
  9137     02EA  00AE               	movwf	?___aldiv+2
  9138     02EB  0837               	movf	___aldiv@quotient+1,w
  9139     02EC  00AD               	movwf	?___aldiv+1
  9140     02ED  0836               	movf	___aldiv@quotient,w
  9141     02EE  00AC               	movwf	?___aldiv
  9142     02EF                     l1016:
  9143     02EF  0008               	return
  9144     02F0                     __end_of___aldiv:
  9145                           
  9146                           	psect	text29
  9147     0F84                     __ptext29:	
  9148 ;; *************** function _KAPS_setRelPos *****************
  9149 ;; Defined at:
  9150 ;;		line 51 in file "kaps.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;  offset          1    wreg     char 
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  offset          1    7[BANK0 ] char 
  9155 ;;  reg             1    8[BANK0 ] unsigned char 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1    wreg      void 
  9158 ;; Registers used:
  9159 ;;		wreg, status,2, status,0, pclath, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9165 ;;      Params:         0       0       0       0       0       0       0       0
  9166 ;;      Locals:         0       2       0       0       0       0       0       0
  9167 ;;      Temps:          0       2       0       0       0       0       0       0
  9168 ;;      Totals:         0       4       0       0       0       0       0       0
  9169 ;;Total ram usage:        4 bytes
  9170 ;; Hardware stack levels used: 1
  9171 ;; Hardware stack levels required when called: 10
  9172 ;; This function calls:
  9173 ;;		_I2C1_Write
  9174 ;; This function is called by:
  9175 ;;		_ProcessMsg
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179     0F84                     _KAPS_setRelPos:	
  9180                           ;psect for function _KAPS_setRelPos
  9181                           
  9182                           
  9183                           ;incstack = 0
  9184                           ; Regs used in _KAPS_setRelPos: [wreg+status,2+status,0+pclath+cstack]
  9185                           ;KAPS_setRelPos@offset stored from wreg
  9186     0F84  0020               	movlb	0	; select bank0
  9187     0F85  00A7               	movwf	KAPS_setRelPos@offset
  9188     0F86                     l3889:
  9189                           
  9190                           ;kaps.c: 52:     uint8_t reg = 0x02;
  9191     0F86  3002               	movlw	2
  9192     0F87  00A8               	movwf	KAPS_setRelPos@reg
  9193     0F88                     l3891:
  9194                           
  9195                           ;kaps.c: 54:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9196     0F88  0866               	movf	_kaps,w
  9197     0F89  00A5               	movwf	??_KAPS_setRelPos
  9198     0F8A  01A6               	clrf	??_KAPS_setRelPos+1
  9199     0F8B  0825               	movf	??_KAPS_setRelPos,w
  9200     0F8C  00A0               	movwf	I2C1_Write@address
  9201     0F8D  0826               	movf	??_KAPS_setRelPos+1,w
  9202     0F8E  00A1               	movwf	I2C1_Write@address+1
  9203     0F8F  3028               	movlw	(low (KAPS_setRelPos@reg| 0))& (0+255)
  9204     0F90  00A2               	movwf	I2C1_Write@data
  9205     0F91  3001               	movlw	1
  9206     0F92  00A3               	movwf	I2C1_Write@dataLength
  9207     0F93  3000               	movlw	0
  9208     0F94  00A4               	movwf	I2C1_Write@dataLength+1
  9209     0F95  318E  26D6  318F   	fcall	_I2C1_Write
  9210     0F98                     l3893:
  9211                           
  9212                           ;kaps.c: 55:     I2C1_Write(kaps.m_bAddr, (uint8_t*)&offset, 1);
  9213     0F98  0020               	movlb	0	; select bank0
  9214     0F99  0866               	movf	_kaps,w
  9215     0F9A  00A5               	movwf	??_KAPS_setRelPos
  9216     0F9B  01A6               	clrf	??_KAPS_setRelPos+1
  9217     0F9C  0825               	movf	??_KAPS_setRelPos,w
  9218     0F9D  00A0               	movwf	I2C1_Write@address
  9219     0F9E  0826               	movf	??_KAPS_setRelPos+1,w
  9220     0F9F  00A1               	movwf	I2C1_Write@address+1
  9221     0FA0  3027               	movlw	(low (KAPS_setRelPos@offset| 0))& (0+255)
  9222     0FA1  00A2               	movwf	I2C1_Write@data
  9223     0FA2  3001               	movlw	1
  9224     0FA3  00A3               	movwf	I2C1_Write@dataLength
  9225     0FA4  3000               	movlw	0
  9226     0FA5  00A4               	movwf	I2C1_Write@dataLength+1
  9227     0FA6  318E  26D6  318F   	fcall	_I2C1_Write
  9228     0FA9                     l719:
  9229     0FA9  0008               	return
  9230     0FAA                     __end_of_KAPS_setRelPos:
  9231                           
  9232                           	psect	text30
  9233     073C                     __ptext30:	
  9234 ;; *************** function _KAPS_setAbsPos *****************
  9235 ;; Defined at:
  9236 ;;		line 36 in file "kaps.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  pos             4   13[BANK0 ] unsigned long 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  data            4   19[BANK0 ] unsigned char [4]
  9241 ;;  reg             1   23[BANK0 ] unsigned char 
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1    wreg      void 
  9244 ;; Registers used:
  9245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9251 ;;      Params:         0       4       0       0       0       0       0       0
  9252 ;;      Locals:         0       5       0       0       0       0       0       0
  9253 ;;      Temps:          0       2       0       0       0       0       0       0
  9254 ;;      Totals:         0      11       0       0       0       0       0       0
  9255 ;;Total ram usage:       11 bytes
  9256 ;; Hardware stack levels used: 1
  9257 ;; Hardware stack levels required when called: 10
  9258 ;; This function calls:
  9259 ;;		_I2C1_Write
  9260 ;;		_unpackLong
  9261 ;; This function is called by:
  9262 ;;		_ProcessMsg
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266     073C                     _KAPS_setAbsPos:	
  9267                           ;psect for function _KAPS_setAbsPos
  9268                           
  9269     073C                     l3881:	
  9270                           ;incstack = 0
  9271                           ; Regs used in _KAPS_setAbsPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9272                           
  9273                           
  9274                           ;kaps.c: 37:     uint8_t reg = 0x01;
  9275     073C  0020               	movlb	0	; select bank0
  9276     073D  01B7               	clrf	KAPS_setAbsPos@reg
  9277     073E  0AB7               	incf	KAPS_setAbsPos@reg,f
  9278     073F                     l3883:
  9279                           
  9280                           ;kaps.c: 38:     uint8_t data[4];;kaps.c: 40:     unpackLong(pos, data);
  9281     073F  0830               	movf	KAPS_setAbsPos@pos+3,w
  9282     0740  00A3               	movwf	unpackLong@value+3
  9283     0741  082F               	movf	KAPS_setAbsPos@pos+2,w
  9284     0742  00A2               	movwf	unpackLong@value+2
  9285     0743  082E               	movf	KAPS_setAbsPos@pos+1,w
  9286     0744  00A1               	movwf	unpackLong@value+1
  9287     0745  082D               	movf	KAPS_setAbsPos@pos,w
  9288     0746  00A0               	movwf	unpackLong@value
  9289     0747  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9290     0748  00A4               	movwf	unpackLong@data
  9291     0749  3184  2468  3187   	fcall	_unpackLong
  9292     074C                     l3885:
  9293                           
  9294                           ;kaps.c: 42:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9295     074C  0020               	movlb	0	; select bank0
  9296     074D  0866               	movf	_kaps,w
  9297     074E  00B1               	movwf	??_KAPS_setAbsPos
  9298     074F  01B2               	clrf	??_KAPS_setAbsPos+1
  9299     0750  0831               	movf	??_KAPS_setAbsPos,w
  9300     0751  00A0               	movwf	I2C1_Write@address
  9301     0752  0832               	movf	??_KAPS_setAbsPos+1,w
  9302     0753  00A1               	movwf	I2C1_Write@address+1
  9303     0754  3037               	movlw	(low (KAPS_setAbsPos@reg| 0))& (0+255)
  9304     0755  00A2               	movwf	I2C1_Write@data
  9305     0756  3001               	movlw	1
  9306     0757  00A3               	movwf	I2C1_Write@dataLength
  9307     0758  3000               	movlw	0
  9308     0759  00A4               	movwf	I2C1_Write@dataLength+1
  9309     075A  318E  26D6  3187   	fcall	_I2C1_Write
  9310     075D                     l3887:
  9311                           
  9312                           ;kaps.c: 43:     I2C1_Write(kaps.m_bAddr, data, 4);
  9313     075D  0020               	movlb	0	; select bank0
  9314     075E  0866               	movf	_kaps,w
  9315     075F  00B1               	movwf	??_KAPS_setAbsPos
  9316     0760  01B2               	clrf	??_KAPS_setAbsPos+1
  9317     0761  0831               	movf	??_KAPS_setAbsPos,w
  9318     0762  00A0               	movwf	I2C1_Write@address
  9319     0763  0832               	movf	??_KAPS_setAbsPos+1,w
  9320     0764  00A1               	movwf	I2C1_Write@address+1
  9321     0765  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9322     0766  00A2               	movwf	I2C1_Write@data
  9323     0767  3004               	movlw	4
  9324     0768  00A3               	movwf	I2C1_Write@dataLength
  9325     0769  3000               	movlw	0
  9326     076A  00A4               	movwf	I2C1_Write@dataLength+1
  9327     076B  318E  26D6  3187   	fcall	_I2C1_Write
  9328     076E                     l716:
  9329     076E  0008               	return
  9330     076F                     __end_of_KAPS_setAbsPos:
  9331                           
  9332                           	psect	text31
  9333     079F                     __ptext31:	
  9334 ;; *************** function _KAPS_getStatus *****************
  9335 ;; Defined at:
  9336 ;;		line 80 in file "kaps.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;		None
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  data            1    8[BANK0 ] unsigned char 
  9341 ;;  reg             1    7[BANK0 ] unsigned char 
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  1    wreg      void 
  9344 ;; Registers used:
  9345 ;;		wreg, status,2, status,0, pclath, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9351 ;;      Params:         0       0       0       0       0       0       0       0
  9352 ;;      Locals:         0       2       0       0       0       0       0       0
  9353 ;;      Temps:          0       2       0       0       0       0       0       0
  9354 ;;      Totals:         0       4       0       0       0       0       0       0
  9355 ;;Total ram usage:        4 bytes
  9356 ;; Hardware stack levels used: 1
  9357 ;; Hardware stack levels required when called: 10
  9358 ;; This function calls:
  9359 ;;		_I2C1_Read
  9360 ;;		_I2C1_Write
  9361 ;; This function is called by:
  9362 ;;		_ProcessMsg
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366     079F                     _KAPS_getStatus:	
  9367                           ;psect for function _KAPS_getStatus
  9368                           
  9369     079F                     l3827:	
  9370                           ;incstack = 0
  9371                           ; Regs used in _KAPS_getStatus: [wreg+status,2+status,0+pclath+cstack]
  9372                           
  9373                           
  9374                           ;kaps.c: 81:     uint8_t reg = 0xFF;
  9375     079F  30FF               	movlw	255
  9376     07A0  0020               	movlb	0	; select bank0
  9377     07A1  00A7               	movwf	KAPS_getStatus@reg
  9378     07A2                     l3829:
  9379                           
  9380                           ;kaps.c: 82:     uint8_t data = 0x00;
  9381     07A2  01A8               	clrf	KAPS_getStatus@data
  9382     07A3                     l3831:
  9383                           
  9384                           ;kaps.c: 84:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9385     07A3  0866               	movf	_kaps,w
  9386     07A4  00A5               	movwf	??_KAPS_getStatus
  9387     07A5  01A6               	clrf	??_KAPS_getStatus+1
  9388     07A6  0825               	movf	??_KAPS_getStatus,w
  9389     07A7  00A0               	movwf	I2C1_Write@address
  9390     07A8  0826               	movf	??_KAPS_getStatus+1,w
  9391     07A9  00A1               	movwf	I2C1_Write@address+1
  9392     07AA  3027               	movlw	(low (KAPS_getStatus@reg| 0))& (0+255)
  9393     07AB  00A2               	movwf	I2C1_Write@data
  9394     07AC  3001               	movlw	1
  9395     07AD  00A3               	movwf	I2C1_Write@dataLength
  9396     07AE  3000               	movlw	0
  9397     07AF  00A4               	movwf	I2C1_Write@dataLength+1
  9398     07B0  318E  26D6  3187   	fcall	_I2C1_Write
  9399     07B3                     l3833:
  9400                           
  9401                           ;kaps.c: 86:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9402     07B3  0020               	movlb	0	; select bank0
  9403     07B4  0866               	movf	_kaps,w
  9404     07B5  00A5               	movwf	??_KAPS_getStatus
  9405     07B6  01A6               	clrf	??_KAPS_getStatus+1
  9406     07B7  0825               	movf	??_KAPS_getStatus,w
  9407     07B8  00A0               	movwf	I2C1_Read@address
  9408     07B9  0826               	movf	??_KAPS_getStatus+1,w
  9409     07BA  00A1               	movwf	I2C1_Read@address+1
  9410     07BB  3028               	movlw	(low (KAPS_getStatus@data| 0))& (0+255)
  9411     07BC  00A2               	movwf	I2C1_Read@data
  9412     07BD  3001               	movlw	1
  9413     07BE  00A3               	movwf	I2C1_Read@dataLength
  9414     07BF  3000               	movlw	0
  9415     07C0  00A4               	movwf	I2C1_Read@dataLength+1
  9416     07C1  318E  26F4  3187   	fcall	_I2C1_Read
  9417     07C4  3A00               	xorlw	0
  9418     07C5  1903               	skipnz
  9419     07C6  2FC8               	goto	u1901
  9420     07C7  2FC9               	goto	u1900
  9421     07C8                     u1901:
  9422     07C8  2FCC               	goto	l726
  9423     07C9                     u1900:
  9424     07C9                     l3835:
  9425                           
  9426                           ;kaps.c: 87:         kaps.m_Status = (kaps_status_t) data;
  9427     07C9  0020               	movlb	0	; select bank0
  9428     07CA  0828               	movf	KAPS_getStatus@data,w
  9429     07CB  00E7               	movwf	_kaps+1
  9430     07CC                     l726:
  9431     07CC  0008               	return
  9432     07CD                     __end_of_KAPS_getStatus:
  9433                           
  9434                           	psect	text32
  9435     0570                     __ptext32:	
  9436 ;; *************** function _KAPS_getPos *****************
  9437 ;; Defined at:
  9438 ;;		line 106 in file "kaps.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  data            4   15[BANK0 ] unsigned char [4]
  9443 ;;  reg             1   19[BANK0 ] unsigned char 
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  1    wreg      void 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9453 ;;      Params:         0       0       0       0       0       0       0       0
  9454 ;;      Locals:         0       5       0       0       0       0       0       0
  9455 ;;      Temps:          0       2       0       0       0       0       0       0
  9456 ;;      Totals:         0       7       0       0       0       0       0       0
  9457 ;;Total ram usage:        7 bytes
  9458 ;; Hardware stack levels used: 1
  9459 ;; Hardware stack levels required when called: 10
  9460 ;; This function calls:
  9461 ;;		_I2C1_Read
  9462 ;;		_I2C1_Write
  9463 ;;		_packLong
  9464 ;; This function is called by:
  9465 ;;		_ProcessMsg
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469     0570                     _KAPS_getPos:	
  9470                           ;psect for function _KAPS_getPos
  9471                           
  9472     0570                     l3837:	
  9473                           ;incstack = 0
  9474                           ; Regs used in _KAPS_getPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9475                           
  9476                           
  9477                           ;kaps.c: 107:     uint8_t reg = 0x00;
  9478     0570  0020               	movlb	0	; select bank0
  9479     0571  01B3               	clrf	KAPS_getPos@reg
  9480     0572                     l3839:
  9481                           
  9482                           ;kaps.c: 108:     uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
  9483     0572  3000               	movlw	0
  9484     0573  00B2               	movwf	KAPS_getPos@data+3
  9485     0574  3000               	movlw	0
  9486     0575  00B1               	movwf	KAPS_getPos@data+2
  9487     0576  3000               	movlw	0
  9488     0577  00B0               	movwf	KAPS_getPos@data+1
  9489     0578  3000               	movlw	0
  9490     0579  00AF               	movwf	KAPS_getPos@data
  9491     057A                     l3841:
  9492                           
  9493                           ;kaps.c: 110:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9494     057A  0866               	movf	_kaps,w
  9495     057B  00AD               	movwf	??_KAPS_getPos
  9496     057C  01AE               	clrf	??_KAPS_getPos+1
  9497     057D  082D               	movf	??_KAPS_getPos,w
  9498     057E  00A0               	movwf	I2C1_Write@address
  9499     057F  082E               	movf	??_KAPS_getPos+1,w
  9500     0580  00A1               	movwf	I2C1_Write@address+1
  9501     0581  3033               	movlw	(low (KAPS_getPos@reg| 0))& (0+255)
  9502     0582  00A2               	movwf	I2C1_Write@data
  9503     0583  3001               	movlw	1
  9504     0584  00A3               	movwf	I2C1_Write@dataLength
  9505     0585  3000               	movlw	0
  9506     0586  00A4               	movwf	I2C1_Write@dataLength+1
  9507     0587  318E  26D6  3185   	fcall	_I2C1_Write
  9508     058A                     l3843:
  9509                           
  9510                           ;kaps.c: 112:     if (I2C1_Read(kaps.m_bAddr, data, 4))
  9511     058A  0020               	movlb	0	; select bank0
  9512     058B  0866               	movf	_kaps,w
  9513     058C  00AD               	movwf	??_KAPS_getPos
  9514     058D  01AE               	clrf	??_KAPS_getPos+1
  9515     058E  082D               	movf	??_KAPS_getPos,w
  9516     058F  00A0               	movwf	I2C1_Read@address
  9517     0590  082E               	movf	??_KAPS_getPos+1,w
  9518     0591  00A1               	movwf	I2C1_Read@address+1
  9519     0592  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9520     0593  00A2               	movwf	I2C1_Read@data
  9521     0594  3004               	movlw	4
  9522     0595  00A3               	movwf	I2C1_Read@dataLength
  9523     0596  3000               	movlw	0
  9524     0597  00A4               	movwf	I2C1_Read@dataLength+1
  9525     0598  318E  26F4  3185   	fcall	_I2C1_Read
  9526     059B  3A00               	xorlw	0
  9527     059C  1903               	skipnz
  9528     059D  2D9F               	goto	u1911
  9529     059E  2DA0               	goto	u1910
  9530     059F                     u1911:
  9531     059F  2DAD               	goto	l736
  9532     05A0                     u1910:
  9533     05A0                     l3845:
  9534                           
  9535                           ;kaps.c: 113:         kaps.m_lAbsPos = packLong(data);
  9536     05A0  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9537     05A1  3183  237A  3185   	fcall	_packLong
  9538     05A4  0020               	movlb	0	; select bank0
  9539     05A5  0823               	movf	?_packLong+3,w
  9540     05A6  00EB               	movwf	_kaps+5
  9541     05A7  0822               	movf	?_packLong+2,w
  9542     05A8  00EA               	movwf	_kaps+4
  9543     05A9  0821               	movf	?_packLong+1,w
  9544     05AA  00E9               	movwf	_kaps+3
  9545     05AB  0820               	movf	?_packLong,w
  9546     05AC  00E8               	movwf	_kaps+2
  9547     05AD                     l736:
  9548     05AD  0008               	return
  9549     05AE                     __end_of_KAPS_getPos:
  9550                           
  9551                           	psect	text33
  9552     037A                     __ptext33:	
  9553 ;; *************** function _packLong *****************
  9554 ;; Defined at:
  9555 ;;		line 20 in file "utils.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  data            1    wreg     PTR unsigned char 
  9558 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  data            1   12[BANK0 ] PTR unsigned char 
  9561 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9562 ;;  result          4    8[BANK0 ] unsigned long 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  4    0[BANK0 ] unsigned long 
  9565 ;; Registers used:
  9566 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9572 ;;      Params:         0       4       0       0       0       0       0       0
  9573 ;;      Locals:         0       5       0       0       0       0       0       0
  9574 ;;      Temps:          0       4       0       0       0       0       0       0
  9575 ;;      Totals:         0      13       0       0       0       0       0       0
  9576 ;;Total ram usage:       13 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 7
  9579 ;; This function calls:
  9580 ;;		Nothing
  9581 ;; This function is called by:
  9582 ;;		_ProcessMsg
  9583 ;;		_KAPS_getPos
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587     037A                     _packLong:	
  9588                           ;psect for function _packLong
  9589                           
  9590                           
  9591                           ;incstack = 0
  9592                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  9593                           ;packLong@data stored from wreg
  9594     037A  0020               	movlb	0	; select bank0
  9595     037B  00AC               	movwf	packLong@data
  9596     037C                     l3715:
  9597     037C                     l3717:
  9598                           
  9599                           ;utils.c: 26:     result = (uint32_t) data[0] << 24;
  9600     037C  082C               	movf	packLong@data,w
  9601     037D  0086               	movwf	6
  9602     037E  0187               	clrf	7
  9603     037F  0801               	movf	1,w
  9604     0380  00A4               	movwf	??_packLong
  9605     0381  01A5               	clrf	??_packLong+1
  9606     0382  01A6               	clrf	??_packLong+2
  9607     0383  01A7               	clrf	??_packLong+3
  9608     0384  3018               	movlw	24
  9609     0385                     u1795:
  9610     0385  35A4               	lslf	??_packLong,f
  9611     0386  0DA5               	rlf	??_packLong+1,f
  9612     0387  0DA6               	rlf	??_packLong+2,f
  9613     0388  0DA7               	rlf	??_packLong+3,f
  9614     0389                     u1790:
  9615     0389  0B89               	decfsz	9,f
  9616     038A  2B85               	goto	u1795
  9617     038B  0827               	movf	??_packLong+3,w
  9618     038C  00AB               	movwf	packLong@result+3
  9619     038D  0826               	movf	??_packLong+2,w
  9620     038E  00AA               	movwf	packLong@result+2
  9621     038F  0825               	movf	??_packLong+1,w
  9622     0390  00A9               	movwf	packLong@result+1
  9623     0391  0824               	movf	??_packLong,w
  9624     0392  00A8               	movwf	packLong@result
  9625     0393                     l3719:
  9626                           
  9627                           ;utils.c: 27:     result |= (uint32_t) data[1] << 16;
  9628     0393  0A2C               	incf	packLong@data,w
  9629     0394  0086               	movwf	6
  9630     0395  0187               	clrf	7
  9631     0396  0801               	movf	1,w
  9632     0397  00A4               	movwf	??_packLong
  9633     0398  01A5               	clrf	??_packLong+1
  9634     0399  01A6               	clrf	??_packLong+2
  9635     039A  01A7               	clrf	??_packLong+3
  9636     039B  3010               	movlw	16
  9637     039C                     u1805:
  9638     039C  35A4               	lslf	??_packLong,f
  9639     039D  0DA5               	rlf	??_packLong+1,f
  9640     039E  0DA6               	rlf	??_packLong+2,f
  9641     039F  0DA7               	rlf	??_packLong+3,f
  9642     03A0                     u1800:
  9643     03A0  0B89               	decfsz	9,f
  9644     03A1  2B9C               	goto	u1805
  9645     03A2  0824               	movf	??_packLong,w
  9646     03A3  04A8               	iorwf	packLong@result,f
  9647     03A4  0825               	movf	??_packLong+1,w
  9648     03A5  04A9               	iorwf	packLong@result+1,f
  9649     03A6  0826               	movf	??_packLong+2,w
  9650     03A7  04AA               	iorwf	packLong@result+2,f
  9651     03A8  0827               	movf	??_packLong+3,w
  9652     03A9  04AB               	iorwf	packLong@result+3,f
  9653     03AA                     l3721:
  9654                           
  9655                           ;utils.c: 28:     result |= (uint32_t) data[2] << 8;
  9656     03AA  082C               	movf	packLong@data,w
  9657     03AB  3E02               	addlw	2
  9658     03AC  0086               	movwf	6
  9659     03AD  0187               	clrf	7
  9660     03AE  0801               	movf	1,w
  9661     03AF  00A4               	movwf	??_packLong
  9662     03B0  01A5               	clrf	??_packLong+1
  9663     03B1  01A6               	clrf	??_packLong+2
  9664     03B2  01A7               	clrf	??_packLong+3
  9665     03B3  3008               	movlw	8
  9666     03B4                     u1815:
  9667     03B4  35A4               	lslf	??_packLong,f
  9668     03B5  0DA5               	rlf	??_packLong+1,f
  9669     03B6  0DA6               	rlf	??_packLong+2,f
  9670     03B7  0DA7               	rlf	??_packLong+3,f
  9671     03B8                     u1810:
  9672     03B8  0B89               	decfsz	9,f
  9673     03B9  2BB4               	goto	u1815
  9674     03BA  0824               	movf	??_packLong,w
  9675     03BB  04A8               	iorwf	packLong@result,f
  9676     03BC  0825               	movf	??_packLong+1,w
  9677     03BD  04A9               	iorwf	packLong@result+1,f
  9678     03BE  0826               	movf	??_packLong+2,w
  9679     03BF  04AA               	iorwf	packLong@result+2,f
  9680     03C0  0827               	movf	??_packLong+3,w
  9681     03C1  04AB               	iorwf	packLong@result+3,f
  9682     03C2                     l3723:
  9683                           
  9684                           ;utils.c: 29:     result |= (uint32_t) data[3];
  9685     03C2  082C               	movf	packLong@data,w
  9686     03C3  3E03               	addlw	3
  9687     03C4  0086               	movwf	6
  9688     03C5  0187               	clrf	7
  9689     03C6  0801               	movf	1,w
  9690     03C7  04A8               	iorwf	packLong@result,f
  9691                           
  9692                           ;utils.c: 31:     return result;
  9693     03C8  082B               	movf	packLong@result+3,w
  9694     03C9  00A3               	movwf	?_packLong+3
  9695     03CA  082A               	movf	packLong@result+2,w
  9696     03CB  00A2               	movwf	?_packLong+2
  9697     03CC  0829               	movf	packLong@result+1,w
  9698     03CD  00A1               	movwf	?_packLong+1
  9699     03CE  0828               	movf	packLong@result,w
  9700     03CF  00A0               	movwf	?_packLong
  9701     03D0                     l739:
  9702     03D0  0008               	return
  9703     03D1                     __end_of_packLong:
  9704                           
  9705                           	psect	text34
  9706     07CD                     __ptext34:	
  9707 ;; *************** function _KAPS_getIndex *****************
  9708 ;; Defined at:
  9709 ;;		line 93 in file "kaps.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;		None
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  data            1    8[BANK0 ] unsigned char 
  9714 ;;  reg             1    7[BANK0 ] unsigned char 
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg, status,2, status,0, pclath, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9724 ;;      Params:         0       0       0       0       0       0       0       0
  9725 ;;      Locals:         0       2       0       0       0       0       0       0
  9726 ;;      Temps:          0       2       0       0       0       0       0       0
  9727 ;;      Totals:         0       4       0       0       0       0       0       0
  9728 ;;Total ram usage:        4 bytes
  9729 ;; Hardware stack levels used: 1
  9730 ;; Hardware stack levels required when called: 10
  9731 ;; This function calls:
  9732 ;;		_I2C1_Read
  9733 ;;		_I2C1_Write
  9734 ;; This function is called by:
  9735 ;;		_ProcessMsg
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739     07CD                     _KAPS_getIndex:	
  9740                           ;psect for function _KAPS_getIndex
  9741                           
  9742     07CD                     l3847:	
  9743                           ;incstack = 0
  9744                           ; Regs used in _KAPS_getIndex: [wreg+status,2+status,0+pclath+cstack]
  9745                           
  9746                           
  9747                           ;kaps.c: 94:     uint8_t reg = 0xFE;
  9748     07CD  30FE               	movlw	254
  9749     07CE  0020               	movlb	0	; select bank0
  9750     07CF  00A7               	movwf	KAPS_getIndex@reg
  9751     07D0                     l3849:
  9752                           
  9753                           ;kaps.c: 95:     uint8_t data = 0x00;
  9754     07D0  01A8               	clrf	KAPS_getIndex@data
  9755     07D1                     l3851:
  9756                           
  9757                           ;kaps.c: 97:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9758     07D1  0866               	movf	_kaps,w
  9759     07D2  00A5               	movwf	??_KAPS_getIndex
  9760     07D3  01A6               	clrf	??_KAPS_getIndex+1
  9761     07D4  0825               	movf	??_KAPS_getIndex,w
  9762     07D5  00A0               	movwf	I2C1_Write@address
  9763     07D6  0826               	movf	??_KAPS_getIndex+1,w
  9764     07D7  00A1               	movwf	I2C1_Write@address+1
  9765     07D8  3027               	movlw	(low (KAPS_getIndex@reg| 0))& (0+255)
  9766     07D9  00A2               	movwf	I2C1_Write@data
  9767     07DA  3001               	movlw	1
  9768     07DB  00A3               	movwf	I2C1_Write@dataLength
  9769     07DC  3000               	movlw	0
  9770     07DD  00A4               	movwf	I2C1_Write@dataLength+1
  9771     07DE  318E  26D6  3187   	fcall	_I2C1_Write
  9772     07E1                     l3853:
  9773                           
  9774                           ;kaps.c: 99:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9775     07E1  0020               	movlb	0	; select bank0
  9776     07E2  0866               	movf	_kaps,w
  9777     07E3  00A5               	movwf	??_KAPS_getIndex
  9778     07E4  01A6               	clrf	??_KAPS_getIndex+1
  9779     07E5  0825               	movf	??_KAPS_getIndex,w
  9780     07E6  00A0               	movwf	I2C1_Read@address
  9781     07E7  0826               	movf	??_KAPS_getIndex+1,w
  9782     07E8  00A1               	movwf	I2C1_Read@address+1
  9783     07E9  3028               	movlw	(low (KAPS_getIndex@data| 0))& (0+255)
  9784     07EA  00A2               	movwf	I2C1_Read@data
  9785     07EB  3001               	movlw	1
  9786     07EC  00A3               	movwf	I2C1_Read@dataLength
  9787     07ED  3000               	movlw	0
  9788     07EE  00A4               	movwf	I2C1_Read@dataLength+1
  9789     07EF  318E  26F4  3187   	fcall	_I2C1_Read
  9790     07F2  3A00               	xorlw	0
  9791     07F3  1903               	skipnz
  9792     07F4  2FF6               	goto	u1921
  9793     07F5  2FF7               	goto	u1920
  9794     07F6                     u1921:
  9795     07F6  2FFA               	goto	l730
  9796     07F7                     u1920:
  9797     07F7                     l3855:
  9798                           
  9799                           ;kaps.c: 100:         kaps.m_bIdxPos = data;
  9800     07F7  0020               	movlb	0	; select bank0
  9801     07F8  0828               	movf	KAPS_getIndex@data,w
  9802     07F9  00EC               	movwf	_kaps+6
  9803     07FA                     l730:
  9804     07FA  0008               	return
  9805     07FB                     __end_of_KAPS_getIndex:
  9806                           
  9807                           	psect	text35
  9808     0EF4                     __ptext35:	
  9809 ;; *************** function _I2C1_Read *****************
  9810 ;; Defined at:
  9811 ;;		line 161 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  address         2    0[BANK0 ] unsigned short 
  9814 ;;  data            1    2[BANK0 ] PTR unsigned char 
  9815 ;;		 -> KAPS_getPos@data(4), KAPS_getIndex@data(1), KAPS_getStatus@data(1), 
  9816 ;;  dataLength      2    3[BANK0 ] unsigned int 
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  retStatus       1    5[COMMON] _Bool 
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      _Bool 
  9821 ;; Registers used:
  9822 ;;		wreg, status,2, status,0, pclath, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9828 ;;      Params:         0       5       0       0       0       0       0       0
  9829 ;;      Locals:         1       0       0       0       0       0       0       0
  9830 ;;      Temps:          0       0       0       0       0       0       0       0
  9831 ;;      Totals:         1       5       0       0       0       0       0       0
  9832 ;;Total ram usage:        6 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 9
  9835 ;; This function calls:
  9836 ;;		_I2C1_IsBusy
  9837 ;;		_I2C1_ReadStart
  9838 ;; This function is called by:
  9839 ;;		_KAPS_getStatus
  9840 ;;		_KAPS_getIndex
  9841 ;;		_KAPS_getPos
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845     0EF4                     _I2C1_Read:	
  9846                           ;psect for function _I2C1_Read
  9847                           
  9848     0EF4                     l3655:	
  9849                           ;incstack = 0
  9850                           ; Regs used in _I2C1_Read: [wreg+status,2+status,0+pclath+cstack]
  9851                           
  9852                           
  9853                           ;mcc_generated_files/i2c_host/src/mssp.c: 161: _Bool I2C1_Read(uint16_t address, uint8_t
      +                           *data, size_t dataLength);mcc_generated_files/i2c_host/src/mssp.c: 162: {;mcc_generated
      +                          _files/i2c_host/src/mssp.c: 163:     _Bool retStatus = 0;
  9854     0EF4  01F5               	clrf	I2C1_Read@retStatus
  9855     0EF5                     l3657:
  9856                           
  9857                           ;mcc_generated_files/i2c_host/src/mssp.c: 164:     if (!I2C1_IsBusy())
  9858     0EF5  318E  2641  318E   	fcall	_I2C1_IsBusy
  9859     0EF8  3A00               	xorlw	0
  9860     0EF9  1D03               	skipz
  9861     0EFA  2EFC               	goto	u1731
  9862     0EFB  2EFD               	goto	u1730
  9863     0EFC                     u1731:
  9864     0EFC  2F14               	goto	l3677
  9865     0EFD                     u1730:
  9866     0EFD                     l3659:
  9867                           
  9868                           ;mcc_generated_files/i2c_host/src/mssp.c: 165:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 166:         i2c1Status.busy = 1;
  9869     0EFD  3001               	movlw	1
  9870     0EFE  0020               	movlb	0	; select bank0
  9871     0EFF  00D2               	movwf	_i2c1Status	;volatile
  9872                           
  9873                           ;mcc_generated_files/i2c_host/src/mssp.c: 167:         i2c1Status.address = address;
  9874     0F00  0821               	movf	I2C1_Read@address+1,w
  9875     0F01  00D4               	movwf	_i2c1Status+2	;volatile
  9876     0F02  0820               	movf	I2C1_Read@address,w
  9877     0F03  00D3               	movwf	_i2c1Status+1	;volatile
  9878     0F04                     l3661:
  9879                           
  9880                           ;mcc_generated_files/i2c_host/src/mssp.c: 168:         i2c1Status.switchToRead = 0;
  9881     0F04  01DB               	clrf	_i2c1Status+9	;volatile
  9882     0F05                     l3663:
  9883                           
  9884                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:         i2c1Status.readPtr = data;
  9885     0F05  0822               	movf	I2C1_Read@data,w
  9886     0F06  00D8               	movwf	low ((_i2c1Status| 0+6))	;volatile
  9887     0F07                     l3665:
  9888                           
  9889                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:         i2c1Status.readLength = dataLengt
      +                          h;
  9890     0F07  0824               	movf	I2C1_Read@dataLength+1,w
  9891     0F08  00DA               	movwf	_i2c1Status+8	;volatile
  9892     0F09  0823               	movf	I2C1_Read@dataLength,w
  9893     0F0A  00D9               	movwf	_i2c1Status+7	;volatile
  9894     0F0B                     l3667:
  9895                           
  9896                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:         i2c1Status.writePtr = ((void*)0);
  9897     0F0B  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
  9898     0F0C                     l3669:
  9899                           
  9900                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:         i2c1Status.writeLength = 0;
  9901     0F0C  01D6               	clrf	_i2c1Status+4	;volatile
  9902     0F0D  01D7               	clrf	_i2c1Status+5	;volatile
  9903     0F0E                     l3671:
  9904                           
  9905                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
  9906     0F0E  01DC               	clrf	_i2c1Status+10	;volatile
  9907     0F0F                     l3673:
  9908                           
  9909                           ;mcc_generated_files/i2c_host/src/mssp.c: 174:         I2C1_ReadStart();
  9910     0F0F  318D  2596  318E   	fcall	_I2C1_ReadStart
  9911     0F12                     l3675:
  9912                           
  9913                           ;mcc_generated_files/i2c_host/src/mssp.c: 175:         retStatus = 1;
  9914     0F12  01F5               	clrf	I2C1_Read@retStatus
  9915     0F13  0AF5               	incf	I2C1_Read@retStatus,f
  9916     0F14                     l3677:
  9917                           
  9918                           ;mcc_generated_files/i2c_host/src/mssp.c: 177:     return retStatus;
  9919     0F14  0875               	movf	I2C1_Read@retStatus,w
  9920     0F15                     l188:
  9921     0F15  0008               	return
  9922     0F16                     __end_of_I2C1_Read:
  9923                           
  9924                           	psect	text36
  9925     0D96                     __ptext36:	
  9926 ;; *************** function _I2C1_ReadStart *****************
  9927 ;; Defined at:
  9928 ;;		line 232 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;		None
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  1    wreg      void 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0, pclath, cstack
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9942 ;;      Params:         0       0       0       0       0       0       0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0
  9945 ;;      Totals:         0       0       0       0       0       0       0       0
  9946 ;;Total ram usage:        0 bytes
  9947 ;; Hardware stack levels used: 1
  9948 ;; Hardware stack levels required when called: 8
  9949 ;; This function calls:
  9950 ;;		_I2C1_StartSend
  9951 ;; This function is called by:
  9952 ;;		_I2C1_Read
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956     0D96                     _I2C1_ReadStart:	
  9957                           ;psect for function _I2C1_ReadStart
  9958                           
  9959     0D96                     l3567:	
  9960                           ;incstack = 0
  9961                           ; Regs used in _I2C1_ReadStart: [wreg+status,2+status,0+pclath+cstack]
  9962                           
  9963                           
  9964                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:     I2C1_StartSend();
  9965     0D96  318D  250A  318D   	fcall	_I2C1_StartSend
  9966     0D99                     l3569:
  9967                           
  9968                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:     i2c1Status.state = I2C_STATE_SEND_RD_
      +                          ADDR;
  9969     0D99  3001               	movlw	1
  9970     0D9A  0020               	movlb	0	; select bank0
  9971     0D9B  00DD               	movwf	_i2c1Status+11	;volatile
  9972     0D9C                     l213:
  9973     0D9C  0008               	return
  9974     0D9D                     __end_of_I2C1_ReadStart:
  9975                           
  9976                           	psect	text37
  9977     0530                     __ptext37:	
  9978 ;; *************** function _KAPS_StorePos *****************
  9979 ;; Defined at:
  9980 ;;		line 64 in file "kaps.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;  idx             1    wreg     unsigned char 
  9983 ;;  pos             4   13[BANK0 ] unsigned long 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  idx             1   25[BANK0 ] unsigned char 
  9986 ;;  data            5   19[BANK0 ] unsigned char [5]
  9987 ;;  reg             1   24[BANK0 ] unsigned char 
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  1    wreg      void 
  9990 ;; Registers used:
  9991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9997 ;;      Params:         0       4       0       0       0       0       0       0
  9998 ;;      Locals:         0       7       0       0       0       0       0       0
  9999 ;;      Temps:          0       2       0       0       0       0       0       0
 10000 ;;      Totals:         0      13       0       0       0       0       0       0
 10001 ;;Total ram usage:       13 bytes
 10002 ;; Hardware stack levels used: 1
 10003 ;; Hardware stack levels required when called: 10
 10004 ;; This function calls:
 10005 ;;		_I2C1_Write
 10006 ;;		_unpackLong
 10007 ;; This function is called by:
 10008 ;;		_ProcessMsg
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012     0530                     _KAPS_StorePos:	
 10013                           ;psect for function _KAPS_StorePos
 10014                           
 10015                           
 10016                           ;incstack = 0
 10017                           ; Regs used in _KAPS_StorePos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10018                           ;KAPS_StorePos@idx stored from wreg
 10019     0530  0020               	movlb	0	; select bank0
 10020     0531  00B9               	movwf	KAPS_StorePos@idx
 10021     0532                     l3895:
 10022                           
 10023                           ;kaps.c: 65:     idx--;
 10024     0532  3001               	movlw	1
 10025     0533  02B9               	subwf	KAPS_StorePos@idx,f
 10026     0534                     l3897:
 10027                           
 10028                           ;kaps.c: 67:     uint8_t reg = (idx)*4 + 0x04;
 10029     0534  0839               	movf	KAPS_StorePos@idx,w
 10030     0535  00B1               	movwf	??_KAPS_StorePos
 10031     0536  3001               	movlw	1
 10032     0537                     u1965:
 10033     0537  35B1               	lslf	??_KAPS_StorePos,f
 10034     0538  3EFF               	addlw	-1
 10035     0539  1D03               	skipz
 10036     053A  2D37               	goto	u1965
 10037     053B  3531               	lslf	??_KAPS_StorePos,w
 10038     053C  3E04               	addlw	4
 10039     053D  00B8               	movwf	KAPS_StorePos@reg
 10040     053E                     l3899:
 10041                           
 10042                           ;kaps.c: 68:     uint8_t data[5];;kaps.c: 70:     data[0] = idx;
 10043     053E  0839               	movf	KAPS_StorePos@idx,w
 10044     053F  00B3               	movwf	KAPS_StorePos@data
 10045     0540                     l3901:
 10046                           
 10047                           ;kaps.c: 71:     unpackLong(pos, &data[1]);
 10048     0540  0830               	movf	KAPS_StorePos@pos+3,w
 10049     0541  00A3               	movwf	unpackLong@value+3
 10050     0542  082F               	movf	KAPS_StorePos@pos+2,w
 10051     0543  00A2               	movwf	unpackLong@value+2
 10052     0544  082E               	movf	KAPS_StorePos@pos+1,w
 10053     0545  00A1               	movwf	unpackLong@value+1
 10054     0546  082D               	movf	KAPS_StorePos@pos,w
 10055     0547  00A0               	movwf	unpackLong@value
 10056     0548  3034               	movlw	(low ((KAPS_StorePos@data| 0+1)))& (0+255)
 10057     0549  00A4               	movwf	unpackLong@data
 10058     054A  3184  2468  3185   	fcall	_unpackLong
 10059     054D                     l3903:
 10060                           
 10061                           ;kaps.c: 73:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10062     054D  0020               	movlb	0	; select bank0
 10063     054E  0866               	movf	_kaps,w
 10064     054F  00B1               	movwf	??_KAPS_StorePos
 10065     0550  01B2               	clrf	??_KAPS_StorePos+1
 10066     0551  0831               	movf	??_KAPS_StorePos,w
 10067     0552  00A0               	movwf	I2C1_Write@address
 10068     0553  0832               	movf	??_KAPS_StorePos+1,w
 10069     0554  00A1               	movwf	I2C1_Write@address+1
 10070     0555  3038               	movlw	(low (KAPS_StorePos@reg| 0))& (0+255)
 10071     0556  00A2               	movwf	I2C1_Write@data
 10072     0557  3001               	movlw	1
 10073     0558  00A3               	movwf	I2C1_Write@dataLength
 10074     0559  3000               	movlw	0
 10075     055A  00A4               	movwf	I2C1_Write@dataLength+1
 10076     055B  318E  26D6  3185   	fcall	_I2C1_Write
 10077     055E                     l3905:
 10078                           
 10079                           ;kaps.c: 74:     I2C1_Write(kaps.m_bAddr, data, 5);
 10080     055E  0020               	movlb	0	; select bank0
 10081     055F  0866               	movf	_kaps,w
 10082     0560  00B1               	movwf	??_KAPS_StorePos
 10083     0561  01B2               	clrf	??_KAPS_StorePos+1
 10084     0562  0831               	movf	??_KAPS_StorePos,w
 10085     0563  00A0               	movwf	I2C1_Write@address
 10086     0564  0832               	movf	??_KAPS_StorePos+1,w
 10087     0565  00A1               	movwf	I2C1_Write@address+1
 10088     0566  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10089     0567  00A2               	movwf	I2C1_Write@data
 10090     0568  3005               	movlw	5
 10091     0569  00A3               	movwf	I2C1_Write@dataLength
 10092     056A  3000               	movlw	0
 10093     056B  00A4               	movwf	I2C1_Write@dataLength+1
 10094     056C  318E  26D6  3185   	fcall	_I2C1_Write
 10095     056F                     l722:
 10096     056F  0008               	return
 10097     0570                     __end_of_KAPS_StorePos:
 10098                           
 10099                           	psect	text38
 10100     0468                     __ptext38:	
 10101 ;; *************** function _unpackLong *****************
 10102 ;; Defined at:
 10103 ;;		line 57 in file "utils.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  value           4    0[BANK0 ] unsigned long 
 10106 ;;  data            1    4[BANK0 ] PTR unsigned char 
 10107 ;;		 -> KAPS_StorePos@data(5), KAPS_setAbsPos@data(4), ProcessMsg@payload(6), 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10119 ;;      Params:         0       5       0       0       0       0       0       0
 10120 ;;      Locals:         0       0       0       0       0       0       0       0
 10121 ;;      Temps:          0       4       0       0       0       0       0       0
 10122 ;;      Totals:         0       9       0       0       0       0       0       0
 10123 ;;Total ram usage:        9 bytes
 10124 ;; Hardware stack levels used: 1
 10125 ;; Hardware stack levels required when called: 7
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		_ProcessMsg
 10130 ;;		_KAPS_setAbsPos
 10131 ;;		_KAPS_StorePos
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135     0468                     _unpackLong:	
 10136                           ;psect for function _unpackLong
 10137                           
 10138     0468                     l3707:	
 10139                           ;incstack = 0
 10140                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
 10141                           
 10142                           
 10143                           ;utils.c: 59:     data[0] = (value & 0XFF);
 10144     0468  0020               	movlb	0	; select bank0
 10145     0469  0824               	movf	unpackLong@data,w
 10146     046A  0086               	movwf	6
 10147     046B  0187               	clrf	7
 10148     046C  0820               	movf	unpackLong@value,w
 10149     046D  0081               	movwf	1
 10150     046E                     l3709:
 10151                           
 10152                           ;utils.c: 60:     data[1] = (value >> 8) & 0xFF;
 10153     046E  0A24               	incf	unpackLong@data,w
 10154     046F  0086               	movwf	6
 10155     0470  0187               	clrf	7
 10156     0471  0820               	movf	unpackLong@value,w
 10157     0472  00A5               	movwf	??_unpackLong
 10158     0473  0821               	movf	unpackLong@value+1,w
 10159     0474  00A6               	movwf	??_unpackLong+1
 10160     0475  0822               	movf	unpackLong@value+2,w
 10161     0476  00A7               	movwf	??_unpackLong+2
 10162     0477  0823               	movf	unpackLong@value+3,w
 10163     0478  00A8               	movwf	??_unpackLong+3
 10164     0479  3008               	movlw	8
 10165     047A                     u1765:
 10166     047A  36A8               	lsrf	??_unpackLong+3,f
 10167     047B  0CA7               	rrf	??_unpackLong+2,f
 10168     047C  0CA6               	rrf	??_unpackLong+1,f
 10169     047D  0CA5               	rrf	??_unpackLong,f
 10170     047E                     u1760:
 10171     047E  0B89               	decfsz	9,f
 10172     047F  2C7A               	goto	u1765
 10173     0480  0825               	movf	??_unpackLong,w
 10174     0481  0081               	movwf	1
 10175     0482                     l3711:
 10176                           
 10177                           ;utils.c: 61:     data[2] = (value >> 16) & 0xFF;
 10178     0482  0824               	movf	unpackLong@data,w
 10179     0483  3E02               	addlw	2
 10180     0484  0086               	movwf	6
 10181     0485  0187               	clrf	7
 10182     0486  0820               	movf	unpackLong@value,w
 10183     0487  00A5               	movwf	??_unpackLong
 10184     0488  0821               	movf	unpackLong@value+1,w
 10185     0489  00A6               	movwf	??_unpackLong+1
 10186     048A  0822               	movf	unpackLong@value+2,w
 10187     048B  00A7               	movwf	??_unpackLong+2
 10188     048C  0823               	movf	unpackLong@value+3,w
 10189     048D  00A8               	movwf	??_unpackLong+3
 10190     048E  3010               	movlw	16
 10191     048F                     u1775:
 10192     048F  36A8               	lsrf	??_unpackLong+3,f
 10193     0490  0CA7               	rrf	??_unpackLong+2,f
 10194     0491  0CA6               	rrf	??_unpackLong+1,f
 10195     0492  0CA5               	rrf	??_unpackLong,f
 10196     0493                     u1770:
 10197     0493  0B89               	decfsz	9,f
 10198     0494  2C8F               	goto	u1775
 10199     0495  0825               	movf	??_unpackLong,w
 10200     0496  0081               	movwf	1
 10201     0497                     l3713:
 10202                           
 10203                           ;utils.c: 62:     data[3] = (value >> 24) & 0xFF;
 10204     0497  0824               	movf	unpackLong@data,w
 10205     0498  3E03               	addlw	3
 10206     0499  0086               	movwf	6
 10207     049A  0187               	clrf	7
 10208     049B  0820               	movf	unpackLong@value,w
 10209     049C  00A5               	movwf	??_unpackLong
 10210     049D  0821               	movf	unpackLong@value+1,w
 10211     049E  00A6               	movwf	??_unpackLong+1
 10212     049F  0822               	movf	unpackLong@value+2,w
 10213     04A0  00A7               	movwf	??_unpackLong+2
 10214     04A1  0823               	movf	unpackLong@value+3,w
 10215     04A2  00A8               	movwf	??_unpackLong+3
 10216     04A3  3018               	movlw	24
 10217     04A4                     u1785:
 10218     04A4  36A8               	lsrf	??_unpackLong+3,f
 10219     04A5  0CA7               	rrf	??_unpackLong+2,f
 10220     04A6  0CA6               	rrf	??_unpackLong+1,f
 10221     04A7  0CA5               	rrf	??_unpackLong,f
 10222     04A8                     u1780:
 10223     04A8  0B89               	decfsz	9,f
 10224     04A9  2CA4               	goto	u1785
 10225     04AA  0825               	movf	??_unpackLong,w
 10226     04AB  0081               	movwf	1
 10227     04AC                     l745:
 10228     04AC  0008               	return
 10229     04AD                     __end_of_unpackLong:
 10230                           
 10231                           	psect	text39
 10232     0F5E                     __ptext39:	
 10233 ;; *************** function _KAPS_GoToIdx *****************
 10234 ;; Defined at:
 10235 ;;		line 24 in file "kaps.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  idx             1    wreg     unsigned char 
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;  idx             1    7[BANK0 ] unsigned char 
 10240 ;;  reg             1    8[BANK0 ] unsigned char 
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  1    wreg      void 
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0, pclath, cstack
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10250 ;;      Params:         0       0       0       0       0       0       0       0
 10251 ;;      Locals:         0       2       0       0       0       0       0       0
 10252 ;;      Temps:          0       2       0       0       0       0       0       0
 10253 ;;      Totals:         0       4       0       0       0       0       0       0
 10254 ;;Total ram usage:        4 bytes
 10255 ;; Hardware stack levels used: 1
 10256 ;; Hardware stack levels required when called: 10
 10257 ;; This function calls:
 10258 ;;		_I2C1_Write
 10259 ;; This function is called by:
 10260 ;;		_ProcessMsg
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264     0F5E                     _KAPS_GoToIdx:	
 10265                           ;psect for function _KAPS_GoToIdx
 10266                           
 10267                           
 10268                           ;incstack = 0
 10269                           ; Regs used in _KAPS_GoToIdx: [wreg+status,2+status,0+pclath+cstack]
 10270                           ;KAPS_GoToIdx@idx stored from wreg
 10271     0F5E  0020               	movlb	0	; select bank0
 10272     0F5F  00A7               	movwf	KAPS_GoToIdx@idx
 10273     0F60                     l3875:
 10274                           
 10275                           ;kaps.c: 25:     uint8_t reg = 0xFE;
 10276     0F60  30FE               	movlw	254
 10277     0F61  00A8               	movwf	KAPS_GoToIdx@reg
 10278     0F62                     l3877:
 10279                           
 10280                           ;kaps.c: 27:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10281     0F62  0866               	movf	_kaps,w
 10282     0F63  00A5               	movwf	??_KAPS_GoToIdx
 10283     0F64  01A6               	clrf	??_KAPS_GoToIdx+1
 10284     0F65  0825               	movf	??_KAPS_GoToIdx,w
 10285     0F66  00A0               	movwf	I2C1_Write@address
 10286     0F67  0826               	movf	??_KAPS_GoToIdx+1,w
 10287     0F68  00A1               	movwf	I2C1_Write@address+1
 10288     0F69  3028               	movlw	(low (KAPS_GoToIdx@reg| 0))& (0+255)
 10289     0F6A  00A2               	movwf	I2C1_Write@data
 10290     0F6B  3001               	movlw	1
 10291     0F6C  00A3               	movwf	I2C1_Write@dataLength
 10292     0F6D  3000               	movlw	0
 10293     0F6E  00A4               	movwf	I2C1_Write@dataLength+1
 10294     0F6F  318E  26D6  318F   	fcall	_I2C1_Write
 10295     0F72                     l3879:
 10296                           
 10297                           ;kaps.c: 28:     I2C1_Write(kaps.m_bAddr, &idx, 1);
 10298     0F72  0020               	movlb	0	; select bank0
 10299     0F73  0866               	movf	_kaps,w
 10300     0F74  00A5               	movwf	??_KAPS_GoToIdx
 10301     0F75  01A6               	clrf	??_KAPS_GoToIdx+1
 10302     0F76  0825               	movf	??_KAPS_GoToIdx,w
 10303     0F77  00A0               	movwf	I2C1_Write@address
 10304     0F78  0826               	movf	??_KAPS_GoToIdx+1,w
 10305     0F79  00A1               	movwf	I2C1_Write@address+1
 10306     0F7A  3027               	movlw	(low (KAPS_GoToIdx@idx| 0))& (0+255)
 10307     0F7B  00A2               	movwf	I2C1_Write@data
 10308     0F7C  3001               	movlw	1
 10309     0F7D  00A3               	movwf	I2C1_Write@dataLength
 10310     0F7E  3000               	movlw	0
 10311     0F7F  00A4               	movwf	I2C1_Write@dataLength+1
 10312     0F80  318E  26D6  318F   	fcall	_I2C1_Write
 10313     0F83                     l713:
 10314     0F83  0008               	return
 10315     0F84                     __end_of_KAPS_GoToIdx:
 10316                           
 10317                           	psect	text40
 10318     0ED6                     __ptext40:	
 10319 ;; *************** function _I2C1_Write *****************
 10320 ;; Defined at:
 10321 ;;		line 142 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  address         2    0[BANK0 ] unsigned short 
 10324 ;;  data            1    2[BANK0 ] PTR unsigned char 
 10325 ;;		 -> KAPS_getPos@reg(1), KAPS_getIndex@reg(1), KAPS_getStatus@reg(1), KAPS_StorePos@data(5), 
 10326 ;;		 -> KAPS_StorePos@reg(1), KAPS_setRelPos@offset(1), KAPS_setRelPos@reg(1), KAPS_setAbsPos@data(4), 
 10327 ;;		 -> KAPS_setAbsPos@reg(1), KAPS_GoToIdx@idx(1), KAPS_GoToIdx@reg(1), 
 10328 ;;  dataLength      2    3[BANK0 ] unsigned int 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  retStatus       1    0        _Bool 
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      _Bool 
 10333 ;; Registers used:
 10334 ;;		wreg, status,2, status,0, pclath, cstack
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10340 ;;      Params:         0       5       0       0       0       0       0       0
 10341 ;;      Locals:         0       0       0       0       0       0       0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0
 10343 ;;      Totals:         0       5       0       0       0       0       0       0
 10344 ;;Total ram usage:        5 bytes
 10345 ;; Hardware stack levels used: 1
 10346 ;; Hardware stack levels required when called: 9
 10347 ;; This function calls:
 10348 ;;		_I2C1_IsBusy
 10349 ;;		_I2C1_WriteStart
 10350 ;; This function is called by:
 10351 ;;		_KAPS_GoToIdx
 10352 ;;		_KAPS_setAbsPos
 10353 ;;		_KAPS_setRelPos
 10354 ;;		_KAPS_StorePos
 10355 ;;		_KAPS_getStatus
 10356 ;;		_KAPS_getIndex
 10357 ;;		_KAPS_getPos
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361     0ED6                     _I2C1_Write:	
 10362                           ;psect for function _I2C1_Write
 10363                           
 10364     0ED6                     l3631:	
 10365                           ;incstack = 0
 10366                           ; Regs used in _I2C1_Write: [wreg+status,2+status,0+pclath+cstack]
 10367                           
 10368     0ED6                     l3633:
 10369                           
 10370                           ;mcc_generated_files/i2c_host/src/mssp.c: 145:     if (!I2C1_IsBusy())
 10371     0ED6  318E  2641  318E   	fcall	_I2C1_IsBusy
 10372     0ED9  3A00               	xorlw	0
 10373     0EDA  1D03               	skipz
 10374     0EDB  2EDD               	goto	u1721
 10375     0EDC  2EDE               	goto	u1720
 10376     0EDD                     u1721:
 10377     0EDD  2EF3               	goto	l184
 10378     0EDE                     u1720:
 10379     0EDE                     l3635:
 10380                           
 10381                           ;mcc_generated_files/i2c_host/src/mssp.c: 146:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 147:         i2c1Status.busy = 1;
 10382     0EDE  3001               	movlw	1
 10383     0EDF  0020               	movlb	0	; select bank0
 10384     0EE0  00D2               	movwf	_i2c1Status	;volatile
 10385                           
 10386                           ;mcc_generated_files/i2c_host/src/mssp.c: 148:         i2c1Status.address = address;
 10387     0EE1  0821               	movf	I2C1_Write@address+1,w
 10388     0EE2  00D4               	movwf	_i2c1Status+2	;volatile
 10389     0EE3  0820               	movf	I2C1_Write@address,w
 10390     0EE4  00D3               	movwf	_i2c1Status+1	;volatile
 10391     0EE5                     l3637:
 10392                           
 10393                           ;mcc_generated_files/i2c_host/src/mssp.c: 149:         i2c1Status.switchToRead = 0;
 10394     0EE5  01DB               	clrf	_i2c1Status+9	;volatile
 10395     0EE6                     l3639:
 10396                           
 10397                           ;mcc_generated_files/i2c_host/src/mssp.c: 150:         i2c1Status.writePtr = data;
 10398     0EE6  0822               	movf	I2C1_Write@data,w
 10399     0EE7  00D5               	movwf	low ((_i2c1Status| 0+3))	;volatile
 10400     0EE8                     l3641:
 10401                           
 10402                           ;mcc_generated_files/i2c_host/src/mssp.c: 151:         i2c1Status.writeLength = dataLeng
      +                          th;
 10403     0EE8  0824               	movf	I2C1_Write@dataLength+1,w
 10404     0EE9  00D7               	movwf	_i2c1Status+5	;volatile
 10405     0EEA  0823               	movf	I2C1_Write@dataLength,w
 10406     0EEB  00D6               	movwf	_i2c1Status+4	;volatile
 10407     0EEC                     l3643:
 10408                           
 10409                           ;mcc_generated_files/i2c_host/src/mssp.c: 152:         i2c1Status.readPtr = ((void*)0);
 10410     0EEC  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 10411     0EED                     l3645:
 10412                           
 10413                           ;mcc_generated_files/i2c_host/src/mssp.c: 153:         i2c1Status.readLength = 0;
 10414     0EED  01D9               	clrf	_i2c1Status+7	;volatile
 10415     0EEE  01DA               	clrf	_i2c1Status+8	;volatile
 10416     0EEF                     l3647:
 10417                           
 10418                           ;mcc_generated_files/i2c_host/src/mssp.c: 154:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 10419     0EEF  01DC               	clrf	_i2c1Status+10	;volatile
 10420     0EF0                     l3649:
 10421                           
 10422                           ;mcc_generated_files/i2c_host/src/mssp.c: 155:         I2C1_WriteStart();
 10423     0EF0  318D  258F  318E   	fcall	_I2C1_WriteStart
 10424     0EF3                     l3651:
 10425     0EF3                     l184:
 10426     0EF3  0008               	return
 10427     0EF4                     __end_of_I2C1_Write:
 10428                           
 10429                           	psect	text41
 10430     0D8F                     __ptext41:	
 10431 ;; *************** function _I2C1_WriteStart *****************
 10432 ;; Defined at:
 10433 ;;		line 238 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;		None
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1    wreg      void 
 10440 ;; Registers used:
 10441 ;;		wreg, status,2, status,0, pclath, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10447 ;;      Params:         0       0       0       0       0       0       0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0
 10450 ;;      Totals:         0       0       0       0       0       0       0       0
 10451 ;;Total ram usage:        0 bytes
 10452 ;; Hardware stack levels used: 1
 10453 ;; Hardware stack levels required when called: 8
 10454 ;; This function calls:
 10455 ;;		_I2C1_StartSend
 10456 ;; This function is called by:
 10457 ;;		_I2C1_Write
 10458 ;;		_I2C1_WriteRead
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462     0D8F                     _I2C1_WriteStart:	
 10463                           ;psect for function _I2C1_WriteStart
 10464                           
 10465     0D8F                     l3563:	
 10466                           ;incstack = 0
 10467                           ; Regs used in _I2C1_WriteStart: [wreg+status,2+status,0+pclath+cstack]
 10468                           
 10469                           
 10470                           ;mcc_generated_files/i2c_host/src/mssp.c: 240:     I2C1_StartSend();
 10471     0D8F  318D  250A  318D   	fcall	_I2C1_StartSend
 10472     0D92                     l3565:
 10473                           
 10474                           ;mcc_generated_files/i2c_host/src/mssp.c: 241:     i2c1Status.state = I2C_STATE_SEND_WR_
      +                          ADDR;
 10475     0D92  3002               	movlw	2
 10476     0D93  0020               	movlb	0	; select bank0
 10477     0D94  00DD               	movwf	_i2c1Status+11	;volatile
 10478     0D95                     l216:
 10479     0D95  0008               	return
 10480     0D96                     __end_of_I2C1_WriteStart:
 10481                           
 10482                           	psect	text42
 10483     0D0A                     __ptext42:	
 10484 ;; *************** function _I2C1_StartSend *****************
 10485 ;; Defined at:
 10486 ;;		line 425 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;		None
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;		None
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      void 
 10493 ;; Registers used:
 10494 ;;		None
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10500 ;;      Params:         0       0       0       0       0       0       0       0
 10501 ;;      Locals:         0       0       0       0       0       0       0       0
 10502 ;;      Temps:          0       0       0       0       0       0       0       0
 10503 ;;      Totals:         0       0       0       0       0       0       0       0
 10504 ;;Total ram usage:        0 bytes
 10505 ;; Hardware stack levels used: 1
 10506 ;; Hardware stack levels required when called: 7
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		_I2C1_ReadStart
 10511 ;;		_I2C1_WriteStart
 10512 ;; This function uses a non-reentrant model
 10513 ;;
 10514                           
 10515     0D0A                     _I2C1_StartSend:	
 10516                           ;psect for function _I2C1_StartSend
 10517                           
 10518     0D0A                     l3523:	
 10519                           ;incstack = 0
 10520                           ; Regs used in _I2C1_StartSend: []
 10521                           
 10522                           
 10523                           ;mcc_generated_files/i2c_host/src/mssp.c: 427:     SSP1CON2bits.SEN = 1;
 10524     0D0A  0024               	movlb	4	; select bank4
 10525     0D0B  1416               	bsf	22,0	;volatile
 10526     0D0C                     l288:
 10527     0D0C  0008               	return
 10528     0D0D                     __end_of_I2C1_StartSend:
 10529                           
 10530                           	psect	text43
 10531     0E41                     __ptext43:	
 10532 ;; *************** function _I2C1_IsBusy *****************
 10533 ;; Defined at:
 10534 ;;		line 206 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      _Bool 
 10541 ;; Registers used:
 10542 ;;		wreg, status,2, status,0
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10548 ;;      Params:         0       0       0       0       0       0       0       0
 10549 ;;      Locals:         1       0       0       0       0       0       0       0
 10550 ;;      Temps:          0       0       0       0       0       0       0       0
 10551 ;;      Totals:         1       0       0       0       0       0       0       0
 10552 ;;Total ram usage:        1 bytes
 10553 ;; Hardware stack levels used: 1
 10554 ;; Hardware stack levels required when called: 7
 10555 ;; This function calls:
 10556 ;;		Nothing
 10557 ;; This function is called by:
 10558 ;;		_I2C1_Write
 10559 ;;		_I2C1_Read
 10560 ;;		_I2C1_WriteRead
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564     0E41                     _I2C1_IsBusy:	
 10565                           ;psect for function _I2C1_IsBusy
 10566                           
 10567     0E41                     l3551:	
 10568                           ;incstack = 0
 10569                           ; Regs used in _I2C1_IsBusy: [wreg+status,2+status,0]
 10570                           
 10571                           
 10572                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return i2c1Status.busy || SSP1STATbit
      +                          s.S;
 10573     0E41  01F4               	clrf	_I2C1_IsBusy$646
 10574     0E42  0AF4               	incf	_I2C1_IsBusy$646,f
 10575     0E43                     l3553:
 10576     0E43  0020               	movlb	0	; select bank0
 10577     0E44  0852               	movf	_i2c1Status,w	;volatile
 10578     0E45  1D03               	btfss	3,2
 10579     0E46  2E48               	goto	u1551
 10580     0E47  2E49               	goto	u1550
 10581     0E48                     u1551:
 10582     0E48  2E4F               	goto	l3559
 10583     0E49                     u1550:
 10584     0E49                     l3555:
 10585     0E49  0024               	movlb	4	; select bank4
 10586     0E4A  1994               	btfsc	20,3	;volatile
 10587     0E4B  2E4D               	goto	u1561
 10588     0E4C  2E4E               	goto	u1560
 10589     0E4D                     u1561:
 10590     0E4D  2E4F               	goto	l3559
 10591     0E4E                     u1560:
 10592     0E4E                     l3557:
 10593     0E4E  01F4               	clrf	_I2C1_IsBusy$646
 10594     0E4F                     l3559:
 10595     0E4F  0874               	movf	_I2C1_IsBusy$646,w
 10596     0E50                     l200:
 10597     0E50  0008               	return
 10598     0E51                     __end_of_I2C1_IsBusy:
 10599                           
 10600                           	psect	text44
 10601     01AC                     __ptext44:	
 10602 ;; *************** function _Parse *****************
 10603 ;; Defined at:
 10604 ;;		line 70 in file "parser.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  data            1    wreg     unsigned char 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  data            1    8[BANK0 ] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  1    wreg      _Bool 
 10611 ;; Registers used:
 10612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10618 ;;      Params:         0       0       0       0       0       0       0       0
 10619 ;;      Locals:         0       1       0       0       0       0       0       0
 10620 ;;      Temps:          0       2       0       0       0       0       0       0
 10621 ;;      Totals:         0       3       0       0       0       0       0       0
 10622 ;;Total ram usage:        3 bytes
 10623 ;; Hardware stack levels used: 1
 10624 ;; Hardware stack levels required when called: 11
 10625 ;; This function calls:
 10626 ;;		_SendMsg
 10627 ;;		_SendNack
 10628 ;; This function is called by:
 10629 ;;		_main
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633     01AC                     _Parse:	
 10634                           ;psect for function _Parse
 10635                           
 10636                           
 10637                           ;incstack = 0
 10638                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10639                           ;Parse@data stored from wreg
 10640     01AC  0020               	movlb	0	; select bank0
 10641     01AD  00A8               	movwf	Parse@data
 10642     01AE                     l3963:
 10643                           
 10644                           ;parser.c: 71:     switch (parser.m_State) {
 10645     01AE  2A48               	goto	l4035
 10646     01AF                     l3965:
 10647                           
 10648                           ;parser.c: 73:             if (data == 0x01) {
 10649     01AF  0328               	decf	Parse@data,w
 10650     01B0  1D03               	btfss	3,2
 10651     01B1  29B3               	goto	u2011
 10652     01B2  29B4               	goto	u2010
 10653     01B3                     u2011:
 10654     01B3  29B9               	goto	l3971
 10655     01B4                     u2010:
 10656     01B4                     l3967:
 10657                           
 10658                           ;parser.c: 74:                 parser.m_State = WAIT_ID;
 10659     01B4  01DE               	clrf	_parser
 10660     01B5  0ADE               	incf	_parser,f
 10661     01B6                     l3969:
 10662                           
 10663                           ;parser.c: 75:                 parser.m_bSum = 0x00;
 10664     01B6  01E4               	clrf	_parser+6
 10665                           
 10666                           ;parser.c: 76:                 parser.m_bDataIndex = 0;
 10667     01B7  01E0               	clrf	_parser+2
 10668                           
 10669                           ;parser.c: 77:             } else
 10670     01B8  2A5E               	goto	l4037
 10671     01B9                     l3971:
 10672                           
 10673                           ;parser.c: 78:                 SendNack(WRONG_MESSAGE);
 10674     01B9  3002               	movlw	2
 10675     01BA  318D  25C3  3181   	fcall	_SendNack
 10676     01BD  2A5E               	goto	l4037
 10677     01BE                     l3973:
 10678                           
 10679                           ;parser.c: 82:             parser.m_MsgID = data;
 10680     01BE  0828               	movf	Parse@data,w
 10681     01BF  00DF               	movwf	_parser+1
 10682     01C0                     l3975:
 10683                           
 10684                           ;parser.c: 83:             parser.m_bEcho = 1;
 10685     01C0  01E5               	clrf	_parser+7
 10686     01C1  0AE5               	incf	_parser+7,f
 10687                           
 10688                           ;parser.c: 85:             switch ((uint8_t) parser.m_MsgID) {
 10689     01C2  29EB               	goto	l3999
 10690     01C3                     l3977:
 10691                           
 10692                           ;parser.c: 89:                     parser.m_bEcho = 0;
 10693     01C3  01E5               	clrf	_parser+7
 10694                           
 10695                           ;parser.c: 90:                     parser.m_bReplySize = 0;
 10696     01C4  01E2               	clrf	_parser+4
 10697                           
 10698                           ;parser.c: 91:                     parser.m_bDataSize = 0;
 10699     01C5  01E1               	clrf	_parser+3
 10700     01C6                     l3979:
 10701                           
 10702                           ;parser.c: 92:                     parser.m_State = WAIT_CKSUM;
 10703     01C6  3003               	movlw	3
 10704     01C7  00DE               	movwf	_parser
 10705                           
 10706                           ;parser.c: 93:                     break;
 10707     01C8  2A5E               	goto	l4037
 10708     01C9                     l785:	
 10709                           ;parser.c: 95:                 case NVT_RFDU_GoToPos:
 10710                           
 10711                           
 10712                           ;parser.c: 96:                     parser.m_bReplySize = 1;
 10713     01C9  01E2               	clrf	_parser+4
 10714     01CA  0AE2               	incf	_parser+4,f
 10715                           
 10716                           ;parser.c: 97:                     parser.m_bDataSize = 1;
 10717     01CB  01E1               	clrf	_parser+3
 10718     01CC  0AE1               	incf	_parser+3,f
 10719     01CD                     l3981:
 10720                           
 10721                           ;parser.c: 98:                     parser.m_State = WAIT_VALUE;
 10722     01CD  3002               	movlw	2
 10723     01CE  00DE               	movwf	_parser
 10724                           
 10725                           ;parser.c: 99:                     break;
 10726     01CF  2A5E               	goto	l4037
 10727     01D0                     l788:	
 10728                           ;parser.c: 103:                 case NVT_RFDU_SSPAPout:
 10729                           
 10730     01D0                     l3983:
 10731                           
 10732                           ;parser.c: 105:                     parser.m_bEcho = 0;
 10733     01D0  01E5               	clrf	_parser+7
 10734     01D1                     l3985:
 10735                           
 10736                           ;parser.c: 106:                     parser.m_bReplySize = 1;
 10737     01D1  01E2               	clrf	_parser+4
 10738     01D2  0AE2               	incf	_parser+4,f
 10739     01D3                     l3987:
 10740                           
 10741                           ;parser.c: 107:                     parser.m_bDataSize = 1;
 10742     01D3  01E1               	clrf	_parser+3
 10743     01D4  0AE1               	incf	_parser+3,f
 10744     01D5  29CD               	goto	l3981
 10745     01D6                     l3991:
 10746                           
 10747                           ;parser.c: 112:                     parser.m_bReplySize = 2;
 10748     01D6  3002               	movlw	2
 10749     01D7  00E2               	movwf	_parser+4
 10750                           
 10751                           ;parser.c: 113:                     parser.m_bDataSize = 2;
 10752     01D8  3002               	movlw	2
 10753     01D9  00E1               	movwf	_parser+3
 10754                           
 10755                           ;parser.c: 114:                     parser.m_State = WAIT_VALUE;
 10756     01DA  3002               	movlw	2
 10757     01DB  00DE               	movwf	_parser
 10758                           
 10759                           ;parser.c: 115:                     break;
 10760     01DC  2A5E               	goto	l4037
 10761     01DD                     l3993:
 10762                           
 10763                           ;parser.c: 118:                     parser.m_bReplySize = 4;
 10764     01DD  3004               	movlw	4
 10765     01DE  00E2               	movwf	_parser+4
 10766                           
 10767                           ;parser.c: 119:                     parser.m_bDataSize = 4;
 10768     01DF  3004               	movlw	4
 10769     01E0  00E1               	movwf	_parser+3
 10770                           
 10771                           ;parser.c: 120:                     parser.m_State = WAIT_VALUE;
 10772     01E1  3002               	movlw	2
 10773     01E2  00DE               	movwf	_parser
 10774                           
 10775                           ;parser.c: 121:                     break;
 10776     01E3  2A5E               	goto	l4037
 10777     01E4                     l3995:
 10778                           
 10779                           ;parser.c: 124:                     parser.m_bReplySize = 5;
 10780     01E4  3005               	movlw	5
 10781     01E5  00E2               	movwf	_parser+4
 10782                           
 10783                           ;parser.c: 125:                     parser.m_bDataSize = 5;
 10784     01E6  3005               	movlw	5
 10785     01E7  00E1               	movwf	_parser+3
 10786                           
 10787                           ;parser.c: 126:                     parser.m_State = WAIT_VALUE;
 10788     01E8  3002               	movlw	2
 10789     01E9  00DE               	movwf	_parser
 10790                           
 10791                           ;parser.c: 127:                     break;
 10792     01EA  2A5E               	goto	l4037
 10793     01EB                     l3999:
 10794     01EB  085F               	movf	_parser+1,w
 10795                           
 10796                           ; Switch size 1, requested type "simple"
 10797                           ; Number of cases is 11, Range of values is 1 to 17
 10798                           ; switch strategies available:
 10799                           ; Name         Instructions Cycles
 10800                           ; simple_byte           34    18 (average)
 10801                           ; direct_byte           43     9 (fixed)
 10802                           ; jumptable            263     9 (fixed)
 10803                           ;	Chosen strategy is simple_byte
 10804     01EC  3A01               	xorlw	1	; case 1
 10805     01ED  1903               	skipnz
 10806     01EE  29D6               	goto	l3991
 10807     01EF  3A03               	xorlw	3	; case 2
 10808     01F0  1903               	skipnz
 10809     01F1  29D0               	goto	l788
 10810     01F2  3A01               	xorlw	1	; case 3
 10811     01F3  1903               	skipnz
 10812     01F4  29D0               	goto	l3983
 10813     01F5  3A07               	xorlw	7	; case 4
 10814     01F6  1903               	skipnz
 10815     01F7  29D0               	goto	l3983
 10816     01F8  3A01               	xorlw	1	; case 5
 10817     01F9  1903               	skipnz
 10818     01FA  29C3               	goto	l3977
 10819     01FB  3A03               	xorlw	3	; case 6
 10820     01FC  1903               	skipnz
 10821     01FD  29C3               	goto	l3977
 10822     01FE  3A01               	xorlw	1	; case 7
 10823     01FF  1903               	skipnz
 10824     0200  29C9               	goto	l785
 10825     0201  3A0F               	xorlw	15	; case 8
 10826     0202  1903               	skipnz
 10827     0203  29DD               	goto	l3993
 10828     0204  3A01               	xorlw	1	; case 9
 10829     0205  1903               	skipnz
 10830     0206  29D0               	goto	l3983
 10831     0207  3A03               	xorlw	3	; case 10
 10832     0208  1903               	skipnz
 10833     0209  29E4               	goto	l3995
 10834     020A  3A1B               	xorlw	27	; case 17
 10835     020B  1903               	skipnz
 10836     020C  29C3               	goto	l3977
 10837     020D  2A5E               	goto	l4037
 10838     020E                     l4001:
 10839                           
 10840                           ;parser.c: 132:             parserDataBuffer[parser.m_bDataIndex] = data;
 10841     020E  0860               	movf	_parser+2,w
 10842     020F  3EC8               	addlw	(low (_parserDataBuffer| 0))& (0+255)
 10843     0210  0086               	movwf	6
 10844     0211  0187               	clrf	7
 10845     0212  0828               	movf	Parse@data,w
 10846     0213  0081               	movwf	1
 10847     0214                     l4003:
 10848                           
 10849                           ;parser.c: 133:             parser.m_bSum += data;
 10850     0214  0828               	movf	Parse@data,w
 10851     0215  00A6               	movwf	??_Parse
 10852     0216  0826               	movf	??_Parse,w
 10853     0217  07E4               	addwf	_parser+6,f
 10854     0218                     l4005:
 10855                           
 10856                           ;parser.c: 134:             parser.m_bDataIndex++;
 10857     0218  3001               	movlw	1
 10858     0219  00A6               	movwf	??_Parse
 10859     021A  0826               	movf	??_Parse,w
 10860     021B  07E0               	addwf	_parser+2,f
 10861     021C                     l4007:
 10862                           
 10863                           ;parser.c: 135:             parser.m_bDataSize--;
 10864     021C  3001               	movlw	1
 10865     021D  02E1               	subwf	_parser+3,f
 10866     021E                     l4009:
 10867                           
 10868                           ;parser.c: 136:             if (parser.m_bDataSize == 0)
 10869     021E  0861               	movf	_parser+3,w
 10870     021F  1D03               	btfss	3,2
 10871     0220  2A22               	goto	u2021
 10872     0221  2A23               	goto	u2020
 10873     0222                     u2021:
 10874     0222  2A5E               	goto	l4037
 10875     0223                     u2020:
 10876     0223  29C6               	goto	l3979
 10877     0224                     l4013:
 10878                           
 10879                           ;parser.c: 141:             parser.m_bCkSum = data;
 10880     0224  0828               	movf	Parse@data,w
 10881     0225  00E3               	movwf	_parser+5
 10882     0226                     l4015:
 10883                           
 10884                           ;parser.c: 142:             parser.m_State = WAIT_SOM;
 10885     0226  01DE               	clrf	_parser
 10886     0227                     l4017:
 10887                           
 10888                           ;parser.c: 144:             if (parser.m_bSum == parser.m_bCkSum) {
 10889     0227  0864               	movf	_parser+6,w
 10890     0228  0663               	xorwf	_parser+5,w
 10891     0229  1D03               	skipz
 10892     022A  2A2C               	goto	u2031
 10893     022B  2A2D               	goto	u2030
 10894     022C                     u2031:
 10895     022C  2A3C               	goto	l4029
 10896     022D                     u2030:
 10897     022D                     l4019:
 10898                           
 10899                           ;parser.c: 145:                 if (parser.m_bEcho)
 10900     022D  0865               	movf	_parser+7,w
 10901     022E  1903               	btfsc	3,2
 10902     022F  2A31               	goto	u2041
 10903     0230  2A32               	goto	u2040
 10904     0231                     u2041:
 10905     0231  2A3A               	goto	l4023
 10906     0232                     u2040:
 10907     0232                     l4021:
 10908                           
 10909                           ;parser.c: 146:                     SendMsg(parser.m_MsgID, parserDataBuffer, parser.m_b
      +                          ReplySize);
 10910     0232  30C8               	movlw	(low (_parserDataBuffer| 0))& (0+255)
 10911     0233  00A0               	movwf	SendMsg@data
 10912     0234  0862               	movf	_parser+4,w
 10913     0235  00A1               	movwf	SendMsg@data_len
 10914     0236  085F               	movf	_parser+1,w
 10915     0237  3186  26D3  3181   	fcall	_SendMsg
 10916     023A                     l4023:
 10917                           
 10918                           ;parser.c: 148:                 return 1;
 10919     023A  3001               	movlw	1
 10920     023B  2A5F               	goto	l798
 10921     023C                     l4029:
 10922                           
 10923                           ;parser.c: 150:                 SendNack(CKSUM_ERR);
 10924     023C  3001               	movlw	1
 10925     023D  318D  25C3  3181   	fcall	_SendNack
 10926     0240  2A5E               	goto	l4037
 10927     0241                     l4031:
 10928                           
 10929                           ;parser.c: 154:             SendNack(WRONG_MESSAGE);
 10930     0241  3002               	movlw	2
 10931     0242  318D  25C3  3181   	fcall	_SendNack
 10932     0245                     l4033:
 10933                           
 10934                           ;parser.c: 155:             parser.m_State = WAIT_SOM;
 10935     0245  0020               	movlb	0	; select bank0
 10936     0246  01DE               	clrf	_parser
 10937                           
 10938                           ;parser.c: 156:     }
 10939     0247  2A5E               	goto	l4037
 10940     0248                     l4035:
 10941     0248  085E               	movf	_parser,w
 10942     0249  00A6               	movwf	??_Parse
 10943     024A  01A7               	clrf	??_Parse+1
 10944                           
 10945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10946                           ; Switch size 1, requested type "simple"
 10947                           ; Number of cases is 1, Range of values is 0 to 0
 10948                           ; switch strategies available:
 10949                           ; Name         Instructions Cycles
 10950                           ; simple_byte            4     3 (average)
 10951                           ; direct_byte            8     6 (fixed)
 10952                           ; jumptable            260     6 (fixed)
 10953                           ;	Chosen strategy is simple_byte
 10954     024B  0827               	movf	??_Parse+1,w
 10955     024C  3A00               	xorlw	0	; case 0
 10956     024D  1903               	skipnz
 10957     024E  2A50               	goto	l4221
 10958     024F  2A41               	goto	l4031
 10959     0250                     l4221:
 10960                           
 10961                           ; Switch size 1, requested type "simple"
 10962                           ; Number of cases is 4, Range of values is 0 to 3
 10963                           ; switch strategies available:
 10964                           ; Name         Instructions Cycles
 10965                           ; simple_byte           13     7 (average)
 10966                           ; direct_byte           14     6 (fixed)
 10967                           ; jumptable            260     6 (fixed)
 10968                           ;	Chosen strategy is simple_byte
 10969     0250  0826               	movf	??_Parse,w
 10970     0251  3A00               	xorlw	0	; case 0
 10971     0252  1903               	skipnz
 10972     0253  29AF               	goto	l3965
 10973     0254  3A01               	xorlw	1	; case 1
 10974     0255  1903               	skipnz
 10975     0256  29BE               	goto	l3973
 10976     0257  3A03               	xorlw	3	; case 2
 10977     0258  1903               	skipnz
 10978     0259  2A0E               	goto	l4001
 10979     025A  3A01               	xorlw	1	; case 3
 10980     025B  1903               	skipnz
 10981     025C  2A24               	goto	l4013
 10982     025D  2A41               	goto	l4031
 10983     025E                     l4037:
 10984                           
 10985                           ;parser.c: 158:     return 0;
 10986     025E  3000               	movlw	0
 10987     025F                     l798:
 10988     025F  0008               	return
 10989     0260                     __end_of_Parse:
 10990                           
 10991                           	psect	text45
 10992     0DC3                     __ptext45:	
 10993 ;; *************** function _SendNack *****************
 10994 ;; Defined at:
 10995 ;;		line 58 in file "parser.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;  error           1    wreg     unsigned char 
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;  error           1    5[BANK0 ] unsigned char 
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  1    wreg      void 
 11002 ;; Registers used:
 11003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11009 ;;      Params:         0       0       0       0       0       0       0       0
 11010 ;;      Locals:         0       1       0       0       0       0       0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0       0
 11012 ;;      Totals:         0       1       0       0       0       0       0       0
 11013 ;;Total ram usage:        1 bytes
 11014 ;; Hardware stack levels used: 1
 11015 ;; Hardware stack levels required when called: 10
 11016 ;; This function calls:
 11017 ;;		_SendMsg
 11018 ;; This function is called by:
 11019 ;;		_Parse
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023     0DC3                     _SendNack:	
 11024                           ;psect for function _SendNack
 11025                           
 11026                           
 11027                           ;incstack = 0
 11028                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11029                           ;SendNack@error stored from wreg
 11030     0DC3  0020               	movlb	0	; select bank0
 11031     0DC4  00A5               	movwf	SendNack@error
 11032     0DC5                     l3907:
 11033                           
 11034                           ;parser.c: 59:     SendMsg(RFDU_NVT_NACK, &error, 1);
 11035     0DC5  3025               	movlw	(low (SendNack@error| 0))& (0+255)
 11036     0DC6  00A0               	movwf	SendMsg@data
 11037     0DC7  01A1               	clrf	SendMsg@data_len
 11038     0DC8  0AA1               	incf	SendMsg@data_len,f
 11039     0DC9  300B               	movlw	11
 11040     0DCA  3186  26D3  318D   	fcall	_SendMsg
 11041     0DCD                     l771:
 11042     0DCD  0008               	return
 11043     0DCE                     __end_of_SendNack:
 11044                           
 11045                           	psect	text46
 11046     06D3                     __ptext46:	
 11047 ;; *************** function _SendMsg *****************
 11048 ;; Defined at:
 11049 ;;		line 35 in file "parser.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;  msg_id          1    wreg     unsigned char 
 11052 ;;  data            1    0[BANK0 ] PTR unsigned char 
 11053 ;;		 -> SendNack@error(1), parserDataBuffer(5), ProcessMsg@payload(6), 
 11054 ;;  data_len        1    1[BANK0 ] unsigned char 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  msg_id          1    4[BANK0 ] unsigned char 
 11057 ;;  sum             1    3[BANK0 ] unsigned char 
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  1    wreg      void 
 11060 ;; Registers used:
 11061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11067 ;;      Params:         0       2       0       0       0       0       0       0
 11068 ;;      Locals:         0       2       0       0       0       0       0       0
 11069 ;;      Temps:          0       1       0       0       0       0       0       0
 11070 ;;      Totals:         0       5       0       0       0       0       0       0
 11071 ;;Total ram usage:        5 bytes
 11072 ;; Hardware stack levels used: 1
 11073 ;; Hardware stack levels required when called: 9
 11074 ;; This function calls:
 11075 ;;		_SendSync
 11076 ;; This function is called by:
 11077 ;;		_ProcessMsg
 11078 ;;		_SendNack
 11079 ;;		_Parse
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083     06D3                     _SendMsg:	
 11084                           ;psect for function _SendMsg
 11085                           
 11086                           
 11087                           ;incstack = 0
 11088                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11089                           ;SendMsg@msg_id stored from wreg
 11090     06D3  0020               	movlb	0	; select bank0
 11091     06D4  00A4               	movwf	SendMsg@msg_id
 11092     06D5                     l3681:
 11093                           
 11094                           ;parser.c: 36:     uint8_t sum = 0x00;
 11095     06D5  01A3               	clrf	SendMsg@sum
 11096     06D6                     l3683:
 11097                           
 11098                           ;parser.c: 38:     SendSync(0x01);
 11099     06D6  3001               	movlw	1
 11100     06D7  318E  2632  3186   	fcall	_SendSync
 11101     06DA                     l3685:
 11102                           
 11103                           ;parser.c: 40:     SendSync(msg_id);
 11104     06DA  0020               	movlb	0	; select bank0
 11105     06DB  0824               	movf	SendMsg@msg_id,w
 11106     06DC  318E  2632  3186   	fcall	_SendSync
 11107     06DF                     l3687:
 11108                           
 11109                           ;parser.c: 42:     if (msg_id == RFDU_NVT_NACK)
 11110     06DF  300B               	movlw	11
 11111     06E0  0020               	movlb	0	; select bank0
 11112     06E1  0624               	xorwf	SendMsg@msg_id,w
 11113     06E2  1D03               	btfss	3,2
 11114     06E3  2EE5               	goto	u1741
 11115     06E4  2EE6               	goto	u1740
 11116     06E5                     u1741:
 11117     06E5  2EE7               	goto	l3691
 11118     06E6                     u1740:
 11119     06E6  2F07               	goto	l766
 11120     06E7                     l3691:
 11121                           
 11122                           ;parser.c: 45:     for (; data_len > 0; data_len--) {
 11123     06E7  0821               	movf	SendMsg@data_len,w
 11124     06E8  1D03               	btfss	3,2
 11125     06E9  2EEB               	goto	u1751
 11126     06EA  2EEC               	goto	u1750
 11127     06EB                     u1751:
 11128     06EB  2EED               	goto	l3695
 11129     06EC                     u1750:
 11130     06EC  2F03               	goto	l3705
 11131     06ED                     l3695:
 11132                           
 11133                           ;parser.c: 46:         SendSync(*data);
 11134     06ED  0820               	movf	SendMsg@data,w
 11135     06EE  0086               	movwf	6
 11136     06EF  0187               	clrf	7
 11137     06F0  0801               	movf	1,w
 11138     06F1  318E  2632  3186   	fcall	_SendSync
 11139     06F4                     l3697:
 11140                           
 11141                           ;parser.c: 47:         sum += *data;
 11142     06F4  0020               	movlb	0	; select bank0
 11143     06F5  0820               	movf	SendMsg@data,w
 11144     06F6  0086               	movwf	6
 11145     06F7  0187               	clrf	7
 11146     06F8  0801               	movf	1,w
 11147     06F9  00A2               	movwf	??_SendMsg
 11148     06FA  0822               	movf	??_SendMsg,w
 11149     06FB  07A3               	addwf	SendMsg@sum,f
 11150     06FC                     l3699:
 11151                           
 11152                           ;parser.c: 48:         data++;
 11153     06FC  3001               	movlw	1
 11154     06FD  00A2               	movwf	??_SendMsg
 11155     06FE  0822               	movf	??_SendMsg,w
 11156     06FF  07A0               	addwf	SendMsg@data,f
 11157     0700                     l3701:
 11158                           
 11159                           ;parser.c: 49:     }
 11160     0700  3001               	movlw	1
 11161     0701  02A1               	subwf	SendMsg@data_len,f
 11162     0702  2EE7               	goto	l3691
 11163     0703                     l3705:
 11164                           
 11165                           ;parser.c: 51:     SendSync(sum);
 11166     0703  0823               	movf	SendMsg@sum,w
 11167     0704  318E  2632  3186   	fcall	_SendSync
 11168     0707                     l766:
 11169     0707  0008               	return
 11170     0708                     __end_of_SendMsg:
 11171                           
 11172                           	psect	text47
 11173     0E32                     __ptext47:	
 11174 ;; *************** function _SendSync *****************
 11175 ;; Defined at:
 11176 ;;		line 23 in file "parser.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  data            1    wreg     unsigned char 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  data            1    5[COMMON] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, status,2, status,0, pclath, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11190 ;;      Params:         0       0       0       0       0       0       0       0
 11191 ;;      Locals:         1       0       0       0       0       0       0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0
 11193 ;;      Totals:         1       0       0       0       0       0       0       0
 11194 ;;Total ram usage:        1 bytes
 11195 ;; Hardware stack levels used: 1
 11196 ;; Hardware stack levels required when called: 8
 11197 ;; This function calls:
 11198 ;;		_EUSART_IsTxReady
 11199 ;;		_EUSART_Write
 11200 ;; This function is called by:
 11201 ;;		_SendMsg
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205     0E32                     _SendSync:	
 11206                           ;psect for function _SendSync
 11207                           
 11208                           
 11209                           ;incstack = 0
 11210                           ; Regs used in _SendSync: [wreg+status,2+status,0+pclath+cstack]
 11211                           ;SendSync@data stored from wreg
 11212     0E32  00F5               	movwf	SendSync@data
 11213     0E33                     l3571:
 11214     0E33                     l3573:	
 11215                           ;parser.c: 23: void SendSync(uint8_t data);parser.c: 24: {;parser.c: 25:     while(!EUSA
      +                          RT_IsTxReady());
 11216                           
 11217     0E33  318E  2623  318E   	fcall	_EUSART_IsTxReady
 11218     0E36  3A00               	xorlw	0
 11219     0E37  1903               	skipnz
 11220     0E38  2E3A               	goto	u1571
 11221     0E39  2E3B               	goto	u1570
 11222     0E3A                     u1571:
 11223     0E3A  2E33               	goto	l3573
 11224     0E3B                     u1570:
 11225     0E3B                     l3575:
 11226                           
 11227                           ;parser.c: 26:     EUSART_Write(data);
 11228     0E3B  0875               	movf	SendSync@data,w
 11229     0E3C  00F4               	movwf	EUSART_Write@txData
 11230     0E3D  318D  2534  318E   	fcall	_EUSART_Write
 11231     0E40                     l762:
 11232     0E40  0008               	return
 11233     0E41                     __end_of_SendSync:
 11234                           
 11235                           	psect	text48
 11236     0D34                     __ptext48:	
 11237 ;; *************** function _EUSART_Write *****************
 11238 ;; Defined at:
 11239 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;  txData          1    4[COMMON] unsigned char 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      void 
 11246 ;; Registers used:
 11247 ;;		wreg
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11253 ;;      Params:         1       0       0       0       0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0
 11255 ;;      Temps:          0       0       0       0       0       0       0       0
 11256 ;;      Totals:         1       0       0       0       0       0       0       0
 11257 ;;Total ram usage:        1 bytes
 11258 ;; Hardware stack levels used: 1
 11259 ;; Hardware stack levels required when called: 7
 11260 ;; This function calls:
 11261 ;;		Nothing
 11262 ;; This function is called by:
 11263 ;;		_SendSync
 11264 ;;		_EUSART_sendMsg
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268     0D34                     _EUSART_Write:	
 11269                           ;psect for function _EUSART_Write
 11270                           
 11271     0D34                     l3537:	
 11272                           ;incstack = 0
 11273                           ; Regs used in _EUSART_Write: [wreg]
 11274                           
 11275                           
 11276                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
 11277     0D34  0874               	movf	EUSART_Write@txData,w
 11278     0D35  0023               	movlb	3	; select bank3
 11279     0D36  009A               	movwf	26	;volatile
 11280     0D37                     l613:
 11281     0D37  0008               	return
 11282     0D38                     __end_of_EUSART_Write:
 11283                           
 11284                           	psect	text49
 11285     0E23                     __ptext49:	
 11286 ;; *************** function _EUSART_IsTxReady *****************
 11287 ;; Defined at:
 11288 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;		None
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;		None
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  1    wreg      _Bool 
 11295 ;; Registers used:
 11296 ;;		wreg, status,2
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11302 ;;      Params:         0       0       0       0       0       0       0       0
 11303 ;;      Locals:         1       0       0       0       0       0       0       0
 11304 ;;      Temps:          0       0       0       0       0       0       0       0
 11305 ;;      Totals:         1       0       0       0       0       0       0       0
 11306 ;;Total ram usage:        1 bytes
 11307 ;; Hardware stack levels used: 1
 11308 ;; Hardware stack levels required when called: 7
 11309 ;; This function calls:
 11310 ;;		Nothing
 11311 ;; This function is called by:
 11312 ;;		_SendSync
 11313 ;;		_EUSART_sendMsg
 11314 ;; This function uses a non-reentrant model
 11315 ;;
 11316                           
 11317     0E23                     _EUSART_IsTxReady:	
 11318                           ;psect for function _EUSART_IsTxReady
 11319                           
 11320     0E23                     l3525:	
 11321                           ;incstack = 0
 11322                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2]
 11323                           
 11324                           
 11325                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TXIF && TX1STAb
      +                          its.TXEN);
 11326     0E23  01F4               	clrf	_EUSART_IsTxReady$1324
 11327     0E24                     l3527:
 11328     0E24  0020               	movlb	0	; select bank0
 11329     0E25  1E10               	btfss	16,4	;volatile
 11330     0E26  2E28               	goto	u1531
 11331     0E27  2E29               	goto	u1530
 11332     0E28                     u1531:
 11333     0E28  2E30               	goto	l3533
 11334     0E29                     u1530:
 11335     0E29                     l3529:
 11336     0E29  0023               	movlb	3	; select bank3
 11337     0E2A  1E9E               	btfss	30,5	;volatile
 11338     0E2B  2E2D               	goto	u1541
 11339     0E2C  2E2E               	goto	u1540
 11340     0E2D                     u1541:
 11341     0E2D  2E30               	goto	l3533
 11342     0E2E                     u1540:
 11343     0E2E                     l3531:
 11344     0E2E  01F4               	clrf	_EUSART_IsTxReady$1324
 11345     0E2F  0AF4               	incf	_EUSART_IsTxReady$1324,f
 11346     0E30                     l3533:
 11347     0E30  0874               	movf	_EUSART_IsTxReady$1324,w
 11348     0E31                     l597:
 11349     0E31  0008               	return
 11350     0E32                     __end_of_EUSART_IsTxReady:
 11351                           
 11352                           	psect	text50
 11353     0FAA                     __ptext50:	
 11354 ;; *************** function _EUSART_Read *****************
 11355 ;; Defined at:
 11356 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      unsigned char 
 11363 ;; Registers used:
 11364 ;;		wreg, status,2, status,0, pclath, cstack
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11370 ;;      Params:         0       0       0       0       0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0
 11373 ;;      Totals:         0       0       0       0       0       0       0       0
 11374 ;;Total ram usage:        0 bytes
 11375 ;; Hardware stack levels used: 1
 11376 ;; Hardware stack levels required when called: 8
 11377 ;; This function calls:
 11378 ;;		NULL
 11379 ;;		_EUSART_DefaultFramingErrorCallback
 11380 ;;		_EUSART_DefaultOverrunErrorCallback
 11381 ;; This function is called by:
 11382 ;;		_main
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386     0FAA                     _EUSART_Read:	
 11387                           ;psect for function _EUSART_Read
 11388                           
 11389     0FAA                     l3167:	
 11390                           ;incstack = 0
 11391                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 11392                           
 11393                           
 11394                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 11395     0FAA  0021               	movlb	1	; select bank1
 11396     0FAB  01BE               	clrf	_eusartRxLastError^(0+128)	;volatile
 11397     0FAC  01BF               	clrf	(_eusartRxLastError+1)^(0+128)	;volatile
 11398     0FAD                     l3169:
 11399                           
 11400                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 11401     0FAD  0023               	movlb	3	; select bank3
 11402     0FAE  1C9D               	btfss	29,1	;volatile
 11403     0FAF  2FB1               	goto	u1291
 11404     0FB0  2FB2               	goto	u1290
 11405     0FB1                     u1291:
 11406     0FB1  2FBF               	goto	l3177
 11407     0FB2                     u1290:
 11408     0FB2                     l3171:
 11409                           
 11410                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 11411     0FB2  0021               	movlb	1	; select bank1
 11412     0FB3  153E               	bsf	_eusartRxLastError^(0+128),2	;volatile
 11413     0FB4                     l3173:
 11414                           
 11415                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 11416     0FB4  083C               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11417     0FB5  043D               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11418     0FB6  1903               	btfsc	3,2
 11419     0FB7  2FB9               	goto	u1301
 11420     0FB8  2FBA               	goto	u1300
 11421     0FB9                     u1301:
 11422     0FB9  2FBF               	goto	l3177
 11423     0FBA                     u1300:
 11424     0FBA                     l3175:
 11425                           
 11426                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 11427     0FBA  083D               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11428     0FBB  008A               	movwf	10
 11429     0FBC  083C               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11430     0FBD  000A               	callw
 11431     0FBE  318F               	pagesel	$
 11432     0FBF                     l3177:
 11433                           
 11434                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 11435     0FBF  0023               	movlb	3	; select bank3
 11436     0FC0  1D1D               	btfss	29,2	;volatile
 11437     0FC1  2FC3               	goto	u1311
 11438     0FC2  2FC4               	goto	u1310
 11439     0FC3                     u1311:
 11440     0FC3  2FD1               	goto	l3185
 11441     0FC4                     u1310:
 11442     0FC4                     l3179:
 11443                           
 11444                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 11445     0FC4  0021               	movlb	1	; select bank1
 11446     0FC5  14BE               	bsf	_eusartRxLastError^(0+128),1	;volatile
 11447     0FC6                     l3181:
 11448                           
 11449                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 11450     0FC6  0876               	movf	_EUSART_FramingErrorHandler,w
 11451     0FC7  0477               	iorwf	_EUSART_FramingErrorHandler+1,w
 11452     0FC8  1903               	btfsc	3,2
 11453     0FC9  2FCB               	goto	u1321
 11454     0FCA  2FCC               	goto	u1320
 11455     0FCB                     u1321:
 11456     0FCB  2FD1               	goto	l3185
 11457     0FCC                     u1320:
 11458     0FCC                     l3183:
 11459                           
 11460                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 11461     0FCC  0877               	movf	_EUSART_FramingErrorHandler+1,w
 11462     0FCD  008A               	movwf	10
 11463     0FCE  0876               	movf	_EUSART_FramingErrorHandler,w
 11464     0FCF  000A               	callw
 11465     0FD0  318F               	pagesel	$
 11466     0FD1                     l3185:
 11467                           
 11468                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 11469     0FD1  0023               	movlb	3	; select bank3
 11470     0FD2  0819               	movf	25,w	;volatile
 11471     0FD3                     l610:
 11472     0FD3  0008               	return
 11473     0FD4                     __end_of_EUSART_Read:
 11474                           
 11475                           	psect	text51
 11476     0D30                     __ptext51:	
 11477 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 11478 ;; Defined at:
 11479 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		None
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11493 ;;      Params:         0       0       0       0       0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used: 1
 11499 ;; Hardware stack levels required when called: 7
 11500 ;; This function calls:
 11501 ;;		Nothing
 11502 ;; This function is called by:
 11503 ;;		_EUSART_Initialize
 11504 ;;		_EUSART_Read
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508     0D30                     _EUSART_DefaultOverrunErrorCallback:	
 11509                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11510                           
 11511     0D30                     l3013:	
 11512                           ;incstack = 0
 11513                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11514                           
 11515                           
 11516                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 11517     0D30  0023               	movlb	3	; select bank3
 11518     0D31  121D               	bcf	29,4	;volatile
 11519                           
 11520                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 11521     0D32  161D               	bsf	29,4	;volatile
 11522     0D33                     l619:
 11523     0D33  0008               	return
 11524     0D34                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11525                           
 11526                           	psect	text52
 11527     0003                     __ptext52:	
 11528 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11529 ;; Defined at:
 11530 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;		None
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;		None
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      void 
 11537 ;; Registers used:
 11538 ;;		None
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11544 ;;      Params:         0       0       0       0       0       0       0       0
 11545 ;;      Locals:         0       0       0       0       0       0       0       0
 11546 ;;      Temps:          0       0       0       0       0       0       0       0
 11547 ;;      Totals:         0       0       0       0       0       0       0       0
 11548 ;;Total ram usage:        0 bytes
 11549 ;; Hardware stack levels used: 1
 11550 ;; Hardware stack levels required when called: 7
 11551 ;; This function calls:
 11552 ;;		Nothing
 11553 ;; This function is called by:
 11554 ;;		_EUSART_Initialize
 11555 ;;		_EUSART_Read
 11556 ;; This function uses a non-reentrant model
 11557 ;;
 11558                           
 11559     0003                     _EUSART_DefaultFramingErrorCallback:	
 11560                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11561                           
 11562     0003                     l616:	
 11563                           ;incstack = 0
 11564                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11565                           
 11566     0003  0008               	return
 11567     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11568                           
 11569                           	psect	text53
 11570     0D46                     __ptext53:	
 11571 ;; *************** function _EUSART_IsRxReady *****************
 11572 ;; Defined at:
 11573 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;		None
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;		None
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  1    wreg      _Bool 
 11580 ;; Registers used:
 11581 ;;		wreg, status,2, status,0
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11587 ;;      Params:         0       0       0       0       0       0       0       0
 11588 ;;      Locals:         0       0       0       0       0       0       0       0
 11589 ;;      Temps:          0       0       0       0       0       0       0       0
 11590 ;;      Totals:         0       0       0       0       0       0       0       0
 11591 ;;Total ram usage:        0 bytes
 11592 ;; Hardware stack levels used: 1
 11593 ;; Hardware stack levels required when called: 7
 11594 ;; This function calls:
 11595 ;;		Nothing
 11596 ;; This function is called by:
 11597 ;;		_main
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601     0D46                     _EUSART_IsRxReady:	
 11602                           ;psect for function _EUSART_IsRxReady
 11603                           
 11604     0D46                     l3163:	
 11605                           ;incstack = 0
 11606                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11607                           
 11608                           
 11609                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 11610     0D46  0020               	movlb	0	; select bank0
 11611     0D47  0E10               	swapf	16,w	;volatile
 11612     0D48  0C89               	rrf	9,f
 11613     0D49  3901               	andlw	1
 11614     0D4A                     l592:
 11615     0D4A  0008               	return
 11616     0D4B                     __end_of_EUSART_IsRxReady:
 11617                           
 11618                           	psect	intentry
 11619     0004                     __pintentry:	
 11620 ;; *************** function _INTERRUPT_InterruptManager *****************
 11621 ;; Defined at:
 11622 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11636 ;;      Params:         0       0       0       0       0       0       0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0
 11639 ;;      Totals:         0       0       0       0       0       0       0       0
 11640 ;;Total ram usage:        0 bytes
 11641 ;; Hardware stack levels used: 1
 11642 ;; Hardware stack levels required when called: 6
 11643 ;; This function calls:
 11644 ;;		_ADC_ISR
 11645 ;;		_I2C1_ERROR_ISR
 11646 ;;		_I2C1_ISR
 11647 ;; This function is called by:
 11648 ;;		Interrupt level 1
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652     0004                     _INTERRUPT_InterruptManager:
 11653                           
 11654                           ;incstack = 0
 11655     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11656                           
 11657                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11658     0005  3180               	pagesel	$
 11659     0006                     i1l3357:
 11660                           
 11661                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11662     0006  1F0B               	btfss	11,6	;volatile
 11663     0007  2809               	goto	u142_21
 11664     0008  280A               	goto	u142_20
 11665     0009                     u142_21:
 11666     0009  2834               	goto	i1l455
 11667     000A                     u142_20:
 11668     000A                     i1l3359:
 11669                           
 11670                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11671     000A  0021               	movlb	1	; select bank1
 11672     000B  1F10               	btfss	16,6	;volatile
 11673     000C  280E               	goto	u143_21
 11674     000D  280F               	goto	u143_20
 11675     000E                     u143_21:
 11676     000E  2818               	goto	i1l448
 11677     000F                     u143_20:
 11678     000F                     i1l3361:
 11679     000F  0020               	movlb	0	; select bank0
 11680     0010  1F10               	btfss	16,6	;volatile
 11681     0011  2813               	goto	u144_21
 11682     0012  2814               	goto	u144_20
 11683     0013                     u144_21:
 11684     0013  2818               	goto	i1l448
 11685     0014                     u144_20:
 11686     0014                     i1l3363:
 11687                           
 11688                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 11689     0014  318E  2614  3180   	fcall	_ADC_ISR
 11690                           
 11691                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 11692     0017  2834               	goto	i1l455
 11693     0018                     i1l448:	
 11694                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 11695                           
 11696     0018  0021               	movlb	1	; select bank1
 11697     0019  1D91               	btfss	17,3	;volatile
 11698     001A  281C               	goto	u145_21
 11699     001B  281D               	goto	u145_20
 11700     001C                     u145_21:
 11701     001C  2826               	goto	i1l450
 11702     001D                     u145_20:
 11703     001D                     i1l3365:
 11704     001D  0020               	movlb	0	; select bank0
 11705     001E  1D91               	btfss	17,3	;volatile
 11706     001F  2821               	goto	u146_21
 11707     0020  2822               	goto	u146_20
 11708     0021                     u146_21:
 11709     0021  2826               	goto	i1l450
 11710     0022                     u146_20:
 11711     0022                     i1l3367:
 11712                           
 11713                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 11714     0022  318D  2528  3180   	fcall	_I2C1_ERROR_ISR
 11715                           
 11716                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 11717     0025  2834               	goto	i1l455
 11718     0026                     i1l450:	
 11719                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 11720                           
 11721     0026  0021               	movlb	1	; select bank1
 11722     0027  1D90               	btfss	16,3	;volatile
 11723     0028  282A               	goto	u147_21
 11724     0029  282B               	goto	u147_20
 11725     002A                     u147_21:
 11726     002A  2834               	goto	i1l449
 11727     002B                     u147_20:
 11728     002B                     i1l3369:
 11729     002B  0020               	movlb	0	; select bank0
 11730     002C  1D90               	btfss	16,3	;volatile
 11731     002D  282F               	goto	u148_21
 11732     002E  2830               	goto	u148_20
 11733     002F                     u148_21:
 11734     002F  2834               	goto	i1l449
 11735     0030                     u148_20:
 11736     0030                     i1l3371:
 11737                           
 11738                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 11739     0030  318D  252C  3180   	fcall	_I2C1_ISR
 11740                           
 11741                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 11742     0033  2834               	goto	i1l455
 11743     0034                     i1l449:
 11744     0034                     i1l455:	
 11745                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 11746                           
 11747     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11748     0035  0009               	retfie
 11749     0036                     __end_of_INTERRUPT_InterruptManager:
 11750                           
 11751                           	psect	text55
 11752     0D2C                     __ptext55:	
 11753 ;; *************** function _I2C1_ISR *****************
 11754 ;; Defined at:
 11755 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;		None
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;		None
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  1    wreg      void 
 11762 ;; Registers used:
 11763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 0/0
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11769 ;;      Params:         0       0       0       0       0       0       0       0
 11770 ;;      Locals:         0       0       0       0       0       0       0       0
 11771 ;;      Temps:          0       0       0       0       0       0       0       0
 11772 ;;      Totals:         0       0       0       0       0       0       0       0
 11773 ;;Total ram usage:        0 bytes
 11774 ;; Hardware stack levels used: 1
 11775 ;; Hardware stack levels required when called: 5
 11776 ;; This function calls:
 11777 ;;		_I2C1_EventHandler
 11778 ;; This function is called by:
 11779 ;;		_INTERRUPT_InterruptManager
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783     0D2C                     _I2C1_ISR:	
 11784                           ;psect for function _I2C1_ISR
 11785                           
 11786     0D2C                     i1l3157:	
 11787                           ;incstack = 0
 11788                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11789                           
 11790                           
 11791                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 11792     0D2C  3184  24AD  318D   	fcall	_I2C1_EventHandler
 11793     0D2F                     i1l207:
 11794     0D2F  0008               	return
 11795     0D30                     __end_of_I2C1_ISR:
 11796                           
 11797                           	psect	text56
 11798     04AD                     __ptext56:	
 11799 ;; *************** function _I2C1_EventHandler *****************
 11800 ;; Defined at:
 11801 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;		None
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;		None
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  1    wreg      void 
 11808 ;; Registers used:
 11809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11815 ;;      Params:         0       0       0       0       0       0       0       0
 11816 ;;      Locals:         0       0       0       0       0       0       0       0
 11817 ;;      Temps:          2       0       0       0       0       0       0       0
 11818 ;;      Totals:         2       0       0       0       0       0       0       0
 11819 ;;Total ram usage:        2 bytes
 11820 ;; Hardware stack levels used: 1
 11821 ;; Hardware stack levels required when called: 4
 11822 ;; This function calls:
 11823 ;;		_I2C1_EVENT_ERROR
 11824 ;;		_I2C1_EVENT_IDLE
 11825 ;;		_I2C1_EVENT_NACK
 11826 ;;		_I2C1_EVENT_RESET
 11827 ;;		_I2C1_EVENT_RX
 11828 ;;		_I2C1_EVENT_SEND_RD_ADDR
 11829 ;;		_I2C1_EVENT_SEND_WR_ADDR
 11830 ;;		_I2C1_EVENT_STOP
 11831 ;;		_I2C1_EVENT_TX
 11832 ;;		_I2C1_InterruptClear
 11833 ;;		_I2C1_IsAddr
 11834 ;;		_I2C1_IsData
 11835 ;;		_I2C1_IsNack
 11836 ;; This function is called by:
 11837 ;;		_I2C1_ISR
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841     04AD                     _I2C1_EventHandler:	
 11842                           ;psect for function _I2C1_EventHandler
 11843                           
 11844     04AD                     i1l2915:	
 11845                           ;incstack = 0
 11846                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11847                           
 11848                           
 11849                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 11850     04AD  318C  24F8  3184   	fcall	_I2C1_InterruptClear
 11851     04B0                     i1l2917:
 11852                           
 11853                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 11854     04B0  318D  2588  3184   	fcall	_I2C1_IsAddr
 11855     04B3  3A00               	xorlw	0
 11856     04B4  1903               	skipnz
 11857     04B5  2CB7               	goto	u112_21
 11858     04B6  2CB8               	goto	u112_20
 11859     04B7                     u112_21:
 11860     04B7  2CC6               	goto	i1l2923
 11861     04B8                     u112_20:
 11862     04B8                     i1l2919:
 11863     04B8  318D  255C  3184   	fcall	_I2C1_IsNack
 11864     04BB  3A00               	xorlw	0
 11865     04BC  1903               	skipnz
 11866     04BD  2CBF               	goto	u113_21
 11867     04BE  2CC0               	goto	u113_20
 11868     04BF                     u113_21:
 11869     04BF  2CC6               	goto	i1l2923
 11870     04C0                     u113_20:
 11871     04C0                     i1l2921:
 11872                           
 11873                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 11874     04C0  3005               	movlw	5
 11875     04C1  0020               	movlb	0	; select bank0
 11876     04C2  00DD               	movwf	_i2c1Status+11	;volatile
 11877                           
 11878                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 11879     04C3  3001               	movlw	1
 11880     04C4  00DC               	movwf	_i2c1Status+10	;volatile
 11881                           
 11882                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 11883     04C5  2CDB               	goto	i1l2929
 11884     04C6                     i1l2923:
 11885     04C6  318D  2541  3184   	fcall	_I2C1_IsData
 11886     04C9  3A00               	xorlw	0
 11887     04CA  1903               	skipnz
 11888     04CB  2CCD               	goto	u114_21
 11889     04CC  2CCE               	goto	u114_20
 11890     04CD                     u114_21:
 11891     04CD  2CDB               	goto	i1l2929
 11892     04CE                     u114_20:
 11893     04CE                     i1l2925:
 11894     04CE  318D  255C  3184   	fcall	_I2C1_IsNack
 11895     04D1  3A00               	xorlw	0
 11896     04D2  1903               	skipnz
 11897     04D3  2CD5               	goto	u115_21
 11898     04D4  2CD6               	goto	u115_20
 11899     04D5                     u115_21:
 11900     04D5  2CDB               	goto	i1l2929
 11901     04D6                     u115_20:
 11902     04D6                     i1l2927:
 11903                           
 11904                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 11905     04D6  3005               	movlw	5
 11906     04D7  0020               	movlb	0	; select bank0
 11907     04D8  00DD               	movwf	_i2c1Status+11	;volatile
 11908                           
 11909                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 11910     04D9  3002               	movlw	2
 11911     04DA  00DC               	movwf	_i2c1Status+10	;volatile
 11912     04DB                     i1l2929:
 11913                           
 11914                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 11915     04DB  0020               	movlb	0	; select bank0
 11916     04DC  085D               	movf	_i2c1Status+11,w	;volatile
 11917     04DD  00F2               	movwf	??_I2C1_EventHandler
 11918     04DE  01F3               	clrf	??_I2C1_EventHandler+1
 11919     04DF  35F2               	lslf	??_I2C1_EventHandler,f
 11920     04E0  0DF3               	rlf	??_I2C1_EventHandler+1,f
 11921     04E1  300F               	movlw	low _i2c1_eventTable
 11922     04E2  0772               	addwf	??_I2C1_EventHandler,w
 11923     04E3  0084               	movwf	4
 11924     04E4  3008               	movlw	high _i2c1_eventTable
 11925     04E5  3D73               	addwfc	??_I2C1_EventHandler+1,w
 11926     04E6  3880               	iorlw	128
 11927     04E7  0085               	movwf	5
 11928     04E8  3F01               	moviw [1]fsr0
 11929     04E9  008A               	movwf	10
 11930     04EA  3F00               	moviw [0]fsr0
 11931     04EB  000A               	callw
 11932     04EC  3184               	pagesel	$
 11933     04ED  0020               	movlb	0	; select bank0
 11934     04EE  00DD               	movwf	_i2c1Status+11	;volatile
 11935     04EF                     i1l225:
 11936     04EF  0008               	return
 11937     04F0                     __end_of_I2C1_EventHandler:
 11938                           
 11939                           	psect	text57
 11940     0D5C                     __ptext57:	
 11941 ;; *************** function _I2C1_IsNack *****************
 11942 ;; Defined at:
 11943 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;		None
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;		None
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  1    wreg      _Bool 
 11950 ;; Registers used:
 11951 ;;		wreg, status,2, status,0
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11957 ;;      Params:         0       0       0       0       0       0       0       0
 11958 ;;      Locals:         0       0       0       0       0       0       0       0
 11959 ;;      Temps:          0       0       0       0       0       0       0       0
 11960 ;;      Totals:         0       0       0       0       0       0       0       0
 11961 ;;Total ram usage:        0 bytes
 11962 ;; Hardware stack levels used: 1
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_I2C1_EventHandler
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970     0D5C                     _I2C1_IsNack:	
 11971                           ;psect for function _I2C1_IsNack
 11972                           
 11973     0D5C                     i1l2695:	
 11974                           ;incstack = 0
 11975                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 11976                           
 11977                           
 11978                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 11979     0D5C  0024               	movlb	4	; select bank4
 11980     0D5D  0E16               	swapf	22,w	;volatile
 11981     0D5E  0C89               	rrf	9,f
 11982     0D5F  0C89               	rrf	9,f
 11983     0D60  3901               	andlw	1
 11984     0D61                     i1l300:
 11985     0D61  0008               	return
 11986     0D62                     __end_of_I2C1_IsNack:
 11987                           
 11988                           	psect	text58
 11989     0D41                     __ptext58:	
 11990 ;; *************** function _I2C1_IsData *****************
 11991 ;; Defined at:
 11992 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;		None
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;		None
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      _Bool 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2, status,0
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12006 ;;      Params:         0       0       0       0       0       0       0       0
 12007 ;;      Locals:         0       0       0       0       0       0       0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0
 12009 ;;      Totals:         0       0       0       0       0       0       0       0
 12010 ;;Total ram usage:        0 bytes
 12011 ;; Hardware stack levels used: 1
 12012 ;; This function calls:
 12013 ;;		Nothing
 12014 ;; This function is called by:
 12015 ;;		_I2C1_EventHandler
 12016 ;; This function uses a non-reentrant model
 12017 ;;
 12018                           
 12019     0D41                     _I2C1_IsData:	
 12020                           ;psect for function _I2C1_IsData
 12021                           
 12022     0D41                     i1l2699:	
 12023                           ;incstack = 0
 12024                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 12025                           
 12026                           
 12027                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 12028     0D41  0024               	movlb	4	; select bank4
 12029     0D42  0E14               	swapf	20,w	;volatile
 12030     0D43  0C89               	rrf	9,f
 12031     0D44  3901               	andlw	1
 12032     0D45                     i1l303:
 12033     0D45  0008               	return
 12034     0D46                     __end_of_I2C1_IsData:
 12035                           
 12036                           	psect	text59
 12037     0D88                     __ptext59:	
 12038 ;; *************** function _I2C1_IsAddr *****************
 12039 ;; Defined at:
 12040 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;		None
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;		None
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      _Bool 
 12047 ;; Registers used:
 12048 ;;		wreg, status,0
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12054 ;;      Params:         0       0       0       0       0       0       0       0
 12055 ;;      Locals:         0       0       0       0       0       0       0       0
 12056 ;;      Temps:          0       0       0       0       0       0       0       0
 12057 ;;      Totals:         0       0       0       0       0       0       0       0
 12058 ;;Total ram usage:        0 bytes
 12059 ;; Hardware stack levels used: 1
 12060 ;; This function calls:
 12061 ;;		Nothing
 12062 ;; This function is called by:
 12063 ;;		_I2C1_EventHandler
 12064 ;; This function uses a non-reentrant model
 12065 ;;
 12066                           
 12067     0D88                     _I2C1_IsAddr:	
 12068                           ;psect for function _I2C1_IsAddr
 12069                           
 12070     0D88                     i1l2691:	
 12071                           ;incstack = 0
 12072                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12073                           
 12074                           
 12075                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12076     0D88  1003               	clrc
 12077     0D89  0024               	movlb	4	; select bank4
 12078     0D8A  1E94               	btfss	20,5	;volatile
 12079     0D8B  1403               	setc
 12080     0D8C  3000               	movlw	0
 12081     0D8D  3D09               	addwfc	9,w
 12082     0D8E                     i1l306:
 12083     0D8E  0008               	return
 12084     0D8F                     __end_of_I2C1_IsAddr:
 12085                           
 12086                           	psect	text60
 12087     0D28                     __ptext60:	
 12088 ;; *************** function _I2C1_ERROR_ISR *****************
 12089 ;; Defined at:
 12090 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;		None
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;		None
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  1    wreg      void 
 12097 ;; Registers used:
 12098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12104 ;;      Params:         0       0       0       0       0       0       0       0
 12105 ;;      Locals:         0       0       0       0       0       0       0       0
 12106 ;;      Temps:          0       0       0       0       0       0       0       0
 12107 ;;      Totals:         0       0       0       0       0       0       0       0
 12108 ;;Total ram usage:        0 bytes
 12109 ;; Hardware stack levels used: 1
 12110 ;; Hardware stack levels required when called: 5
 12111 ;; This function calls:
 12112 ;;		_I2C1_ErrorEventHandler
 12113 ;; This function is called by:
 12114 ;;		_INTERRUPT_InterruptManager
 12115 ;; This function uses a non-reentrant model
 12116 ;;
 12117                           
 12118     0D28                     _I2C1_ERROR_ISR:	
 12119                           ;psect for function _I2C1_ERROR_ISR
 12120                           
 12121     0D28                     i1l3159:	
 12122                           ;incstack = 0
 12123                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12124                           
 12125                           
 12126                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12127     0D28  318F  2716  318D   	fcall	_I2C1_ErrorEventHandler
 12128     0D2B                     i1l210:
 12129     0D2B  0008               	return
 12130     0D2C                     __end_of_I2C1_ERROR_ISR:
 12131                           
 12132                           	psect	text61
 12133     0F16                     __ptext61:	
 12134 ;; *************** function _I2C1_ErrorEventHandler *****************
 12135 ;; Defined at:
 12136 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;		None
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12150 ;;      Params:         0       0       0       0       0       0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0
 12152 ;;      Temps:          2       0       0       0       0       0       0       0
 12153 ;;      Totals:         2       0       0       0       0       0       0       0
 12154 ;;Total ram usage:        2 bytes
 12155 ;; Hardware stack levels used: 1
 12156 ;; Hardware stack levels required when called: 4
 12157 ;; This function calls:
 12158 ;;		NULL
 12159 ;;		_I2C1_DefaultCallback
 12160 ;;		_I2C1_EVENT_ERROR
 12161 ;;		_I2C1_EVENT_IDLE
 12162 ;;		_I2C1_EVENT_NACK
 12163 ;;		_I2C1_EVENT_RESET
 12164 ;;		_I2C1_EVENT_RX
 12165 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12166 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12167 ;;		_I2C1_EVENT_STOP
 12168 ;;		_I2C1_EVENT_TX
 12169 ;;		_I2C1_ErrorInterruptClear
 12170 ;; This function is called by:
 12171 ;;		_I2C1_ERROR_ISR
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175     0F16                     _I2C1_ErrorEventHandler:	
 12176                           ;psect for function _I2C1_ErrorEventHandler
 12177                           
 12178     0F16                     i1l2931:	
 12179                           ;incstack = 0
 12180                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12181                           
 12182                           
 12183                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12184     0F16  3006               	movlw	6
 12185     0F17  0020               	movlb	0	; select bank0
 12186     0F18  00DD               	movwf	_i2c1Status+11	;volatile
 12187                           
 12188                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12189     0F19  3003               	movlw	3
 12190     0F1A  00DC               	movwf	_i2c1Status+10	;volatile
 12191     0F1B                     i1l2933:
 12192                           
 12193                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12194     0F1B  318C  24F5  318F   	fcall	_I2C1_ErrorInterruptClear
 12195     0F1E                     i1l2935:
 12196                           
 12197                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12198     0F1E  0020               	movlb	0	; select bank0
 12199     0F1F  085D               	movf	_i2c1Status+11,w	;volatile
 12200     0F20  00F2               	movwf	??_I2C1_ErrorEventHandler
 12201     0F21  01F3               	clrf	??_I2C1_ErrorEventHandler+1
 12202     0F22  35F2               	lslf	??_I2C1_ErrorEventHandler,f
 12203     0F23  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
 12204     0F24  300F               	movlw	low _i2c1_eventTable
 12205     0F25  0772               	addwf	??_I2C1_ErrorEventHandler,w
 12206     0F26  0084               	movwf	4
 12207     0F27  3008               	movlw	high _i2c1_eventTable
 12208     0F28  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12209     0F29  3880               	iorlw	128
 12210     0F2A  0085               	movwf	5
 12211     0F2B  3F01               	moviw [1]fsr0
 12212     0F2C  008A               	movwf	10
 12213     0F2D  3F00               	moviw [0]fsr0
 12214     0F2E  000A               	callw
 12215     0F2F  318F               	pagesel	$
 12216     0F30  0020               	movlb	0	; select bank0
 12217     0F31  00DD               	movwf	_i2c1Status+11	;volatile
 12218     0F32                     i1l2937:
 12219                           
 12220                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12221     0F32  0021               	movlb	1	; select bank1
 12222     0F33  0841               	movf	(_I2C1_Callback+1)^(0+128),w
 12223     0F34  008A               	movwf	10
 12224     0F35  0840               	movf	_I2C1_Callback^(0+128),w
 12225     0F36  000A               	callw
 12226     0F37  318F               	pagesel	$
 12227     0F38                     i1l228:
 12228     0F38  0008               	return
 12229     0F39                     __end_of_I2C1_ErrorEventHandler:
 12230                           
 12231                           	psect	text62
 12232     0D81                     __ptext62:	
 12233 ;; *************** function _I2C1_EVENT_RESET *****************
 12234 ;; Defined at:
 12235 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;		None
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1    wreg      enum E9559
 12242 ;; Registers used:
 12243 ;;		wreg, status,2, status,0, pclath, cstack
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12249 ;;      Params:         0       0       0       0       0       0       0       0
 12250 ;;      Locals:         0       0       0       0       0       0       0       0
 12251 ;;      Temps:          0       0       0       0       0       0       0       0
 12252 ;;      Totals:         0       0       0       0       0       0       0       0
 12253 ;;Total ram usage:        0 bytes
 12254 ;; Hardware stack levels used: 1
 12255 ;; Hardware stack levels required when called: 1
 12256 ;; This function calls:
 12257 ;;		_I2C1_BusReset
 12258 ;; This function is called by:
 12259 ;;		_I2C1_EVENT_ERROR
 12260 ;;		_I2C1_EventHandler
 12261 ;;		_I2C1_ErrorEventHandler
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265     0D81                     _I2C1_EVENT_RESET:	
 12266                           ;psect for function _I2C1_EVENT_RESET
 12267                           
 12268     0D81                     i1l2565:	
 12269                           ;incstack = 0
 12270                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12271                           
 12272                           
 12273                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12274     0D81  318D  2510  318D   	fcall	_I2C1_BusReset
 12275     0D84                     i1l2567:
 12276                           
 12277                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12278     0D84  0020               	movlb	0	; select bank0
 12279     0D85  01D2               	clrf	_i2c1Status	;volatile
 12280     0D86                     i1l2569:
 12281                           
 12282                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12283     0D86  3000               	movlw	0
 12284     0D87                     i1l267:
 12285     0D87  0008               	return
 12286     0D88                     __end_of_I2C1_EVENT_RESET:
 12287                           
 12288                           	psect	text63
 12289     0DB3                     __ptext63:	
 12290 ;; *************** function _I2C1_EVENT_STOP *****************
 12291 ;; Defined at:
 12292 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12293 ;; Parameters:    Size  Location     Type
 12294 ;;		None
 12295 ;; Auto vars:     Size  Location     Type
 12296 ;;		None
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      enum E9559
 12299 ;; Registers used:
 12300 ;;		wreg, status,2, status,0, pclath, cstack
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12306 ;;      Params:         0       0       0       0       0       0       0       0
 12307 ;;      Locals:         0       0       0       0       0       0       0       0
 12308 ;;      Temps:          0       0       0       0       0       0       0       0
 12309 ;;      Totals:         0       0       0       0       0       0       0       0
 12310 ;;Total ram usage:        0 bytes
 12311 ;; Hardware stack levels used: 1
 12312 ;; Hardware stack levels required when called: 2
 12313 ;; This function calls:
 12314 ;;		_I2C1_Close
 12315 ;;		_I2C1_StopSend
 12316 ;; This function is called by:
 12317 ;;		_I2C1_EVENT_TX
 12318 ;;		_I2C1_EVENT_NACK
 12319 ;;		_I2C1_EventHandler
 12320 ;;		_I2C1_ErrorEventHandler
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324     0DB3                     _I2C1_EVENT_STOP:	
 12325                           ;psect for function _I2C1_EVENT_STOP
 12326                           
 12327     0DB3                     i1l2543:	
 12328                           ;incstack = 0
 12329                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12330                           
 12331                           
 12332                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12333     0DB3  318C  24FB  318D   	fcall	_I2C1_StopSend
 12334                           
 12335                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12336     0DB6  318E  2651  318D   	fcall	_I2C1_Close
 12337     0DB9                     i1l2545:
 12338                           
 12339                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12340     0DB9  3000               	movlw	0
 12341     0DBA                     i1l264:
 12342     0DBA  0008               	return
 12343     0DBB                     __end_of_I2C1_EVENT_STOP:
 12344                           
 12345                           	psect	text64
 12346     0D56                     __ptext64:	
 12347 ;; *************** function _I2C1_EVENT_ERROR *****************
 12348 ;; Defined at:
 12349 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;		None
 12352 ;; Auto vars:     Size  Location     Type
 12353 ;;  retEventStat    1    0[COMMON] enum E9559
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  1    wreg      enum E9559
 12356 ;; Registers used:
 12357 ;;		wreg, status,2, status,0, pclath, cstack
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/0
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12363 ;;      Params:         0       0       0       0       0       0       0       0
 12364 ;;      Locals:         1       0       0       0       0       0       0       0
 12365 ;;      Temps:          0       0       0       0       0       0       0       0
 12366 ;;      Totals:         1       0       0       0       0       0       0       0
 12367 ;;Total ram usage:        1 bytes
 12368 ;; Hardware stack levels used: 1
 12369 ;; Hardware stack levels required when called: 2
 12370 ;; This function calls:
 12371 ;;		_I2C1_EVENT_RESET
 12372 ;; This function is called by:
 12373 ;;		_I2C1_EventHandler
 12374 ;;		_I2C1_ErrorEventHandler
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378     0D56                     _I2C1_EVENT_ERROR:	
 12379                           ;psect for function _I2C1_EVENT_ERROR
 12380                           
 12381     0D56                     i1l2779:	
 12382                           ;incstack = 0
 12383                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12384                           
 12385     0D56                     i1l2781:
 12386                           
 12387                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12388     0D56  318D  2581  318D   	fcall	_I2C1_EVENT_RESET
 12389     0D59  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12390     0D5A                     i1l2783:
 12391                           
 12392                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12393     0D5A  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12394     0D5B                     i1l261:
 12395     0D5B  0008               	return
 12396     0D5C                     __end_of_I2C1_EVENT_ERROR:
 12397                           
 12398                           	psect	text65
 12399     0D50                     __ptext65:	
 12400 ;; *************** function _I2C1_EVENT_NACK *****************
 12401 ;; Defined at:
 12402 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12403 ;; Parameters:    Size  Location     Type
 12404 ;;		None
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;  retEventStat    1    0[COMMON] enum E9559
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  1    wreg      enum E9559
 12409 ;; Registers used:
 12410 ;;		wreg, status,2, status,0, pclath, cstack
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12416 ;;      Params:         0       0       0       0       0       0       0       0
 12417 ;;      Locals:         1       0       0       0       0       0       0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0       0
 12419 ;;      Totals:         1       0       0       0       0       0       0       0
 12420 ;;Total ram usage:        1 bytes
 12421 ;; Hardware stack levels used: 1
 12422 ;; Hardware stack levels required when called: 3
 12423 ;; This function calls:
 12424 ;;		_I2C1_EVENT_STOP
 12425 ;; This function is called by:
 12426 ;;		_I2C1_EventHandler
 12427 ;;		_I2C1_ErrorEventHandler
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431     0D50                     _I2C1_EVENT_NACK:	
 12432                           ;psect for function _I2C1_EVENT_NACK
 12433                           
 12434     0D50                     i1l2771:	
 12435                           ;incstack = 0
 12436                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12437                           
 12438     0D50                     i1l2773:
 12439                           
 12440                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12441     0D50  318D  25B3  318D   	fcall	_I2C1_EVENT_STOP
 12442     0D53  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12443     0D54                     i1l2775:
 12444                           
 12445                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12446     0D54  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12447     0D55                     i1l258:
 12448     0D55  0008               	return
 12449     0D56                     __end_of_I2C1_EVENT_NACK:
 12450                           
 12451                           	psect	text66
 12452     0663                     __ptext66:	
 12453 ;; *************** function _I2C1_EVENT_RX *****************
 12454 ;; Defined at:
 12455 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;		None
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;  retEventStat    1    1[COMMON] enum E9559
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  1    wreg      enum E9559
 12462 ;; Registers used:
 12463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/0
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12469 ;;      Params:         0       0       0       0       0       0       0       0
 12470 ;;      Locals:         1       0       0       0       0       0       0       0
 12471 ;;      Temps:          1       0       0       0       0       0       0       0
 12472 ;;      Totals:         2       0       0       0       0       0       0       0
 12473 ;;Total ram usage:        2 bytes
 12474 ;; Hardware stack levels used: 1
 12475 ;; Hardware stack levels required when called: 1
 12476 ;; This function calls:
 12477 ;;		_I2C1_AckSend
 12478 ;;		_I2C1_DataReceive
 12479 ;;		_I2C1_IsRxBufFull
 12480 ;;		_I2C1_NackSend
 12481 ;;		_I2C1_ReceiveEnable
 12482 ;;		_I2C1_RestartDisable
 12483 ;; This function is called by:
 12484 ;;		_I2C1_EventHandler
 12485 ;;		_I2C1_ErrorEventHandler
 12486 ;; This function uses a non-reentrant model
 12487 ;;
 12488                           
 12489     0663                     _I2C1_EVENT_RX:	
 12490                           ;psect for function _I2C1_EVENT_RX
 12491                           
 12492     0663                     i1l2745:	
 12493                           ;incstack = 0
 12494                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12495                           
 12496                           
 12497                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12498     0663  3004               	movlw	4
 12499     0664  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12500     0665                     i1l2747:
 12501                           
 12502                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12503     0665  318D  251C  3186   	fcall	_I2C1_IsRxBufFull
 12504     0668  3A00               	xorlw	0
 12505     0669  1903               	skipnz
 12506     066A  2E6C               	goto	u96_21
 12507     066B  2E6D               	goto	u96_20
 12508     066C                     u96_21:
 12509     066C  2E97               	goto	i1l2765
 12510     066D                     u96_20:
 12511     066D                     i1l2749:
 12512                           
 12513                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12514     066D  0020               	movlb	0	; select bank0
 12515     066E  0859               	movf	_i2c1Status+7,w	;volatile
 12516     066F  045A               	iorwf	_i2c1Status+8,w	;volatile
 12517     0670  1903               	btfsc	3,2
 12518     0671  2E73               	goto	u97_21
 12519     0672  2E74               	goto	u97_20
 12520     0673                     u97_21:
 12521     0673  2E84               	goto	i1l2757
 12522     0674                     u97_20:
 12523     0674                     i1l2751:
 12524                           
 12525                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12526     0674  0858               	movf	low ((_i2c1Status| 0+6)),w	;volatile
 12527     0675  0086               	movwf	6
 12528     0676  0187               	clrf	7
 12529     0677  318C  24FE  3186   	fcall	_I2C1_DataReceive
 12530     067A  0081               	movwf	1
 12531     067B                     i1l2753:
 12532     067B  3001               	movlw	1
 12533     067C  00F0               	movwf	??_I2C1_EVENT_RX
 12534     067D  0870               	movf	??_I2C1_EVENT_RX,w
 12535     067E  0020               	movlb	0	; select bank0
 12536     067F  07D8               	addwf	low ((_i2c1Status| 0+6)),f	;volatile
 12537     0680                     i1l2755:
 12538                           
 12539                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12540     0680  3001               	movlw	1
 12541     0681  02D9               	subwf	_i2c1Status+7,f	;volatile
 12542     0682  3000               	movlw	0
 12543     0683  3BDA               	subwfb	_i2c1Status+8,f	;volatile
 12544     0684                     i1l2757:
 12545                           
 12546                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12547     0684  0859               	movf	_i2c1Status+7,w	;volatile
 12548     0685  045A               	iorwf	_i2c1Status+8,w	;volatile
 12549     0686  1903               	btfsc	3,2
 12550     0687  2E89               	goto	u98_21
 12551     0688  2E8A               	goto	u98_20
 12552     0689                     u98_21:
 12553     0689  2E8E               	goto	i1l2761
 12554     068A                     u98_20:
 12555     068A                     i1l2759:
 12556                           
 12557                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12558     068A  318D  2518  3186   	fcall	_I2C1_AckSend
 12559                           
 12560                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12561     068D  2E9A               	goto	i1l2767
 12562     068E                     i1l2761:
 12563                           
 12564                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12565     068E  318D  2504  3186   	fcall	_I2C1_RestartDisable
 12566                           
 12567                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12568     0691  318D  2520  3186   	fcall	_I2C1_NackSend
 12569     0694                     i1l2763:
 12570                           
 12571                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12572     0694  3007               	movlw	7
 12573     0695  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12574     0696  2E9A               	goto	i1l2767
 12575     0697                     i1l2765:
 12576                           
 12577                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12578     0697  318D  2501  3186   	fcall	_I2C1_ReceiveEnable
 12579     069A                     i1l2767:
 12580                           
 12581                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12582     069A  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12583     069B                     i1l255:
 12584     069B  0008               	return
 12585     069C                     __end_of_I2C1_EVENT_RX:
 12586                           
 12587                           	psect	text67
 12588     0D7A                     __ptext67:	
 12589 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12590 ;; Defined at:
 12591 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;		None
 12594 ;; Auto vars:     Size  Location     Type
 12595 ;;		None
 12596 ;; Return value:  Size  Location     Type
 12597 ;;                  1    wreg      enum E9559
 12598 ;; Registers used:
 12599 ;;		wreg, status,2, status,0, pclath, cstack
 12600 ;; Tracked objects:
 12601 ;;		On entry : 0/0
 12602 ;;		On exit  : 0/0
 12603 ;;		Unchanged: 0/0
 12604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12605 ;;      Params:         0       0       0       0       0       0       0       0
 12606 ;;      Locals:         0       0       0       0       0       0       0       0
 12607 ;;      Temps:          0       0       0       0       0       0       0       0
 12608 ;;      Totals:         0       0       0       0       0       0       0       0
 12609 ;;Total ram usage:        0 bytes
 12610 ;; Hardware stack levels used: 1
 12611 ;; Hardware stack levels required when called: 1
 12612 ;; This function calls:
 12613 ;;		_I2C1_DataTransmit
 12614 ;; This function is called by:
 12615 ;;		_I2C1_EventHandler
 12616 ;;		_I2C1_ErrorEventHandler
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620     0D7A                     _I2C1_EVENT_SEND_WR_ADDR:	
 12621                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12622                           
 12623     0D7A                     i1l2715:	
 12624                           ;incstack = 0
 12625                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12626                           
 12627                           
 12628                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12629     0D7A  0020               	movlb	0	; select bank0
 12630     0D7B  3553               	lslf	_i2c1Status+1,w	;volatile
 12631     0D7C  318D  253C  318D   	fcall	_I2C1_DataTransmit
 12632     0D7F                     i1l2717:
 12633                           
 12634                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12635     0D7F  3003               	movlw	3
 12636     0D80                     i1l240:
 12637     0D80  0008               	return
 12638     0D81                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12639                           
 12640                           	psect	text68
 12641     0DAB                     __ptext68:	
 12642 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12643 ;; Defined at:
 12644 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;		None
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;		None
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  1    wreg      enum E9559
 12651 ;; Registers used:
 12652 ;;		wreg, status,2, status,0, pclath, cstack
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12658 ;;      Params:         0       0       0       0       0       0       0       0
 12659 ;;      Locals:         0       0       0       0       0       0       0       0
 12660 ;;      Temps:          0       0       0       0       0       0       0       0
 12661 ;;      Totals:         0       0       0       0       0       0       0       0
 12662 ;;Total ram usage:        0 bytes
 12663 ;; Hardware stack levels used: 1
 12664 ;; Hardware stack levels required when called: 1
 12665 ;; This function calls:
 12666 ;;		_I2C1_DataTransmit
 12667 ;; This function is called by:
 12668 ;;		_I2C1_EventHandler
 12669 ;;		_I2C1_ErrorEventHandler
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673     0DAB                     _I2C1_EVENT_SEND_RD_ADDR:	
 12674                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12675                           
 12676     0DAB                     i1l2709:	
 12677                           ;incstack = 0
 12678                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12679                           
 12680                           
 12681                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12682     0DAB  1403               	setc
 12683     0DAC  0020               	movlb	0	; select bank0
 12684     0DAD  0D53               	rlf	_i2c1Status+1,w	;volatile
 12685     0DAE  318D  253C  318D   	fcall	_I2C1_DataTransmit
 12686     0DB1                     i1l2711:
 12687                           
 12688                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 12689     0DB1  3004               	movlw	4
 12690     0DB2                     i1l237:
 12691     0DB2  0008               	return
 12692     0DB3                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 12693                           
 12694                           	psect	text69
 12695     0D24                     __ptext69:	
 12696 ;; *************** function _I2C1_EVENT_IDLE *****************
 12697 ;; Defined at:
 12698 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;		None
 12701 ;; Auto vars:     Size  Location     Type
 12702 ;;		None
 12703 ;; Return value:  Size  Location     Type
 12704 ;;                  1    wreg      enum E9559
 12705 ;; Registers used:
 12706 ;;		wreg, status,2
 12707 ;; Tracked objects:
 12708 ;;		On entry : 0/0
 12709 ;;		On exit  : 0/0
 12710 ;;		Unchanged: 0/0
 12711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12712 ;;      Params:         0       0       0       0       0       0       0       0
 12713 ;;      Locals:         0       0       0       0       0       0       0       0
 12714 ;;      Temps:          0       0       0       0       0       0       0       0
 12715 ;;      Totals:         0       0       0       0       0       0       0       0
 12716 ;;Total ram usage:        0 bytes
 12717 ;; Hardware stack levels used: 1
 12718 ;; This function calls:
 12719 ;;		Nothing
 12720 ;; This function is called by:
 12721 ;;		_I2C1_EventHandler
 12722 ;;		_I2C1_ErrorEventHandler
 12723 ;; This function uses a non-reentrant model
 12724 ;;
 12725                           
 12726     0D24                     _I2C1_EVENT_IDLE:	
 12727                           ;psect for function _I2C1_EVENT_IDLE
 12728                           
 12729     0D24                     i1l2703:	
 12730                           ;incstack = 0
 12731                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 12732                           
 12733                           
 12734                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 12735     0D24  0020               	movlb	0	; select bank0
 12736     0D25  01D2               	clrf	_i2c1Status	;volatile
 12737     0D26                     i1l2705:
 12738                           
 12739                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 12740     0D26  3008               	movlw	8
 12741     0D27                     i1l234:
 12742     0D27  0008               	return
 12743     0D28                     __end_of_I2C1_EVENT_IDLE:
 12744                           
 12745                           	psect	text70
 12746     0FD4                     __ptext70:	
 12747 ;; *************** function _I2C1_EVENT_TX *****************
 12748 ;; Defined at:
 12749 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;		None
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;  retEventStat    1    1[COMMON] enum E9559
 12754 ;; Return value:  Size  Location     Type
 12755 ;;                  1    wreg      enum E9559
 12756 ;; Registers used:
 12757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12758 ;; Tracked objects:
 12759 ;;		On entry : 0/0
 12760 ;;		On exit  : 0/0
 12761 ;;		Unchanged: 0/0
 12762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12763 ;;      Params:         0       0       0       0       0       0       0       0
 12764 ;;      Locals:         1       0       0       0       0       0       0       0
 12765 ;;      Temps:          0       0       0       0       0       0       0       0
 12766 ;;      Totals:         1       0       0       0       0       0       0       0
 12767 ;;Total ram usage:        1 bytes
 12768 ;; Hardware stack levels used: 1
 12769 ;; Hardware stack levels required when called: 3
 12770 ;; This function calls:
 12771 ;;		_I2C1_DataTransmit
 12772 ;;		_I2C1_EVENT_STOP
 12773 ;;		_I2C1_RestartEnable
 12774 ;; This function is called by:
 12775 ;;		_I2C1_EventHandler
 12776 ;;		_I2C1_ErrorEventHandler
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780     0FD4                     _I2C1_EVENT_TX:	
 12781                           ;psect for function _I2C1_EVENT_TX
 12782                           
 12783     0FD4                     i1l2721:	
 12784                           ;incstack = 0
 12785                           ; Regs used in _I2C1_EVENT_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12786                           
 12787     0FD4                     i1l2723:
 12788                           
 12789                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 12790     0FD4  0020               	movlb	0	; select bank0
 12791     0FD5  0856               	movf	_i2c1Status+4,w	;volatile
 12792     0FD6  0457               	iorwf	_i2c1Status+5,w	;volatile
 12793     0FD7  1903               	btfsc	3,2
 12794     0FD8  2FDA               	goto	u94_21
 12795     0FD9  2FDB               	goto	u94_20
 12796     0FDA                     u94_21:
 12797     0FDA  2FEE               	goto	i1l2731
 12798     0FDB                     u94_20:
 12799     0FDB                     i1l2725:
 12800                           
 12801                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 12802     0FDB  3001               	movlw	1
 12803     0FDC  02D6               	subwf	_i2c1Status+4,f	;volatile
 12804     0FDD  3000               	movlw	0
 12805     0FDE  3BD7               	subwfb	_i2c1Status+5,f	;volatile
 12806     0FDF                     i1l2727:
 12807                           
 12808                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 12809     0FDF  3003               	movlw	3
 12810     0FE0  3E52               	addlw	(low (_i2c1Status| 0))& (0+255)
 12811     0FE1  0086               	movwf	6
 12812     0FE2  0187               	clrf	7
 12813     0FE3  3F40               	moviw [0]fsr1
 12814     0FE4  0084               	movwf	4
 12815     0FE5  0185               	clrf	5
 12816     0FE6  0A81               	incf	1,f
 12817     0FE7  0800               	movf	0,w
 12818     0FE8  318D  253C  318F   	fcall	_I2C1_DataTransmit
 12819     0FEB                     i1l2729:
 12820                           
 12821                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 12822     0FEB  3003               	movlw	3
 12823     0FEC  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12824                           
 12825                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 12826     0FED  2FFE               	goto	i1l2741
 12827     0FEE                     i1l2731:
 12828                           
 12829                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 12830     0FEE  085B               	movf	_i2c1Status+9,w	;volatile
 12831     0FEF  1903               	btfsc	3,2
 12832     0FF0  2FF2               	goto	u95_21
 12833     0FF1  2FF3               	goto	u95_20
 12834     0FF2                     u95_21:
 12835     0FF2  2FFA               	goto	i1l2739
 12836     0FF3                     u95_20:
 12837     0FF3                     i1l2733:
 12838                           
 12839                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 12840     0FF3  01DB               	clrf	_i2c1Status+9	;volatile
 12841     0FF4                     i1l2735:
 12842                           
 12843                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 12844     0FF4  318D  2507  318F   	fcall	_I2C1_RestartEnable
 12845     0FF7                     i1l2737:
 12846                           
 12847                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 12848     0FF7  01F1               	clrf	I2C1_EVENT_TX@retEventState
 12849     0FF8  0AF1               	incf	I2C1_EVENT_TX@retEventState,f
 12850                           
 12851                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 12852     0FF9  2FFE               	goto	i1l2741
 12853     0FFA                     i1l2739:
 12854                           
 12855                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 12856     0FFA  318D  25B3  318F   	fcall	_I2C1_EVENT_STOP
 12857     0FFD  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12858     0FFE                     i1l2741:
 12859                           
 12860                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 12861     0FFE  0871               	movf	I2C1_EVENT_TX@retEventState,w
 12862     0FFF                     i1l247:
 12863     0FFF  0008               	return
 12864     1000                     __end_of_I2C1_EVENT_TX:
 12865                           
 12866                           	psect	text71
 12867     0D07                     __ptext71:	
 12868 ;; *************** function _I2C1_RestartEnable *****************
 12869 ;; Defined at:
 12870 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;		None
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  1    wreg      void 
 12877 ;; Registers used:
 12878 ;;		None
 12879 ;; Tracked objects:
 12880 ;;		On entry : 0/0
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12884 ;;      Params:         0       0       0       0       0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0
 12887 ;;      Totals:         0       0       0       0       0       0       0       0
 12888 ;;Total ram usage:        0 bytes
 12889 ;; Hardware stack levels used: 1
 12890 ;; This function calls:
 12891 ;;		Nothing
 12892 ;; This function is called by:
 12893 ;;		_I2C1_EVENT_TX
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897     0D07                     _I2C1_RestartEnable:	
 12898                           ;psect for function _I2C1_RestartEnable
 12899                           
 12900     0D07                     i1l2541:	
 12901                           ;incstack = 0
 12902                           ; Regs used in _I2C1_RestartEnable: []
 12903                           
 12904                           
 12905                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 12906     0D07  0024               	movlb	4	; select bank4
 12907     0D08  1496               	bsf	22,1	;volatile
 12908     0D09                     i1l282:
 12909     0D09  0008               	return
 12910     0D0A                     __end_of_I2C1_RestartEnable:
 12911                           
 12912                           	psect	text72
 12913     0D3C                     __ptext72:	
 12914 ;; *************** function _I2C1_DataTransmit *****************
 12915 ;; Defined at:
 12916 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  data            1    wreg     unsigned char 
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;  data            1    0[COMMON] unsigned char 
 12921 ;; Return value:  Size  Location     Type
 12922 ;;                  1    wreg      void 
 12923 ;; Registers used:
 12924 ;;		wreg
 12925 ;; Tracked objects:
 12926 ;;		On entry : 0/0
 12927 ;;		On exit  : 0/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12930 ;;      Params:         0       0       0       0       0       0       0       0
 12931 ;;      Locals:         1       0       0       0       0       0       0       0
 12932 ;;      Temps:          0       0       0       0       0       0       0       0
 12933 ;;      Totals:         1       0       0       0       0       0       0       0
 12934 ;;Total ram usage:        1 bytes
 12935 ;; Hardware stack levels used: 1
 12936 ;; This function calls:
 12937 ;;		Nothing
 12938 ;; This function is called by:
 12939 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12940 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12941 ;;		_I2C1_EVENT_TX
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945     0D3C                     _I2C1_DataTransmit:	
 12946                           ;psect for function _I2C1_DataTransmit
 12947                           
 12948                           
 12949                           ;incstack = 0
 12950                           ; Regs used in _I2C1_DataTransmit: [wreg]
 12951                           ;I2C1_DataTransmit@data stored from wreg
 12952     0D3C  00F0               	movwf	I2C1_DataTransmit@data
 12953     0D3D                     i1l2539:
 12954                           
 12955                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 12956     0D3D  0870               	movf	I2C1_DataTransmit@data,w
 12957     0D3E  0024               	movlb	4	; select bank4
 12958     0D3F  0091               	movwf	17	;volatile
 12959     0D40                     i1l273:
 12960     0D40  0008               	return
 12961     0D41                     __end_of_I2C1_DataTransmit:
 12962                           
 12963                           	psect	text73
 12964     0D04                     __ptext73:	
 12965 ;; *************** function _I2C1_RestartDisable *****************
 12966 ;; Defined at:
 12967 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;		None
 12970 ;; Auto vars:     Size  Location     Type
 12971 ;;		None
 12972 ;; Return value:  Size  Location     Type
 12973 ;;                  1    wreg      void 
 12974 ;; Registers used:
 12975 ;;		None
 12976 ;; Tracked objects:
 12977 ;;		On entry : 0/0
 12978 ;;		On exit  : 0/0
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12981 ;;      Params:         0       0       0       0       0       0       0       0
 12982 ;;      Locals:         0       0       0       0       0       0       0       0
 12983 ;;      Temps:          0       0       0       0       0       0       0       0
 12984 ;;      Totals:         0       0       0       0       0       0       0       0
 12985 ;;Total ram usage:        0 bytes
 12986 ;; Hardware stack levels used: 1
 12987 ;; This function calls:
 12988 ;;		Nothing
 12989 ;; This function is called by:
 12990 ;;		_I2C1_EVENT_RX
 12991 ;; This function uses a non-reentrant model
 12992 ;;
 12993                           
 12994     0D04                     _I2C1_RestartDisable:	
 12995                           ;psect for function _I2C1_RestartDisable
 12996                           
 12997     0D04                     i1l2559:	
 12998                           ;incstack = 0
 12999                           ; Regs used in _I2C1_RestartDisable: []
 13000                           
 13001                           
 13002                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 13003     0D04  0024               	movlb	4	; select bank4
 13004     0D05  1096               	bcf	22,1	;volatile
 13005     0D06                     i1l285:
 13006     0D06  0008               	return
 13007     0D07                     __end_of_I2C1_RestartDisable:
 13008                           
 13009                           	psect	text74
 13010     0D01                     __ptext74:	
 13011 ;; *************** function _I2C1_ReceiveEnable *****************
 13012 ;; Defined at:
 13013 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      void 
 13020 ;; Registers used:
 13021 ;;		None
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13027 ;;      Params:         0       0       0       0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0       0
 13030 ;;      Totals:         0       0       0       0       0       0       0       0
 13031 ;;Total ram usage:        0 bytes
 13032 ;; Hardware stack levels used: 1
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_I2C1_EVENT_RX
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040     0D01                     _I2C1_ReceiveEnable:	
 13041                           ;psect for function _I2C1_ReceiveEnable
 13042                           
 13043     0D01                     i1l2563:	
 13044                           ;incstack = 0
 13045                           ; Regs used in _I2C1_ReceiveEnable: []
 13046                           
 13047                           
 13048                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13049     0D01  0024               	movlb	4	; select bank4
 13050     0D02  1596               	bsf	22,3	;volatile
 13051     0D03                     i1l279:
 13052     0D03  0008               	return
 13053     0D04                     __end_of_I2C1_ReceiveEnable:
 13054                           
 13055                           	psect	text75
 13056     0D20                     __ptext75:	
 13057 ;; *************** function _I2C1_NackSend *****************
 13058 ;; Defined at:
 13059 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13060 ;; Parameters:    Size  Location     Type
 13061 ;;		None
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;		None
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  1    wreg      void 
 13066 ;; Registers used:
 13067 ;;		None
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13073 ;;      Params:         0       0       0       0       0       0       0       0
 13074 ;;      Locals:         0       0       0       0       0       0       0       0
 13075 ;;      Temps:          0       0       0       0       0       0       0       0
 13076 ;;      Totals:         0       0       0       0       0       0       0       0
 13077 ;;Total ram usage:        0 bytes
 13078 ;; Hardware stack levels used: 1
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_I2C1_EVENT_RX
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086     0D20                     _I2C1_NackSend:	
 13087                           ;psect for function _I2C1_NackSend
 13088                           
 13089     0D20                     i1l2561:	
 13090                           ;incstack = 0
 13091                           ; Regs used in _I2C1_NackSend: []
 13092                           
 13093                           
 13094                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13095     0D20  0024               	movlb	4	; select bank4
 13096     0D21  1696               	bsf	22,5	;volatile
 13097                           
 13098                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13099     0D22  1616               	bsf	22,4	;volatile
 13100     0D23                     i1l297:
 13101     0D23  0008               	return
 13102     0D24                     __end_of_I2C1_NackSend:
 13103                           
 13104                           	psect	text76
 13105     0D1C                     __ptext76:	
 13106 ;; *************** function _I2C1_IsRxBufFull *****************
 13107 ;; Defined at:
 13108 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13109 ;; Parameters:    Size  Location     Type
 13110 ;;		None
 13111 ;; Auto vars:     Size  Location     Type
 13112 ;;		None
 13113 ;; Return value:  Size  Location     Type
 13114 ;;                  1    wreg      _Bool 
 13115 ;; Registers used:
 13116 ;;		wreg, status,2, status,0
 13117 ;; Tracked objects:
 13118 ;;		On entry : 0/0
 13119 ;;		On exit  : 0/0
 13120 ;;		Unchanged: 0/0
 13121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13122 ;;      Params:         0       0       0       0       0       0       0       0
 13123 ;;      Locals:         0       0       0       0       0       0       0       0
 13124 ;;      Temps:          0       0       0       0       0       0       0       0
 13125 ;;      Totals:         0       0       0       0       0       0       0       0
 13126 ;;Total ram usage:        0 bytes
 13127 ;; Hardware stack levels used: 1
 13128 ;; This function calls:
 13129 ;;		Nothing
 13130 ;; This function is called by:
 13131 ;;		_I2C1_EVENT_RX
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           
 13135     0D1C                     _I2C1_IsRxBufFull:	
 13136                           ;psect for function _I2C1_IsRxBufFull
 13137                           
 13138     0D1C                     i1l2549:	
 13139                           ;incstack = 0
 13140                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13141                           
 13142                           
 13143                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13144     0D1C  0024               	movlb	4	; select bank4
 13145     0D1D  0814               	movf	20,w	;volatile
 13146     0D1E  3901               	andlw	1
 13147     0D1F                     i1l309:
 13148     0D1F  0008               	return
 13149     0D20                     __end_of_I2C1_IsRxBufFull:
 13150                           
 13151                           	psect	text77
 13152     0CFE                     __ptext77:	
 13153 ;; *************** function _I2C1_DataReceive *****************
 13154 ;; Defined at:
 13155 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;		None
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1    wreg      unsigned char 
 13162 ;; Registers used:
 13163 ;;		wreg
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/0
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13169 ;;      Params:         0       0       0       0       0       0       0       0
 13170 ;;      Locals:         0       0       0       0       0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0
 13172 ;;      Totals:         0       0       0       0       0       0       0       0
 13173 ;;Total ram usage:        0 bytes
 13174 ;; Hardware stack levels used: 1
 13175 ;; This function calls:
 13176 ;;		Nothing
 13177 ;; This function is called by:
 13178 ;;		_I2C1_EVENT_RX
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           
 13182     0CFE                     _I2C1_DataReceive:	
 13183                           ;psect for function _I2C1_DataReceive
 13184                           
 13185     0CFE                     i1l2553:	
 13186                           ;incstack = 0
 13187                           ; Regs used in _I2C1_DataReceive: [wreg]
 13188                           
 13189                           
 13190                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13191     0CFE  0024               	movlb	4	; select bank4
 13192     0CFF  0811               	movf	17,w	;volatile
 13193     0D00                     i1l270:
 13194     0D00  0008               	return
 13195     0D01                     __end_of_I2C1_DataReceive:
 13196                           
 13197                           	psect	text78
 13198     0D18                     __ptext78:	
 13199 ;; *************** function _I2C1_AckSend *****************
 13200 ;; Defined at:
 13201 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;		None
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      void 
 13208 ;; Registers used:
 13209 ;;		None
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13215 ;;      Params:         0       0       0       0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used: 1
 13221 ;; This function calls:
 13222 ;;		Nothing
 13223 ;; This function is called by:
 13224 ;;		_I2C1_EVENT_RX
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228     0D18                     _I2C1_AckSend:	
 13229                           ;psect for function _I2C1_AckSend
 13230                           
 13231     0D18                     i1l2557:	
 13232                           ;incstack = 0
 13233                           ; Regs used in _I2C1_AckSend: []
 13234                           
 13235                           
 13236                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13237     0D18  0024               	movlb	4	; select bank4
 13238     0D19  1296               	bcf	22,5	;volatile
 13239                           
 13240                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13241     0D1A  1616               	bsf	22,4	;volatile
 13242     0D1B                     i1l294:
 13243     0D1B  0008               	return
 13244     0D1C                     __end_of_I2C1_AckSend:
 13245                           
 13246                           	psect	text79
 13247     0CFB                     __ptext79:	
 13248 ;; *************** function _I2C1_StopSend *****************
 13249 ;; Defined at:
 13250 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;		None
 13253 ;; Auto vars:     Size  Location     Type
 13254 ;;		None
 13255 ;; Return value:  Size  Location     Type
 13256 ;;                  1    wreg      void 
 13257 ;; Registers used:
 13258 ;;		None
 13259 ;; Tracked objects:
 13260 ;;		On entry : 0/0
 13261 ;;		On exit  : 0/0
 13262 ;;		Unchanged: 0/0
 13263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13264 ;;      Params:         0       0       0       0       0       0       0       0
 13265 ;;      Locals:         0       0       0       0       0       0       0       0
 13266 ;;      Temps:          0       0       0       0       0       0       0       0
 13267 ;;      Totals:         0       0       0       0       0       0       0       0
 13268 ;;Total ram usage:        0 bytes
 13269 ;; Hardware stack levels used: 1
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_I2C1_EVENT_STOP
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277     0CFB                     _I2C1_StopSend:	
 13278                           ;psect for function _I2C1_StopSend
 13279                           
 13280     0CFB                     i1l2489:	
 13281                           ;incstack = 0
 13282                           ; Regs used in _I2C1_StopSend: []
 13283                           
 13284                           
 13285                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13286     0CFB  0024               	movlb	4	; select bank4
 13287     0CFC  1516               	bsf	22,2	;volatile
 13288     0CFD                     i1l291:
 13289     0CFD  0008               	return
 13290     0CFE                     __end_of_I2C1_StopSend:
 13291                           
 13292                           	psect	text80
 13293     0E51                     __ptext80:	
 13294 ;; *************** function _I2C1_Close *****************
 13295 ;; Defined at:
 13296 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;		None
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;		None
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  1    wreg      void 
 13303 ;; Registers used:
 13304 ;;		status,2, status,0, pclath, cstack
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13310 ;;      Params:         0       0       0       0       0       0       0       0
 13311 ;;      Locals:         0       0       0       0       0       0       0       0
 13312 ;;      Temps:          0       0       0       0       0       0       0       0
 13313 ;;      Totals:         0       0       0       0       0       0       0       0
 13314 ;;Total ram usage:        0 bytes
 13315 ;; Hardware stack levels used: 1
 13316 ;; Hardware stack levels required when called: 1
 13317 ;; This function calls:
 13318 ;;		_I2C1_ErrorInterruptClear
 13319 ;;		_I2C1_InterruptClear
 13320 ;;		_I2C1_StatusFlagsClear
 13321 ;; This function is called by:
 13322 ;;		_I2C1_EVENT_STOP
 13323 ;; This function uses a non-reentrant model
 13324 ;;
 13325                           
 13326     0E51                     _I2C1_Close:	
 13327                           ;psect for function _I2C1_Close
 13328                           
 13329     0E51                     i1l2479:	
 13330                           ;incstack = 0
 13331                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13332                           
 13333                           
 13334                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13335     0E51  0020               	movlb	0	; select bank0
 13336     0E52  01D2               	clrf	_i2c1Status	;volatile
 13337     0E53                     i1l2481:
 13338                           
 13339                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13340     0E53  3000               	movlw	0
 13341     0E54  00D4               	movwf	_i2c1Status+2	;volatile
 13342     0E55  30FF               	movlw	255
 13343     0E56  00D3               	movwf	_i2c1Status+1	;volatile
 13344                           
 13345                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13346     0E57  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
 13347                           
 13348                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13349     0E58  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 13350                           
 13351                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13352     0E59  01DD               	clrf	_i2c1Status+11	;volatile
 13353     0E5A                     i1l2483:
 13354                           
 13355                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13356     0E5A  318C  24F8  318E   	fcall	_I2C1_InterruptClear
 13357     0E5D                     i1l2485:
 13358                           
 13359                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13360     0E5D  318C  24F5  318E   	fcall	_I2C1_ErrorInterruptClear
 13361     0E60                     i1l2487:
 13362                           
 13363                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13364     0E60  318D  2514  318E   	fcall	_I2C1_StatusFlagsClear
 13365     0E63                     i1l219:
 13366     0E63  0008               	return
 13367     0E64                     __end_of_I2C1_Close:
 13368                           
 13369                           	psect	text81
 13370     0D14                     __ptext81:	
 13371 ;; *************** function _I2C1_StatusFlagsClear *****************
 13372 ;; Defined at:
 13373 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;		None
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;		None
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  1    wreg      void 
 13380 ;; Registers used:
 13381 ;;		None
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 0/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13387 ;;      Params:         0       0       0       0       0       0       0       0
 13388 ;;      Locals:         0       0       0       0       0       0       0       0
 13389 ;;      Temps:          0       0       0       0       0       0       0       0
 13390 ;;      Totals:         0       0       0       0       0       0       0       0
 13391 ;;Total ram usage:        0 bytes
 13392 ;; Hardware stack levels used: 1
 13393 ;; This function calls:
 13394 ;;		Nothing
 13395 ;; This function is called by:
 13396 ;;		_I2C1_Close
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400     0D14                     _I2C1_StatusFlagsClear:	
 13401                           ;psect for function _I2C1_StatusFlagsClear
 13402                           
 13403     0D14                     i1l2475:	
 13404                           ;incstack = 0
 13405                           ; Regs used in _I2C1_StatusFlagsClear: []
 13406                           
 13407                           
 13408                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13409     0D14  0024               	movlb	4	; select bank4
 13410     0D15  1395               	bcf	21,7	;volatile
 13411                           
 13412                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13413     0D16  1315               	bcf	21,6	;volatile
 13414     0D17                     i1l324:
 13415     0D17  0008               	return
 13416     0D18                     __end_of_I2C1_StatusFlagsClear:
 13417                           
 13418                           	psect	text82
 13419     0CF8                     __ptext82:	
 13420 ;; *************** function _I2C1_InterruptClear *****************
 13421 ;; Defined at:
 13422 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13423 ;; Parameters:    Size  Location     Type
 13424 ;;		None
 13425 ;; Auto vars:     Size  Location     Type
 13426 ;;		None
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  1    wreg      void 
 13429 ;; Registers used:
 13430 ;;		None
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13436 ;;      Params:         0       0       0       0       0       0       0       0
 13437 ;;      Locals:         0       0       0       0       0       0       0       0
 13438 ;;      Temps:          0       0       0       0       0       0       0       0
 13439 ;;      Totals:         0       0       0       0       0       0       0       0
 13440 ;;Total ram usage:        0 bytes
 13441 ;; Hardware stack levels used: 1
 13442 ;; This function calls:
 13443 ;;		Nothing
 13444 ;; This function is called by:
 13445 ;;		_I2C1_Close
 13446 ;;		_I2C1_EventHandler
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450     0CF8                     _I2C1_InterruptClear:	
 13451                           ;psect for function _I2C1_InterruptClear
 13452                           
 13453     0CF8                     i1l2471:	
 13454                           ;incstack = 0
 13455                           ; Regs used in _I2C1_InterruptClear: []
 13456                           
 13457                           
 13458                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13459     0CF8  0020               	movlb	0	; select bank0
 13460     0CF9  1190               	bcf	16,3	;volatile
 13461     0CFA                     i1l318:
 13462     0CFA  0008               	return
 13463     0CFB                     __end_of_I2C1_InterruptClear:
 13464                           
 13465                           	psect	text83
 13466     0CF5                     __ptext83:	
 13467 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13468 ;; Defined at:
 13469 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13470 ;; Parameters:    Size  Location     Type
 13471 ;;		None
 13472 ;; Auto vars:     Size  Location     Type
 13473 ;;		None
 13474 ;; Return value:  Size  Location     Type
 13475 ;;                  1    wreg      void 
 13476 ;; Registers used:
 13477 ;;		None
 13478 ;; Tracked objects:
 13479 ;;		On entry : 0/0
 13480 ;;		On exit  : 0/0
 13481 ;;		Unchanged: 0/0
 13482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13483 ;;      Params:         0       0       0       0       0       0       0       0
 13484 ;;      Locals:         0       0       0       0       0       0       0       0
 13485 ;;      Temps:          0       0       0       0       0       0       0       0
 13486 ;;      Totals:         0       0       0       0       0       0       0       0
 13487 ;;Total ram usage:        0 bytes
 13488 ;; Hardware stack levels used: 1
 13489 ;; This function calls:
 13490 ;;		Nothing
 13491 ;; This function is called by:
 13492 ;;		_I2C1_Close
 13493 ;;		_I2C1_ErrorEventHandler
 13494 ;; This function uses a non-reentrant model
 13495 ;;
 13496                           
 13497     0CF5                     _I2C1_ErrorInterruptClear:	
 13498                           ;psect for function _I2C1_ErrorInterruptClear
 13499                           
 13500     0CF5                     i1l2473:	
 13501                           ;incstack = 0
 13502                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13503                           
 13504                           
 13505                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13506     0CF5  0020               	movlb	0	; select bank0
 13507     0CF6  1191               	bcf	17,3	;volatile
 13508     0CF7                     i1l321:
 13509     0CF7  0008               	return
 13510     0CF8                     __end_of_I2C1_ErrorInterruptClear:
 13511                           
 13512                           	psect	text84
 13513     0D10                     __ptext84:	
 13514 ;; *************** function _I2C1_BusReset *****************
 13515 ;; Defined at:
 13516 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;		None
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1    wreg      void 
 13523 ;; Registers used:
 13524 ;;		None
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13530 ;;      Params:         0       0       0       0       0       0       0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0
 13532 ;;      Temps:          0       0       0       0       0       0       0       0
 13533 ;;      Totals:         0       0       0       0       0       0       0       0
 13534 ;;Total ram usage:        0 bytes
 13535 ;; Hardware stack levels used: 1
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_I2C1_EVENT_RESET
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543     0D10                     _I2C1_BusReset:	
 13544                           ;psect for function _I2C1_BusReset
 13545                           
 13546     0D10                     i1l2491:	
 13547                           ;incstack = 0
 13548                           ; Regs used in _I2C1_BusReset: []
 13549                           
 13550                           
 13551                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13552     0D10  0024               	movlb	4	; select bank4
 13553     0D11  1295               	bcf	21,5	;volatile
 13554                           
 13555                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13556     0D12  1695               	bsf	21,5	;volatile
 13557     0D13                     i1l276:
 13558     0D13  0008               	return
 13559     0D14                     __end_of_I2C1_BusReset:
 13560                           
 13561                           	psect	text85
 13562     0002                     __ptext85:	
 13563 ;; *************** function _I2C1_DefaultCallback *****************
 13564 ;; Defined at:
 13565 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  1    wreg      void 
 13572 ;; Registers used:
 13573 ;;		None
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13579 ;;      Params:         0       0       0       0       0       0       0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0       0
 13581 ;;      Temps:          0       0       0       0       0       0       0       0
 13582 ;;      Totals:         0       0       0       0       0       0       0       0
 13583 ;;Total ram usage:        0 bytes
 13584 ;; Hardware stack levels used: 1
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		_I2C1_Initialize
 13589 ;;		_I2C1_Deinitialize
 13590 ;;		_I2C1_ErrorEventHandler
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594     0002                     _I2C1_DefaultCallback:	
 13595                           ;psect for function _I2C1_DefaultCallback
 13596                           
 13597     0002                     i1l231:	
 13598                           ;incstack = 0
 13599                           ; Regs used in _I2C1_DefaultCallback: []
 13600                           
 13601     0002  0008               	return
 13602     0003                     __end_of_I2C1_DefaultCallback:
 13603                           
 13604                           	psect	text86
 13605     0E14                     __ptext86:	
 13606 ;; *************** function _ADC_ISR *****************
 13607 ;; Defined at:
 13608 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;		None
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;		None
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  1    wreg      void 
 13615 ;; Registers used:
 13616 ;;		wreg, status,2, status,0, pclath, cstack
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13622 ;;      Params:         0       0       0       0       0       0       0       0
 13623 ;;      Locals:         0       0       0       0       0       0       0       0
 13624 ;;      Temps:          0       0       0       0       0       0       0       0
 13625 ;;      Totals:         0       0       0       0       0       0       0       0
 13626 ;;Total ram usage:        0 bytes
 13627 ;; Hardware stack levels used: 1
 13628 ;; Hardware stack levels required when called: 1
 13629 ;; This function calls:
 13630 ;;		NULL
 13631 ;;		_ADC_DefaultInterruptHandler
 13632 ;; This function is called by:
 13633 ;;		_INTERRUPT_InterruptManager
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637     0E14                     _ADC_ISR:	
 13638                           ;psect for function _ADC_ISR
 13639                           
 13640     0E14                     i1l3151:	
 13641                           ;incstack = 0
 13642                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 13643                           
 13644                           
 13645                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 13646     0E14  0020               	movlb	0	; select bank0
 13647     0E15  1310               	bcf	16,6	;volatile
 13648     0E16                     i1l3153:
 13649                           
 13650                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 13651     0E16  0021               	movlb	1	; select bank1
 13652     0E17  084D               	movf	_ADC_InterruptHandler^(0+128),w
 13653     0E18  044E               	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
 13654     0E19  1903               	btfsc	3,2
 13655     0E1A  2E1C               	goto	u128_21
 13656     0E1B  2E1D               	goto	u128_20
 13657     0E1C                     u128_21:
 13658     0E1C  2E22               	goto	i1l52
 13659     0E1D                     u128_20:
 13660     0E1D                     i1l3155:
 13661                           
 13662                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 13663     0E1D  084E               	movf	(_ADC_InterruptHandler+1)^(0+128),w
 13664     0E1E  008A               	movwf	10
 13665     0E1F  084D               	movf	_ADC_InterruptHandler^(0+128),w
 13666     0E20  000A               	callw
 13667     0E21  318E               	pagesel	$
 13668     0E22                     i1l52:
 13669     0E22  0008               	return
 13670     0E23                     __end_of_ADC_ISR:
 13671                           
 13672                           	psect	text87
 13673     0CF4                     __ptext87:	
 13674 ;; *************** function _ADC_DefaultInterruptHandler *****************
 13675 ;; Defined at:
 13676 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;		None
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;		None
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  1    wreg      void 
 13683 ;; Registers used:
 13684 ;;		None
 13685 ;; Tracked objects:
 13686 ;;		On entry : 0/0
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13690 ;;      Params:         0       0       0       0       0       0       0       0
 13691 ;;      Locals:         0       0       0       0       0       0       0       0
 13692 ;;      Temps:          0       0       0       0       0       0       0       0
 13693 ;;      Totals:         0       0       0       0       0       0       0       0
 13694 ;;Total ram usage:        0 bytes
 13695 ;; Hardware stack levels used: 1
 13696 ;; This function calls:
 13697 ;;		Nothing
 13698 ;; This function is called by:
 13699 ;;		_ADC_Initialize
 13700 ;;		_ADC_ISR
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704     0CF4                     _ADC_DefaultInterruptHandler:	
 13705                           ;psect for function _ADC_DefaultInterruptHandler
 13706                           
 13707     0CF4                     i1l58:	
 13708                           ;incstack = 0
 13709                           ; Regs used in _ADC_DefaultInterruptHandler: []
 13710                           
 13711     0CF4  0008               	return
 13712     0CF5                     __end_of_ADC_DefaultInterruptHandler:
 13713     007E                     btemp	set	126	;btemp
 13714     007E                     int$flags	set	126
 13715     007E                     wtemp0	set	126
 13716                           
 13717                           	psect	config
 13718                           
 13719                           ;Config register CONFIG1 @ 0x8007
 13720                           ;	Oscillator Selection Bits
 13721                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13722                           ;	Power-up Timer Enable
 13723                           ;	PWRTE = OFF, PWRT disabled
 13724                           ;	MCLR Pin Function Select
 13725                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13726                           ;	Flash Program Memory Code Protection
 13727                           ;	CP = OFF, Program memory code protection is disabled
 13728                           ;	Brown-out Reset Enable
 13729                           ;	BOREN = ON, Brown-out Reset enabled
 13730                           ;	Clock Out Enable
 13731                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13732     8007                     	org	32775
 13733     8007  3FFC               	dw	16380
 13734                           
 13735                           ;Config register CONFIG2 @ 0x8008
 13736                           ;	Flash Memory Self-Write Protection
 13737                           ;	WRT = OFF, Write protection off
 13738                           ;	Peripheral Pin Select one-way control
 13739                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13740                           ;	Zero Cross Detect Disable Bit
 13741                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13742                           ;	PLL Enable Bit
 13743                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13744                           ;	Stack Overflow/Underflow Reset Enable
 13745                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13746                           ;	Brown-out Reset Voltage Selection
 13747                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13748                           ;	Low-Power Brown Out Reset
 13749                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13750                           ;	In-Circuit Debugger Mode
 13751                           ;	DEBUG = 0x1, unprogrammed default
 13752                           ;	Low-Voltage Programming Enable
 13753                           ;	LVP = ON, Low-voltage programming enabled
 13754     8008                     	org	32776
 13755     8008  3EFF               	dw	16127
 13756                           
 13757                           ;Config register CONFIG3 @ 0x8009
 13758                           ;	WDT Period Select
 13759                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13760                           ;	Watchdog Timer Enable
 13761                           ;	WDTE = OFF, WDT disabled
 13762                           ;	WDT Window Select
 13763                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13764                           ;	WDT Input Clock Selector
 13765                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13766     8009                     	org	32777
 13767     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    86
    Data        31
    BSS         45
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      77
    BANK1            80      0      47
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9559[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Read@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    I2C1_Write@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    packLong@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getPos@data(BANK0[4]), parserDataBuffer(BANK1[5]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 5
		 -> parserDataBuffer(BANK1[5]), 

    S189$2$1	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), 

    S189$3$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S288$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@offset(BANK0[1]), 
		 -> KAPS_setRelPos@reg(BANK0[1]), KAPS_StorePos@data(BANK0[5]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 6
		 -> parserDataBuffer(BANK1[5]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> KAPS_setAbsPos@data(BANK0[4]), KAPS_StorePos@data(BANK0[5]), ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 


Critical Paths under _main in COMMON

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ProcessMsg->_SSPA_setMute
    _ADC2Celsius->___aldiv
    _getADCValue->_ADC_GetConversionResult
    _getADCValue->_ADC_SelectChannel
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getPos->_I2C1_Read
    _KAPS_getIndex->_I2C1_Read
    _I2C1_Read->_I2C1_IsBusy
    _I2C1_Write->_I2C1_IsBusy
    _SendMsg->_SendSync
    _SendSync->_EUSART_IsTxReady
    _SendSync->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_RX
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_RX
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _main->_ProcessMsg
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->_ADC2Celsius
    _ADC2Celsius->___aldiv
    _SSPA_getPOut->_ADC2Amp
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    ___aldiv->___lmul
    _KAPS_setRelPos->_I2C1_Write
    _KAPS_setAbsPos->_packLong
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getStatus->_I2C1_Write
    _KAPS_getPos->_packLong
    _KAPS_getIndex->_I2C1_Read
    _KAPS_getIndex->_I2C1_Write
    _KAPS_StorePos->_packLong
    _KAPS_GoToIdx->_I2C1_Write
    _Parse->_SendNack
    _SendNack->_SendMsg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   43859
                                             49 BANK0      1     1      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                         _ProcessMsg
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     632
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     196
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     196
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessMsg                                           3     2      1   39102
                                             46 BANK0      3     2      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (2) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SSPA_setMute                                         4     3      1     245
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SSPA_getTemp                                         6     6      0    2150
                                             40 BANK0      6     6      0
                        _ADC2Celsius
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _ADC2Celsius                                         14    12      2    1850
                                             26 BANK0     14    12      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SSPA_getPOut                                         6     6      0    4316
                                             38 BANK0      5     5      0
                            _ADC2Amp
                            _ADC2dBm
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                          8     6      2     167
                                              0 BANK0      8     6      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_SelectChannel                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC2dBm                                             10     8      2    1850
                                             26 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ADC2Amp                                             12     8      4    1940
                                             26 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     985
                                              4 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _KAPS_setRelPos                                       4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_setAbsPos                                      11     7      4    4328
                                             13 BANK0     11     7      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _KAPS_getStatus                                       4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_getPos                                          7     7      0    4638
                                             13 BANK0      7     7      0
                          _I2C1_Read
                         _I2C1_Write
                           _packLong
 ---------------------------------------------------------------------------------
 (2) _packLong                                            13     9      4     428
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _KAPS_getIndex                                        4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read                                            6     1      5     977
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                     _I2C1_ReadStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadStart                                       0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (2) _KAPS_StorePos                                       13     9      4    4396
                                             13 BANK0     13     9      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _unpackLong                                           9     4      5     968
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _KAPS_GoToIdx                                         4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write                                           6     1      5    3113
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteStart                                      0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (5) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_IsBusy                                          1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parse                                                3     3      0    4088
                                              6 BANK0      3     3      0
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    1985
                                              5 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _SendMsg                                              5     3      2    1948
                                              0 BANK0      5     3      2
                           _SendSync
 ---------------------------------------------------------------------------------
 (3) _SendSync                                             1     1      0     279
                                              5 COMMON     1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     211
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_IsTxReady                                     1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_EventHandler                                    2     2      0     164
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_ErrorEventHandler                               2     2      0     164
                                              2 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_TX                                        1     1      0      48
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _SendMsg
       _SendSync
         _EUSART_IsTxReady
         _EUSART_Write
     _SendNack
       _SendMsg
   _ProcessMsg
     _KAPS_GoToIdx
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_StartSend
     _KAPS_StorePos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_getIndex
       _I2C1_Read
         _I2C1_IsBusy
         _I2C1_ReadStart
           _I2C1_StartSend
       _I2C1_Write
     _KAPS_getPos
       _I2C1_Read
       _I2C1_Write
       _packLong
     _KAPS_getStatus
       _I2C1_Read
       _I2C1_Write
     _KAPS_setAbsPos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_setRelPos
       _I2C1_Write
     _SSPA_getPOut
       _ADC2Amp
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _ADC2dBm
         ___aldiv
         ___lmul
       _getADCValue
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_SelectChannel
         _ADC_StartConversion
     _SSPA_getTemp
       _ADC2Celsius
         ___aldiv
         ___lmul
       _getADCValue
     _SSPA_setMute
     _SendMsg
     _packLong
     _unpackLong
     _unpackWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      86       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      86      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 16:54:38 2024

                                    I2C1_Write@data 0022                              ??_I2C1_DefaultCallback 0070  
                                                l30 0DEF                                                  l33 0D0F  
                                                l27 0E8A                                                  l36 0DA3  
                                                l39 0D67                                                  l55 0D6D  
       __end_of_EUSART_OverrunErrorCallbackRegister 0E08               ??_EUSART_OverrunErrorCallbackRegister 0076  
              ?_EUSART_OverrunErrorCallbackRegister 0074                 _EUSART_OverrunErrorCallbackRegister 0DFC  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                                     ?_KAPS_GoToIdx 0070                                       _KAPS_StorePos 0530  
                                      _SSPA_getPOut 02F0                                        _SSPA_getTemp 05AE  
                                               l200 0E50                                     __end_of_ADC2Amp 0530  
                                               l204 0E13                                                 l213 0D9C  
                                               l216 0D95                                                 l312 0D3B  
                                               l410 0467                                                 l333 0DC2  
                                               l184 0EF3                                                 l177 0EA0  
                                               l610 0FD3                                                 l442 0DE3  
                                               l188 0F15                                                 l613 0D37  
                                               l623 0DD8                                                 l616 0003  
                                               l288 0D0C                                                 l713 0F83  
                                               l465 0D4F                                                 l722 056F  
                                               l730 07FA                                                 l619 0D33  
                                               l627 0E07                                                 l483 0E76  
                                               l716 076E                                                 l548 0ED5  
                                               l726 07CC                                                 l719 0FA9  
                                               l831 052F                                                 l592 0D4A  
                                               l736 05AD                                                 l840 062F  
                                               l745 04AC                                                 l825 06D2  
                                               l762 0E40                                                 l834 0627  
                                               l771 0DCD                                                 l739 03D0  
                                               l851 063D                                                 l843 0632  
                                               l691 01AB                                                 l828 041C  
                                               l748 0DFB                                                 l597 0E31  
                                               l766 0707                                                 l855 0662  
                                               l864 05EA                                                 l848 063A  
                                               l785 01C9                                                 l873 0379  
                                               l955 073B                                                 l788 01D0  
                                               l868 02F3                                                 l798 025F  
                                   __end_of_ADC2dBm 0628                                                 u910 0E0E  
                                               u911 0E0D                                                 u990 0DD4  
                                               u991 0DD3                                        ?_KAPS_getPos 0070  
                         __end_of_I2C1_DataTransmit 0D41                                     __end_of_ADC_ISR 0E23  
                   __end_of_ADC_SetInterruptHandler 0D6E                                                 wreg 0009  
                                      ADC2dBm@value 003C                            _I2C1_ErrorInterruptClear 0CF5  
                                      _SSPA_setMute 0628                        ?_ADC_DefaultInterruptHandler 0070  
                                     SendMsg@msg_id 0024                                       _KAPS_getIndex 07CD  
                                      ?_EUSART_Read 0070                                        _BAUD1CONbits 019F  
                                  __end_of_I2C1_ISR 0D30                                                l1006 0273  
                                              l1016 02EF                                                l3001 0DD9  
                                              l3011 0ED2                                                l3003 0DDC  
                                              l3013 0D30                                                l3005 0EB9  
                                              l3007 0EC4                                                l4001 020E  
                                              l3009 0ECB                                                l4003 0214  
                                              l4021 0232                                                l4013 0224  
                                              l4005 0218                                                l4031 0241  
                                              l4023 023A                                                l4015 0226  
                                              l4007 021C                                                l4033 0245  
                                              l4017 0227                                                l4009 021E  
                                              l3161 0E64                                                l3163 0D46  
                                              l3171 0FB2                                                l4019 022D  
                                              l4035 0248                                                l3181 0FC6  
                                              l3173 0FB4                                                l4221 0250  
                                              l4029 023C                                                l4037 025E  
                                              l3183 0FCC                                                l3175 0FBA  
                                              l3167 0FAA                                                l4215 0649  
                                              l4071 0F3E                                                l3185 0FD1  
                                              l3177 0FBF                                                l3169 0FAD  
                                              l3601 0286                                                l4217 05BF  
                                              l2633 0D68                                                l4073 0F3E  
                                              l4065 0F39                                                l3179 0FC4  
                                              l3531 0E2E                                                l3523 0D0A  
                                              l3611 02A8                                                l3603 028E  
                                              l4219 036E                                                l2635 0D38  
                                              l4075 0F46                                                l4067 0F3C  
                                              l3533 0E30                                                l3525 0E23  
                                              l3701 0700                                                l3621 02D1  
                                              l3613 02AF                                                l3605 0296  
                                              l3541 0D0D                                                l2901 0E81  
                                              l2637 0E08                                                l4077 0F4B  
                                              l4069 0F3D                                                l3527 0E24  
                                              l3551 0E41                                                l3631 0ED6  
                                              l3711 0482                                                l3615 02C1  
                                              l3607 0299                                                l3623 02D7  
                                              l3543 0D9D                                                l2903 0E88  
                                              l2639 0E0E                                                l2911 0E94  
                                              l4079 0F54                                                l3529 0E29  
                                              l3537 0D34                                                l3705 0703  
                                              l3553 0E43                                                l3641 0EE8  
                                              l3633 0ED6                                                l3713 0497  
                                              l3721 03AA                                                l3625 02DC  
                                              l3617 02C9                                                l3609 02A4  
                                              l3801 02FC                                                l2913 0E9E  
                                              l2905 0E8B                                                l3571 0E33  
                                              l3555 0E49                                                l3563 0D8F  
                                              l3651 0EF3                                                l3643 0EEC  
                                              l3635 0EDE                                                l3707 0468  
                                              l3723 03C2                                                l3715 037C  
                                              l3627 02E7                                                l3619 02CA  
                                              l3547 0D62                                                l3539 0DE5  
                                              l3731 06A3                                                l3811 0349  
                                              l3803 0317                                                l2907 0E90  
                                              l3573 0E33                                                l3557 0E4E  
                                              l3565 0D92                                                l3645 0EED  
                                              l3637 0EE5                                                l3709 046E  
                                              l3901 0540                                                l3661 0F04  
                                              l3717 037C                                                l3581 0715  
                                              l3741 06BA                                                l3733 06A8  
                                              l3813 0349                                                l3805 0325  
                                              l2941 0DBE                                                l2909 0E91  
                                              l3575 0E3B                                                l3559 0E4F  
                                              l3647 0EEF                                                l3639 0EE6  
                                              l3903 054D                                                l3567 0D96  
                                              l3671 0F0E                                                l3663 0F05  
                                              l3655 0EF4                                                l3719 0393  
                                              l3831 07A3                                                l3591 0260  
                                              l3583 071D                                                l3743 06BF  
                                              l3727 069E                                                l3815 0352  
                                              l3807 0325                                                l3751 03D8  
                                              l3911 006B                                                l2943 0DC0  
                                              l2791 0DD4                                                l2951 0437  
                                              l3681 06D5                                                l3649 0EF0  
                                              l3905 055E                                                l3569 0D99  
                                              l3673 0F0F                                                l3665 0F07  
                                              l3657 0EF5                                                l3841 057A  
                                              l3833 07B3                                                l3593 0262  
                                              l3585 0724                                                l3577 0708  
                                              l3761 0527                                                l3745 06C5  
                                              l3737 06AA                                                l3729 06A0  
                                              l3809 032E                                                l3753 0418  
                                              l3921 009B                                                l3913 0071  
                                              l2793 0DFC                                                l2961 0440  
                                              l2953 0439                                                l2945 041D  
                                              l3691 06E7                                                l3683 06D6  
                                              l3907 0DC5                                                l3675 0F12  
                                              l3667 0F0B                                                l3659 0EFD  
                                              l3851 07D1                                                l3843 058A  
                                              l3835 07C9                                                l3827 079F  
                                              l3595 0266                                                l3587 0733  
                                              l3579 0711                                                l3739 06B2  
                                              l3819 0366                                                l3931 00DD  
                                              l3923 00B3                                                l3915 0083  
                                              l2891 0E7A                                                l2939 0DBB  
                                              l2795 0E02                                                l2787 0D4B  
                                              l2971 044B                                                l2963 0442  
                                              l2955 043B                                                l2947 041F  
                                              l3685 06DA                                                l3669 0F0C  
                                              l3677 0F14                                                l3853 07E1  
                                              l3845 05A0                                                l3837 0570  
                                              l3829 07A2                                                l3597 0277  
                                              l3757 04F0                                                l3765 05EB  
                                              l3749 03D1                                                l3781 05B7  
                                              l3773 05B0                                                l3861 0635  
                                              l3941 0114                                                l3933 00F9  
                                              l3925 00BD                                                l3917 008D  
                                              l3909 006A                                                l2893 0E7B  
                                              l2789 0DCE                                                l2981 045A  
                                              l2973 044E                                                l2965 0444  
                                              l2957 043C                                                l2949 0421  
                                              l3695 06ED                                                l3687 06DF  
                                              l3855 07F7                                                l3847 07CD  
                                              l3839 0572                                                l3599 0282  
                                              l3759 04F7                                                l3767 05F2  
                                              l3783 05CA                                                l3775 05B1  
                                              l3951 0151                                                l3943 0133  
                                              l3935 0103                                                l3927 00C4  
                                              l3919 0094                                                l2895 0E7C  
                                              l2991 0462                                                l2983 045D  
                                              l2975 0451                                                l2967 0447  
                                              l2959 043D                                                l3697 06F4  
                                              l3849 07D0                                                l3881 073C  
                                              l3769 0626                                                l3785 05D3  
                                              l3777 05B4                                                l3865 0640  
                                              l3857 0629                                                l3793 0DF0  
                                              l3953 0159                                                l3945 0136  
                                              l3937 0106                                                l3929 00CB  
                                              l3961 0188                                                l2897 0E7D  
                                              l2889 0E77                                                l2993 0463  
                                              l2985 045F                                                l2977 0454  
                                              l2969 0449                                                l3699 06FC  
                                              l3971 01B9                                                l3963 01AE  
                                              l3875 0F60                                                l3883 073F  
                                              l3891 0F88                                                l3867 0654  
                                              l3859 062A                                                l3795 0DF6  
                                              l3955 016A                                                l3947 013A  
                                              l3939 010A                                                l2899 0E7F  
                                              l2995 0464                                                l2987 0460  
                                              l2979 0457                                                l3981 01CD  
                                              l3973 01BE                                                l3965 01AF  
                                              l3877 0F62                                                l3885 074C  
                                              l3893 0F98                                                l3797 02F2  
                                              l3957 0172                                                l3949 0144  
                                              l2997 0465                                                l2989 0461  
                                              l3991 01D6                                                l3983 01D0  
                                              l3975 01C0                                                l3967 01B4  
                                              l3879 0F72                                                l3895 0532  
                                              l3887 075D                                                l3799 02F3  
                                              l2999 0466                                                l3993 01DD  
                                              l3985 01D1                                                l3977 01C3  
                                              l3969 01B6                                                l3897 0534  
                                              l3889 0F86                                                l3995 01E4  
                                              l3987 01D3                                                l3979 01C6  
                                              l3899 053E                                                l3999 01EB  
                                 _I2C1_Deinitialize 0000                                                u1000 0E02  
                                              u1001 0E01                                                u2010 01B4  
                                              u2011 01B3                                                u1300 0FBA  
                                              u2020 0223                                                u1301 0FB9  
                                              u2021 0222                                                u2005 00E4  
                                              u1310 0FC4                                                u2030 022D  
                                              u1311 0FC3                                                u2031 022C  
                                              u1320 0FCC                                                u2040 0232  
                                              u1321 0FCB                                                u2041 0231  
                                              u2060 0F46                                                u2061 0F45  
                                              _LATA 010C                                                u2070 0F54  
                                              _LATB 010D                                                u2071 0F53  
                                              _LATC 010E                                                u1290 0FB2  
                                              u1530 0E29                                                u1610 0733  
                                              u1291 0FB1                                                u1531 0E28  
                                              u1611 0732                                                u1540 0E2E  
                                              u1700 02D7                                                u1620 0266  
                                              u1541 0E2D                                                u1701 02D6  
                                              u1621 0265                                                u1605 0725  
                                              u1550 0E49                                                u1710 02DC  
                                              u1630 0277                                                u1551 0E48  
                                              u1711 02DB                                                u1631 0276  
                                              u1560 0E4E                                                u1720 0EDE  
                                              u1800 03A0                                                u1640 0296  
                                              u1561 0E4D                                                u1721 0EDD  
                                              u1641 0295                                                u1570 0E3B  
                                              u1730 0EFD                                                u1810 03B8  
                                              u1571 0E3A                                                u1731 0EFC  
                                              u1740 06E6                                                u1900 07C9  
                                              u1660 02A8                                                u1580 0715  
                                              u1820 06B2                                                u1741 06E5  
                                              u1805 039C                                                u1901 07C8  
                                              u1661 02A7                                                u1581 0714  
                                              u1821 06B1                                                u1750 06EC  
                                              u1910 05A0                                                u1830 06C5  
                                              u1751 06EB                                                u1815 03B4  
                                              u1911 059F                                                u1655 029A  
                                              u1831 06C4                                                u1760 047E  
                                              u1920 07F7                                                u1680 02C1  
                                              u1921 07F6                                                u1681 02C0  
                                              u1770 0493                                                u1930 062F  
                                              u1675 02A9                                                u1595 071E  
                                              u1931 062E                                                u1780 04A8  
                                              u1940 063A                                                u1765 047A  
                                              u1685 02BD                                                u1845 06CA  
                                              u1941 0639                                                u1790 0389  
                                              u1775 048F                                                u1695 02CB  
                                              u1855 05DE                                                u1785 04A4  
                                              u1865 0307                                                u1795 0385  
                                              u1875 031A                                                u1955 0658  
                                              u1965 0537                                                u1885 0339  
                                              u1895 0355                                                u1975 0078  
                                              u1985 00A2                                                u1995 00D2  
                                              i1l52 0E22                                                i1l58 0CF4  
                                              _UART 076F                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                                  ??_I2C1_ReadStart 0074                                     ??_I2C1_StopSend 0070  
                                 I2C1_Write@address 0020                                                _main 0F39  
                                              _kaps 0066                                    __end_of_I2C_Host 080F  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                              start 0036          __end_of_EUSART_DefaultOverrunErrorCallback 0D34  
              ??_EUSART_DefaultOverrunErrorCallback 0074                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 0D30                                       ADC2dBm@result 0040  
                   __end_of_INT_SetInterruptHandler 0D50                                     _I2C1_EVENT_IDLE 0D24  
                                   _I2C1_EVENT_NACK 0D50                                          _i2c1Status 0052  
                                   _I2C1_EVENT_STOP 0DB3                                     __end_of_SendMsg 0708  
                                    ??_KAPS_GoToIdx 0025                                      ?_KAPS_StorePos 002D  
                                    _KAPS_getStatus 079F                                       ?_EUSART_Write 0074  
                                 __end_of_I2C1_Read 0F16                                     __end_of___aldiv 02F0  
                                             ?_main 0070                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             i1l210 0D2B                                               i1l300 0D61  
                                             i1l231 0002                                               i1l303 0D45  
                                             i1l207 0D2F                                               i1l240 0D80  
                                             i1l321 0CF7                                               i1l225 04EF  
                                             i1l234 0D27                                               i1l306 0D8E  
                                             i1l219 0E63                                               i1l324 0D17  
                                             i1l228 0F38                                               i1l309 0D1F  
                                             i1l237 0DB2                                               i1l261 0D5B  
                                             i1l318 0CFA                                               i1l270 0D00  
                                             i1l247 0FFF                                               i1l255 069B  
                                             i1l264 0DBA                                               i1l273 0D40  
                                             i1l282 0D09                                               i1l258 0D55  
                                             i1l450 0026                                               i1l291 0CFD  
                                             i1l267 0D87                                               i1l276 0D13  
                                             i1l285 0D06                                               i1l294 0D1B  
                                             i1l279 0D03                                               i1l455 0034  
                                             i1l448 0018                                               i1l297 0D23  
                                             i1l449 0034                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             u94_20 0FDB                                               u94_21 0FDA  
                                             u95_20 0FF3                                               u95_21 0FF2  
                                             u96_20 066D                                               u96_21 066C  
                                             _RXPPS 0E24                                               u97_20 0674  
                                             u97_21 0673                                               u98_20 068A  
                                             u98_21 0689                                    ??_I2C1_StartSend 0074  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                 ___lmul@multiplicand 0024  
                                             _Parse 01AC                                      ?_KAPS_getIndex 0070  
                                 ??_I2C1_Initialize 0076                                     SendMsg@data_len 0021  
                           ??_I2C1_CallbackRegister 0076                                   ?_I2C1_IsRxBufFull 0070  
                                  ProcessMsg@msg_id 0050                            ?_I2C1_EVENT_SEND_WR_ADDR 0070  
                                             _sspas 00A0                                               pclath 000A  
                             I2C1_DataTransmit@data 0070                                      _KAPS_setAbsPos 073C  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                      _KAPS_setRelPos 0F84  
                                      ??_I2C1_Close 0070                                          SendMsg@sum 0023  
                                      __end_of_UART 079F                                        ??_I2C1_Write 0075  
                                   __initialization 0038                            ??_I2C1_ErrorEventHandler 0072  
                                      __end_of_main 0F5E                              __end_of_KAPS_getStatus 07CD  
                                         ??_ADC2Amp 0075                                           ??_ADC2dBm 0075  
                                    getADCValue@sum 0025                                    _I2C1_EVENT_ERROR 0D56  
                                    ??_EUSART_Write 0075                                    _I2C1_EVENT_RESET 0D81  
                                         ??_ADC_ISR 0070                         ?_INTERRUPT_InterruptManager 0070  
                                  __end_of_SendNack 0DCE                                              ??_main 0076  
                                  __end_of_SendSync 0E41                                    SSPA_setMute@band 0075  
                                  SSPA_setMute@mute 0074  EUSART_OverrunErrorCallbackRegister@callbackHandler 0074  
EUSART_FramingErrorCallbackRegister@callbackHandler 0074                I2C1_CallbackRegister@callbackHandler 0074  
                                            ?_Parse 0070                                  __end_of_I2C1_Close 0E64  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 00BC  
                             _I2C1_InterruptsEnable 0D38                                              _ADRESH 009C  
                                            _ADRESL 009B                              __end_of_KAPS_setAbsPos 076F  
                                __end_of_I2C1_Write 0EF4                                              _ANSELA 018C  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                            _BORCON 0116                                   KAPS_setAbsPos@reg 0037  
                                 KAPS_setAbsPos@pos 002D                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RC2PPS 0EA2  
                                            _RB5PPS 0E9D                                              _RB6PPS 0E9E  
                                            u112_20 04B8                                              u112_21 04B7  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            _ODCONC 028E                                              i1l3151 0E14  
                                            u113_20 04C0                                              i1l3153 0E16  
                                            u113_21 04BF                                              i1l3155 0E1D  
                                            i1l2541 0D07                                              i1l3157 0D2C  
                                            i1l2471 0CF8                                              i1l2703 0D24  
                                            i1l2711 0DB1                                              i1l2543 0DB3  
                                            i1l3159 0D28                                              u114_20 04CE  
                                            i1l2473 0CF5                                              i1l2481 0E53  
                                            i1l2553 0CFE                                              i1l2561 0D20  
                                            i1l2721 0FD4                                              i1l2705 0D26  
                                            i1l2545 0DB9                                              u114_21 04CD  
                                            i1l3361 000F                                              i1l2491 0D10  
                                            i1l2475 0D14                                              i1l2483 0E5A  
                                            i1l2563 0D01                                              i1l2539 0D3D  
                                            i1l2731 0FEE                                              i1l2723 0FD4  
                                            i1l2715 0D7A                                              i1l3371 0030  
                                            i1l3363 0014                                              i1l2485 0E5D  
                                            i1l2557 0D18                                              i1l2549 0D1C  
                                            i1l2733 0FF3                                              i1l2741 0FFE  
                                            i1l2725 0FDB                                              i1l2709 0DAB  
                                            i1l2717 0D7F                                              i1l2565 0D81  
                                            i1l3365 001D                                              i1l3357 0006  
                                            i1l2487 0E60                                              i1l2479 0E51  
                                            i1l2559 0D04                                              i1l2735 0FF4  
                                            i1l2727 0FDF                                              i1l2751 0674  
                                            i1l2567 0D84                                              i1l3367 0022  
                                            i1l3359 000A                                              u115_20 04D6  
                                            i1l2489 0CFB                                              i1l2737 0FF7  
                                            i1l2729 0FEB                                              i1l2761 068E  
                                            i1l2753 067B                                              i1l2745 0663  
                                            i1l2569 0D86                                              u115_21 04D5  
                                            i1l2921 04C0                                              i1l3369 002B  
                                            i1l2739 0FFA                                              i1l2763 0694  
                                            i1l2755 0680                                              i1l2747 0665  
                                            i1l2771 0D50                                              i1l2931 0F16  
                                            i1l2691 0D88                                              i1l2923 04C6  
                                            i1l2915 04AD                                              i1l2757 0684  
                                            i1l2749 066D                                              i1l2765 0697  
                                            i1l2773 0D50                                              i1l2781 0D56  
                                            i1l2933 0F1B                                              i1l2925 04CE  
                                            i1l2917 04B0                                              i1l2767 069A  
                                            i1l2759 068A                                              i1l2775 0D54  
                                            i1l2783 0D5A                                              i1l2935 0F1E  
                                            i1l2695 0D5C                                              i1l2927 04D6  
                                            i1l2919 04B8                                              i1l2937 0F32  
                                            i1l2929 04DB                                              i1l2779 0D56  
                                            i1l2699 0D41                                              u142_20 000A  
                                            u142_21 0009                                              u143_20 000F  
                                            u143_21 000E                                              u128_20 0E1D  
                                            u144_20 0014                                              u128_21 0E1C  
                                            u144_21 0013                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u145_20 001D                                              u145_21 001C  
                                            u146_20 0022                                              u146_21 0021  
                                            u147_20 002B                                              u147_21 002A  
                                            u148_20 0030                                              u148_21 002F  
                                            _OSCCON 0099                              __end_of_KAPS_setRelPos 0FAA  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                           __end_of_I2C1_EVENT_IDLE 0D28                             __end_of_I2C1_EVENT_NACK 0D56  
                                KAPS_getStatus@data 0028                             __end_of_I2C1_EVENT_STOP 0DBB  
                             SSPA_getPOut@adc_value 0048                                           ??_SendMsg 0022  
                       __end_of_I2C1_InterruptClear 0CFB                                     ??_KAPS_StorePos 0031  
                                            ___lmul 0708                                           ??___aldiv 0074  
                                   ?_KAPS_getStatus 0070                                    __end_of_packLong 03D1  
                                _I2C1_RestartEnable 0D07                                           ?_I2C1_ISR 0070  
                                            _parser 005E                                   ?_EUSART_IsRxReady 0070  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 0DB3                                   ?_EUSART_IsTxReady 0070  
                                 ProcessMsg@payload 00C2                                          _ProcessMsg 0068  
                                      packLong@data 002C                                   ?_CLOCK_Initialize 0070  
                                ??_EUSART_IsRxReady 0074                                     ??_KAPS_getIndex 0025  
                                ??_EUSART_IsTxReady 0074                                  ??_CLOCK_Initialize 0074  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 0D81                                 ?_I2C1_RestartEnable 0070  
                                 ??_I2C1_WriteStart 0074             INT_SetInterruptHandler@InterruptHandler 0074  
           ADC_SetInterruptHandler@InterruptHandler 0074                                     ?_KAPS_setAbsPos 002D  
                              __end_of_KAPS_GoToIdx 0F84                                   _SYSTEM_Initialize 0E64  
                           __end_of__initialization 0064                                     ?_KAPS_setRelPos 0070  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                     ??_I2C1_IsNack 0070                                       ??_I2C1_IsBusy 0074  
                                ?_SYSTEM_Initialize 0070                                         SendMsg@data 0020  
                                getADCValue@channel 0024                                       ??_ADC2Celsius 003C  
                              ??_I2C1_RestartEnable 0070                                      __pcstackCOMMON 0070  
                                     __end_of_Parse 0260                                        __pidataBANK0 0DA4  
                                      __pidataBANK1 0EA1                                 ??_SYSTEM_Initialize 0076  
                        ??_I2C1_ErrorInterruptClear 0070                                     _I2C1_IsBusy$646 0074  
                                        ??_I2C1_ISR 0074                             _ADC_GetConversionResult 0D62  
                                    _OPTION_REGbits 0095                               __end_of_I2C1_EVENT_RX 069C  
                             __end_of_I2C1_EVENT_TX 1000                                             ??_Parse 0026  
                            ?_I2C1_InterruptsEnable 0070                                   _I2C1_EventHandler 04AD  
                         __end_of_SYSTEM_Initialize 0E77                                          __pbssBANK0 0052  
                                        __pbssBANK1 00B8                                __end_of_EUSART_Write 0D38  
                                ?_I2C1_EventHandler 0070                                   KAPS_setRelPos@reg 0028  
                             _I2C1_StatusFlagsClear 0D14                                    ?_I2C1_EVENT_IDLE 0070  
                                  ?_I2C1_EVENT_NACK 0070                                           ?_SendNack 0070  
                                  ?_I2C1_EVENT_STOP 0070                                           ?_SendSync 0070  
                               ??_I2C1_EventHandler 0072                                          __pmaintext 0F39  
                               __end_of_I2C1_IsAddr 0D8F                                 __end_of_I2C1_IsData 0D46  
                               __end_of_I2C1_IsNack 0D62                                             ?___lmul 0020  
                               __end_of_I2C1_IsBusy 0E51                                             _ADC2Amp 04F0  
                                           _ADC2dBm 05EB                                          __pintentry 0004  
                                   _I2C1_Initialize 0E8B                                _EUSART_AutoBaudQuery 0000  
                               __end_of_ADC2Celsius 041D                                             _ADC_ISR 0E14  
                                    ___lmul@product 0028                                         ?_ProcessMsg 004E  
                                KAPS_setAbsPos@data 0033                               __end_of_I2C1_NackSend 0D24  
                             __end_of_I2C1_BusReset 0D14                                     _EUSART_IsTxDone 0000  
                                   _EUSART_ErrorGet 0000                                           _I2C1_Read 0EF4  
                         __end_of_I2C1_EventHandler 04F0                              _I2C1_ErrorEventHandler 0F16  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                          __end_of_I2C1_EVENT_ERROR 0D5C                            __end_of_I2C1_EVENT_RESET 0D88  
                                         ?_packLong 0020                       __end_of_I2C1_CallbackRegister 0E14  
                                   KAPS_getPos@data 002F                               __end_of_I2C1_StopSend 0CFE  
                                        ??_SendNack 0076                                          ??_SendSync 0075  
                              _ADC_InterruptHandler 00CD                                             _SendMsg 06D3  
                           _ADC_SetInterruptHandler 0D68                                       ??_getADCValue 0022  
                                           ___aldiv 0260                                    KAPS_StorePos@idx 0039  
                                  KAPS_StorePos@reg 0038                                    KAPS_StorePos@pos 002D  
                         ??_ADC_GetConversionResult 0076                                             __ptext1 0E64  
                                           __ptext2 041D                                             __ptext3 0DD9  
                                           __ptext4 0D4B                                             __ptext5 0E8B  
                                           __ptext6 0D38                                             __ptext7 0E08  
                                           __ptext8 0EB9                                             __ptext9 0DFC  
                              I2C1_Write@dataLength 0023                                 _I2C1_RestartDisable 0D04  
                                  ___aldiv@dividend 0030                            ??_PIN_MANAGER_Initialize 0074  
                                        ?_I2C1_Read 0020                                       ?_I2C1_AckSend 0070  
                           _INT_SetInterruptHandler 0D4B                                     _i2c1_eventTable 080F  
                                           clrloop0 0D6F                                end_of_initialization 0064  
                                        ??_packLong 0024                              ?_I2C1_StatusFlagsClear 0070  
                                           init_ram 0D74                                             initloop 0D75  
                                       _I2C1_IsAddr 0D88                                         _I2C1_IsData 0D41  
                                       _I2C1_IsNack 0D5C                                         _I2C1_IsBusy 0E41  
                                  ??_KAPS_getStatus 0025                                   _EUSART_Initialize 0EB9  
                              ?_I2C1_RestartDisable 0070                                    I2C1_Read@address 0020  
                           __end_of_I2C1_Initialize 0EA1                        __end_of_ADC_IsConversionDone 0DA4  
                                       _ADC2Celsius 03D1                                  ?_EUSART_Initialize 0070  
                                 KAPS_getIndex@data 0028                                    ___aldiv@quotient 0036  
                                  _I2C1_DataReceive 0CFE                                     _I2C1_WriteStart 0D8F  
                               __end_of_getADCValue 06D3                                 ??_EUSART_Initialize 0076  
                                      _KAPS_GoToIdx 0F5E                                           _SSPDATPPS 0E21  
                                         _SSPCLKPPS 0E20                                    ??_KAPS_setAbsPos 0031  
                                    ??_I2C1_AckSend 0070                 __end_of_ADC_DefaultInterruptHandler 0CF5  
                       _ADC_DefaultInterruptHandler 0CF4                                 _ADC_StartConversion 0D0D  
                                  ??_KAPS_setRelPos 0025                                 _EUSART_Deinitialize 0000  
                                        _unpackLong 0468                                          _unpackWord 0DF0  
                         __end_of_EUSART_Initialize 0ED6                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 0076                               ??_I2C1_RestartDisable 0070  
                                    ProcessMsg@data 004E                                ?_ADC_StartConversion 0070  
                                      getADCValue@i 0027                        __end_of_INTERRUPT_Initialize 0DE4  
                                    _I2C1_ERROR_ISR 0D28                                      __end_of___lmul 073C  
                             __end_of_KAPS_StorePos 0570                                           Parse@data 0028  
                                     ?_SSPA_getPOut 0070                          __end_of_I2C1_ReceiveEnable 0D04  
                                      _EUSART_Write 0D34                                       ?_SSPA_getTemp 0070  
                           __end_of_i2c1_eventTable 0821                                      _ADC_Initialize 0E77  
                              KAPS_setRelPos@offset 0027                           ??_INT_SetInterruptHandler 0076  
                           ??_I2C1_InterruptsEnable 0074                                       ??_KAPS_getPos 002D  
                                          ADC2Amp@v 003A                                 start_initialization 0038  
                                     ?_SSPA_setMute 0074                                         ??_I2C1_Read 0075  
                                          ADC2dBm@v 003A                               __end_of_KAPS_getIndex 07FB  
                                      SendSync@data 0075                                       ??_EUSART_Read 0074  
                           _I2C1_EVENT_SEND_RD_ADDR 0DAB                             __end_of_I2C1_WriteStart 0D96  
                                  ?_I2C1_Initialize 0070                                   KAPS_getStatus@reg 0027  
                             ??_ADC_StartConversion 0074                             _I2C1_EVENT_SEND_WR_ADDR 0D7A  
                                       _getADCValue 069C                              __end_of_I2C1_ERROR_ISR 0D2C  
                        _EUSART_FramingErrorHandler 0076                                    _I2C1_IsRxBufFull 0D1C  
                                          ??___lmul 0074                                            ?_ADC2Amp 003A  
                                          ?_ADC2dBm 003A                              __end_of_ADC_Initialize 0E8B  
                                       __pdataBANK0 0066                                         __pdataBANK1 00A0  
                                    ??_SSPA_getPOut 0046                                      ??_SSPA_getTemp 0048  
                                          ?_ADC_ISR 0070                                     unpackLong@value 0020  
                                      ??_ProcessMsg 004F                             ?_I2C1_ErrorEventHandler 0070  
                                    ??_SSPA_setMute 0020                                         __pbssCOMMON 0076  
                                         ___latbits 0001                                       __pcstackBANK0 0020  
                              _ADC_IsConversionDone 0D9D                                         ?_unpackLong 0020  
                               __end_of_KAPS_getPos 05AE                                         ?_unpackWord 0020  
                         ?_I2C1_ErrorInterruptClear 0070                        __end_of_I2C1_DefaultCallback 0003  
                                 ?_I2C1_EVENT_ERROR 0070                                   ?_I2C1_EVENT_RESET 0070  
                               __end_of_EUSART_Read 0FD4                                  ??_I2C1_EVENT_ERROR 0070  
                                ??_I2C1_EVENT_RESET 0070                                           __pnvBANK1 00CD  
                                __end_of_ProcessMsg 01AC                                            ?_SendMsg 0020  
                              __end_of_I2C1_AckSend 0D1C                              _PIN_MANAGER_Initialize 041D  
                                   ?_I2C1_ERROR_ISR 0070                                   ADC2Celsius@result 0044  
                                    _I2C1_ReadStart 0D96                                   _ADC_SelectChannel 0DE4  
                                          ?___aldiv 002C                                     ?_ADC_Initialize 0070  
                                ?_ADC_SelectChannel 0070                                            _I2C1_ISR 0D2C  
                      ??_INTERRUPT_InterruptManager 0074                      __end_of_I2C1_ErrorEventHandler 0F39  
                                          _BAUD1CON 019F                                      KAPS_getPos@reg 0033  
                            _EUSART_TransmitDisable 0000                                    SSPA_getPOut@band 004A  
                                          _I2C_Host 07FB                                 ??_ADC_SelectChannel 0074  
                             ?_ADC_IsConversionDone 0070                                 I2C1_Read@dataLength 0023  
                     I2C1_EVENT_ERROR@retEventState 0070                             ??_I2C1_StatusFlagsClear 0070  
                          __end_of_I2C1_DataReceive 0D01                           ??_I2C1_EVENT_SEND_RD_ADDR 0070  
                                  _EUSART_IsRxReady 0D46                                _INTERRUPT_Initialize 0DD9  
                                   unpackWord@value 0020                                    _EUSART_IsTxReady 0E23  
                                   ___aldiv@divisor 002C                                    _CLOCK_Initialize 0DBB  
                                    _I2C1_StartSend 0D0A                                     ___aldiv@counter 0034  
                                      ?_I2C1_IsAddr 0070                                        ?_I2C1_IsData 0070  
                                          _LATCbits 010E                                        ?_I2C1_IsNack 0070  
                         ??_I2C1_EVENT_SEND_WR_ADDR 0071                                        ?_I2C1_IsBusy 0070  
                             _I2C1_CallbackRegister 0E08                                           clear_ram0 0D6E  
                                          _PIE1bits 0090                                            _PIE2bits 0091  
                                  ?_I2C1_WriteStart 0070                                   _eusartRxLastError 00BE  
                                        _I2C1_Close 0E51                              __end_of_I2C1_ReadStart 0D9D  
                         __end_of_ADC_SelectChannel 0DF0                                        ?_ADC2Celsius 003A  
                                          _PIR1bits 0010                                            _PIR2bits 0011  
                                        _I2C1_Write 0ED6                                    KAPS_getIndex@reg 0027  
                                    _I2C1_WriteRead 0000                                            _SSP1CON1 0215  
                                          _SSP1CON2 0216                                            _SSP1CON3 0217  
                                          _SSP1STAT 0214                                    KAPS_getPos@F9701 00B8  
                                  SSPA_getTemp@band 004D                                          _ADCON0bits 009D  
                          ADC_SelectChannel@channel 0075                                         _KAPS_getPos 0570  
                      I2C1_EVENT_NACK@retEventState 0070                                       _I2C1_EVENT_RX 0663  
                                     _I2C1_EVENT_TX 0FD4                                         _EUSART_Read 0FAA  
                                 ___lmul@multiplier 0020                               ?_INTERRUPT_Initialize 0070  
                            __end_of_I2C1_StartSend 0D0D                                __end_of_SSPA_getPOut 037A  
                              __end_of_SSPA_getTemp 05EB                                 _I2C1_InterruptClear 0CF8  
                                          _SendNack 0DC3                                            _SendSync 0E32  
                              __end_of_SSPA_setMute 0663                                     ?_I2C1_ReadStart 0070  
                          ?_ADC_GetConversionResult 0074                               _EUSART_IsTxReady$1324 0074  
                                    unpackLong@data 0024                                       _I2C1_Callback 00C0  
                                 KAPS_StorePos@data 0033                                _I2C1_DefaultCallback 0002  
                                   KAPS_GoToIdx@idx 0027                                     KAPS_GoToIdx@reg 0028  
                              ?_I2C1_InterruptClear 0070                                       _I2C1_NackSend 0D20  
                            ??_ADC_IsConversionDone 0074                                       _I2C1_BusReset 0D10  
                                 ??_I2C1_EVENT_IDLE 0070                                   ??_I2C1_EVENT_NACK 0070  
                                 ??_I2C1_EVENT_STOP 0070                       __end_of_I2C1_InterruptsEnable 0D3C  
                                    ?_I2C1_EVENT_RX 0070                                      ?_I2C1_EVENT_TX 0070  
                                  ADC2Celsius@value 0040                                       _I2C1_ErrorGet 0000  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 0DCE  
                                          __ptext11 0DBB                                            __ptext20 069C  
                                          __ptext12 0E77                                            __ptext21 0D0D  
                                          __ptext13 0D68                                            __ptext30 073C  
                                          __ptext22 0DE4                                            __ptext14 0068  
                                          __ptext31 079F                                            __ptext23 0D9D  
                                          __ptext15 0DF0                                            __ptext40 0ED6  
                                          __ptext32 0570                                            __ptext24 0D62  
                                          __ptext16 0628                                            __ptext41 0D8F  
                                          __ptext33 037A                                            __ptext25 05EB  
                                          __ptext17 05AE                                            __ptext50 0FAA  
                                          __ptext42 0D0A                                            __ptext34 07CD  
                                          __ptext26 04F0                                            __ptext18 03D1  
                                          __ptext51 0D30                                            __ptext43 0E41  
                                          __ptext35 0EF4                                            __ptext27 0708  
                                          __ptext19 02F0                                            __ptext60 0D28  
                                          __ptext52 0003                                            __ptext44 01AC  
                                          __ptext36 0D96                                            __ptext28 0260  
                                          __ptext61 0F16                                            __ptext53 0D46  
                                          __ptext45 0DC3                                            __ptext37 0530  
                                          __ptext29 0F84                                            __ptext70 0FD4  
                                          __ptext62 0D81                                            __ptext46 06D3  
                                          __ptext38 0468                                            __ptext71 0D07  
                                          __ptext63 0DB3                                            __ptext55 0D2C  
                                          __ptext47 0E32                                            __ptext39 0F5E  
                                          __ptext80 0E51                                            __ptext72 0D3C  
                                          __ptext64 0D56                                            __ptext56 04AD  
                                          __ptext48 0D34                                            __ptext81 0D14  
                                          __ptext73 0D04                                            __ptext65 0D50  
                                          __ptext57 0D5C                                            __ptext49 0E23  
                                          __ptext82 0CF8                                            __ptext74 0D01  
                                          __ptext66 0663                                            __ptext58 0D41  
                                          __ptext83 0CF5                                            __ptext75 0D20  
                                          __ptext67 0D7A                                            __ptext59 0D88  
                                          __ptext84 0D10                                            __ptext76 0D1C  
                                          __ptext68 0DAB                                            __ptext85 0002  
                                          __ptext77 0CFE                                            __ptext69 0D24  
                                          __ptext86 0E14                                            __ptext78 0D18  
                                          __ptext87 0CF4                                            __ptext79 0CFB  
                          __end_of_I2C1_IsRxBufFull 0D20                                        _SSP1CON1bits 0215  
                                      _SSP1CON2bits 0216                         __end_of_I2C1_RestartDisable 0D07  
                                _I2C1_ReceiveEnable 0D01                                     ?_I2C1_StartSend 0070  
                             _EUSART_TransmitEnable 0000                                            _packLong 037A  
                            ?_I2C1_CallbackRegister 0074                                      unpackWord@data 0022  
                               ?_I2C1_ReceiveEnable 0070                                    _parserDataBuffer 00C8  
                                       ?_I2C1_Close 0070                                       _I2C1_StopSend 0CFB  
                                      ?_getADCValue 0020                                          _RC1STAbits 019D  
                                       ?_I2C1_Write 0020                                            int$flags 007E  
                __end_of_INTERRUPT_InterruptManager 0036                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 0DD9               ??_EUSART_FramingErrorCallbackRegister 0076  
              ?_EUSART_FramingErrorCallbackRegister 0074                 _EUSART_FramingErrorCallbackRegister 0DCE  
                             ?_I2C1_DefaultCallback 0070                                            main@data 0051  
                                      _SSP1STATbits 0214                               ??_I2C1_InterruptClear 0070  
                  __end_of_I2C1_ErrorInterruptClear 0CF8                               SSPA_getTemp@adc_value 004A  
                                    ?_I2C1_NackSend 0070                                      ?_I2C1_BusReset 0070  
                              ??_I2C1_ReceiveEnable 0070                                      packLong@result 0028  
                                        _INTCONbits 000B                                        _I2C1_AckSend 0D18  
                              _INT_InterruptHandler 0078                              ??_INTERRUPT_Initialize 0076  
                                      ??_unpackLong 0025                          I2C1_EVENT_RX@retEventState 0071  
                          ?_ADC_SetInterruptHandler 0074                                        ??_unpackWord 0074  
                                          intlevel1 0000                         __end_of_ADC_StartConversion 0D10  
                                  ??_I2C1_ERROR_ISR 0074                                  I2C1_Read@retStatus 0075  
                           ?_PIN_MANAGER_Initialize 0070                          __end_of_I2C1_RestartEnable 0D0A  
        __end_of_EUSART_DefaultFramingErrorCallback 0004                ??_EUSART_DefaultFramingErrorCallback 0074  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 0003  
                   __end_of_ADC_GetConversionResult 0D68                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 0076                                       I2C1_Read@data 0022  
                          ?_INT_SetInterruptHandler 0074                            __end_of_EUSART_IsRxReady 0D4B  
                          __end_of_EUSART_IsTxReady 0E32                                  __end_of_unpackLong 04AD  
                          __end_of_CLOCK_Initialize 0DC3                                  __end_of_unpackWord 0DFC  
                                     __pstringtext1 076F                                       __pstringtext2 07FB  
                                     __pstringtext3 080F                                       ADC2Amp@result 0042  
                                   ??_I2C1_EVENT_RX 0070                                     ??_I2C1_EVENT_TX 0071  
                                      ___aldiv@sign 0035                                   _I2C1_DataTransmit 0D3C  
                                        _TX1STAbits 019E                                  ?_I2C1_DataTransmit 0070  
                               SSPA_getTemp@channel 004C                                        ADC2Amp@value 003E  
                                 ?_I2C1_DataReceive 0070                                  EUSART_Write@txData 0074  
                                     SendNack@error 0025                      __end_of_PIN_MANAGER_Initialize 0468  
                     __end_of_I2C1_StatusFlagsClear 0D18                                  ??_I2C1_DataReceive 0070  
                                      ADC2Celsius@v 003A                          I2C1_EVENT_TX@retEventState 0071  
                               ??_I2C1_DataTransmit 0070  
