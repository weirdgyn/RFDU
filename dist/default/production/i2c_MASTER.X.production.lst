

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 05 13:56:03 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	text87,local,class=CODE,merge=1,delta=2
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   109                           	dabs	1,0x7E,2
   110     0000                     
   111                           ; Generated 07/09/2023 GMT
   112                           ; 
   113                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F1618 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     0111                     	;# 
   202     0112                     	;# 
   203     0113                     	;# 
   204     0114                     	;# 
   205     0115                     	;# 
   206     0116                     	;# 
   207     0117                     	;# 
   208     0118                     	;# 
   209     0119                     	;# 
   210     011C                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     018E                     	;# 
   214     0191                     	;# 
   215     0191                     	;# 
   216     0192                     	;# 
   217     0193                     	;# 
   218     0193                     	;# 
   219     0194                     	;# 
   220     0195                     	;# 
   221     0196                     	;# 
   222     0197                     	;# 
   223     0199                     	;# 
   224     0199                     	;# 
   225     0199                     	;# 
   226     019A                     	;# 
   227     019A                     	;# 
   228     019A                     	;# 
   229     019B                     	;# 
   230     019B                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019B                     	;# 
   234     019C                     	;# 
   235     019C                     	;# 
   236     019C                     	;# 
   237     019D                     	;# 
   238     019D                     	;# 
   239     019D                     	;# 
   240     019E                     	;# 
   241     019E                     	;# 
   242     019E                     	;# 
   243     019F                     	;# 
   244     019F                     	;# 
   245     019F                     	;# 
   246     019F                     	;# 
   247     019F                     	;# 
   248     020C                     	;# 
   249     020D                     	;# 
   250     020E                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0215                     	;# 
   263     0216                     	;# 
   264     0216                     	;# 
   265     0217                     	;# 
   266     0217                     	;# 
   267     028C                     	;# 
   268     028D                     	;# 
   269     028E                     	;# 
   270     0291                     	;# 
   271     0291                     	;# 
   272     0292                     	;# 
   273     0293                     	;# 
   274     0294                     	;# 
   275     0298                     	;# 
   276     0298                     	;# 
   277     0299                     	;# 
   278     029A                     	;# 
   279     029B                     	;# 
   280     029E                     	;# 
   281     030C                     	;# 
   282     030D                     	;# 
   283     030E                     	;# 
   284     038C                     	;# 
   285     038D                     	;# 
   286     038E                     	;# 
   287     0391                     	;# 
   288     0392                     	;# 
   289     0393                     	;# 
   290     0394                     	;# 
   291     0395                     	;# 
   292     0396                     	;# 
   293     0397                     	;# 
   294     0398                     	;# 
   295     0399                     	;# 
   296     040E                     	;# 
   297     0413                     	;# 
   298     0413                     	;# 
   299     0414                     	;# 
   300     0414                     	;# 
   301     0415                     	;# 
   302     0416                     	;# 
   303     0417                     	;# 
   304     0418                     	;# 
   305     041A                     	;# 
   306     041A                     	;# 
   307     041B                     	;# 
   308     041B                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     041F                     	;# 
   313     0493                     	;# 
   314     0494                     	;# 
   315     0495                     	;# 
   316     0496                     	;# 
   317     049A                     	;# 
   318     049B                     	;# 
   319     049C                     	;# 
   320     049D                     	;# 
   321     058C                     	;# 
   322     058C                     	;# 
   323     058D                     	;# 
   324     058E                     	;# 
   325     058E                     	;# 
   326     058F                     	;# 
   327     0590                     	;# 
   328     0590                     	;# 
   329     0591                     	;# 
   330     0592                     	;# 
   331     0592                     	;# 
   332     0593                     	;# 
   333     0594                     	;# 
   334     0594                     	;# 
   335     0595                     	;# 
   336     0596                     	;# 
   337     0596                     	;# 
   338     0597                     	;# 
   339     0598                     	;# 
   340     0599                     	;# 
   341     059A                     	;# 
   342     059B                     	;# 
   343     059B                     	;# 
   344     059C                     	;# 
   345     059D                     	;# 
   346     060C                     	;# 
   347     060C                     	;# 
   348     060D                     	;# 
   349     060E                     	;# 
   350     060F                     	;# 
   351     060F                     	;# 
   352     0610                     	;# 
   353     0611                     	;# 
   354     0612                     	;# 
   355     0613                     	;# 
   356     0614                     	;# 
   357     0617                     	;# 
   358     0617                     	;# 
   359     0618                     	;# 
   360     0619                     	;# 
   361     061A                     	;# 
   362     061A                     	;# 
   363     061B                     	;# 
   364     061C                     	;# 
   365     0691                     	;# 
   366     0692                     	;# 
   367     0693                     	;# 
   368     0694                     	;# 
   369     0695                     	;# 
   370     0696                     	;# 
   371     0697                     	;# 
   372     0699                     	;# 
   373     069A                     	;# 
   374     0711                     	;# 
   375     0712                     	;# 
   376     0713                     	;# 
   377     0714                     	;# 
   378     0715                     	;# 
   379     0718                     	;# 
   380     0718                     	;# 
   381     0719                     	;# 
   382     071A                     	;# 
   383     071A                     	;# 
   384     071B                     	;# 
   385     071C                     	;# 
   386     071D                     	;# 
   387     0791                     	;# 
   388     0791                     	;# 
   389     0792                     	;# 
   390     0793                     	;# 
   391     0793                     	;# 
   392     0794                     	;# 
   393     0795                     	;# 
   394     0795                     	;# 
   395     0796                     	;# 
   396     0797                     	;# 
   397     0797                     	;# 
   398     0798                     	;# 
   399     0799                     	;# 
   400     079A                     	;# 
   401     080C                     	;# 
   402     080C                     	;# 
   403     080D                     	;# 
   404     080E                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0810                     	;# 
   409     0811                     	;# 
   410     0812                     	;# 
   411     0812                     	;# 
   412     0813                     	;# 
   413     0814                     	;# 
   414     0815                     	;# 
   415     0816                     	;# 
   416     0817                     	;# 
   417     0818                     	;# 
   418     0819                     	;# 
   419     081A                     	;# 
   420     081A                     	;# 
   421     081B                     	;# 
   422     081C                     	;# 
   423     081C                     	;# 
   424     081D                     	;# 
   425     088C                     	;# 
   426     088D                     	;# 
   427     088E                     	;# 
   428     088F                     	;# 
   429     088F                     	;# 
   430     0890                     	;# 
   431     0891                     	;# 
   432     0892                     	;# 
   433     0893                     	;# 
   434     0893                     	;# 
   435     0894                     	;# 
   436     0895                     	;# 
   437     0896                     	;# 
   438     0897                     	;# 
   439     0897                     	;# 
   440     0898                     	;# 
   441     0899                     	;# 
   442     0D8C                     	;# 
   443     0D8C                     	;# 
   444     0D8D                     	;# 
   445     0D8E                     	;# 
   446     0D8F                     	;# 
   447     0D8F                     	;# 
   448     0D90                     	;# 
   449     0D91                     	;# 
   450     0D92                     	;# 
   451     0D92                     	;# 
   452     0D93                     	;# 
   453     0D94                     	;# 
   454     0D95                     	;# 
   455     0D95                     	;# 
   456     0D96                     	;# 
   457     0D97                     	;# 
   458     0D98                     	;# 
   459     0D99                     	;# 
   460     0D9A                     	;# 
   461     0D9B                     	;# 
   462     0D9C                     	;# 
   463     0D9D                     	;# 
   464     0D9E                     	;# 
   465     0D9E                     	;# 
   466     0D9F                     	;# 
   467     0DA0                     	;# 
   468     0DA1                     	;# 
   469     0DA1                     	;# 
   470     0DA2                     	;# 
   471     0DA3                     	;# 
   472     0DA4                     	;# 
   473     0DA4                     	;# 
   474     0DA5                     	;# 
   475     0DA6                     	;# 
   476     0DA7                     	;# 
   477     0DA7                     	;# 
   478     0DA8                     	;# 
   479     0DA9                     	;# 
   480     0DAA                     	;# 
   481     0DAB                     	;# 
   482     0DAC                     	;# 
   483     0DAD                     	;# 
   484     0DAE                     	;# 
   485     0DAF                     	;# 
   486     0E0F                     	;# 
   487     0E10                     	;# 
   488     0E11                     	;# 
   489     0E12                     	;# 
   490     0E13                     	;# 
   491     0E14                     	;# 
   492     0E15                     	;# 
   493     0E16                     	;# 
   494     0E17                     	;# 
   495     0E17                     	;# 
   496     0E18                     	;# 
   497     0E18                     	;# 
   498     0E19                     	;# 
   499     0E1A                     	;# 
   500     0E1B                     	;# 
   501     0E1B                     	;# 
   502     0E1C                     	;# 
   503     0E1D                     	;# 
   504     0E1E                     	;# 
   505     0E1E                     	;# 
   506     0E1F                     	;# 
   507     0E20                     	;# 
   508     0E21                     	;# 
   509     0E22                     	;# 
   510     0E23                     	;# 
   511     0E24                     	;# 
   512     0E25                     	;# 
   513     0E26                     	;# 
   514     0E27                     	;# 
   515     0E28                     	;# 
   516     0E29                     	;# 
   517     0E2A                     	;# 
   518     0E2B                     	;# 
   519     0E2C                     	;# 
   520     0E2D                     	;# 
   521     0E2E                     	;# 
   522     0E90                     	;# 
   523     0E91                     	;# 
   524     0E92                     	;# 
   525     0E94                     	;# 
   526     0E95                     	;# 
   527     0E9C                     	;# 
   528     0E9D                     	;# 
   529     0E9E                     	;# 
   530     0E9F                     	;# 
   531     0EA0                     	;# 
   532     0EA1                     	;# 
   533     0EA2                     	;# 
   534     0EA3                     	;# 
   535     0EA4                     	;# 
   536     0EA5                     	;# 
   537     0EA6                     	;# 
   538     0EA7                     	;# 
   539     0F0F                     	;# 
   540     0F10                     	;# 
   541     0F11                     	;# 
   542     0F12                     	;# 
   543     0F13                     	;# 
   544     0F14                     	;# 
   545     0F15                     	;# 
   546     0F16                     	;# 
   547     0F17                     	;# 
   548     0F18                     	;# 
   549     0F19                     	;# 
   550     0F1A                     	;# 
   551     0F1B                     	;# 
   552     0F1C                     	;# 
   553     0F1D                     	;# 
   554     0F1E                     	;# 
   555     0F1F                     	;# 
   556     0F20                     	;# 
   557     0F21                     	;# 
   558     0F22                     	;# 
   559     0F23                     	;# 
   560     0FE4                     	;# 
   561     0FE5                     	;# 
   562     0FE6                     	;# 
   563     0FE7                     	;# 
   564     0FE8                     	;# 
   565     0FE9                     	;# 
   566     0FEA                     	;# 
   567     0FEB                     	;# 
   568     0FED                     	;# 
   569     0FEE                     	;# 
   570     0FEF                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000D                     	;# 
   585     000E                     	;# 
   586     0010                     	;# 
   587     0011                     	;# 
   588     0012                     	;# 
   589     0013                     	;# 
   590     0014                     	;# 
   591     0015                     	;# 
   592     0016                     	;# 
   593     0016                     	;# 
   594     0017                     	;# 
   595     0018                     	;# 
   596     0019                     	;# 
   597     001A                     	;# 
   598     001A                     	;# 
   599     001B                     	;# 
   600     001B                     	;# 
   601     001C                     	;# 
   602     001D                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     008E                     	;# 
   608     0090                     	;# 
   609     0091                     	;# 
   610     0092                     	;# 
   611     0093                     	;# 
   612     0094                     	;# 
   613     0095                     	;# 
   614     0096                     	;# 
   615     0098                     	;# 
   616     0099                     	;# 
   617     009A                     	;# 
   618     009B                     	;# 
   619     009B                     	;# 
   620     009C                     	;# 
   621     009D                     	;# 
   622     009E                     	;# 
   623     009F                     	;# 
   624     010C                     	;# 
   625     010D                     	;# 
   626     010E                     	;# 
   627     0111                     	;# 
   628     0112                     	;# 
   629     0113                     	;# 
   630     0114                     	;# 
   631     0115                     	;# 
   632     0116                     	;# 
   633     0117                     	;# 
   634     0118                     	;# 
   635     0119                     	;# 
   636     011C                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     018E                     	;# 
   640     0191                     	;# 
   641     0191                     	;# 
   642     0192                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0197                     	;# 
   649     0199                     	;# 
   650     0199                     	;# 
   651     0199                     	;# 
   652     019A                     	;# 
   653     019A                     	;# 
   654     019A                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019B                     	;# 
   659     019B                     	;# 
   660     019C                     	;# 
   661     019C                     	;# 
   662     019C                     	;# 
   663     019D                     	;# 
   664     019D                     	;# 
   665     019D                     	;# 
   666     019E                     	;# 
   667     019E                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     019F                     	;# 
   671     019F                     	;# 
   672     019F                     	;# 
   673     019F                     	;# 
   674     020C                     	;# 
   675     020D                     	;# 
   676     020E                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0216                     	;# 
   690     0216                     	;# 
   691     0217                     	;# 
   692     0217                     	;# 
   693     028C                     	;# 
   694     028D                     	;# 
   695     028E                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0298                     	;# 
   702     0298                     	;# 
   703     0299                     	;# 
   704     029A                     	;# 
   705     029B                     	;# 
   706     029E                     	;# 
   707     030C                     	;# 
   708     030D                     	;# 
   709     030E                     	;# 
   710     038C                     	;# 
   711     038D                     	;# 
   712     038E                     	;# 
   713     0391                     	;# 
   714     0392                     	;# 
   715     0393                     	;# 
   716     0394                     	;# 
   717     0395                     	;# 
   718     0396                     	;# 
   719     0397                     	;# 
   720     0398                     	;# 
   721     0399                     	;# 
   722     040E                     	;# 
   723     0413                     	;# 
   724     0413                     	;# 
   725     0414                     	;# 
   726     0414                     	;# 
   727     0415                     	;# 
   728     0416                     	;# 
   729     0417                     	;# 
   730     0418                     	;# 
   731     041A                     	;# 
   732     041A                     	;# 
   733     041B                     	;# 
   734     041B                     	;# 
   735     041C                     	;# 
   736     041D                     	;# 
   737     041E                     	;# 
   738     041F                     	;# 
   739     0493                     	;# 
   740     0494                     	;# 
   741     0495                     	;# 
   742     0496                     	;# 
   743     049A                     	;# 
   744     049B                     	;# 
   745     049C                     	;# 
   746     049D                     	;# 
   747     058C                     	;# 
   748     058C                     	;# 
   749     058D                     	;# 
   750     058E                     	;# 
   751     058E                     	;# 
   752     058F                     	;# 
   753     0590                     	;# 
   754     0590                     	;# 
   755     0591                     	;# 
   756     0592                     	;# 
   757     0592                     	;# 
   758     0593                     	;# 
   759     0594                     	;# 
   760     0594                     	;# 
   761     0595                     	;# 
   762     0596                     	;# 
   763     0596                     	;# 
   764     0597                     	;# 
   765     0598                     	;# 
   766     0599                     	;# 
   767     059A                     	;# 
   768     059B                     	;# 
   769     059B                     	;# 
   770     059C                     	;# 
   771     059D                     	;# 
   772     060C                     	;# 
   773     060C                     	;# 
   774     060D                     	;# 
   775     060E                     	;# 
   776     060F                     	;# 
   777     060F                     	;# 
   778     0610                     	;# 
   779     0611                     	;# 
   780     0612                     	;# 
   781     0613                     	;# 
   782     0614                     	;# 
   783     0617                     	;# 
   784     0617                     	;# 
   785     0618                     	;# 
   786     0619                     	;# 
   787     061A                     	;# 
   788     061A                     	;# 
   789     061B                     	;# 
   790     061C                     	;# 
   791     0691                     	;# 
   792     0692                     	;# 
   793     0693                     	;# 
   794     0694                     	;# 
   795     0695                     	;# 
   796     0696                     	;# 
   797     0697                     	;# 
   798     0699                     	;# 
   799     069A                     	;# 
   800     0711                     	;# 
   801     0712                     	;# 
   802     0713                     	;# 
   803     0714                     	;# 
   804     0715                     	;# 
   805     0718                     	;# 
   806     0718                     	;# 
   807     0719                     	;# 
   808     071A                     	;# 
   809     071A                     	;# 
   810     071B                     	;# 
   811     071C                     	;# 
   812     071D                     	;# 
   813     0791                     	;# 
   814     0791                     	;# 
   815     0792                     	;# 
   816     0793                     	;# 
   817     0793                     	;# 
   818     0794                     	;# 
   819     0795                     	;# 
   820     0795                     	;# 
   821     0796                     	;# 
   822     0797                     	;# 
   823     0797                     	;# 
   824     0798                     	;# 
   825     0799                     	;# 
   826     079A                     	;# 
   827     080C                     	;# 
   828     080C                     	;# 
   829     080D                     	;# 
   830     080E                     	;# 
   831     080E                     	;# 
   832     080F                     	;# 
   833     0810                     	;# 
   834     0810                     	;# 
   835     0811                     	;# 
   836     0812                     	;# 
   837     0812                     	;# 
   838     0813                     	;# 
   839     0814                     	;# 
   840     0815                     	;# 
   841     0816                     	;# 
   842     0817                     	;# 
   843     0818                     	;# 
   844     0819                     	;# 
   845     081A                     	;# 
   846     081A                     	;# 
   847     081B                     	;# 
   848     081C                     	;# 
   849     081C                     	;# 
   850     081D                     	;# 
   851     088C                     	;# 
   852     088D                     	;# 
   853     088E                     	;# 
   854     088F                     	;# 
   855     088F                     	;# 
   856     0890                     	;# 
   857     0891                     	;# 
   858     0892                     	;# 
   859     0893                     	;# 
   860     0893                     	;# 
   861     0894                     	;# 
   862     0895                     	;# 
   863     0896                     	;# 
   864     0897                     	;# 
   865     0897                     	;# 
   866     0898                     	;# 
   867     0899                     	;# 
   868     0D8C                     	;# 
   869     0D8C                     	;# 
   870     0D8D                     	;# 
   871     0D8E                     	;# 
   872     0D8F                     	;# 
   873     0D8F                     	;# 
   874     0D90                     	;# 
   875     0D91                     	;# 
   876     0D92                     	;# 
   877     0D92                     	;# 
   878     0D93                     	;# 
   879     0D94                     	;# 
   880     0D95                     	;# 
   881     0D95                     	;# 
   882     0D96                     	;# 
   883     0D97                     	;# 
   884     0D98                     	;# 
   885     0D99                     	;# 
   886     0D9A                     	;# 
   887     0D9B                     	;# 
   888     0D9C                     	;# 
   889     0D9D                     	;# 
   890     0D9E                     	;# 
   891     0D9E                     	;# 
   892     0D9F                     	;# 
   893     0DA0                     	;# 
   894     0DA1                     	;# 
   895     0DA1                     	;# 
   896     0DA2                     	;# 
   897     0DA3                     	;# 
   898     0DA4                     	;# 
   899     0DA4                     	;# 
   900     0DA5                     	;# 
   901     0DA6                     	;# 
   902     0DA7                     	;# 
   903     0DA7                     	;# 
   904     0DA8                     	;# 
   905     0DA9                     	;# 
   906     0DAA                     	;# 
   907     0DAB                     	;# 
   908     0DAC                     	;# 
   909     0DAD                     	;# 
   910     0DAE                     	;# 
   911     0DAF                     	;# 
   912     0E0F                     	;# 
   913     0E10                     	;# 
   914     0E11                     	;# 
   915     0E12                     	;# 
   916     0E13                     	;# 
   917     0E14                     	;# 
   918     0E15                     	;# 
   919     0E16                     	;# 
   920     0E17                     	;# 
   921     0E17                     	;# 
   922     0E18                     	;# 
   923     0E18                     	;# 
   924     0E19                     	;# 
   925     0E1A                     	;# 
   926     0E1B                     	;# 
   927     0E1B                     	;# 
   928     0E1C                     	;# 
   929     0E1D                     	;# 
   930     0E1E                     	;# 
   931     0E1E                     	;# 
   932     0E1F                     	;# 
   933     0E20                     	;# 
   934     0E21                     	;# 
   935     0E22                     	;# 
   936     0E23                     	;# 
   937     0E24                     	;# 
   938     0E25                     	;# 
   939     0E26                     	;# 
   940     0E27                     	;# 
   941     0E28                     	;# 
   942     0E29                     	;# 
   943     0E2A                     	;# 
   944     0E2B                     	;# 
   945     0E2C                     	;# 
   946     0E2D                     	;# 
   947     0E2E                     	;# 
   948     0E90                     	;# 
   949     0E91                     	;# 
   950     0E92                     	;# 
   951     0E94                     	;# 
   952     0E95                     	;# 
   953     0E9C                     	;# 
   954     0E9D                     	;# 
   955     0E9E                     	;# 
   956     0E9F                     	;# 
   957     0EA0                     	;# 
   958     0EA1                     	;# 
   959     0EA2                     	;# 
   960     0EA3                     	;# 
   961     0EA4                     	;# 
   962     0EA5                     	;# 
   963     0EA6                     	;# 
   964     0EA7                     	;# 
   965     0F0F                     	;# 
   966     0F10                     	;# 
   967     0F11                     	;# 
   968     0F12                     	;# 
   969     0F13                     	;# 
   970     0F14                     	;# 
   971     0F15                     	;# 
   972     0F16                     	;# 
   973     0F17                     	;# 
   974     0F18                     	;# 
   975     0F19                     	;# 
   976     0F1A                     	;# 
   977     0F1B                     	;# 
   978     0F1C                     	;# 
   979     0F1D                     	;# 
   980     0F1E                     	;# 
   981     0F1F                     	;# 
   982     0F20                     	;# 
   983     0F21                     	;# 
   984     0F22                     	;# 
   985     0F23                     	;# 
   986     0FE4                     	;# 
   987     0FE5                     	;# 
   988     0FE6                     	;# 
   989     0FE7                     	;# 
   990     0FE8                     	;# 
   991     0FE9                     	;# 
   992     0FEA                     	;# 
   993     0FEB                     	;# 
   994     0FED                     	;# 
   995     0FEE                     	;# 
   996     0FEF                     	;# 
   997     0000                     	;# 
   998     0001                     	;# 
   999     0002                     	;# 
  1000     0003                     	;# 
  1001     0004                     	;# 
  1002     0005                     	;# 
  1003     0006                     	;# 
  1004     0007                     	;# 
  1005     0008                     	;# 
  1006     0009                     	;# 
  1007     000A                     	;# 
  1008     000B                     	;# 
  1009     000C                     	;# 
  1010     000D                     	;# 
  1011     000E                     	;# 
  1012     0010                     	;# 
  1013     0011                     	;# 
  1014     0012                     	;# 
  1015     0013                     	;# 
  1016     0014                     	;# 
  1017     0015                     	;# 
  1018     0016                     	;# 
  1019     0016                     	;# 
  1020     0017                     	;# 
  1021     0018                     	;# 
  1022     0019                     	;# 
  1023     001A                     	;# 
  1024     001A                     	;# 
  1025     001B                     	;# 
  1026     001B                     	;# 
  1027     001C                     	;# 
  1028     001D                     	;# 
  1029     001E                     	;# 
  1030     001F                     	;# 
  1031     008C                     	;# 
  1032     008D                     	;# 
  1033     008E                     	;# 
  1034     0090                     	;# 
  1035     0091                     	;# 
  1036     0092                     	;# 
  1037     0093                     	;# 
  1038     0094                     	;# 
  1039     0095                     	;# 
  1040     0096                     	;# 
  1041     0098                     	;# 
  1042     0099                     	;# 
  1043     009A                     	;# 
  1044     009B                     	;# 
  1045     009B                     	;# 
  1046     009C                     	;# 
  1047     009D                     	;# 
  1048     009E                     	;# 
  1049     009F                     	;# 
  1050     010C                     	;# 
  1051     010D                     	;# 
  1052     010E                     	;# 
  1053     0111                     	;# 
  1054     0112                     	;# 
  1055     0113                     	;# 
  1056     0114                     	;# 
  1057     0115                     	;# 
  1058     0116                     	;# 
  1059     0117                     	;# 
  1060     0118                     	;# 
  1061     0119                     	;# 
  1062     011C                     	;# 
  1063     018C                     	;# 
  1064     018D                     	;# 
  1065     018E                     	;# 
  1066     0191                     	;# 
  1067     0191                     	;# 
  1068     0192                     	;# 
  1069     0193                     	;# 
  1070     0193                     	;# 
  1071     0194                     	;# 
  1072     0195                     	;# 
  1073     0196                     	;# 
  1074     0197                     	;# 
  1075     0199                     	;# 
  1076     0199                     	;# 
  1077     0199                     	;# 
  1078     019A                     	;# 
  1079     019A                     	;# 
  1080     019A                     	;# 
  1081     019B                     	;# 
  1082     019B                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019B                     	;# 
  1086     019C                     	;# 
  1087     019C                     	;# 
  1088     019C                     	;# 
  1089     019D                     	;# 
  1090     019D                     	;# 
  1091     019D                     	;# 
  1092     019E                     	;# 
  1093     019E                     	;# 
  1094     019E                     	;# 
  1095     019F                     	;# 
  1096     019F                     	;# 
  1097     019F                     	;# 
  1098     019F                     	;# 
  1099     019F                     	;# 
  1100     020C                     	;# 
  1101     020D                     	;# 
  1102     020E                     	;# 
  1103     0211                     	;# 
  1104     0211                     	;# 
  1105     0212                     	;# 
  1106     0212                     	;# 
  1107     0213                     	;# 
  1108     0213                     	;# 
  1109     0214                     	;# 
  1110     0214                     	;# 
  1111     0215                     	;# 
  1112     0215                     	;# 
  1113     0215                     	;# 
  1114     0215                     	;# 
  1115     0216                     	;# 
  1116     0216                     	;# 
  1117     0217                     	;# 
  1118     0217                     	;# 
  1119     028C                     	;# 
  1120     028D                     	;# 
  1121     028E                     	;# 
  1122     0291                     	;# 
  1123     0291                     	;# 
  1124     0292                     	;# 
  1125     0293                     	;# 
  1126     0294                     	;# 
  1127     0298                     	;# 
  1128     0298                     	;# 
  1129     0299                     	;# 
  1130     029A                     	;# 
  1131     029B                     	;# 
  1132     029E                     	;# 
  1133     030C                     	;# 
  1134     030D                     	;# 
  1135     030E                     	;# 
  1136     038C                     	;# 
  1137     038D                     	;# 
  1138     038E                     	;# 
  1139     0391                     	;# 
  1140     0392                     	;# 
  1141     0393                     	;# 
  1142     0394                     	;# 
  1143     0395                     	;# 
  1144     0396                     	;# 
  1145     0397                     	;# 
  1146     0398                     	;# 
  1147     0399                     	;# 
  1148     040E                     	;# 
  1149     0413                     	;# 
  1150     0413                     	;# 
  1151     0414                     	;# 
  1152     0414                     	;# 
  1153     0415                     	;# 
  1154     0416                     	;# 
  1155     0417                     	;# 
  1156     0418                     	;# 
  1157     041A                     	;# 
  1158     041A                     	;# 
  1159     041B                     	;# 
  1160     041B                     	;# 
  1161     041C                     	;# 
  1162     041D                     	;# 
  1163     041E                     	;# 
  1164     041F                     	;# 
  1165     0493                     	;# 
  1166     0494                     	;# 
  1167     0495                     	;# 
  1168     0496                     	;# 
  1169     049A                     	;# 
  1170     049B                     	;# 
  1171     049C                     	;# 
  1172     049D                     	;# 
  1173     058C                     	;# 
  1174     058C                     	;# 
  1175     058D                     	;# 
  1176     058E                     	;# 
  1177     058E                     	;# 
  1178     058F                     	;# 
  1179     0590                     	;# 
  1180     0590                     	;# 
  1181     0591                     	;# 
  1182     0592                     	;# 
  1183     0592                     	;# 
  1184     0593                     	;# 
  1185     0594                     	;# 
  1186     0594                     	;# 
  1187     0595                     	;# 
  1188     0596                     	;# 
  1189     0596                     	;# 
  1190     0597                     	;# 
  1191     0598                     	;# 
  1192     0599                     	;# 
  1193     059A                     	;# 
  1194     059B                     	;# 
  1195     059B                     	;# 
  1196     059C                     	;# 
  1197     059D                     	;# 
  1198     060C                     	;# 
  1199     060C                     	;# 
  1200     060D                     	;# 
  1201     060E                     	;# 
  1202     060F                     	;# 
  1203     060F                     	;# 
  1204     0610                     	;# 
  1205     0611                     	;# 
  1206     0612                     	;# 
  1207     0613                     	;# 
  1208     0614                     	;# 
  1209     0617                     	;# 
  1210     0617                     	;# 
  1211     0618                     	;# 
  1212     0619                     	;# 
  1213     061A                     	;# 
  1214     061A                     	;# 
  1215     061B                     	;# 
  1216     061C                     	;# 
  1217     0691                     	;# 
  1218     0692                     	;# 
  1219     0693                     	;# 
  1220     0694                     	;# 
  1221     0695                     	;# 
  1222     0696                     	;# 
  1223     0697                     	;# 
  1224     0699                     	;# 
  1225     069A                     	;# 
  1226     0711                     	;# 
  1227     0712                     	;# 
  1228     0713                     	;# 
  1229     0714                     	;# 
  1230     0715                     	;# 
  1231     0718                     	;# 
  1232     0718                     	;# 
  1233     0719                     	;# 
  1234     071A                     	;# 
  1235     071A                     	;# 
  1236     071B                     	;# 
  1237     071C                     	;# 
  1238     071D                     	;# 
  1239     0791                     	;# 
  1240     0791                     	;# 
  1241     0792                     	;# 
  1242     0793                     	;# 
  1243     0793                     	;# 
  1244     0794                     	;# 
  1245     0795                     	;# 
  1246     0795                     	;# 
  1247     0796                     	;# 
  1248     0797                     	;# 
  1249     0797                     	;# 
  1250     0798                     	;# 
  1251     0799                     	;# 
  1252     079A                     	;# 
  1253     080C                     	;# 
  1254     080C                     	;# 
  1255     080D                     	;# 
  1256     080E                     	;# 
  1257     080E                     	;# 
  1258     080F                     	;# 
  1259     0810                     	;# 
  1260     0810                     	;# 
  1261     0811                     	;# 
  1262     0812                     	;# 
  1263     0812                     	;# 
  1264     0813                     	;# 
  1265     0814                     	;# 
  1266     0815                     	;# 
  1267     0816                     	;# 
  1268     0817                     	;# 
  1269     0818                     	;# 
  1270     0819                     	;# 
  1271     081A                     	;# 
  1272     081A                     	;# 
  1273     081B                     	;# 
  1274     081C                     	;# 
  1275     081C                     	;# 
  1276     081D                     	;# 
  1277     088C                     	;# 
  1278     088D                     	;# 
  1279     088E                     	;# 
  1280     088F                     	;# 
  1281     088F                     	;# 
  1282     0890                     	;# 
  1283     0891                     	;# 
  1284     0892                     	;# 
  1285     0893                     	;# 
  1286     0893                     	;# 
  1287     0894                     	;# 
  1288     0895                     	;# 
  1289     0896                     	;# 
  1290     0897                     	;# 
  1291     0897                     	;# 
  1292     0898                     	;# 
  1293     0899                     	;# 
  1294     0D8C                     	;# 
  1295     0D8C                     	;# 
  1296     0D8D                     	;# 
  1297     0D8E                     	;# 
  1298     0D8F                     	;# 
  1299     0D8F                     	;# 
  1300     0D90                     	;# 
  1301     0D91                     	;# 
  1302     0D92                     	;# 
  1303     0D92                     	;# 
  1304     0D93                     	;# 
  1305     0D94                     	;# 
  1306     0D95                     	;# 
  1307     0D95                     	;# 
  1308     0D96                     	;# 
  1309     0D97                     	;# 
  1310     0D98                     	;# 
  1311     0D99                     	;# 
  1312     0D9A                     	;# 
  1313     0D9B                     	;# 
  1314     0D9C                     	;# 
  1315     0D9D                     	;# 
  1316     0D9E                     	;# 
  1317     0D9E                     	;# 
  1318     0D9F                     	;# 
  1319     0DA0                     	;# 
  1320     0DA1                     	;# 
  1321     0DA1                     	;# 
  1322     0DA2                     	;# 
  1323     0DA3                     	;# 
  1324     0DA4                     	;# 
  1325     0DA4                     	;# 
  1326     0DA5                     	;# 
  1327     0DA6                     	;# 
  1328     0DA7                     	;# 
  1329     0DA7                     	;# 
  1330     0DA8                     	;# 
  1331     0DA9                     	;# 
  1332     0DAA                     	;# 
  1333     0DAB                     	;# 
  1334     0DAC                     	;# 
  1335     0DAD                     	;# 
  1336     0DAE                     	;# 
  1337     0DAF                     	;# 
  1338     0E0F                     	;# 
  1339     0E10                     	;# 
  1340     0E11                     	;# 
  1341     0E12                     	;# 
  1342     0E13                     	;# 
  1343     0E14                     	;# 
  1344     0E15                     	;# 
  1345     0E16                     	;# 
  1346     0E17                     	;# 
  1347     0E17                     	;# 
  1348     0E18                     	;# 
  1349     0E18                     	;# 
  1350     0E19                     	;# 
  1351     0E1A                     	;# 
  1352     0E1B                     	;# 
  1353     0E1B                     	;# 
  1354     0E1C                     	;# 
  1355     0E1D                     	;# 
  1356     0E1E                     	;# 
  1357     0E1E                     	;# 
  1358     0E1F                     	;# 
  1359     0E20                     	;# 
  1360     0E21                     	;# 
  1361     0E22                     	;# 
  1362     0E23                     	;# 
  1363     0E24                     	;# 
  1364     0E25                     	;# 
  1365     0E26                     	;# 
  1366     0E27                     	;# 
  1367     0E28                     	;# 
  1368     0E29                     	;# 
  1369     0E2A                     	;# 
  1370     0E2B                     	;# 
  1371     0E2C                     	;# 
  1372     0E2D                     	;# 
  1373     0E2E                     	;# 
  1374     0E90                     	;# 
  1375     0E91                     	;# 
  1376     0E92                     	;# 
  1377     0E94                     	;# 
  1378     0E95                     	;# 
  1379     0E9C                     	;# 
  1380     0E9D                     	;# 
  1381     0E9E                     	;# 
  1382     0E9F                     	;# 
  1383     0EA0                     	;# 
  1384     0EA1                     	;# 
  1385     0EA2                     	;# 
  1386     0EA3                     	;# 
  1387     0EA4                     	;# 
  1388     0EA5                     	;# 
  1389     0EA6                     	;# 
  1390     0EA7                     	;# 
  1391     0F0F                     	;# 
  1392     0F10                     	;# 
  1393     0F11                     	;# 
  1394     0F12                     	;# 
  1395     0F13                     	;# 
  1396     0F14                     	;# 
  1397     0F15                     	;# 
  1398     0F16                     	;# 
  1399     0F17                     	;# 
  1400     0F18                     	;# 
  1401     0F19                     	;# 
  1402     0F1A                     	;# 
  1403     0F1B                     	;# 
  1404     0F1C                     	;# 
  1405     0F1D                     	;# 
  1406     0F1E                     	;# 
  1407     0F1F                     	;# 
  1408     0F20                     	;# 
  1409     0F21                     	;# 
  1410     0F22                     	;# 
  1411     0F23                     	;# 
  1412     0FE4                     	;# 
  1413     0FE5                     	;# 
  1414     0FE6                     	;# 
  1415     0FE7                     	;# 
  1416     0FE8                     	;# 
  1417     0FE9                     	;# 
  1418     0FEA                     	;# 
  1419     0FEB                     	;# 
  1420     0FED                     	;# 
  1421     0FEE                     	;# 
  1422     0FEF                     	;# 
  1423     0000                     	;# 
  1424     0001                     	;# 
  1425     0002                     	;# 
  1426     0003                     	;# 
  1427     0004                     	;# 
  1428     0005                     	;# 
  1429     0006                     	;# 
  1430     0007                     	;# 
  1431     0008                     	;# 
  1432     0009                     	;# 
  1433     000A                     	;# 
  1434     000B                     	;# 
  1435     000C                     	;# 
  1436     000D                     	;# 
  1437     000E                     	;# 
  1438     0010                     	;# 
  1439     0011                     	;# 
  1440     0012                     	;# 
  1441     0013                     	;# 
  1442     0014                     	;# 
  1443     0015                     	;# 
  1444     0016                     	;# 
  1445     0016                     	;# 
  1446     0017                     	;# 
  1447     0018                     	;# 
  1448     0019                     	;# 
  1449     001A                     	;# 
  1450     001A                     	;# 
  1451     001B                     	;# 
  1452     001B                     	;# 
  1453     001C                     	;# 
  1454     001D                     	;# 
  1455     001E                     	;# 
  1456     001F                     	;# 
  1457     008C                     	;# 
  1458     008D                     	;# 
  1459     008E                     	;# 
  1460     0090                     	;# 
  1461     0091                     	;# 
  1462     0092                     	;# 
  1463     0093                     	;# 
  1464     0094                     	;# 
  1465     0095                     	;# 
  1466     0096                     	;# 
  1467     0098                     	;# 
  1468     0099                     	;# 
  1469     009A                     	;# 
  1470     009B                     	;# 
  1471     009B                     	;# 
  1472     009C                     	;# 
  1473     009D                     	;# 
  1474     009E                     	;# 
  1475     009F                     	;# 
  1476     010C                     	;# 
  1477     010D                     	;# 
  1478     010E                     	;# 
  1479     0111                     	;# 
  1480     0112                     	;# 
  1481     0113                     	;# 
  1482     0114                     	;# 
  1483     0115                     	;# 
  1484     0116                     	;# 
  1485     0117                     	;# 
  1486     0118                     	;# 
  1487     0119                     	;# 
  1488     011C                     	;# 
  1489     018C                     	;# 
  1490     018D                     	;# 
  1491     018E                     	;# 
  1492     0191                     	;# 
  1493     0191                     	;# 
  1494     0192                     	;# 
  1495     0193                     	;# 
  1496     0193                     	;# 
  1497     0194                     	;# 
  1498     0195                     	;# 
  1499     0196                     	;# 
  1500     0197                     	;# 
  1501     0199                     	;# 
  1502     0199                     	;# 
  1503     0199                     	;# 
  1504     019A                     	;# 
  1505     019A                     	;# 
  1506     019A                     	;# 
  1507     019B                     	;# 
  1508     019B                     	;# 
  1509     019B                     	;# 
  1510     019B                     	;# 
  1511     019B                     	;# 
  1512     019C                     	;# 
  1513     019C                     	;# 
  1514     019C                     	;# 
  1515     019D                     	;# 
  1516     019D                     	;# 
  1517     019D                     	;# 
  1518     019E                     	;# 
  1519     019E                     	;# 
  1520     019E                     	;# 
  1521     019F                     	;# 
  1522     019F                     	;# 
  1523     019F                     	;# 
  1524     019F                     	;# 
  1525     019F                     	;# 
  1526     020C                     	;# 
  1527     020D                     	;# 
  1528     020E                     	;# 
  1529     0211                     	;# 
  1530     0211                     	;# 
  1531     0212                     	;# 
  1532     0212                     	;# 
  1533     0213                     	;# 
  1534     0213                     	;# 
  1535     0214                     	;# 
  1536     0214                     	;# 
  1537     0215                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0215                     	;# 
  1541     0216                     	;# 
  1542     0216                     	;# 
  1543     0217                     	;# 
  1544     0217                     	;# 
  1545     028C                     	;# 
  1546     028D                     	;# 
  1547     028E                     	;# 
  1548     0291                     	;# 
  1549     0291                     	;# 
  1550     0292                     	;# 
  1551     0293                     	;# 
  1552     0294                     	;# 
  1553     0298                     	;# 
  1554     0298                     	;# 
  1555     0299                     	;# 
  1556     029A                     	;# 
  1557     029B                     	;# 
  1558     029E                     	;# 
  1559     030C                     	;# 
  1560     030D                     	;# 
  1561     030E                     	;# 
  1562     038C                     	;# 
  1563     038D                     	;# 
  1564     038E                     	;# 
  1565     0391                     	;# 
  1566     0392                     	;# 
  1567     0393                     	;# 
  1568     0394                     	;# 
  1569     0395                     	;# 
  1570     0396                     	;# 
  1571     0397                     	;# 
  1572     0398                     	;# 
  1573     0399                     	;# 
  1574     040E                     	;# 
  1575     0413                     	;# 
  1576     0413                     	;# 
  1577     0414                     	;# 
  1578     0414                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     0418                     	;# 
  1583     041A                     	;# 
  1584     041A                     	;# 
  1585     041B                     	;# 
  1586     041B                     	;# 
  1587     041C                     	;# 
  1588     041D                     	;# 
  1589     041E                     	;# 
  1590     041F                     	;# 
  1591     0493                     	;# 
  1592     0494                     	;# 
  1593     0495                     	;# 
  1594     0496                     	;# 
  1595     049A                     	;# 
  1596     049B                     	;# 
  1597     049C                     	;# 
  1598     049D                     	;# 
  1599     058C                     	;# 
  1600     058C                     	;# 
  1601     058D                     	;# 
  1602     058E                     	;# 
  1603     058E                     	;# 
  1604     058F                     	;# 
  1605     0590                     	;# 
  1606     0590                     	;# 
  1607     0591                     	;# 
  1608     0592                     	;# 
  1609     0592                     	;# 
  1610     0593                     	;# 
  1611     0594                     	;# 
  1612     0594                     	;# 
  1613     0595                     	;# 
  1614     0596                     	;# 
  1615     0596                     	;# 
  1616     0597                     	;# 
  1617     0598                     	;# 
  1618     0599                     	;# 
  1619     059A                     	;# 
  1620     059B                     	;# 
  1621     059B                     	;# 
  1622     059C                     	;# 
  1623     059D                     	;# 
  1624     060C                     	;# 
  1625     060C                     	;# 
  1626     060D                     	;# 
  1627     060E                     	;# 
  1628     060F                     	;# 
  1629     060F                     	;# 
  1630     0610                     	;# 
  1631     0611                     	;# 
  1632     0612                     	;# 
  1633     0613                     	;# 
  1634     0614                     	;# 
  1635     0617                     	;# 
  1636     0617                     	;# 
  1637     0618                     	;# 
  1638     0619                     	;# 
  1639     061A                     	;# 
  1640     061A                     	;# 
  1641     061B                     	;# 
  1642     061C                     	;# 
  1643     0691                     	;# 
  1644     0692                     	;# 
  1645     0693                     	;# 
  1646     0694                     	;# 
  1647     0695                     	;# 
  1648     0696                     	;# 
  1649     0697                     	;# 
  1650     0699                     	;# 
  1651     069A                     	;# 
  1652     0711                     	;# 
  1653     0712                     	;# 
  1654     0713                     	;# 
  1655     0714                     	;# 
  1656     0715                     	;# 
  1657     0718                     	;# 
  1658     0718                     	;# 
  1659     0719                     	;# 
  1660     071A                     	;# 
  1661     071A                     	;# 
  1662     071B                     	;# 
  1663     071C                     	;# 
  1664     071D                     	;# 
  1665     0791                     	;# 
  1666     0791                     	;# 
  1667     0792                     	;# 
  1668     0793                     	;# 
  1669     0793                     	;# 
  1670     0794                     	;# 
  1671     0795                     	;# 
  1672     0795                     	;# 
  1673     0796                     	;# 
  1674     0797                     	;# 
  1675     0797                     	;# 
  1676     0798                     	;# 
  1677     0799                     	;# 
  1678     079A                     	;# 
  1679     080C                     	;# 
  1680     080C                     	;# 
  1681     080D                     	;# 
  1682     080E                     	;# 
  1683     080E                     	;# 
  1684     080F                     	;# 
  1685     0810                     	;# 
  1686     0810                     	;# 
  1687     0811                     	;# 
  1688     0812                     	;# 
  1689     0812                     	;# 
  1690     0813                     	;# 
  1691     0814                     	;# 
  1692     0815                     	;# 
  1693     0816                     	;# 
  1694     0817                     	;# 
  1695     0818                     	;# 
  1696     0819                     	;# 
  1697     081A                     	;# 
  1698     081A                     	;# 
  1699     081B                     	;# 
  1700     081C                     	;# 
  1701     081C                     	;# 
  1702     081D                     	;# 
  1703     088C                     	;# 
  1704     088D                     	;# 
  1705     088E                     	;# 
  1706     088F                     	;# 
  1707     088F                     	;# 
  1708     0890                     	;# 
  1709     0891                     	;# 
  1710     0892                     	;# 
  1711     0893                     	;# 
  1712     0893                     	;# 
  1713     0894                     	;# 
  1714     0895                     	;# 
  1715     0896                     	;# 
  1716     0897                     	;# 
  1717     0897                     	;# 
  1718     0898                     	;# 
  1719     0899                     	;# 
  1720     0D8C                     	;# 
  1721     0D8C                     	;# 
  1722     0D8D                     	;# 
  1723     0D8E                     	;# 
  1724     0D8F                     	;# 
  1725     0D8F                     	;# 
  1726     0D90                     	;# 
  1727     0D91                     	;# 
  1728     0D92                     	;# 
  1729     0D92                     	;# 
  1730     0D93                     	;# 
  1731     0D94                     	;# 
  1732     0D95                     	;# 
  1733     0D95                     	;# 
  1734     0D96                     	;# 
  1735     0D97                     	;# 
  1736     0D98                     	;# 
  1737     0D99                     	;# 
  1738     0D9A                     	;# 
  1739     0D9B                     	;# 
  1740     0D9C                     	;# 
  1741     0D9D                     	;# 
  1742     0D9E                     	;# 
  1743     0D9E                     	;# 
  1744     0D9F                     	;# 
  1745     0DA0                     	;# 
  1746     0DA1                     	;# 
  1747     0DA1                     	;# 
  1748     0DA2                     	;# 
  1749     0DA3                     	;# 
  1750     0DA4                     	;# 
  1751     0DA4                     	;# 
  1752     0DA5                     	;# 
  1753     0DA6                     	;# 
  1754     0DA7                     	;# 
  1755     0DA7                     	;# 
  1756     0DA8                     	;# 
  1757     0DA9                     	;# 
  1758     0DAA                     	;# 
  1759     0DAB                     	;# 
  1760     0DAC                     	;# 
  1761     0DAD                     	;# 
  1762     0DAE                     	;# 
  1763     0DAF                     	;# 
  1764     0E0F                     	;# 
  1765     0E10                     	;# 
  1766     0E11                     	;# 
  1767     0E12                     	;# 
  1768     0E13                     	;# 
  1769     0E14                     	;# 
  1770     0E15                     	;# 
  1771     0E16                     	;# 
  1772     0E17                     	;# 
  1773     0E17                     	;# 
  1774     0E18                     	;# 
  1775     0E18                     	;# 
  1776     0E19                     	;# 
  1777     0E1A                     	;# 
  1778     0E1B                     	;# 
  1779     0E1B                     	;# 
  1780     0E1C                     	;# 
  1781     0E1D                     	;# 
  1782     0E1E                     	;# 
  1783     0E1E                     	;# 
  1784     0E1F                     	;# 
  1785     0E20                     	;# 
  1786     0E21                     	;# 
  1787     0E22                     	;# 
  1788     0E23                     	;# 
  1789     0E24                     	;# 
  1790     0E25                     	;# 
  1791     0E26                     	;# 
  1792     0E27                     	;# 
  1793     0E28                     	;# 
  1794     0E29                     	;# 
  1795     0E2A                     	;# 
  1796     0E2B                     	;# 
  1797     0E2C                     	;# 
  1798     0E2D                     	;# 
  1799     0E2E                     	;# 
  1800     0E90                     	;# 
  1801     0E91                     	;# 
  1802     0E92                     	;# 
  1803     0E94                     	;# 
  1804     0E95                     	;# 
  1805     0E9C                     	;# 
  1806     0E9D                     	;# 
  1807     0E9E                     	;# 
  1808     0E9F                     	;# 
  1809     0EA0                     	;# 
  1810     0EA1                     	;# 
  1811     0EA2                     	;# 
  1812     0EA3                     	;# 
  1813     0EA4                     	;# 
  1814     0EA5                     	;# 
  1815     0EA6                     	;# 
  1816     0EA7                     	;# 
  1817     0F0F                     	;# 
  1818     0F10                     	;# 
  1819     0F11                     	;# 
  1820     0F12                     	;# 
  1821     0F13                     	;# 
  1822     0F14                     	;# 
  1823     0F15                     	;# 
  1824     0F16                     	;# 
  1825     0F17                     	;# 
  1826     0F18                     	;# 
  1827     0F19                     	;# 
  1828     0F1A                     	;# 
  1829     0F1B                     	;# 
  1830     0F1C                     	;# 
  1831     0F1D                     	;# 
  1832     0F1E                     	;# 
  1833     0F1F                     	;# 
  1834     0F20                     	;# 
  1835     0F21                     	;# 
  1836     0F22                     	;# 
  1837     0F23                     	;# 
  1838     0FE4                     	;# 
  1839     0FE5                     	;# 
  1840     0FE6                     	;# 
  1841     0FE7                     	;# 
  1842     0FE8                     	;# 
  1843     0FE9                     	;# 
  1844     0FEA                     	;# 
  1845     0FEB                     	;# 
  1846     0FED                     	;# 
  1847     0FEE                     	;# 
  1848     0FEF                     	;# 
  1849     0000                     	;# 
  1850     0001                     	;# 
  1851     0002                     	;# 
  1852     0003                     	;# 
  1853     0004                     	;# 
  1854     0005                     	;# 
  1855     0006                     	;# 
  1856     0007                     	;# 
  1857     0008                     	;# 
  1858     0009                     	;# 
  1859     000A                     	;# 
  1860     000B                     	;# 
  1861     000C                     	;# 
  1862     000D                     	;# 
  1863     000E                     	;# 
  1864     0010                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001A                     	;# 
  1877     001B                     	;# 
  1878     001B                     	;# 
  1879     001C                     	;# 
  1880     001D                     	;# 
  1881     001E                     	;# 
  1882     001F                     	;# 
  1883     008C                     	;# 
  1884     008D                     	;# 
  1885     008E                     	;# 
  1886     0090                     	;# 
  1887     0091                     	;# 
  1888     0092                     	;# 
  1889     0093                     	;# 
  1890     0094                     	;# 
  1891     0095                     	;# 
  1892     0096                     	;# 
  1893     0098                     	;# 
  1894     0099                     	;# 
  1895     009A                     	;# 
  1896     009B                     	;# 
  1897     009B                     	;# 
  1898     009C                     	;# 
  1899     009D                     	;# 
  1900     009E                     	;# 
  1901     009F                     	;# 
  1902     010C                     	;# 
  1903     010D                     	;# 
  1904     010E                     	;# 
  1905     0111                     	;# 
  1906     0112                     	;# 
  1907     0113                     	;# 
  1908     0114                     	;# 
  1909     0115                     	;# 
  1910     0116                     	;# 
  1911     0117                     	;# 
  1912     0118                     	;# 
  1913     0119                     	;# 
  1914     011C                     	;# 
  1915     018C                     	;# 
  1916     018D                     	;# 
  1917     018E                     	;# 
  1918     0191                     	;# 
  1919     0191                     	;# 
  1920     0192                     	;# 
  1921     0193                     	;# 
  1922     0193                     	;# 
  1923     0194                     	;# 
  1924     0195                     	;# 
  1925     0196                     	;# 
  1926     0197                     	;# 
  1927     0199                     	;# 
  1928     0199                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019A                     	;# 
  1932     019A                     	;# 
  1933     019B                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019B                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019C                     	;# 
  1941     019D                     	;# 
  1942     019D                     	;# 
  1943     019D                     	;# 
  1944     019E                     	;# 
  1945     019E                     	;# 
  1946     019E                     	;# 
  1947     019F                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     019F                     	;# 
  1952     020C                     	;# 
  1953     020D                     	;# 
  1954     020E                     	;# 
  1955     0211                     	;# 
  1956     0211                     	;# 
  1957     0212                     	;# 
  1958     0212                     	;# 
  1959     0213                     	;# 
  1960     0213                     	;# 
  1961     0214                     	;# 
  1962     0214                     	;# 
  1963     0215                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0215                     	;# 
  1967     0216                     	;# 
  1968     0216                     	;# 
  1969     0217                     	;# 
  1970     0217                     	;# 
  1971     028C                     	;# 
  1972     028D                     	;# 
  1973     028E                     	;# 
  1974     0291                     	;# 
  1975     0291                     	;# 
  1976     0292                     	;# 
  1977     0293                     	;# 
  1978     0294                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     029A                     	;# 
  1983     029B                     	;# 
  1984     029E                     	;# 
  1985     030C                     	;# 
  1986     030D                     	;# 
  1987     030E                     	;# 
  1988     038C                     	;# 
  1989     038D                     	;# 
  1990     038E                     	;# 
  1991     0391                     	;# 
  1992     0392                     	;# 
  1993     0393                     	;# 
  1994     0394                     	;# 
  1995     0395                     	;# 
  1996     0396                     	;# 
  1997     0397                     	;# 
  1998     0398                     	;# 
  1999     0399                     	;# 
  2000     040E                     	;# 
  2001     0413                     	;# 
  2002     0413                     	;# 
  2003     0414                     	;# 
  2004     0414                     	;# 
  2005     0415                     	;# 
  2006     0416                     	;# 
  2007     0417                     	;# 
  2008     0418                     	;# 
  2009     041A                     	;# 
  2010     041A                     	;# 
  2011     041B                     	;# 
  2012     041B                     	;# 
  2013     041C                     	;# 
  2014     041D                     	;# 
  2015     041E                     	;# 
  2016     041F                     	;# 
  2017     0493                     	;# 
  2018     0494                     	;# 
  2019     0495                     	;# 
  2020     0496                     	;# 
  2021     049A                     	;# 
  2022     049B                     	;# 
  2023     049C                     	;# 
  2024     049D                     	;# 
  2025     058C                     	;# 
  2026     058C                     	;# 
  2027     058D                     	;# 
  2028     058E                     	;# 
  2029     058E                     	;# 
  2030     058F                     	;# 
  2031     0590                     	;# 
  2032     0590                     	;# 
  2033     0591                     	;# 
  2034     0592                     	;# 
  2035     0592                     	;# 
  2036     0593                     	;# 
  2037     0594                     	;# 
  2038     0594                     	;# 
  2039     0595                     	;# 
  2040     0596                     	;# 
  2041     0596                     	;# 
  2042     0597                     	;# 
  2043     0598                     	;# 
  2044     0599                     	;# 
  2045     059A                     	;# 
  2046     059B                     	;# 
  2047     059B                     	;# 
  2048     059C                     	;# 
  2049     059D                     	;# 
  2050     060C                     	;# 
  2051     060C                     	;# 
  2052     060D                     	;# 
  2053     060E                     	;# 
  2054     060F                     	;# 
  2055     060F                     	;# 
  2056     0610                     	;# 
  2057     0611                     	;# 
  2058     0612                     	;# 
  2059     0613                     	;# 
  2060     0614                     	;# 
  2061     0617                     	;# 
  2062     0617                     	;# 
  2063     0618                     	;# 
  2064     0619                     	;# 
  2065     061A                     	;# 
  2066     061A                     	;# 
  2067     061B                     	;# 
  2068     061C                     	;# 
  2069     0691                     	;# 
  2070     0692                     	;# 
  2071     0693                     	;# 
  2072     0694                     	;# 
  2073     0695                     	;# 
  2074     0696                     	;# 
  2075     0697                     	;# 
  2076     0699                     	;# 
  2077     069A                     	;# 
  2078     0711                     	;# 
  2079     0712                     	;# 
  2080     0713                     	;# 
  2081     0714                     	;# 
  2082     0715                     	;# 
  2083     0718                     	;# 
  2084     0718                     	;# 
  2085     0719                     	;# 
  2086     071A                     	;# 
  2087     071A                     	;# 
  2088     071B                     	;# 
  2089     071C                     	;# 
  2090     071D                     	;# 
  2091     0791                     	;# 
  2092     0791                     	;# 
  2093     0792                     	;# 
  2094     0793                     	;# 
  2095     0793                     	;# 
  2096     0794                     	;# 
  2097     0795                     	;# 
  2098     0795                     	;# 
  2099     0796                     	;# 
  2100     0797                     	;# 
  2101     0797                     	;# 
  2102     0798                     	;# 
  2103     0799                     	;# 
  2104     079A                     	;# 
  2105     080C                     	;# 
  2106     080C                     	;# 
  2107     080D                     	;# 
  2108     080E                     	;# 
  2109     080E                     	;# 
  2110     080F                     	;# 
  2111     0810                     	;# 
  2112     0810                     	;# 
  2113     0811                     	;# 
  2114     0812                     	;# 
  2115     0812                     	;# 
  2116     0813                     	;# 
  2117     0814                     	;# 
  2118     0815                     	;# 
  2119     0816                     	;# 
  2120     0817                     	;# 
  2121     0818                     	;# 
  2122     0819                     	;# 
  2123     081A                     	;# 
  2124     081A                     	;# 
  2125     081B                     	;# 
  2126     081C                     	;# 
  2127     081C                     	;# 
  2128     081D                     	;# 
  2129     088C                     	;# 
  2130     088D                     	;# 
  2131     088E                     	;# 
  2132     088F                     	;# 
  2133     088F                     	;# 
  2134     0890                     	;# 
  2135     0891                     	;# 
  2136     0892                     	;# 
  2137     0893                     	;# 
  2138     0893                     	;# 
  2139     0894                     	;# 
  2140     0895                     	;# 
  2141     0896                     	;# 
  2142     0897                     	;# 
  2143     0897                     	;# 
  2144     0898                     	;# 
  2145     0899                     	;# 
  2146     0D8C                     	;# 
  2147     0D8C                     	;# 
  2148     0D8D                     	;# 
  2149     0D8E                     	;# 
  2150     0D8F                     	;# 
  2151     0D8F                     	;# 
  2152     0D90                     	;# 
  2153     0D91                     	;# 
  2154     0D92                     	;# 
  2155     0D92                     	;# 
  2156     0D93                     	;# 
  2157     0D94                     	;# 
  2158     0D95                     	;# 
  2159     0D95                     	;# 
  2160     0D96                     	;# 
  2161     0D97                     	;# 
  2162     0D98                     	;# 
  2163     0D99                     	;# 
  2164     0D9A                     	;# 
  2165     0D9B                     	;# 
  2166     0D9C                     	;# 
  2167     0D9D                     	;# 
  2168     0D9E                     	;# 
  2169     0D9E                     	;# 
  2170     0D9F                     	;# 
  2171     0DA0                     	;# 
  2172     0DA1                     	;# 
  2173     0DA1                     	;# 
  2174     0DA2                     	;# 
  2175     0DA3                     	;# 
  2176     0DA4                     	;# 
  2177     0DA4                     	;# 
  2178     0DA5                     	;# 
  2179     0DA6                     	;# 
  2180     0DA7                     	;# 
  2181     0DA7                     	;# 
  2182     0DA8                     	;# 
  2183     0DA9                     	;# 
  2184     0DAA                     	;# 
  2185     0DAB                     	;# 
  2186     0DAC                     	;# 
  2187     0DAD                     	;# 
  2188     0DAE                     	;# 
  2189     0DAF                     	;# 
  2190     0E0F                     	;# 
  2191     0E10                     	;# 
  2192     0E11                     	;# 
  2193     0E12                     	;# 
  2194     0E13                     	;# 
  2195     0E14                     	;# 
  2196     0E15                     	;# 
  2197     0E16                     	;# 
  2198     0E17                     	;# 
  2199     0E17                     	;# 
  2200     0E18                     	;# 
  2201     0E18                     	;# 
  2202     0E19                     	;# 
  2203     0E1A                     	;# 
  2204     0E1B                     	;# 
  2205     0E1B                     	;# 
  2206     0E1C                     	;# 
  2207     0E1D                     	;# 
  2208     0E1E                     	;# 
  2209     0E1E                     	;# 
  2210     0E1F                     	;# 
  2211     0E20                     	;# 
  2212     0E21                     	;# 
  2213     0E22                     	;# 
  2214     0E23                     	;# 
  2215     0E24                     	;# 
  2216     0E25                     	;# 
  2217     0E26                     	;# 
  2218     0E27                     	;# 
  2219     0E28                     	;# 
  2220     0E29                     	;# 
  2221     0E2A                     	;# 
  2222     0E2B                     	;# 
  2223     0E2C                     	;# 
  2224     0E2D                     	;# 
  2225     0E2E                     	;# 
  2226     0E90                     	;# 
  2227     0E91                     	;# 
  2228     0E92                     	;# 
  2229     0E94                     	;# 
  2230     0E95                     	;# 
  2231     0E9C                     	;# 
  2232     0E9D                     	;# 
  2233     0E9E                     	;# 
  2234     0E9F                     	;# 
  2235     0EA0                     	;# 
  2236     0EA1                     	;# 
  2237     0EA2                     	;# 
  2238     0EA3                     	;# 
  2239     0EA4                     	;# 
  2240     0EA5                     	;# 
  2241     0EA6                     	;# 
  2242     0EA7                     	;# 
  2243     0F0F                     	;# 
  2244     0F10                     	;# 
  2245     0F11                     	;# 
  2246     0F12                     	;# 
  2247     0F13                     	;# 
  2248     0F14                     	;# 
  2249     0F15                     	;# 
  2250     0F16                     	;# 
  2251     0F17                     	;# 
  2252     0F18                     	;# 
  2253     0F19                     	;# 
  2254     0F1A                     	;# 
  2255     0F1B                     	;# 
  2256     0F1C                     	;# 
  2257     0F1D                     	;# 
  2258     0F1E                     	;# 
  2259     0F1F                     	;# 
  2260     0F20                     	;# 
  2261     0F21                     	;# 
  2262     0F22                     	;# 
  2263     0F23                     	;# 
  2264     0FE4                     	;# 
  2265     0FE5                     	;# 
  2266     0FE6                     	;# 
  2267     0FE7                     	;# 
  2268     0FE8                     	;# 
  2269     0FE9                     	;# 
  2270     0FEA                     	;# 
  2271     0FEB                     	;# 
  2272     0FED                     	;# 
  2273     0FEE                     	;# 
  2274     0FEF                     	;# 
  2275     0000                     	;# 
  2276     0001                     	;# 
  2277     0002                     	;# 
  2278     0003                     	;# 
  2279     0004                     	;# 
  2280     0005                     	;# 
  2281     0006                     	;# 
  2282     0007                     	;# 
  2283     0008                     	;# 
  2284     0009                     	;# 
  2285     000A                     	;# 
  2286     000B                     	;# 
  2287     000C                     	;# 
  2288     000D                     	;# 
  2289     000E                     	;# 
  2290     0010                     	;# 
  2291     0011                     	;# 
  2292     0012                     	;# 
  2293     0013                     	;# 
  2294     0014                     	;# 
  2295     0015                     	;# 
  2296     0016                     	;# 
  2297     0016                     	;# 
  2298     0017                     	;# 
  2299     0018                     	;# 
  2300     0019                     	;# 
  2301     001A                     	;# 
  2302     001A                     	;# 
  2303     001B                     	;# 
  2304     001B                     	;# 
  2305     001C                     	;# 
  2306     001D                     	;# 
  2307     001E                     	;# 
  2308     001F                     	;# 
  2309     008C                     	;# 
  2310     008D                     	;# 
  2311     008E                     	;# 
  2312     0090                     	;# 
  2313     0091                     	;# 
  2314     0092                     	;# 
  2315     0093                     	;# 
  2316     0094                     	;# 
  2317     0095                     	;# 
  2318     0096                     	;# 
  2319     0098                     	;# 
  2320     0099                     	;# 
  2321     009A                     	;# 
  2322     009B                     	;# 
  2323     009B                     	;# 
  2324     009C                     	;# 
  2325     009D                     	;# 
  2326     009E                     	;# 
  2327     009F                     	;# 
  2328     010C                     	;# 
  2329     010D                     	;# 
  2330     010E                     	;# 
  2331     0111                     	;# 
  2332     0112                     	;# 
  2333     0113                     	;# 
  2334     0114                     	;# 
  2335     0115                     	;# 
  2336     0116                     	;# 
  2337     0117                     	;# 
  2338     0118                     	;# 
  2339     0119                     	;# 
  2340     011C                     	;# 
  2341     018C                     	;# 
  2342     018D                     	;# 
  2343     018E                     	;# 
  2344     0191                     	;# 
  2345     0191                     	;# 
  2346     0192                     	;# 
  2347     0193                     	;# 
  2348     0193                     	;# 
  2349     0194                     	;# 
  2350     0195                     	;# 
  2351     0196                     	;# 
  2352     0197                     	;# 
  2353     0199                     	;# 
  2354     0199                     	;# 
  2355     0199                     	;# 
  2356     019A                     	;# 
  2357     019A                     	;# 
  2358     019A                     	;# 
  2359     019B                     	;# 
  2360     019B                     	;# 
  2361     019B                     	;# 
  2362     019B                     	;# 
  2363     019B                     	;# 
  2364     019C                     	;# 
  2365     019C                     	;# 
  2366     019C                     	;# 
  2367     019D                     	;# 
  2368     019D                     	;# 
  2369     019D                     	;# 
  2370     019E                     	;# 
  2371     019E                     	;# 
  2372     019E                     	;# 
  2373     019F                     	;# 
  2374     019F                     	;# 
  2375     019F                     	;# 
  2376     019F                     	;# 
  2377     019F                     	;# 
  2378     020C                     	;# 
  2379     020D                     	;# 
  2380     020E                     	;# 
  2381     0211                     	;# 
  2382     0211                     	;# 
  2383     0212                     	;# 
  2384     0212                     	;# 
  2385     0213                     	;# 
  2386     0213                     	;# 
  2387     0214                     	;# 
  2388     0214                     	;# 
  2389     0215                     	;# 
  2390     0215                     	;# 
  2391     0215                     	;# 
  2392     0215                     	;# 
  2393     0216                     	;# 
  2394     0216                     	;# 
  2395     0217                     	;# 
  2396     0217                     	;# 
  2397     028C                     	;# 
  2398     028D                     	;# 
  2399     028E                     	;# 
  2400     0291                     	;# 
  2401     0291                     	;# 
  2402     0292                     	;# 
  2403     0293                     	;# 
  2404     0294                     	;# 
  2405     0298                     	;# 
  2406     0298                     	;# 
  2407     0299                     	;# 
  2408     029A                     	;# 
  2409     029B                     	;# 
  2410     029E                     	;# 
  2411     030C                     	;# 
  2412     030D                     	;# 
  2413     030E                     	;# 
  2414     038C                     	;# 
  2415     038D                     	;# 
  2416     038E                     	;# 
  2417     0391                     	;# 
  2418     0392                     	;# 
  2419     0393                     	;# 
  2420     0394                     	;# 
  2421     0395                     	;# 
  2422     0396                     	;# 
  2423     0397                     	;# 
  2424     0398                     	;# 
  2425     0399                     	;# 
  2426     040E                     	;# 
  2427     0413                     	;# 
  2428     0413                     	;# 
  2429     0414                     	;# 
  2430     0414                     	;# 
  2431     0415                     	;# 
  2432     0416                     	;# 
  2433     0417                     	;# 
  2434     0418                     	;# 
  2435     041A                     	;# 
  2436     041A                     	;# 
  2437     041B                     	;# 
  2438     041B                     	;# 
  2439     041C                     	;# 
  2440     041D                     	;# 
  2441     041E                     	;# 
  2442     041F                     	;# 
  2443     0493                     	;# 
  2444     0494                     	;# 
  2445     0495                     	;# 
  2446     0496                     	;# 
  2447     049A                     	;# 
  2448     049B                     	;# 
  2449     049C                     	;# 
  2450     049D                     	;# 
  2451     058C                     	;# 
  2452     058C                     	;# 
  2453     058D                     	;# 
  2454     058E                     	;# 
  2455     058E                     	;# 
  2456     058F                     	;# 
  2457     0590                     	;# 
  2458     0590                     	;# 
  2459     0591                     	;# 
  2460     0592                     	;# 
  2461     0592                     	;# 
  2462     0593                     	;# 
  2463     0594                     	;# 
  2464     0594                     	;# 
  2465     0595                     	;# 
  2466     0596                     	;# 
  2467     0596                     	;# 
  2468     0597                     	;# 
  2469     0598                     	;# 
  2470     0599                     	;# 
  2471     059A                     	;# 
  2472     059B                     	;# 
  2473     059B                     	;# 
  2474     059C                     	;# 
  2475     059D                     	;# 
  2476     060C                     	;# 
  2477     060C                     	;# 
  2478     060D                     	;# 
  2479     060E                     	;# 
  2480     060F                     	;# 
  2481     060F                     	;# 
  2482     0610                     	;# 
  2483     0611                     	;# 
  2484     0612                     	;# 
  2485     0613                     	;# 
  2486     0614                     	;# 
  2487     0617                     	;# 
  2488     0617                     	;# 
  2489     0618                     	;# 
  2490     0619                     	;# 
  2491     061A                     	;# 
  2492     061A                     	;# 
  2493     061B                     	;# 
  2494     061C                     	;# 
  2495     0691                     	;# 
  2496     0692                     	;# 
  2497     0693                     	;# 
  2498     0694                     	;# 
  2499     0695                     	;# 
  2500     0696                     	;# 
  2501     0697                     	;# 
  2502     0699                     	;# 
  2503     069A                     	;# 
  2504     0711                     	;# 
  2505     0712                     	;# 
  2506     0713                     	;# 
  2507     0714                     	;# 
  2508     0715                     	;# 
  2509     0718                     	;# 
  2510     0718                     	;# 
  2511     0719                     	;# 
  2512     071A                     	;# 
  2513     071A                     	;# 
  2514     071B                     	;# 
  2515     071C                     	;# 
  2516     071D                     	;# 
  2517     0791                     	;# 
  2518     0791                     	;# 
  2519     0792                     	;# 
  2520     0793                     	;# 
  2521     0793                     	;# 
  2522     0794                     	;# 
  2523     0795                     	;# 
  2524     0795                     	;# 
  2525     0796                     	;# 
  2526     0797                     	;# 
  2527     0797                     	;# 
  2528     0798                     	;# 
  2529     0799                     	;# 
  2530     079A                     	;# 
  2531     080C                     	;# 
  2532     080C                     	;# 
  2533     080D                     	;# 
  2534     080E                     	;# 
  2535     080E                     	;# 
  2536     080F                     	;# 
  2537     0810                     	;# 
  2538     0810                     	;# 
  2539     0811                     	;# 
  2540     0812                     	;# 
  2541     0812                     	;# 
  2542     0813                     	;# 
  2543     0814                     	;# 
  2544     0815                     	;# 
  2545     0816                     	;# 
  2546     0817                     	;# 
  2547     0818                     	;# 
  2548     0819                     	;# 
  2549     081A                     	;# 
  2550     081A                     	;# 
  2551     081B                     	;# 
  2552     081C                     	;# 
  2553     081C                     	;# 
  2554     081D                     	;# 
  2555     088C                     	;# 
  2556     088D                     	;# 
  2557     088E                     	;# 
  2558     088F                     	;# 
  2559     088F                     	;# 
  2560     0890                     	;# 
  2561     0891                     	;# 
  2562     0892                     	;# 
  2563     0893                     	;# 
  2564     0893                     	;# 
  2565     0894                     	;# 
  2566     0895                     	;# 
  2567     0896                     	;# 
  2568     0897                     	;# 
  2569     0897                     	;# 
  2570     0898                     	;# 
  2571     0899                     	;# 
  2572     0D8C                     	;# 
  2573     0D8C                     	;# 
  2574     0D8D                     	;# 
  2575     0D8E                     	;# 
  2576     0D8F                     	;# 
  2577     0D8F                     	;# 
  2578     0D90                     	;# 
  2579     0D91                     	;# 
  2580     0D92                     	;# 
  2581     0D92                     	;# 
  2582     0D93                     	;# 
  2583     0D94                     	;# 
  2584     0D95                     	;# 
  2585     0D95                     	;# 
  2586     0D96                     	;# 
  2587     0D97                     	;# 
  2588     0D98                     	;# 
  2589     0D99                     	;# 
  2590     0D9A                     	;# 
  2591     0D9B                     	;# 
  2592     0D9C                     	;# 
  2593     0D9D                     	;# 
  2594     0D9E                     	;# 
  2595     0D9E                     	;# 
  2596     0D9F                     	;# 
  2597     0DA0                     	;# 
  2598     0DA1                     	;# 
  2599     0DA1                     	;# 
  2600     0DA2                     	;# 
  2601     0DA3                     	;# 
  2602     0DA4                     	;# 
  2603     0DA4                     	;# 
  2604     0DA5                     	;# 
  2605     0DA6                     	;# 
  2606     0DA7                     	;# 
  2607     0DA7                     	;# 
  2608     0DA8                     	;# 
  2609     0DA9                     	;# 
  2610     0DAA                     	;# 
  2611     0DAB                     	;# 
  2612     0DAC                     	;# 
  2613     0DAD                     	;# 
  2614     0DAE                     	;# 
  2615     0DAF                     	;# 
  2616     0E0F                     	;# 
  2617     0E10                     	;# 
  2618     0E11                     	;# 
  2619     0E12                     	;# 
  2620     0E13                     	;# 
  2621     0E14                     	;# 
  2622     0E15                     	;# 
  2623     0E16                     	;# 
  2624     0E17                     	;# 
  2625     0E17                     	;# 
  2626     0E18                     	;# 
  2627     0E18                     	;# 
  2628     0E19                     	;# 
  2629     0E1A                     	;# 
  2630     0E1B                     	;# 
  2631     0E1B                     	;# 
  2632     0E1C                     	;# 
  2633     0E1D                     	;# 
  2634     0E1E                     	;# 
  2635     0E1E                     	;# 
  2636     0E1F                     	;# 
  2637     0E20                     	;# 
  2638     0E21                     	;# 
  2639     0E22                     	;# 
  2640     0E23                     	;# 
  2641     0E24                     	;# 
  2642     0E25                     	;# 
  2643     0E26                     	;# 
  2644     0E27                     	;# 
  2645     0E28                     	;# 
  2646     0E29                     	;# 
  2647     0E2A                     	;# 
  2648     0E2B                     	;# 
  2649     0E2C                     	;# 
  2650     0E2D                     	;# 
  2651     0E2E                     	;# 
  2652     0E90                     	;# 
  2653     0E91                     	;# 
  2654     0E92                     	;# 
  2655     0E94                     	;# 
  2656     0E95                     	;# 
  2657     0E9C                     	;# 
  2658     0E9D                     	;# 
  2659     0E9E                     	;# 
  2660     0E9F                     	;# 
  2661     0EA0                     	;# 
  2662     0EA1                     	;# 
  2663     0EA2                     	;# 
  2664     0EA3                     	;# 
  2665     0EA4                     	;# 
  2666     0EA5                     	;# 
  2667     0EA6                     	;# 
  2668     0EA7                     	;# 
  2669     0F0F                     	;# 
  2670     0F10                     	;# 
  2671     0F11                     	;# 
  2672     0F12                     	;# 
  2673     0F13                     	;# 
  2674     0F14                     	;# 
  2675     0F15                     	;# 
  2676     0F16                     	;# 
  2677     0F17                     	;# 
  2678     0F18                     	;# 
  2679     0F19                     	;# 
  2680     0F1A                     	;# 
  2681     0F1B                     	;# 
  2682     0F1C                     	;# 
  2683     0F1D                     	;# 
  2684     0F1E                     	;# 
  2685     0F1F                     	;# 
  2686     0F20                     	;# 
  2687     0F21                     	;# 
  2688     0F22                     	;# 
  2689     0F23                     	;# 
  2690     0FE4                     	;# 
  2691     0FE5                     	;# 
  2692     0FE6                     	;# 
  2693     0FE7                     	;# 
  2694     0FE8                     	;# 
  2695     0FE9                     	;# 
  2696     0FEA                     	;# 
  2697     0FEB                     	;# 
  2698     0FED                     	;# 
  2699     0FEE                     	;# 
  2700     0FEF                     	;# 
  2701     0000                     	;# 
  2702     0001                     	;# 
  2703     0002                     	;# 
  2704     0003                     	;# 
  2705     0004                     	;# 
  2706     0005                     	;# 
  2707     0006                     	;# 
  2708     0007                     	;# 
  2709     0008                     	;# 
  2710     0009                     	;# 
  2711     000A                     	;# 
  2712     000B                     	;# 
  2713     000C                     	;# 
  2714     000D                     	;# 
  2715     000E                     	;# 
  2716     0010                     	;# 
  2717     0011                     	;# 
  2718     0012                     	;# 
  2719     0013                     	;# 
  2720     0014                     	;# 
  2721     0015                     	;# 
  2722     0016                     	;# 
  2723     0016                     	;# 
  2724     0017                     	;# 
  2725     0018                     	;# 
  2726     0019                     	;# 
  2727     001A                     	;# 
  2728     001A                     	;# 
  2729     001B                     	;# 
  2730     001B                     	;# 
  2731     001C                     	;# 
  2732     001D                     	;# 
  2733     001E                     	;# 
  2734     001F                     	;# 
  2735     008C                     	;# 
  2736     008D                     	;# 
  2737     008E                     	;# 
  2738     0090                     	;# 
  2739     0091                     	;# 
  2740     0092                     	;# 
  2741     0093                     	;# 
  2742     0094                     	;# 
  2743     0095                     	;# 
  2744     0096                     	;# 
  2745     0098                     	;# 
  2746     0099                     	;# 
  2747     009A                     	;# 
  2748     009B                     	;# 
  2749     009B                     	;# 
  2750     009C                     	;# 
  2751     009D                     	;# 
  2752     009E                     	;# 
  2753     009F                     	;# 
  2754     010C                     	;# 
  2755     010D                     	;# 
  2756     010E                     	;# 
  2757     0111                     	;# 
  2758     0112                     	;# 
  2759     0113                     	;# 
  2760     0114                     	;# 
  2761     0115                     	;# 
  2762     0116                     	;# 
  2763     0117                     	;# 
  2764     0118                     	;# 
  2765     0119                     	;# 
  2766     011C                     	;# 
  2767     018C                     	;# 
  2768     018D                     	;# 
  2769     018E                     	;# 
  2770     0191                     	;# 
  2771     0191                     	;# 
  2772     0192                     	;# 
  2773     0193                     	;# 
  2774     0193                     	;# 
  2775     0194                     	;# 
  2776     0195                     	;# 
  2777     0196                     	;# 
  2778     0197                     	;# 
  2779     0199                     	;# 
  2780     0199                     	;# 
  2781     0199                     	;# 
  2782     019A                     	;# 
  2783     019A                     	;# 
  2784     019A                     	;# 
  2785     019B                     	;# 
  2786     019B                     	;# 
  2787     019B                     	;# 
  2788     019B                     	;# 
  2789     019B                     	;# 
  2790     019C                     	;# 
  2791     019C                     	;# 
  2792     019C                     	;# 
  2793     019D                     	;# 
  2794     019D                     	;# 
  2795     019D                     	;# 
  2796     019E                     	;# 
  2797     019E                     	;# 
  2798     019E                     	;# 
  2799     019F                     	;# 
  2800     019F                     	;# 
  2801     019F                     	;# 
  2802     019F                     	;# 
  2803     019F                     	;# 
  2804     020C                     	;# 
  2805     020D                     	;# 
  2806     020E                     	;# 
  2807     0211                     	;# 
  2808     0211                     	;# 
  2809     0212                     	;# 
  2810     0212                     	;# 
  2811     0213                     	;# 
  2812     0213                     	;# 
  2813     0214                     	;# 
  2814     0214                     	;# 
  2815     0215                     	;# 
  2816     0215                     	;# 
  2817     0215                     	;# 
  2818     0215                     	;# 
  2819     0216                     	;# 
  2820     0216                     	;# 
  2821     0217                     	;# 
  2822     0217                     	;# 
  2823     028C                     	;# 
  2824     028D                     	;# 
  2825     028E                     	;# 
  2826     0291                     	;# 
  2827     0291                     	;# 
  2828     0292                     	;# 
  2829     0293                     	;# 
  2830     0294                     	;# 
  2831     0298                     	;# 
  2832     0298                     	;# 
  2833     0299                     	;# 
  2834     029A                     	;# 
  2835     029B                     	;# 
  2836     029E                     	;# 
  2837     030C                     	;# 
  2838     030D                     	;# 
  2839     030E                     	;# 
  2840     038C                     	;# 
  2841     038D                     	;# 
  2842     038E                     	;# 
  2843     0391                     	;# 
  2844     0392                     	;# 
  2845     0393                     	;# 
  2846     0394                     	;# 
  2847     0395                     	;# 
  2848     0396                     	;# 
  2849     0397                     	;# 
  2850     0398                     	;# 
  2851     0399                     	;# 
  2852     040E                     	;# 
  2853     0413                     	;# 
  2854     0413                     	;# 
  2855     0414                     	;# 
  2856     0414                     	;# 
  2857     0415                     	;# 
  2858     0416                     	;# 
  2859     0417                     	;# 
  2860     0418                     	;# 
  2861     041A                     	;# 
  2862     041A                     	;# 
  2863     041B                     	;# 
  2864     041B                     	;# 
  2865     041C                     	;# 
  2866     041D                     	;# 
  2867     041E                     	;# 
  2868     041F                     	;# 
  2869     0493                     	;# 
  2870     0494                     	;# 
  2871     0495                     	;# 
  2872     0496                     	;# 
  2873     049A                     	;# 
  2874     049B                     	;# 
  2875     049C                     	;# 
  2876     049D                     	;# 
  2877     058C                     	;# 
  2878     058C                     	;# 
  2879     058D                     	;# 
  2880     058E                     	;# 
  2881     058E                     	;# 
  2882     058F                     	;# 
  2883     0590                     	;# 
  2884     0590                     	;# 
  2885     0591                     	;# 
  2886     0592                     	;# 
  2887     0592                     	;# 
  2888     0593                     	;# 
  2889     0594                     	;# 
  2890     0594                     	;# 
  2891     0595                     	;# 
  2892     0596                     	;# 
  2893     0596                     	;# 
  2894     0597                     	;# 
  2895     0598                     	;# 
  2896     0599                     	;# 
  2897     059A                     	;# 
  2898     059B                     	;# 
  2899     059B                     	;# 
  2900     059C                     	;# 
  2901     059D                     	;# 
  2902     060C                     	;# 
  2903     060C                     	;# 
  2904     060D                     	;# 
  2905     060E                     	;# 
  2906     060F                     	;# 
  2907     060F                     	;# 
  2908     0610                     	;# 
  2909     0611                     	;# 
  2910     0612                     	;# 
  2911     0613                     	;# 
  2912     0614                     	;# 
  2913     0617                     	;# 
  2914     0617                     	;# 
  2915     0618                     	;# 
  2916     0619                     	;# 
  2917     061A                     	;# 
  2918     061A                     	;# 
  2919     061B                     	;# 
  2920     061C                     	;# 
  2921     0691                     	;# 
  2922     0692                     	;# 
  2923     0693                     	;# 
  2924     0694                     	;# 
  2925     0695                     	;# 
  2926     0696                     	;# 
  2927     0697                     	;# 
  2928     0699                     	;# 
  2929     069A                     	;# 
  2930     0711                     	;# 
  2931     0712                     	;# 
  2932     0713                     	;# 
  2933     0714                     	;# 
  2934     0715                     	;# 
  2935     0718                     	;# 
  2936     0718                     	;# 
  2937     0719                     	;# 
  2938     071A                     	;# 
  2939     071A                     	;# 
  2940     071B                     	;# 
  2941     071C                     	;# 
  2942     071D                     	;# 
  2943     0791                     	;# 
  2944     0791                     	;# 
  2945     0792                     	;# 
  2946     0793                     	;# 
  2947     0793                     	;# 
  2948     0794                     	;# 
  2949     0795                     	;# 
  2950     0795                     	;# 
  2951     0796                     	;# 
  2952     0797                     	;# 
  2953     0797                     	;# 
  2954     0798                     	;# 
  2955     0799                     	;# 
  2956     079A                     	;# 
  2957     080C                     	;# 
  2958     080C                     	;# 
  2959     080D                     	;# 
  2960     080E                     	;# 
  2961     080E                     	;# 
  2962     080F                     	;# 
  2963     0810                     	;# 
  2964     0810                     	;# 
  2965     0811                     	;# 
  2966     0812                     	;# 
  2967     0812                     	;# 
  2968     0813                     	;# 
  2969     0814                     	;# 
  2970     0815                     	;# 
  2971     0816                     	;# 
  2972     0817                     	;# 
  2973     0818                     	;# 
  2974     0819                     	;# 
  2975     081A                     	;# 
  2976     081A                     	;# 
  2977     081B                     	;# 
  2978     081C                     	;# 
  2979     081C                     	;# 
  2980     081D                     	;# 
  2981     088C                     	;# 
  2982     088D                     	;# 
  2983     088E                     	;# 
  2984     088F                     	;# 
  2985     088F                     	;# 
  2986     0890                     	;# 
  2987     0891                     	;# 
  2988     0892                     	;# 
  2989     0893                     	;# 
  2990     0893                     	;# 
  2991     0894                     	;# 
  2992     0895                     	;# 
  2993     0896                     	;# 
  2994     0897                     	;# 
  2995     0897                     	;# 
  2996     0898                     	;# 
  2997     0899                     	;# 
  2998     0D8C                     	;# 
  2999     0D8C                     	;# 
  3000     0D8D                     	;# 
  3001     0D8E                     	;# 
  3002     0D8F                     	;# 
  3003     0D8F                     	;# 
  3004     0D90                     	;# 
  3005     0D91                     	;# 
  3006     0D92                     	;# 
  3007     0D92                     	;# 
  3008     0D93                     	;# 
  3009     0D94                     	;# 
  3010     0D95                     	;# 
  3011     0D95                     	;# 
  3012     0D96                     	;# 
  3013     0D97                     	;# 
  3014     0D98                     	;# 
  3015     0D99                     	;# 
  3016     0D9A                     	;# 
  3017     0D9B                     	;# 
  3018     0D9C                     	;# 
  3019     0D9D                     	;# 
  3020     0D9E                     	;# 
  3021     0D9E                     	;# 
  3022     0D9F                     	;# 
  3023     0DA0                     	;# 
  3024     0DA1                     	;# 
  3025     0DA1                     	;# 
  3026     0DA2                     	;# 
  3027     0DA3                     	;# 
  3028     0DA4                     	;# 
  3029     0DA4                     	;# 
  3030     0DA5                     	;# 
  3031     0DA6                     	;# 
  3032     0DA7                     	;# 
  3033     0DA7                     	;# 
  3034     0DA8                     	;# 
  3035     0DA9                     	;# 
  3036     0DAA                     	;# 
  3037     0DAB                     	;# 
  3038     0DAC                     	;# 
  3039     0DAD                     	;# 
  3040     0DAE                     	;# 
  3041     0DAF                     	;# 
  3042     0E0F                     	;# 
  3043     0E10                     	;# 
  3044     0E11                     	;# 
  3045     0E12                     	;# 
  3046     0E13                     	;# 
  3047     0E14                     	;# 
  3048     0E15                     	;# 
  3049     0E16                     	;# 
  3050     0E17                     	;# 
  3051     0E17                     	;# 
  3052     0E18                     	;# 
  3053     0E18                     	;# 
  3054     0E19                     	;# 
  3055     0E1A                     	;# 
  3056     0E1B                     	;# 
  3057     0E1B                     	;# 
  3058     0E1C                     	;# 
  3059     0E1D                     	;# 
  3060     0E1E                     	;# 
  3061     0E1E                     	;# 
  3062     0E1F                     	;# 
  3063     0E20                     	;# 
  3064     0E21                     	;# 
  3065     0E22                     	;# 
  3066     0E23                     	;# 
  3067     0E24                     	;# 
  3068     0E25                     	;# 
  3069     0E26                     	;# 
  3070     0E27                     	;# 
  3071     0E28                     	;# 
  3072     0E29                     	;# 
  3073     0E2A                     	;# 
  3074     0E2B                     	;# 
  3075     0E2C                     	;# 
  3076     0E2D                     	;# 
  3077     0E2E                     	;# 
  3078     0E90                     	;# 
  3079     0E91                     	;# 
  3080     0E92                     	;# 
  3081     0E94                     	;# 
  3082     0E95                     	;# 
  3083     0E9C                     	;# 
  3084     0E9D                     	;# 
  3085     0E9E                     	;# 
  3086     0E9F                     	;# 
  3087     0EA0                     	;# 
  3088     0EA1                     	;# 
  3089     0EA2                     	;# 
  3090     0EA3                     	;# 
  3091     0EA4                     	;# 
  3092     0EA5                     	;# 
  3093     0EA6                     	;# 
  3094     0EA7                     	;# 
  3095     0F0F                     	;# 
  3096     0F10                     	;# 
  3097     0F11                     	;# 
  3098     0F12                     	;# 
  3099     0F13                     	;# 
  3100     0F14                     	;# 
  3101     0F15                     	;# 
  3102     0F16                     	;# 
  3103     0F17                     	;# 
  3104     0F18                     	;# 
  3105     0F19                     	;# 
  3106     0F1A                     	;# 
  3107     0F1B                     	;# 
  3108     0F1C                     	;# 
  3109     0F1D                     	;# 
  3110     0F1E                     	;# 
  3111     0F1F                     	;# 
  3112     0F20                     	;# 
  3113     0F21                     	;# 
  3114     0F22                     	;# 
  3115     0F23                     	;# 
  3116     0FE4                     	;# 
  3117     0FE5                     	;# 
  3118     0FE6                     	;# 
  3119     0FE7                     	;# 
  3120     0FE8                     	;# 
  3121     0FE9                     	;# 
  3122     0FEA                     	;# 
  3123     0FEB                     	;# 
  3124     0FED                     	;# 
  3125     0FEE                     	;# 
  3126     0FEF                     	;# 
  3127     0000                     	;# 
  3128     0001                     	;# 
  3129     0002                     	;# 
  3130     0003                     	;# 
  3131     0004                     	;# 
  3132     0005                     	;# 
  3133     0006                     	;# 
  3134     0007                     	;# 
  3135     0008                     	;# 
  3136     0009                     	;# 
  3137     000A                     	;# 
  3138     000B                     	;# 
  3139     000C                     	;# 
  3140     000D                     	;# 
  3141     000E                     	;# 
  3142     0010                     	;# 
  3143     0011                     	;# 
  3144     0012                     	;# 
  3145     0013                     	;# 
  3146     0014                     	;# 
  3147     0015                     	;# 
  3148     0016                     	;# 
  3149     0016                     	;# 
  3150     0017                     	;# 
  3151     0018                     	;# 
  3152     0019                     	;# 
  3153     001A                     	;# 
  3154     001A                     	;# 
  3155     001B                     	;# 
  3156     001B                     	;# 
  3157     001C                     	;# 
  3158     001D                     	;# 
  3159     001E                     	;# 
  3160     001F                     	;# 
  3161     008C                     	;# 
  3162     008D                     	;# 
  3163     008E                     	;# 
  3164     0090                     	;# 
  3165     0091                     	;# 
  3166     0092                     	;# 
  3167     0093                     	;# 
  3168     0094                     	;# 
  3169     0095                     	;# 
  3170     0096                     	;# 
  3171     0098                     	;# 
  3172     0099                     	;# 
  3173     009A                     	;# 
  3174     009B                     	;# 
  3175     009B                     	;# 
  3176     009C                     	;# 
  3177     009D                     	;# 
  3178     009E                     	;# 
  3179     009F                     	;# 
  3180     010C                     	;# 
  3181     010D                     	;# 
  3182     010E                     	;# 
  3183     0111                     	;# 
  3184     0112                     	;# 
  3185     0113                     	;# 
  3186     0114                     	;# 
  3187     0115                     	;# 
  3188     0116                     	;# 
  3189     0117                     	;# 
  3190     0118                     	;# 
  3191     0119                     	;# 
  3192     011C                     	;# 
  3193     018C                     	;# 
  3194     018D                     	;# 
  3195     018E                     	;# 
  3196     0191                     	;# 
  3197     0191                     	;# 
  3198     0192                     	;# 
  3199     0193                     	;# 
  3200     0193                     	;# 
  3201     0194                     	;# 
  3202     0195                     	;# 
  3203     0196                     	;# 
  3204     0197                     	;# 
  3205     0199                     	;# 
  3206     0199                     	;# 
  3207     0199                     	;# 
  3208     019A                     	;# 
  3209     019A                     	;# 
  3210     019A                     	;# 
  3211     019B                     	;# 
  3212     019B                     	;# 
  3213     019B                     	;# 
  3214     019B                     	;# 
  3215     019B                     	;# 
  3216     019C                     	;# 
  3217     019C                     	;# 
  3218     019C                     	;# 
  3219     019D                     	;# 
  3220     019D                     	;# 
  3221     019D                     	;# 
  3222     019E                     	;# 
  3223     019E                     	;# 
  3224     019E                     	;# 
  3225     019F                     	;# 
  3226     019F                     	;# 
  3227     019F                     	;# 
  3228     019F                     	;# 
  3229     019F                     	;# 
  3230     020C                     	;# 
  3231     020D                     	;# 
  3232     020E                     	;# 
  3233     0211                     	;# 
  3234     0211                     	;# 
  3235     0212                     	;# 
  3236     0212                     	;# 
  3237     0213                     	;# 
  3238     0213                     	;# 
  3239     0214                     	;# 
  3240     0214                     	;# 
  3241     0215                     	;# 
  3242     0215                     	;# 
  3243     0215                     	;# 
  3244     0215                     	;# 
  3245     0216                     	;# 
  3246     0216                     	;# 
  3247     0217                     	;# 
  3248     0217                     	;# 
  3249     028C                     	;# 
  3250     028D                     	;# 
  3251     028E                     	;# 
  3252     0291                     	;# 
  3253     0291                     	;# 
  3254     0292                     	;# 
  3255     0293                     	;# 
  3256     0294                     	;# 
  3257     0298                     	;# 
  3258     0298                     	;# 
  3259     0299                     	;# 
  3260     029A                     	;# 
  3261     029B                     	;# 
  3262     029E                     	;# 
  3263     030C                     	;# 
  3264     030D                     	;# 
  3265     030E                     	;# 
  3266     038C                     	;# 
  3267     038D                     	;# 
  3268     038E                     	;# 
  3269     0391                     	;# 
  3270     0392                     	;# 
  3271     0393                     	;# 
  3272     0394                     	;# 
  3273     0395                     	;# 
  3274     0396                     	;# 
  3275     0397                     	;# 
  3276     0398                     	;# 
  3277     0399                     	;# 
  3278     040E                     	;# 
  3279     0413                     	;# 
  3280     0413                     	;# 
  3281     0414                     	;# 
  3282     0414                     	;# 
  3283     0415                     	;# 
  3284     0416                     	;# 
  3285     0417                     	;# 
  3286     0418                     	;# 
  3287     041A                     	;# 
  3288     041A                     	;# 
  3289     041B                     	;# 
  3290     041B                     	;# 
  3291     041C                     	;# 
  3292     041D                     	;# 
  3293     041E                     	;# 
  3294     041F                     	;# 
  3295     0493                     	;# 
  3296     0494                     	;# 
  3297     0495                     	;# 
  3298     0496                     	;# 
  3299     049A                     	;# 
  3300     049B                     	;# 
  3301     049C                     	;# 
  3302     049D                     	;# 
  3303     058C                     	;# 
  3304     058C                     	;# 
  3305     058D                     	;# 
  3306     058E                     	;# 
  3307     058E                     	;# 
  3308     058F                     	;# 
  3309     0590                     	;# 
  3310     0590                     	;# 
  3311     0591                     	;# 
  3312     0592                     	;# 
  3313     0592                     	;# 
  3314     0593                     	;# 
  3315     0594                     	;# 
  3316     0594                     	;# 
  3317     0595                     	;# 
  3318     0596                     	;# 
  3319     0596                     	;# 
  3320     0597                     	;# 
  3321     0598                     	;# 
  3322     0599                     	;# 
  3323     059A                     	;# 
  3324     059B                     	;# 
  3325     059B                     	;# 
  3326     059C                     	;# 
  3327     059D                     	;# 
  3328     060C                     	;# 
  3329     060C                     	;# 
  3330     060D                     	;# 
  3331     060E                     	;# 
  3332     060F                     	;# 
  3333     060F                     	;# 
  3334     0610                     	;# 
  3335     0611                     	;# 
  3336     0612                     	;# 
  3337     0613                     	;# 
  3338     0614                     	;# 
  3339     0617                     	;# 
  3340     0617                     	;# 
  3341     0618                     	;# 
  3342     0619                     	;# 
  3343     061A                     	;# 
  3344     061A                     	;# 
  3345     061B                     	;# 
  3346     061C                     	;# 
  3347     0691                     	;# 
  3348     0692                     	;# 
  3349     0693                     	;# 
  3350     0694                     	;# 
  3351     0695                     	;# 
  3352     0696                     	;# 
  3353     0697                     	;# 
  3354     0699                     	;# 
  3355     069A                     	;# 
  3356     0711                     	;# 
  3357     0712                     	;# 
  3358     0713                     	;# 
  3359     0714                     	;# 
  3360     0715                     	;# 
  3361     0718                     	;# 
  3362     0718                     	;# 
  3363     0719                     	;# 
  3364     071A                     	;# 
  3365     071A                     	;# 
  3366     071B                     	;# 
  3367     071C                     	;# 
  3368     071D                     	;# 
  3369     0791                     	;# 
  3370     0791                     	;# 
  3371     0792                     	;# 
  3372     0793                     	;# 
  3373     0793                     	;# 
  3374     0794                     	;# 
  3375     0795                     	;# 
  3376     0795                     	;# 
  3377     0796                     	;# 
  3378     0797                     	;# 
  3379     0797                     	;# 
  3380     0798                     	;# 
  3381     0799                     	;# 
  3382     079A                     	;# 
  3383     080C                     	;# 
  3384     080C                     	;# 
  3385     080D                     	;# 
  3386     080E                     	;# 
  3387     080E                     	;# 
  3388     080F                     	;# 
  3389     0810                     	;# 
  3390     0810                     	;# 
  3391     0811                     	;# 
  3392     0812                     	;# 
  3393     0812                     	;# 
  3394     0813                     	;# 
  3395     0814                     	;# 
  3396     0815                     	;# 
  3397     0816                     	;# 
  3398     0817                     	;# 
  3399     0818                     	;# 
  3400     0819                     	;# 
  3401     081A                     	;# 
  3402     081A                     	;# 
  3403     081B                     	;# 
  3404     081C                     	;# 
  3405     081C                     	;# 
  3406     081D                     	;# 
  3407     088C                     	;# 
  3408     088D                     	;# 
  3409     088E                     	;# 
  3410     088F                     	;# 
  3411     088F                     	;# 
  3412     0890                     	;# 
  3413     0891                     	;# 
  3414     0892                     	;# 
  3415     0893                     	;# 
  3416     0893                     	;# 
  3417     0894                     	;# 
  3418     0895                     	;# 
  3419     0896                     	;# 
  3420     0897                     	;# 
  3421     0897                     	;# 
  3422     0898                     	;# 
  3423     0899                     	;# 
  3424     0D8C                     	;# 
  3425     0D8C                     	;# 
  3426     0D8D                     	;# 
  3427     0D8E                     	;# 
  3428     0D8F                     	;# 
  3429     0D8F                     	;# 
  3430     0D90                     	;# 
  3431     0D91                     	;# 
  3432     0D92                     	;# 
  3433     0D92                     	;# 
  3434     0D93                     	;# 
  3435     0D94                     	;# 
  3436     0D95                     	;# 
  3437     0D95                     	;# 
  3438     0D96                     	;# 
  3439     0D97                     	;# 
  3440     0D98                     	;# 
  3441     0D99                     	;# 
  3442     0D9A                     	;# 
  3443     0D9B                     	;# 
  3444     0D9C                     	;# 
  3445     0D9D                     	;# 
  3446     0D9E                     	;# 
  3447     0D9E                     	;# 
  3448     0D9F                     	;# 
  3449     0DA0                     	;# 
  3450     0DA1                     	;# 
  3451     0DA1                     	;# 
  3452     0DA2                     	;# 
  3453     0DA3                     	;# 
  3454     0DA4                     	;# 
  3455     0DA4                     	;# 
  3456     0DA5                     	;# 
  3457     0DA6                     	;# 
  3458     0DA7                     	;# 
  3459     0DA7                     	;# 
  3460     0DA8                     	;# 
  3461     0DA9                     	;# 
  3462     0DAA                     	;# 
  3463     0DAB                     	;# 
  3464     0DAC                     	;# 
  3465     0DAD                     	;# 
  3466     0DAE                     	;# 
  3467     0DAF                     	;# 
  3468     0E0F                     	;# 
  3469     0E10                     	;# 
  3470     0E11                     	;# 
  3471     0E12                     	;# 
  3472     0E13                     	;# 
  3473     0E14                     	;# 
  3474     0E15                     	;# 
  3475     0E16                     	;# 
  3476     0E17                     	;# 
  3477     0E17                     	;# 
  3478     0E18                     	;# 
  3479     0E18                     	;# 
  3480     0E19                     	;# 
  3481     0E1A                     	;# 
  3482     0E1B                     	;# 
  3483     0E1B                     	;# 
  3484     0E1C                     	;# 
  3485     0E1D                     	;# 
  3486     0E1E                     	;# 
  3487     0E1E                     	;# 
  3488     0E1F                     	;# 
  3489     0E20                     	;# 
  3490     0E21                     	;# 
  3491     0E22                     	;# 
  3492     0E23                     	;# 
  3493     0E24                     	;# 
  3494     0E25                     	;# 
  3495     0E26                     	;# 
  3496     0E27                     	;# 
  3497     0E28                     	;# 
  3498     0E29                     	;# 
  3499     0E2A                     	;# 
  3500     0E2B                     	;# 
  3501     0E2C                     	;# 
  3502     0E2D                     	;# 
  3503     0E2E                     	;# 
  3504     0E90                     	;# 
  3505     0E91                     	;# 
  3506     0E92                     	;# 
  3507     0E94                     	;# 
  3508     0E95                     	;# 
  3509     0E9C                     	;# 
  3510     0E9D                     	;# 
  3511     0E9E                     	;# 
  3512     0E9F                     	;# 
  3513     0EA0                     	;# 
  3514     0EA1                     	;# 
  3515     0EA2                     	;# 
  3516     0EA3                     	;# 
  3517     0EA4                     	;# 
  3518     0EA5                     	;# 
  3519     0EA6                     	;# 
  3520     0EA7                     	;# 
  3521     0F0F                     	;# 
  3522     0F10                     	;# 
  3523     0F11                     	;# 
  3524     0F12                     	;# 
  3525     0F13                     	;# 
  3526     0F14                     	;# 
  3527     0F15                     	;# 
  3528     0F16                     	;# 
  3529     0F17                     	;# 
  3530     0F18                     	;# 
  3531     0F19                     	;# 
  3532     0F1A                     	;# 
  3533     0F1B                     	;# 
  3534     0F1C                     	;# 
  3535     0F1D                     	;# 
  3536     0F1E                     	;# 
  3537     0F1F                     	;# 
  3538     0F20                     	;# 
  3539     0F21                     	;# 
  3540     0F22                     	;# 
  3541     0F23                     	;# 
  3542     0FE4                     	;# 
  3543     0FE5                     	;# 
  3544     0FE6                     	;# 
  3545     0FE7                     	;# 
  3546     0FE8                     	;# 
  3547     0FE9                     	;# 
  3548     0FEA                     	;# 
  3549     0FEB                     	;# 
  3550     0FED                     	;# 
  3551     0FEE                     	;# 
  3552     0FEF                     	;# 
  3553     0000                     	;# 
  3554     0001                     	;# 
  3555     0002                     	;# 
  3556     0003                     	;# 
  3557     0004                     	;# 
  3558     0005                     	;# 
  3559     0006                     	;# 
  3560     0007                     	;# 
  3561     0008                     	;# 
  3562     0009                     	;# 
  3563     000A                     	;# 
  3564     000B                     	;# 
  3565     000C                     	;# 
  3566     000D                     	;# 
  3567     000E                     	;# 
  3568     0010                     	;# 
  3569     0011                     	;# 
  3570     0012                     	;# 
  3571     0013                     	;# 
  3572     0014                     	;# 
  3573     0015                     	;# 
  3574     0016                     	;# 
  3575     0016                     	;# 
  3576     0017                     	;# 
  3577     0018                     	;# 
  3578     0019                     	;# 
  3579     001A                     	;# 
  3580     001A                     	;# 
  3581     001B                     	;# 
  3582     001B                     	;# 
  3583     001C                     	;# 
  3584     001D                     	;# 
  3585     001E                     	;# 
  3586     001F                     	;# 
  3587     008C                     	;# 
  3588     008D                     	;# 
  3589     008E                     	;# 
  3590     0090                     	;# 
  3591     0091                     	;# 
  3592     0092                     	;# 
  3593     0093                     	;# 
  3594     0094                     	;# 
  3595     0095                     	;# 
  3596     0096                     	;# 
  3597     0098                     	;# 
  3598     0099                     	;# 
  3599     009A                     	;# 
  3600     009B                     	;# 
  3601     009B                     	;# 
  3602     009C                     	;# 
  3603     009D                     	;# 
  3604     009E                     	;# 
  3605     009F                     	;# 
  3606     010C                     	;# 
  3607     010D                     	;# 
  3608     010E                     	;# 
  3609     0111                     	;# 
  3610     0112                     	;# 
  3611     0113                     	;# 
  3612     0114                     	;# 
  3613     0115                     	;# 
  3614     0116                     	;# 
  3615     0117                     	;# 
  3616     0118                     	;# 
  3617     0119                     	;# 
  3618     011C                     	;# 
  3619     018C                     	;# 
  3620     018D                     	;# 
  3621     018E                     	;# 
  3622     0191                     	;# 
  3623     0191                     	;# 
  3624     0192                     	;# 
  3625     0193                     	;# 
  3626     0193                     	;# 
  3627     0194                     	;# 
  3628     0195                     	;# 
  3629     0196                     	;# 
  3630     0197                     	;# 
  3631     0199                     	;# 
  3632     0199                     	;# 
  3633     0199                     	;# 
  3634     019A                     	;# 
  3635     019A                     	;# 
  3636     019A                     	;# 
  3637     019B                     	;# 
  3638     019B                     	;# 
  3639     019B                     	;# 
  3640     019B                     	;# 
  3641     019B                     	;# 
  3642     019C                     	;# 
  3643     019C                     	;# 
  3644     019C                     	;# 
  3645     019D                     	;# 
  3646     019D                     	;# 
  3647     019D                     	;# 
  3648     019E                     	;# 
  3649     019E                     	;# 
  3650     019E                     	;# 
  3651     019F                     	;# 
  3652     019F                     	;# 
  3653     019F                     	;# 
  3654     019F                     	;# 
  3655     019F                     	;# 
  3656     020C                     	;# 
  3657     020D                     	;# 
  3658     020E                     	;# 
  3659     0211                     	;# 
  3660     0211                     	;# 
  3661     0212                     	;# 
  3662     0212                     	;# 
  3663     0213                     	;# 
  3664     0213                     	;# 
  3665     0214                     	;# 
  3666     0214                     	;# 
  3667     0215                     	;# 
  3668     0215                     	;# 
  3669     0215                     	;# 
  3670     0215                     	;# 
  3671     0216                     	;# 
  3672     0216                     	;# 
  3673     0217                     	;# 
  3674     0217                     	;# 
  3675     028C                     	;# 
  3676     028D                     	;# 
  3677     028E                     	;# 
  3678     0291                     	;# 
  3679     0291                     	;# 
  3680     0292                     	;# 
  3681     0293                     	;# 
  3682     0294                     	;# 
  3683     0298                     	;# 
  3684     0298                     	;# 
  3685     0299                     	;# 
  3686     029A                     	;# 
  3687     029B                     	;# 
  3688     029E                     	;# 
  3689     030C                     	;# 
  3690     030D                     	;# 
  3691     030E                     	;# 
  3692     038C                     	;# 
  3693     038D                     	;# 
  3694     038E                     	;# 
  3695     0391                     	;# 
  3696     0392                     	;# 
  3697     0393                     	;# 
  3698     0394                     	;# 
  3699     0395                     	;# 
  3700     0396                     	;# 
  3701     0397                     	;# 
  3702     0398                     	;# 
  3703     0399                     	;# 
  3704     040E                     	;# 
  3705     0413                     	;# 
  3706     0413                     	;# 
  3707     0414                     	;# 
  3708     0414                     	;# 
  3709     0415                     	;# 
  3710     0416                     	;# 
  3711     0417                     	;# 
  3712     0418                     	;# 
  3713     041A                     	;# 
  3714     041A                     	;# 
  3715     041B                     	;# 
  3716     041B                     	;# 
  3717     041C                     	;# 
  3718     041D                     	;# 
  3719     041E                     	;# 
  3720     041F                     	;# 
  3721     0493                     	;# 
  3722     0494                     	;# 
  3723     0495                     	;# 
  3724     0496                     	;# 
  3725     049A                     	;# 
  3726     049B                     	;# 
  3727     049C                     	;# 
  3728     049D                     	;# 
  3729     058C                     	;# 
  3730     058C                     	;# 
  3731     058D                     	;# 
  3732     058E                     	;# 
  3733     058E                     	;# 
  3734     058F                     	;# 
  3735     0590                     	;# 
  3736     0590                     	;# 
  3737     0591                     	;# 
  3738     0592                     	;# 
  3739     0592                     	;# 
  3740     0593                     	;# 
  3741     0594                     	;# 
  3742     0594                     	;# 
  3743     0595                     	;# 
  3744     0596                     	;# 
  3745     0596                     	;# 
  3746     0597                     	;# 
  3747     0598                     	;# 
  3748     0599                     	;# 
  3749     059A                     	;# 
  3750     059B                     	;# 
  3751     059B                     	;# 
  3752     059C                     	;# 
  3753     059D                     	;# 
  3754     060C                     	;# 
  3755     060C                     	;# 
  3756     060D                     	;# 
  3757     060E                     	;# 
  3758     060F                     	;# 
  3759     060F                     	;# 
  3760     0610                     	;# 
  3761     0611                     	;# 
  3762     0612                     	;# 
  3763     0613                     	;# 
  3764     0614                     	;# 
  3765     0617                     	;# 
  3766     0617                     	;# 
  3767     0618                     	;# 
  3768     0619                     	;# 
  3769     061A                     	;# 
  3770     061A                     	;# 
  3771     061B                     	;# 
  3772     061C                     	;# 
  3773     0691                     	;# 
  3774     0692                     	;# 
  3775     0693                     	;# 
  3776     0694                     	;# 
  3777     0695                     	;# 
  3778     0696                     	;# 
  3779     0697                     	;# 
  3780     0699                     	;# 
  3781     069A                     	;# 
  3782     0711                     	;# 
  3783     0712                     	;# 
  3784     0713                     	;# 
  3785     0714                     	;# 
  3786     0715                     	;# 
  3787     0718                     	;# 
  3788     0718                     	;# 
  3789     0719                     	;# 
  3790     071A                     	;# 
  3791     071A                     	;# 
  3792     071B                     	;# 
  3793     071C                     	;# 
  3794     071D                     	;# 
  3795     0791                     	;# 
  3796     0791                     	;# 
  3797     0792                     	;# 
  3798     0793                     	;# 
  3799     0793                     	;# 
  3800     0794                     	;# 
  3801     0795                     	;# 
  3802     0795                     	;# 
  3803     0796                     	;# 
  3804     0797                     	;# 
  3805     0797                     	;# 
  3806     0798                     	;# 
  3807     0799                     	;# 
  3808     079A                     	;# 
  3809     080C                     	;# 
  3810     080C                     	;# 
  3811     080D                     	;# 
  3812     080E                     	;# 
  3813     080E                     	;# 
  3814     080F                     	;# 
  3815     0810                     	;# 
  3816     0810                     	;# 
  3817     0811                     	;# 
  3818     0812                     	;# 
  3819     0812                     	;# 
  3820     0813                     	;# 
  3821     0814                     	;# 
  3822     0815                     	;# 
  3823     0816                     	;# 
  3824     0817                     	;# 
  3825     0818                     	;# 
  3826     0819                     	;# 
  3827     081A                     	;# 
  3828     081A                     	;# 
  3829     081B                     	;# 
  3830     081C                     	;# 
  3831     081C                     	;# 
  3832     081D                     	;# 
  3833     088C                     	;# 
  3834     088D                     	;# 
  3835     088E                     	;# 
  3836     088F                     	;# 
  3837     088F                     	;# 
  3838     0890                     	;# 
  3839     0891                     	;# 
  3840     0892                     	;# 
  3841     0893                     	;# 
  3842     0893                     	;# 
  3843     0894                     	;# 
  3844     0895                     	;# 
  3845     0896                     	;# 
  3846     0897                     	;# 
  3847     0897                     	;# 
  3848     0898                     	;# 
  3849     0899                     	;# 
  3850     0D8C                     	;# 
  3851     0D8C                     	;# 
  3852     0D8D                     	;# 
  3853     0D8E                     	;# 
  3854     0D8F                     	;# 
  3855     0D8F                     	;# 
  3856     0D90                     	;# 
  3857     0D91                     	;# 
  3858     0D92                     	;# 
  3859     0D92                     	;# 
  3860     0D93                     	;# 
  3861     0D94                     	;# 
  3862     0D95                     	;# 
  3863     0D95                     	;# 
  3864     0D96                     	;# 
  3865     0D97                     	;# 
  3866     0D98                     	;# 
  3867     0D99                     	;# 
  3868     0D9A                     	;# 
  3869     0D9B                     	;# 
  3870     0D9C                     	;# 
  3871     0D9D                     	;# 
  3872     0D9E                     	;# 
  3873     0D9E                     	;# 
  3874     0D9F                     	;# 
  3875     0DA0                     	;# 
  3876     0DA1                     	;# 
  3877     0DA1                     	;# 
  3878     0DA2                     	;# 
  3879     0DA3                     	;# 
  3880     0DA4                     	;# 
  3881     0DA4                     	;# 
  3882     0DA5                     	;# 
  3883     0DA6                     	;# 
  3884     0DA7                     	;# 
  3885     0DA7                     	;# 
  3886     0DA8                     	;# 
  3887     0DA9                     	;# 
  3888     0DAA                     	;# 
  3889     0DAB                     	;# 
  3890     0DAC                     	;# 
  3891     0DAD                     	;# 
  3892     0DAE                     	;# 
  3893     0DAF                     	;# 
  3894     0E0F                     	;# 
  3895     0E10                     	;# 
  3896     0E11                     	;# 
  3897     0E12                     	;# 
  3898     0E13                     	;# 
  3899     0E14                     	;# 
  3900     0E15                     	;# 
  3901     0E16                     	;# 
  3902     0E17                     	;# 
  3903     0E17                     	;# 
  3904     0E18                     	;# 
  3905     0E18                     	;# 
  3906     0E19                     	;# 
  3907     0E1A                     	;# 
  3908     0E1B                     	;# 
  3909     0E1B                     	;# 
  3910     0E1C                     	;# 
  3911     0E1D                     	;# 
  3912     0E1E                     	;# 
  3913     0E1E                     	;# 
  3914     0E1F                     	;# 
  3915     0E20                     	;# 
  3916     0E21                     	;# 
  3917     0E22                     	;# 
  3918     0E23                     	;# 
  3919     0E24                     	;# 
  3920     0E25                     	;# 
  3921     0E26                     	;# 
  3922     0E27                     	;# 
  3923     0E28                     	;# 
  3924     0E29                     	;# 
  3925     0E2A                     	;# 
  3926     0E2B                     	;# 
  3927     0E2C                     	;# 
  3928     0E2D                     	;# 
  3929     0E2E                     	;# 
  3930     0E90                     	;# 
  3931     0E91                     	;# 
  3932     0E92                     	;# 
  3933     0E94                     	;# 
  3934     0E95                     	;# 
  3935     0E9C                     	;# 
  3936     0E9D                     	;# 
  3937     0E9E                     	;# 
  3938     0E9F                     	;# 
  3939     0EA0                     	;# 
  3940     0EA1                     	;# 
  3941     0EA2                     	;# 
  3942     0EA3                     	;# 
  3943     0EA4                     	;# 
  3944     0EA5                     	;# 
  3945     0EA6                     	;# 
  3946     0EA7                     	;# 
  3947     0F0F                     	;# 
  3948     0F10                     	;# 
  3949     0F11                     	;# 
  3950     0F12                     	;# 
  3951     0F13                     	;# 
  3952     0F14                     	;# 
  3953     0F15                     	;# 
  3954     0F16                     	;# 
  3955     0F17                     	;# 
  3956     0F18                     	;# 
  3957     0F19                     	;# 
  3958     0F1A                     	;# 
  3959     0F1B                     	;# 
  3960     0F1C                     	;# 
  3961     0F1D                     	;# 
  3962     0F1E                     	;# 
  3963     0F1F                     	;# 
  3964     0F20                     	;# 
  3965     0F21                     	;# 
  3966     0F22                     	;# 
  3967     0F23                     	;# 
  3968     0FE4                     	;# 
  3969     0FE5                     	;# 
  3970     0FE6                     	;# 
  3971     0FE7                     	;# 
  3972     0FE8                     	;# 
  3973     0FE9                     	;# 
  3974     0FEA                     	;# 
  3975     0FEB                     	;# 
  3976     0FED                     	;# 
  3977     0FEE                     	;# 
  3978     0FEF                     	;# 
  3979     0000                     	;# 
  3980     0001                     	;# 
  3981     0002                     	;# 
  3982     0003                     	;# 
  3983     0004                     	;# 
  3984     0005                     	;# 
  3985     0006                     	;# 
  3986     0007                     	;# 
  3987     0008                     	;# 
  3988     0009                     	;# 
  3989     000A                     	;# 
  3990     000B                     	;# 
  3991     000C                     	;# 
  3992     000D                     	;# 
  3993     000E                     	;# 
  3994     0010                     	;# 
  3995     0011                     	;# 
  3996     0012                     	;# 
  3997     0013                     	;# 
  3998     0014                     	;# 
  3999     0015                     	;# 
  4000     0016                     	;# 
  4001     0016                     	;# 
  4002     0017                     	;# 
  4003     0018                     	;# 
  4004     0019                     	;# 
  4005     001A                     	;# 
  4006     001A                     	;# 
  4007     001B                     	;# 
  4008     001B                     	;# 
  4009     001C                     	;# 
  4010     001D                     	;# 
  4011     001E                     	;# 
  4012     001F                     	;# 
  4013     008C                     	;# 
  4014     008D                     	;# 
  4015     008E                     	;# 
  4016     0090                     	;# 
  4017     0091                     	;# 
  4018     0092                     	;# 
  4019     0093                     	;# 
  4020     0094                     	;# 
  4021     0095                     	;# 
  4022     0096                     	;# 
  4023     0098                     	;# 
  4024     0099                     	;# 
  4025     009A                     	;# 
  4026     009B                     	;# 
  4027     009B                     	;# 
  4028     009C                     	;# 
  4029     009D                     	;# 
  4030     009E                     	;# 
  4031     009F                     	;# 
  4032     010C                     	;# 
  4033     010D                     	;# 
  4034     010E                     	;# 
  4035     0111                     	;# 
  4036     0112                     	;# 
  4037     0113                     	;# 
  4038     0114                     	;# 
  4039     0115                     	;# 
  4040     0116                     	;# 
  4041     0117                     	;# 
  4042     0118                     	;# 
  4043     0119                     	;# 
  4044     011C                     	;# 
  4045     018C                     	;# 
  4046     018D                     	;# 
  4047     018E                     	;# 
  4048     0191                     	;# 
  4049     0191                     	;# 
  4050     0192                     	;# 
  4051     0193                     	;# 
  4052     0193                     	;# 
  4053     0194                     	;# 
  4054     0195                     	;# 
  4055     0196                     	;# 
  4056     0197                     	;# 
  4057     0199                     	;# 
  4058     0199                     	;# 
  4059     0199                     	;# 
  4060     019A                     	;# 
  4061     019A                     	;# 
  4062     019A                     	;# 
  4063     019B                     	;# 
  4064     019B                     	;# 
  4065     019B                     	;# 
  4066     019B                     	;# 
  4067     019B                     	;# 
  4068     019C                     	;# 
  4069     019C                     	;# 
  4070     019C                     	;# 
  4071     019D                     	;# 
  4072     019D                     	;# 
  4073     019D                     	;# 
  4074     019E                     	;# 
  4075     019E                     	;# 
  4076     019E                     	;# 
  4077     019F                     	;# 
  4078     019F                     	;# 
  4079     019F                     	;# 
  4080     019F                     	;# 
  4081     019F                     	;# 
  4082     020C                     	;# 
  4083     020D                     	;# 
  4084     020E                     	;# 
  4085     0211                     	;# 
  4086     0211                     	;# 
  4087     0212                     	;# 
  4088     0212                     	;# 
  4089     0213                     	;# 
  4090     0213                     	;# 
  4091     0214                     	;# 
  4092     0214                     	;# 
  4093     0215                     	;# 
  4094     0215                     	;# 
  4095     0215                     	;# 
  4096     0215                     	;# 
  4097     0216                     	;# 
  4098     0216                     	;# 
  4099     0217                     	;# 
  4100     0217                     	;# 
  4101     028C                     	;# 
  4102     028D                     	;# 
  4103     028E                     	;# 
  4104     0291                     	;# 
  4105     0291                     	;# 
  4106     0292                     	;# 
  4107     0293                     	;# 
  4108     0294                     	;# 
  4109     0298                     	;# 
  4110     0298                     	;# 
  4111     0299                     	;# 
  4112     029A                     	;# 
  4113     029B                     	;# 
  4114     029E                     	;# 
  4115     030C                     	;# 
  4116     030D                     	;# 
  4117     030E                     	;# 
  4118     038C                     	;# 
  4119     038D                     	;# 
  4120     038E                     	;# 
  4121     0391                     	;# 
  4122     0392                     	;# 
  4123     0393                     	;# 
  4124     0394                     	;# 
  4125     0395                     	;# 
  4126     0396                     	;# 
  4127     0397                     	;# 
  4128     0398                     	;# 
  4129     0399                     	;# 
  4130     040E                     	;# 
  4131     0413                     	;# 
  4132     0413                     	;# 
  4133     0414                     	;# 
  4134     0414                     	;# 
  4135     0415                     	;# 
  4136     0416                     	;# 
  4137     0417                     	;# 
  4138     0418                     	;# 
  4139     041A                     	;# 
  4140     041A                     	;# 
  4141     041B                     	;# 
  4142     041B                     	;# 
  4143     041C                     	;# 
  4144     041D                     	;# 
  4145     041E                     	;# 
  4146     041F                     	;# 
  4147     0493                     	;# 
  4148     0494                     	;# 
  4149     0495                     	;# 
  4150     0496                     	;# 
  4151     049A                     	;# 
  4152     049B                     	;# 
  4153     049C                     	;# 
  4154     049D                     	;# 
  4155     058C                     	;# 
  4156     058C                     	;# 
  4157     058D                     	;# 
  4158     058E                     	;# 
  4159     058E                     	;# 
  4160     058F                     	;# 
  4161     0590                     	;# 
  4162     0590                     	;# 
  4163     0591                     	;# 
  4164     0592                     	;# 
  4165     0592                     	;# 
  4166     0593                     	;# 
  4167     0594                     	;# 
  4168     0594                     	;# 
  4169     0595                     	;# 
  4170     0596                     	;# 
  4171     0596                     	;# 
  4172     0597                     	;# 
  4173     0598                     	;# 
  4174     0599                     	;# 
  4175     059A                     	;# 
  4176     059B                     	;# 
  4177     059B                     	;# 
  4178     059C                     	;# 
  4179     059D                     	;# 
  4180     060C                     	;# 
  4181     060C                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     060F                     	;# 
  4186     0610                     	;# 
  4187     0611                     	;# 
  4188     0612                     	;# 
  4189     0613                     	;# 
  4190     0614                     	;# 
  4191     0617                     	;# 
  4192     0617                     	;# 
  4193     0618                     	;# 
  4194     0619                     	;# 
  4195     061A                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     0691                     	;# 
  4200     0692                     	;# 
  4201     0693                     	;# 
  4202     0694                     	;# 
  4203     0695                     	;# 
  4204     0696                     	;# 
  4205     0697                     	;# 
  4206     0699                     	;# 
  4207     069A                     	;# 
  4208     0711                     	;# 
  4209     0712                     	;# 
  4210     0713                     	;# 
  4211     0714                     	;# 
  4212     0715                     	;# 
  4213     0718                     	;# 
  4214     0718                     	;# 
  4215     0719                     	;# 
  4216     071A                     	;# 
  4217     071A                     	;# 
  4218     071B                     	;# 
  4219     071C                     	;# 
  4220     071D                     	;# 
  4221     0791                     	;# 
  4222     0791                     	;# 
  4223     0792                     	;# 
  4224     0793                     	;# 
  4225     0793                     	;# 
  4226     0794                     	;# 
  4227     0795                     	;# 
  4228     0795                     	;# 
  4229     0796                     	;# 
  4230     0797                     	;# 
  4231     0797                     	;# 
  4232     0798                     	;# 
  4233     0799                     	;# 
  4234     079A                     	;# 
  4235     080C                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080E                     	;# 
  4240     080F                     	;# 
  4241     0810                     	;# 
  4242     0810                     	;# 
  4243     0811                     	;# 
  4244     0812                     	;# 
  4245     0812                     	;# 
  4246     0813                     	;# 
  4247     0814                     	;# 
  4248     0815                     	;# 
  4249     0816                     	;# 
  4250     0817                     	;# 
  4251     0818                     	;# 
  4252     0819                     	;# 
  4253     081A                     	;# 
  4254     081A                     	;# 
  4255     081B                     	;# 
  4256     081C                     	;# 
  4257     081C                     	;# 
  4258     081D                     	;# 
  4259     088C                     	;# 
  4260     088D                     	;# 
  4261     088E                     	;# 
  4262     088F                     	;# 
  4263     088F                     	;# 
  4264     0890                     	;# 
  4265     0891                     	;# 
  4266     0892                     	;# 
  4267     0893                     	;# 
  4268     0893                     	;# 
  4269     0894                     	;# 
  4270     0895                     	;# 
  4271     0896                     	;# 
  4272     0897                     	;# 
  4273     0897                     	;# 
  4274     0898                     	;# 
  4275     0899                     	;# 
  4276     0D8C                     	;# 
  4277     0D8C                     	;# 
  4278     0D8D                     	;# 
  4279     0D8E                     	;# 
  4280     0D8F                     	;# 
  4281     0D8F                     	;# 
  4282     0D90                     	;# 
  4283     0D91                     	;# 
  4284     0D92                     	;# 
  4285     0D92                     	;# 
  4286     0D93                     	;# 
  4287     0D94                     	;# 
  4288     0D95                     	;# 
  4289     0D95                     	;# 
  4290     0D96                     	;# 
  4291     0D97                     	;# 
  4292     0D98                     	;# 
  4293     0D99                     	;# 
  4294     0D9A                     	;# 
  4295     0D9B                     	;# 
  4296     0D9C                     	;# 
  4297     0D9D                     	;# 
  4298     0D9E                     	;# 
  4299     0D9E                     	;# 
  4300     0D9F                     	;# 
  4301     0DA0                     	;# 
  4302     0DA1                     	;# 
  4303     0DA1                     	;# 
  4304     0DA2                     	;# 
  4305     0DA3                     	;# 
  4306     0DA4                     	;# 
  4307     0DA4                     	;# 
  4308     0DA5                     	;# 
  4309     0DA6                     	;# 
  4310     0DA7                     	;# 
  4311     0DA7                     	;# 
  4312     0DA8                     	;# 
  4313     0DA9                     	;# 
  4314     0DAA                     	;# 
  4315     0DAB                     	;# 
  4316     0DAC                     	;# 
  4317     0DAD                     	;# 
  4318     0DAE                     	;# 
  4319     0DAF                     	;# 
  4320     0E0F                     	;# 
  4321     0E10                     	;# 
  4322     0E11                     	;# 
  4323     0E12                     	;# 
  4324     0E13                     	;# 
  4325     0E14                     	;# 
  4326     0E15                     	;# 
  4327     0E16                     	;# 
  4328     0E17                     	;# 
  4329     0E17                     	;# 
  4330     0E18                     	;# 
  4331     0E18                     	;# 
  4332     0E19                     	;# 
  4333     0E1A                     	;# 
  4334     0E1B                     	;# 
  4335     0E1B                     	;# 
  4336     0E1C                     	;# 
  4337     0E1D                     	;# 
  4338     0E1E                     	;# 
  4339     0E1E                     	;# 
  4340     0E1F                     	;# 
  4341     0E20                     	;# 
  4342     0E21                     	;# 
  4343     0E22                     	;# 
  4344     0E23                     	;# 
  4345     0E24                     	;# 
  4346     0E25                     	;# 
  4347     0E26                     	;# 
  4348     0E27                     	;# 
  4349     0E28                     	;# 
  4350     0E29                     	;# 
  4351     0E2A                     	;# 
  4352     0E2B                     	;# 
  4353     0E2C                     	;# 
  4354     0E2D                     	;# 
  4355     0E2E                     	;# 
  4356     0E90                     	;# 
  4357     0E91                     	;# 
  4358     0E92                     	;# 
  4359     0E94                     	;# 
  4360     0E95                     	;# 
  4361     0E9C                     	;# 
  4362     0E9D                     	;# 
  4363     0E9E                     	;# 
  4364     0E9F                     	;# 
  4365     0EA0                     	;# 
  4366     0EA1                     	;# 
  4367     0EA2                     	;# 
  4368     0EA3                     	;# 
  4369     0EA4                     	;# 
  4370     0EA5                     	;# 
  4371     0EA6                     	;# 
  4372     0EA7                     	;# 
  4373     0F0F                     	;# 
  4374     0F10                     	;# 
  4375     0F11                     	;# 
  4376     0F12                     	;# 
  4377     0F13                     	;# 
  4378     0F14                     	;# 
  4379     0F15                     	;# 
  4380     0F16                     	;# 
  4381     0F17                     	;# 
  4382     0F18                     	;# 
  4383     0F19                     	;# 
  4384     0F1A                     	;# 
  4385     0F1B                     	;# 
  4386     0F1C                     	;# 
  4387     0F1D                     	;# 
  4388     0F1E                     	;# 
  4389     0F1F                     	;# 
  4390     0F20                     	;# 
  4391     0F21                     	;# 
  4392     0F22                     	;# 
  4393     0F23                     	;# 
  4394     0FE4                     	;# 
  4395     0FE5                     	;# 
  4396     0FE6                     	;# 
  4397     0FE7                     	;# 
  4398     0FE8                     	;# 
  4399     0FE9                     	;# 
  4400     0FEA                     	;# 
  4401     0FEB                     	;# 
  4402     0FED                     	;# 
  4403     0FEE                     	;# 
  4404     0FEF                     	;# 
  4405     0000                     	;# 
  4406     0001                     	;# 
  4407     0002                     	;# 
  4408     0003                     	;# 
  4409     0004                     	;# 
  4410     0005                     	;# 
  4411     0006                     	;# 
  4412     0007                     	;# 
  4413     0008                     	;# 
  4414     0009                     	;# 
  4415     000A                     	;# 
  4416     000B                     	;# 
  4417     000C                     	;# 
  4418     000D                     	;# 
  4419     000E                     	;# 
  4420     0010                     	;# 
  4421     0011                     	;# 
  4422     0012                     	;# 
  4423     0013                     	;# 
  4424     0014                     	;# 
  4425     0015                     	;# 
  4426     0016                     	;# 
  4427     0016                     	;# 
  4428     0017                     	;# 
  4429     0018                     	;# 
  4430     0019                     	;# 
  4431     001A                     	;# 
  4432     001A                     	;# 
  4433     001B                     	;# 
  4434     001B                     	;# 
  4435     001C                     	;# 
  4436     001D                     	;# 
  4437     001E                     	;# 
  4438     001F                     	;# 
  4439     008C                     	;# 
  4440     008D                     	;# 
  4441     008E                     	;# 
  4442     0090                     	;# 
  4443     0091                     	;# 
  4444     0092                     	;# 
  4445     0093                     	;# 
  4446     0094                     	;# 
  4447     0095                     	;# 
  4448     0096                     	;# 
  4449     0098                     	;# 
  4450     0099                     	;# 
  4451     009A                     	;# 
  4452     009B                     	;# 
  4453     009B                     	;# 
  4454     009C                     	;# 
  4455     009D                     	;# 
  4456     009E                     	;# 
  4457     009F                     	;# 
  4458     010C                     	;# 
  4459     010D                     	;# 
  4460     010E                     	;# 
  4461     0111                     	;# 
  4462     0112                     	;# 
  4463     0113                     	;# 
  4464     0114                     	;# 
  4465     0115                     	;# 
  4466     0116                     	;# 
  4467     0117                     	;# 
  4468     0118                     	;# 
  4469     0119                     	;# 
  4470     011C                     	;# 
  4471     018C                     	;# 
  4472     018D                     	;# 
  4473     018E                     	;# 
  4474     0191                     	;# 
  4475     0191                     	;# 
  4476     0192                     	;# 
  4477     0193                     	;# 
  4478     0193                     	;# 
  4479     0194                     	;# 
  4480     0195                     	;# 
  4481     0196                     	;# 
  4482     0197                     	;# 
  4483     0199                     	;# 
  4484     0199                     	;# 
  4485     0199                     	;# 
  4486     019A                     	;# 
  4487     019A                     	;# 
  4488     019A                     	;# 
  4489     019B                     	;# 
  4490     019B                     	;# 
  4491     019B                     	;# 
  4492     019B                     	;# 
  4493     019B                     	;# 
  4494     019C                     	;# 
  4495     019C                     	;# 
  4496     019C                     	;# 
  4497     019D                     	;# 
  4498     019D                     	;# 
  4499     019D                     	;# 
  4500     019E                     	;# 
  4501     019E                     	;# 
  4502     019E                     	;# 
  4503     019F                     	;# 
  4504     019F                     	;# 
  4505     019F                     	;# 
  4506     019F                     	;# 
  4507     019F                     	;# 
  4508     020C                     	;# 
  4509     020D                     	;# 
  4510     020E                     	;# 
  4511     0211                     	;# 
  4512     0211                     	;# 
  4513     0212                     	;# 
  4514     0212                     	;# 
  4515     0213                     	;# 
  4516     0213                     	;# 
  4517     0214                     	;# 
  4518     0214                     	;# 
  4519     0215                     	;# 
  4520     0215                     	;# 
  4521     0215                     	;# 
  4522     0215                     	;# 
  4523     0216                     	;# 
  4524     0216                     	;# 
  4525     0217                     	;# 
  4526     0217                     	;# 
  4527     028C                     	;# 
  4528     028D                     	;# 
  4529     028E                     	;# 
  4530     0291                     	;# 
  4531     0291                     	;# 
  4532     0292                     	;# 
  4533     0293                     	;# 
  4534     0294                     	;# 
  4535     0298                     	;# 
  4536     0298                     	;# 
  4537     0299                     	;# 
  4538     029A                     	;# 
  4539     029B                     	;# 
  4540     029E                     	;# 
  4541     030C                     	;# 
  4542     030D                     	;# 
  4543     030E                     	;# 
  4544     038C                     	;# 
  4545     038D                     	;# 
  4546     038E                     	;# 
  4547     0391                     	;# 
  4548     0392                     	;# 
  4549     0393                     	;# 
  4550     0394                     	;# 
  4551     0395                     	;# 
  4552     0396                     	;# 
  4553     0397                     	;# 
  4554     0398                     	;# 
  4555     0399                     	;# 
  4556     040E                     	;# 
  4557     0413                     	;# 
  4558     0413                     	;# 
  4559     0414                     	;# 
  4560     0414                     	;# 
  4561     0415                     	;# 
  4562     0416                     	;# 
  4563     0417                     	;# 
  4564     0418                     	;# 
  4565     041A                     	;# 
  4566     041A                     	;# 
  4567     041B                     	;# 
  4568     041B                     	;# 
  4569     041C                     	;# 
  4570     041D                     	;# 
  4571     041E                     	;# 
  4572     041F                     	;# 
  4573     0493                     	;# 
  4574     0494                     	;# 
  4575     0495                     	;# 
  4576     0496                     	;# 
  4577     049A                     	;# 
  4578     049B                     	;# 
  4579     049C                     	;# 
  4580     049D                     	;# 
  4581     058C                     	;# 
  4582     058C                     	;# 
  4583     058D                     	;# 
  4584     058E                     	;# 
  4585     058E                     	;# 
  4586     058F                     	;# 
  4587     0590                     	;# 
  4588     0590                     	;# 
  4589     0591                     	;# 
  4590     0592                     	;# 
  4591     0592                     	;# 
  4592     0593                     	;# 
  4593     0594                     	;# 
  4594     0594                     	;# 
  4595     0595                     	;# 
  4596     0596                     	;# 
  4597     0596                     	;# 
  4598     0597                     	;# 
  4599     0598                     	;# 
  4600     0599                     	;# 
  4601     059A                     	;# 
  4602     059B                     	;# 
  4603     059B                     	;# 
  4604     059C                     	;# 
  4605     059D                     	;# 
  4606     060C                     	;# 
  4607     060C                     	;# 
  4608     060D                     	;# 
  4609     060E                     	;# 
  4610     060F                     	;# 
  4611     060F                     	;# 
  4612     0610                     	;# 
  4613     0611                     	;# 
  4614     0612                     	;# 
  4615     0613                     	;# 
  4616     0614                     	;# 
  4617     0617                     	;# 
  4618     0617                     	;# 
  4619     0618                     	;# 
  4620     0619                     	;# 
  4621     061A                     	;# 
  4622     061A                     	;# 
  4623     061B                     	;# 
  4624     061C                     	;# 
  4625     0691                     	;# 
  4626     0692                     	;# 
  4627     0693                     	;# 
  4628     0694                     	;# 
  4629     0695                     	;# 
  4630     0696                     	;# 
  4631     0697                     	;# 
  4632     0699                     	;# 
  4633     069A                     	;# 
  4634     0711                     	;# 
  4635     0712                     	;# 
  4636     0713                     	;# 
  4637     0714                     	;# 
  4638     0715                     	;# 
  4639     0718                     	;# 
  4640     0718                     	;# 
  4641     0719                     	;# 
  4642     071A                     	;# 
  4643     071A                     	;# 
  4644     071B                     	;# 
  4645     071C                     	;# 
  4646     071D                     	;# 
  4647     0791                     	;# 
  4648     0791                     	;# 
  4649     0792                     	;# 
  4650     0793                     	;# 
  4651     0793                     	;# 
  4652     0794                     	;# 
  4653     0795                     	;# 
  4654     0795                     	;# 
  4655     0796                     	;# 
  4656     0797                     	;# 
  4657     0797                     	;# 
  4658     0798                     	;# 
  4659     0799                     	;# 
  4660     079A                     	;# 
  4661     080C                     	;# 
  4662     080C                     	;# 
  4663     080D                     	;# 
  4664     080E                     	;# 
  4665     080E                     	;# 
  4666     080F                     	;# 
  4667     0810                     	;# 
  4668     0810                     	;# 
  4669     0811                     	;# 
  4670     0812                     	;# 
  4671     0812                     	;# 
  4672     0813                     	;# 
  4673     0814                     	;# 
  4674     0815                     	;# 
  4675     0816                     	;# 
  4676     0817                     	;# 
  4677     0818                     	;# 
  4678     0819                     	;# 
  4679     081A                     	;# 
  4680     081A                     	;# 
  4681     081B                     	;# 
  4682     081C                     	;# 
  4683     081C                     	;# 
  4684     081D                     	;# 
  4685     088C                     	;# 
  4686     088D                     	;# 
  4687     088E                     	;# 
  4688     088F                     	;# 
  4689     088F                     	;# 
  4690     0890                     	;# 
  4691     0891                     	;# 
  4692     0892                     	;# 
  4693     0893                     	;# 
  4694     0893                     	;# 
  4695     0894                     	;# 
  4696     0895                     	;# 
  4697     0896                     	;# 
  4698     0897                     	;# 
  4699     0897                     	;# 
  4700     0898                     	;# 
  4701     0899                     	;# 
  4702     0D8C                     	;# 
  4703     0D8C                     	;# 
  4704     0D8D                     	;# 
  4705     0D8E                     	;# 
  4706     0D8F                     	;# 
  4707     0D8F                     	;# 
  4708     0D90                     	;# 
  4709     0D91                     	;# 
  4710     0D92                     	;# 
  4711     0D92                     	;# 
  4712     0D93                     	;# 
  4713     0D94                     	;# 
  4714     0D95                     	;# 
  4715     0D95                     	;# 
  4716     0D96                     	;# 
  4717     0D97                     	;# 
  4718     0D98                     	;# 
  4719     0D99                     	;# 
  4720     0D9A                     	;# 
  4721     0D9B                     	;# 
  4722     0D9C                     	;# 
  4723     0D9D                     	;# 
  4724     0D9E                     	;# 
  4725     0D9E                     	;# 
  4726     0D9F                     	;# 
  4727     0DA0                     	;# 
  4728     0DA1                     	;# 
  4729     0DA1                     	;# 
  4730     0DA2                     	;# 
  4731     0DA3                     	;# 
  4732     0DA4                     	;# 
  4733     0DA4                     	;# 
  4734     0DA5                     	;# 
  4735     0DA6                     	;# 
  4736     0DA7                     	;# 
  4737     0DA7                     	;# 
  4738     0DA8                     	;# 
  4739     0DA9                     	;# 
  4740     0DAA                     	;# 
  4741     0DAB                     	;# 
  4742     0DAC                     	;# 
  4743     0DAD                     	;# 
  4744     0DAE                     	;# 
  4745     0DAF                     	;# 
  4746     0E0F                     	;# 
  4747     0E10                     	;# 
  4748     0E11                     	;# 
  4749     0E12                     	;# 
  4750     0E13                     	;# 
  4751     0E14                     	;# 
  4752     0E15                     	;# 
  4753     0E16                     	;# 
  4754     0E17                     	;# 
  4755     0E17                     	;# 
  4756     0E18                     	;# 
  4757     0E18                     	;# 
  4758     0E19                     	;# 
  4759     0E1A                     	;# 
  4760     0E1B                     	;# 
  4761     0E1B                     	;# 
  4762     0E1C                     	;# 
  4763     0E1D                     	;# 
  4764     0E1E                     	;# 
  4765     0E1E                     	;# 
  4766     0E1F                     	;# 
  4767     0E20                     	;# 
  4768     0E21                     	;# 
  4769     0E22                     	;# 
  4770     0E23                     	;# 
  4771     0E24                     	;# 
  4772     0E25                     	;# 
  4773     0E26                     	;# 
  4774     0E27                     	;# 
  4775     0E28                     	;# 
  4776     0E29                     	;# 
  4777     0E2A                     	;# 
  4778     0E2B                     	;# 
  4779     0E2C                     	;# 
  4780     0E2D                     	;# 
  4781     0E2E                     	;# 
  4782     0E90                     	;# 
  4783     0E91                     	;# 
  4784     0E92                     	;# 
  4785     0E94                     	;# 
  4786     0E95                     	;# 
  4787     0E9C                     	;# 
  4788     0E9D                     	;# 
  4789     0E9E                     	;# 
  4790     0E9F                     	;# 
  4791     0EA0                     	;# 
  4792     0EA1                     	;# 
  4793     0EA2                     	;# 
  4794     0EA3                     	;# 
  4795     0EA4                     	;# 
  4796     0EA5                     	;# 
  4797     0EA6                     	;# 
  4798     0EA7                     	;# 
  4799     0F0F                     	;# 
  4800     0F10                     	;# 
  4801     0F11                     	;# 
  4802     0F12                     	;# 
  4803     0F13                     	;# 
  4804     0F14                     	;# 
  4805     0F15                     	;# 
  4806     0F16                     	;# 
  4807     0F17                     	;# 
  4808     0F18                     	;# 
  4809     0F19                     	;# 
  4810     0F1A                     	;# 
  4811     0F1B                     	;# 
  4812     0F1C                     	;# 
  4813     0F1D                     	;# 
  4814     0F1E                     	;# 
  4815     0F1F                     	;# 
  4816     0F20                     	;# 
  4817     0F21                     	;# 
  4818     0F22                     	;# 
  4819     0F23                     	;# 
  4820     0FE4                     	;# 
  4821     0FE5                     	;# 
  4822     0FE6                     	;# 
  4823     0FE7                     	;# 
  4824     0FE8                     	;# 
  4825     0FE9                     	;# 
  4826     0FEA                     	;# 
  4827     0FEB                     	;# 
  4828     0FED                     	;# 
  4829     0FEE                     	;# 
  4830     0FEF                     	;# 
  4831                           
  4832 ;; Function _I2C1_Deinitialize is unused but had its address taken
  4833     0000                     
  4834 ;; Function _I2C1_WriteRead is unused but had its address taken
  4835     0000                     
  4836 ;; Function _I2C1_ErrorGet is unused but had its address taken
  4837     0000                     
  4838 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  4839     0000                     
  4840 ;; Function _EUSART_Deinitialize is unused but had its address taken
  4841     0000                     
  4842 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  4843     0000                     
  4844 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  4845     0000                     
  4846 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  4847     0000                     
  4848 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  4849     0000                     
  4850 ;; Function _EUSART_IsTxDone is unused but had its address taken
  4851     0000                     
  4852 ;; Function _EUSART_ErrorGet is unused but had its address taken
  4853     0000                     
  4854                           	psect	idataBANK0
  4855     0D71                     __pidataBANK0:
  4856                           
  4857                           ;initializer for _kaps
  4858     0D71  3451               	retlw	81
  4859     0D72  3400               	retlw	0
  4860     0D73  3400               	retlw	0
  4861     0D74  3400               	retlw	0
  4862     0D75  3400               	retlw	0
  4863     0D76  3400               	retlw	0
  4864     0D77  3400               	retlw	0
  4865                           
  4866                           	psect	idataBANK1
  4867     0E6F                     __pidataBANK1:
  4868                           
  4869                           ;initializer for _sspas
  4870     0E6F  3401               	retlw	1
  4871     0E70  3400               	retlw	0
  4872     0E71  3400               	retlw	0
  4873     0E72  3400               	retlw	0
  4874     0E73  3400               	retlw	0
  4875     0E74  3400               	retlw	0
  4876     0E75  3400               	retlw	0
  4877     0E76  3400               	retlw	0
  4878     0E77  3401               	retlw	1
  4879     0E78  3400               	retlw	0
  4880     0E79  3400               	retlw	0
  4881     0E7A  3400               	retlw	0
  4882     0E7B  3400               	retlw	0
  4883     0E7C  3400               	retlw	0
  4884     0E7D  3400               	retlw	0
  4885     0E7E  3400               	retlw	0
  4886     0E7F  3401               	retlw	1
  4887     0E80  3400               	retlw	0
  4888     0E81  3400               	retlw	0
  4889     0E82  3400               	retlw	0
  4890     0E83  3400               	retlw	0
  4891     0E84  3400               	retlw	0
  4892     0E85  3400               	retlw	0
  4893     0E86  3400               	retlw	0
  4894                           
  4895                           	psect	stringtext1
  4896     078F                     __pstringtext1:
  4897     078F                     _UART:
  4898     078F  3487               	retlw	low _EUSART_Initialize
  4899     0790  340E               	retlw	high _EUSART_Initialize
  4900     0791  3400               	retlw	0
  4901     0792  3400               	retlw	0
  4902     0793  347C               	retlw	low _EUSART_Read
  4903     0794  340F               	retlw	high _EUSART_Read
  4904     0795  3401               	retlw	low _EUSART_Write
  4905     0796  340D               	retlw	high _EUSART_Write
  4906     0797  3413               	retlw	low _EUSART_IsRxReady
  4907     0798  340D               	retlw	high _EUSART_IsRxReady
  4908     0799  34EF               	retlw	low _EUSART_IsTxReady
  4909     079A  340D               	retlw	high _EUSART_IsTxReady
  4910     079B  3400               	retlw	0
  4911     079C  3400               	retlw	0
  4912     079D  3400               	retlw	0
  4913     079E  3400               	retlw	0
  4914     079F  3400               	retlw	0
  4915     07A0  3400               	retlw	0
  4916     07A1  3400               	retlw	0
  4917     07A2  3400               	retlw	0
  4918     07A3  3400               	retlw	0
  4919     07A4  3400               	retlw	0
  4920     07A5  3400               	retlw	0
  4921     07A6  3400               	retlw	0
  4922     07A7  3400               	retlw	0
  4923     07A8  3400               	retlw	0
  4924     07A9  3400               	retlw	0
  4925     07AA  3400               	retlw	0
  4926     07AB  3400               	retlw	0
  4927     07AC  3400               	retlw	0
  4928     07AD  3400               	retlw	0
  4929     07AE  3400               	retlw	0
  4930     07AF  3400               	retlw	0
  4931     07B0  3400               	retlw	0
  4932     07B1  3400               	retlw	0
  4933     07B2  3400               	retlw	0
  4934     07B3  3400               	retlw	0
  4935     07B4  3400               	retlw	0
  4936     07B5  3400               	retlw	0
  4937     07B6  3400               	retlw	0
  4938     07B7  349B               	retlw	low _EUSART_FramingErrorCallbackRegister
  4939     07B8  340D               	retlw	high _EUSART_FramingErrorCallbackRegister
  4940     07B9  34C9               	retlw	low _EUSART_OverrunErrorCallbackRegister
  4941     07BA  340D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  4942     07BB  3400               	retlw	0
  4943     07BC  3400               	retlw	0
  4944     07BD  3400               	retlw	0
  4945     07BE  3400               	retlw	0
  4946     07BF                     __end_of_UART:
  4947                           
  4948                           	psect	stringtext2
  4949     07ED                     __pstringtext2:
  4950     07ED                     _I2C_Host:
  4951     07ED  3459               	retlw	low _I2C1_Initialize
  4952     07EE  340E               	retlw	high _I2C1_Initialize
  4953     07EF  3400               	retlw	0
  4954     07F0  3400               	retlw	0
  4955     07F1  34A4               	retlw	low _I2C1_Write
  4956     07F2  340E               	retlw	high _I2C1_Write
  4957     07F3  34E4               	retlw	low _I2C1_Read
  4958     07F4  340E               	retlw	high _I2C1_Read
  4959     07F5  3400               	retlw	0
  4960     07F6  3400               	retlw	0
  4961     07F7  3400               	retlw	0
  4962     07F8  3400               	retlw	0
  4963     07F9  3400               	retlw	0
  4964     07FA  3400               	retlw	0
  4965     07FB  34FE               	retlw	low _I2C1_IsBusy
  4966     07FC  340D               	retlw	high _I2C1_IsBusy
  4967     07FD  34D5               	retlw	low _I2C1_CallbackRegister
  4968     07FE  340D               	retlw	high _I2C1_CallbackRegister
  4969     07FF  3400               	retlw	0
  4970     0800  3400               	retlw	0
  4971     0801                     __end_of_I2C_Host:
  4972                           
  4973                           	psect	stringtext3
  4974     0801                     __pstringtext3:
  4975     0801                     _i2c1_eventTable:
  4976     0801  34F1               	retlw	low _I2C1_EVENT_IDLE
  4977     0802  340C               	retlw	high _I2C1_EVENT_IDLE
  4978     0803  3478               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  4979     0804  340D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  4980     0805  3447               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  4981     0806  340D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  4982     0807  34A6               	retlw	low _I2C1_EVENT_TX
  4983     0808  340F               	retlw	high _I2C1_EVENT_TX
  4984     0809  34EF               	retlw	low _I2C1_EVENT_RX
  4985     080A  3406               	retlw	high _I2C1_EVENT_RX
  4986     080B  341D               	retlw	low _I2C1_EVENT_NACK
  4987     080C  340D               	retlw	high _I2C1_EVENT_NACK
  4988     080D  3423               	retlw	low _I2C1_EVENT_ERROR
  4989     080E  340D               	retlw	high _I2C1_EVENT_ERROR
  4990     080F  3480               	retlw	low _I2C1_EVENT_STOP
  4991     0810  340D               	retlw	high _I2C1_EVENT_STOP
  4992     0811  344E               	retlw	low _I2C1_EVENT_RESET
  4993     0812  340D               	retlw	high _I2C1_EVENT_RESET
  4994     0813                     __end_of_i2c1_eventTable:
  4995                           
  4996                           	psect	nvBANK0
  4997     006B                     __pnvBANK0:
  4998     006B                     _ADC_InterruptHandler:
  4999     006B                     	ds	2
  5000     000B                     _INTCONbits	set	11
  5001     0011                     _PIR2bits	set	17
  5002     0010                     _PIR1bits	set	16
  5003     0095                     _OPTION_REGbits	set	149
  5004     008E                     _TRISC	set	142
  5005     008D                     _TRISB	set	141
  5006     008C                     _TRISA	set	140
  5007     0098                     _OSCTUNE	set	152
  5008     0099                     _OSCCON	set	153
  5009     0091                     _PIE2bits	set	145
  5010     009D                     _ADCON0bits	set	157
  5011     0090                     _PIE1bits	set	144
  5012     009D                     _ADCON0	set	157
  5013     009F                     _ADCON2	set	159
  5014     009C                     _ADRESH	set	156
  5015     009B                     _ADRESL	set	155
  5016     009E                     _ADCON1	set	158
  5017     010E                     _LATCbits	set	270
  5018     010E                     _LATC	set	270
  5019     010D                     _LATB	set	269
  5020     010C                     _LATA	set	268
  5021     0116                     _BORCON	set	278
  5022     019A                     _TX1REG	set	410
  5023     0199                     _RC1REG	set	409
  5024     019F                     _BAUD1CONbits	set	415
  5025     019E                     _TX1STAbits	set	414
  5026     019D                     _RC1STAbits	set	413
  5027     019C                     _SPBRGH	set	412
  5028     019B                     _SPBRGL	set	411
  5029     019E                     _TX1STA	set	414
  5030     019D                     _RC1STA	set	413
  5031     019F                     _BAUD1CON	set	415
  5032     018E                     _ANSELC	set	398
  5033     018D                     _ANSELB	set	397
  5034     018C                     _ANSELA	set	396
  5035     020E                     _WPUC	set	526
  5036     020D                     _WPUB	set	525
  5037     020C                     _WPUA	set	524
  5038     0216                     _SSP1CON2bits	set	534
  5039     0211                     _SSP1BUF	set	529
  5040     0214                     _SSP1STATbits	set	532
  5041     0215                     _SSP1CON1bits	set	533
  5042     0212                     _SSP1ADD	set	530
  5043     0217                     _SSP1CON3	set	535
  5044     0216                     _SSP1CON2	set	534
  5045     0215                     _SSP1CON1	set	533
  5046     0214                     _SSP1STAT	set	532
  5047     028E                     _ODCONC	set	654
  5048     028D                     _ODCONB	set	653
  5049     028C                     _ODCONA	set	652
  5050     030E                     _SLRCONC	set	782
  5051     030D                     _SLRCONB	set	781
  5052     030C                     _SLRCONA	set	780
  5053     0399                     _IOCCF	set	921
  5054     0398                     _IOCCN	set	920
  5055     0397                     _IOCCP	set	919
  5056     0396                     _IOCBF	set	918
  5057     0395                     _IOCBN	set	917
  5058     0394                     _IOCBP	set	916
  5059     0393                     _IOCAF	set	915
  5060     0392                     _IOCAN	set	914
  5061     0391                     _IOCAP	set	913
  5062     038E                     _INLVLC	set	910
  5063     038D                     _INLVLB	set	909
  5064     038C                     _INLVLA	set	908
  5065     0E21                     _SSPDATPPS	set	3617
  5066     0E20                     _SSPCLKPPS	set	3616
  5067     0E24                     _RXPPS	set	3620
  5068     0E9D                     _RB5PPS	set	3741
  5069     0E9E                     _RB6PPS	set	3742
  5070     0EA2                     _RC2PPS	set	3746
  5071                           
  5072                           	psect	cinit
  5073     0038                     start_initialization:	
  5074                           ; #config settings
  5075                           
  5076     0038                     __initialization:
  5077                           
  5078                           ; Initialize objects allocated to BANK0
  5079     0038  3071               	movlw	low __pidataBANK0
  5080     0039  0084               	movwf	4
  5081     003A  308D               	movlw	(high __pidataBANK0)| (0+128)
  5082     003B  0085               	movwf	5
  5083     003C  3064               	movlw	low __pdataBANK0
  5084     003D  0086               	movwf	6
  5085     003E  3000               	movlw	high __pdataBANK0
  5086     003F  0087               	movwf	7
  5087     0040  3007               	movlw	7
  5088     0041  318D  2541  3180   	fcall	init_ram
  5089                           
  5090                           ; Initialize objects allocated to BANK1
  5091     0044  306F               	movlw	low __pidataBANK1
  5092     0045  0084               	movwf	4
  5093     0046  308E               	movlw	(high __pidataBANK1)| (0+128)
  5094     0047  0085               	movwf	5
  5095     0048  30A0               	movlw	low __pdataBANK1
  5096     0049  0086               	movwf	6
  5097     004A  3000               	movlw	high __pdataBANK1
  5098     004B  0087               	movwf	7
  5099     004C  3018               	movlw	24
  5100     004D  318D  2541  3180   	fcall	init_ram
  5101                           
  5102                           ; Clear objects allocated to COMMON
  5103     0050  01F6               	clrf	__pbssCOMMON& (0+127)
  5104     0051  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5105     0052  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5106     0053  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5107                           
  5108                           ; Clear objects allocated to BANK0
  5109     0054  3052               	movlw	low __pbssBANK0
  5110     0055  0084               	movwf	4
  5111     0056  3000               	movlw	high __pbssBANK0
  5112     0057  0085               	movwf	5
  5113     0058  3012               	movlw	18
  5114     0059  318D  253B  3180   	fcall	clear_ram0
  5115                           
  5116                           ; Clear objects allocated to BANK1
  5117     005C  30B8               	movlw	low __pbssBANK1
  5118     005D  0084               	movwf	4
  5119     005E  3000               	movlw	high __pbssBANK1
  5120     005F  0085               	movwf	5
  5121     0060  3017               	movlw	23
  5122     0061  318D  253B  3180   	fcall	clear_ram0
  5123     0064                     end_of_initialization:	
  5124                           ;End of C runtime variable initialization code
  5125                           
  5126     0064                     __end_of__initialization:
  5127     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5128     0065  0020               	movlb	0
  5129     0066  318F  2F54         	ljmp	_main	;jump to C main() function
  5130                           
  5131                           	psect	bssCOMMON
  5132     0076                     __pbssCOMMON:
  5133     0076                     _EUSART_FramingErrorHandler:
  5134     0076                     	ds	2
  5135     0078                     _INT_InterruptHandler:
  5136     0078                     	ds	2
  5137                           
  5138                           	psect	bssBANK0
  5139     0052                     __pbssBANK0:
  5140     0052                     _i2c1Status:
  5141     0052                     	ds	12
  5142     005E                     _EUSART_OverrunErrorHandler:
  5143     005E                     	ds	2
  5144     0060                     _eusartRxLastError:
  5145     0060                     	ds	2
  5146     0062                     _I2C1_Callback:
  5147     0062                     	ds	2
  5148                           
  5149                           	psect	dataBANK0
  5150     0064                     __pdataBANK0:
  5151     0064                     _kaps:
  5152     0064                     	ds	7
  5153                           
  5154                           	psect	bssBANK1
  5155     00B8                     __pbssBANK1:
  5156     00B8                     _parser:
  5157     00B8                     	ds	8
  5158     00C0                     KAPS_getPos@F9702:
  5159     00C0                     	ds	4
  5160     00C4                     ProcessMsg@payload:
  5161     00C4                     	ds	6
  5162     00CA                     _parserDataBuffer:
  5163     00CA                     	ds	5
  5164                           
  5165                           	psect	dataBANK1
  5166     00A0                     __pdataBANK1:
  5167     00A0                     _sspas:
  5168     00A0                     	ds	24
  5169                           
  5170                           	psect	inittext
  5171     0D41                     init_ram:
  5172     0D41  00FE               	movwf	btemp
  5173     0D42                     initloop:
  5174     0D42  0012               	moviw fsr0++
  5175     0D43  001E               	movwi fsr1++
  5176     0D44  0BFE               	decfsz	btemp,f
  5177     0D45  2D42               	goto	initloop
  5178     0D46  3400               	retlw	0
  5179                           
  5180                           	psect	clrtext
  5181     0D3B                     clear_ram0:	
  5182                           ;	Called with FSR0 containing the base address, and
  5183                           ;	WREG with the size to clear
  5184                           
  5185     0D3B  0064               	clrwdt	;clear the watchdog before getting into this loop
  5186     0D3C                     clrloop0:
  5187     0D3C  0180               	clrf	0	;clear RAM location pointed to by FSR
  5188     0D3D  3101               	addfsr 0,1
  5189     0D3E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5190     0D3F  2D3C               	goto	clrloop0	;have we reached the end yet?
  5191     0D40  3400               	retlw	0	;all done for this memory range, return
  5192                           
  5193                           	psect	cstackCOMMON
  5194     0070                     __pcstackCOMMON:
  5195     0070                     ?_ADC_DefaultInterruptHandler:
  5196     0070                     ??_ADC_DefaultInterruptHandler:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199     0070                     ?_I2C1_Initialize:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202     0070                     ?_I2C1_IsBusy:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205     0070                     ?_I2C1_EVENT_IDLE:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208     0070                     ??_I2C1_EVENT_IDLE:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220     0070                     ?_I2C1_EVENT_TX:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223     0070                     ?_I2C1_EVENT_RX:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226     0070                     ??_I2C1_EVENT_RX:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229     0070                     ?_I2C1_EVENT_NACK:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232     0070                     ??_I2C1_EVENT_NACK:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235     0070                     ?_I2C1_EVENT_ERROR:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238     0070                     ??_I2C1_EVENT_ERROR:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241     0070                     ?_I2C1_EVENT_STOP:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244     0070                     ??_I2C1_EVENT_STOP:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247     0070                     ?_I2C1_EVENT_RESET:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250     0070                     ??_I2C1_EVENT_RESET:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253     0070                     ?_I2C1_InterruptsEnable:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256     0070                     ?_I2C1_DefaultCallback:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259     0070                     ??_I2C1_DefaultCallback:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262     0070                     ?_I2C1_WriteStart:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265     0070                     ?_I2C1_ReadStart:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268     0070                     ?_I2C1_EventHandler:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271     0070                     ?_I2C1_ErrorEventHandler:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274     0070                     ?_I2C1_StartSend:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277     0070                     ?_I2C1_InterruptClear:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280     0070                     ??_I2C1_InterruptClear:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283     0070                     ?_I2C1_ErrorInterruptClear:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286     0070                     ??_I2C1_ErrorInterruptClear:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289     0070                     ?_I2C1_StatusFlagsClear:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292     0070                     ??_I2C1_StatusFlagsClear:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295     0070                     ?_I2C1_IsAddr:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298     0070                     ??_I2C1_IsAddr:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301     0070                     ?_I2C1_IsNack:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304     0070                     ??_I2C1_IsNack:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307     0070                     ?_I2C1_IsData:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310     0070                     ??_I2C1_IsData:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313     0070                     ?_I2C1_DataTransmit:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316     0070                     ??_I2C1_DataTransmit:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319     0070                     ?_I2C1_RestartEnable:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322     0070                     ??_I2C1_RestartEnable:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325     0070                     ?_I2C1_IsRxBufFull:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328     0070                     ??_I2C1_IsRxBufFull:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331     0070                     ?_I2C1_DataReceive:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334     0070                     ??_I2C1_DataReceive:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337     0070                     ?_I2C1_AckSend:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340     0070                     ??_I2C1_AckSend:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343     0070                     ?_I2C1_RestartDisable:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346     0070                     ??_I2C1_RestartDisable:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349     0070                     ?_I2C1_NackSend:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352     0070                     ??_I2C1_NackSend:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355     0070                     ?_I2C1_ReceiveEnable:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358     0070                     ??_I2C1_ReceiveEnable:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361     0070                     ?_I2C1_StopSend:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364     0070                     ??_I2C1_StopSend:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367     0070                     ?_I2C1_BusReset:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370     0070                     ??_I2C1_BusReset:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373     0070                     ?_EUSART_Initialize:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376     0070                     ?_EUSART_Read:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379     0070                     ?_EUSART_IsRxReady:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382     0070                     ?_EUSART_IsTxReady:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391     0070                     ?_SSPA_getTemp:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394     0070                     ?_SSPA_getPOut:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397     0070                     ?_KAPS_getStatus:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400     0070                     ?_KAPS_getPos:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403     0070                     ?_KAPS_getIndex:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406     0070                     ?_KAPS_GoToIdx:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409     0070                     ?_KAPS_setRelPos:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412     0070                     ?_Parse:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415     0070                     ?_ADC_Initialize:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418     0070                     ?_ADC_SelectChannel:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421     0070                     ?_ADC_StartConversion:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424     0070                     ?_ADC_IsConversionDone:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427     0070                     ?_ADC_ISR:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430     0070                     ??_ADC_ISR:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433     0070                     ?_I2C1_ISR:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436     0070                     ?_I2C1_ERROR_ISR:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439     0070                     ?_I2C1_Close:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442     0070                     ??_I2C1_Close:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445     0070                     ?_CLOCK_Initialize:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448     0070                     ?_PIN_MANAGER_Initialize:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451     0070                     ?_INTERRUPT_Initialize:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454     0070                     ?_INTERRUPT_InterruptManager:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457     0070                     ?_SYSTEM_Initialize:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460     0070                     ?_SendSync:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463     0070                     ?_SendNack:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466     0070                     ?_main:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469     0070                     I2C1_EVENT_NACK@retEventState:	
  5470                           ; 2 bytes @ 0x0
  5471                           
  5472     0070                     I2C1_EVENT_ERROR@retEventState:	
  5473                           ; 1 bytes @ 0x0
  5474                           
  5475     0070                     I2C1_DataTransmit@data:	
  5476                           ; 1 bytes @ 0x0
  5477                           
  5478                           
  5479                           ; 1 bytes @ 0x0
  5480     0070                     	ds	1
  5481     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  5482     0071                     ??_I2C1_EVENT_TX:	
  5483                           ; 1 bytes @ 0x1
  5484                           
  5485     0071                     I2C1_EVENT_TX@retEventState:	
  5486                           ; 1 bytes @ 0x1
  5487                           
  5488     0071                     I2C1_EVENT_RX@retEventState:	
  5489                           ; 1 bytes @ 0x1
  5490                           
  5491                           
  5492                           ; 1 bytes @ 0x1
  5493     0071                     	ds	1
  5494     0072                     ??_I2C1_EventHandler:
  5495     0072                     ??_I2C1_ErrorEventHandler:	
  5496                           ; 1 bytes @ 0x2
  5497                           
  5498                           
  5499                           ; 1 bytes @ 0x2
  5500     0072                     	ds	2
  5501     0074                     ?_ADC_SetInterruptHandler:
  5502     0074                     ??_I2C1_IsBusy:	
  5503                           ; 1 bytes @ 0x4
  5504                           
  5505     0074                     ?_I2C1_CallbackRegister:	
  5506                           ; 1 bytes @ 0x4
  5507                           
  5508     0074                     ??_I2C1_InterruptsEnable:	
  5509                           ; 1 bytes @ 0x4
  5510                           
  5511     0074                     ??_I2C1_WriteStart:	
  5512                           ; 1 bytes @ 0x4
  5513                           
  5514     0074                     ??_I2C1_ReadStart:	
  5515                           ; 1 bytes @ 0x4
  5516                           
  5517     0074                     ??_I2C1_StartSend:	
  5518                           ; 1 bytes @ 0x4
  5519                           
  5520     0074                     ?_INT_SetInterruptHandler:	
  5521                           ; 1 bytes @ 0x4
  5522                           
  5523     0074                     ??_EUSART_Read:	
  5524                           ; 1 bytes @ 0x4
  5525                           
  5526     0074                     ?_EUSART_Write:	
  5527                           ; 1 bytes @ 0x4
  5528                           
  5529     0074                     ??_EUSART_IsRxReady:	
  5530                           ; 1 bytes @ 0x4
  5531                           
  5532     0074                     ??_EUSART_IsTxReady:	
  5533                           ; 1 bytes @ 0x4
  5534                           
  5535     0074                     ?_EUSART_FramingErrorCallbackRegister:	
  5536                           ; 1 bytes @ 0x4
  5537                           
  5538     0074                     ?_EUSART_OverrunErrorCallbackRegister:	
  5539                           ; 1 bytes @ 0x4
  5540                           
  5541     0074                     ??_EUSART_DefaultFramingErrorCallback:	
  5542                           ; 1 bytes @ 0x4
  5543                           
  5544     0074                     ??_EUSART_DefaultOverrunErrorCallback:	
  5545                           ; 1 bytes @ 0x4
  5546                           
  5547     0074                     ??_unpackWord:	
  5548                           ; 1 bytes @ 0x4
  5549                           
  5550     0074                     ?_SSPA_setMute:	
  5551                           ; 1 bytes @ 0x4
  5552                           
  5553     0074                     ??_ADC_SelectChannel:	
  5554                           ; 1 bytes @ 0x4
  5555                           
  5556     0074                     ??_ADC_StartConversion:	
  5557                           ; 1 bytes @ 0x4
  5558                           
  5559     0074                     ??_ADC_IsConversionDone:	
  5560                           ; 1 bytes @ 0x4
  5561                           
  5562     0074                     ??_I2C1_ISR:	
  5563                           ; 1 bytes @ 0x4
  5564                           
  5565     0074                     ??_I2C1_ERROR_ISR:	
  5566                           ; 1 bytes @ 0x4
  5567                           
  5568     0074                     ??_CLOCK_Initialize:	
  5569                           ; 1 bytes @ 0x4
  5570                           
  5571     0074                     ??_PIN_MANAGER_Initialize:	
  5572                           ; 1 bytes @ 0x4
  5573                           
  5574     0074                     ??_INTERRUPT_InterruptManager:	
  5575                           ; 1 bytes @ 0x4
  5576                           
  5577     0074                     ??___lmul:	
  5578                           ; 1 bytes @ 0x4
  5579                           
  5580     0074                     ??___aldiv:	
  5581                           ; 1 bytes @ 0x4
  5582                           
  5583     0074                     ?_ADC_GetConversionResult:	
  5584                           ; 1 bytes @ 0x4
  5585                           
  5586     0074                     _I2C1_IsBusy$646:	
  5587                           ; 2 bytes @ 0x4
  5588                           
  5589     0074                     _EUSART_IsTxReady$1324:	
  5590                           ; 1 bytes @ 0x4
  5591                           
  5592     0074                     EUSART_Write@txData:	
  5593                           ; 1 bytes @ 0x4
  5594                           
  5595     0074                     SSPA_setMute@mute:	
  5596                           ; 1 bytes @ 0x4
  5597                           
  5598     0074                     ADC_SetInterruptHandler@InterruptHandler:	
  5599                           ; 1 bytes @ 0x4
  5600                           
  5601     0074                     I2C1_CallbackRegister@callbackHandler:	
  5602                           ; 2 bytes @ 0x4
  5603                           
  5604     0074                     INT_SetInterruptHandler@InterruptHandler:	
  5605                           ; 2 bytes @ 0x4
  5606                           
  5607     0074                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  5608                           ; 2 bytes @ 0x4
  5609                           
  5610     0074                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  5611                           ; 2 bytes @ 0x4
  5612                           
  5613                           
  5614                           ; 2 bytes @ 0x4
  5615     0074                     	ds	1
  5616     0075                     ??_I2C1_Write:
  5617     0075                     ??_I2C1_Read:	
  5618                           ; 1 bytes @ 0x5
  5619                           
  5620     0075                     ??_EUSART_Write:	
  5621                           ; 1 bytes @ 0x5
  5622                           
  5623     0075                     ??_SendSync:	
  5624                           ; 1 bytes @ 0x5
  5625                           
  5626     0075                     ??_ADC2Amp:	
  5627                           ; 1 bytes @ 0x5
  5628                           
  5629     0075                     ??_ADC2dBm:	
  5630                           ; 1 bytes @ 0x5
  5631                           
  5632     0075                     ADC_SelectChannel@channel:	
  5633                           ; 1 bytes @ 0x5
  5634                           
  5635     0075                     I2C1_Read@retStatus:	
  5636                           ; 1 bytes @ 0x5
  5637                           
  5638     0075                     SendSync@data:	
  5639                           ; 1 bytes @ 0x5
  5640                           
  5641     0075                     SSPA_setMute@band:	
  5642                           ; 1 bytes @ 0x5
  5643                           
  5644                           
  5645                           ; 1 bytes @ 0x5
  5646     0075                     	ds	1
  5647     0076                     ??_ADC_SetInterruptHandler:
  5648     0076                     ??_I2C1_Initialize:	
  5649                           ; 1 bytes @ 0x6
  5650                           
  5651     0076                     ??_I2C1_CallbackRegister:	
  5652                           ; 1 bytes @ 0x6
  5653                           
  5654     0076                     ??_INT_SetInterruptHandler:	
  5655                           ; 1 bytes @ 0x6
  5656                           
  5657     0076                     ??_EUSART_Initialize:	
  5658                           ; 1 bytes @ 0x6
  5659                           
  5660     0076                     ??_EUSART_FramingErrorCallbackRegister:	
  5661                           ; 1 bytes @ 0x6
  5662                           
  5663     0076                     ??_EUSART_OverrunErrorCallbackRegister:	
  5664                           ; 1 bytes @ 0x6
  5665                           
  5666     0076                     ??_ADC_Initialize:	
  5667                           ; 1 bytes @ 0x6
  5668                           
  5669     0076                     ??_ADC_GetConversionResult:	
  5670                           ; 1 bytes @ 0x6
  5671                           
  5672     0076                     ??_INTERRUPT_Initialize:	
  5673                           ; 1 bytes @ 0x6
  5674                           
  5675     0076                     ??_SYSTEM_Initialize:	
  5676                           ; 1 bytes @ 0x6
  5677                           
  5678     0076                     ??_main:	
  5679                           ; 1 bytes @ 0x6
  5680                           
  5681     0076                     ??_SendNack:	
  5682                           ; 1 bytes @ 0x6
  5683                           
  5684                           
  5685                           	psect	cstackBANK0
  5686     0020                     __pcstackBANK0:	
  5687                           ; 1 bytes @ 0x6
  5688                           
  5689     0020                     ?_I2C1_Write:
  5690     0020                     ?_I2C1_Read:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693     0020                     ?_SendMsg:	
  5694                           ; 1 bytes @ 0x0
  5695                           
  5696     0020                     ?_unpackWord:	
  5697                           ; 1 bytes @ 0x0
  5698                           
  5699     0020                     ?_unpackLong:	
  5700                           ; 1 bytes @ 0x0
  5701                           
  5702     0020                     ??_SSPA_setMute:	
  5703                           ; 1 bytes @ 0x0
  5704                           
  5705     0020                     ?_getADCValue:	
  5706                           ; 1 bytes @ 0x0
  5707                           
  5708     0020                     ?_packLong:	
  5709                           ; 2 bytes @ 0x0
  5710                           
  5711     0020                     ?___lmul:	
  5712                           ; 4 bytes @ 0x0
  5713                           
  5714     0020                     SendMsg@data:	
  5715                           ; 4 bytes @ 0x0
  5716                           
  5717     0020                     I2C1_Write@address:	
  5718                           ; 1 bytes @ 0x0
  5719                           
  5720     0020                     I2C1_Read@address:	
  5721                           ; 2 bytes @ 0x0
  5722                           
  5723     0020                     unpackWord@value:	
  5724                           ; 2 bytes @ 0x0
  5725                           
  5726     0020                     unpackLong@value:	
  5727                           ; 2 bytes @ 0x0
  5728                           
  5729     0020                     ___lmul@multiplier:	
  5730                           ; 4 bytes @ 0x0
  5731                           
  5732                           
  5733                           ; 4 bytes @ 0x0
  5734     0020                     	ds	1
  5735     0021                     SendMsg@data_len:
  5736                           
  5737                           ; 1 bytes @ 0x1
  5738     0021                     	ds	1
  5739     0022                     ??_SendMsg:
  5740     0022                     ??_getADCValue:	
  5741                           ; 1 bytes @ 0x2
  5742                           
  5743     0022                     I2C1_Write@data:	
  5744                           ; 1 bytes @ 0x2
  5745                           
  5746     0022                     I2C1_Read@data:	
  5747                           ; 1 bytes @ 0x2
  5748                           
  5749     0022                     unpackWord@data:	
  5750                           ; 1 bytes @ 0x2
  5751                           
  5752                           
  5753                           ; 1 bytes @ 0x2
  5754     0022                     	ds	1
  5755     0023                     SendMsg@sum:
  5756     0023                     I2C1_Write@dataLength:	
  5757                           ; 1 bytes @ 0x3
  5758                           
  5759     0023                     I2C1_Read@dataLength:	
  5760                           ; 2 bytes @ 0x3
  5761                           
  5762                           
  5763                           ; 2 bytes @ 0x3
  5764     0023                     	ds	1
  5765     0024                     ??_packLong:
  5766     0024                     unpackLong@data:	
  5767                           ; 1 bytes @ 0x4
  5768                           
  5769     0024                     SendMsg@msg_id:	
  5770                           ; 1 bytes @ 0x4
  5771                           
  5772     0024                     getADCValue@channel:	
  5773                           ; 1 bytes @ 0x4
  5774                           
  5775     0024                     ___lmul@multiplicand:	
  5776                           ; 1 bytes @ 0x4
  5777                           
  5778                           
  5779                           ; 4 bytes @ 0x4
  5780     0024                     	ds	1
  5781     0025                     ??_unpackLong:
  5782     0025                     ??_KAPS_getStatus:	
  5783                           ; 1 bytes @ 0x5
  5784                           
  5785     0025                     ??_KAPS_getIndex:	
  5786                           ; 1 bytes @ 0x5
  5787                           
  5788     0025                     ??_KAPS_GoToIdx:	
  5789                           ; 1 bytes @ 0x5
  5790                           
  5791     0025                     ??_KAPS_setRelPos:	
  5792                           ; 1 bytes @ 0x5
  5793                           
  5794     0025                     SendNack@error:	
  5795                           ; 1 bytes @ 0x5
  5796                           
  5797     0025                     getADCValue@sum:	
  5798                           ; 1 bytes @ 0x5
  5799                           
  5800                           
  5801                           ; 2 bytes @ 0x5
  5802     0025                     	ds	1
  5803     0026                     ??_Parse:
  5804                           
  5805                           ; 1 bytes @ 0x6
  5806     0026                     	ds	1
  5807     0027                     KAPS_GoToIdx@idx:
  5808     0027                     KAPS_setRelPos@offset:	
  5809                           ; 1 bytes @ 0x7
  5810                           
  5811     0027                     KAPS_getStatus@reg:	
  5812                           ; 1 bytes @ 0x7
  5813                           
  5814     0027                     KAPS_getIndex@reg:	
  5815                           ; 1 bytes @ 0x7
  5816                           
  5817     0027                     getADCValue@i:	
  5818                           ; 1 bytes @ 0x7
  5819                           
  5820                           
  5821                           ; 1 bytes @ 0x7
  5822     0027                     	ds	1
  5823     0028                     KAPS_GoToIdx@reg:
  5824     0028                     KAPS_setRelPos@reg:	
  5825                           ; 1 bytes @ 0x8
  5826                           
  5827     0028                     KAPS_getStatus@data:	
  5828                           ; 1 bytes @ 0x8
  5829                           
  5830     0028                     KAPS_getIndex@data:	
  5831                           ; 1 bytes @ 0x8
  5832                           
  5833     0028                     Parse@data:	
  5834                           ; 1 bytes @ 0x8
  5835                           
  5836     0028                     packLong@result:	
  5837                           ; 1 bytes @ 0x8
  5838                           
  5839     0028                     ___lmul@product:	
  5840                           ; 4 bytes @ 0x8
  5841                           
  5842                           
  5843                           ; 4 bytes @ 0x8
  5844     0028                     	ds	1
  5845     0029                     KAPS_setRelPos@value:
  5846                           
  5847                           ; 1 bytes @ 0x9
  5848     0029                     	ds	3
  5849     002C                     ?___aldiv:
  5850     002C                     packLong@data:	
  5851                           ; 4 bytes @ 0xC
  5852                           
  5853     002C                     ___aldiv@divisor:	
  5854                           ; 1 bytes @ 0xC
  5855                           
  5856                           
  5857                           ; 4 bytes @ 0xC
  5858     002C                     	ds	1
  5859     002D                     ??_KAPS_getPos:
  5860     002D                     ?_KAPS_setAbsPos:	
  5861                           ; 1 bytes @ 0xD
  5862                           
  5863     002D                     ?_KAPS_StorePos:	
  5864                           ; 1 bytes @ 0xD
  5865                           
  5866     002D                     KAPS_setAbsPos@pos:	
  5867                           ; 1 bytes @ 0xD
  5868                           
  5869     002D                     KAPS_StorePos@pos:	
  5870                           ; 4 bytes @ 0xD
  5871                           
  5872                           
  5873                           ; 4 bytes @ 0xD
  5874     002D                     	ds	2
  5875     002F                     KAPS_getPos@data:
  5876                           
  5877                           ; 4 bytes @ 0xF
  5878     002F                     	ds	1
  5879     0030                     ___aldiv@dividend:
  5880                           
  5881                           ; 4 bytes @ 0x10
  5882     0030                     	ds	1
  5883     0031                     ??_KAPS_setAbsPos:
  5884     0031                     ??_KAPS_StorePos:	
  5885                           ; 1 bytes @ 0x11
  5886                           
  5887                           
  5888                           ; 1 bytes @ 0x11
  5889     0031                     	ds	2
  5890     0033                     KAPS_getPos@reg:
  5891     0033                     KAPS_setAbsPos@data:	
  5892                           ; 1 bytes @ 0x13
  5893                           
  5894     0033                     KAPS_StorePos@data:	
  5895                           ; 4 bytes @ 0x13
  5896                           
  5897                           
  5898                           ; 4 bytes @ 0x13
  5899     0033                     	ds	1
  5900     0034                     ___aldiv@counter:
  5901                           
  5902                           ; 1 bytes @ 0x14
  5903     0034                     	ds	1
  5904     0035                     ___aldiv@sign:
  5905                           
  5906                           ; 1 bytes @ 0x15
  5907     0035                     	ds	1
  5908     0036                     ___aldiv@quotient:
  5909                           
  5910                           ; 4 bytes @ 0x16
  5911     0036                     	ds	1
  5912     0037                     KAPS_setAbsPos@reg:
  5913     0037                     KAPS_StorePos@reg:	
  5914                           ; 1 bytes @ 0x17
  5915                           
  5916                           
  5917                           ; 1 bytes @ 0x17
  5918     0037                     	ds	1
  5919     0038                     KAPS_StorePos@idx:
  5920                           
  5921                           ; 1 bytes @ 0x18
  5922     0038                     	ds	2
  5923     003A                     ?_ADC2dBm:
  5924     003A                     ?_ADC2Celsius:	
  5925                           ; 1 bytes @ 0x1A
  5926                           
  5927     003A                     ?_ADC2Amp:	
  5928                           ; 2 bytes @ 0x1A
  5929                           
  5930     003A                     ADC2Celsius@v:	
  5931                           ; 4 bytes @ 0x1A
  5932                           
  5933     003A                     ADC2Amp@v:	
  5934                           ; 2 bytes @ 0x1A
  5935                           
  5936     003A                     ADC2dBm@v:	
  5937                           ; 2 bytes @ 0x1A
  5938                           
  5939                           
  5940                           ; 2 bytes @ 0x1A
  5941     003A                     	ds	2
  5942     003C                     ??_ADC2Celsius:
  5943     003C                     ADC2dBm@value:	
  5944                           ; 1 bytes @ 0x1C
  5945                           
  5946                           
  5947                           ; 4 bytes @ 0x1C
  5948     003C                     	ds	2
  5949     003E                     ADC2Amp@value:
  5950                           
  5951                           ; 4 bytes @ 0x1E
  5952     003E                     	ds	2
  5953     0040                     ADC2Celsius@value:
  5954     0040                     ADC2dBm@result:	
  5955                           ; 4 bytes @ 0x20
  5956                           
  5957                           
  5958                           ; 4 bytes @ 0x20
  5959     0040                     	ds	2
  5960     0042                     ADC2Amp@result:
  5961                           
  5962                           ; 4 bytes @ 0x22
  5963     0042                     	ds	2
  5964     0044                     ADC2Celsius@result:
  5965                           
  5966                           ; 4 bytes @ 0x24
  5967     0044                     	ds	2
  5968     0046                     ??_SSPA_getPOut:
  5969                           
  5970                           ; 1 bytes @ 0x26
  5971     0046                     	ds	2
  5972     0048                     ??_SSPA_getTemp:
  5973     0048                     SSPA_getPOut@adc_value:	
  5974                           ; 1 bytes @ 0x28
  5975                           
  5976                           
  5977                           ; 2 bytes @ 0x28
  5978     0048                     	ds	2
  5979     004A                     SSPA_getPOut@band:
  5980     004A                     SSPA_getTemp@adc_value:	
  5981                           ; 1 bytes @ 0x2A
  5982                           
  5983                           
  5984                           ; 2 bytes @ 0x2A
  5985     004A                     	ds	2
  5986     004C                     SSPA_getTemp@channel:
  5987                           
  5988                           ; 1 bytes @ 0x2C
  5989     004C                     	ds	1
  5990     004D                     SSPA_getTemp@band:
  5991                           
  5992                           ; 1 bytes @ 0x2D
  5993     004D                     	ds	1
  5994     004E                     ?_ProcessMsg:
  5995     004E                     ProcessMsg@data:	
  5996                           ; 1 bytes @ 0x2E
  5997                           
  5998                           
  5999                           ; 1 bytes @ 0x2E
  6000     004E                     	ds	1
  6001     004F                     ??_ProcessMsg:
  6002                           
  6003                           ; 1 bytes @ 0x2F
  6004     004F                     	ds	1
  6005     0050                     ProcessMsg@msg_id:
  6006                           
  6007                           ; 1 bytes @ 0x30
  6008     0050                     	ds	1
  6009     0051                     main@data:
  6010                           
  6011                           ; 1 bytes @ 0x31
  6012     0051                     	ds	1
  6013                           
  6014                           	psect	maintext
  6015     0F54                     __pmaintext:	
  6016 ;;
  6017 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6018 ;;
  6019 ;; *************** function _main *****************
  6020 ;; Defined at:
  6021 ;;		line 115 in file "main.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  data            1   49[BANK0 ] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  2  697[None  ] int 
  6028 ;; Registers used:
  6029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : B1F/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6035 ;;      Params:         0       0       0       0       0       0       0       0
  6036 ;;      Locals:         0       1       0       0       0       0       0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0
  6038 ;;      Totals:         0       1       0       0       0       0       0       0
  6039 ;;Total ram usage:        1 bytes
  6040 ;; Hardware stack levels required when called: 12
  6041 ;; This function calls:
  6042 ;;		_EUSART_IsRxReady
  6043 ;;		_EUSART_Read
  6044 ;;		_Parse
  6045 ;;		_ProcessMsg
  6046 ;;		_SYSTEM_Initialize
  6047 ;; This function is called by:
  6048 ;;		Startup code after reset
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052     0F54                     _main:	
  6053                           ;psect for function _main
  6054                           
  6055     0F54                     l4072:	
  6056                           ;incstack = 0
  6057                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6058                           
  6059                           
  6060                           ;main.c: 116:     SYSTEM_Initialize();
  6061     0F54  318E  2632  318F   	fcall	_SYSTEM_Initialize
  6062     0F57                     l4074:
  6063                           
  6064                           ;main.c: 118:     (INTCONbits.GIE = 1);
  6065     0F57  178B               	bsf	11,7	;volatile
  6066     0F58                     l4076:
  6067                           
  6068                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6069     0F58  170B               	bsf	11,6	;volatile
  6070     0F59                     l4078:
  6071     0F59                     l4080:
  6072                           
  6073                           ;main.c: 132:         if (EUSART_IsRxReady()) {
  6074     0F59  318D  2513  318F   	fcall	_EUSART_IsRxReady
  6075     0F5C  3A00               	xorlw	0
  6076     0F5D  1903               	skipnz
  6077     0F5E  2F60               	goto	u2061
  6078     0F5F  2F61               	goto	u2060
  6079     0F60                     u2061:
  6080     0F60  2F78               	goto	l699
  6081     0F61                     u2060:
  6082     0F61                     l4082:
  6083                           
  6084                           ;main.c: 133:             data = EUSART_Read();
  6085     0F61  318F  277C  318F   	fcall	_EUSART_Read
  6086     0F64  0020               	movlb	0	; select bank0
  6087     0F65  00D1               	movwf	main@data
  6088     0F66                     l4084:
  6089                           
  6090                           ;main.c: 135:             if (Parse(data))
  6091     0F66  0851               	movf	main@data,w
  6092     0F67  3181  21AC  318F   	fcall	_Parse
  6093     0F6A  3A00               	xorlw	0
  6094     0F6B  1903               	skipnz
  6095     0F6C  2F6E               	goto	u2071
  6096     0F6D  2F6F               	goto	u2070
  6097     0F6E                     u2071:
  6098     0F6E  2F59               	goto	l4080
  6099     0F6F                     u2070:
  6100     0F6F                     l4086:
  6101                           
  6102                           ;main.c: 136:                 ProcessMsg(parser.m_MsgID, parserDataBuffer);
  6103     0F6F  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
  6104     0F70  0020               	movlb	0	; select bank0
  6105     0F71  00CE               	movwf	ProcessMsg@data
  6106     0F72  0021               	movlb	1	; select bank1
  6107     0F73  0839               	movf	(_parser^(0+128)+1),w
  6108     0F74  3180  2068  318F   	fcall	_ProcessMsg
  6109     0F77  2F59               	goto	l4080
  6110     0F78                     l699:	
  6111                           ;main.c: 138:         else
  6112                           
  6113                           
  6114                           ;main.c: 139:             __nop();
  6115     0F78  0000               	nop
  6116     0F79  2F59               	goto	l4080
  6117     0F7A  3180  2836         	ljmp	start
  6118     0F7C                     __end_of_main:
  6119                           
  6120                           	psect	text1
  6121     0E32                     __ptext1:	
  6122 ;; *************** function _SYSTEM_Initialize *****************
  6123 ;; Defined at:
  6124 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;		None
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;		None
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      void 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0, pclath, cstack
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6138 ;;      Params:         0       0       0       0       0       0       0       0
  6139 ;;      Locals:         0       0       0       0       0       0       0       0
  6140 ;;      Temps:          0       0       0       0       0       0       0       0
  6141 ;;      Totals:         0       0       0       0       0       0       0       0
  6142 ;;Total ram usage:        0 bytes
  6143 ;; Hardware stack levels used: 1
  6144 ;; Hardware stack levels required when called: 9
  6145 ;; This function calls:
  6146 ;;		_ADC_Initialize
  6147 ;;		_CLOCK_Initialize
  6148 ;;		_EUSART_Initialize
  6149 ;;		_I2C1_Initialize
  6150 ;;		_INTERRUPT_Initialize
  6151 ;;		_PIN_MANAGER_Initialize
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157     0E32                     _SYSTEM_Initialize:	
  6158                           ;psect for function _SYSTEM_Initialize
  6159                           
  6160     0E32                     l3170:	
  6161                           ;incstack = 0
  6162                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6163                           
  6164                           
  6165                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  6166     0E32  318D  2588  318E   	fcall	_CLOCK_Initialize
  6167                           
  6168                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  6169     0E35  3184  246D  318E   	fcall	_PIN_MANAGER_Initialize
  6170                           
  6171                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  6172     0E38  318E  2645  318E   	fcall	_ADC_Initialize
  6173                           
  6174                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  6175     0E3B  318E  2687  318E   	fcall	_EUSART_Initialize
  6176                           
  6177                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  6178     0E3E  318E  2659  318E   	fcall	_I2C1_Initialize
  6179                           
  6180                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  6181     0E41  318D  25A6  318E   	fcall	_INTERRUPT_Initialize
  6182     0E44                     l483:
  6183     0E44  0008               	return
  6184     0E45                     __end_of_SYSTEM_Initialize:
  6185                           
  6186                           	psect	text2
  6187     046D                     __ptext2:	
  6188 ;; *************** function _PIN_MANAGER_Initialize *****************
  6189 ;; Defined at:
  6190 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6204 ;;      Params:         0       0       0       0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 7
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_SYSTEM_Initialize
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218     046D                     _PIN_MANAGER_Initialize:	
  6219                           ;psect for function _PIN_MANAGER_Initialize
  6220                           
  6221     046D                     l2954:	
  6222                           ;incstack = 0
  6223                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6224                           
  6225                           
  6226                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  6227     046D  0022               	movlb	2	; select bank2
  6228     046E  018C               	clrf	12	;volatile
  6229     046F                     l2956:
  6230                           
  6231                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  6232     046F  3060               	movlw	96
  6233     0470  008D               	movwf	13	;volatile
  6234     0471                     l2958:
  6235                           
  6236                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  6237     0471  018E               	clrf	14	;volatile
  6238                           
  6239                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  6240     0472  303F               	movlw	63
  6241     0473  0021               	movlb	1	; select bank1
  6242     0474  008C               	movwf	12	;volatile
  6243                           
  6244                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  6245     0475  30F0               	movlw	240
  6246     0476  008D               	movwf	13	;volatile
  6247                           
  6248                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  6249     0477  303B               	movlw	59
  6250     0478  008E               	movwf	14	;volatile
  6251                           
  6252                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  6253     0479  3017               	movlw	23
  6254     047A  0023               	movlb	3	; select bank3
  6255     047B  008C               	movwf	12	;volatile
  6256                           
  6257                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  6258     047C  3010               	movlw	16
  6259     047D  008D               	movwf	13	;volatile
  6260                           
  6261                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  6262     047E  300D               	movlw	13
  6263     047F  008E               	movwf	14	;volatile
  6264                           
  6265                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  6266     0480  302C               	movlw	44
  6267     0481  0024               	movlb	4	; select bank4
  6268     0482  008C               	movwf	12	;volatile
  6269                           
  6270                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  6271     0483  30E0               	movlw	224
  6272     0484  008D               	movwf	13	;volatile
  6273                           
  6274                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  6275     0485  30F7               	movlw	247
  6276     0486  008E               	movwf	14	;volatile
  6277     0487                     l2960:
  6278                           
  6279                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  6280     0487  0021               	movlb	1	; select bank1
  6281     0488  1395               	bcf	21,7	;volatile
  6282     0489                     l2962:
  6283                           
  6284                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  6285     0489  0025               	movlb	5	; select bank5
  6286     048A  018C               	clrf	12	;volatile
  6287     048B                     l2964:
  6288                           
  6289                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  6290     048B  018D               	clrf	13	;volatile
  6291     048C                     l2966:
  6292                           
  6293                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  6294     048C  018E               	clrf	14	;volatile
  6295     048D                     l2968:
  6296                           
  6297                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  6298     048D  3037               	movlw	55
  6299     048E  0026               	movlb	6	; select bank6
  6300     048F  008C               	movwf	12	;volatile
  6301     0490                     l2970:
  6302                           
  6303                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  6304     0490  30F0               	movlw	240
  6305     0491  008D               	movwf	13	;volatile
  6306     0492                     l2972:
  6307                           
  6308                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  6309     0492  30FF               	movlw	255
  6310     0493  008E               	movwf	14	;volatile
  6311     0494                     l2974:
  6312                           
  6313                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  6314     0494  303F               	movlw	63
  6315     0495  0027               	movlb	7	; select bank7
  6316     0496  008C               	movwf	12	;volatile
  6317     0497                     l2976:
  6318                           
  6319                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  6320     0497  30F0               	movlw	240
  6321     0498  008D               	movwf	13	;volatile
  6322     0499                     l2978:
  6323                           
  6324                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  6325     0499  30FF               	movlw	255
  6326     049A  008E               	movwf	14	;volatile
  6327     049B                     l2980:
  6328                           
  6329                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  6330     049B  3011               	movlw	17
  6331     049C  003C               	movlb	28	; select bank28
  6332     049D  00A4               	movwf	36	;volatile
  6333     049E                     l2982:
  6334                           
  6335                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  6336     049E  3006               	movlw	6
  6337     049F  003D               	movlb	29	; select bank29
  6338     04A0  00A2               	movwf	34	;volatile
  6339     04A1                     l2984:
  6340                           
  6341                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  6342     04A1  300E               	movlw	14
  6343     04A2  003C               	movlb	28	; select bank28
  6344     04A3  00A0               	movwf	32	;volatile
  6345     04A4                     l2986:
  6346                           
  6347                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  6348     04A4  3010               	movlw	16
  6349     04A5  003D               	movlb	29	; select bank29
  6350     04A6  009E               	movwf	30	;volatile
  6351     04A7                     l2988:
  6352                           
  6353                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  6354     04A7  300D               	movlw	13
  6355     04A8  003C               	movlb	28	; select bank28
  6356     04A9  00A1               	movwf	33	;volatile
  6357     04AA                     l2990:
  6358                           
  6359                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  6360     04AA  3011               	movlw	17
  6361     04AB  003D               	movlb	29	; select bank29
  6362     04AC  009D               	movwf	29	;volatile
  6363     04AD                     l2992:
  6364                           
  6365                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  6366     04AD  0027               	movlb	7	; select bank7
  6367     04AE  0191               	clrf	17	;volatile
  6368     04AF                     l2994:
  6369                           
  6370                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  6371     04AF  0192               	clrf	18	;volatile
  6372     04B0                     l2996:
  6373                           
  6374                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  6375     04B0  0193               	clrf	19	;volatile
  6376     04B1                     l2998:
  6377                           
  6378                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  6379     04B1  0194               	clrf	20	;volatile
  6380     04B2                     l3000:
  6381                           
  6382                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  6383     04B2  0195               	clrf	21	;volatile
  6384     04B3                     l3002:
  6385                           
  6386                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  6387     04B3  0196               	clrf	22	;volatile
  6388     04B4                     l3004:
  6389                           
  6390                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  6391     04B4  0197               	clrf	23	;volatile
  6392     04B5                     l3006:
  6393                           
  6394                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  6395     04B5  0198               	clrf	24	;volatile
  6396     04B6                     l3008:
  6397                           
  6398                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  6399     04B6  0199               	clrf	25	;volatile
  6400     04B7                     l410:
  6401     04B7  0008               	return
  6402     04B8                     __end_of_PIN_MANAGER_Initialize:
  6403                           
  6404                           	psect	text3
  6405     0DA6                     __ptext3:	
  6406 ;; *************** function _INTERRUPT_Initialize *****************
  6407 ;; Defined at:
  6408 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, pclath, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6422 ;;      Params:         0       0       0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used: 1
  6428 ;; Hardware stack levels required when called: 8
  6429 ;; This function calls:
  6430 ;;		_INT_SetInterruptHandler
  6431 ;; This function is called by:
  6432 ;;		_SYSTEM_Initialize
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436     0DA6                     _INTERRUPT_Initialize:	
  6437                           ;psect for function _INTERRUPT_Initialize
  6438                           
  6439     0DA6                     l3010:	
  6440                           ;incstack = 0
  6441                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6442                           
  6443                           
  6444                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  6445     0DA6  108B               	bcf	11,1	;volatile
  6446                           
  6447                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  6448     0DA7  0021               	movlb	1	; select bank1
  6449     0DA8  1715               	bsf	21,6	;volatile
  6450     0DA9                     l3012:
  6451                           
  6452                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  6453     0DA9  3000               	movlw	0
  6454     0DAA  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  6455     0DAB  3000               	movlw	0
  6456     0DAC  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6457     0DAD  318D  2518  318D   	fcall	_INT_SetInterruptHandler
  6458     0DB0                     l442:
  6459     0DB0  0008               	return
  6460     0DB1                     __end_of_INTERRUPT_Initialize:
  6461                           
  6462                           	psect	text4
  6463     0D18                     __ptext4:	
  6464 ;; *************** function _INT_SetInterruptHandler *****************
  6465 ;; Defined at:
  6466 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  6469 ;;		 -> INT_DefaultInterruptHandler(1), 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6481 ;;      Params:         2       0       0       0       0       0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0
  6484 ;;      Totals:         2       0       0       0       0       0       0       0
  6485 ;;Total ram usage:        2 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; Hardware stack levels required when called: 7
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_INTERRUPT_Initialize
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495     0D18                     _INT_SetInterruptHandler:	
  6496                           ;psect for function _INT_SetInterruptHandler
  6497                           
  6498     0D18                     l2790:	
  6499                           ;incstack = 0
  6500                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6501                           
  6502                           
  6503                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  6504     0D18  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6505     0D19  00F9               	movwf	_INT_InterruptHandler+1
  6506     0D1A  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6507     0D1B  00F8               	movwf	_INT_InterruptHandler
  6508     0D1C                     l465:
  6509     0D1C  0008               	return
  6510     0D1D                     __end_of_INT_SetInterruptHandler:
  6511                           
  6512                           	psect	text5
  6513     0E59                     __ptext5:	
  6514 ;; *************** function _I2C1_Initialize *****************
  6515 ;; Defined at:
  6516 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;		None
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      void 
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0, pclath, cstack
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6530 ;;      Params:         0       0       0       0       0       0       0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0
  6533 ;;      Totals:         0       0       0       0       0       0       0       0
  6534 ;;Total ram usage:        0 bytes
  6535 ;; Hardware stack levels used: 1
  6536 ;; Hardware stack levels required when called: 8
  6537 ;; This function calls:
  6538 ;;		_I2C1_CallbackRegister
  6539 ;;		_I2C1_InterruptsEnable
  6540 ;; This function is called by:
  6541 ;;		_SYSTEM_Initialize
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545     0E59                     _I2C1_Initialize:	
  6546                           ;psect for function _I2C1_Initialize
  6547                           
  6548     0E59                     l2914:	
  6549                           ;incstack = 0
  6550                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6551                           
  6552                           
  6553                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  6554     0E59  3080               	movlw	128
  6555     0E5A  0024               	movlb	4	; select bank4
  6556     0E5B  0094               	movwf	20	;volatile
  6557                           
  6558                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  6559     0E5C  3008               	movlw	8
  6560     0E5D  0095               	movwf	21	;volatile
  6561     0E5E                     l2916:
  6562                           
  6563                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  6564     0E5E  0196               	clrf	22	;volatile
  6565     0E5F                     l2918:
  6566                           
  6567                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  6568     0E5F  0197               	clrf	23	;volatile
  6569                           
  6570                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  6571     0E60  3027               	movlw	39
  6572     0E61  0092               	movwf	18	;volatile
  6573     0E62                     l2920:
  6574                           
  6575                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  6576     0E62  318D  2505  318E   	fcall	_I2C1_InterruptsEnable
  6577                           
  6578                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  6579     0E65  3002               	movlw	low _I2C1_DefaultCallback
  6580     0E66  00F4               	movwf	I2C1_CallbackRegister@callbackHandler
  6581     0E67  3000               	movlw	high _I2C1_DefaultCallback
  6582     0E68  00F5               	movwf	I2C1_CallbackRegister@callbackHandler+1
  6583     0E69  318D  25D5  318E   	fcall	_I2C1_CallbackRegister
  6584     0E6C                     l2922:
  6585                           
  6586                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  6587     0E6C  0024               	movlb	4	; select bank4
  6588     0E6D  1695               	bsf	21,5	;volatile
  6589     0E6E                     l177:
  6590     0E6E  0008               	return
  6591     0E6F                     __end_of_I2C1_Initialize:
  6592                           
  6593                           	psect	text6
  6594     0D05                     __ptext6:	
  6595 ;; *************** function _I2C1_InterruptsEnable *****************
  6596 ;; Defined at:
  6597 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		None
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6611 ;;      Params:         0       0       0       0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used: 1
  6617 ;; Hardware stack levels required when called: 7
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_I2C1_Initialize
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625     0D05                     _I2C1_InterruptsEnable:	
  6626                           ;psect for function _I2C1_InterruptsEnable
  6627                           
  6628     0D05                     l2638:	
  6629                           ;incstack = 0
  6630                           ; Regs used in _I2C1_InterruptsEnable: []
  6631                           
  6632                           
  6633                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  6634     0D05  0021               	movlb	1	; select bank1
  6635     0D06  1590               	bsf	16,3	;volatile
  6636                           
  6637                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  6638     0D07  1591               	bsf	17,3	;volatile
  6639     0D08                     l312:
  6640     0D08  0008               	return
  6641     0D09                     __end_of_I2C1_InterruptsEnable:
  6642                           
  6643                           	psect	text7
  6644     0DD5                     __ptext7:	
  6645 ;; *************** function _I2C1_CallbackRegister *****************
  6646 ;; Defined at:
  6647 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6650 ;;		 -> I2C1_DefaultCallback(1), 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6662 ;;      Params:         2       0       0       0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0
  6665 ;;      Totals:         2       0       0       0       0       0       0       0
  6666 ;;Total ram usage:        2 bytes
  6667 ;; Hardware stack levels used: 1
  6668 ;; Hardware stack levels required when called: 7
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_I2C1_Initialize
  6673 ;;		_I2C1_Deinitialize
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677     0DD5                     _I2C1_CallbackRegister:	
  6678                           ;psect for function _I2C1_CallbackRegister
  6679                           
  6680     0DD5                     l2640:	
  6681                           ;incstack = 0
  6682                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  6683                           
  6684                           
  6685                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  6686     0DD5  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6687     0DD6  0475               	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  6688     0DD7  1903               	btfsc	3,2
  6689     0DD8  2DDA               	goto	u911
  6690     0DD9  2DDB               	goto	u910
  6691     0DDA                     u911:
  6692     0DDA  2DE0               	goto	l204
  6693     0DDB                     u910:
  6694     0DDB                     l2642:
  6695                           
  6696                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  6697     0DDB  0875               	movf	I2C1_CallbackRegister@callbackHandler+1,w
  6698     0DDC  0020               	movlb	0	; select bank0
  6699     0DDD  00E3               	movwf	_I2C1_Callback+1
  6700     0DDE  0874               	movf	I2C1_CallbackRegister@callbackHandler,w
  6701     0DDF  00E2               	movwf	_I2C1_Callback
  6702     0DE0                     l204:
  6703     0DE0  0008               	return
  6704     0DE1                     __end_of_I2C1_CallbackRegister:
  6705                           
  6706                           	psect	text8
  6707     0E87                     __ptext8:	
  6708 ;; *************** function _EUSART_Initialize *****************
  6709 ;; Defined at:
  6710 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6724 ;;      Params:         0       0       0       0       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0
  6727 ;;      Totals:         0       0       0       0       0       0       0       0
  6728 ;;Total ram usage:        0 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; Hardware stack levels required when called: 8
  6731 ;; This function calls:
  6732 ;;		_EUSART_FramingErrorCallbackRegister
  6733 ;;		_EUSART_OverrunErrorCallbackRegister
  6734 ;; This function is called by:
  6735 ;;		_SYSTEM_Initialize
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739     0E87                     _EUSART_Initialize:	
  6740                           ;psect for function _EUSART_Initialize
  6741                           
  6742     0E87                     l3014:	
  6743                           ;incstack = 0
  6744                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6745                           
  6746                           
  6747                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  6748     0E87  3048               	movlw	72
  6749     0E88  0023               	movlb	3	; select bank3
  6750     0E89  009F               	movwf	31	;volatile
  6751                           
  6752                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  6753     0E8A  3090               	movlw	144
  6754     0E8B  009D               	movwf	29	;volatile
  6755                           
  6756                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  6757     0E8C  3026               	movlw	38
  6758     0E8D  009E               	movwf	30	;volatile
  6759                           
  6760                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  6761     0E8E  30A0               	movlw	160
  6762     0E8F  009B               	movwf	27	;volatile
  6763                           
  6764                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  6765     0E90  3001               	movlw	1
  6766     0E91  009C               	movwf	28	;volatile
  6767     0E92                     l3016:
  6768                           
  6769                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  6770     0E92  3003               	movlw	low _EUSART_DefaultFramingErrorCallback
  6771     0E93  00F4               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  6772     0E94  3000               	movlw	high _EUSART_DefaultFramingErrorCallback
  6773     0E95  00F5               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  6774     0E96  318D  259B  318E   	fcall	_EUSART_FramingErrorCallbackRegister
  6775     0E99                     l3018:
  6776                           
  6777                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  6778     0E99  30FD               	movlw	low _EUSART_DefaultOverrunErrorCallback
  6779     0E9A  00F4               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  6780     0E9B  300C               	movlw	high _EUSART_DefaultOverrunErrorCallback
  6781     0E9C  00F5               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  6782     0E9D  318D  25C9  318E   	fcall	_EUSART_OverrunErrorCallbackRegister
  6783     0EA0                     l3020:
  6784                           
  6785                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  6786     0EA0  0020               	movlb	0	; select bank0
  6787     0EA1  01E0               	clrf	_eusartRxLastError	;volatile
  6788     0EA2  01E1               	clrf	_eusartRxLastError+1	;volatile
  6789     0EA3                     l548:
  6790     0EA3  0008               	return
  6791     0EA4                     __end_of_EUSART_Initialize:
  6792                           
  6793                           	psect	text9
  6794     0DC9                     __ptext9:	
  6795 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  6796 ;; Defined at:
  6797 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6800 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6812 ;;      Params:         2       0       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0
  6815 ;;      Totals:         2       0       0       0       0       0       0       0
  6816 ;;Total ram usage:        2 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; Hardware stack levels required when called: 7
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_EUSART_Initialize
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826     0DC9                     _EUSART_OverrunErrorCallbackRegister:	
  6827                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  6828                           
  6829     0DC9                     l2796:	
  6830                           ;incstack = 0
  6831                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  6832                           
  6833                           
  6834                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  6835     0DC9  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6836     0DCA  0475               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6837     0DCB  1903               	btfsc	3,2
  6838     0DCC  2DCE               	goto	u1001
  6839     0DCD  2DCF               	goto	u1000
  6840     0DCE                     u1001:
  6841     0DCE  2DD4               	goto	l627
  6842     0DCF                     u1000:
  6843     0DCF                     l2798:
  6844                           
  6845                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6846     0DCF  0875               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6847     0DD0  0020               	movlb	0	; select bank0
  6848     0DD1  00DF               	movwf	_EUSART_OverrunErrorHandler+1
  6849     0DD2  0874               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6850     0DD3  00DE               	movwf	_EUSART_OverrunErrorHandler
  6851     0DD4                     l627:
  6852     0DD4  0008               	return
  6853     0DD5                     __end_of_EUSART_OverrunErrorCallbackRegister:
  6854                           
  6855                           	psect	text10
  6856     0D9B                     __ptext10:	
  6857 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6858 ;; Defined at:
  6859 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  callbackHand    2    4[COMMON] PTR FTN()void 
  6862 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6874 ;;      Params:         2       0       0       0       0       0       0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0
  6877 ;;      Totals:         2       0       0       0       0       0       0       0
  6878 ;;Total ram usage:        2 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; Hardware stack levels required when called: 7
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_EUSART_Initialize
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888     0D9B                     _EUSART_FramingErrorCallbackRegister:	
  6889                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6890                           
  6891     0D9B                     l2792:	
  6892                           ;incstack = 0
  6893                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6894                           
  6895                           
  6896                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6897     0D9B  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6898     0D9C  0475               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6899     0D9D  1903               	btfsc	3,2
  6900     0D9E  2DA0               	goto	u991
  6901     0D9F  2DA1               	goto	u990
  6902     0DA0                     u991:
  6903     0DA0  2DA5               	goto	l623
  6904     0DA1                     u990:
  6905     0DA1                     l2794:
  6906                           
  6907                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6908     0DA1  0875               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6909     0DA2  00F7               	movwf	_EUSART_FramingErrorHandler+1
  6910     0DA3  0874               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6911     0DA4  00F6               	movwf	_EUSART_FramingErrorHandler
  6912     0DA5                     l623:
  6913     0DA5  0008               	return
  6914     0DA6                     __end_of_EUSART_FramingErrorCallbackRegister:
  6915                           
  6916                           	psect	text11
  6917     0D88                     __ptext11:	
  6918 ;; *************** function _CLOCK_Initialize *****************
  6919 ;; Defined at:
  6920 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6934 ;;      Params:         0       0       0       0       0       0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0
  6937 ;;      Totals:         0       0       0       0       0       0       0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; Hardware stack levels required when called: 7
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_SYSTEM_Initialize
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948     0D88                     _CLOCK_Initialize:	
  6949                           ;psect for function _CLOCK_Initialize
  6950                           
  6951     0D88                     l2948:	
  6952                           ;incstack = 0
  6953                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6954                           
  6955                           
  6956                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6957     0D88  307A               	movlw	122
  6958     0D89  0021               	movlb	1	; select bank1
  6959     0D8A  0099               	movwf	25	;volatile
  6960     0D8B                     l2950:
  6961                           
  6962                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6963     0D8B  0022               	movlb	2	; select bank2
  6964     0D8C  0196               	clrf	22	;volatile
  6965     0D8D                     l2952:
  6966                           
  6967                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6968     0D8D  0021               	movlb	1	; select bank1
  6969     0D8E  0198               	clrf	24	;volatile
  6970     0D8F                     l333:
  6971     0D8F  0008               	return
  6972     0D90                     __end_of_CLOCK_Initialize:
  6973                           
  6974                           	psect	text12
  6975     0E45                     __ptext12:	
  6976 ;; *************** function _ADC_Initialize *****************
  6977 ;; Defined at:
  6978 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0, pclath, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6992 ;;      Params:         0       0       0       0       0       0       0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0
  6995 ;;      Totals:         0       0       0       0       0       0       0       0
  6996 ;;Total ram usage:        0 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 8
  6999 ;; This function calls:
  7000 ;;		_ADC_SetInterruptHandler
  7001 ;; This function is called by:
  7002 ;;		_SYSTEM_Initialize
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006     0E45                     _ADC_Initialize:	
  7007                           ;psect for function _ADC_Initialize
  7008                           
  7009     0E45                     l2898:	
  7010                           ;incstack = 0
  7011                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7012                           
  7013                           
  7014                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  7015     0E45  3060               	movlw	96
  7016     0E46  0021               	movlb	1	; select bank1
  7017     0E47  009E               	movwf	30	;volatile
  7018     0E48                     l2900:
  7019                           
  7020                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  7021     0E48  019B               	clrf	27	;volatile
  7022     0E49                     l2902:
  7023                           
  7024                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  7025     0E49  019C               	clrf	28	;volatile
  7026     0E4A                     l2904:
  7027                           
  7028                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  7029     0E4A  019F               	clrf	31	;volatile
  7030     0E4B                     l2906:
  7031                           
  7032                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  7033     0E4B  3001               	movlw	1
  7034     0E4C  009D               	movwf	29	;volatile
  7035     0E4D                     l2908:
  7036                           
  7037                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  7038     0E4D  0020               	movlb	0	; select bank0
  7039     0E4E  1310               	bcf	16,6	;volatile
  7040     0E4F                     l2910:
  7041                           
  7042                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  7043     0E4F  30C1               	movlw	low _ADC_DefaultInterruptHandler
  7044     0E50  00F4               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7045     0E51  300C               	movlw	high _ADC_DefaultInterruptHandler
  7046     0E52  00F5               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7047     0E53  318D  2535  318E   	fcall	_ADC_SetInterruptHandler
  7048     0E56                     l2912:
  7049                           
  7050                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  7051     0E56  0021               	movlb	1	; select bank1
  7052     0E57  1710               	bsf	16,6	;volatile
  7053     0E58                     l27:
  7054     0E58  0008               	return
  7055     0E59                     __end_of_ADC_Initialize:
  7056                           
  7057                           	psect	text13
  7058     0D35                     __ptext13:	
  7059 ;; *************** function _ADC_SetInterruptHandler *****************
  7060 ;; Defined at:
  7061 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7064 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7076 ;;      Params:         2       0       0       0       0       0       0       0
  7077 ;;      Locals:         0       0       0       0       0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0       0
  7079 ;;      Totals:         2       0       0       0       0       0       0       0
  7080 ;;Total ram usage:        2 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; Hardware stack levels required when called: 7
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_ADC_Initialize
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090     0D35                     _ADC_SetInterruptHandler:	
  7091                           ;psect for function _ADC_SetInterruptHandler
  7092                           
  7093     0D35                     l2636:	
  7094                           ;incstack = 0
  7095                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7096                           
  7097                           
  7098                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  7099     0D35  0875               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7100     0D36  0020               	movlb	0	; select bank0
  7101     0D37  00EC               	movwf	_ADC_InterruptHandler+1
  7102     0D38  0874               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7103     0D39  00EB               	movwf	_ADC_InterruptHandler
  7104     0D3A                     l55:
  7105     0D3A  0008               	return
  7106     0D3B                     __end_of_ADC_SetInterruptHandler:
  7107                           
  7108                           	psect	text14
  7109     0068                     __ptext14:	
  7110 ;; *************** function _ProcessMsg *****************
  7111 ;; Defined at:
  7112 ;;		line 47 in file "main.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  msg_id          1    wreg     unsigned char 
  7115 ;;  data            1   46[BANK0 ] PTR unsigned char 
  7116 ;;		 -> parserDataBuffer(5), 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  msg_id          1   48[BANK0 ] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7128 ;;      Params:         0       1       0       0       0       0       0       0
  7129 ;;      Locals:         0       1       0       0       0       0       0       0
  7130 ;;      Temps:          0       1       0       0       0       0       0       0
  7131 ;;      Totals:         0       3       0       0       0       0       0       0
  7132 ;;Total ram usage:        3 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 11
  7135 ;; This function calls:
  7136 ;;		_KAPS_GoToIdx
  7137 ;;		_KAPS_StorePos
  7138 ;;		_KAPS_getIndex
  7139 ;;		_KAPS_getPos
  7140 ;;		_KAPS_getStatus
  7141 ;;		_KAPS_setAbsPos
  7142 ;;		_KAPS_setRelPos
  7143 ;;		_SSPA_getPOut
  7144 ;;		_SSPA_getTemp
  7145 ;;		_SSPA_setMute
  7146 ;;		_SendMsg
  7147 ;;		_packLong
  7148 ;;		_unpackLong
  7149 ;;		_unpackWord
  7150 ;; This function is called by:
  7151 ;;		_main
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155     0068                     _ProcessMsg:	
  7156                           ;psect for function _ProcessMsg
  7157                           
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7161                           ;ProcessMsg@msg_id stored from wreg
  7162     0068  0020               	movlb	0	; select bank0
  7163     0069  00D0               	movwf	ProcessMsg@msg_id
  7164     006A                     l3920:
  7165                           
  7166                           ;main.c: 48:     static uint8_t payload[6];;main.c: 50:     switch (msg_id) {
  7167     006A  2988               	goto	l3972
  7168     006B                     l3922:
  7169                           
  7170                           ;main.c: 52:             payload[0] = data[0];
  7171     006B  084E               	movf	ProcessMsg@data,w
  7172     006C  0086               	movwf	6
  7173     006D  0187               	clrf	7
  7174     006E  0801               	movf	1,w
  7175     006F  0021               	movlb	1	; select bank1
  7176     0070  00C4               	movwf	ProcessMsg@payload^(0+128)
  7177     0071                     l3924:
  7178                           
  7179                           ;main.c: 53:             payload[1] = (uint8_t) sspas[data[0]].m_Mute;
  7180     0071  0020               	movlb	0	; select bank0
  7181     0072  084E               	movf	ProcessMsg@data,w
  7182     0073  0086               	movwf	6
  7183     0074  0187               	clrf	7
  7184     0075  0801               	movf	1,w
  7185     0076  00CF               	movwf	??_ProcessMsg
  7186     0077  3002               	movlw	2
  7187     0078                     u1975:
  7188     0078  35CF               	lslf	??_ProcessMsg,f
  7189     0079  3EFF               	addlw	-1
  7190     007A  1D03               	skipz
  7191     007B  2878               	goto	u1975
  7192     007C  354F               	lslf	??_ProcessMsg,w
  7193     007D  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7194     007E  0086               	movwf	6
  7195     007F  0187               	clrf	7
  7196     0080  0801               	movf	1,w
  7197     0081  0021               	movlb	1	; select bank1
  7198     0082  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7199     0083                     l3926:
  7200                           
  7201                           ;main.c: 54:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  7202     0083  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7203     0084  0020               	movlb	0	; select bank0
  7204     0085  00A0               	movwf	SendMsg@data
  7205     0086  3002               	movlw	2
  7206     0087  00A1               	movwf	SendMsg@data_len
  7207     0088  300C               	movlw	12
  7208     0089  3186  2678  3180   	fcall	_SendMsg
  7209                           
  7210                           ;main.c: 55:             break;
  7211     008C  29AB               	goto	l693
  7212     008D                     l3928:
  7213                           
  7214                           ;main.c: 58:             SSPA_getTemp((antenna_band_t) data[0]);
  7215     008D  084E               	movf	ProcessMsg@data,w
  7216     008E  0086               	movwf	6
  7217     008F  0187               	clrf	7
  7218     0090  0801               	movf	1,w
  7219     0091  3185  25FE  3180   	fcall	_SSPA_getTemp
  7220     0094                     l3930:
  7221                           
  7222                           ;main.c: 59:             payload[0] = data[0];
  7223     0094  0020               	movlb	0	; select bank0
  7224     0095  084E               	movf	ProcessMsg@data,w
  7225     0096  0086               	movwf	6
  7226     0097  0187               	clrf	7
  7227     0098  0801               	movf	1,w
  7228     0099  0021               	movlb	1	; select bank1
  7229     009A  00C4               	movwf	ProcessMsg@payload^(0+128)
  7230     009B                     l3932:
  7231                           
  7232                           ;main.c: 60:             unpackWord((uint16_t) sspas[data[0]].m_wTemp, &payload[1]);
  7233     009B  0020               	movlb	0	; select bank0
  7234     009C  084E               	movf	ProcessMsg@data,w
  7235     009D  0086               	movwf	6
  7236     009E  0187               	clrf	7
  7237     009F  0801               	movf	1,w
  7238     00A0  00CF               	movwf	??_ProcessMsg
  7239     00A1  3002               	movlw	2
  7240     00A2                     u1985:
  7241     00A2  35CF               	lslf	??_ProcessMsg,f
  7242     00A3  3EFF               	addlw	-1
  7243     00A4  1D03               	skipz
  7244     00A5  28A2               	goto	u1985
  7245     00A6  354F               	lslf	??_ProcessMsg,w
  7246     00A7  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7247     00A8  0086               	movwf	6
  7248     00A9  0187               	clrf	7
  7249     00AA  3F40               	moviw [0]fsr1
  7250     00AB  00A0               	movwf	unpackWord@value
  7251     00AC  3F41               	moviw [1]fsr1
  7252     00AD  00A1               	movwf	unpackWord@value+1
  7253     00AE  30C5               	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7254     00AF  00A2               	movwf	unpackWord@data
  7255     00B0  318D  25BD  3180   	fcall	_unpackWord
  7256     00B3                     l3934:
  7257                           
  7258                           ;main.c: 61:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7259     00B3  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7260     00B4  0020               	movlb	0	; select bank0
  7261     00B5  00A0               	movwf	SendMsg@data
  7262     00B6  3003               	movlw	3
  7263     00B7  00A1               	movwf	SendMsg@data_len
  7264     00B8  300D               	movlw	13
  7265     00B9  3186  2678  3180   	fcall	_SendMsg
  7266                           
  7267                           ;main.c: 62:             break;
  7268     00BC  29AB               	goto	l693
  7269     00BD                     l3936:
  7270                           
  7271                           ;main.c: 65:             SSPA_getPOut((antenna_band_t) data[0]);
  7272     00BD  084E               	movf	ProcessMsg@data,w
  7273     00BE  0086               	movwf	6
  7274     00BF  0187               	clrf	7
  7275     00C0  0801               	movf	1,w
  7276     00C1  3182  22F4  3180   	fcall	_SSPA_getPOut
  7277     00C4                     l3938:
  7278                           
  7279                           ;main.c: 66:             payload[0] = data[0];
  7280     00C4  0020               	movlb	0	; select bank0
  7281     00C5  084E               	movf	ProcessMsg@data,w
  7282     00C6  0086               	movwf	6
  7283     00C7  0187               	clrf	7
  7284     00C8  0801               	movf	1,w
  7285     00C9  0021               	movlb	1	; select bank1
  7286     00CA  00C4               	movwf	ProcessMsg@payload^(0+128)
  7287     00CB                     l3940:
  7288                           
  7289                           ;main.c: 67:             payload[1] = sspas[data[0]].m_bPOut;
  7290     00CB  0020               	movlb	0	; select bank0
  7291     00CC  084E               	movf	ProcessMsg@data,w
  7292     00CD  0086               	movwf	6
  7293     00CE  0187               	clrf	7
  7294     00CF  0801               	movf	1,w
  7295     00D0  00CF               	movwf	??_ProcessMsg
  7296     00D1  3002               	movlw	2
  7297     00D2                     u1995:
  7298     00D2  35CF               	lslf	??_ProcessMsg,f
  7299     00D3  3EFF               	addlw	-1
  7300     00D4  1D03               	skipz
  7301     00D5  28D2               	goto	u1995
  7302     00D6  354F               	lslf	??_ProcessMsg,w
  7303     00D7  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  7304     00D8  0086               	movwf	6
  7305     00D9  0187               	clrf	7
  7306     00DA  0801               	movf	1,w
  7307     00DB  0021               	movlb	1	; select bank1
  7308     00DC  00C5               	movwf	(ProcessMsg@payload^(0+128)+1)
  7309     00DD                     l3942:
  7310                           
  7311                           ;main.c: 68:             unpackLong(sspas[data[0]].m_lCurrent, &payload[2]);
  7312     00DD  0020               	movlb	0	; select bank0
  7313     00DE  084E               	movf	ProcessMsg@data,w
  7314     00DF  0086               	movwf	6
  7315     00E0  0187               	clrf	7
  7316     00E1  0801               	movf	1,w
  7317     00E2  00CF               	movwf	??_ProcessMsg
  7318     00E3  3002               	movlw	2
  7319     00E4                     u2005:
  7320     00E4  35CF               	lslf	??_ProcessMsg,f
  7321     00E5  3EFF               	addlw	-1
  7322     00E6  1D03               	skipz
  7323     00E7  28E4               	goto	u2005
  7324     00E8  354F               	lslf	??_ProcessMsg,w
  7325     00E9  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  7326     00EA  0086               	movwf	6
  7327     00EB  0187               	clrf	7
  7328     00EC  3F40               	moviw [0]fsr1
  7329     00ED  00A0               	movwf	unpackLong@value
  7330     00EE  3F41               	moviw [1]fsr1
  7331     00EF  00A1               	movwf	unpackLong@value+1
  7332     00F0  3F42               	moviw [2]fsr1
  7333     00F1  00A2               	movwf	unpackLong@value+2
  7334     00F2  3F43               	moviw [3]fsr1
  7335     00F3  00A3               	movwf	unpackLong@value+3
  7336     00F4  30C6               	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7337     00F5  00A4               	movwf	unpackLong@data
  7338     00F6  3184  24B8  3180   	fcall	_unpackLong
  7339     00F9                     l3944:
  7340                           
  7341                           ;main.c: 69:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7342     00F9  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7343     00FA  0020               	movlb	0	; select bank0
  7344     00FB  00A0               	movwf	SendMsg@data
  7345     00FC  3006               	movlw	6
  7346     00FD  00A1               	movwf	SendMsg@data_len
  7347     00FE  300E               	movlw	14
  7348     00FF  3186  2678  3180   	fcall	_SendMsg
  7349                           
  7350                           ;main.c: 70:             break;
  7351     0102  29AB               	goto	l693
  7352     0103                     l3946:
  7353                           
  7354                           ;main.c: 73:             KAPS_getStatus();
  7355     0103  3187  27BF  3180   	fcall	_KAPS_getStatus
  7356     0106                     l3948:
  7357                           
  7358                           ;main.c: 74:             payload[0] = (uint8_t) kaps.m_Status;
  7359     0106  0020               	movlb	0	; select bank0
  7360     0107  0865               	movf	_kaps+1,w
  7361     0108  0021               	movlb	1	; select bank1
  7362     0109  00C4               	movwf	ProcessMsg@payload^(0+128)
  7363     010A                     l3950:
  7364                           
  7365                           ;main.c: 75:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7366     010A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7367     010B  0020               	movlb	0	; select bank0
  7368     010C  00A0               	movwf	SendMsg@data
  7369     010D  01A1               	clrf	SendMsg@data_len
  7370     010E  0AA1               	incf	SendMsg@data_len,f
  7371     010F  300F               	movlw	15
  7372     0110  3186  2678  3180   	fcall	_SendMsg
  7373                           
  7374                           ;main.c: 76:             break;
  7375     0113  29AB               	goto	l693
  7376     0114                     l3952:
  7377                           
  7378                           ;main.c: 79:             KAPS_getPos();
  7379     0114  3185  25C0  3180   	fcall	_KAPS_getPos
  7380                           
  7381                           ;main.c: 80:             unpackLong(kaps.m_lAbsPos, payload);
  7382     0117  3002               	movlw	2
  7383     0118  3E64               	addlw	(low (_kaps| 0))& (0+255)
  7384     0119  0086               	movwf	6
  7385     011A  0187               	clrf	7
  7386     011B  3F40               	moviw [0]fsr1
  7387     011C  0020               	movlb	0	; select bank0
  7388     011D  00A0               	movwf	unpackLong@value
  7389     011E  3F41               	moviw [1]fsr1
  7390     011F  00A1               	movwf	unpackLong@value+1
  7391     0120  3F42               	moviw [2]fsr1
  7392     0121  00A2               	movwf	unpackLong@value+2
  7393     0122  3F43               	moviw [3]fsr1
  7394     0123  00A3               	movwf	unpackLong@value+3
  7395     0124  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7396     0125  00A4               	movwf	unpackLong@data
  7397     0126  3184  24B8  3180   	fcall	_unpackLong
  7398                           
  7399                           ;main.c: 81:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7400     0129  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7401     012A  0020               	movlb	0	; select bank0
  7402     012B  00A0               	movwf	SendMsg@data
  7403     012C  3004               	movlw	4
  7404     012D  00A1               	movwf	SendMsg@data_len
  7405     012E  3010               	movlw	16
  7406     012F  3186  2678  3180   	fcall	_SendMsg
  7407                           
  7408                           ;main.c: 82:             break;
  7409     0132  29AB               	goto	l693
  7410     0133                     l3954:
  7411                           
  7412                           ;main.c: 85:             KAPS_getIndex();
  7413     0133  318F  27D2  3180   	fcall	_KAPS_getIndex
  7414     0136                     l3956:
  7415                           
  7416                           ;main.c: 86:             payload[0] = kaps.m_bIdxPos;
  7417     0136  0020               	movlb	0	; select bank0
  7418     0137  086A               	movf	_kaps+6,w
  7419     0138  0021               	movlb	1	; select bank1
  7420     0139  00C4               	movwf	ProcessMsg@payload^(0+128)
  7421     013A                     l3958:
  7422                           
  7423                           ;main.c: 87:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7424     013A  30C4               	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7425     013B  0020               	movlb	0	; select bank0
  7426     013C  00A0               	movwf	SendMsg@data
  7427     013D  01A1               	clrf	SendMsg@data_len
  7428     013E  0AA1               	incf	SendMsg@data_len,f
  7429     013F  3012               	movlw	18
  7430     0140  3186  2678  3180   	fcall	_SendMsg
  7431                           
  7432                           ;main.c: 88:             break;
  7433     0143  29AB               	goto	l693
  7434     0144                     l3960:
  7435                           
  7436                           ;main.c: 91:             SSPA_setMute((antenna_band_t) data[0], (mute_t) data[1]);
  7437     0144  084E               	movf	ProcessMsg@data,w
  7438     0145  0086               	movwf	6
  7439     0146  0187               	clrf	7
  7440     0147  3F41               	moviw [1]fsr1
  7441     0148  00F4               	movwf	SSPA_setMute@mute
  7442     0149  084E               	movf	ProcessMsg@data,w
  7443     014A  0086               	movwf	6
  7444     014B  0187               	clrf	7
  7445     014C  0801               	movf	1,w
  7446     014D  3186  26B4  3180   	fcall	_SSPA_setMute
  7447                           
  7448                           ;main.c: 92:             break;
  7449     0150  29AB               	goto	l693
  7450     0151                     l3962:
  7451                           
  7452                           ;main.c: 95:             KAPS_GoToIdx(data[0]);
  7453     0151  084E               	movf	ProcessMsg@data,w
  7454     0152  0086               	movwf	6
  7455     0153  0187               	clrf	7
  7456     0154  0801               	movf	1,w
  7457     0155  318F  2706  3180   	fcall	_KAPS_GoToIdx
  7458                           
  7459                           ;main.c: 96:             break;
  7460     0158  29AB               	goto	l693
  7461     0159                     l3964:
  7462                           
  7463                           ;main.c: 99:             KAPS_setAbsPos(packLong(data));
  7464     0159  084E               	movf	ProcessMsg@data,w
  7465     015A  3183  237E  3180   	fcall	_packLong
  7466     015D  0020               	movlb	0	; select bank0
  7467     015E  0823               	movf	?_packLong+3,w
  7468     015F  00B0               	movwf	KAPS_setAbsPos@pos+3
  7469     0160  0822               	movf	?_packLong+2,w
  7470     0161  00AF               	movwf	KAPS_setAbsPos@pos+2
  7471     0162  0821               	movf	?_packLong+1,w
  7472     0163  00AE               	movwf	KAPS_setAbsPos@pos+1
  7473     0164  0820               	movf	?_packLong,w
  7474     0165  00AD               	movwf	KAPS_setAbsPos@pos
  7475     0166  3187  275C  3180   	fcall	_KAPS_setAbsPos
  7476                           
  7477                           ;main.c: 100:             break;
  7478     0169  29AB               	goto	l693
  7479     016A                     l3966:
  7480                           
  7481                           ;main.c: 103:             KAPS_setRelPos((int8_t) data[0]);
  7482     016A  084E               	movf	ProcessMsg@data,w
  7483     016B  0086               	movwf	6
  7484     016C  0187               	clrf	7
  7485     016D  0801               	movf	1,w
  7486     016E  318F  272C  3180   	fcall	_KAPS_setRelPos
  7487                           
  7488                           ;main.c: 104:             break;
  7489     0171  29AB               	goto	l693
  7490     0172                     l3968:
  7491                           
  7492                           ;main.c: 107:             KAPS_StorePos(data[4], packLong(data));
  7493     0172  084E               	movf	ProcessMsg@data,w
  7494     0173  3183  237E  3180   	fcall	_packLong
  7495     0176  0020               	movlb	0	; select bank0
  7496     0177  0823               	movf	?_packLong+3,w
  7497     0178  00B0               	movwf	KAPS_StorePos@pos+3
  7498     0179  0822               	movf	?_packLong+2,w
  7499     017A  00AF               	movwf	KAPS_StorePos@pos+2
  7500     017B  0821               	movf	?_packLong+1,w
  7501     017C  00AE               	movwf	KAPS_StorePos@pos+1
  7502     017D  0820               	movf	?_packLong,w
  7503     017E  00AD               	movwf	KAPS_StorePos@pos
  7504     017F  084E               	movf	ProcessMsg@data,w
  7505     0180  3E04               	addlw	4
  7506     0181  0086               	movwf	6
  7507     0182  0187               	clrf	7
  7508     0183  0801               	movf	1,w
  7509     0184  3185  2580  3180   	fcall	_KAPS_StorePos
  7510                           
  7511                           ;main.c: 108:             break;
  7512     0187  29AB               	goto	l693
  7513     0188                     l3972:
  7514     0188  0850               	movf	ProcessMsg@msg_id,w
  7515                           
  7516                           ; Switch size 1, requested type "simple"
  7517                           ; Number of cases is 11, Range of values is 1 to 17
  7518                           ; switch strategies available:
  7519                           ; Name         Instructions Cycles
  7520                           ; simple_byte           34    18 (average)
  7521                           ; direct_byte           43     9 (fixed)
  7522                           ; jumptable            263     9 (fixed)
  7523                           ;	Chosen strategy is simple_byte
  7524     0189  3A01               	xorlw	1	; case 1
  7525     018A  1903               	skipnz
  7526     018B  2944               	goto	l3960
  7527     018C  3A03               	xorlw	3	; case 2
  7528     018D  1903               	skipnz
  7529     018E  286B               	goto	l3922
  7530     018F  3A01               	xorlw	1	; case 3
  7531     0190  1903               	skipnz
  7532     0191  288D               	goto	l3928
  7533     0192  3A07               	xorlw	7	; case 4
  7534     0193  1903               	skipnz
  7535     0194  28BD               	goto	l3936
  7536     0195  3A01               	xorlw	1	; case 5
  7537     0196  1903               	skipnz
  7538     0197  2903               	goto	l3946
  7539     0198  3A03               	xorlw	3	; case 6
  7540     0199  1903               	skipnz
  7541     019A  2914               	goto	l3952
  7542     019B  3A01               	xorlw	1	; case 7
  7543     019C  1903               	skipnz
  7544     019D  2951               	goto	l3962
  7545     019E  3A0F               	xorlw	15	; case 8
  7546     019F  1903               	skipnz
  7547     01A0  2959               	goto	l3964
  7548     01A1  3A01               	xorlw	1	; case 9
  7549     01A2  1903               	skipnz
  7550     01A3  296A               	goto	l3966
  7551     01A4  3A03               	xorlw	3	; case 10
  7552     01A5  1903               	skipnz
  7553     01A6  2972               	goto	l3968
  7554     01A7  3A1B               	xorlw	27	; case 17
  7555     01A8  1903               	skipnz
  7556     01A9  2933               	goto	l3954
  7557     01AA  29AB               	goto	l693
  7558     01AB                     l693:
  7559     01AB  0008               	return
  7560     01AC                     __end_of_ProcessMsg:
  7561                           
  7562                           	psect	text15
  7563     0DBD                     __ptext15:	
  7564 ;; *************** function _unpackWord *****************
  7565 ;; Defined at:
  7566 ;;		line 71 in file "utils.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  value           2    0[BANK0 ] unsigned short 
  7569 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7570 ;;		 -> ProcessMsg@payload(6), 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr1l, fsr1h, status,2
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7582 ;;      Params:         0       3       0       0       0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0       0
  7584 ;;      Temps:          0       0       0       0       0       0       0       0
  7585 ;;      Totals:         0       3       0       0       0       0       0       0
  7586 ;;Total ram usage:        3 bytes
  7587 ;; Hardware stack levels used: 1
  7588 ;; Hardware stack levels required when called: 7
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_ProcessMsg
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596     0DBD                     _unpackWord:	
  7597                           ;psect for function _unpackWord
  7598                           
  7599     0DBD                     l3804:	
  7600                           ;incstack = 0
  7601                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7602                           
  7603                           
  7604                           ;utils.c: 73:     data[0] = value & 0xFF;
  7605     0DBD  0020               	movlb	0	; select bank0
  7606     0DBE  0822               	movf	unpackWord@data,w
  7607     0DBF  0086               	movwf	6
  7608     0DC0  0187               	clrf	7
  7609     0DC1  0820               	movf	unpackWord@value,w
  7610     0DC2  0081               	movwf	1
  7611     0DC3                     l3806:
  7612                           
  7613                           ;utils.c: 74:     data[1] = (value >> 8) & 0xFF;
  7614     0DC3  0A22               	incf	unpackWord@data,w
  7615     0DC4  0086               	movwf	6
  7616     0DC5  0187               	clrf	7
  7617     0DC6  0821               	movf	unpackWord@value+1,w
  7618     0DC7  0081               	movwf	1
  7619     0DC8                     l751:
  7620     0DC8  0008               	return
  7621     0DC9                     __end_of_unpackWord:
  7622                           
  7623                           	psect	text16
  7624     06B4                     __ptext16:	
  7625 ;; *************** function _SSPA_setMute *****************
  7626 ;; Defined at:
  7627 ;;		line 88 in file "sspa.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  band            1    wreg     enum E40
  7630 ;;  mute            1    4[COMMON] enum E36
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;  band            1    5[COMMON] enum E40
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  1    wreg      void 
  7635 ;; Registers used:
  7636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7642 ;;      Params:         1       0       0       0       0       0       0       0
  7643 ;;      Locals:         1       0       0       0       0       0       0       0
  7644 ;;      Temps:          0       2       0       0       0       0       0       0
  7645 ;;      Totals:         2       2       0       0       0       0       0       0
  7646 ;;Total ram usage:        4 bytes
  7647 ;; Hardware stack levels used: 1
  7648 ;; Hardware stack levels required when called: 7
  7649 ;; This function calls:
  7650 ;;		Nothing
  7651 ;; This function is called by:
  7652 ;;		_ProcessMsg
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656     06B4                     _SSPA_setMute:	
  7657                           ;psect for function _SSPA_setMute
  7658                           
  7659                           
  7660                           ;incstack = 0
  7661                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7662                           ;SSPA_setMute@band stored from wreg
  7663     06B4  00F5               	movwf	SSPA_setMute@band
  7664     06B5                     l3868:
  7665                           
  7666                           ;sspa.c: 89:     switch (band) {
  7667     06B5  2ECC               	goto	l3876
  7668     06B6                     l3870:
  7669                           
  7670                           ;sspa.c: 91:             if (mute == UNMUTE)
  7671     06B6  0874               	movf	SSPA_setMute@mute,w
  7672     06B7  1D03               	btfss	3,2
  7673     06B8  2EBA               	goto	u1931
  7674     06B9  2EBB               	goto	u1930
  7675     06BA                     u1931:
  7676     06BA  2EBE               	goto	l852
  7677     06BB                     u1930:
  7678     06BB                     l849:	
  7679                           ;sspa.c: 92:                 do { LATCbits.LATC7 = 1; } while(0);
  7680                           
  7681     06BB  0022               	movlb	2	; select bank2
  7682     06BC  178E               	bsf	14,7	;volatile
  7683     06BD  2EE0               	goto	l3878
  7684     06BE                     l852:	
  7685                           ;sspa.c: 94:                 do { LATCbits.LATC7 = 0; } while(0);
  7686                           
  7687     06BE  0022               	movlb	2	; select bank2
  7688     06BF  138E               	bcf	14,7	;volatile
  7689     06C0  2EE0               	goto	l3878
  7690     06C1                     l3872:
  7691                           
  7692                           ;sspa.c: 98:             if (mute == UNMUTE)
  7693     06C1  0874               	movf	SSPA_setMute@mute,w
  7694     06C2  1D03               	btfss	3,2
  7695     06C3  2EC5               	goto	u1941
  7696     06C4  2EC6               	goto	u1940
  7697     06C5                     u1941:
  7698     06C5  2EC9               	goto	l860
  7699     06C6                     u1940:
  7700     06C6                     l857:	
  7701                           ;sspa.c: 99:                 do { LATCbits.LATC6 = 1; } while(0);
  7702                           
  7703     06C6  0022               	movlb	2	; select bank2
  7704     06C7  170E               	bsf	14,6	;volatile
  7705     06C8  2EE0               	goto	l3878
  7706     06C9                     l860:	
  7707                           ;sspa.c: 101:                 do { LATCbits.LATC6 = 0; } while(0);
  7708                           
  7709     06C9  0022               	movlb	2	; select bank2
  7710     06CA  130E               	bcf	14,6	;volatile
  7711     06CB  2EE0               	goto	l3878
  7712     06CC                     l3876:
  7713     06CC  0875               	movf	SSPA_setMute@band,w
  7714     06CD  0020               	movlb	0	; select bank0
  7715     06CE  00A0               	movwf	??_SSPA_setMute
  7716     06CF  01A1               	clrf	??_SSPA_setMute+1
  7717                           
  7718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7719                           ; Switch size 1, requested type "simple"
  7720                           ; Number of cases is 1, Range of values is 0 to 0
  7721                           ; switch strategies available:
  7722                           ; Name         Instructions Cycles
  7723                           ; simple_byte            4     3 (average)
  7724                           ; direct_byte            8     6 (fixed)
  7725                           ; jumptable            260     6 (fixed)
  7726                           ;	Chosen strategy is simple_byte
  7727     06D0  0821               	movf	??_SSPA_setMute+1,w
  7728     06D1  3A00               	xorlw	0	; case 0
  7729     06D2  1903               	skipnz
  7730     06D3  2ED5               	goto	l4222
  7731     06D4  2EE0               	goto	l3878
  7732     06D5                     l4222:
  7733                           
  7734                           ; Switch size 1, requested type "simple"
  7735                           ; Number of cases is 3, Range of values is 0 to 2
  7736                           ; switch strategies available:
  7737                           ; Name         Instructions Cycles
  7738                           ; simple_byte           10     6 (average)
  7739                           ; direct_byte           12     6 (fixed)
  7740                           ; jumptable            260     6 (fixed)
  7741                           ;	Chosen strategy is simple_byte
  7742     06D5  0820               	movf	??_SSPA_setMute,w
  7743     06D6  3A00               	xorlw	0	; case 0
  7744     06D7  1903               	skipnz
  7745     06D8  2EE0               	goto	l3878
  7746     06D9  3A01               	xorlw	1	; case 1
  7747     06DA  1903               	skipnz
  7748     06DB  2EB6               	goto	l3870
  7749     06DC  3A03               	xorlw	3	; case 2
  7750     06DD  1903               	skipnz
  7751     06DE  2EC1               	goto	l3872
  7752     06DF  2EE0               	goto	l3878
  7753     06E0                     l3878:
  7754                           
  7755                           ;sspa.c: 109:     sspas[band].m_Mute = mute;
  7756     06E0  0875               	movf	SSPA_setMute@band,w
  7757     06E1  0020               	movlb	0	; select bank0
  7758     06E2  00A0               	movwf	??_SSPA_setMute
  7759     06E3  3002               	movlw	2
  7760     06E4                     u1955:
  7761     06E4  35A0               	lslf	??_SSPA_setMute,f
  7762     06E5  3EFF               	addlw	-1
  7763     06E6  1D03               	skipz
  7764     06E7  2EE4               	goto	u1955
  7765     06E8  3520               	lslf	??_SSPA_setMute,w
  7766     06E9  3EA0               	addlw	(low (_sspas| 0))& (0+255)
  7767     06EA  0086               	movwf	6
  7768     06EB  0187               	clrf	7
  7769     06EC  0874               	movf	SSPA_setMute@mute,w
  7770     06ED  0081               	movwf	1
  7771     06EE                     l864:
  7772     06EE  0008               	return
  7773     06EF                     __end_of_SSPA_setMute:
  7774                           
  7775                           	psect	text17
  7776     05FE                     __ptext17:	
  7777 ;; *************** function _SSPA_getTemp *****************
  7778 ;; Defined at:
  7779 ;;		line 116 in file "sspa.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  band            1    wreg     enum E40
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  band            1   45[BANK0 ] enum E40
  7784 ;;  adc_value       2   42[BANK0 ] unsigned short 
  7785 ;;  channel         1   44[BANK0 ] enum E9257
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1    wreg      void 
  7788 ;; Registers used:
  7789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7795 ;;      Params:         0       0       0       0       0       0       0       0
  7796 ;;      Locals:         0       4       0       0       0       0       0       0
  7797 ;;      Temps:          0       2       0       0       0       0       0       0
  7798 ;;      Totals:         0       6       0       0       0       0       0       0
  7799 ;;Total ram usage:        6 bytes
  7800 ;; Hardware stack levels used: 1
  7801 ;; Hardware stack levels required when called: 9
  7802 ;; This function calls:
  7803 ;;		_ADC2Celsius
  7804 ;;		_getADCValue
  7805 ;; This function is called by:
  7806 ;;		_ProcessMsg
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810     05FE                     _SSPA_getTemp:	
  7811                           ;psect for function _SSPA_getTemp
  7812                           
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7816                           ;SSPA_getTemp@band stored from wreg
  7817     05FE  0020               	movlb	0	; select bank0
  7818     05FF  00CD               	movwf	SSPA_getTemp@band
  7819     0600                     l3784:
  7820                           
  7821                           ;sspa.c: 117:     adc_channel_t channel;;sspa.c: 118:     adc_result_t adc_value;;sspa.c
      +                          : 120:     switch (band) {
  7822     0600  2E07               	goto	l3792
  7823     0601                     l3786:
  7824                           
  7825                           ;sspa.c: 122:             channel = TM_Ka;
  7826     0601  3003               	movlw	3
  7827     0602  00CC               	movwf	SSPA_getTemp@channel
  7828                           
  7829                           ;sspa.c: 123:             break;
  7830     0603  2E1A               	goto	l3794
  7831     0604                     l3788:
  7832                           
  7833                           ;sspa.c: 125:             channel = TM_X;
  7834     0604  3007               	movlw	7
  7835     0605  00CC               	movwf	SSPA_getTemp@channel
  7836                           
  7837                           ;sspa.c: 126:             break;
  7838     0606  2E1A               	goto	l3794
  7839     0607                     l3792:
  7840     0607  084D               	movf	SSPA_getTemp@band,w
  7841     0608  00C8               	movwf	??_SSPA_getTemp
  7842     0609  01C9               	clrf	??_SSPA_getTemp+1
  7843                           
  7844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7845                           ; Switch size 1, requested type "simple"
  7846                           ; Number of cases is 1, Range of values is 0 to 0
  7847                           ; switch strategies available:
  7848                           ; Name         Instructions Cycles
  7849                           ; simple_byte            4     3 (average)
  7850                           ; direct_byte            8     6 (fixed)
  7851                           ; jumptable            260     6 (fixed)
  7852                           ;	Chosen strategy is simple_byte
  7853     060A  0849               	movf	??_SSPA_getTemp+1,w
  7854     060B  3A00               	xorlw	0	; case 0
  7855     060C  1903               	skipnz
  7856     060D  2E0F               	goto	l4224
  7857     060E  2E1A               	goto	l3794
  7858     060F                     l4224:
  7859                           
  7860                           ; Switch size 1, requested type "simple"
  7861                           ; Number of cases is 3, Range of values is 0 to 2
  7862                           ; switch strategies available:
  7863                           ; Name         Instructions Cycles
  7864                           ; simple_byte           10     6 (average)
  7865                           ; direct_byte           12     6 (fixed)
  7866                           ; jumptable            260     6 (fixed)
  7867                           ;	Chosen strategy is simple_byte
  7868     060F  0848               	movf	??_SSPA_getTemp,w
  7869     0610  3A00               	xorlw	0	; case 0
  7870     0611  1903               	skipnz
  7871     0612  2E1A               	goto	l3794
  7872     0613  3A01               	xorlw	1	; case 1
  7873     0614  1903               	skipnz
  7874     0615  2E01               	goto	l3786
  7875     0616  3A03               	xorlw	3	; case 2
  7876     0617  1903               	skipnz
  7877     0618  2E04               	goto	l3788
  7878     0619  2E1A               	goto	l3794
  7879     061A                     l3794:
  7880                           
  7881                           ;sspa.c: 133:     adc_value = getADCValue(channel);
  7882     061A  084C               	movf	SSPA_getTemp@channel,w
  7883     061B  3184  2421  3185   	fcall	_getADCValue
  7884     061E  0020               	movlb	0	; select bank0
  7885     061F  0821               	movf	?_getADCValue+1,w
  7886     0620  00CB               	movwf	SSPA_getTemp@adc_value+1
  7887     0621  0820               	movf	?_getADCValue,w
  7888     0622  00CA               	movwf	SSPA_getTemp@adc_value
  7889     0623                     l3796:
  7890                           
  7891                           ;sspa.c: 135:     sspas[band].m_wTemp = ADC2Celsius(adc_value);
  7892     0623  084B               	movf	SSPA_getTemp@adc_value+1,w
  7893     0624  00BB               	movwf	ADC2Celsius@v+1
  7894     0625  084A               	movf	SSPA_getTemp@adc_value,w
  7895     0626  00BA               	movwf	ADC2Celsius@v
  7896     0627  3183  23D5  3185   	fcall	_ADC2Celsius
  7897     062A  0020               	movlb	0	; select bank0
  7898     062B  084D               	movf	SSPA_getTemp@band,w
  7899     062C  00C8               	movwf	??_SSPA_getTemp
  7900     062D  3002               	movlw	2
  7901     062E                     u1855:
  7902     062E  35C8               	lslf	??_SSPA_getTemp,f
  7903     062F  3EFF               	addlw	-1
  7904     0630  1D03               	skipz
  7905     0631  2E2E               	goto	u1855
  7906     0632  3548               	lslf	??_SSPA_getTemp,w
  7907     0633  3EA1               	addlw	(low ((_sspas| 0+1)))& (0+255)
  7908     0634  0086               	movwf	6
  7909     0635  0187               	clrf	7
  7910     0636  083A               	movf	?_ADC2Celsius,w
  7911     0637  3FC0               	movwi [0]fsr1
  7912     0638  083B               	movf	?_ADC2Celsius+1,w
  7913     0639  3FC1               	movwi [1]fsr1
  7914     063A                     l873:
  7915     063A  0008               	return
  7916     063B                     __end_of_SSPA_getTemp:
  7917                           
  7918                           	psect	text18
  7919     03D5                     __ptext18:	
  7920 ;; *************** function _ADC2Celsius *****************
  7921 ;; Defined at:
  7922 ;;		line 62 in file "sspa.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  v               2   26[BANK0 ] unsigned short 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  result          4   36[BANK0 ] long 
  7927 ;;  value           4   32[BANK0 ] long 
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  2   26[BANK0 ] short 
  7930 ;; Registers used:
  7931 ;;		wreg, status,2, status,0, pclath, cstack
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7937 ;;      Params:         0       2       0       0       0       0       0       0
  7938 ;;      Locals:         0       8       0       0       0       0       0       0
  7939 ;;      Temps:          0       4       0       0       0       0       0       0
  7940 ;;      Totals:         0      14       0       0       0       0       0       0
  7941 ;;Total ram usage:       14 bytes
  7942 ;; Hardware stack levels used: 1
  7943 ;; Hardware stack levels required when called: 8
  7944 ;; This function calls:
  7945 ;;		___aldiv
  7946 ;;		___lmul
  7947 ;; This function is called by:
  7948 ;;		_SSPA_getTemp
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952     03D5                     _ADC2Celsius:	
  7953                           ;psect for function _ADC2Celsius
  7954                           
  7955     03D5                     l3760:	
  7956                           ;incstack = 0
  7957                           ; Regs used in _ADC2Celsius: [wreg+status,2+status,0+pclath+cstack]
  7958                           
  7959                           
  7960                           ;sspa.c: 63:     int32_t value = (int32_t) v;
  7961     03D5  0020               	movlb	0	; select bank0
  7962     03D6  083A               	movf	ADC2Celsius@v,w
  7963     03D7  00C0               	movwf	ADC2Celsius@value
  7964     03D8  083B               	movf	ADC2Celsius@v+1,w
  7965     03D9  00C1               	movwf	ADC2Celsius@value+1
  7966     03DA  01C2               	clrf	ADC2Celsius@value+2
  7967     03DB  01C3               	clrf	ADC2Celsius@value+3
  7968     03DC                     l3762:
  7969                           
  7970                           ;sspa.c: 64:     int32_t result = (int32_t)(160) - (value * (int32_t)(428)) / (int32_t)(
      +                          4096);
  7971     03DC  3000               	movlw	0
  7972     03DD  00AF               	movwf	___aldiv@divisor+3
  7973     03DE  3000               	movlw	0
  7974     03DF  00AE               	movwf	___aldiv@divisor+2
  7975     03E0  3010               	movlw	16
  7976     03E1  00AD               	movwf	___aldiv@divisor+1
  7977     03E2  3000               	movlw	0
  7978     03E3  00AC               	movwf	___aldiv@divisor
  7979     03E4  0843               	movf	ADC2Celsius@value+3,w
  7980     03E5  00A3               	movwf	___lmul@multiplier+3
  7981     03E6  0842               	movf	ADC2Celsius@value+2,w
  7982     03E7  00A2               	movwf	___lmul@multiplier+2
  7983     03E8  0841               	movf	ADC2Celsius@value+1,w
  7984     03E9  00A1               	movwf	___lmul@multiplier+1
  7985     03EA  0840               	movf	ADC2Celsius@value,w
  7986     03EB  00A0               	movwf	___lmul@multiplier
  7987     03EC  3000               	movlw	0
  7988     03ED  00A7               	movwf	___lmul@multiplicand+3
  7989     03EE  3000               	movlw	0
  7990     03EF  00A6               	movwf	___lmul@multiplicand+2
  7991     03F0  3001               	movlw	1
  7992     03F1  00A5               	movwf	___lmul@multiplicand+1
  7993     03F2  30AC               	movlw	172
  7994     03F3  00A4               	movwf	___lmul@multiplicand
  7995     03F4  3187  2728  3183   	fcall	___lmul
  7996     03F7  0020               	movlb	0	; select bank0
  7997     03F8  0823               	movf	?___lmul+3,w
  7998     03F9  00B3               	movwf	___aldiv@dividend+3
  7999     03FA  0822               	movf	?___lmul+2,w
  8000     03FB  00B2               	movwf	___aldiv@dividend+2
  8001     03FC  0821               	movf	?___lmul+1,w
  8002     03FD  00B1               	movwf	___aldiv@dividend+1
  8003     03FE  0820               	movf	?___lmul,w
  8004     03FF  00B0               	movwf	___aldiv@dividend
  8005     0400  3182  2264  3183   	fcall	___aldiv
  8006     0403  30A0               	movlw	160
  8007     0404  0020               	movlb	0	; select bank0
  8008     0405  00BC               	movwf	??_ADC2Celsius
  8009     0406  3000               	movlw	0
  8010     0407  00BD               	movwf	??_ADC2Celsius+1
  8011     0408  3000               	movlw	0
  8012     0409  00BE               	movwf	??_ADC2Celsius+2
  8013     040A  3000               	movlw	0
  8014     040B  00BF               	movwf	??_ADC2Celsius+3
  8015     040C  082C               	movf	?___aldiv,w
  8016     040D  02BC               	subwf	??_ADC2Celsius,f
  8017     040E  082D               	movf	?___aldiv+1,w
  8018     040F  3BBD               	subwfb	??_ADC2Celsius+1,f
  8019     0410  082E               	movf	?___aldiv+2,w
  8020     0411  3BBE               	subwfb	??_ADC2Celsius+2,f
  8021     0412  082F               	movf	?___aldiv+3,w
  8022     0413  3BBF               	subwfb	??_ADC2Celsius+3,f
  8023     0414  083F               	movf	??_ADC2Celsius+3,w
  8024     0415  00C7               	movwf	ADC2Celsius@result+3
  8025     0416  083E               	movf	??_ADC2Celsius+2,w
  8026     0417  00C6               	movwf	ADC2Celsius@result+2
  8027     0418  083D               	movf	??_ADC2Celsius+1,w
  8028     0419  00C5               	movwf	ADC2Celsius@result+1
  8029     041A  083C               	movf	??_ADC2Celsius,w
  8030     041B  00C4               	movwf	ADC2Celsius@result
  8031     041C                     l3764:
  8032                           
  8033                           ;sspa.c: 66:     return (int16_t) result;
  8034     041C  0845               	movf	ADC2Celsius@result+1,w
  8035     041D  00BB               	movwf	?_ADC2Celsius+1
  8036     041E  0844               	movf	ADC2Celsius@result,w
  8037     041F  00BA               	movwf	?_ADC2Celsius
  8038     0420                     l837:
  8039     0420  0008               	return
  8040     0421                     __end_of_ADC2Celsius:
  8041                           
  8042                           	psect	text19
  8043     02F4                     __ptext19:	
  8044 ;; *************** function _SSPA_getPOut *****************
  8045 ;; Defined at:
  8046 ;;		line 142 in file "sspa.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;  band            1    wreg     enum E40
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  band            1   42[BANK0 ] enum E40
  8051 ;;  adc_value       2   40[BANK0 ] unsigned short 
  8052 ;;  channel         1    0        enum E9257
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8062 ;;      Params:         0       0       0       0       0       0       0       0
  8063 ;;      Locals:         0       3       0       0       0       0       0       0
  8064 ;;      Temps:          0       2       0       0       0       0       0       0
  8065 ;;      Totals:         0       5       0       0       0       0       0       0
  8066 ;;Total ram usage:        5 bytes
  8067 ;; Hardware stack levels used: 1
  8068 ;; Hardware stack levels required when called: 9
  8069 ;; This function calls:
  8070 ;;		_ADC2Amp
  8071 ;;		_ADC2dBm
  8072 ;;		_getADCValue
  8073 ;; This function is called by:
  8074 ;;		_ProcessMsg
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078     02F4                     _SSPA_getPOut:	
  8079                           ;psect for function _SSPA_getPOut
  8080                           
  8081                           
  8082                           ;incstack = 0
  8083                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8084                           ;SSPA_getPOut@band stored from wreg
  8085     02F4  0020               	movlb	0	; select bank0
  8086     02F5  00CA               	movwf	SSPA_getPOut@band
  8087     02F6                     l3808:
  8088                           
  8089                           ;sspa.c: 143:     adc_channel_t channel;;sspa.c: 144:     adc_result_t adc_value;;sspa.c
      +                          : 146:     switch (band) {
  8090     02F6  2B6A               	goto	l3830
  8091     02F7                     l877:	
  8092                           ;sspa.c: 147:         case ANTENNABAND_KA:
  8093                           
  8094     02F7                     l3810:
  8095                           
  8096                           ;sspa.c: 149:             adc_value = getADCValue(channel);
  8097     02F7  3001               	movlw	1
  8098     02F8  3184  2421  3182   	fcall	_getADCValue
  8099     02FB  0020               	movlb	0	; select bank0
  8100     02FC  0821               	movf	?_getADCValue+1,w
  8101     02FD  00C9               	movwf	SSPA_getPOut@adc_value+1
  8102     02FE  0820               	movf	?_getADCValue,w
  8103     02FF  00C8               	movwf	SSPA_getPOut@adc_value
  8104     0300                     l3812:
  8105                           
  8106                           ;sspa.c: 150:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8107     0300  0849               	movf	SSPA_getPOut@adc_value+1,w
  8108     0301  00BB               	movwf	ADC2Amp@v+1
  8109     0302  0848               	movf	SSPA_getPOut@adc_value,w
  8110     0303  00BA               	movwf	ADC2Amp@v
  8111     0304  3185  2540  3182   	fcall	_ADC2Amp
  8112     0307  0020               	movlb	0	; select bank0
  8113     0308  084A               	movf	SSPA_getPOut@band,w
  8114     0309  00C6               	movwf	??_SSPA_getPOut
  8115     030A  3002               	movlw	2
  8116     030B                     u1865:
  8117     030B  35C6               	lslf	??_SSPA_getPOut,f
  8118     030C  3EFF               	addlw	-1
  8119     030D  1D03               	skipz
  8120     030E  2B0B               	goto	u1865
  8121     030F  3546               	lslf	??_SSPA_getPOut,w
  8122     0310  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8123     0311  0086               	movwf	6
  8124     0312  0187               	clrf	7
  8125     0313  083A               	movf	?_ADC2Amp,w
  8126     0314  3FC0               	movwi [0]fsr1
  8127     0315  083B               	movf	?_ADC2Amp+1,w
  8128     0316  3FC1               	movwi [1]fsr1
  8129     0317  083C               	movf	?_ADC2Amp+2,w
  8130     0318  3FC2               	movwi [2]fsr1
  8131     0319  083D               	movf	?_ADC2Amp+3,w
  8132     031A  3FC3               	movwi [3]fsr1
  8133     031B                     l3814:
  8134                           
  8135                           ;sspa.c: 151:             sspas[band].m_bPOut = 0xFF;
  8136     031B  084A               	movf	SSPA_getPOut@band,w
  8137     031C  00C6               	movwf	??_SSPA_getPOut
  8138     031D  3002               	movlw	2
  8139     031E                     u1875:
  8140     031E  35C6               	lslf	??_SSPA_getPOut,f
  8141     031F  3EFF               	addlw	-1
  8142     0320  1D03               	skipz
  8143     0321  2B1E               	goto	u1875
  8144     0322  3546               	lslf	??_SSPA_getPOut,w
  8145     0323  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8146     0324  0086               	movwf	6
  8147     0325  0187               	clrf	7
  8148     0326  30FF               	movlw	255
  8149     0327  0081               	movwf	1
  8150                           
  8151                           ;sspa.c: 152:             break;
  8152     0328  2B7D               	goto	l882
  8153     0329                     l3816:
  8154     0329                     l3818:
  8155                           
  8156                           ;sspa.c: 156:             adc_value = getADCValue(channel);
  8157     0329  300A               	movlw	10
  8158     032A  3184  2421  3182   	fcall	_getADCValue
  8159     032D  0020               	movlb	0	; select bank0
  8160     032E  0821               	movf	?_getADCValue+1,w
  8161     032F  00C9               	movwf	SSPA_getPOut@adc_value+1
  8162     0330  0820               	movf	?_getADCValue,w
  8163     0331  00C8               	movwf	SSPA_getPOut@adc_value
  8164     0332                     l3820:
  8165                           
  8166                           ;sspa.c: 157:             sspas[band].m_lCurrent = ADC2Amp(adc_value);
  8167     0332  0849               	movf	SSPA_getPOut@adc_value+1,w
  8168     0333  00BB               	movwf	ADC2Amp@v+1
  8169     0334  0848               	movf	SSPA_getPOut@adc_value,w
  8170     0335  00BA               	movwf	ADC2Amp@v
  8171     0336  3185  2540  3182   	fcall	_ADC2Amp
  8172     0339  0020               	movlb	0	; select bank0
  8173     033A  084A               	movf	SSPA_getPOut@band,w
  8174     033B  00C6               	movwf	??_SSPA_getPOut
  8175     033C  3002               	movlw	2
  8176     033D                     u1885:
  8177     033D  35C6               	lslf	??_SSPA_getPOut,f
  8178     033E  3EFF               	addlw	-1
  8179     033F  1D03               	skipz
  8180     0340  2B3D               	goto	u1885
  8181     0341  3546               	lslf	??_SSPA_getPOut,w
  8182     0342  3EA4               	addlw	(low ((_sspas| 0+4)))& (0+255)
  8183     0343  0086               	movwf	6
  8184     0344  0187               	clrf	7
  8185     0345  083A               	movf	?_ADC2Amp,w
  8186     0346  3FC0               	movwi [0]fsr1
  8187     0347  083B               	movf	?_ADC2Amp+1,w
  8188     0348  3FC1               	movwi [1]fsr1
  8189     0349  083C               	movf	?_ADC2Amp+2,w
  8190     034A  3FC2               	movwi [2]fsr1
  8191     034B  083D               	movf	?_ADC2Amp+3,w
  8192     034C  3FC3               	movwi [3]fsr1
  8193     034D                     l3822:
  8194     034D                     l3824:
  8195                           
  8196                           ;sspa.c: 159:             adc_value = getADCValue(channel);
  8197     034D  3000               	movlw	0
  8198     034E  3184  2421  3182   	fcall	_getADCValue
  8199     0351  0020               	movlb	0	; select bank0
  8200     0352  0821               	movf	?_getADCValue+1,w
  8201     0353  00C9               	movwf	SSPA_getPOut@adc_value+1
  8202     0354  0820               	movf	?_getADCValue,w
  8203     0355  00C8               	movwf	SSPA_getPOut@adc_value
  8204     0356                     l3826:
  8205                           
  8206                           ;sspa.c: 160:             sspas[band].m_bPOut = (uint8_t) ADC2dBm(adc_value);
  8207     0356  084A               	movf	SSPA_getPOut@band,w
  8208     0357  00C6               	movwf	??_SSPA_getPOut
  8209     0358  3002               	movlw	2
  8210     0359                     u1895:
  8211     0359  35C6               	lslf	??_SSPA_getPOut,f
  8212     035A  3EFF               	addlw	-1
  8213     035B  1D03               	skipz
  8214     035C  2B59               	goto	u1895
  8215     035D  3546               	lslf	??_SSPA_getPOut,w
  8216     035E  3EA3               	addlw	(low ((_sspas| 0+3)))& (0+255)
  8217     035F  0086               	movwf	6
  8218     0360  0187               	clrf	7
  8219     0361  0849               	movf	SSPA_getPOut@adc_value+1,w
  8220     0362  00BB               	movwf	ADC2dBm@v+1
  8221     0363  0848               	movf	SSPA_getPOut@adc_value,w
  8222     0364  00BA               	movwf	ADC2dBm@v
  8223     0365  3186  263B  3182   	fcall	_ADC2dBm
  8224     0368  0081               	movwf	1
  8225                           
  8226                           ;sspa.c: 161:             break;
  8227     0369  2B7D               	goto	l882
  8228     036A                     l3830:
  8229     036A  084A               	movf	SSPA_getPOut@band,w
  8230     036B  00C6               	movwf	??_SSPA_getPOut
  8231     036C  01C7               	clrf	??_SSPA_getPOut+1
  8232                           
  8233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8234                           ; Switch size 1, requested type "simple"
  8235                           ; Number of cases is 1, Range of values is 0 to 0
  8236                           ; switch strategies available:
  8237                           ; Name         Instructions Cycles
  8238                           ; simple_byte            4     3 (average)
  8239                           ; direct_byte            8     6 (fixed)
  8240                           ; jumptable            260     6 (fixed)
  8241                           ;	Chosen strategy is simple_byte
  8242     036D  0847               	movf	??_SSPA_getPOut+1,w
  8243     036E  3A00               	xorlw	0	; case 0
  8244     036F  1903               	skipnz
  8245     0370  2B72               	goto	l4226
  8246     0371  2B7D               	goto	l882
  8247     0372                     l4226:
  8248                           
  8249                           ; Switch size 1, requested type "simple"
  8250                           ; Number of cases is 3, Range of values is 0 to 2
  8251                           ; switch strategies available:
  8252                           ; Name         Instructions Cycles
  8253                           ; simple_byte           10     6 (average)
  8254                           ; direct_byte           12     6 (fixed)
  8255                           ; jumptable            260     6 (fixed)
  8256                           ;	Chosen strategy is simple_byte
  8257     0372  0846               	movf	??_SSPA_getPOut,w
  8258     0373  3A00               	xorlw	0	; case 0
  8259     0374  1903               	skipnz
  8260     0375  2B7D               	goto	l882
  8261     0376  3A01               	xorlw	1	; case 1
  8262     0377  1903               	skipnz
  8263     0378  2AF7               	goto	l877
  8264     0379  3A03               	xorlw	3	; case 2
  8265     037A  1903               	skipnz
  8266     037B  2B29               	goto	l3816
  8267     037C  2B7D               	goto	l882
  8268     037D                     l882:
  8269     037D  0008               	return
  8270     037E                     __end_of_SSPA_getPOut:
  8271                           
  8272                           	psect	text20
  8273     0421                     __ptext20:	
  8274 ;; *************** function _getADCValue *****************
  8275 ;; Defined at:
  8276 ;;		line 38 in file "sspa.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  channel         1    wreg     enum E9257
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  channel         1    4[BANK0 ] enum E9257
  8281 ;;  i               1    7[BANK0 ] unsigned char 
  8282 ;;  sum             2    5[BANK0 ] unsigned short 
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  2    0[BANK0 ] unsigned short 
  8285 ;; Registers used:
  8286 ;;		wreg, status,2, status,0, pclath, cstack
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8292 ;;      Params:         0       2       0       0       0       0       0       0
  8293 ;;      Locals:         0       4       0       0       0       0       0       0
  8294 ;;      Temps:          0       2       0       0       0       0       0       0
  8295 ;;      Totals:         0       8       0       0       0       0       0       0
  8296 ;;Total ram usage:        8 bytes
  8297 ;; Hardware stack levels used: 1
  8298 ;; Hardware stack levels required when called: 8
  8299 ;; This function calls:
  8300 ;;		_ADC_GetConversionResult
  8301 ;;		_ADC_IsConversionDone
  8302 ;;		_ADC_SelectChannel
  8303 ;;		_ADC_StartConversion
  8304 ;; This function is called by:
  8305 ;;		_SSPA_getTemp
  8306 ;;		_SSPA_getPOut
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310     0421                     _getADCValue:	
  8311                           ;psect for function _getADCValue
  8312                           
  8313                           
  8314                           ;incstack = 0
  8315                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8316                           ;getADCValue@channel stored from wreg
  8317     0421  0020               	movlb	0	; select bank0
  8318     0422  00A4               	movwf	getADCValue@channel
  8319     0423                     l3734:
  8320                           
  8321                           ;sspa.c: 39:     adc_result_t sum = 0;
  8322     0423  01A5               	clrf	getADCValue@sum
  8323     0424  01A6               	clrf	getADCValue@sum+1
  8324     0425                     l3736:
  8325                           
  8326                           ;sspa.c: 41:     ADC_SelectChannel(channel);
  8327     0425  0824               	movf	getADCValue@channel,w
  8328     0426  318D  25B1  3184   	fcall	_ADC_SelectChannel
  8329     0429                     l3738:
  8330                           
  8331                           ;sspa.c: 43:     ADC_StartConversion();
  8332     0429  318C  24DA  3184   	fcall	_ADC_StartConversion
  8333     042C                     l3740:
  8334                           
  8335                           ;sspa.c: 45:     _delay((unsigned long)((2)*(16000000/4000.0)));
  8336     042C  300B               	movlw	11
  8337     042D  0020               	movlb	0	; select bank0
  8338     042E  00A2               	movwf	??_getADCValue
  8339     042F  3062               	movlw	98
  8340     0430                     u2107:
  8341     0430  0B89               	decfsz	9,f
  8342     0431  2C30               	goto	u2107
  8343     0432  0BA2               	decfsz	??_getADCValue,f
  8344     0433  2C30               	goto	u2107
  8345     0434  0000               	nop
  8346                           
  8347                           ;sspa.c: 47:     for (uint8_t i = 0; i < 32; )
  8348     0435  0020               	movlb	0	; select bank0
  8349     0436  01A7               	clrf	getADCValue@i
  8350     0437                     l3746:
  8351                           
  8352                           ;sspa.c: 48:     {;sspa.c: 49:         if (ADC_IsConversionDone())
  8353     0437  318D  256A  3184   	fcall	_ADC_IsConversionDone
  8354     043A  3A00               	xorlw	0
  8355     043B  1903               	skipnz
  8356     043C  2C3E               	goto	u1821
  8357     043D  2C3F               	goto	u1820
  8358     043E                     u1821:
  8359     043E  2C58               	goto	l3754
  8360     043F                     u1820:
  8361     043F                     l3748:
  8362                           
  8363                           ;sspa.c: 50:         {;sspa.c: 51:             i++;
  8364     043F  3001               	movlw	1
  8365     0440  0020               	movlb	0	; select bank0
  8366     0441  00A2               	movwf	??_getADCValue
  8367     0442  0822               	movf	??_getADCValue,w
  8368     0443  07A7               	addwf	getADCValue@i,f
  8369     0444                     l3750:
  8370                           
  8371                           ;sspa.c: 52:             sum += ADC_GetConversionResult();
  8372     0444  318D  252F  3184   	fcall	_ADC_GetConversionResult
  8373     0447  0874               	movf	?_ADC_GetConversionResult,w
  8374     0448  0020               	movlb	0	; select bank0
  8375     0449  07A5               	addwf	getADCValue@sum,f
  8376     044A  0875               	movf	?_ADC_GetConversionResult+1,w
  8377     044B  3DA6               	addwfc	getADCValue@sum+1,f
  8378                           
  8379                           ;sspa.c: 54:             ADC_StartConversion();
  8380     044C  318C  24DA  3184   	fcall	_ADC_StartConversion
  8381     044F                     l3752:
  8382                           
  8383                           ;sspa.c: 55:             _delay((unsigned long)((2)*(16000000/4000.0)));
  8384     044F  300B               	movlw	11
  8385     0450  0020               	movlb	0	; select bank0
  8386     0451  00A2               	movwf	??_getADCValue
  8387     0452  3062               	movlw	98
  8388     0453                     u2117:
  8389     0453  0B89               	decfsz	9,f
  8390     0454  2C53               	goto	u2117
  8391     0455  0BA2               	decfsz	??_getADCValue,f
  8392     0456  2C53               	goto	u2117
  8393     0457  0000               	nop
  8394     0458                     l3754:
  8395                           
  8396                           ;sspa.c: 57:     }
  8397     0458  3020               	movlw	32
  8398     0459  0020               	movlb	0	; select bank0
  8399     045A  0227               	subwf	getADCValue@i,w
  8400     045B  1C03               	skipc
  8401     045C  2C5E               	goto	u1831
  8402     045D  2C5F               	goto	u1830
  8403     045E                     u1831:
  8404     045E  2C37               	goto	l3746
  8405     045F                     u1830:
  8406     045F                     l3756:
  8407                           
  8408                           ;sspa.c: 59:     return sum >> 5;
  8409     045F  0826               	movf	getADCValue@sum+1,w
  8410     0460  00A3               	movwf	??_getADCValue+1
  8411     0461  0825               	movf	getADCValue@sum,w
  8412     0462  00A2               	movwf	??_getADCValue
  8413     0463  3005               	movlw	5
  8414     0464                     u1845:
  8415     0464  36A3               	lsrf	??_getADCValue+1,f
  8416     0465  0CA2               	rrf	??_getADCValue,f
  8417     0466  0B89               	decfsz	9,f
  8418     0467  2C64               	goto	u1845
  8419     0468  0822               	movf	??_getADCValue,w
  8420     0469  00A0               	movwf	?_getADCValue
  8421     046A  0823               	movf	??_getADCValue+1,w
  8422     046B  00A1               	movwf	?_getADCValue+1
  8423     046C                     l834:
  8424     046C  0008               	return
  8425     046D                     __end_of_getADCValue:
  8426                           
  8427                           	psect	text21
  8428     0CDA                     __ptext21:	
  8429 ;; *************** function _ADC_StartConversion *****************
  8430 ;; Defined at:
  8431 ;;		line 88 in file "mcc_generated_files/adc/src/adc.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;		None
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  1    wreg      void 
  8438 ;; Registers used:
  8439 ;;		None
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8445 ;;      Params:         0       0       0       0       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0       0       0       0
  8447 ;;      Temps:          0       0       0       0       0       0       0       0
  8448 ;;      Totals:         0       0       0       0       0       0       0       0
  8449 ;;Total ram usage:        0 bytes
  8450 ;; Hardware stack levels used: 1
  8451 ;; Hardware stack levels required when called: 7
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_getADCValue
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459     0CDA                     _ADC_StartConversion:	
  8460                           ;psect for function _ADC_StartConversion
  8461                           
  8462     0CDA                     l3546:	
  8463                           ;incstack = 0
  8464                           ; Regs used in _ADC_StartConversion: []
  8465                           
  8466                           
  8467                           ;mcc_generated_files/adc/src/adc.c: 91:     ADCON0bits.GO_nDONE = 1;
  8468     0CDA  0021               	movlb	1	; select bank1
  8469     0CDB  149D               	bsf	29,1	;volatile
  8470     0CDC                     l33:
  8471     0CDC  0008               	return
  8472     0CDD                     __end_of_ADC_StartConversion:
  8473                           
  8474                           	psect	text22
  8475     0DB1                     __ptext22:	
  8476 ;; *************** function _ADC_SelectChannel *****************
  8477 ;; Defined at:
  8478 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;  channel         1    wreg     enum E9234
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;  channel         1    5[COMMON] enum E9234
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  1    wreg      void 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8492 ;;      Params:         0       0       0       0       0       0       0       0
  8493 ;;      Locals:         1       0       0       0       0       0       0       0
  8494 ;;      Temps:          1       0       0       0       0       0       0       0
  8495 ;;      Totals:         2       0       0       0       0       0       0       0
  8496 ;;Total ram usage:        2 bytes
  8497 ;; Hardware stack levels used: 1
  8498 ;; Hardware stack levels required when called: 7
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_getADCValue
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506     0DB1                     _ADC_SelectChannel:	
  8507                           ;psect for function _ADC_SelectChannel
  8508                           
  8509                           
  8510                           ;incstack = 0
  8511                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8512                           ;ADC_SelectChannel@channel stored from wreg
  8513     0DB1  00F5               	movwf	ADC_SelectChannel@channel
  8514     0DB2                     l3544:
  8515                           
  8516                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
  8517     0DB2  0875               	movf	ADC_SelectChannel@channel,w
  8518     0DB3  00F4               	movwf	??_ADC_SelectChannel
  8519     0DB4  0DF4               	rlf	??_ADC_SelectChannel,f
  8520     0DB5  0DF4               	rlf	??_ADC_SelectChannel,f
  8521     0DB6  0021               	movlb	1	; select bank1
  8522     0DB7  081D               	movf	29,w	;volatile
  8523     0DB8  0674               	xorwf	??_ADC_SelectChannel,w
  8524     0DB9  3983               	andlw	-125
  8525     0DBA  0674               	xorwf	??_ADC_SelectChannel,w
  8526     0DBB  009D               	movwf	29	;volatile
  8527     0DBC                     l30:
  8528     0DBC  0008               	return
  8529     0DBD                     __end_of_ADC_SelectChannel:
  8530                           
  8531                           	psect	text23
  8532     0D6A                     __ptext23:	
  8533 ;; *************** function _ADC_IsConversionDone *****************
  8534 ;; Defined at:
  8535 ;;		line 94 in file "mcc_generated_files/adc/src/adc.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      _Bool 
  8542 ;; Registers used:
  8543 ;;		wreg, status,0
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8549 ;;      Params:         0       0       0       0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0
  8552 ;;      Totals:         0       0       0       0       0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 7
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_getADCValue
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563     0D6A                     _ADC_IsConversionDone:	
  8564                           ;psect for function _ADC_IsConversionDone
  8565                           
  8566     0D6A                     l3548:	
  8567                           ;incstack = 0
  8568                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  8569                           
  8570                           
  8571                           ;mcc_generated_files/adc/src/adc.c: 97:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8572     0D6A  1003               	clrc
  8573     0D6B  0021               	movlb	1	; select bank1
  8574     0D6C  1C9D               	btfss	29,1	;volatile
  8575     0D6D  1403               	setc
  8576     0D6E  3000               	movlw	0
  8577     0D6F  3D09               	addwfc	9,w
  8578     0D70                     l36:
  8579     0D70  0008               	return
  8580     0D71                     __end_of_ADC_IsConversionDone:
  8581                           
  8582                           	psect	text24
  8583     0D2F                     __ptext24:	
  8584 ;; *************** function _ADC_GetConversionResult *****************
  8585 ;; Defined at:
  8586 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;		None
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;		None
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  2    4[COMMON] unsigned short 
  8593 ;; Registers used:
  8594 ;;		wreg
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8600 ;;      Params:         2       0       0       0       0       0       0       0
  8601 ;;      Locals:         0       0       0       0       0       0       0       0
  8602 ;;      Temps:          0       0       0       0       0       0       0       0
  8603 ;;      Totals:         2       0       0       0       0       0       0       0
  8604 ;;Total ram usage:        2 bytes
  8605 ;; Hardware stack levels used: 1
  8606 ;; Hardware stack levels required when called: 7
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_getADCValue
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614     0D2F                     _ADC_GetConversionResult:	
  8615                           ;psect for function _ADC_GetConversionResult
  8616                           
  8617     0D2F                     l3552:	
  8618                           ;incstack = 0
  8619                           ; Regs used in _ADC_GetConversionResult: [wreg]
  8620                           
  8621                           
  8622                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
  8623     0D2F  0021               	movlb	1	; select bank1
  8624     0D30  081C               	movf	28,w	;volatile
  8625     0D31  00F5               	movwf	?_ADC_GetConversionResult+1
  8626     0D32  081B               	movf	27,w	;volatile
  8627     0D33  00F4               	movwf	?_ADC_GetConversionResult
  8628     0D34                     l39:
  8629     0D34  0008               	return
  8630     0D35                     __end_of_ADC_GetConversionResult:
  8631                           
  8632                           	psect	text25
  8633     063B                     __ptext25:	
  8634 ;; *************** function _ADC2dBm *****************
  8635 ;; Defined at:
  8636 ;;		line 76 in file "sspa.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  v               2   26[BANK0 ] unsigned short 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  result          4   32[BANK0 ] long 
  8641 ;;  value           4   28[BANK0 ] long 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      unsigned char 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0, pclath, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8651 ;;      Params:         0       2       0       0       0       0       0       0
  8652 ;;      Locals:         0       8       0       0       0       0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0
  8654 ;;      Totals:         0      10       0       0       0       0       0       0
  8655 ;;Total ram usage:       10 bytes
  8656 ;; Hardware stack levels used: 1
  8657 ;; Hardware stack levels required when called: 8
  8658 ;; This function calls:
  8659 ;;		___aldiv
  8660 ;;		___lmul
  8661 ;; This function is called by:
  8662 ;;		_SSPA_getPOut
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666     063B                     _ADC2dBm:	
  8667                           ;psect for function _ADC2dBm
  8668                           
  8669     063B                     l3776:	
  8670                           ;incstack = 0
  8671                           ; Regs used in _ADC2dBm: [wreg+status,2+status,0+pclath+cstack]
  8672                           
  8673                           
  8674                           ;sspa.c: 77:     int32_t value = (int32_t) v;
  8675     063B  0020               	movlb	0	; select bank0
  8676     063C  083A               	movf	ADC2dBm@v,w
  8677     063D  00BC               	movwf	ADC2dBm@value
  8678     063E  083B               	movf	ADC2dBm@v+1,w
  8679     063F  00BD               	movwf	ADC2dBm@value+1
  8680     0640  01BE               	clrf	ADC2dBm@value+2
  8681     0641  01BF               	clrf	ADC2dBm@value+3
  8682     0642                     l3778:
  8683                           
  8684                           ;sspa.c: 78:     int32_t result = (uint16_t)(34) + (value * (uint16_t)(14319)) / (uint16
      +                          _t)(1024000);
  8685     0642  3000               	movlw	0
  8686     0643  00AF               	movwf	___aldiv@divisor+3
  8687     0644  3000               	movlw	0
  8688     0645  00AE               	movwf	___aldiv@divisor+2
  8689     0646  30A0               	movlw	160
  8690     0647  00AD               	movwf	___aldiv@divisor+1
  8691     0648  3000               	movlw	0
  8692     0649  00AC               	movwf	___aldiv@divisor
  8693     064A  083F               	movf	ADC2dBm@value+3,w
  8694     064B  00A3               	movwf	___lmul@multiplier+3
  8695     064C  083E               	movf	ADC2dBm@value+2,w
  8696     064D  00A2               	movwf	___lmul@multiplier+2
  8697     064E  083D               	movf	ADC2dBm@value+1,w
  8698     064F  00A1               	movwf	___lmul@multiplier+1
  8699     0650  083C               	movf	ADC2dBm@value,w
  8700     0651  00A0               	movwf	___lmul@multiplier
  8701     0652  3000               	movlw	0
  8702     0653  00A7               	movwf	___lmul@multiplicand+3
  8703     0654  3000               	movlw	0
  8704     0655  00A6               	movwf	___lmul@multiplicand+2
  8705     0656  3037               	movlw	55
  8706     0657  00A5               	movwf	___lmul@multiplicand+1
  8707     0658  30EF               	movlw	239
  8708     0659  00A4               	movwf	___lmul@multiplicand
  8709     065A  3187  2728  3186   	fcall	___lmul
  8710     065D  0020               	movlb	0	; select bank0
  8711     065E  0823               	movf	?___lmul+3,w
  8712     065F  00B3               	movwf	___aldiv@dividend+3
  8713     0660  0822               	movf	?___lmul+2,w
  8714     0661  00B2               	movwf	___aldiv@dividend+2
  8715     0662  0821               	movf	?___lmul+1,w
  8716     0663  00B1               	movwf	___aldiv@dividend+1
  8717     0664  0820               	movf	?___lmul,w
  8718     0665  00B0               	movwf	___aldiv@dividend
  8719     0666  3182  2264  3186   	fcall	___aldiv
  8720     0669  3022               	movlw	34
  8721     066A  0020               	movlb	0	; select bank0
  8722     066B  072C               	addwf	?___aldiv,w
  8723     066C  00C0               	movwf	ADC2dBm@result
  8724     066D  3000               	movlw	0
  8725     066E  3D2D               	addwfc	?___aldiv+1,w
  8726     066F  00C1               	movwf	ADC2dBm@result+1
  8727     0670  3000               	movlw	0
  8728     0671  3D2E               	addwfc	?___aldiv+2,w
  8729     0672  00C2               	movwf	ADC2dBm@result+2
  8730     0673  3000               	movlw	0
  8731     0674  3D2F               	addwfc	?___aldiv+3,w
  8732     0675  00C3               	movwf	ADC2dBm@result+3
  8733     0676                     l3780:
  8734                           
  8735                           ;sspa.c: 80:     return (uint8_t) result;
  8736     0676  0840               	movf	ADC2dBm@result,w
  8737     0677                     l843:
  8738     0677  0008               	return
  8739     0678                     __end_of_ADC2dBm:
  8740                           
  8741                           	psect	text26
  8742     0540                     __ptext26:	
  8743 ;; *************** function _ADC2Amp *****************
  8744 ;; Defined at:
  8745 ;;		line 69 in file "sspa.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  v               2   26[BANK0 ] unsigned short 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  result          4   34[BANK0 ] long 
  8750 ;;  value           4   30[BANK0 ] long 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  4   26[BANK0 ] unsigned long 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0, pclath, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8760 ;;      Params:         0       4       0       0       0       0       0       0
  8761 ;;      Locals:         0       8       0       0       0       0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0
  8763 ;;      Totals:         0      12       0       0       0       0       0       0
  8764 ;;Total ram usage:       12 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; Hardware stack levels required when called: 8
  8767 ;; This function calls:
  8768 ;;		___aldiv
  8769 ;;		___lmul
  8770 ;; This function is called by:
  8771 ;;		_SSPA_getPOut
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775     0540                     _ADC2Amp:	
  8776                           ;psect for function _ADC2Amp
  8777                           
  8778     0540                     l3768:	
  8779                           ;incstack = 0
  8780                           ; Regs used in _ADC2Amp: [wreg+status,2+status,0+pclath+cstack]
  8781                           
  8782                           
  8783                           ;sspa.c: 70:     int32_t value = (int32_t) v;
  8784     0540  0020               	movlb	0	; select bank0
  8785     0541  083A               	movf	ADC2Amp@v,w
  8786     0542  00BE               	movwf	ADC2Amp@value
  8787     0543  083B               	movf	ADC2Amp@v+1,w
  8788     0544  00BF               	movwf	ADC2Amp@value+1
  8789     0545  01C0               	clrf	ADC2Amp@value+2
  8790     0546  01C1               	clrf	ADC2Amp@value+3
  8791     0547                     l3770:
  8792                           
  8793                           ;sspa.c: 71:     int32_t result = (uint16_t)(0) + (value * (uint16_t)(430)) / (uint16_t)
      +                          (10240);
  8794     0547  3000               	movlw	0
  8795     0548  00AF               	movwf	___aldiv@divisor+3
  8796     0549  3000               	movlw	0
  8797     054A  00AE               	movwf	___aldiv@divisor+2
  8798     054B  3028               	movlw	40
  8799     054C  00AD               	movwf	___aldiv@divisor+1
  8800     054D  3000               	movlw	0
  8801     054E  00AC               	movwf	___aldiv@divisor
  8802     054F  0841               	movf	ADC2Amp@value+3,w
  8803     0550  00A3               	movwf	___lmul@multiplier+3
  8804     0551  0840               	movf	ADC2Amp@value+2,w
  8805     0552  00A2               	movwf	___lmul@multiplier+2
  8806     0553  083F               	movf	ADC2Amp@value+1,w
  8807     0554  00A1               	movwf	___lmul@multiplier+1
  8808     0555  083E               	movf	ADC2Amp@value,w
  8809     0556  00A0               	movwf	___lmul@multiplier
  8810     0557  3000               	movlw	0
  8811     0558  00A7               	movwf	___lmul@multiplicand+3
  8812     0559  3000               	movlw	0
  8813     055A  00A6               	movwf	___lmul@multiplicand+2
  8814     055B  3001               	movlw	1
  8815     055C  00A5               	movwf	___lmul@multiplicand+1
  8816     055D  30AE               	movlw	174
  8817     055E  00A4               	movwf	___lmul@multiplicand
  8818     055F  3187  2728  3185   	fcall	___lmul
  8819     0562  0020               	movlb	0	; select bank0
  8820     0563  0823               	movf	?___lmul+3,w
  8821     0564  00B3               	movwf	___aldiv@dividend+3
  8822     0565  0822               	movf	?___lmul+2,w
  8823     0566  00B2               	movwf	___aldiv@dividend+2
  8824     0567  0821               	movf	?___lmul+1,w
  8825     0568  00B1               	movwf	___aldiv@dividend+1
  8826     0569  0820               	movf	?___lmul,w
  8827     056A  00B0               	movwf	___aldiv@dividend
  8828     056B  3182  2264  3185   	fcall	___aldiv
  8829     056E  0020               	movlb	0	; select bank0
  8830     056F  082F               	movf	?___aldiv+3,w
  8831     0570  00C5               	movwf	ADC2Amp@result+3
  8832     0571  082E               	movf	?___aldiv+2,w
  8833     0572  00C4               	movwf	ADC2Amp@result+2
  8834     0573  082D               	movf	?___aldiv+1,w
  8835     0574  00C3               	movwf	ADC2Amp@result+1
  8836     0575  082C               	movf	?___aldiv,w
  8837     0576  00C2               	movwf	ADC2Amp@result
  8838     0577                     l3772:
  8839                           
  8840                           ;sspa.c: 73:     return (uint32_t) result;
  8841     0577  0845               	movf	ADC2Amp@result+3,w
  8842     0578  00BD               	movwf	?_ADC2Amp+3
  8843     0579  0844               	movf	ADC2Amp@result+2,w
  8844     057A  00BC               	movwf	?_ADC2Amp+2
  8845     057B  0843               	movf	ADC2Amp@result+1,w
  8846     057C  00BB               	movwf	?_ADC2Amp+1
  8847     057D  0842               	movf	ADC2Amp@result,w
  8848     057E  00BA               	movwf	?_ADC2Amp
  8849     057F                     l840:
  8850     057F  0008               	return
  8851     0580                     __end_of_ADC2Amp:
  8852                           
  8853                           	psect	text27
  8854     0728                     __ptext27:	
  8855 ;; *************** function ___lmul *****************
  8856 ;; Defined at:
  8857 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8860 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;  product         4    8[BANK0 ] unsigned long 
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  4    0[BANK0 ] unsigned long 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8872 ;;      Params:         0       8       0       0       0       0       0       0
  8873 ;;      Locals:         0       4       0       0       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0
  8875 ;;      Totals:         0      12       0       0       0       0       0       0
  8876 ;;Total ram usage:       12 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 7
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_ADC2Celsius
  8883 ;;		_ADC2Amp
  8884 ;;		_ADC2dBm
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888     0728                     ___lmul:	
  8889                           ;psect for function ___lmul
  8890                           
  8891     0728                     l3582:	
  8892                           ;incstack = 0
  8893                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8894                           
  8895     0728  3000               	movlw	0
  8896     0729  0020               	movlb	0	; select bank0
  8897     072A  00AB               	movwf	___lmul@product+3
  8898     072B  3000               	movlw	0
  8899     072C  00AA               	movwf	___lmul@product+2
  8900     072D  3000               	movlw	0
  8901     072E  00A9               	movwf	___lmul@product+1
  8902     072F  3000               	movlw	0
  8903     0730  00A8               	movwf	___lmul@product
  8904     0731                     l3584:
  8905     0731  1C20               	btfss	___lmul@multiplier,0
  8906     0732  2F34               	goto	u1581
  8907     0733  2F35               	goto	u1580
  8908     0734                     u1581:
  8909     0734  2F3D               	goto	l3588
  8910     0735                     u1580:
  8911     0735                     l3586:
  8912     0735  0824               	movf	___lmul@multiplicand,w
  8913     0736  07A8               	addwf	___lmul@product,f
  8914     0737  0825               	movf	___lmul@multiplicand+1,w
  8915     0738  3DA9               	addwfc	___lmul@product+1,f
  8916     0739  0826               	movf	___lmul@multiplicand+2,w
  8917     073A  3DAA               	addwfc	___lmul@product+2,f
  8918     073B  0827               	movf	___lmul@multiplicand+3,w
  8919     073C  3DAB               	addwfc	___lmul@product+3,f
  8920     073D                     l3588:
  8921     073D  3001               	movlw	1
  8922     073E                     u1595:
  8923     073E  35A4               	lslf	___lmul@multiplicand,f
  8924     073F  0DA5               	rlf	___lmul@multiplicand+1,f
  8925     0740  0DA6               	rlf	___lmul@multiplicand+2,f
  8926     0741  0DA7               	rlf	___lmul@multiplicand+3,f
  8927     0742  0B89               	decfsz	9,f
  8928     0743  2F3E               	goto	u1595
  8929     0744                     l3590:
  8930     0744  3001               	movlw	1
  8931     0745                     u1605:
  8932     0745  36A3               	lsrf	___lmul@multiplier+3,f
  8933     0746  0CA2               	rrf	___lmul@multiplier+2,f
  8934     0747  0CA1               	rrf	___lmul@multiplier+1,f
  8935     0748  0CA0               	rrf	___lmul@multiplier,f
  8936     0749  0B89               	decfsz	9,f
  8937     074A  2F45               	goto	u1605
  8938     074B  0823               	movf	___lmul@multiplier+3,w
  8939     074C  0422               	iorwf	___lmul@multiplier+2,w
  8940     074D  0421               	iorwf	___lmul@multiplier+1,w
  8941     074E  0420               	iorwf	___lmul@multiplier,w
  8942     074F  1D03               	skipz
  8943     0750  2F52               	goto	u1611
  8944     0751  2F53               	goto	u1610
  8945     0752                     u1611:
  8946     0752  2F31               	goto	l3584
  8947     0753                     u1610:
  8948     0753                     l3592:
  8949     0753  082B               	movf	___lmul@product+3,w
  8950     0754  00A3               	movwf	?___lmul+3
  8951     0755  082A               	movf	___lmul@product+2,w
  8952     0756  00A2               	movwf	?___lmul+2
  8953     0757  0829               	movf	___lmul@product+1,w
  8954     0758  00A1               	movwf	?___lmul+1
  8955     0759  0828               	movf	___lmul@product,w
  8956     075A  00A0               	movwf	?___lmul
  8957     075B                     l964:
  8958     075B  0008               	return
  8959     075C                     __end_of___lmul:
  8960                           
  8961                           	psect	text28
  8962     0264                     __ptext28:	
  8963 ;; *************** function ___aldiv *****************
  8964 ;; Defined at:
  8965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;  divisor         4   12[BANK0 ] long 
  8968 ;;  dividend        4   16[BANK0 ] long 
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;  quotient        4   22[BANK0 ] long 
  8971 ;;  sign            1   21[BANK0 ] unsigned char 
  8972 ;;  counter         1   20[BANK0 ] unsigned char 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  4   12[BANK0 ] long 
  8975 ;; Registers used:
  8976 ;;		wreg, status,2, status,0
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8982 ;;      Params:         0       8       0       0       0       0       0       0
  8983 ;;      Locals:         0       6       0       0       0       0       0       0
  8984 ;;      Temps:          1       0       0       0       0       0       0       0
  8985 ;;      Totals:         1      14       0       0       0       0       0       0
  8986 ;;Total ram usage:       15 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 7
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_ADC2Celsius
  8993 ;;		_ADC2Amp
  8994 ;;		_ADC2dBm
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998     0264                     ___aldiv:	
  8999                           ;psect for function ___aldiv
  9000                           
  9001     0264                     l3596:	
  9002                           ;incstack = 0
  9003                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9004                           
  9005     0264  0020               	movlb	0	; select bank0
  9006     0265  01B5               	clrf	___aldiv@sign
  9007     0266                     l3598:
  9008     0266  1FAF               	btfss	___aldiv@divisor+3,7
  9009     0267  2A69               	goto	u1621
  9010     0268  2A6A               	goto	u1620
  9011     0269                     u1621:
  9012     0269  2A77               	goto	l1015
  9013     026A                     u1620:
  9014     026A                     l3600:
  9015     026A  09AC               	comf	___aldiv@divisor,f
  9016     026B  09AD               	comf	___aldiv@divisor+1,f
  9017     026C  09AE               	comf	___aldiv@divisor+2,f
  9018     026D  09AF               	comf	___aldiv@divisor+3,f
  9019     026E  0AAC               	incf	___aldiv@divisor,f
  9020     026F  1903               	skipnz
  9021     0270  0AAD               	incf	___aldiv@divisor+1,f
  9022     0271  1903               	skipnz
  9023     0272  0AAE               	incf	___aldiv@divisor+2,f
  9024     0273  1903               	skipnz
  9025     0274  0AAF               	incf	___aldiv@divisor+3,f
  9026     0275  01B5               	clrf	___aldiv@sign
  9027     0276  0AB5               	incf	___aldiv@sign,f
  9028     0277                     l1015:
  9029     0277  1FB3               	btfss	___aldiv@dividend+3,7
  9030     0278  2A7A               	goto	u1631
  9031     0279  2A7B               	goto	u1630
  9032     027A                     u1631:
  9033     027A  2A8A               	goto	l3606
  9034     027B                     u1630:
  9035     027B                     l3602:
  9036     027B  09B0               	comf	___aldiv@dividend,f
  9037     027C  09B1               	comf	___aldiv@dividend+1,f
  9038     027D  09B2               	comf	___aldiv@dividend+2,f
  9039     027E  09B3               	comf	___aldiv@dividend+3,f
  9040     027F  0AB0               	incf	___aldiv@dividend,f
  9041     0280  1903               	skipnz
  9042     0281  0AB1               	incf	___aldiv@dividend+1,f
  9043     0282  1903               	skipnz
  9044     0283  0AB2               	incf	___aldiv@dividend+2,f
  9045     0284  1903               	skipnz
  9046     0285  0AB3               	incf	___aldiv@dividend+3,f
  9047     0286                     l3604:
  9048     0286  3001               	movlw	1
  9049     0287  00F4               	movwf	??___aldiv
  9050     0288  0874               	movf	??___aldiv,w
  9051     0289  06B5               	xorwf	___aldiv@sign,f
  9052     028A                     l3606:
  9053     028A  3000               	movlw	0
  9054     028B  00B9               	movwf	___aldiv@quotient+3
  9055     028C  3000               	movlw	0
  9056     028D  00B8               	movwf	___aldiv@quotient+2
  9057     028E  3000               	movlw	0
  9058     028F  00B7               	movwf	___aldiv@quotient+1
  9059     0290  3000               	movlw	0
  9060     0291  00B6               	movwf	___aldiv@quotient
  9061     0292                     l3608:
  9062     0292  082F               	movf	___aldiv@divisor+3,w
  9063     0293  042E               	iorwf	___aldiv@divisor+2,w
  9064     0294  042D               	iorwf	___aldiv@divisor+1,w
  9065     0295  042C               	iorwf	___aldiv@divisor,w
  9066     0296  1903               	skipnz
  9067     0297  2A99               	goto	u1641
  9068     0298  2A9A               	goto	u1640
  9069     0299                     u1641:
  9070     0299  2ADB               	goto	l3628
  9071     029A                     u1640:
  9072     029A                     l3610:
  9073     029A  01B4               	clrf	___aldiv@counter
  9074     029B  0AB4               	incf	___aldiv@counter,f
  9075     029C  2AA8               	goto	l3614
  9076     029D                     l3612:
  9077     029D  3001               	movlw	1
  9078     029E                     u1655:
  9079     029E  35AC               	lslf	___aldiv@divisor,f
  9080     029F  0DAD               	rlf	___aldiv@divisor+1,f
  9081     02A0  0DAE               	rlf	___aldiv@divisor+2,f
  9082     02A1  0DAF               	rlf	___aldiv@divisor+3,f
  9083     02A2  0B89               	decfsz	9,f
  9084     02A3  2A9E               	goto	u1655
  9085     02A4  3001               	movlw	1
  9086     02A5  00F4               	movwf	??___aldiv
  9087     02A6  0874               	movf	??___aldiv,w
  9088     02A7  07B4               	addwf	___aldiv@counter,f
  9089     02A8                     l3614:
  9090     02A8  1FAF               	btfss	___aldiv@divisor+3,7
  9091     02A9  2AAB               	goto	u1661
  9092     02AA  2AAC               	goto	u1660
  9093     02AB                     u1661:
  9094     02AB  2A9D               	goto	l3612
  9095     02AC                     u1660:
  9096     02AC                     l3616:
  9097     02AC  3001               	movlw	1
  9098     02AD                     u1675:
  9099     02AD  35B6               	lslf	___aldiv@quotient,f
  9100     02AE  0DB7               	rlf	___aldiv@quotient+1,f
  9101     02AF  0DB8               	rlf	___aldiv@quotient+2,f
  9102     02B0  0DB9               	rlf	___aldiv@quotient+3,f
  9103     02B1  0B89               	decfsz	9,f
  9104     02B2  2AAD               	goto	u1675
  9105     02B3                     l3618:
  9106     02B3  082F               	movf	___aldiv@divisor+3,w
  9107     02B4  0233               	subwf	___aldiv@dividend+3,w
  9108     02B5  1D03               	skipz
  9109     02B6  2AC1               	goto	u1685
  9110     02B7  082E               	movf	___aldiv@divisor+2,w
  9111     02B8  0232               	subwf	___aldiv@dividend+2,w
  9112     02B9  1D03               	skipz
  9113     02BA  2AC1               	goto	u1685
  9114     02BB  082D               	movf	___aldiv@divisor+1,w
  9115     02BC  0231               	subwf	___aldiv@dividend+1,w
  9116     02BD  1D03               	skipz
  9117     02BE  2AC1               	goto	u1685
  9118     02BF  082C               	movf	___aldiv@divisor,w
  9119     02C0  0230               	subwf	___aldiv@dividend,w
  9120     02C1                     u1685:
  9121     02C1  1C03               	skipc
  9122     02C2  2AC4               	goto	u1681
  9123     02C3  2AC5               	goto	u1680
  9124     02C4                     u1681:
  9125     02C4  2ACE               	goto	l3624
  9126     02C5                     u1680:
  9127     02C5                     l3620:
  9128     02C5  082C               	movf	___aldiv@divisor,w
  9129     02C6  02B0               	subwf	___aldiv@dividend,f
  9130     02C7  082D               	movf	___aldiv@divisor+1,w
  9131     02C8  3BB1               	subwfb	___aldiv@dividend+1,f
  9132     02C9  082E               	movf	___aldiv@divisor+2,w
  9133     02CA  3BB2               	subwfb	___aldiv@dividend+2,f
  9134     02CB  082F               	movf	___aldiv@divisor+3,w
  9135     02CC  3BB3               	subwfb	___aldiv@dividend+3,f
  9136     02CD                     l3622:
  9137     02CD  1436               	bsf	___aldiv@quotient,0
  9138     02CE                     l3624:
  9139     02CE  3001               	movlw	1
  9140     02CF                     u1695:
  9141     02CF  36AF               	lsrf	___aldiv@divisor+3,f
  9142     02D0  0CAE               	rrf	___aldiv@divisor+2,f
  9143     02D1  0CAD               	rrf	___aldiv@divisor+1,f
  9144     02D2  0CAC               	rrf	___aldiv@divisor,f
  9145     02D3  0B89               	decfsz	9,f
  9146     02D4  2ACF               	goto	u1695
  9147     02D5                     l3626:
  9148     02D5  3001               	movlw	1
  9149     02D6  02B4               	subwf	___aldiv@counter,f
  9150     02D7  1D03               	btfss	3,2
  9151     02D8  2ADA               	goto	u1701
  9152     02D9  2ADB               	goto	u1700
  9153     02DA                     u1701:
  9154     02DA  2AAC               	goto	l3616
  9155     02DB                     u1700:
  9156     02DB                     l3628:
  9157     02DB  0835               	movf	___aldiv@sign,w
  9158     02DC  1903               	btfsc	3,2
  9159     02DD  2ADF               	goto	u1711
  9160     02DE  2AE0               	goto	u1710
  9161     02DF                     u1711:
  9162     02DF  2AEB               	goto	l3632
  9163     02E0                     u1710:
  9164     02E0                     l3630:
  9165     02E0  09B6               	comf	___aldiv@quotient,f
  9166     02E1  09B7               	comf	___aldiv@quotient+1,f
  9167     02E2  09B8               	comf	___aldiv@quotient+2,f
  9168     02E3  09B9               	comf	___aldiv@quotient+3,f
  9169     02E4  0AB6               	incf	___aldiv@quotient,f
  9170     02E5  1903               	skipnz
  9171     02E6  0AB7               	incf	___aldiv@quotient+1,f
  9172     02E7  1903               	skipnz
  9173     02E8  0AB8               	incf	___aldiv@quotient+2,f
  9174     02E9  1903               	skipnz
  9175     02EA  0AB9               	incf	___aldiv@quotient+3,f
  9176     02EB                     l3632:
  9177     02EB  0839               	movf	___aldiv@quotient+3,w
  9178     02EC  00AF               	movwf	?___aldiv+3
  9179     02ED  0838               	movf	___aldiv@quotient+2,w
  9180     02EE  00AE               	movwf	?___aldiv+2
  9181     02EF  0837               	movf	___aldiv@quotient+1,w
  9182     02F0  00AD               	movwf	?___aldiv+1
  9183     02F1  0836               	movf	___aldiv@quotient,w
  9184     02F2  00AC               	movwf	?___aldiv
  9185     02F3                     l1025:
  9186     02F3  0008               	return
  9187     02F4                     __end_of___aldiv:
  9188                           
  9189                           	psect	text29
  9190     0F2C                     __ptext29:	
  9191 ;; *************** function _KAPS_setRelPos *****************
  9192 ;; Defined at:
  9193 ;;		line 51 in file "kaps.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  offset          1    wreg     char 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;  offset          1    7[BANK0 ] char 
  9198 ;;  value           1    9[BANK0 ] unsigned char 
  9199 ;;  reg             1    8[BANK0 ] unsigned char 
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      void 
  9202 ;; Registers used:
  9203 ;;		wreg, status,2, status,0, pclath, cstack
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9209 ;;      Params:         0       0       0       0       0       0       0       0
  9210 ;;      Locals:         0       3       0       0       0       0       0       0
  9211 ;;      Temps:          0       2       0       0       0       0       0       0
  9212 ;;      Totals:         0       5       0       0       0       0       0       0
  9213 ;;Total ram usage:        5 bytes
  9214 ;; Hardware stack levels used: 1
  9215 ;; Hardware stack levels required when called: 10
  9216 ;; This function calls:
  9217 ;;		_I2C1_Write
  9218 ;; This function is called by:
  9219 ;;		_ProcessMsg
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223     0F2C                     _KAPS_setRelPos:	
  9224                           ;psect for function _KAPS_setRelPos
  9225                           
  9226                           
  9227                           ;incstack = 0
  9228                           ; Regs used in _KAPS_setRelPos: [wreg+status,2+status,0+pclath+cstack]
  9229                           ;KAPS_setRelPos@offset stored from wreg
  9230     0F2C  0020               	movlb	0	; select bank0
  9231     0F2D  00A7               	movwf	KAPS_setRelPos@offset
  9232     0F2E                     l3900:
  9233                           
  9234                           ;kaps.c: 52:     uint8_t reg = 0x02;
  9235     0F2E  3002               	movlw	2
  9236     0F2F  00A8               	movwf	KAPS_setRelPos@reg
  9237                           
  9238                           ;kaps.c: 53:     uint8_t value = (uint8_t)offset;
  9239     0F30  0827               	movf	KAPS_setRelPos@offset,w
  9240     0F31  00A9               	movwf	KAPS_setRelPos@value
  9241     0F32                     l3902:
  9242                           
  9243                           ;kaps.c: 55:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9244     0F32  0864               	movf	_kaps,w
  9245     0F33  00A5               	movwf	??_KAPS_setRelPos
  9246     0F34  01A6               	clrf	??_KAPS_setRelPos+1
  9247     0F35  0825               	movf	??_KAPS_setRelPos,w
  9248     0F36  00A0               	movwf	I2C1_Write@address
  9249     0F37  0826               	movf	??_KAPS_setRelPos+1,w
  9250     0F38  00A1               	movwf	I2C1_Write@address+1
  9251     0F39  3028               	movlw	(low (KAPS_setRelPos@reg| 0))& (0+255)
  9252     0F3A  00A2               	movwf	I2C1_Write@data
  9253     0F3B  3001               	movlw	1
  9254     0F3C  00A3               	movwf	I2C1_Write@dataLength
  9255     0F3D  3000               	movlw	0
  9256     0F3E  00A4               	movwf	I2C1_Write@dataLength+1
  9257     0F3F  318E  26A4  318F   	fcall	_I2C1_Write
  9258     0F42                     l3904:
  9259                           
  9260                           ;kaps.c: 56:     I2C1_Write(kaps.m_bAddr, &value, 1);
  9261     0F42  0020               	movlb	0	; select bank0
  9262     0F43  0864               	movf	_kaps,w
  9263     0F44  00A5               	movwf	??_KAPS_setRelPos
  9264     0F45  01A6               	clrf	??_KAPS_setRelPos+1
  9265     0F46  0825               	movf	??_KAPS_setRelPos,w
  9266     0F47  00A0               	movwf	I2C1_Write@address
  9267     0F48  0826               	movf	??_KAPS_setRelPos+1,w
  9268     0F49  00A1               	movwf	I2C1_Write@address+1
  9269     0F4A  3029               	movlw	(low (KAPS_setRelPos@value| 0))& (0+255)
  9270     0F4B  00A2               	movwf	I2C1_Write@data
  9271     0F4C  3001               	movlw	1
  9272     0F4D  00A3               	movwf	I2C1_Write@dataLength
  9273     0F4E  3000               	movlw	0
  9274     0F4F  00A4               	movwf	I2C1_Write@dataLength+1
  9275     0F50  318E  26A4  318F   	fcall	_I2C1_Write
  9276     0F53                     l722:
  9277     0F53  0008               	return
  9278     0F54                     __end_of_KAPS_setRelPos:
  9279                           
  9280                           	psect	text30
  9281     075C                     __ptext30:	
  9282 ;; *************** function _KAPS_setAbsPos *****************
  9283 ;; Defined at:
  9284 ;;		line 36 in file "kaps.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  pos             4   13[BANK0 ] unsigned long 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  data            4   19[BANK0 ] unsigned char [4]
  9289 ;;  reg             1   23[BANK0 ] unsigned char 
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9299 ;;      Params:         0       4       0       0       0       0       0       0
  9300 ;;      Locals:         0       5       0       0       0       0       0       0
  9301 ;;      Temps:          0       2       0       0       0       0       0       0
  9302 ;;      Totals:         0      11       0       0       0       0       0       0
  9303 ;;Total ram usage:       11 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; Hardware stack levels required when called: 10
  9306 ;; This function calls:
  9307 ;;		_I2C1_Write
  9308 ;;		_unpackLong
  9309 ;; This function is called by:
  9310 ;;		_ProcessMsg
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314     075C                     _KAPS_setAbsPos:	
  9315                           ;psect for function _KAPS_setAbsPos
  9316                           
  9317     075C                     l3892:	
  9318                           ;incstack = 0
  9319                           ; Regs used in _KAPS_setAbsPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9320                           
  9321                           
  9322                           ;kaps.c: 37:     uint8_t reg = 0x01;
  9323     075C  0020               	movlb	0	; select bank0
  9324     075D  01B7               	clrf	KAPS_setAbsPos@reg
  9325     075E  0AB7               	incf	KAPS_setAbsPos@reg,f
  9326     075F                     l3894:
  9327                           
  9328                           ;kaps.c: 38:     uint8_t data[4];;kaps.c: 40:     unpackLong(pos, data);
  9329     075F  0830               	movf	KAPS_setAbsPos@pos+3,w
  9330     0760  00A3               	movwf	unpackLong@value+3
  9331     0761  082F               	movf	KAPS_setAbsPos@pos+2,w
  9332     0762  00A2               	movwf	unpackLong@value+2
  9333     0763  082E               	movf	KAPS_setAbsPos@pos+1,w
  9334     0764  00A1               	movwf	unpackLong@value+1
  9335     0765  082D               	movf	KAPS_setAbsPos@pos,w
  9336     0766  00A0               	movwf	unpackLong@value
  9337     0767  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9338     0768  00A4               	movwf	unpackLong@data
  9339     0769  3184  24B8  3187   	fcall	_unpackLong
  9340     076C                     l3896:
  9341                           
  9342                           ;kaps.c: 42:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9343     076C  0020               	movlb	0	; select bank0
  9344     076D  0864               	movf	_kaps,w
  9345     076E  00B1               	movwf	??_KAPS_setAbsPos
  9346     076F  01B2               	clrf	??_KAPS_setAbsPos+1
  9347     0770  0831               	movf	??_KAPS_setAbsPos,w
  9348     0771  00A0               	movwf	I2C1_Write@address
  9349     0772  0832               	movf	??_KAPS_setAbsPos+1,w
  9350     0773  00A1               	movwf	I2C1_Write@address+1
  9351     0774  3037               	movlw	(low (KAPS_setAbsPos@reg| 0))& (0+255)
  9352     0775  00A2               	movwf	I2C1_Write@data
  9353     0776  3001               	movlw	1
  9354     0777  00A3               	movwf	I2C1_Write@dataLength
  9355     0778  3000               	movlw	0
  9356     0779  00A4               	movwf	I2C1_Write@dataLength+1
  9357     077A  318E  26A4  3187   	fcall	_I2C1_Write
  9358     077D                     l3898:
  9359                           
  9360                           ;kaps.c: 43:     I2C1_Write(kaps.m_bAddr, data, 4);
  9361     077D  0020               	movlb	0	; select bank0
  9362     077E  0864               	movf	_kaps,w
  9363     077F  00B1               	movwf	??_KAPS_setAbsPos
  9364     0780  01B2               	clrf	??_KAPS_setAbsPos+1
  9365     0781  0831               	movf	??_KAPS_setAbsPos,w
  9366     0782  00A0               	movwf	I2C1_Write@address
  9367     0783  0832               	movf	??_KAPS_setAbsPos+1,w
  9368     0784  00A1               	movwf	I2C1_Write@address+1
  9369     0785  3033               	movlw	(low (KAPS_setAbsPos@data| 0))& (0+255)
  9370     0786  00A2               	movwf	I2C1_Write@data
  9371     0787  3004               	movlw	4
  9372     0788  00A3               	movwf	I2C1_Write@dataLength
  9373     0789  3000               	movlw	0
  9374     078A  00A4               	movwf	I2C1_Write@dataLength+1
  9375     078B  318E  26A4  3187   	fcall	_I2C1_Write
  9376     078E                     l719:
  9377     078E  0008               	return
  9378     078F                     __end_of_KAPS_setAbsPos:
  9379                           
  9380                           	psect	text31
  9381     07BF                     __ptext31:	
  9382 ;; *************** function _KAPS_getStatus *****************
  9383 ;; Defined at:
  9384 ;;		line 81 in file "kaps.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;  data            1    8[BANK0 ] unsigned char 
  9389 ;;  reg             1    7[BANK0 ] unsigned char 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  1    wreg      void 
  9392 ;; Registers used:
  9393 ;;		wreg, status,2, status,0, pclath, cstack
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9399 ;;      Params:         0       0       0       0       0       0       0       0
  9400 ;;      Locals:         0       2       0       0       0       0       0       0
  9401 ;;      Temps:          0       2       0       0       0       0       0       0
  9402 ;;      Totals:         0       4       0       0       0       0       0       0
  9403 ;;Total ram usage:        4 bytes
  9404 ;; Hardware stack levels used: 1
  9405 ;; Hardware stack levels required when called: 10
  9406 ;; This function calls:
  9407 ;;		_I2C1_Read
  9408 ;;		_I2C1_Write
  9409 ;; This function is called by:
  9410 ;;		_ProcessMsg
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414     07BF                     _KAPS_getStatus:	
  9415                           ;psect for function _KAPS_getStatus
  9416                           
  9417     07BF                     l3838:	
  9418                           ;incstack = 0
  9419                           ; Regs used in _KAPS_getStatus: [wreg+status,2+status,0+pclath+cstack]
  9420                           
  9421                           
  9422                           ;kaps.c: 82:     uint8_t reg = 0xFF;
  9423     07BF  30FF               	movlw	255
  9424     07C0  0020               	movlb	0	; select bank0
  9425     07C1  00A7               	movwf	KAPS_getStatus@reg
  9426     07C2                     l3840:
  9427                           
  9428                           ;kaps.c: 83:     uint8_t data = 0x00;
  9429     07C2  01A8               	clrf	KAPS_getStatus@data
  9430     07C3                     l3842:
  9431                           
  9432                           ;kaps.c: 85:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9433     07C3  0864               	movf	_kaps,w
  9434     07C4  00A5               	movwf	??_KAPS_getStatus
  9435     07C5  01A6               	clrf	??_KAPS_getStatus+1
  9436     07C6  0825               	movf	??_KAPS_getStatus,w
  9437     07C7  00A0               	movwf	I2C1_Write@address
  9438     07C8  0826               	movf	??_KAPS_getStatus+1,w
  9439     07C9  00A1               	movwf	I2C1_Write@address+1
  9440     07CA  3027               	movlw	(low (KAPS_getStatus@reg| 0))& (0+255)
  9441     07CB  00A2               	movwf	I2C1_Write@data
  9442     07CC  3001               	movlw	1
  9443     07CD  00A3               	movwf	I2C1_Write@dataLength
  9444     07CE  3000               	movlw	0
  9445     07CF  00A4               	movwf	I2C1_Write@dataLength+1
  9446     07D0  318E  26A4  3187   	fcall	_I2C1_Write
  9447     07D3                     l3844:
  9448                           
  9449                           ;kaps.c: 87:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9450     07D3  0020               	movlb	0	; select bank0
  9451     07D4  0864               	movf	_kaps,w
  9452     07D5  00A5               	movwf	??_KAPS_getStatus
  9453     07D6  01A6               	clrf	??_KAPS_getStatus+1
  9454     07D7  0825               	movf	??_KAPS_getStatus,w
  9455     07D8  00A0               	movwf	I2C1_Read@address
  9456     07D9  0826               	movf	??_KAPS_getStatus+1,w
  9457     07DA  00A1               	movwf	I2C1_Read@address+1
  9458     07DB  3028               	movlw	(low (KAPS_getStatus@data| 0))& (0+255)
  9459     07DC  00A2               	movwf	I2C1_Read@data
  9460     07DD  3001               	movlw	1
  9461     07DE  00A3               	movwf	I2C1_Read@dataLength
  9462     07DF  3000               	movlw	0
  9463     07E0  00A4               	movwf	I2C1_Read@dataLength+1
  9464     07E1  318E  26E4  3187   	fcall	_I2C1_Read
  9465     07E4  3A00               	xorlw	0
  9466     07E5  1903               	skipnz
  9467     07E6  2FE8               	goto	u1901
  9468     07E7  2FE9               	goto	u1900
  9469     07E8                     u1901:
  9470     07E8  2FEC               	goto	l729
  9471     07E9                     u1900:
  9472     07E9                     l3846:
  9473                           
  9474                           ;kaps.c: 88:         kaps.m_Status = (kaps_status_t) data;
  9475     07E9  0020               	movlb	0	; select bank0
  9476     07EA  0828               	movf	KAPS_getStatus@data,w
  9477     07EB  00E5               	movwf	_kaps+1
  9478     07EC                     l729:
  9479     07EC  0008               	return
  9480     07ED                     __end_of_KAPS_getStatus:
  9481                           
  9482                           	psect	text32
  9483     05C0                     __ptext32:	
  9484 ;; *************** function _KAPS_getPos *****************
  9485 ;; Defined at:
  9486 ;;		line 107 in file "kaps.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  data            4   15[BANK0 ] unsigned char [4]
  9491 ;;  reg             1   19[BANK0 ] unsigned char 
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      void 
  9494 ;; Registers used:
  9495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9501 ;;      Params:         0       0       0       0       0       0       0       0
  9502 ;;      Locals:         0       5       0       0       0       0       0       0
  9503 ;;      Temps:          0       2       0       0       0       0       0       0
  9504 ;;      Totals:         0       7       0       0       0       0       0       0
  9505 ;;Total ram usage:        7 bytes
  9506 ;; Hardware stack levels used: 1
  9507 ;; Hardware stack levels required when called: 10
  9508 ;; This function calls:
  9509 ;;		_I2C1_Read
  9510 ;;		_I2C1_Write
  9511 ;;		_packLong
  9512 ;; This function is called by:
  9513 ;;		_ProcessMsg
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517     05C0                     _KAPS_getPos:	
  9518                           ;psect for function _KAPS_getPos
  9519                           
  9520     05C0                     l3848:	
  9521                           ;incstack = 0
  9522                           ; Regs used in _KAPS_getPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9523                           
  9524                           
  9525                           ;kaps.c: 108:     uint8_t reg = 0x00;
  9526     05C0  0020               	movlb	0	; select bank0
  9527     05C1  01B3               	clrf	KAPS_getPos@reg
  9528     05C2                     l3850:
  9529                           
  9530                           ;kaps.c: 109:     uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
  9531     05C2  3000               	movlw	0
  9532     05C3  00B2               	movwf	KAPS_getPos@data+3
  9533     05C4  3000               	movlw	0
  9534     05C5  00B1               	movwf	KAPS_getPos@data+2
  9535     05C6  3000               	movlw	0
  9536     05C7  00B0               	movwf	KAPS_getPos@data+1
  9537     05C8  3000               	movlw	0
  9538     05C9  00AF               	movwf	KAPS_getPos@data
  9539     05CA                     l3852:
  9540                           
  9541                           ;kaps.c: 111:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9542     05CA  0864               	movf	_kaps,w
  9543     05CB  00AD               	movwf	??_KAPS_getPos
  9544     05CC  01AE               	clrf	??_KAPS_getPos+1
  9545     05CD  082D               	movf	??_KAPS_getPos,w
  9546     05CE  00A0               	movwf	I2C1_Write@address
  9547     05CF  082E               	movf	??_KAPS_getPos+1,w
  9548     05D0  00A1               	movwf	I2C1_Write@address+1
  9549     05D1  3033               	movlw	(low (KAPS_getPos@reg| 0))& (0+255)
  9550     05D2  00A2               	movwf	I2C1_Write@data
  9551     05D3  3001               	movlw	1
  9552     05D4  00A3               	movwf	I2C1_Write@dataLength
  9553     05D5  3000               	movlw	0
  9554     05D6  00A4               	movwf	I2C1_Write@dataLength+1
  9555     05D7  318E  26A4  3185   	fcall	_I2C1_Write
  9556     05DA                     l3854:
  9557                           
  9558                           ;kaps.c: 113:     if (I2C1_Read(kaps.m_bAddr, data, 4))
  9559     05DA  0020               	movlb	0	; select bank0
  9560     05DB  0864               	movf	_kaps,w
  9561     05DC  00AD               	movwf	??_KAPS_getPos
  9562     05DD  01AE               	clrf	??_KAPS_getPos+1
  9563     05DE  082D               	movf	??_KAPS_getPos,w
  9564     05DF  00A0               	movwf	I2C1_Read@address
  9565     05E0  082E               	movf	??_KAPS_getPos+1,w
  9566     05E1  00A1               	movwf	I2C1_Read@address+1
  9567     05E2  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9568     05E3  00A2               	movwf	I2C1_Read@data
  9569     05E4  3004               	movlw	4
  9570     05E5  00A3               	movwf	I2C1_Read@dataLength
  9571     05E6  3000               	movlw	0
  9572     05E7  00A4               	movwf	I2C1_Read@dataLength+1
  9573     05E8  318E  26E4  3185   	fcall	_I2C1_Read
  9574     05EB  3A00               	xorlw	0
  9575     05EC  1903               	skipnz
  9576     05ED  2DEF               	goto	u1911
  9577     05EE  2DF0               	goto	u1910
  9578     05EF                     u1911:
  9579     05EF  2DFD               	goto	l739
  9580     05F0                     u1910:
  9581     05F0                     l3856:
  9582                           
  9583                           ;kaps.c: 114:         kaps.m_lAbsPos = packLong(data);
  9584     05F0  302F               	movlw	(low (KAPS_getPos@data| 0))& (0+255)
  9585     05F1  3183  237E  3185   	fcall	_packLong
  9586     05F4  0020               	movlb	0	; select bank0
  9587     05F5  0823               	movf	?_packLong+3,w
  9588     05F6  00E9               	movwf	_kaps+5
  9589     05F7  0822               	movf	?_packLong+2,w
  9590     05F8  00E8               	movwf	_kaps+4
  9591     05F9  0821               	movf	?_packLong+1,w
  9592     05FA  00E7               	movwf	_kaps+3
  9593     05FB  0820               	movf	?_packLong,w
  9594     05FC  00E6               	movwf	_kaps+2
  9595     05FD                     l739:
  9596     05FD  0008               	return
  9597     05FE                     __end_of_KAPS_getPos:
  9598                           
  9599                           	psect	text33
  9600     037E                     __ptext33:	
  9601 ;; *************** function _packLong *****************
  9602 ;; Defined at:
  9603 ;;		line 20 in file "utils.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  data            1    wreg     PTR unsigned char 
  9606 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  data            1   12[BANK0 ] PTR unsigned char 
  9609 ;;		 -> KAPS_getPos@data(4), parserDataBuffer(5), 
  9610 ;;  result          4    8[BANK0 ] unsigned long 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  4    0[BANK0 ] unsigned long 
  9613 ;; Registers used:
  9614 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9620 ;;      Params:         0       4       0       0       0       0       0       0
  9621 ;;      Locals:         0       5       0       0       0       0       0       0
  9622 ;;      Temps:          0       4       0       0       0       0       0       0
  9623 ;;      Totals:         0      13       0       0       0       0       0       0
  9624 ;;Total ram usage:       13 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 7
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_ProcessMsg
  9631 ;;		_KAPS_getPos
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635     037E                     _packLong:	
  9636                           ;psect for function _packLong
  9637                           
  9638                           
  9639                           ;incstack = 0
  9640                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  9641                           ;packLong@data stored from wreg
  9642     037E  0020               	movlb	0	; select bank0
  9643     037F  00AC               	movwf	packLong@data
  9644     0380                     l3722:
  9645     0380                     l3724:
  9646                           
  9647                           ;utils.c: 26:     result = (uint32_t) data[0] << 24;
  9648     0380  082C               	movf	packLong@data,w
  9649     0381  0086               	movwf	6
  9650     0382  0187               	clrf	7
  9651     0383  0801               	movf	1,w
  9652     0384  00A4               	movwf	??_packLong
  9653     0385  01A5               	clrf	??_packLong+1
  9654     0386  01A6               	clrf	??_packLong+2
  9655     0387  01A7               	clrf	??_packLong+3
  9656     0388  3018               	movlw	24
  9657     0389                     u1795:
  9658     0389  35A4               	lslf	??_packLong,f
  9659     038A  0DA5               	rlf	??_packLong+1,f
  9660     038B  0DA6               	rlf	??_packLong+2,f
  9661     038C  0DA7               	rlf	??_packLong+3,f
  9662     038D                     u1790:
  9663     038D  0B89               	decfsz	9,f
  9664     038E  2B89               	goto	u1795
  9665     038F  0827               	movf	??_packLong+3,w
  9666     0390  00AB               	movwf	packLong@result+3
  9667     0391  0826               	movf	??_packLong+2,w
  9668     0392  00AA               	movwf	packLong@result+2
  9669     0393  0825               	movf	??_packLong+1,w
  9670     0394  00A9               	movwf	packLong@result+1
  9671     0395  0824               	movf	??_packLong,w
  9672     0396  00A8               	movwf	packLong@result
  9673     0397                     l3726:
  9674                           
  9675                           ;utils.c: 27:     result |= (uint32_t) data[1] << 16;
  9676     0397  0A2C               	incf	packLong@data,w
  9677     0398  0086               	movwf	6
  9678     0399  0187               	clrf	7
  9679     039A  0801               	movf	1,w
  9680     039B  00A4               	movwf	??_packLong
  9681     039C  01A5               	clrf	??_packLong+1
  9682     039D  01A6               	clrf	??_packLong+2
  9683     039E  01A7               	clrf	??_packLong+3
  9684     039F  3010               	movlw	16
  9685     03A0                     u1805:
  9686     03A0  35A4               	lslf	??_packLong,f
  9687     03A1  0DA5               	rlf	??_packLong+1,f
  9688     03A2  0DA6               	rlf	??_packLong+2,f
  9689     03A3  0DA7               	rlf	??_packLong+3,f
  9690     03A4                     u1800:
  9691     03A4  0B89               	decfsz	9,f
  9692     03A5  2BA0               	goto	u1805
  9693     03A6  0824               	movf	??_packLong,w
  9694     03A7  04A8               	iorwf	packLong@result,f
  9695     03A8  0825               	movf	??_packLong+1,w
  9696     03A9  04A9               	iorwf	packLong@result+1,f
  9697     03AA  0826               	movf	??_packLong+2,w
  9698     03AB  04AA               	iorwf	packLong@result+2,f
  9699     03AC  0827               	movf	??_packLong+3,w
  9700     03AD  04AB               	iorwf	packLong@result+3,f
  9701     03AE                     l3728:
  9702                           
  9703                           ;utils.c: 28:     result |= (uint32_t) data[2] << 8;
  9704     03AE  082C               	movf	packLong@data,w
  9705     03AF  3E02               	addlw	2
  9706     03B0  0086               	movwf	6
  9707     03B1  0187               	clrf	7
  9708     03B2  0801               	movf	1,w
  9709     03B3  00A4               	movwf	??_packLong
  9710     03B4  01A5               	clrf	??_packLong+1
  9711     03B5  01A6               	clrf	??_packLong+2
  9712     03B6  01A7               	clrf	??_packLong+3
  9713     03B7  3008               	movlw	8
  9714     03B8                     u1815:
  9715     03B8  35A4               	lslf	??_packLong,f
  9716     03B9  0DA5               	rlf	??_packLong+1,f
  9717     03BA  0DA6               	rlf	??_packLong+2,f
  9718     03BB  0DA7               	rlf	??_packLong+3,f
  9719     03BC                     u1810:
  9720     03BC  0B89               	decfsz	9,f
  9721     03BD  2BB8               	goto	u1815
  9722     03BE  0824               	movf	??_packLong,w
  9723     03BF  04A8               	iorwf	packLong@result,f
  9724     03C0  0825               	movf	??_packLong+1,w
  9725     03C1  04A9               	iorwf	packLong@result+1,f
  9726     03C2  0826               	movf	??_packLong+2,w
  9727     03C3  04AA               	iorwf	packLong@result+2,f
  9728     03C4  0827               	movf	??_packLong+3,w
  9729     03C5  04AB               	iorwf	packLong@result+3,f
  9730     03C6                     l3730:
  9731                           
  9732                           ;utils.c: 29:     result |= (uint32_t) data[3];
  9733     03C6  082C               	movf	packLong@data,w
  9734     03C7  3E03               	addlw	3
  9735     03C8  0086               	movwf	6
  9736     03C9  0187               	clrf	7
  9737     03CA  0801               	movf	1,w
  9738     03CB  04A8               	iorwf	packLong@result,f
  9739                           
  9740                           ;utils.c: 31:     return result;
  9741     03CC  082B               	movf	packLong@result+3,w
  9742     03CD  00A3               	movwf	?_packLong+3
  9743     03CE  082A               	movf	packLong@result+2,w
  9744     03CF  00A2               	movwf	?_packLong+2
  9745     03D0  0829               	movf	packLong@result+1,w
  9746     03D1  00A1               	movwf	?_packLong+1
  9747     03D2  0828               	movf	packLong@result,w
  9748     03D3  00A0               	movwf	?_packLong
  9749     03D4                     l742:
  9750     03D4  0008               	return
  9751     03D5                     __end_of_packLong:
  9752                           
  9753                           	psect	text34
  9754     0FD2                     __ptext34:	
  9755 ;; *************** function _KAPS_getIndex *****************
  9756 ;; Defined at:
  9757 ;;		line 94 in file "kaps.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;		None
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  data            1    8[BANK0 ] unsigned char 
  9762 ;;  reg             1    7[BANK0 ] unsigned char 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      void 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2, status,0, pclath, cstack
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9772 ;;      Params:         0       0       0       0       0       0       0       0
  9773 ;;      Locals:         0       2       0       0       0       0       0       0
  9774 ;;      Temps:          0       2       0       0       0       0       0       0
  9775 ;;      Totals:         0       4       0       0       0       0       0       0
  9776 ;;Total ram usage:        4 bytes
  9777 ;; Hardware stack levels used: 1
  9778 ;; Hardware stack levels required when called: 10
  9779 ;; This function calls:
  9780 ;;		_I2C1_Read
  9781 ;;		_I2C1_Write
  9782 ;; This function is called by:
  9783 ;;		_ProcessMsg
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787     0FD2                     _KAPS_getIndex:	
  9788                           ;psect for function _KAPS_getIndex
  9789                           
  9790     0FD2                     l3858:	
  9791                           ;incstack = 0
  9792                           ; Regs used in _KAPS_getIndex: [wreg+status,2+status,0+pclath+cstack]
  9793                           
  9794                           
  9795                           ;kaps.c: 95:     uint8_t reg = 0xFE;
  9796     0FD2  30FE               	movlw	254
  9797     0FD3  0020               	movlb	0	; select bank0
  9798     0FD4  00A7               	movwf	KAPS_getIndex@reg
  9799     0FD5                     l3860:
  9800                           
  9801                           ;kaps.c: 96:     uint8_t data = 0x00;
  9802     0FD5  01A8               	clrf	KAPS_getIndex@data
  9803     0FD6                     l3862:
  9804                           
  9805                           ;kaps.c: 98:     I2C1_Write(kaps.m_bAddr, &reg, 1);
  9806     0FD6  0864               	movf	_kaps,w
  9807     0FD7  00A5               	movwf	??_KAPS_getIndex
  9808     0FD8  01A6               	clrf	??_KAPS_getIndex+1
  9809     0FD9  0825               	movf	??_KAPS_getIndex,w
  9810     0FDA  00A0               	movwf	I2C1_Write@address
  9811     0FDB  0826               	movf	??_KAPS_getIndex+1,w
  9812     0FDC  00A1               	movwf	I2C1_Write@address+1
  9813     0FDD  3027               	movlw	(low (KAPS_getIndex@reg| 0))& (0+255)
  9814     0FDE  00A2               	movwf	I2C1_Write@data
  9815     0FDF  3001               	movlw	1
  9816     0FE0  00A3               	movwf	I2C1_Write@dataLength
  9817     0FE1  3000               	movlw	0
  9818     0FE2  00A4               	movwf	I2C1_Write@dataLength+1
  9819     0FE3  318E  26A4  318F   	fcall	_I2C1_Write
  9820     0FE6                     l3864:
  9821                           
  9822                           ;kaps.c: 100:     if (I2C1_Read(kaps.m_bAddr, &data, 1))
  9823     0FE6  0020               	movlb	0	; select bank0
  9824     0FE7  0864               	movf	_kaps,w
  9825     0FE8  00A5               	movwf	??_KAPS_getIndex
  9826     0FE9  01A6               	clrf	??_KAPS_getIndex+1
  9827     0FEA  0825               	movf	??_KAPS_getIndex,w
  9828     0FEB  00A0               	movwf	I2C1_Read@address
  9829     0FEC  0826               	movf	??_KAPS_getIndex+1,w
  9830     0FED  00A1               	movwf	I2C1_Read@address+1
  9831     0FEE  3028               	movlw	(low (KAPS_getIndex@data| 0))& (0+255)
  9832     0FEF  00A2               	movwf	I2C1_Read@data
  9833     0FF0  3001               	movlw	1
  9834     0FF1  00A3               	movwf	I2C1_Read@dataLength
  9835     0FF2  3000               	movlw	0
  9836     0FF3  00A4               	movwf	I2C1_Read@dataLength+1
  9837     0FF4  318E  26E4  318F   	fcall	_I2C1_Read
  9838     0FF7  3A00               	xorlw	0
  9839     0FF8  1903               	skipnz
  9840     0FF9  2FFB               	goto	u1921
  9841     0FFA  2FFC               	goto	u1920
  9842     0FFB                     u1921:
  9843     0FFB  2FFF               	goto	l733
  9844     0FFC                     u1920:
  9845     0FFC                     l3866:
  9846                           
  9847                           ;kaps.c: 101:         kaps.m_bIdxPos = data;
  9848     0FFC  0020               	movlb	0	; select bank0
  9849     0FFD  0828               	movf	KAPS_getIndex@data,w
  9850     0FFE  00EA               	movwf	_kaps+6
  9851     0FFF                     l733:
  9852     0FFF  0008               	return
  9853     1000                     __end_of_KAPS_getIndex:
  9854                           
  9855                           	psect	text35
  9856     0EE4                     __ptext35:	
  9857 ;; *************** function _I2C1_Read *****************
  9858 ;; Defined at:
  9859 ;;		line 161 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  address         2    0[BANK0 ] unsigned short 
  9862 ;;  data            1    2[BANK0 ] PTR unsigned char 
  9863 ;;		 -> KAPS_getPos@data(4), KAPS_getIndex@data(1), KAPS_getStatus@data(1), 
  9864 ;;  dataLength      2    3[BANK0 ] unsigned int 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  retStatus       1    5[COMMON] _Bool 
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1    wreg      _Bool 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2, status,0, pclath, cstack
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9876 ;;      Params:         0       5       0       0       0       0       0       0
  9877 ;;      Locals:         1       0       0       0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0
  9879 ;;      Totals:         1       5       0       0       0       0       0       0
  9880 ;;Total ram usage:        6 bytes
  9881 ;; Hardware stack levels used: 1
  9882 ;; Hardware stack levels required when called: 9
  9883 ;; This function calls:
  9884 ;;		_I2C1_IsBusy
  9885 ;;		_I2C1_ReadStart
  9886 ;; This function is called by:
  9887 ;;		_KAPS_getStatus
  9888 ;;		_KAPS_getIndex
  9889 ;;		_KAPS_getPos
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893     0EE4                     _I2C1_Read:	
  9894                           ;psect for function _I2C1_Read
  9895                           
  9896     0EE4                     l3660:	
  9897                           ;incstack = 0
  9898                           ; Regs used in _I2C1_Read: [wreg+status,2+status,0+pclath+cstack]
  9899                           
  9900                           
  9901                           ;mcc_generated_files/i2c_host/src/mssp.c: 161: _Bool I2C1_Read(uint16_t address, uint8_t
      +                           *data, size_t dataLength);mcc_generated_files/i2c_host/src/mssp.c: 162: {;mcc_generated
      +                          _files/i2c_host/src/mssp.c: 163:     _Bool retStatus = 0;
  9902     0EE4  01F5               	clrf	I2C1_Read@retStatus
  9903     0EE5                     l3662:
  9904                           
  9905                           ;mcc_generated_files/i2c_host/src/mssp.c: 164:     if (!I2C1_IsBusy())
  9906     0EE5  318D  25FE  318E   	fcall	_I2C1_IsBusy
  9907     0EE8  3A00               	xorlw	0
  9908     0EE9  1D03               	skipz
  9909     0EEA  2EEC               	goto	u1731
  9910     0EEB  2EED               	goto	u1730
  9911     0EEC                     u1731:
  9912     0EEC  2F04               	goto	l3682
  9913     0EED                     u1730:
  9914     0EED                     l3664:
  9915                           
  9916                           ;mcc_generated_files/i2c_host/src/mssp.c: 165:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 166:         i2c1Status.busy = 1;
  9917     0EED  3001               	movlw	1
  9918     0EEE  0020               	movlb	0	; select bank0
  9919     0EEF  00D2               	movwf	_i2c1Status	;volatile
  9920                           
  9921                           ;mcc_generated_files/i2c_host/src/mssp.c: 167:         i2c1Status.address = address;
  9922     0EF0  0821               	movf	I2C1_Read@address+1,w
  9923     0EF1  00D4               	movwf	_i2c1Status+2	;volatile
  9924     0EF2  0820               	movf	I2C1_Read@address,w
  9925     0EF3  00D3               	movwf	_i2c1Status+1	;volatile
  9926     0EF4                     l3666:
  9927                           
  9928                           ;mcc_generated_files/i2c_host/src/mssp.c: 168:         i2c1Status.switchToRead = 0;
  9929     0EF4  01DB               	clrf	_i2c1Status+9	;volatile
  9930     0EF5                     l3668:
  9931                           
  9932                           ;mcc_generated_files/i2c_host/src/mssp.c: 169:         i2c1Status.readPtr = data;
  9933     0EF5  0822               	movf	I2C1_Read@data,w
  9934     0EF6  00D8               	movwf	low ((_i2c1Status| 0+6))	;volatile
  9935     0EF7                     l3670:
  9936                           
  9937                           ;mcc_generated_files/i2c_host/src/mssp.c: 170:         i2c1Status.readLength = dataLengt
      +                          h;
  9938     0EF7  0824               	movf	I2C1_Read@dataLength+1,w
  9939     0EF8  00DA               	movwf	_i2c1Status+8	;volatile
  9940     0EF9  0823               	movf	I2C1_Read@dataLength,w
  9941     0EFA  00D9               	movwf	_i2c1Status+7	;volatile
  9942     0EFB                     l3672:
  9943                           
  9944                           ;mcc_generated_files/i2c_host/src/mssp.c: 171:         i2c1Status.writePtr = ((void*)0);
  9945     0EFB  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
  9946     0EFC                     l3674:
  9947                           
  9948                           ;mcc_generated_files/i2c_host/src/mssp.c: 172:         i2c1Status.writeLength = 0;
  9949     0EFC  01D6               	clrf	_i2c1Status+4	;volatile
  9950     0EFD  01D7               	clrf	_i2c1Status+5	;volatile
  9951     0EFE                     l3676:
  9952                           
  9953                           ;mcc_generated_files/i2c_host/src/mssp.c: 173:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
  9954     0EFE  01DC               	clrf	_i2c1Status+10	;volatile
  9955     0EFF                     l3678:
  9956                           
  9957                           ;mcc_generated_files/i2c_host/src/mssp.c: 174:         I2C1_ReadStart();
  9958     0EFF  318D  2563  318E   	fcall	_I2C1_ReadStart
  9959     0F02                     l3680:
  9960                           
  9961                           ;mcc_generated_files/i2c_host/src/mssp.c: 175:         retStatus = 1;
  9962     0F02  01F5               	clrf	I2C1_Read@retStatus
  9963     0F03  0AF5               	incf	I2C1_Read@retStatus,f
  9964     0F04                     l3682:
  9965                           
  9966                           ;mcc_generated_files/i2c_host/src/mssp.c: 177:     return retStatus;
  9967     0F04  0875               	movf	I2C1_Read@retStatus,w
  9968     0F05                     l188:
  9969     0F05  0008               	return
  9970     0F06                     __end_of_I2C1_Read:
  9971                           
  9972                           	psect	text36
  9973     0D63                     __ptext36:	
  9974 ;; *************** function _I2C1_ReadStart *****************
  9975 ;; Defined at:
  9976 ;;		line 232 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;		None
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;		None
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  1    wreg      void 
  9983 ;; Registers used:
  9984 ;;		wreg, status,2, status,0, pclath, cstack
  9985 ;; Tracked objects:
  9986 ;;		On entry : 0/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9990 ;;      Params:         0       0       0       0       0       0       0       0
  9991 ;;      Locals:         0       0       0       0       0       0       0       0
  9992 ;;      Temps:          0       0       0       0       0       0       0       0
  9993 ;;      Totals:         0       0       0       0       0       0       0       0
  9994 ;;Total ram usage:        0 bytes
  9995 ;; Hardware stack levels used: 1
  9996 ;; Hardware stack levels required when called: 8
  9997 ;; This function calls:
  9998 ;;		_I2C1_StartSend
  9999 ;; This function is called by:
 10000 ;;		_I2C1_Read
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004     0D63                     _I2C1_ReadStart:	
 10005                           ;psect for function _I2C1_ReadStart
 10006                           
 10007     0D63                     l3572:	
 10008                           ;incstack = 0
 10009                           ; Regs used in _I2C1_ReadStart: [wreg+status,2+status,0+pclath+cstack]
 10010                           
 10011                           
 10012                           ;mcc_generated_files/i2c_host/src/mssp.c: 234:     I2C1_StartSend();
 10013     0D63  318C  24D7  318D   	fcall	_I2C1_StartSend
 10014     0D66                     l3574:
 10015                           
 10016                           ;mcc_generated_files/i2c_host/src/mssp.c: 235:     i2c1Status.state = I2C_STATE_SEND_RD_
      +                          ADDR;
 10017     0D66  3001               	movlw	1
 10018     0D67  0020               	movlb	0	; select bank0
 10019     0D68  00DD               	movwf	_i2c1Status+11	;volatile
 10020     0D69                     l213:
 10021     0D69  0008               	return
 10022     0D6A                     __end_of_I2C1_ReadStart:
 10023                           
 10024                           	psect	text37
 10025     0580                     __ptext37:	
 10026 ;; *************** function _KAPS_StorePos *****************
 10027 ;; Defined at:
 10028 ;;		line 65 in file "kaps.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  idx             1    wreg     unsigned char 
 10031 ;;  pos             4   13[BANK0 ] unsigned long 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  idx             1   24[BANK0 ] unsigned char 
 10034 ;;  data            4   19[BANK0 ] unsigned char [4]
 10035 ;;  reg             1   23[BANK0 ] unsigned char 
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  1    wreg      void 
 10038 ;; Registers used:
 10039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10045 ;;      Params:         0       4       0       0       0       0       0       0
 10046 ;;      Locals:         0       6       0       0       0       0       0       0
 10047 ;;      Temps:          0       2       0       0       0       0       0       0
 10048 ;;      Totals:         0      12       0       0       0       0       0       0
 10049 ;;Total ram usage:       12 bytes
 10050 ;; Hardware stack levels used: 1
 10051 ;; Hardware stack levels required when called: 10
 10052 ;; This function calls:
 10053 ;;		_I2C1_Write
 10054 ;;		_unpackLong
 10055 ;; This function is called by:
 10056 ;;		_ProcessMsg
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060     0580                     _KAPS_StorePos:	
 10061                           ;psect for function _KAPS_StorePos
 10062                           
 10063                           
 10064                           ;incstack = 0
 10065                           ; Regs used in _KAPS_StorePos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10066                           ;KAPS_StorePos@idx stored from wreg
 10067     0580  0020               	movlb	0	; select bank0
 10068     0581  00B8               	movwf	KAPS_StorePos@idx
 10069     0582                     l3906:
 10070                           
 10071                           ;kaps.c: 66:     idx--;
 10072     0582  3001               	movlw	1
 10073     0583  02B8               	subwf	KAPS_StorePos@idx,f
 10074     0584                     l3908:
 10075                           
 10076                           ;kaps.c: 68:     uint8_t reg = (idx)*4 + 0x04;
 10077     0584  0838               	movf	KAPS_StorePos@idx,w
 10078     0585  00B1               	movwf	??_KAPS_StorePos
 10079     0586  3001               	movlw	1
 10080     0587                     u1965:
 10081     0587  35B1               	lslf	??_KAPS_StorePos,f
 10082     0588  3EFF               	addlw	-1
 10083     0589  1D03               	skipz
 10084     058A  2D87               	goto	u1965
 10085     058B  3531               	lslf	??_KAPS_StorePos,w
 10086     058C  3E04               	addlw	4
 10087     058D  00B7               	movwf	KAPS_StorePos@reg
 10088     058E                     l3910:
 10089                           
 10090                           ;kaps.c: 69:     uint8_t data[4];;kaps.c: 71:     data[0] = idx;
 10091     058E  0838               	movf	KAPS_StorePos@idx,w
 10092     058F  00B3               	movwf	KAPS_StorePos@data
 10093     0590                     l3912:
 10094                           
 10095                           ;kaps.c: 72:     unpackLong(pos, &data[0]);
 10096     0590  0830               	movf	KAPS_StorePos@pos+3,w
 10097     0591  00A3               	movwf	unpackLong@value+3
 10098     0592  082F               	movf	KAPS_StorePos@pos+2,w
 10099     0593  00A2               	movwf	unpackLong@value+2
 10100     0594  082E               	movf	KAPS_StorePos@pos+1,w
 10101     0595  00A1               	movwf	unpackLong@value+1
 10102     0596  082D               	movf	KAPS_StorePos@pos,w
 10103     0597  00A0               	movwf	unpackLong@value
 10104     0598  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10105     0599  00A4               	movwf	unpackLong@data
 10106     059A  3184  24B8  3185   	fcall	_unpackLong
 10107     059D                     l3914:
 10108                           
 10109                           ;kaps.c: 74:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10110     059D  0020               	movlb	0	; select bank0
 10111     059E  0864               	movf	_kaps,w
 10112     059F  00B1               	movwf	??_KAPS_StorePos
 10113     05A0  01B2               	clrf	??_KAPS_StorePos+1
 10114     05A1  0831               	movf	??_KAPS_StorePos,w
 10115     05A2  00A0               	movwf	I2C1_Write@address
 10116     05A3  0832               	movf	??_KAPS_StorePos+1,w
 10117     05A4  00A1               	movwf	I2C1_Write@address+1
 10118     05A5  3037               	movlw	(low (KAPS_StorePos@reg| 0))& (0+255)
 10119     05A6  00A2               	movwf	I2C1_Write@data
 10120     05A7  3001               	movlw	1
 10121     05A8  00A3               	movwf	I2C1_Write@dataLength
 10122     05A9  3000               	movlw	0
 10123     05AA  00A4               	movwf	I2C1_Write@dataLength+1
 10124     05AB  318E  26A4  3185   	fcall	_I2C1_Write
 10125     05AE                     l3916:
 10126                           
 10127                           ;kaps.c: 75:     I2C1_Write(kaps.m_bAddr, data, 4);
 10128     05AE  0020               	movlb	0	; select bank0
 10129     05AF  0864               	movf	_kaps,w
 10130     05B0  00B1               	movwf	??_KAPS_StorePos
 10131     05B1  01B2               	clrf	??_KAPS_StorePos+1
 10132     05B2  0831               	movf	??_KAPS_StorePos,w
 10133     05B3  00A0               	movwf	I2C1_Write@address
 10134     05B4  0832               	movf	??_KAPS_StorePos+1,w
 10135     05B5  00A1               	movwf	I2C1_Write@address+1
 10136     05B6  3033               	movlw	(low (KAPS_StorePos@data| 0))& (0+255)
 10137     05B7  00A2               	movwf	I2C1_Write@data
 10138     05B8  3004               	movlw	4
 10139     05B9  00A3               	movwf	I2C1_Write@dataLength
 10140     05BA  3000               	movlw	0
 10141     05BB  00A4               	movwf	I2C1_Write@dataLength+1
 10142     05BC  318E  26A4  3185   	fcall	_I2C1_Write
 10143     05BF                     l725:
 10144     05BF  0008               	return
 10145     05C0                     __end_of_KAPS_StorePos:
 10146                           
 10147                           	psect	text38
 10148     04B8                     __ptext38:	
 10149 ;; *************** function _unpackLong *****************
 10150 ;; Defined at:
 10151 ;;		line 57 in file "utils.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;  value           4    0[BANK0 ] unsigned long 
 10154 ;;  data            1    4[BANK0 ] PTR unsigned char 
 10155 ;;		 -> KAPS_StorePos@data(4), KAPS_setAbsPos@data(4), ProcessMsg@payload(6), 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;		None
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  1    wreg      void 
 10160 ;; Registers used:
 10161 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10167 ;;      Params:         0       5       0       0       0       0       0       0
 10168 ;;      Locals:         0       0       0       0       0       0       0       0
 10169 ;;      Temps:          0       4       0       0       0       0       0       0
 10170 ;;      Totals:         0       9       0       0       0       0       0       0
 10171 ;;Total ram usage:        9 bytes
 10172 ;; Hardware stack levels used: 1
 10173 ;; Hardware stack levels required when called: 7
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		_ProcessMsg
 10178 ;;		_KAPS_setAbsPos
 10179 ;;		_KAPS_StorePos
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183     04B8                     _unpackLong:	
 10184                           ;psect for function _unpackLong
 10185                           
 10186     04B8                     l3714:	
 10187                           ;incstack = 0
 10188                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
 10189                           
 10190                           
 10191                           ;utils.c: 59:     data[0] = (value & 0XFF);
 10192     04B8  0020               	movlb	0	; select bank0
 10193     04B9  0824               	movf	unpackLong@data,w
 10194     04BA  0086               	movwf	6
 10195     04BB  0187               	clrf	7
 10196     04BC  0820               	movf	unpackLong@value,w
 10197     04BD  0081               	movwf	1
 10198     04BE                     l3716:
 10199                           
 10200                           ;utils.c: 60:     data[1] = (value >> 8) & 0xFF;
 10201     04BE  0A24               	incf	unpackLong@data,w
 10202     04BF  0086               	movwf	6
 10203     04C0  0187               	clrf	7
 10204     04C1  0820               	movf	unpackLong@value,w
 10205     04C2  00A5               	movwf	??_unpackLong
 10206     04C3  0821               	movf	unpackLong@value+1,w
 10207     04C4  00A6               	movwf	??_unpackLong+1
 10208     04C5  0822               	movf	unpackLong@value+2,w
 10209     04C6  00A7               	movwf	??_unpackLong+2
 10210     04C7  0823               	movf	unpackLong@value+3,w
 10211     04C8  00A8               	movwf	??_unpackLong+3
 10212     04C9  3008               	movlw	8
 10213     04CA                     u1765:
 10214     04CA  36A8               	lsrf	??_unpackLong+3,f
 10215     04CB  0CA7               	rrf	??_unpackLong+2,f
 10216     04CC  0CA6               	rrf	??_unpackLong+1,f
 10217     04CD  0CA5               	rrf	??_unpackLong,f
 10218     04CE                     u1760:
 10219     04CE  0B89               	decfsz	9,f
 10220     04CF  2CCA               	goto	u1765
 10221     04D0  0825               	movf	??_unpackLong,w
 10222     04D1  0081               	movwf	1
 10223     04D2                     l3718:
 10224                           
 10225                           ;utils.c: 61:     data[2] = (value >> 16) & 0xFF;
 10226     04D2  0824               	movf	unpackLong@data,w
 10227     04D3  3E02               	addlw	2
 10228     04D4  0086               	movwf	6
 10229     04D5  0187               	clrf	7
 10230     04D6  0820               	movf	unpackLong@value,w
 10231     04D7  00A5               	movwf	??_unpackLong
 10232     04D8  0821               	movf	unpackLong@value+1,w
 10233     04D9  00A6               	movwf	??_unpackLong+1
 10234     04DA  0822               	movf	unpackLong@value+2,w
 10235     04DB  00A7               	movwf	??_unpackLong+2
 10236     04DC  0823               	movf	unpackLong@value+3,w
 10237     04DD  00A8               	movwf	??_unpackLong+3
 10238     04DE  3010               	movlw	16
 10239     04DF                     u1775:
 10240     04DF  36A8               	lsrf	??_unpackLong+3,f
 10241     04E0  0CA7               	rrf	??_unpackLong+2,f
 10242     04E1  0CA6               	rrf	??_unpackLong+1,f
 10243     04E2  0CA5               	rrf	??_unpackLong,f
 10244     04E3                     u1770:
 10245     04E3  0B89               	decfsz	9,f
 10246     04E4  2CDF               	goto	u1775
 10247     04E5  0825               	movf	??_unpackLong,w
 10248     04E6  0081               	movwf	1
 10249     04E7                     l3720:
 10250                           
 10251                           ;utils.c: 62:     data[3] = (value >> 24) & 0xFF;
 10252     04E7  0824               	movf	unpackLong@data,w
 10253     04E8  3E03               	addlw	3
 10254     04E9  0086               	movwf	6
 10255     04EA  0187               	clrf	7
 10256     04EB  0820               	movf	unpackLong@value,w
 10257     04EC  00A5               	movwf	??_unpackLong
 10258     04ED  0821               	movf	unpackLong@value+1,w
 10259     04EE  00A6               	movwf	??_unpackLong+1
 10260     04EF  0822               	movf	unpackLong@value+2,w
 10261     04F0  00A7               	movwf	??_unpackLong+2
 10262     04F1  0823               	movf	unpackLong@value+3,w
 10263     04F2  00A8               	movwf	??_unpackLong+3
 10264     04F3  3018               	movlw	24
 10265     04F4                     u1785:
 10266     04F4  36A8               	lsrf	??_unpackLong+3,f
 10267     04F5  0CA7               	rrf	??_unpackLong+2,f
 10268     04F6  0CA6               	rrf	??_unpackLong+1,f
 10269     04F7  0CA5               	rrf	??_unpackLong,f
 10270     04F8                     u1780:
 10271     04F8  0B89               	decfsz	9,f
 10272     04F9  2CF4               	goto	u1785
 10273     04FA  0825               	movf	??_unpackLong,w
 10274     04FB  0081               	movwf	1
 10275     04FC                     l748:
 10276     04FC  0008               	return
 10277     04FD                     __end_of_unpackLong:
 10278                           
 10279                           	psect	text39
 10280     0F06                     __ptext39:	
 10281 ;; *************** function _KAPS_GoToIdx *****************
 10282 ;; Defined at:
 10283 ;;		line 24 in file "kaps.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  idx             1    wreg     unsigned char 
 10286 ;; Auto vars:     Size  Location     Type
 10287 ;;  idx             1    7[BANK0 ] unsigned char 
 10288 ;;  reg             1    8[BANK0 ] unsigned char 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0, pclath, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10298 ;;      Params:         0       0       0       0       0       0       0       0
 10299 ;;      Locals:         0       2       0       0       0       0       0       0
 10300 ;;      Temps:          0       2       0       0       0       0       0       0
 10301 ;;      Totals:         0       4       0       0       0       0       0       0
 10302 ;;Total ram usage:        4 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 10
 10305 ;; This function calls:
 10306 ;;		_I2C1_Write
 10307 ;; This function is called by:
 10308 ;;		_ProcessMsg
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312     0F06                     _KAPS_GoToIdx:	
 10313                           ;psect for function _KAPS_GoToIdx
 10314                           
 10315                           
 10316                           ;incstack = 0
 10317                           ; Regs used in _KAPS_GoToIdx: [wreg+status,2+status,0+pclath+cstack]
 10318                           ;KAPS_GoToIdx@idx stored from wreg
 10319     0F06  0020               	movlb	0	; select bank0
 10320     0F07  00A7               	movwf	KAPS_GoToIdx@idx
 10321     0F08                     l3886:
 10322                           
 10323                           ;kaps.c: 25:     uint8_t reg = 0xFE;
 10324     0F08  30FE               	movlw	254
 10325     0F09  00A8               	movwf	KAPS_GoToIdx@reg
 10326     0F0A                     l3888:
 10327                           
 10328                           ;kaps.c: 27:     I2C1_Write(kaps.m_bAddr, &reg, 1);
 10329     0F0A  0864               	movf	_kaps,w
 10330     0F0B  00A5               	movwf	??_KAPS_GoToIdx
 10331     0F0C  01A6               	clrf	??_KAPS_GoToIdx+1
 10332     0F0D  0825               	movf	??_KAPS_GoToIdx,w
 10333     0F0E  00A0               	movwf	I2C1_Write@address
 10334     0F0F  0826               	movf	??_KAPS_GoToIdx+1,w
 10335     0F10  00A1               	movwf	I2C1_Write@address+1
 10336     0F11  3028               	movlw	(low (KAPS_GoToIdx@reg| 0))& (0+255)
 10337     0F12  00A2               	movwf	I2C1_Write@data
 10338     0F13  3001               	movlw	1
 10339     0F14  00A3               	movwf	I2C1_Write@dataLength
 10340     0F15  3000               	movlw	0
 10341     0F16  00A4               	movwf	I2C1_Write@dataLength+1
 10342     0F17  318E  26A4  318F   	fcall	_I2C1_Write
 10343     0F1A                     l3890:
 10344                           
 10345                           ;kaps.c: 28:     I2C1_Write(kaps.m_bAddr, &idx, 1);
 10346     0F1A  0020               	movlb	0	; select bank0
 10347     0F1B  0864               	movf	_kaps,w
 10348     0F1C  00A5               	movwf	??_KAPS_GoToIdx
 10349     0F1D  01A6               	clrf	??_KAPS_GoToIdx+1
 10350     0F1E  0825               	movf	??_KAPS_GoToIdx,w
 10351     0F1F  00A0               	movwf	I2C1_Write@address
 10352     0F20  0826               	movf	??_KAPS_GoToIdx+1,w
 10353     0F21  00A1               	movwf	I2C1_Write@address+1
 10354     0F22  3027               	movlw	(low (KAPS_GoToIdx@idx| 0))& (0+255)
 10355     0F23  00A2               	movwf	I2C1_Write@data
 10356     0F24  3001               	movlw	1
 10357     0F25  00A3               	movwf	I2C1_Write@dataLength
 10358     0F26  3000               	movlw	0
 10359     0F27  00A4               	movwf	I2C1_Write@dataLength+1
 10360     0F28  318E  26A4  318F   	fcall	_I2C1_Write
 10361     0F2B                     l716:
 10362     0F2B  0008               	return
 10363     0F2C                     __end_of_KAPS_GoToIdx:
 10364                           
 10365                           	psect	text40
 10366     0EA4                     __ptext40:	
 10367 ;; *************** function _I2C1_Write *****************
 10368 ;; Defined at:
 10369 ;;		line 142 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  address         2    0[BANK0 ] unsigned short 
 10372 ;;  data            1    2[BANK0 ] PTR unsigned char 
 10373 ;;		 -> KAPS_getPos@reg(1), KAPS_getIndex@reg(1), KAPS_getStatus@reg(1), KAPS_StorePos@data(4), 
 10374 ;;		 -> KAPS_StorePos@reg(1), KAPS_setRelPos@value(1), KAPS_setRelPos@reg(1), KAPS_setAbsPos@data(4), 
 10375 ;;		 -> KAPS_setAbsPos@reg(1), KAPS_GoToIdx@idx(1), KAPS_GoToIdx@reg(1), 
 10376 ;;  dataLength      2    3[BANK0 ] unsigned int 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  retStatus       1    0        _Bool 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  1    wreg      _Bool 
 10381 ;; Registers used:
 10382 ;;		wreg, status,2, status,0, pclath, cstack
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10388 ;;      Params:         0       5       0       0       0       0       0       0
 10389 ;;      Locals:         0       0       0       0       0       0       0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0
 10391 ;;      Totals:         0       5       0       0       0       0       0       0
 10392 ;;Total ram usage:        5 bytes
 10393 ;; Hardware stack levels used: 1
 10394 ;; Hardware stack levels required when called: 9
 10395 ;; This function calls:
 10396 ;;		_I2C1_IsBusy
 10397 ;;		_I2C1_WriteStart
 10398 ;; This function is called by:
 10399 ;;		_KAPS_GoToIdx
 10400 ;;		_KAPS_setAbsPos
 10401 ;;		_KAPS_setRelPos
 10402 ;;		_KAPS_StorePos
 10403 ;;		_KAPS_getStatus
 10404 ;;		_KAPS_getIndex
 10405 ;;		_KAPS_getPos
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409     0EA4                     _I2C1_Write:	
 10410                           ;psect for function _I2C1_Write
 10411                           
 10412     0EA4                     l3636:	
 10413                           ;incstack = 0
 10414                           ; Regs used in _I2C1_Write: [wreg+status,2+status,0+pclath+cstack]
 10415                           
 10416     0EA4                     l3638:
 10417                           
 10418                           ;mcc_generated_files/i2c_host/src/mssp.c: 145:     if (!I2C1_IsBusy())
 10419     0EA4  318D  25FE  318E   	fcall	_I2C1_IsBusy
 10420     0EA7  3A00               	xorlw	0
 10421     0EA8  1D03               	skipz
 10422     0EA9  2EAB               	goto	u1721
 10423     0EAA  2EAC               	goto	u1720
 10424     0EAB                     u1721:
 10425     0EAB  2EC1               	goto	l184
 10426     0EAC                     u1720:
 10427     0EAC                     l3640:
 10428                           
 10429                           ;mcc_generated_files/i2c_host/src/mssp.c: 146:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 147:         i2c1Status.busy = 1;
 10430     0EAC  3001               	movlw	1
 10431     0EAD  0020               	movlb	0	; select bank0
 10432     0EAE  00D2               	movwf	_i2c1Status	;volatile
 10433                           
 10434                           ;mcc_generated_files/i2c_host/src/mssp.c: 148:         i2c1Status.address = address;
 10435     0EAF  0821               	movf	I2C1_Write@address+1,w
 10436     0EB0  00D4               	movwf	_i2c1Status+2	;volatile
 10437     0EB1  0820               	movf	I2C1_Write@address,w
 10438     0EB2  00D3               	movwf	_i2c1Status+1	;volatile
 10439     0EB3                     l3642:
 10440                           
 10441                           ;mcc_generated_files/i2c_host/src/mssp.c: 149:         i2c1Status.switchToRead = 0;
 10442     0EB3  01DB               	clrf	_i2c1Status+9	;volatile
 10443     0EB4                     l3644:
 10444                           
 10445                           ;mcc_generated_files/i2c_host/src/mssp.c: 150:         i2c1Status.writePtr = data;
 10446     0EB4  0822               	movf	I2C1_Write@data,w
 10447     0EB5  00D5               	movwf	low ((_i2c1Status| 0+3))	;volatile
 10448     0EB6                     l3646:
 10449                           
 10450                           ;mcc_generated_files/i2c_host/src/mssp.c: 151:         i2c1Status.writeLength = dataLeng
      +                          th;
 10451     0EB6  0824               	movf	I2C1_Write@dataLength+1,w
 10452     0EB7  00D7               	movwf	_i2c1Status+5	;volatile
 10453     0EB8  0823               	movf	I2C1_Write@dataLength,w
 10454     0EB9  00D6               	movwf	_i2c1Status+4	;volatile
 10455     0EBA                     l3648:
 10456                           
 10457                           ;mcc_generated_files/i2c_host/src/mssp.c: 152:         i2c1Status.readPtr = ((void*)0);
 10458     0EBA  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 10459     0EBB                     l3650:
 10460                           
 10461                           ;mcc_generated_files/i2c_host/src/mssp.c: 153:         i2c1Status.readLength = 0;
 10462     0EBB  01D9               	clrf	_i2c1Status+7	;volatile
 10463     0EBC  01DA               	clrf	_i2c1Status+8	;volatile
 10464     0EBD                     l3652:
 10465                           
 10466                           ;mcc_generated_files/i2c_host/src/mssp.c: 154:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 10467     0EBD  01DC               	clrf	_i2c1Status+10	;volatile
 10468     0EBE                     l3654:
 10469                           
 10470                           ;mcc_generated_files/i2c_host/src/mssp.c: 155:         I2C1_WriteStart();
 10471     0EBE  318D  255C  318E   	fcall	_I2C1_WriteStart
 10472     0EC1                     l3656:
 10473     0EC1                     l184:
 10474     0EC1  0008               	return
 10475     0EC2                     __end_of_I2C1_Write:
 10476                           
 10477                           	psect	text41
 10478     0D5C                     __ptext41:	
 10479 ;; *************** function _I2C1_WriteStart *****************
 10480 ;; Defined at:
 10481 ;;		line 238 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;		None
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      void 
 10488 ;; Registers used:
 10489 ;;		wreg, status,2, status,0, pclath, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10495 ;;      Params:         0       0       0       0       0       0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0
 10498 ;;      Totals:         0       0       0       0       0       0       0       0
 10499 ;;Total ram usage:        0 bytes
 10500 ;; Hardware stack levels used: 1
 10501 ;; Hardware stack levels required when called: 8
 10502 ;; This function calls:
 10503 ;;		_I2C1_StartSend
 10504 ;; This function is called by:
 10505 ;;		_I2C1_Write
 10506 ;;		_I2C1_WriteRead
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510     0D5C                     _I2C1_WriteStart:	
 10511                           ;psect for function _I2C1_WriteStart
 10512                           
 10513     0D5C                     l3568:	
 10514                           ;incstack = 0
 10515                           ; Regs used in _I2C1_WriteStart: [wreg+status,2+status,0+pclath+cstack]
 10516                           
 10517                           
 10518                           ;mcc_generated_files/i2c_host/src/mssp.c: 240:     I2C1_StartSend();
 10519     0D5C  318C  24D7  318D   	fcall	_I2C1_StartSend
 10520     0D5F                     l3570:
 10521                           
 10522                           ;mcc_generated_files/i2c_host/src/mssp.c: 241:     i2c1Status.state = I2C_STATE_SEND_WR_
      +                          ADDR;
 10523     0D5F  3002               	movlw	2
 10524     0D60  0020               	movlb	0	; select bank0
 10525     0D61  00DD               	movwf	_i2c1Status+11	;volatile
 10526     0D62                     l216:
 10527     0D62  0008               	return
 10528     0D63                     __end_of_I2C1_WriteStart:
 10529                           
 10530                           	psect	text42
 10531     0CD7                     __ptext42:	
 10532 ;; *************** function _I2C1_StartSend *****************
 10533 ;; Defined at:
 10534 ;;		line 425 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      void 
 10541 ;; Registers used:
 10542 ;;		None
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10548 ;;      Params:         0       0       0       0       0       0       0       0
 10549 ;;      Locals:         0       0       0       0       0       0       0       0
 10550 ;;      Temps:          0       0       0       0       0       0       0       0
 10551 ;;      Totals:         0       0       0       0       0       0       0       0
 10552 ;;Total ram usage:        0 bytes
 10553 ;; Hardware stack levels used: 1
 10554 ;; Hardware stack levels required when called: 7
 10555 ;; This function calls:
 10556 ;;		Nothing
 10557 ;; This function is called by:
 10558 ;;		_I2C1_ReadStart
 10559 ;;		_I2C1_WriteStart
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563     0CD7                     _I2C1_StartSend:	
 10564                           ;psect for function _I2C1_StartSend
 10565                           
 10566     0CD7                     l3528:	
 10567                           ;incstack = 0
 10568                           ; Regs used in _I2C1_StartSend: []
 10569                           
 10570                           
 10571                           ;mcc_generated_files/i2c_host/src/mssp.c: 427:     SSP1CON2bits.SEN = 1;
 10572     0CD7  0024               	movlb	4	; select bank4
 10573     0CD8  1416               	bsf	22,0	;volatile
 10574     0CD9                     l288:
 10575     0CD9  0008               	return
 10576     0CDA                     __end_of_I2C1_StartSend:
 10577                           
 10578                           	psect	text43
 10579     0DFE                     __ptext43:	
 10580 ;; *************** function _I2C1_IsBusy *****************
 10581 ;; Defined at:
 10582 ;;		line 206 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      _Bool 
 10589 ;; Registers used:
 10590 ;;		wreg, status,2, status,0
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10596 ;;      Params:         0       0       0       0       0       0       0       0
 10597 ;;      Locals:         1       0       0       0       0       0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0
 10599 ;;      Totals:         1       0       0       0       0       0       0       0
 10600 ;;Total ram usage:        1 bytes
 10601 ;; Hardware stack levels used: 1
 10602 ;; Hardware stack levels required when called: 7
 10603 ;; This function calls:
 10604 ;;		Nothing
 10605 ;; This function is called by:
 10606 ;;		_I2C1_Write
 10607 ;;		_I2C1_Read
 10608 ;;		_I2C1_WriteRead
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612     0DFE                     _I2C1_IsBusy:	
 10613                           ;psect for function _I2C1_IsBusy
 10614                           
 10615     0DFE                     l3556:	
 10616                           ;incstack = 0
 10617                           ; Regs used in _I2C1_IsBusy: [wreg+status,2+status,0]
 10618                           
 10619                           
 10620                           ;mcc_generated_files/i2c_host/src/mssp.c: 208:     return i2c1Status.busy || SSP1STATbit
      +                          s.S;
 10621     0DFE  01F4               	clrf	_I2C1_IsBusy$646
 10622     0DFF  0AF4               	incf	_I2C1_IsBusy$646,f
 10623     0E00                     l3558:
 10624     0E00  0020               	movlb	0	; select bank0
 10625     0E01  0852               	movf	_i2c1Status,w	;volatile
 10626     0E02  1D03               	btfss	3,2
 10627     0E03  2E05               	goto	u1551
 10628     0E04  2E06               	goto	u1550
 10629     0E05                     u1551:
 10630     0E05  2E0C               	goto	l3564
 10631     0E06                     u1550:
 10632     0E06                     l3560:
 10633     0E06  0024               	movlb	4	; select bank4
 10634     0E07  1994               	btfsc	20,3	;volatile
 10635     0E08  2E0A               	goto	u1561
 10636     0E09  2E0B               	goto	u1560
 10637     0E0A                     u1561:
 10638     0E0A  2E0C               	goto	l3564
 10639     0E0B                     u1560:
 10640     0E0B                     l3562:
 10641     0E0B  01F4               	clrf	_I2C1_IsBusy$646
 10642     0E0C                     l3564:
 10643     0E0C  0874               	movf	_I2C1_IsBusy$646,w
 10644     0E0D                     l200:
 10645     0E0D  0008               	return
 10646     0E0E                     __end_of_I2C1_IsBusy:
 10647                           
 10648                           	psect	text44
 10649     01AC                     __ptext44:	
 10650 ;; *************** function _Parse *****************
 10651 ;; Defined at:
 10652 ;;		line 74 in file "parser.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  data            1    wreg     unsigned char 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  data            1    8[BANK0 ] unsigned char 
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      _Bool 
 10659 ;; Registers used:
 10660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10666 ;;      Params:         0       0       0       0       0       0       0       0
 10667 ;;      Locals:         0       1       0       0       0       0       0       0
 10668 ;;      Temps:          0       2       0       0       0       0       0       0
 10669 ;;      Totals:         0       3       0       0       0       0       0       0
 10670 ;;Total ram usage:        3 bytes
 10671 ;; Hardware stack levels used: 1
 10672 ;; Hardware stack levels required when called: 11
 10673 ;; This function calls:
 10674 ;;		_SendMsg
 10675 ;;		_SendNack
 10676 ;; This function is called by:
 10677 ;;		_main
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681     01AC                     _Parse:	
 10682                           ;psect for function _Parse
 10683                           
 10684                           
 10685                           ;incstack = 0
 10686                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10687                           ;Parse@data stored from wreg
 10688     01AC  0020               	movlb	0	; select bank0
 10689     01AD  00A8               	movwf	Parse@data
 10690     01AE                     l3974:
 10691                           
 10692                           ;parser.c: 75:     switch (parser.m_State) {
 10693     01AE  2A4A               	goto	l4042
 10694     01AF                     l3976:
 10695                           
 10696                           ;parser.c: 77:             if (data == 0x01) {
 10697     01AF  0328               	decf	Parse@data,w
 10698     01B0  1D03               	btfss	3,2
 10699     01B1  29B3               	goto	u2011
 10700     01B2  29B4               	goto	u2010
 10701     01B3                     u2011:
 10702     01B3  29BA               	goto	l3982
 10703     01B4                     u2010:
 10704     01B4                     l3978:
 10705                           
 10706                           ;parser.c: 78:                 parser.m_State = WAIT_ID;
 10707     01B4  0021               	movlb	1	; select bank1
 10708     01B5  01B8               	clrf	_parser^(0+128)
 10709     01B6  0AB8               	incf	_parser^(0+128),f
 10710     01B7                     l3980:
 10711                           
 10712                           ;parser.c: 79:                 parser.m_bSum = 0x00;
 10713     01B7  01BE               	clrf	(_parser^(0+128)+6)
 10714                           
 10715                           ;parser.c: 80:                 parser.m_bDataIndex = 0;
 10716     01B8  01BA               	clrf	(_parser^(0+128)+2)
 10717                           
 10718                           ;parser.c: 81:             } else
 10719     01B9  2A62               	goto	l4044
 10720     01BA                     l3982:
 10721                           
 10722                           ;parser.c: 82:                 SendNack(WRONG_MESSAGE);
 10723     01BA  3002               	movlw	2
 10724     01BB  318D  2590  3181   	fcall	_SendNack
 10725     01BE  2A62               	goto	l4044
 10726     01BF                     l3984:
 10727                           
 10728                           ;parser.c: 86:             parser.m_MsgID = data;
 10729     01BF  0828               	movf	Parse@data,w
 10730     01C0  0021               	movlb	1	; select bank1
 10731     01C1  00B9               	movwf	(_parser^(0+128)+1)
 10732     01C2                     l3986:
 10733                           
 10734                           ;parser.c: 87:             parser.m_bEcho = 1;
 10735     01C2  01BF               	clrf	(_parser^(0+128)+7)
 10736     01C3  0ABF               	incf	(_parser^(0+128)+7),f
 10737                           
 10738                           ;parser.c: 89:             parser.m_State = WAIT_VALUE;
 10739     01C4  3002               	movlw	2
 10740     01C5  00B8               	movwf	_parser^(0+128)
 10741                           
 10742                           ;parser.c: 91:             switch ((uint8_t) parser.m_MsgID) {
 10743     01C6  29E5               	goto	l4006
 10744     01C7                     l3988:
 10745                           
 10746                           ;parser.c: 95:                     parser.m_bEcho = 0;
 10747     01C7  01BF               	clrf	(_parser^(0+128)+7)
 10748                           
 10749                           ;parser.c: 96:                     parser.m_bReplySize = 0;
 10750     01C8  01BC               	clrf	(_parser^(0+128)+4)
 10751                           
 10752                           ;parser.c: 97:                     parser.m_bDataSize = 0;
 10753     01C9  01BB               	clrf	(_parser^(0+128)+3)
 10754     01CA                     l3990:
 10755                           
 10756                           ;parser.c: 98:                     parser.m_State = WAIT_CKSUM;
 10757     01CA  3003               	movlw	3
 10758     01CB  00B8               	movwf	_parser^(0+128)
 10759                           
 10760                           ;parser.c: 99:                     break;
 10761     01CC  2A62               	goto	l4044
 10762     01CD                     l792:	
 10763                           ;parser.c: 103:                 case NVT_RFDU_SSPAPout:
 10764                           
 10765     01CD                     l3992:
 10766                           
 10767                           ;parser.c: 105:                     parser.m_bEcho = 0;
 10768     01CD  01BF               	clrf	(_parser^(0+128)+7)
 10769     01CE                     l3994:
 10770                           
 10771                           ;parser.c: 107:                     parser.m_bReplySize = 1;
 10772     01CE  01BC               	clrf	(_parser^(0+128)+4)
 10773     01CF  0ABC               	incf	(_parser^(0+128)+4),f
 10774     01D0                     l3996:
 10775                           
 10776                           ;parser.c: 108:                     parser.m_bDataSize = 1;
 10777     01D0  01BB               	clrf	(_parser^(0+128)+3)
 10778     01D1  0ABB               	incf	(_parser^(0+128)+3),f
 10779                           
 10780                           ;parser.c: 109:                     break;
 10781     01D2  2A62               	goto	l4044
 10782     01D3                     l3998:
 10783                           
 10784                           ;parser.c: 112:                     parser.m_bReplySize = 2;
 10785     01D3  3002               	movlw	2
 10786     01D4  00BC               	movwf	(_parser^(0+128)+4)
 10787                           
 10788                           ;parser.c: 113:                     parser.m_bDataSize = 2;
 10789     01D5  3002               	movlw	2
 10790     01D6  00BB               	movwf	(_parser^(0+128)+3)
 10791                           
 10792                           ;parser.c: 114:                     break;
 10793     01D7  2A62               	goto	l4044
 10794     01D8                     l4000:
 10795                           
 10796                           ;parser.c: 117:                     parser.m_bReplySize = 4;
 10797     01D8  3004               	movlw	4
 10798     01D9  00BC               	movwf	(_parser^(0+128)+4)
 10799                           
 10800                           ;parser.c: 118:                     parser.m_bDataSize = 4;
 10801     01DA  3004               	movlw	4
 10802     01DB  00BB               	movwf	(_parser^(0+128)+3)
 10803                           
 10804                           ;parser.c: 119:                     break;
 10805     01DC  2A62               	goto	l4044
 10806     01DD                     l4002:
 10807                           
 10808                           ;parser.c: 122:                     parser.m_bReplySize = 5;
 10809     01DD  3005               	movlw	5
 10810     01DE  00BC               	movwf	(_parser^(0+128)+4)
 10811                           
 10812                           ;parser.c: 123:                     parser.m_bDataSize = 5;
 10813     01DF  3005               	movlw	5
 10814     01E0  00BB               	movwf	(_parser^(0+128)+3)
 10815                           
 10816                           ;parser.c: 124:                     break;
 10817     01E1  2A62               	goto	l4044
 10818     01E2                     l4004:
 10819                           
 10820                           ;parser.c: 127:                     parser.m_State = WAIT_SOM;
 10821     01E2  0021               	movlb	1	; select bank1
 10822     01E3  01B8               	clrf	_parser^(0+128)
 10823                           
 10824                           ;parser.c: 128:             }
 10825     01E4  2A62               	goto	l4044
 10826     01E5                     l4006:
 10827     01E5  0839               	movf	(_parser^(0+128)+1),w
 10828                           
 10829                           ; Switch size 1, requested type "simple"
 10830                           ; Number of cases is 11, Range of values is 1 to 17
 10831                           ; switch strategies available:
 10832                           ; Name         Instructions Cycles
 10833                           ; simple_byte           34    18 (average)
 10834                           ; direct_byte           43     9 (fixed)
 10835                           ; jumptable            263     9 (fixed)
 10836                           ;	Chosen strategy is simple_byte
 10837     01E6  3A01               	xorlw	1	; case 1
 10838     01E7  1903               	skipnz
 10839     01E8  29D3               	goto	l3998
 10840     01E9  3A03               	xorlw	3	; case 2
 10841     01EA  1903               	skipnz
 10842     01EB  29CD               	goto	l792
 10843     01EC  3A01               	xorlw	1	; case 3
 10844     01ED  1903               	skipnz
 10845     01EE  29CD               	goto	l3992
 10846     01EF  3A07               	xorlw	7	; case 4
 10847     01F0  1903               	skipnz
 10848     01F1  29CD               	goto	l3992
 10849     01F2  3A01               	xorlw	1	; case 5
 10850     01F3  1903               	skipnz
 10851     01F4  29C7               	goto	l3988
 10852     01F5  3A03               	xorlw	3	; case 6
 10853     01F6  1903               	skipnz
 10854     01F7  29C7               	goto	l3988
 10855     01F8  3A01               	xorlw	1	; case 7
 10856     01F9  1903               	skipnz
 10857     01FA  29CE               	goto	l3994
 10858     01FB  3A0F               	xorlw	15	; case 8
 10859     01FC  1903               	skipnz
 10860     01FD  29D8               	goto	l4000
 10861     01FE  3A01               	xorlw	1	; case 9
 10862     01FF  1903               	skipnz
 10863     0200  29CD               	goto	l3992
 10864     0201  3A03               	xorlw	3	; case 10
 10865     0202  1903               	skipnz
 10866     0203  29DD               	goto	l4002
 10867     0204  3A1B               	xorlw	27	; case 17
 10868     0205  1903               	skipnz
 10869     0206  29C7               	goto	l3988
 10870     0207  29E2               	goto	l4004
 10871     0208                     l4008:
 10872                           
 10873                           ;parser.c: 132:             parserDataBuffer[parser.m_bDataIndex] = data;
 10874     0208  0021               	movlb	1	; select bank1
 10875     0209  083A               	movf	(_parser^(0+128)+2),w
 10876     020A  3ECA               	addlw	(low (_parserDataBuffer| 0))& (0+255)
 10877     020B  0086               	movwf	6
 10878     020C  0187               	clrf	7
 10879     020D  0020               	movlb	0	; select bank0
 10880     020E  0828               	movf	Parse@data,w
 10881     020F  0081               	movwf	1
 10882     0210                     l4010:
 10883                           
 10884                           ;parser.c: 133:             parser.m_bSum += data;
 10885     0210  0828               	movf	Parse@data,w
 10886     0211  00A6               	movwf	??_Parse
 10887     0212  0826               	movf	??_Parse,w
 10888     0213  0021               	movlb	1	; select bank1
 10889     0214  07BE               	addwf	(_parser^(0+128)+6),f
 10890     0215                     l4012:
 10891                           
 10892                           ;parser.c: 134:             parser.m_bDataIndex++;
 10893     0215  3001               	movlw	1
 10894     0216  0020               	movlb	0	; select bank0
 10895     0217  00A6               	movwf	??_Parse
 10896     0218  0826               	movf	??_Parse,w
 10897     0219  0021               	movlb	1	; select bank1
 10898     021A  07BA               	addwf	(_parser^(0+128)+2),f
 10899     021B                     l4014:
 10900                           
 10901                           ;parser.c: 135:             parser.m_bDataSize--;
 10902     021B  3001               	movlw	1
 10903     021C  02BB               	subwf	(_parser^(0+128)+3),f
 10904     021D                     l4016:
 10905                           
 10906                           ;parser.c: 136:             if (parser.m_bDataSize == 0)
 10907     021D  083B               	movf	(_parser^(0+128)+3),w
 10908     021E  1D03               	btfss	3,2
 10909     021F  2A21               	goto	u2021
 10910     0220  2A22               	goto	u2020
 10911     0221                     u2021:
 10912     0221  2A62               	goto	l4044
 10913     0222                     u2020:
 10914     0222  29CA               	goto	l3990
 10915     0223                     l4020:
 10916                           
 10917                           ;parser.c: 141:             parser.m_bCkSum = data;
 10918     0223  0828               	movf	Parse@data,w
 10919     0224  0021               	movlb	1	; select bank1
 10920     0225  00BD               	movwf	(_parser^(0+128)+5)
 10921     0226                     l4022:
 10922                           
 10923                           ;parser.c: 142:             parser.m_State = WAIT_SOM;
 10924     0226  01B8               	clrf	_parser^(0+128)
 10925     0227                     l4024:
 10926                           
 10927                           ;parser.c: 144:             if (parser.m_bSum == parser.m_bCkSum) {
 10928     0227  083E               	movf	(_parser^(0+128)+6),w
 10929     0228  063D               	xorwf	(_parser^(0+128)+5),w
 10930     0229  1D03               	skipz
 10931     022A  2A2C               	goto	u2031
 10932     022B  2A2D               	goto	u2030
 10933     022C                     u2031:
 10934     022C  2A40               	goto	l4036
 10935     022D                     u2030:
 10936     022D                     l4026:
 10937                           
 10938                           ;parser.c: 145:                 if (parser.m_bEcho)
 10939     022D  083F               	movf	(_parser^(0+128)+7),w
 10940     022E  1903               	btfsc	3,2
 10941     022F  2A31               	goto	u2041
 10942     0230  2A32               	goto	u2040
 10943     0231                     u2041:
 10944     0231  2A3E               	goto	l4030
 10945     0232                     u2040:
 10946     0232                     l4028:
 10947                           
 10948                           ;parser.c: 146:                     SendMsg(parser.m_MsgID, parserDataBuffer, parser.m_b
      +                          ReplySize);
 10949     0232  30CA               	movlw	(low (_parserDataBuffer| 0))& (0+255)
 10950     0233  0020               	movlb	0	; select bank0
 10951     0234  00A0               	movwf	SendMsg@data
 10952     0235  0021               	movlb	1	; select bank1
 10953     0236  083C               	movf	(_parser^(0+128)+4),w
 10954     0237  0020               	movlb	0	; select bank0
 10955     0238  00A1               	movwf	SendMsg@data_len
 10956     0239  0021               	movlb	1	; select bank1
 10957     023A  0839               	movf	(_parser^(0+128)+1),w
 10958     023B  3186  2678  3181   	fcall	_SendMsg
 10959     023E                     l4030:
 10960                           
 10961                           ;parser.c: 148:                 return 1;
 10962     023E  3001               	movlw	1
 10963     023F  2A63               	goto	l804
 10964     0240                     l4036:
 10965                           
 10966                           ;parser.c: 150:                 SendNack(CKSUM_ERR);
 10967     0240  3001               	movlw	1
 10968     0241  318D  2590  3181   	fcall	_SendNack
 10969     0244  2A62               	goto	l4044
 10970     0245                     l4038:
 10971                           
 10972                           ;parser.c: 154:             SendNack(WRONG_MESSAGE);
 10973     0245  3002               	movlw	2
 10974     0246  318D  2590  3181   	fcall	_SendNack
 10975     0249  29E2               	goto	l4004
 10976     024A                     l4042:
 10977     024A  0021               	movlb	1	; select bank1
 10978     024B  0838               	movf	_parser^(0+128),w
 10979     024C  0020               	movlb	0	; select bank0
 10980     024D  00A6               	movwf	??_Parse
 10981     024E  01A7               	clrf	??_Parse+1
 10982                           
 10983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10984                           ; Switch size 1, requested type "simple"
 10985                           ; Number of cases is 1, Range of values is 0 to 0
 10986                           ; switch strategies available:
 10987                           ; Name         Instructions Cycles
 10988                           ; simple_byte            4     3 (average)
 10989                           ; direct_byte            8     6 (fixed)
 10990                           ; jumptable            260     6 (fixed)
 10991                           ;	Chosen strategy is simple_byte
 10992     024F  0827               	movf	??_Parse+1,w
 10993     0250  3A00               	xorlw	0	; case 0
 10994     0251  1903               	skipnz
 10995     0252  2A54               	goto	l4228
 10996     0253  2A45               	goto	l4038
 10997     0254                     l4228:
 10998                           
 10999                           ; Switch size 1, requested type "simple"
 11000                           ; Number of cases is 4, Range of values is 0 to 3
 11001                           ; switch strategies available:
 11002                           ; Name         Instructions Cycles
 11003                           ; simple_byte           13     7 (average)
 11004                           ; direct_byte           14     6 (fixed)
 11005                           ; jumptable            260     6 (fixed)
 11006                           ;	Chosen strategy is simple_byte
 11007     0254  0826               	movf	??_Parse,w
 11008     0255  3A00               	xorlw	0	; case 0
 11009     0256  1903               	skipnz
 11010     0257  29AF               	goto	l3976
 11011     0258  3A01               	xorlw	1	; case 1
 11012     0259  1903               	skipnz
 11013     025A  29BF               	goto	l3984
 11014     025B  3A03               	xorlw	3	; case 2
 11015     025C  1903               	skipnz
 11016     025D  2A08               	goto	l4008
 11017     025E  3A01               	xorlw	1	; case 3
 11018     025F  1903               	skipnz
 11019     0260  2A23               	goto	l4020
 11020     0261  2A45               	goto	l4038
 11021     0262                     l4044:
 11022                           
 11023                           ;parser.c: 158:     return 0;
 11024     0262  3000               	movlw	0
 11025     0263                     l804:
 11026     0263  0008               	return
 11027     0264                     __end_of_Parse:
 11028                           
 11029                           	psect	text45
 11030     0D90                     __ptext45:	
 11031 ;; *************** function _SendNack *****************
 11032 ;; Defined at:
 11033 ;;		line 62 in file "parser.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  error           1    wreg     unsigned char 
 11036 ;; Auto vars:     Size  Location     Type
 11037 ;;  error           1    5[BANK0 ] unsigned char 
 11038 ;; Return value:  Size  Location     Type
 11039 ;;                  1    wreg      void 
 11040 ;; Registers used:
 11041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11042 ;; Tracked objects:
 11043 ;;		On entry : 0/0
 11044 ;;		On exit  : 0/0
 11045 ;;		Unchanged: 0/0
 11046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11047 ;;      Params:         0       0       0       0       0       0       0       0
 11048 ;;      Locals:         0       1       0       0       0       0       0       0
 11049 ;;      Temps:          0       0       0       0       0       0       0       0
 11050 ;;      Totals:         0       1       0       0       0       0       0       0
 11051 ;;Total ram usage:        1 bytes
 11052 ;; Hardware stack levels used: 1
 11053 ;; Hardware stack levels required when called: 10
 11054 ;; This function calls:
 11055 ;;		_SendMsg
 11056 ;; This function is called by:
 11057 ;;		_Parse
 11058 ;; This function uses a non-reentrant model
 11059 ;;
 11060                           
 11061     0D90                     _SendNack:	
 11062                           ;psect for function _SendNack
 11063                           
 11064                           
 11065                           ;incstack = 0
 11066                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11067                           ;SendNack@error stored from wreg
 11068     0D90  0020               	movlb	0	; select bank0
 11069     0D91  00A5               	movwf	SendNack@error
 11070     0D92                     l3918:
 11071                           
 11072                           ;parser.c: 63:     SendMsg(RFDU_NVT_NACK, &error, 1);
 11073     0D92  3025               	movlw	(low (SendNack@error| 0))& (0+255)
 11074     0D93  00A0               	movwf	SendMsg@data
 11075     0D94  01A1               	clrf	SendMsg@data_len
 11076     0D95  0AA1               	incf	SendMsg@data_len,f
 11077     0D96  300B               	movlw	11
 11078     0D97  3186  2678  318D   	fcall	_SendMsg
 11079     0D9A                     l776:
 11080     0D9A  0008               	return
 11081     0D9B                     __end_of_SendNack:
 11082                           
 11083                           	psect	text46
 11084     0678                     __ptext46:	
 11085 ;; *************** function _SendMsg *****************
 11086 ;; Defined at:
 11087 ;;		line 36 in file "parser.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  msg_id          1    wreg     unsigned char 
 11090 ;;  data            1    0[BANK0 ] PTR unsigned char 
 11091 ;;		 -> SendNack@error(1), parserDataBuffer(5), ProcessMsg@payload(6), 
 11092 ;;  data_len        1    1[BANK0 ] unsigned char 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  msg_id          1    4[BANK0 ] unsigned char 
 11095 ;;  sum             1    3[BANK0 ] unsigned char 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  1    wreg      void 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11105 ;;      Params:         0       2       0       0       0       0       0       0
 11106 ;;      Locals:         0       2       0       0       0       0       0       0
 11107 ;;      Temps:          0       1       0       0       0       0       0       0
 11108 ;;      Totals:         0       5       0       0       0       0       0       0
 11109 ;;Total ram usage:        5 bytes
 11110 ;; Hardware stack levels used: 1
 11111 ;; Hardware stack levels required when called: 9
 11112 ;; This function calls:
 11113 ;;		_SendSync
 11114 ;; This function is called by:
 11115 ;;		_ProcessMsg
 11116 ;;		_SendNack
 11117 ;;		_Parse
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121     0678                     _SendMsg:	
 11122                           ;psect for function _SendMsg
 11123                           
 11124                           
 11125                           ;incstack = 0
 11126                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11127                           ;SendMsg@msg_id stored from wreg
 11128     0678  0020               	movlb	0	; select bank0
 11129     0679  00A4               	movwf	SendMsg@msg_id
 11130     067A                     l3686:
 11131                           
 11132                           ;parser.c: 37:     uint8_t sum = 0x00;
 11133     067A  01A3               	clrf	SendMsg@sum
 11134     067B                     l3688:
 11135                           
 11136                           ;parser.c: 39:     SendSync(0x01);
 11137     067B  3001               	movlw	1
 11138     067C  318E  260E  3186   	fcall	_SendSync
 11139     067F                     l3690:
 11140                           
 11141                           ;parser.c: 41:     SendSync(msg_id);
 11142     067F  0020               	movlb	0	; select bank0
 11143     0680  0824               	movf	SendMsg@msg_id,w
 11144     0681  318E  260E  3186   	fcall	_SendSync
 11145     0684                     l3692:
 11146                           
 11147                           ;parser.c: 43:     if (msg_id == RFDU_NVT_NACK)
 11148     0684  300B               	movlw	11
 11149     0685  0020               	movlb	0	; select bank0
 11150     0686  0624               	xorwf	SendMsg@msg_id,w
 11151     0687  1D03               	btfss	3,2
 11152     0688  2E8A               	goto	u1741
 11153     0689  2E8B               	goto	u1740
 11154     068A                     u1741:
 11155     068A  2E93               	goto	l3698
 11156     068B                     u1740:
 11157     068B                     l3694:
 11158                           
 11159                           ;parser.c: 44:     {;parser.c: 45:         SendSync(*data);
 11160     068B  0820               	movf	SendMsg@data,w
 11161     068C  0086               	movwf	6
 11162     068D  0187               	clrf	7
 11163     068E  0801               	movf	1,w
 11164     068F  318E  260E  3186   	fcall	_SendSync
 11165     0692  2EB3               	goto	l771
 11166     0693                     l3698:
 11167                           
 11168                           ;parser.c: 49:     for (; data_len > 0; data_len--) {
 11169     0693  0821               	movf	SendMsg@data_len,w
 11170     0694  1D03               	btfss	3,2
 11171     0695  2E97               	goto	u1751
 11172     0696  2E98               	goto	u1750
 11173     0697                     u1751:
 11174     0697  2E99               	goto	l3702
 11175     0698                     u1750:
 11176     0698  2EAF               	goto	l3712
 11177     0699                     l3702:
 11178                           
 11179                           ;parser.c: 50:         SendSync(*data);
 11180     0699  0820               	movf	SendMsg@data,w
 11181     069A  0086               	movwf	6
 11182     069B  0187               	clrf	7
 11183     069C  0801               	movf	1,w
 11184     069D  318E  260E  3186   	fcall	_SendSync
 11185     06A0                     l3704:
 11186                           
 11187                           ;parser.c: 51:         sum += *data;
 11188     06A0  0020               	movlb	0	; select bank0
 11189     06A1  0820               	movf	SendMsg@data,w
 11190     06A2  0086               	movwf	6
 11191     06A3  0187               	clrf	7
 11192     06A4  0801               	movf	1,w
 11193     06A5  00A2               	movwf	??_SendMsg
 11194     06A6  0822               	movf	??_SendMsg,w
 11195     06A7  07A3               	addwf	SendMsg@sum,f
 11196     06A8                     l3706:
 11197                           
 11198                           ;parser.c: 52:         data++;
 11199     06A8  3001               	movlw	1
 11200     06A9  00A2               	movwf	??_SendMsg
 11201     06AA  0822               	movf	??_SendMsg,w
 11202     06AB  07A0               	addwf	SendMsg@data,f
 11203     06AC                     l3708:
 11204                           
 11205                           ;parser.c: 53:     }
 11206     06AC  3001               	movlw	1
 11207     06AD  02A1               	subwf	SendMsg@data_len,f
 11208     06AE  2E93               	goto	l3698
 11209     06AF                     l3712:
 11210                           
 11211                           ;parser.c: 55:     SendSync(sum);
 11212     06AF  0823               	movf	SendMsg@sum,w
 11213     06B0  318E  260E  3186   	fcall	_SendSync
 11214     06B3                     l771:
 11215     06B3  0008               	return
 11216     06B4                     __end_of_SendMsg:
 11217                           
 11218                           	psect	text47
 11219     0E0E                     __ptext47:	
 11220 ;; *************** function _SendSync *****************
 11221 ;; Defined at:
 11222 ;;		line 23 in file "parser.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;  data            1    wreg     unsigned char 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  data            1    5[COMMON] unsigned char 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      void 
 11229 ;; Registers used:
 11230 ;;		wreg, status,2, status,0, pclath, cstack
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11236 ;;      Params:         0       0       0       0       0       0       0       0
 11237 ;;      Locals:         1       0       0       0       0       0       0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0
 11239 ;;      Totals:         1       0       0       0       0       0       0       0
 11240 ;;Total ram usage:        1 bytes
 11241 ;; Hardware stack levels used: 1
 11242 ;; Hardware stack levels required when called: 8
 11243 ;; This function calls:
 11244 ;;		_EUSART_IsTxReady
 11245 ;;		_EUSART_Write
 11246 ;; This function is called by:
 11247 ;;		_SendMsg
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251     0E0E                     _SendSync:	
 11252                           ;psect for function _SendSync
 11253                           
 11254                           
 11255                           ;incstack = 0
 11256                           ; Regs used in _SendSync: [wreg+status,2+status,0+pclath+cstack]
 11257                           ;SendSync@data stored from wreg
 11258     0E0E  00F5               	movwf	SendSync@data
 11259     0E0F                     l3576:
 11260                           
 11261                           ;parser.c: 23: void SendSync(uint8_t data);parser.c: 24: {;parser.c: 25:     while(!EUSA
      +                          RT_IsTxReady())
 11262     0E0F  2E11               	goto	l3578
 11263     0E10                     l765:
 11264                           
 11265                           ;parser.c: 26:         __nop();
 11266     0E10  0000               	nop
 11267     0E11                     l3578:
 11268                           
 11269                           ;parser.c: 25:     while(!EUSART_IsTxReady())
 11270     0E11  318D  25EF  318E   	fcall	_EUSART_IsTxReady
 11271     0E14  3A00               	xorlw	0
 11272     0E15  1903               	skipnz
 11273     0E16  2E18               	goto	u1571
 11274     0E17  2E19               	goto	u1570
 11275     0E18                     u1571:
 11276     0E18  2E10               	goto	l765
 11277     0E19                     u1570:
 11278     0E19                     l3580:
 11279                           
 11280                           ;parser.c: 27:     EUSART_Write(data);
 11281     0E19  0875               	movf	SendSync@data,w
 11282     0E1A  00F4               	movwf	EUSART_Write@txData
 11283     0E1B  318D  2501  318E   	fcall	_EUSART_Write
 11284     0E1E                     l767:
 11285     0E1E  0008               	return
 11286     0E1F                     __end_of_SendSync:
 11287                           
 11288                           	psect	text48
 11289     0D01                     __ptext48:	
 11290 ;; *************** function _EUSART_Write *****************
 11291 ;; Defined at:
 11292 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;  txData          1    4[COMMON] unsigned char 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		wreg
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11306 ;;      Params:         1       0       0       0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0
 11309 ;;      Totals:         1       0       0       0       0       0       0       0
 11310 ;;Total ram usage:        1 bytes
 11311 ;; Hardware stack levels used: 1
 11312 ;; Hardware stack levels required when called: 7
 11313 ;; This function calls:
 11314 ;;		Nothing
 11315 ;; This function is called by:
 11316 ;;		_SendSync
 11317 ;;		_EUSART_sendMsg
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321     0D01                     _EUSART_Write:	
 11322                           ;psect for function _EUSART_Write
 11323                           
 11324     0D01                     l3542:	
 11325                           ;incstack = 0
 11326                           ; Regs used in _EUSART_Write: [wreg]
 11327                           
 11328                           
 11329                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
 11330     0D01  0874               	movf	EUSART_Write@txData,w
 11331     0D02  0023               	movlb	3	; select bank3
 11332     0D03  009A               	movwf	26	;volatile
 11333     0D04                     l613:
 11334     0D04  0008               	return
 11335     0D05                     __end_of_EUSART_Write:
 11336                           
 11337                           	psect	text49
 11338     0DEF                     __ptext49:	
 11339 ;; *************** function _EUSART_IsTxReady *****************
 11340 ;; Defined at:
 11341 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;		None
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      _Bool 
 11348 ;; Registers used:
 11349 ;;		wreg, status,2
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11355 ;;      Params:         0       0       0       0       0       0       0       0
 11356 ;;      Locals:         1       0       0       0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0
 11358 ;;      Totals:         1       0       0       0       0       0       0       0
 11359 ;;Total ram usage:        1 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; Hardware stack levels required when called: 7
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_SendSync
 11366 ;;		_EUSART_sendMsg
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370     0DEF                     _EUSART_IsTxReady:	
 11371                           ;psect for function _EUSART_IsTxReady
 11372                           
 11373     0DEF                     l3530:	
 11374                           ;incstack = 0
 11375                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2]
 11376                           
 11377                           
 11378                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TXIF && TX1STAb
      +                          its.TXEN);
 11379     0DEF  01F4               	clrf	_EUSART_IsTxReady$1324
 11380     0DF0                     l3532:
 11381     0DF0  0020               	movlb	0	; select bank0
 11382     0DF1  1E10               	btfss	16,4	;volatile
 11383     0DF2  2DF4               	goto	u1531
 11384     0DF3  2DF5               	goto	u1530
 11385     0DF4                     u1531:
 11386     0DF4  2DFC               	goto	l3538
 11387     0DF5                     u1530:
 11388     0DF5                     l3534:
 11389     0DF5  0023               	movlb	3	; select bank3
 11390     0DF6  1E9E               	btfss	30,5	;volatile
 11391     0DF7  2DF9               	goto	u1541
 11392     0DF8  2DFA               	goto	u1540
 11393     0DF9                     u1541:
 11394     0DF9  2DFC               	goto	l3538
 11395     0DFA                     u1540:
 11396     0DFA                     l3536:
 11397     0DFA  01F4               	clrf	_EUSART_IsTxReady$1324
 11398     0DFB  0AF4               	incf	_EUSART_IsTxReady$1324,f
 11399     0DFC                     l3538:
 11400     0DFC  0874               	movf	_EUSART_IsTxReady$1324,w
 11401     0DFD                     l597:
 11402     0DFD  0008               	return
 11403     0DFE                     __end_of_EUSART_IsTxReady:
 11404                           
 11405                           	psect	text50
 11406     0F7C                     __ptext50:	
 11407 ;; *************** function _EUSART_Read *****************
 11408 ;; Defined at:
 11409 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;		None
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;		None
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      unsigned char 
 11416 ;; Registers used:
 11417 ;;		wreg, status,2, status,0, pclath, cstack
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11423 ;;      Params:         0       0       0       0       0       0       0       0
 11424 ;;      Locals:         0       0       0       0       0       0       0       0
 11425 ;;      Temps:          0       0       0       0       0       0       0       0
 11426 ;;      Totals:         0       0       0       0       0       0       0       0
 11427 ;;Total ram usage:        0 bytes
 11428 ;; Hardware stack levels used: 1
 11429 ;; Hardware stack levels required when called: 8
 11430 ;; This function calls:
 11431 ;;		NULL
 11432 ;;		_EUSART_DefaultFramingErrorCallback
 11433 ;;		_EUSART_DefaultOverrunErrorCallback
 11434 ;; This function is called by:
 11435 ;;		_main
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439     0F7C                     _EUSART_Read:	
 11440                           ;psect for function _EUSART_Read
 11441                           
 11442     0F7C                     l3176:	
 11443                           ;incstack = 0
 11444                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 11445                           
 11446                           
 11447                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 11448     0F7C  0020               	movlb	0	; select bank0
 11449     0F7D  01E0               	clrf	_eusartRxLastError	;volatile
 11450     0F7E  01E1               	clrf	_eusartRxLastError+1	;volatile
 11451     0F7F                     l3178:
 11452                           
 11453                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 11454     0F7F  0023               	movlb	3	; select bank3
 11455     0F80  1C9D               	btfss	29,1	;volatile
 11456     0F81  2F83               	goto	u1291
 11457     0F82  2F84               	goto	u1290
 11458     0F83                     u1291:
 11459     0F83  2F91               	goto	l3186
 11460     0F84                     u1290:
 11461     0F84                     l3180:
 11462                           
 11463                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 11464     0F84  0020               	movlb	0	; select bank0
 11465     0F85  1560               	bsf	_eusartRxLastError,2	;volatile
 11466     0F86                     l3182:
 11467                           
 11468                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 11469     0F86  085E               	movf	_EUSART_OverrunErrorHandler,w
 11470     0F87  045F               	iorwf	_EUSART_OverrunErrorHandler+1,w
 11471     0F88  1903               	btfsc	3,2
 11472     0F89  2F8B               	goto	u1301
 11473     0F8A  2F8C               	goto	u1300
 11474     0F8B                     u1301:
 11475     0F8B  2F91               	goto	l3186
 11476     0F8C                     u1300:
 11477     0F8C                     l3184:
 11478                           
 11479                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 11480     0F8C  085F               	movf	_EUSART_OverrunErrorHandler+1,w
 11481     0F8D  008A               	movwf	10
 11482     0F8E  085E               	movf	_EUSART_OverrunErrorHandler,w
 11483     0F8F  000A               	callw
 11484     0F90  318F               	pagesel	$
 11485     0F91                     l3186:
 11486                           
 11487                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 11488     0F91  0023               	movlb	3	; select bank3
 11489     0F92  1D1D               	btfss	29,2	;volatile
 11490     0F93  2F95               	goto	u1311
 11491     0F94  2F96               	goto	u1310
 11492     0F95                     u1311:
 11493     0F95  2FA3               	goto	l3194
 11494     0F96                     u1310:
 11495     0F96                     l3188:
 11496                           
 11497                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 11498     0F96  0020               	movlb	0	; select bank0
 11499     0F97  14E0               	bsf	_eusartRxLastError,1	;volatile
 11500     0F98                     l3190:
 11501                           
 11502                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 11503     0F98  0876               	movf	_EUSART_FramingErrorHandler,w
 11504     0F99  0477               	iorwf	_EUSART_FramingErrorHandler+1,w
 11505     0F9A  1903               	btfsc	3,2
 11506     0F9B  2F9D               	goto	u1321
 11507     0F9C  2F9E               	goto	u1320
 11508     0F9D                     u1321:
 11509     0F9D  2FA3               	goto	l3194
 11510     0F9E                     u1320:
 11511     0F9E                     l3192:
 11512                           
 11513                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 11514     0F9E  0877               	movf	_EUSART_FramingErrorHandler+1,w
 11515     0F9F  008A               	movwf	10
 11516     0FA0  0876               	movf	_EUSART_FramingErrorHandler,w
 11517     0FA1  000A               	callw
 11518     0FA2  318F               	pagesel	$
 11519     0FA3                     l3194:
 11520                           
 11521                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 11522     0FA3  0023               	movlb	3	; select bank3
 11523     0FA4  0819               	movf	25,w	;volatile
 11524     0FA5                     l610:
 11525     0FA5  0008               	return
 11526     0FA6                     __end_of_EUSART_Read:
 11527                           
 11528                           	psect	text51
 11529     0CFD                     __ptext51:	
 11530 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 11531 ;; Defined at:
 11532 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;		None
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;		None
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		None
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11546 ;;      Params:         0       0       0       0       0       0       0       0
 11547 ;;      Locals:         0       0       0       0       0       0       0       0
 11548 ;;      Temps:          0       0       0       0       0       0       0       0
 11549 ;;      Totals:         0       0       0       0       0       0       0       0
 11550 ;;Total ram usage:        0 bytes
 11551 ;; Hardware stack levels used: 1
 11552 ;; Hardware stack levels required when called: 7
 11553 ;; This function calls:
 11554 ;;		Nothing
 11555 ;; This function is called by:
 11556 ;;		_EUSART_Initialize
 11557 ;;		_EUSART_Read
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561     0CFD                     _EUSART_DefaultOverrunErrorCallback:	
 11562                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 11563                           
 11564     0CFD                     l3022:	
 11565                           ;incstack = 0
 11566                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 11567                           
 11568                           
 11569                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 11570     0CFD  0023               	movlb	3	; select bank3
 11571     0CFE  121D               	bcf	29,4	;volatile
 11572                           
 11573                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 11574     0CFF  161D               	bsf	29,4	;volatile
 11575     0D00                     l619:
 11576     0D00  0008               	return
 11577     0D01                     __end_of_EUSART_DefaultOverrunErrorCallback:
 11578                           
 11579                           	psect	text52
 11580     0003                     __ptext52:	
 11581 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 11582 ;; Defined at:
 11583 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;		None
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;		None
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  1    wreg      void 
 11590 ;; Registers used:
 11591 ;;		None
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11597 ;;      Params:         0       0       0       0       0       0       0       0
 11598 ;;      Locals:         0       0       0       0       0       0       0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0
 11600 ;;      Totals:         0       0       0       0       0       0       0       0
 11601 ;;Total ram usage:        0 bytes
 11602 ;; Hardware stack levels used: 1
 11603 ;; Hardware stack levels required when called: 7
 11604 ;; This function calls:
 11605 ;;		Nothing
 11606 ;; This function is called by:
 11607 ;;		_EUSART_Initialize
 11608 ;;		_EUSART_Read
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           
 11612     0003                     _EUSART_DefaultFramingErrorCallback:	
 11613                           ;psect for function _EUSART_DefaultFramingErrorCallback
 11614                           
 11615     0003                     l616:	
 11616                           ;incstack = 0
 11617                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 11618                           
 11619     0003  0008               	return
 11620     0004                     __end_of_EUSART_DefaultFramingErrorCallback:
 11621                           
 11622                           	psect	text53
 11623     0D13                     __ptext53:	
 11624 ;; *************** function _EUSART_IsRxReady *****************
 11625 ;; Defined at:
 11626 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;		None
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;		None
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      _Bool 
 11633 ;; Registers used:
 11634 ;;		wreg, status,2, status,0
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11640 ;;      Params:         0       0       0       0       0       0       0       0
 11641 ;;      Locals:         0       0       0       0       0       0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0       0
 11643 ;;      Totals:         0       0       0       0       0       0       0       0
 11644 ;;Total ram usage:        0 bytes
 11645 ;; Hardware stack levels used: 1
 11646 ;; Hardware stack levels required when called: 7
 11647 ;; This function calls:
 11648 ;;		Nothing
 11649 ;; This function is called by:
 11650 ;;		_main
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654     0D13                     _EUSART_IsRxReady:	
 11655                           ;psect for function _EUSART_IsRxReady
 11656                           
 11657     0D13                     l3172:	
 11658                           ;incstack = 0
 11659                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11660                           
 11661                           
 11662                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 11663     0D13  0020               	movlb	0	; select bank0
 11664     0D14  0E10               	swapf	16,w	;volatile
 11665     0D15  0C89               	rrf	9,f
 11666     0D16  3901               	andlw	1
 11667     0D17                     l592:
 11668     0D17  0008               	return
 11669     0D18                     __end_of_EUSART_IsRxReady:
 11670                           
 11671                           	psect	intentry
 11672     0004                     __pintentry:	
 11673 ;; *************** function _INTERRUPT_InterruptManager *****************
 11674 ;; Defined at:
 11675 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;		None
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;		None
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  1    wreg      void 
 11682 ;; Registers used:
 11683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11689 ;;      Params:         0       0       0       0       0       0       0       0
 11690 ;;      Locals:         0       0       0       0       0       0       0       0
 11691 ;;      Temps:          0       0       0       0       0       0       0       0
 11692 ;;      Totals:         0       0       0       0       0       0       0       0
 11693 ;;Total ram usage:        0 bytes
 11694 ;; Hardware stack levels used: 1
 11695 ;; Hardware stack levels required when called: 6
 11696 ;; This function calls:
 11697 ;;		_ADC_ISR
 11698 ;;		_I2C1_ERROR_ISR
 11699 ;;		_I2C1_ISR
 11700 ;; This function is called by:
 11701 ;;		Interrupt level 1
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705     0004                     _INTERRUPT_InterruptManager:
 11706                           
 11707                           ;incstack = 0
 11708     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11709                           
 11710                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11711     0005  3180               	pagesel	$
 11712     0006                     i1l3362:
 11713                           
 11714                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11715     0006  1F0B               	btfss	11,6	;volatile
 11716     0007  2809               	goto	u142_21
 11717     0008  280A               	goto	u142_20
 11718     0009                     u142_21:
 11719     0009  2834               	goto	i1l455
 11720     000A                     u142_20:
 11721     000A                     i1l3364:
 11722                           
 11723                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11724     000A  0021               	movlb	1	; select bank1
 11725     000B  1F10               	btfss	16,6	;volatile
 11726     000C  280E               	goto	u143_21
 11727     000D  280F               	goto	u143_20
 11728     000E                     u143_21:
 11729     000E  2818               	goto	i1l448
 11730     000F                     u143_20:
 11731     000F                     i1l3366:
 11732     000F  0020               	movlb	0	; select bank0
 11733     0010  1F10               	btfss	16,6	;volatile
 11734     0011  2813               	goto	u144_21
 11735     0012  2814               	goto	u144_20
 11736     0013                     u144_21:
 11737     0013  2818               	goto	i1l448
 11738     0014                     u144_20:
 11739     0014                     i1l3368:
 11740                           
 11741                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 11742     0014  318D  25E1  3180   	fcall	_ADC_ISR
 11743                           
 11744                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 11745     0017  2834               	goto	i1l455
 11746     0018                     i1l448:	
 11747                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 11748                           
 11749     0018  0021               	movlb	1	; select bank1
 11750     0019  1D91               	btfss	17,3	;volatile
 11751     001A  281C               	goto	u145_21
 11752     001B  281D               	goto	u145_20
 11753     001C                     u145_21:
 11754     001C  2826               	goto	i1l450
 11755     001D                     u145_20:
 11756     001D                     i1l3370:
 11757     001D  0020               	movlb	0	; select bank0
 11758     001E  1D91               	btfss	17,3	;volatile
 11759     001F  2821               	goto	u146_21
 11760     0020  2822               	goto	u146_20
 11761     0021                     u146_21:
 11762     0021  2826               	goto	i1l450
 11763     0022                     u146_20:
 11764     0022                     i1l3372:
 11765                           
 11766                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 11767     0022  318C  24F5  3180   	fcall	_I2C1_ERROR_ISR
 11768                           
 11769                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 11770     0025  2834               	goto	i1l455
 11771     0026                     i1l450:	
 11772                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 11773                           
 11774     0026  0021               	movlb	1	; select bank1
 11775     0027  1D90               	btfss	16,3	;volatile
 11776     0028  282A               	goto	u147_21
 11777     0029  282B               	goto	u147_20
 11778     002A                     u147_21:
 11779     002A  2834               	goto	i1l449
 11780     002B                     u147_20:
 11781     002B                     i1l3374:
 11782     002B  0020               	movlb	0	; select bank0
 11783     002C  1D90               	btfss	16,3	;volatile
 11784     002D  282F               	goto	u148_21
 11785     002E  2830               	goto	u148_20
 11786     002F                     u148_21:
 11787     002F  2834               	goto	i1l449
 11788     0030                     u148_20:
 11789     0030                     i1l3376:
 11790                           
 11791                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 11792     0030  318C  24F9  3180   	fcall	_I2C1_ISR
 11793                           
 11794                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 11795     0033  2834               	goto	i1l455
 11796     0034                     i1l449:
 11797     0034                     i1l455:	
 11798                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 11799                           
 11800     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11801     0035  0009               	retfie
 11802     0036                     __end_of_INTERRUPT_InterruptManager:
 11803                           
 11804                           	psect	text55
 11805     0CF9                     __ptext55:	
 11806 ;; *************** function _I2C1_ISR *****************
 11807 ;; Defined at:
 11808 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;		None
 11811 ;; Auto vars:     Size  Location     Type
 11812 ;;		None
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  1    wreg      void 
 11815 ;; Registers used:
 11816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11822 ;;      Params:         0       0       0       0       0       0       0       0
 11823 ;;      Locals:         0       0       0       0       0       0       0       0
 11824 ;;      Temps:          0       0       0       0       0       0       0       0
 11825 ;;      Totals:         0       0       0       0       0       0       0       0
 11826 ;;Total ram usage:        0 bytes
 11827 ;; Hardware stack levels used: 1
 11828 ;; Hardware stack levels required when called: 5
 11829 ;; This function calls:
 11830 ;;		_I2C1_EventHandler
 11831 ;; This function is called by:
 11832 ;;		_INTERRUPT_InterruptManager
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836     0CF9                     _I2C1_ISR:	
 11837                           ;psect for function _I2C1_ISR
 11838                           
 11839     0CF9                     i1l3166:	
 11840                           ;incstack = 0
 11841                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11842                           
 11843                           
 11844                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 11845     0CF9  3184  24FD  318C   	fcall	_I2C1_EventHandler
 11846     0CFC                     i1l207:
 11847     0CFC  0008               	return
 11848     0CFD                     __end_of_I2C1_ISR:
 11849                           
 11850                           	psect	text56
 11851     04FD                     __ptext56:	
 11852 ;; *************** function _I2C1_EventHandler *****************
 11853 ;; Defined at:
 11854 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;		None
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;		None
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  1    wreg      void 
 11861 ;; Registers used:
 11862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/0
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11868 ;;      Params:         0       0       0       0       0       0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0
 11870 ;;      Temps:          2       0       0       0       0       0       0       0
 11871 ;;      Totals:         2       0       0       0       0       0       0       0
 11872 ;;Total ram usage:        2 bytes
 11873 ;; Hardware stack levels used: 1
 11874 ;; Hardware stack levels required when called: 4
 11875 ;; This function calls:
 11876 ;;		_I2C1_EVENT_ERROR
 11877 ;;		_I2C1_EVENT_IDLE
 11878 ;;		_I2C1_EVENT_NACK
 11879 ;;		_I2C1_EVENT_RESET
 11880 ;;		_I2C1_EVENT_RX
 11881 ;;		_I2C1_EVENT_SEND_RD_ADDR
 11882 ;;		_I2C1_EVENT_SEND_WR_ADDR
 11883 ;;		_I2C1_EVENT_STOP
 11884 ;;		_I2C1_EVENT_TX
 11885 ;;		_I2C1_InterruptClear
 11886 ;;		_I2C1_IsAddr
 11887 ;;		_I2C1_IsData
 11888 ;;		_I2C1_IsNack
 11889 ;; This function is called by:
 11890 ;;		_I2C1_ISR
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894     04FD                     _I2C1_EventHandler:	
 11895                           ;psect for function _I2C1_EventHandler
 11896                           
 11897     04FD                     i1l2924:	
 11898                           ;incstack = 0
 11899                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11900                           
 11901                           
 11902                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 11903     04FD  318C  24C5  3184   	fcall	_I2C1_InterruptClear
 11904     0500                     i1l2926:
 11905                           
 11906                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 11907     0500  318D  2555  3184   	fcall	_I2C1_IsAddr
 11908     0503  3A00               	xorlw	0
 11909     0504  1903               	skipnz
 11910     0505  2D07               	goto	u112_21
 11911     0506  2D08               	goto	u112_20
 11912     0507                     u112_21:
 11913     0507  2D16               	goto	i1l2932
 11914     0508                     u112_20:
 11915     0508                     i1l2928:
 11916     0508  318D  2529  3184   	fcall	_I2C1_IsNack
 11917     050B  3A00               	xorlw	0
 11918     050C  1903               	skipnz
 11919     050D  2D0F               	goto	u113_21
 11920     050E  2D10               	goto	u113_20
 11921     050F                     u113_21:
 11922     050F  2D16               	goto	i1l2932
 11923     0510                     u113_20:
 11924     0510                     i1l2930:
 11925                           
 11926                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 11927     0510  3005               	movlw	5
 11928     0511  0020               	movlb	0	; select bank0
 11929     0512  00DD               	movwf	_i2c1Status+11	;volatile
 11930                           
 11931                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 11932     0513  3001               	movlw	1
 11933     0514  00DC               	movwf	_i2c1Status+10	;volatile
 11934                           
 11935                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 11936     0515  2D2B               	goto	i1l2938
 11937     0516                     i1l2932:
 11938     0516  318D  250E  3184   	fcall	_I2C1_IsData
 11939     0519  3A00               	xorlw	0
 11940     051A  1903               	skipnz
 11941     051B  2D1D               	goto	u114_21
 11942     051C  2D1E               	goto	u114_20
 11943     051D                     u114_21:
 11944     051D  2D2B               	goto	i1l2938
 11945     051E                     u114_20:
 11946     051E                     i1l2934:
 11947     051E  318D  2529  3184   	fcall	_I2C1_IsNack
 11948     0521  3A00               	xorlw	0
 11949     0522  1903               	skipnz
 11950     0523  2D25               	goto	u115_21
 11951     0524  2D26               	goto	u115_20
 11952     0525                     u115_21:
 11953     0525  2D2B               	goto	i1l2938
 11954     0526                     u115_20:
 11955     0526                     i1l2936:
 11956                           
 11957                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 11958     0526  3005               	movlw	5
 11959     0527  0020               	movlb	0	; select bank0
 11960     0528  00DD               	movwf	_i2c1Status+11	;volatile
 11961                           
 11962                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 11963     0529  3002               	movlw	2
 11964     052A  00DC               	movwf	_i2c1Status+10	;volatile
 11965     052B                     i1l2938:
 11966                           
 11967                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 11968     052B  0020               	movlb	0	; select bank0
 11969     052C  085D               	movf	_i2c1Status+11,w	;volatile
 11970     052D  00F2               	movwf	??_I2C1_EventHandler
 11971     052E  01F3               	clrf	??_I2C1_EventHandler+1
 11972     052F  35F2               	lslf	??_I2C1_EventHandler,f
 11973     0530  0DF3               	rlf	??_I2C1_EventHandler+1,f
 11974     0531  3001               	movlw	low _i2c1_eventTable
 11975     0532  0772               	addwf	??_I2C1_EventHandler,w
 11976     0533  0084               	movwf	4
 11977     0534  3008               	movlw	high _i2c1_eventTable
 11978     0535  3D73               	addwfc	??_I2C1_EventHandler+1,w
 11979     0536  3880               	iorlw	128
 11980     0537  0085               	movwf	5
 11981     0538  3F01               	moviw [1]fsr0
 11982     0539  008A               	movwf	10
 11983     053A  3F00               	moviw [0]fsr0
 11984     053B  000A               	callw
 11985     053C  3184               	pagesel	$
 11986     053D  0020               	movlb	0	; select bank0
 11987     053E  00DD               	movwf	_i2c1Status+11	;volatile
 11988     053F                     i1l225:
 11989     053F  0008               	return
 11990     0540                     __end_of_I2C1_EventHandler:
 11991                           
 11992                           	psect	text57
 11993     0D29                     __ptext57:	
 11994 ;; *************** function _I2C1_IsNack *****************
 11995 ;; Defined at:
 11996 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      _Bool 
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12010 ;;      Params:         0       0       0       0       0       0       0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0
 12013 ;;      Totals:         0       0       0       0       0       0       0       0
 12014 ;;Total ram usage:        0 bytes
 12015 ;; Hardware stack levels used: 1
 12016 ;; This function calls:
 12017 ;;		Nothing
 12018 ;; This function is called by:
 12019 ;;		_I2C1_EventHandler
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023     0D29                     _I2C1_IsNack:	
 12024                           ;psect for function _I2C1_IsNack
 12025                           
 12026     0D29                     i1l2698:	
 12027                           ;incstack = 0
 12028                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 12029                           
 12030                           
 12031                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 12032     0D29  0024               	movlb	4	; select bank4
 12033     0D2A  0E16               	swapf	22,w	;volatile
 12034     0D2B  0C89               	rrf	9,f
 12035     0D2C  0C89               	rrf	9,f
 12036     0D2D  3901               	andlw	1
 12037     0D2E                     i1l300:
 12038     0D2E  0008               	return
 12039     0D2F                     __end_of_I2C1_IsNack:
 12040                           
 12041                           	psect	text58
 12042     0D0E                     __ptext58:	
 12043 ;; *************** function _I2C1_IsData *****************
 12044 ;; Defined at:
 12045 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12046 ;; Parameters:    Size  Location     Type
 12047 ;;		None
 12048 ;; Auto vars:     Size  Location     Type
 12049 ;;		None
 12050 ;; Return value:  Size  Location     Type
 12051 ;;                  1    wreg      _Bool 
 12052 ;; Registers used:
 12053 ;;		wreg, status,2, status,0
 12054 ;; Tracked objects:
 12055 ;;		On entry : 0/0
 12056 ;;		On exit  : 0/0
 12057 ;;		Unchanged: 0/0
 12058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12059 ;;      Params:         0       0       0       0       0       0       0       0
 12060 ;;      Locals:         0       0       0       0       0       0       0       0
 12061 ;;      Temps:          0       0       0       0       0       0       0       0
 12062 ;;      Totals:         0       0       0       0       0       0       0       0
 12063 ;;Total ram usage:        0 bytes
 12064 ;; Hardware stack levels used: 1
 12065 ;; This function calls:
 12066 ;;		Nothing
 12067 ;; This function is called by:
 12068 ;;		_I2C1_EventHandler
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072     0D0E                     _I2C1_IsData:	
 12073                           ;psect for function _I2C1_IsData
 12074                           
 12075     0D0E                     i1l2702:	
 12076                           ;incstack = 0
 12077                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 12078                           
 12079                           
 12080                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 12081     0D0E  0024               	movlb	4	; select bank4
 12082     0D0F  0E14               	swapf	20,w	;volatile
 12083     0D10  0C89               	rrf	9,f
 12084     0D11  3901               	andlw	1
 12085     0D12                     i1l303:
 12086     0D12  0008               	return
 12087     0D13                     __end_of_I2C1_IsData:
 12088                           
 12089                           	psect	text59
 12090     0D55                     __ptext59:	
 12091 ;; *************** function _I2C1_IsAddr *****************
 12092 ;; Defined at:
 12093 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;		None
 12096 ;; Auto vars:     Size  Location     Type
 12097 ;;		None
 12098 ;; Return value:  Size  Location     Type
 12099 ;;                  1    wreg      _Bool 
 12100 ;; Registers used:
 12101 ;;		wreg, status,0
 12102 ;; Tracked objects:
 12103 ;;		On entry : 0/0
 12104 ;;		On exit  : 0/0
 12105 ;;		Unchanged: 0/0
 12106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12107 ;;      Params:         0       0       0       0       0       0       0       0
 12108 ;;      Locals:         0       0       0       0       0       0       0       0
 12109 ;;      Temps:          0       0       0       0       0       0       0       0
 12110 ;;      Totals:         0       0       0       0       0       0       0       0
 12111 ;;Total ram usage:        0 bytes
 12112 ;; Hardware stack levels used: 1
 12113 ;; This function calls:
 12114 ;;		Nothing
 12115 ;; This function is called by:
 12116 ;;		_I2C1_EventHandler
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120     0D55                     _I2C1_IsAddr:	
 12121                           ;psect for function _I2C1_IsAddr
 12122                           
 12123     0D55                     i1l2694:	
 12124                           ;incstack = 0
 12125                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12126                           
 12127                           
 12128                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12129     0D55  1003               	clrc
 12130     0D56  0024               	movlb	4	; select bank4
 12131     0D57  1E94               	btfss	20,5	;volatile
 12132     0D58  1403               	setc
 12133     0D59  3000               	movlw	0
 12134     0D5A  3D09               	addwfc	9,w
 12135     0D5B                     i1l306:
 12136     0D5B  0008               	return
 12137     0D5C                     __end_of_I2C1_IsAddr:
 12138                           
 12139                           	psect	text60
 12140     0CF5                     __ptext60:	
 12141 ;; *************** function _I2C1_ERROR_ISR *****************
 12142 ;; Defined at:
 12143 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;		None
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12157 ;;      Params:         0       0       0       0       0       0       0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0
 12160 ;;      Totals:         0       0       0       0       0       0       0       0
 12161 ;;Total ram usage:        0 bytes
 12162 ;; Hardware stack levels used: 1
 12163 ;; Hardware stack levels required when called: 5
 12164 ;; This function calls:
 12165 ;;		_I2C1_ErrorEventHandler
 12166 ;; This function is called by:
 12167 ;;		_INTERRUPT_InterruptManager
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171     0CF5                     _I2C1_ERROR_ISR:	
 12172                           ;psect for function _I2C1_ERROR_ISR
 12173                           
 12174     0CF5                     i1l3168:	
 12175                           ;incstack = 0
 12176                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12177                           
 12178                           
 12179                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12180     0CF5  318E  26C2  318C   	fcall	_I2C1_ErrorEventHandler
 12181     0CF8                     i1l210:
 12182     0CF8  0008               	return
 12183     0CF9                     __end_of_I2C1_ERROR_ISR:
 12184                           
 12185                           	psect	text61
 12186     0EC2                     __ptext61:	
 12187 ;; *************** function _I2C1_ErrorEventHandler *****************
 12188 ;; Defined at:
 12189 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;		None
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;		None
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1    wreg      void 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12203 ;;      Params:         0       0       0       0       0       0       0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0       0
 12205 ;;      Temps:          2       0       0       0       0       0       0       0
 12206 ;;      Totals:         2       0       0       0       0       0       0       0
 12207 ;;Total ram usage:        2 bytes
 12208 ;; Hardware stack levels used: 1
 12209 ;; Hardware stack levels required when called: 4
 12210 ;; This function calls:
 12211 ;;		NULL
 12212 ;;		_I2C1_DefaultCallback
 12213 ;;		_I2C1_EVENT_ERROR
 12214 ;;		_I2C1_EVENT_IDLE
 12215 ;;		_I2C1_EVENT_NACK
 12216 ;;		_I2C1_EVENT_RESET
 12217 ;;		_I2C1_EVENT_RX
 12218 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12219 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12220 ;;		_I2C1_EVENT_STOP
 12221 ;;		_I2C1_EVENT_TX
 12222 ;;		_I2C1_ErrorInterruptClear
 12223 ;; This function is called by:
 12224 ;;		_I2C1_ERROR_ISR
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228     0EC2                     _I2C1_ErrorEventHandler:	
 12229                           ;psect for function _I2C1_ErrorEventHandler
 12230                           
 12231     0EC2                     i1l2940:	
 12232                           ;incstack = 0
 12233                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12234                           
 12235                           
 12236                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12237     0EC2  3006               	movlw	6
 12238     0EC3  0020               	movlb	0	; select bank0
 12239     0EC4  00DD               	movwf	_i2c1Status+11	;volatile
 12240                           
 12241                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12242     0EC5  3003               	movlw	3
 12243     0EC6  00DC               	movwf	_i2c1Status+10	;volatile
 12244     0EC7                     i1l2942:
 12245                           
 12246                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12247     0EC7  318C  24C2  318E   	fcall	_I2C1_ErrorInterruptClear
 12248     0ECA                     i1l2944:
 12249                           
 12250                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12251     0ECA  0020               	movlb	0	; select bank0
 12252     0ECB  085D               	movf	_i2c1Status+11,w	;volatile
 12253     0ECC  00F2               	movwf	??_I2C1_ErrorEventHandler
 12254     0ECD  01F3               	clrf	??_I2C1_ErrorEventHandler+1
 12255     0ECE  35F2               	lslf	??_I2C1_ErrorEventHandler,f
 12256     0ECF  0DF3               	rlf	??_I2C1_ErrorEventHandler+1,f
 12257     0ED0  3001               	movlw	low _i2c1_eventTable
 12258     0ED1  0772               	addwf	??_I2C1_ErrorEventHandler,w
 12259     0ED2  0084               	movwf	4
 12260     0ED3  3008               	movlw	high _i2c1_eventTable
 12261     0ED4  3D73               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12262     0ED5  3880               	iorlw	128
 12263     0ED6  0085               	movwf	5
 12264     0ED7  3F01               	moviw [1]fsr0
 12265     0ED8  008A               	movwf	10
 12266     0ED9  3F00               	moviw [0]fsr0
 12267     0EDA  000A               	callw
 12268     0EDB  318E               	pagesel	$
 12269     0EDC  0020               	movlb	0	; select bank0
 12270     0EDD  00DD               	movwf	_i2c1Status+11	;volatile
 12271     0EDE                     i1l2946:
 12272                           
 12273                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12274     0EDE  0863               	movf	_I2C1_Callback+1,w
 12275     0EDF  008A               	movwf	10
 12276     0EE0  0862               	movf	_I2C1_Callback,w
 12277     0EE1  000A               	callw
 12278     0EE2  318E               	pagesel	$
 12279     0EE3                     i1l228:
 12280     0EE3  0008               	return
 12281     0EE4                     __end_of_I2C1_ErrorEventHandler:
 12282                           
 12283                           	psect	text62
 12284     0D4E                     __ptext62:	
 12285 ;; *************** function _I2C1_EVENT_RESET *****************
 12286 ;; Defined at:
 12287 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;		None
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;		None
 12292 ;; Return value:  Size  Location     Type
 12293 ;;                  1    wreg      enum E9559
 12294 ;; Registers used:
 12295 ;;		wreg, status,2, status,0, pclath, cstack
 12296 ;; Tracked objects:
 12297 ;;		On entry : 0/0
 12298 ;;		On exit  : 0/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12301 ;;      Params:         0       0       0       0       0       0       0       0
 12302 ;;      Locals:         0       0       0       0       0       0       0       0
 12303 ;;      Temps:          0       0       0       0       0       0       0       0
 12304 ;;      Totals:         0       0       0       0       0       0       0       0
 12305 ;;Total ram usage:        0 bytes
 12306 ;; Hardware stack levels used: 1
 12307 ;; Hardware stack levels required when called: 1
 12308 ;; This function calls:
 12309 ;;		_I2C1_BusReset
 12310 ;; This function is called by:
 12311 ;;		_I2C1_EVENT_ERROR
 12312 ;;		_I2C1_EventHandler
 12313 ;;		_I2C1_ErrorEventHandler
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317     0D4E                     _I2C1_EVENT_RESET:	
 12318                           ;psect for function _I2C1_EVENT_RESET
 12319                           
 12320     0D4E                     i1l2568:	
 12321                           ;incstack = 0
 12322                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12323                           
 12324                           
 12325                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12326     0D4E  318C  24DD  318D   	fcall	_I2C1_BusReset
 12327     0D51                     i1l2570:
 12328                           
 12329                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12330     0D51  0020               	movlb	0	; select bank0
 12331     0D52  01D2               	clrf	_i2c1Status	;volatile
 12332     0D53                     i1l2572:
 12333                           
 12334                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12335     0D53  3000               	movlw	0
 12336     0D54                     i1l267:
 12337     0D54  0008               	return
 12338     0D55                     __end_of_I2C1_EVENT_RESET:
 12339                           
 12340                           	psect	text63
 12341     0D80                     __ptext63:	
 12342 ;; *************** function _I2C1_EVENT_STOP *****************
 12343 ;; Defined at:
 12344 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;		None
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;		None
 12349 ;; Return value:  Size  Location     Type
 12350 ;;                  1    wreg      enum E9559
 12351 ;; Registers used:
 12352 ;;		wreg, status,2, status,0, pclath, cstack
 12353 ;; Tracked objects:
 12354 ;;		On entry : 0/0
 12355 ;;		On exit  : 0/0
 12356 ;;		Unchanged: 0/0
 12357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12358 ;;      Params:         0       0       0       0       0       0       0       0
 12359 ;;      Locals:         0       0       0       0       0       0       0       0
 12360 ;;      Temps:          0       0       0       0       0       0       0       0
 12361 ;;      Totals:         0       0       0       0       0       0       0       0
 12362 ;;Total ram usage:        0 bytes
 12363 ;; Hardware stack levels used: 1
 12364 ;; Hardware stack levels required when called: 2
 12365 ;; This function calls:
 12366 ;;		_I2C1_Close
 12367 ;;		_I2C1_StopSend
 12368 ;; This function is called by:
 12369 ;;		_I2C1_EVENT_TX
 12370 ;;		_I2C1_EVENT_NACK
 12371 ;;		_I2C1_EventHandler
 12372 ;;		_I2C1_ErrorEventHandler
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376     0D80                     _I2C1_EVENT_STOP:	
 12377                           ;psect for function _I2C1_EVENT_STOP
 12378                           
 12379     0D80                     i1l2546:	
 12380                           ;incstack = 0
 12381                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12382                           
 12383                           
 12384                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12385     0D80  318C  24C8  318D   	fcall	_I2C1_StopSend
 12386                           
 12387                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12388     0D83  318E  261F  318D   	fcall	_I2C1_Close
 12389     0D86                     i1l2548:
 12390                           
 12391                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12392     0D86  3000               	movlw	0
 12393     0D87                     i1l264:
 12394     0D87  0008               	return
 12395     0D88                     __end_of_I2C1_EVENT_STOP:
 12396                           
 12397                           	psect	text64
 12398     0D23                     __ptext64:	
 12399 ;; *************** function _I2C1_EVENT_ERROR *****************
 12400 ;; Defined at:
 12401 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;		None
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  retEventStat    1    0[COMMON] enum E9559
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      enum E9559
 12408 ;; Registers used:
 12409 ;;		wreg, status,2, status,0, pclath, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12415 ;;      Params:         0       0       0       0       0       0       0       0
 12416 ;;      Locals:         1       0       0       0       0       0       0       0
 12417 ;;      Temps:          0       0       0       0       0       0       0       0
 12418 ;;      Totals:         1       0       0       0       0       0       0       0
 12419 ;;Total ram usage:        1 bytes
 12420 ;; Hardware stack levels used: 1
 12421 ;; Hardware stack levels required when called: 2
 12422 ;; This function calls:
 12423 ;;		_I2C1_EVENT_RESET
 12424 ;; This function is called by:
 12425 ;;		_I2C1_EventHandler
 12426 ;;		_I2C1_ErrorEventHandler
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430     0D23                     _I2C1_EVENT_ERROR:	
 12431                           ;psect for function _I2C1_EVENT_ERROR
 12432                           
 12433     0D23                     i1l2782:	
 12434                           ;incstack = 0
 12435                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12436                           
 12437     0D23                     i1l2784:
 12438                           
 12439                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12440     0D23  318D  254E  318D   	fcall	_I2C1_EVENT_RESET
 12441     0D26  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12442     0D27                     i1l2786:
 12443                           
 12444                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12445     0D27  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12446     0D28                     i1l261:
 12447     0D28  0008               	return
 12448     0D29                     __end_of_I2C1_EVENT_ERROR:
 12449                           
 12450                           	psect	text65
 12451     0D1D                     __ptext65:	
 12452 ;; *************** function _I2C1_EVENT_NACK *****************
 12453 ;; Defined at:
 12454 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;		None
 12457 ;; Auto vars:     Size  Location     Type
 12458 ;;  retEventStat    1    0[COMMON] enum E9559
 12459 ;; Return value:  Size  Location     Type
 12460 ;;                  1    wreg      enum E9559
 12461 ;; Registers used:
 12462 ;;		wreg, status,2, status,0, pclath, cstack
 12463 ;; Tracked objects:
 12464 ;;		On entry : 0/0
 12465 ;;		On exit  : 0/0
 12466 ;;		Unchanged: 0/0
 12467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12468 ;;      Params:         0       0       0       0       0       0       0       0
 12469 ;;      Locals:         1       0       0       0       0       0       0       0
 12470 ;;      Temps:          0       0       0       0       0       0       0       0
 12471 ;;      Totals:         1       0       0       0       0       0       0       0
 12472 ;;Total ram usage:        1 bytes
 12473 ;; Hardware stack levels used: 1
 12474 ;; Hardware stack levels required when called: 3
 12475 ;; This function calls:
 12476 ;;		_I2C1_EVENT_STOP
 12477 ;; This function is called by:
 12478 ;;		_I2C1_EventHandler
 12479 ;;		_I2C1_ErrorEventHandler
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483     0D1D                     _I2C1_EVENT_NACK:	
 12484                           ;psect for function _I2C1_EVENT_NACK
 12485                           
 12486     0D1D                     i1l2774:	
 12487                           ;incstack = 0
 12488                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12489                           
 12490     0D1D                     i1l2776:
 12491                           
 12492                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12493     0D1D  318D  2580  318D   	fcall	_I2C1_EVENT_STOP
 12494     0D20  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12495     0D21                     i1l2778:
 12496                           
 12497                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12498     0D21  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12499     0D22                     i1l258:
 12500     0D22  0008               	return
 12501     0D23                     __end_of_I2C1_EVENT_NACK:
 12502                           
 12503                           	psect	text66
 12504     06EF                     __ptext66:	
 12505 ;; *************** function _I2C1_EVENT_RX *****************
 12506 ;; Defined at:
 12507 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;		None
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;  retEventStat    1    1[COMMON] enum E9559
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      enum E9559
 12514 ;; Registers used:
 12515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12521 ;;      Params:         0       0       0       0       0       0       0       0
 12522 ;;      Locals:         1       0       0       0       0       0       0       0
 12523 ;;      Temps:          1       0       0       0       0       0       0       0
 12524 ;;      Totals:         2       0       0       0       0       0       0       0
 12525 ;;Total ram usage:        2 bytes
 12526 ;; Hardware stack levels used: 1
 12527 ;; Hardware stack levels required when called: 1
 12528 ;; This function calls:
 12529 ;;		_I2C1_AckSend
 12530 ;;		_I2C1_DataReceive
 12531 ;;		_I2C1_IsRxBufFull
 12532 ;;		_I2C1_NackSend
 12533 ;;		_I2C1_ReceiveEnable
 12534 ;;		_I2C1_RestartDisable
 12535 ;; This function is called by:
 12536 ;;		_I2C1_EventHandler
 12537 ;;		_I2C1_ErrorEventHandler
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541     06EF                     _I2C1_EVENT_RX:	
 12542                           ;psect for function _I2C1_EVENT_RX
 12543                           
 12544     06EF                     i1l2748:	
 12545                           ;incstack = 0
 12546                           ; Regs used in _I2C1_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12547                           
 12548                           
 12549                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12550     06EF  3004               	movlw	4
 12551     06F0  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12552     06F1                     i1l2750:
 12553                           
 12554                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12555     06F1  318C  24E9  3186   	fcall	_I2C1_IsRxBufFull
 12556     06F4  3A00               	xorlw	0
 12557     06F5  1903               	skipnz
 12558     06F6  2EF8               	goto	u96_21
 12559     06F7  2EF9               	goto	u96_20
 12560     06F8                     u96_21:
 12561     06F8  2F23               	goto	i1l2768
 12562     06F9                     u96_20:
 12563     06F9                     i1l2752:
 12564                           
 12565                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12566     06F9  0020               	movlb	0	; select bank0
 12567     06FA  0859               	movf	_i2c1Status+7,w	;volatile
 12568     06FB  045A               	iorwf	_i2c1Status+8,w	;volatile
 12569     06FC  1903               	btfsc	3,2
 12570     06FD  2EFF               	goto	u97_21
 12571     06FE  2F00               	goto	u97_20
 12572     06FF                     u97_21:
 12573     06FF  2F10               	goto	i1l2760
 12574     0700                     u97_20:
 12575     0700                     i1l2754:
 12576                           
 12577                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12578     0700  0858               	movf	low ((_i2c1Status| 0+6)),w	;volatile
 12579     0701  0086               	movwf	6
 12580     0702  0187               	clrf	7
 12581     0703  318C  24CB  3186   	fcall	_I2C1_DataReceive
 12582     0706  0081               	movwf	1
 12583     0707                     i1l2756:
 12584     0707  3001               	movlw	1
 12585     0708  00F0               	movwf	??_I2C1_EVENT_RX
 12586     0709  0870               	movf	??_I2C1_EVENT_RX,w
 12587     070A  0020               	movlb	0	; select bank0
 12588     070B  07D8               	addwf	low ((_i2c1Status| 0+6)),f	;volatile
 12589     070C                     i1l2758:
 12590                           
 12591                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12592     070C  3001               	movlw	1
 12593     070D  02D9               	subwf	_i2c1Status+7,f	;volatile
 12594     070E  3000               	movlw	0
 12595     070F  3BDA               	subwfb	_i2c1Status+8,f	;volatile
 12596     0710                     i1l2760:
 12597                           
 12598                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12599     0710  0859               	movf	_i2c1Status+7,w	;volatile
 12600     0711  045A               	iorwf	_i2c1Status+8,w	;volatile
 12601     0712  1903               	btfsc	3,2
 12602     0713  2F15               	goto	u98_21
 12603     0714  2F16               	goto	u98_20
 12604     0715                     u98_21:
 12605     0715  2F1A               	goto	i1l2764
 12606     0716                     u98_20:
 12607     0716                     i1l2762:
 12608                           
 12609                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12610     0716  318C  24E5  3186   	fcall	_I2C1_AckSend
 12611                           
 12612                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12613     0719  2F26               	goto	i1l2770
 12614     071A                     i1l2764:
 12615                           
 12616                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12617     071A  318C  24D1  3186   	fcall	_I2C1_RestartDisable
 12618                           
 12619                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12620     071D  318C  24ED  3186   	fcall	_I2C1_NackSend
 12621     0720                     i1l2766:
 12622                           
 12623                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12624     0720  3007               	movlw	7
 12625     0721  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12626     0722  2F26               	goto	i1l2770
 12627     0723                     i1l2768:
 12628                           
 12629                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12630     0723  318C  24CE  3186   	fcall	_I2C1_ReceiveEnable
 12631     0726                     i1l2770:
 12632                           
 12633                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12634     0726  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12635     0727                     i1l255:
 12636     0727  0008               	return
 12637     0728                     __end_of_I2C1_EVENT_RX:
 12638                           
 12639                           	psect	text67
 12640     0D47                     __ptext67:	
 12641 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12642 ;; Defined at:
 12643 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;		None
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;		None
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  1    wreg      enum E9559
 12650 ;; Registers used:
 12651 ;;		wreg, status,2, status,0, pclath, cstack
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12657 ;;      Params:         0       0       0       0       0       0       0       0
 12658 ;;      Locals:         0       0       0       0       0       0       0       0
 12659 ;;      Temps:          0       0       0       0       0       0       0       0
 12660 ;;      Totals:         0       0       0       0       0       0       0       0
 12661 ;;Total ram usage:        0 bytes
 12662 ;; Hardware stack levels used: 1
 12663 ;; Hardware stack levels required when called: 1
 12664 ;; This function calls:
 12665 ;;		_I2C1_DataTransmit
 12666 ;; This function is called by:
 12667 ;;		_I2C1_EventHandler
 12668 ;;		_I2C1_ErrorEventHandler
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672     0D47                     _I2C1_EVENT_SEND_WR_ADDR:	
 12673                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12674                           
 12675     0D47                     i1l2718:	
 12676                           ;incstack = 0
 12677                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12678                           
 12679                           
 12680                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12681     0D47  0020               	movlb	0	; select bank0
 12682     0D48  3553               	lslf	_i2c1Status+1,w	;volatile
 12683     0D49  318D  2509  318D   	fcall	_I2C1_DataTransmit
 12684     0D4C                     i1l2720:
 12685                           
 12686                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12687     0D4C  3003               	movlw	3
 12688     0D4D                     i1l240:
 12689     0D4D  0008               	return
 12690     0D4E                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12691                           
 12692                           	psect	text68
 12693     0D78                     __ptext68:	
 12694 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12695 ;; Defined at:
 12696 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;		None
 12699 ;; Auto vars:     Size  Location     Type
 12700 ;;		None
 12701 ;; Return value:  Size  Location     Type
 12702 ;;                  1    wreg      enum E9559
 12703 ;; Registers used:
 12704 ;;		wreg, status,2, status,0, pclath, cstack
 12705 ;; Tracked objects:
 12706 ;;		On entry : 0/0
 12707 ;;		On exit  : 0/0
 12708 ;;		Unchanged: 0/0
 12709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12710 ;;      Params:         0       0       0       0       0       0       0       0
 12711 ;;      Locals:         0       0       0       0       0       0       0       0
 12712 ;;      Temps:          0       0       0       0       0       0       0       0
 12713 ;;      Totals:         0       0       0       0       0       0       0       0
 12714 ;;Total ram usage:        0 bytes
 12715 ;; Hardware stack levels used: 1
 12716 ;; Hardware stack levels required when called: 1
 12717 ;; This function calls:
 12718 ;;		_I2C1_DataTransmit
 12719 ;; This function is called by:
 12720 ;;		_I2C1_EventHandler
 12721 ;;		_I2C1_ErrorEventHandler
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725     0D78                     _I2C1_EVENT_SEND_RD_ADDR:	
 12726                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12727                           
 12728     0D78                     i1l2712:	
 12729                           ;incstack = 0
 12730                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12731                           
 12732                           
 12733                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12734     0D78  1403               	setc
 12735     0D79  0020               	movlb	0	; select bank0
 12736     0D7A  0D53               	rlf	_i2c1Status+1,w	;volatile
 12737     0D7B  318D  2509  318D   	fcall	_I2C1_DataTransmit
 12738     0D7E                     i1l2714:
 12739                           
 12740                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 12741     0D7E  3004               	movlw	4
 12742     0D7F                     i1l237:
 12743     0D7F  0008               	return
 12744     0D80                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 12745                           
 12746                           	psect	text69
 12747     0CF1                     __ptext69:	
 12748 ;; *************** function _I2C1_EVENT_IDLE *****************
 12749 ;; Defined at:
 12750 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;		None
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;		None
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      enum E9559
 12757 ;; Registers used:
 12758 ;;		wreg, status,2
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12764 ;;      Params:         0       0       0       0       0       0       0       0
 12765 ;;      Locals:         0       0       0       0       0       0       0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0
 12767 ;;      Totals:         0       0       0       0       0       0       0       0
 12768 ;;Total ram usage:        0 bytes
 12769 ;; Hardware stack levels used: 1
 12770 ;; This function calls:
 12771 ;;		Nothing
 12772 ;; This function is called by:
 12773 ;;		_I2C1_EventHandler
 12774 ;;		_I2C1_ErrorEventHandler
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778     0CF1                     _I2C1_EVENT_IDLE:	
 12779                           ;psect for function _I2C1_EVENT_IDLE
 12780                           
 12781     0CF1                     i1l2706:	
 12782                           ;incstack = 0
 12783                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 12784                           
 12785                           
 12786                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 12787     0CF1  0020               	movlb	0	; select bank0
 12788     0CF2  01D2               	clrf	_i2c1Status	;volatile
 12789     0CF3                     i1l2708:
 12790                           
 12791                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 12792     0CF3  3008               	movlw	8
 12793     0CF4                     i1l234:
 12794     0CF4  0008               	return
 12795     0CF5                     __end_of_I2C1_EVENT_IDLE:
 12796                           
 12797                           	psect	text70
 12798     0FA6                     __ptext70:	
 12799 ;; *************** function _I2C1_EVENT_TX *****************
 12800 ;; Defined at:
 12801 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;		None
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;  retEventStat    1    1[COMMON] enum E9559
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      enum E9559
 12808 ;; Registers used:
 12809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12815 ;;      Params:         0       0       0       0       0       0       0       0
 12816 ;;      Locals:         1       0       0       0       0       0       0       0
 12817 ;;      Temps:          0       0       0       0       0       0       0       0
 12818 ;;      Totals:         1       0       0       0       0       0       0       0
 12819 ;;Total ram usage:        1 bytes
 12820 ;; Hardware stack levels used: 1
 12821 ;; Hardware stack levels required when called: 3
 12822 ;; This function calls:
 12823 ;;		_I2C1_DataTransmit
 12824 ;;		_I2C1_EVENT_STOP
 12825 ;;		_I2C1_RestartEnable
 12826 ;; This function is called by:
 12827 ;;		_I2C1_EventHandler
 12828 ;;		_I2C1_ErrorEventHandler
 12829 ;; This function uses a non-reentrant model
 12830 ;;
 12831                           
 12832     0FA6                     _I2C1_EVENT_TX:	
 12833                           ;psect for function _I2C1_EVENT_TX
 12834                           
 12835     0FA6                     i1l2724:	
 12836                           ;incstack = 0
 12837                           ; Regs used in _I2C1_EVENT_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12838                           
 12839     0FA6                     i1l2726:
 12840                           
 12841                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 12842     0FA6  0020               	movlb	0	; select bank0
 12843     0FA7  0856               	movf	_i2c1Status+4,w	;volatile
 12844     0FA8  0457               	iorwf	_i2c1Status+5,w	;volatile
 12845     0FA9  1903               	btfsc	3,2
 12846     0FAA  2FAC               	goto	u94_21
 12847     0FAB  2FAD               	goto	u94_20
 12848     0FAC                     u94_21:
 12849     0FAC  2FC0               	goto	i1l2734
 12850     0FAD                     u94_20:
 12851     0FAD                     i1l2728:
 12852                           
 12853                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 12854     0FAD  3001               	movlw	1
 12855     0FAE  02D6               	subwf	_i2c1Status+4,f	;volatile
 12856     0FAF  3000               	movlw	0
 12857     0FB0  3BD7               	subwfb	_i2c1Status+5,f	;volatile
 12858     0FB1                     i1l2730:
 12859                           
 12860                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 12861     0FB1  3003               	movlw	3
 12862     0FB2  3E52               	addlw	(low (_i2c1Status| 0))& (0+255)
 12863     0FB3  0086               	movwf	6
 12864     0FB4  0187               	clrf	7
 12865     0FB5  3F40               	moviw [0]fsr1
 12866     0FB6  0084               	movwf	4
 12867     0FB7  0185               	clrf	5
 12868     0FB8  0A81               	incf	1,f
 12869     0FB9  0800               	movf	0,w
 12870     0FBA  318D  2509  318F   	fcall	_I2C1_DataTransmit
 12871     0FBD                     i1l2732:
 12872                           
 12873                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 12874     0FBD  3003               	movlw	3
 12875     0FBE  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12876                           
 12877                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 12878     0FBF  2FD0               	goto	i1l2744
 12879     0FC0                     i1l2734:
 12880                           
 12881                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 12882     0FC0  085B               	movf	_i2c1Status+9,w	;volatile
 12883     0FC1  1903               	btfsc	3,2
 12884     0FC2  2FC4               	goto	u95_21
 12885     0FC3  2FC5               	goto	u95_20
 12886     0FC4                     u95_21:
 12887     0FC4  2FCC               	goto	i1l2742
 12888     0FC5                     u95_20:
 12889     0FC5                     i1l2736:
 12890                           
 12891                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 12892     0FC5  01DB               	clrf	_i2c1Status+9	;volatile
 12893     0FC6                     i1l2738:
 12894                           
 12895                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 12896     0FC6  318C  24D4  318F   	fcall	_I2C1_RestartEnable
 12897     0FC9                     i1l2740:
 12898                           
 12899                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 12900     0FC9  01F1               	clrf	I2C1_EVENT_TX@retEventState
 12901     0FCA  0AF1               	incf	I2C1_EVENT_TX@retEventState,f
 12902                           
 12903                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 12904     0FCB  2FD0               	goto	i1l2744
 12905     0FCC                     i1l2742:
 12906                           
 12907                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 12908     0FCC  318D  2580  318F   	fcall	_I2C1_EVENT_STOP
 12909     0FCF  00F1               	movwf	I2C1_EVENT_TX@retEventState
 12910     0FD0                     i1l2744:
 12911                           
 12912                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 12913     0FD0  0871               	movf	I2C1_EVENT_TX@retEventState,w
 12914     0FD1                     i1l247:
 12915     0FD1  0008               	return
 12916     0FD2                     __end_of_I2C1_EVENT_TX:
 12917                           
 12918                           	psect	text71
 12919     0CD4                     __ptext71:	
 12920 ;; *************** function _I2C1_RestartEnable *****************
 12921 ;; Defined at:
 12922 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12923 ;; Parameters:    Size  Location     Type
 12924 ;;		None
 12925 ;; Auto vars:     Size  Location     Type
 12926 ;;		None
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  1    wreg      void 
 12929 ;; Registers used:
 12930 ;;		None
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12936 ;;      Params:         0       0       0       0       0       0       0       0
 12937 ;;      Locals:         0       0       0       0       0       0       0       0
 12938 ;;      Temps:          0       0       0       0       0       0       0       0
 12939 ;;      Totals:         0       0       0       0       0       0       0       0
 12940 ;;Total ram usage:        0 bytes
 12941 ;; Hardware stack levels used: 1
 12942 ;; This function calls:
 12943 ;;		Nothing
 12944 ;; This function is called by:
 12945 ;;		_I2C1_EVENT_TX
 12946 ;; This function uses a non-reentrant model
 12947 ;;
 12948                           
 12949     0CD4                     _I2C1_RestartEnable:	
 12950                           ;psect for function _I2C1_RestartEnable
 12951                           
 12952     0CD4                     i1l2544:	
 12953                           ;incstack = 0
 12954                           ; Regs used in _I2C1_RestartEnable: []
 12955                           
 12956                           
 12957                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 12958     0CD4  0024               	movlb	4	; select bank4
 12959     0CD5  1496               	bsf	22,1	;volatile
 12960     0CD6                     i1l282:
 12961     0CD6  0008               	return
 12962     0CD7                     __end_of_I2C1_RestartEnable:
 12963                           
 12964                           	psect	text72
 12965     0D09                     __ptext72:	
 12966 ;; *************** function _I2C1_DataTransmit *****************
 12967 ;; Defined at:
 12968 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  data            1    wreg     unsigned char 
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;  data            1    0[COMMON] unsigned char 
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      void 
 12975 ;; Registers used:
 12976 ;;		wreg
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12982 ;;      Params:         0       0       0       0       0       0       0       0
 12983 ;;      Locals:         1       0       0       0       0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0
 12985 ;;      Totals:         1       0       0       0       0       0       0       0
 12986 ;;Total ram usage:        1 bytes
 12987 ;; Hardware stack levels used: 1
 12988 ;; This function calls:
 12989 ;;		Nothing
 12990 ;; This function is called by:
 12991 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12992 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12993 ;;		_I2C1_EVENT_TX
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997     0D09                     _I2C1_DataTransmit:	
 12998                           ;psect for function _I2C1_DataTransmit
 12999                           
 13000                           
 13001                           ;incstack = 0
 13002                           ; Regs used in _I2C1_DataTransmit: [wreg]
 13003                           ;I2C1_DataTransmit@data stored from wreg
 13004     0D09  00F0               	movwf	I2C1_DataTransmit@data
 13005     0D0A                     i1l2542:
 13006                           
 13007                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 13008     0D0A  0870               	movf	I2C1_DataTransmit@data,w
 13009     0D0B  0024               	movlb	4	; select bank4
 13010     0D0C  0091               	movwf	17	;volatile
 13011     0D0D                     i1l273:
 13012     0D0D  0008               	return
 13013     0D0E                     __end_of_I2C1_DataTransmit:
 13014                           
 13015                           	psect	text73
 13016     0CD1                     __ptext73:	
 13017 ;; *************** function _I2C1_RestartDisable *****************
 13018 ;; Defined at:
 13019 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;		None
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;		None
 13024 ;; Return value:  Size  Location     Type
 13025 ;;                  1    wreg      void 
 13026 ;; Registers used:
 13027 ;;		None
 13028 ;; Tracked objects:
 13029 ;;		On entry : 0/0
 13030 ;;		On exit  : 0/0
 13031 ;;		Unchanged: 0/0
 13032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13033 ;;      Params:         0       0       0       0       0       0       0       0
 13034 ;;      Locals:         0       0       0       0       0       0       0       0
 13035 ;;      Temps:          0       0       0       0       0       0       0       0
 13036 ;;      Totals:         0       0       0       0       0       0       0       0
 13037 ;;Total ram usage:        0 bytes
 13038 ;; Hardware stack levels used: 1
 13039 ;; This function calls:
 13040 ;;		Nothing
 13041 ;; This function is called by:
 13042 ;;		_I2C1_EVENT_RX
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046     0CD1                     _I2C1_RestartDisable:	
 13047                           ;psect for function _I2C1_RestartDisable
 13048                           
 13049     0CD1                     i1l2562:	
 13050                           ;incstack = 0
 13051                           ; Regs used in _I2C1_RestartDisable: []
 13052                           
 13053                           
 13054                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 13055     0CD1  0024               	movlb	4	; select bank4
 13056     0CD2  1096               	bcf	22,1	;volatile
 13057     0CD3                     i1l285:
 13058     0CD3  0008               	return
 13059     0CD4                     __end_of_I2C1_RestartDisable:
 13060                           
 13061                           	psect	text74
 13062     0CCE                     __ptext74:	
 13063 ;; *************** function _I2C1_ReceiveEnable *****************
 13064 ;; Defined at:
 13065 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;		None
 13068 ;; Auto vars:     Size  Location     Type
 13069 ;;		None
 13070 ;; Return value:  Size  Location     Type
 13071 ;;                  1    wreg      void 
 13072 ;; Registers used:
 13073 ;;		None
 13074 ;; Tracked objects:
 13075 ;;		On entry : 0/0
 13076 ;;		On exit  : 0/0
 13077 ;;		Unchanged: 0/0
 13078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13079 ;;      Params:         0       0       0       0       0       0       0       0
 13080 ;;      Locals:         0       0       0       0       0       0       0       0
 13081 ;;      Temps:          0       0       0       0       0       0       0       0
 13082 ;;      Totals:         0       0       0       0       0       0       0       0
 13083 ;;Total ram usage:        0 bytes
 13084 ;; Hardware stack levels used: 1
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		_I2C1_EVENT_RX
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092     0CCE                     _I2C1_ReceiveEnable:	
 13093                           ;psect for function _I2C1_ReceiveEnable
 13094                           
 13095     0CCE                     i1l2566:	
 13096                           ;incstack = 0
 13097                           ; Regs used in _I2C1_ReceiveEnable: []
 13098                           
 13099                           
 13100                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13101     0CCE  0024               	movlb	4	; select bank4
 13102     0CCF  1596               	bsf	22,3	;volatile
 13103     0CD0                     i1l279:
 13104     0CD0  0008               	return
 13105     0CD1                     __end_of_I2C1_ReceiveEnable:
 13106                           
 13107                           	psect	text75
 13108     0CED                     __ptext75:	
 13109 ;; *************** function _I2C1_NackSend *****************
 13110 ;; Defined at:
 13111 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13112 ;; Parameters:    Size  Location     Type
 13113 ;;		None
 13114 ;; Auto vars:     Size  Location     Type
 13115 ;;		None
 13116 ;; Return value:  Size  Location     Type
 13117 ;;                  1    wreg      void 
 13118 ;; Registers used:
 13119 ;;		None
 13120 ;; Tracked objects:
 13121 ;;		On entry : 0/0
 13122 ;;		On exit  : 0/0
 13123 ;;		Unchanged: 0/0
 13124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13125 ;;      Params:         0       0       0       0       0       0       0       0
 13126 ;;      Locals:         0       0       0       0       0       0       0       0
 13127 ;;      Temps:          0       0       0       0       0       0       0       0
 13128 ;;      Totals:         0       0       0       0       0       0       0       0
 13129 ;;Total ram usage:        0 bytes
 13130 ;; Hardware stack levels used: 1
 13131 ;; This function calls:
 13132 ;;		Nothing
 13133 ;; This function is called by:
 13134 ;;		_I2C1_EVENT_RX
 13135 ;; This function uses a non-reentrant model
 13136 ;;
 13137                           
 13138     0CED                     _I2C1_NackSend:	
 13139                           ;psect for function _I2C1_NackSend
 13140                           
 13141     0CED                     i1l2564:	
 13142                           ;incstack = 0
 13143                           ; Regs used in _I2C1_NackSend: []
 13144                           
 13145                           
 13146                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13147     0CED  0024               	movlb	4	; select bank4
 13148     0CEE  1696               	bsf	22,5	;volatile
 13149                           
 13150                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13151     0CEF  1616               	bsf	22,4	;volatile
 13152     0CF0                     i1l297:
 13153     0CF0  0008               	return
 13154     0CF1                     __end_of_I2C1_NackSend:
 13155                           
 13156                           	psect	text76
 13157     0CE9                     __ptext76:	
 13158 ;; *************** function _I2C1_IsRxBufFull *****************
 13159 ;; Defined at:
 13160 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;		None
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;		None
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1    wreg      _Bool 
 13167 ;; Registers used:
 13168 ;;		wreg, status,2, status,0
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/0
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13174 ;;      Params:         0       0       0       0       0       0       0       0
 13175 ;;      Locals:         0       0       0       0       0       0       0       0
 13176 ;;      Temps:          0       0       0       0       0       0       0       0
 13177 ;;      Totals:         0       0       0       0       0       0       0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used: 1
 13180 ;; This function calls:
 13181 ;;		Nothing
 13182 ;; This function is called by:
 13183 ;;		_I2C1_EVENT_RX
 13184 ;; This function uses a non-reentrant model
 13185 ;;
 13186                           
 13187     0CE9                     _I2C1_IsRxBufFull:	
 13188                           ;psect for function _I2C1_IsRxBufFull
 13189                           
 13190     0CE9                     i1l2552:	
 13191                           ;incstack = 0
 13192                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13193                           
 13194                           
 13195                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13196     0CE9  0024               	movlb	4	; select bank4
 13197     0CEA  0814               	movf	20,w	;volatile
 13198     0CEB  3901               	andlw	1
 13199     0CEC                     i1l309:
 13200     0CEC  0008               	return
 13201     0CED                     __end_of_I2C1_IsRxBufFull:
 13202                           
 13203                           	psect	text77
 13204     0CCB                     __ptext77:	
 13205 ;; *************** function _I2C1_DataReceive *****************
 13206 ;; Defined at:
 13207 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;		None
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  1    wreg      unsigned char 
 13214 ;; Registers used:
 13215 ;;		wreg
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13221 ;;      Params:         0       0       0       0       0       0       0       0
 13222 ;;      Locals:         0       0       0       0       0       0       0       0
 13223 ;;      Temps:          0       0       0       0       0       0       0       0
 13224 ;;      Totals:         0       0       0       0       0       0       0       0
 13225 ;;Total ram usage:        0 bytes
 13226 ;; Hardware stack levels used: 1
 13227 ;; This function calls:
 13228 ;;		Nothing
 13229 ;; This function is called by:
 13230 ;;		_I2C1_EVENT_RX
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234     0CCB                     _I2C1_DataReceive:	
 13235                           ;psect for function _I2C1_DataReceive
 13236                           
 13237     0CCB                     i1l2556:	
 13238                           ;incstack = 0
 13239                           ; Regs used in _I2C1_DataReceive: [wreg]
 13240                           
 13241                           
 13242                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13243     0CCB  0024               	movlb	4	; select bank4
 13244     0CCC  0811               	movf	17,w	;volatile
 13245     0CCD                     i1l270:
 13246     0CCD  0008               	return
 13247     0CCE                     __end_of_I2C1_DataReceive:
 13248                           
 13249                           	psect	text78
 13250     0CE5                     __ptext78:	
 13251 ;; *************** function _I2C1_AckSend *****************
 13252 ;; Defined at:
 13253 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;		None
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;		None
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  1    wreg      void 
 13260 ;; Registers used:
 13261 ;;		None
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13267 ;;      Params:         0       0       0       0       0       0       0       0
 13268 ;;      Locals:         0       0       0       0       0       0       0       0
 13269 ;;      Temps:          0       0       0       0       0       0       0       0
 13270 ;;      Totals:         0       0       0       0       0       0       0       0
 13271 ;;Total ram usage:        0 bytes
 13272 ;; Hardware stack levels used: 1
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_I2C1_EVENT_RX
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280     0CE5                     _I2C1_AckSend:	
 13281                           ;psect for function _I2C1_AckSend
 13282                           
 13283     0CE5                     i1l2560:	
 13284                           ;incstack = 0
 13285                           ; Regs used in _I2C1_AckSend: []
 13286                           
 13287                           
 13288                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13289     0CE5  0024               	movlb	4	; select bank4
 13290     0CE6  1296               	bcf	22,5	;volatile
 13291                           
 13292                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13293     0CE7  1616               	bsf	22,4	;volatile
 13294     0CE8                     i1l294:
 13295     0CE8  0008               	return
 13296     0CE9                     __end_of_I2C1_AckSend:
 13297                           
 13298                           	psect	text79
 13299     0CC8                     __ptext79:	
 13300 ;; *************** function _I2C1_StopSend *****************
 13301 ;; Defined at:
 13302 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		None
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13316 ;;      Params:         0       0       0       0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0
 13319 ;;      Totals:         0       0       0       0       0       0       0       0
 13320 ;;Total ram usage:        0 bytes
 13321 ;; Hardware stack levels used: 1
 13322 ;; This function calls:
 13323 ;;		Nothing
 13324 ;; This function is called by:
 13325 ;;		_I2C1_EVENT_STOP
 13326 ;; This function uses a non-reentrant model
 13327 ;;
 13328                           
 13329     0CC8                     _I2C1_StopSend:	
 13330                           ;psect for function _I2C1_StopSend
 13331                           
 13332     0CC8                     i1l2492:	
 13333                           ;incstack = 0
 13334                           ; Regs used in _I2C1_StopSend: []
 13335                           
 13336                           
 13337                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13338     0CC8  0024               	movlb	4	; select bank4
 13339     0CC9  1516               	bsf	22,2	;volatile
 13340     0CCA                     i1l291:
 13341     0CCA  0008               	return
 13342     0CCB                     __end_of_I2C1_StopSend:
 13343                           
 13344                           	psect	text80
 13345     0E1F                     __ptext80:	
 13346 ;; *************** function _I2C1_Close *****************
 13347 ;; Defined at:
 13348 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13349 ;; Parameters:    Size  Location     Type
 13350 ;;		None
 13351 ;; Auto vars:     Size  Location     Type
 13352 ;;		None
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  1    wreg      void 
 13355 ;; Registers used:
 13356 ;;		status,2, status,0, pclath, cstack
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13362 ;;      Params:         0       0       0       0       0       0       0       0
 13363 ;;      Locals:         0       0       0       0       0       0       0       0
 13364 ;;      Temps:          0       0       0       0       0       0       0       0
 13365 ;;      Totals:         0       0       0       0       0       0       0       0
 13366 ;;Total ram usage:        0 bytes
 13367 ;; Hardware stack levels used: 1
 13368 ;; Hardware stack levels required when called: 1
 13369 ;; This function calls:
 13370 ;;		_I2C1_ErrorInterruptClear
 13371 ;;		_I2C1_InterruptClear
 13372 ;;		_I2C1_StatusFlagsClear
 13373 ;; This function is called by:
 13374 ;;		_I2C1_EVENT_STOP
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378     0E1F                     _I2C1_Close:	
 13379                           ;psect for function _I2C1_Close
 13380                           
 13381     0E1F                     i1l2482:	
 13382                           ;incstack = 0
 13383                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13384                           
 13385                           
 13386                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13387     0E1F  0020               	movlb	0	; select bank0
 13388     0E20  01D2               	clrf	_i2c1Status	;volatile
 13389     0E21                     i1l2484:
 13390                           
 13391                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13392     0E21  3000               	movlw	0
 13393     0E22  00D4               	movwf	_i2c1Status+2	;volatile
 13394     0E23  30FF               	movlw	255
 13395     0E24  00D3               	movwf	_i2c1Status+1	;volatile
 13396                           
 13397                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13398     0E25  01D5               	clrf	low ((_i2c1Status| 0+3))	;volatile
 13399                           
 13400                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13401     0E26  01D8               	clrf	low ((_i2c1Status| 0+6))	;volatile
 13402                           
 13403                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13404     0E27  01DD               	clrf	_i2c1Status+11	;volatile
 13405     0E28                     i1l2486:
 13406                           
 13407                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13408     0E28  318C  24C5  318E   	fcall	_I2C1_InterruptClear
 13409     0E2B                     i1l2488:
 13410                           
 13411                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13412     0E2B  318C  24C2  318E   	fcall	_I2C1_ErrorInterruptClear
 13413     0E2E                     i1l2490:
 13414                           
 13415                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13416     0E2E  318C  24E1  318E   	fcall	_I2C1_StatusFlagsClear
 13417     0E31                     i1l219:
 13418     0E31  0008               	return
 13419     0E32                     __end_of_I2C1_Close:
 13420                           
 13421                           	psect	text81
 13422     0CE1                     __ptext81:	
 13423 ;; *************** function _I2C1_StatusFlagsClear *****************
 13424 ;; Defined at:
 13425 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13426 ;; Parameters:    Size  Location     Type
 13427 ;;		None
 13428 ;; Auto vars:     Size  Location     Type
 13429 ;;		None
 13430 ;; Return value:  Size  Location     Type
 13431 ;;                  1    wreg      void 
 13432 ;; Registers used:
 13433 ;;		None
 13434 ;; Tracked objects:
 13435 ;;		On entry : 0/0
 13436 ;;		On exit  : 0/0
 13437 ;;		Unchanged: 0/0
 13438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13439 ;;      Params:         0       0       0       0       0       0       0       0
 13440 ;;      Locals:         0       0       0       0       0       0       0       0
 13441 ;;      Temps:          0       0       0       0       0       0       0       0
 13442 ;;      Totals:         0       0       0       0       0       0       0       0
 13443 ;;Total ram usage:        0 bytes
 13444 ;; Hardware stack levels used: 1
 13445 ;; This function calls:
 13446 ;;		Nothing
 13447 ;; This function is called by:
 13448 ;;		_I2C1_Close
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452     0CE1                     _I2C1_StatusFlagsClear:	
 13453                           ;psect for function _I2C1_StatusFlagsClear
 13454                           
 13455     0CE1                     i1l2478:	
 13456                           ;incstack = 0
 13457                           ; Regs used in _I2C1_StatusFlagsClear: []
 13458                           
 13459                           
 13460                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13461     0CE1  0024               	movlb	4	; select bank4
 13462     0CE2  1395               	bcf	21,7	;volatile
 13463                           
 13464                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13465     0CE3  1315               	bcf	21,6	;volatile
 13466     0CE4                     i1l324:
 13467     0CE4  0008               	return
 13468     0CE5                     __end_of_I2C1_StatusFlagsClear:
 13469                           
 13470                           	psect	text82
 13471     0CC5                     __ptext82:	
 13472 ;; *************** function _I2C1_InterruptClear *****************
 13473 ;; Defined at:
 13474 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;		None
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		None
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13488 ;;      Params:         0       0       0       0       0       0       0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0
 13491 ;;      Totals:         0       0       0       0       0       0       0       0
 13492 ;;Total ram usage:        0 bytes
 13493 ;; Hardware stack levels used: 1
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		_I2C1_Close
 13498 ;;		_I2C1_EventHandler
 13499 ;; This function uses a non-reentrant model
 13500 ;;
 13501                           
 13502     0CC5                     _I2C1_InterruptClear:	
 13503                           ;psect for function _I2C1_InterruptClear
 13504                           
 13505     0CC5                     i1l2474:	
 13506                           ;incstack = 0
 13507                           ; Regs used in _I2C1_InterruptClear: []
 13508                           
 13509                           
 13510                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13511     0CC5  0020               	movlb	0	; select bank0
 13512     0CC6  1190               	bcf	16,3	;volatile
 13513     0CC7                     i1l318:
 13514     0CC7  0008               	return
 13515     0CC8                     __end_of_I2C1_InterruptClear:
 13516                           
 13517                           	psect	text83
 13518     0CC2                     __ptext83:	
 13519 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13520 ;; Defined at:
 13521 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;		None
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;		None
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  1    wreg      void 
 13528 ;; Registers used:
 13529 ;;		None
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/0
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13535 ;;      Params:         0       0       0       0       0       0       0       0
 13536 ;;      Locals:         0       0       0       0       0       0       0       0
 13537 ;;      Temps:          0       0       0       0       0       0       0       0
 13538 ;;      Totals:         0       0       0       0       0       0       0       0
 13539 ;;Total ram usage:        0 bytes
 13540 ;; Hardware stack levels used: 1
 13541 ;; This function calls:
 13542 ;;		Nothing
 13543 ;; This function is called by:
 13544 ;;		_I2C1_Close
 13545 ;;		_I2C1_ErrorEventHandler
 13546 ;; This function uses a non-reentrant model
 13547 ;;
 13548                           
 13549     0CC2                     _I2C1_ErrorInterruptClear:	
 13550                           ;psect for function _I2C1_ErrorInterruptClear
 13551                           
 13552     0CC2                     i1l2476:	
 13553                           ;incstack = 0
 13554                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13555                           
 13556                           
 13557                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13558     0CC2  0020               	movlb	0	; select bank0
 13559     0CC3  1191               	bcf	17,3	;volatile
 13560     0CC4                     i1l321:
 13561     0CC4  0008               	return
 13562     0CC5                     __end_of_I2C1_ErrorInterruptClear:
 13563                           
 13564                           	psect	text84
 13565     0CDD                     __ptext84:	
 13566 ;; *************** function _I2C1_BusReset *****************
 13567 ;; Defined at:
 13568 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;		None
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;		None
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  1    wreg      void 
 13575 ;; Registers used:
 13576 ;;		None
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13582 ;;      Params:         0       0       0       0       0       0       0       0
 13583 ;;      Locals:         0       0       0       0       0       0       0       0
 13584 ;;      Temps:          0       0       0       0       0       0       0       0
 13585 ;;      Totals:         0       0       0       0       0       0       0       0
 13586 ;;Total ram usage:        0 bytes
 13587 ;; Hardware stack levels used: 1
 13588 ;; This function calls:
 13589 ;;		Nothing
 13590 ;; This function is called by:
 13591 ;;		_I2C1_EVENT_RESET
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595     0CDD                     _I2C1_BusReset:	
 13596                           ;psect for function _I2C1_BusReset
 13597                           
 13598     0CDD                     i1l2494:	
 13599                           ;incstack = 0
 13600                           ; Regs used in _I2C1_BusReset: []
 13601                           
 13602                           
 13603                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13604     0CDD  0024               	movlb	4	; select bank4
 13605     0CDE  1295               	bcf	21,5	;volatile
 13606                           
 13607                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13608     0CDF  1695               	bsf	21,5	;volatile
 13609     0CE0                     i1l276:
 13610     0CE0  0008               	return
 13611     0CE1                     __end_of_I2C1_BusReset:
 13612                           
 13613                           	psect	text85
 13614     0002                     __ptext85:	
 13615 ;; *************** function _I2C1_DefaultCallback *****************
 13616 ;; Defined at:
 13617 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;		None
 13620 ;; Auto vars:     Size  Location     Type
 13621 ;;		None
 13622 ;; Return value:  Size  Location     Type
 13623 ;;                  1    wreg      void 
 13624 ;; Registers used:
 13625 ;;		None
 13626 ;; Tracked objects:
 13627 ;;		On entry : 0/0
 13628 ;;		On exit  : 0/0
 13629 ;;		Unchanged: 0/0
 13630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13631 ;;      Params:         0       0       0       0       0       0       0       0
 13632 ;;      Locals:         0       0       0       0       0       0       0       0
 13633 ;;      Temps:          0       0       0       0       0       0       0       0
 13634 ;;      Totals:         0       0       0       0       0       0       0       0
 13635 ;;Total ram usage:        0 bytes
 13636 ;; Hardware stack levels used: 1
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_I2C1_Initialize
 13641 ;;		_I2C1_Deinitialize
 13642 ;;		_I2C1_ErrorEventHandler
 13643 ;; This function uses a non-reentrant model
 13644 ;;
 13645                           
 13646     0002                     _I2C1_DefaultCallback:	
 13647                           ;psect for function _I2C1_DefaultCallback
 13648                           
 13649     0002                     i1l231:	
 13650                           ;incstack = 0
 13651                           ; Regs used in _I2C1_DefaultCallback: []
 13652                           
 13653     0002  0008               	return
 13654     0003                     __end_of_I2C1_DefaultCallback:
 13655                           
 13656                           	psect	text86
 13657     0DE1                     __ptext86:	
 13658 ;; *************** function _ADC_ISR *****************
 13659 ;; Defined at:
 13660 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 13661 ;; Parameters:    Size  Location     Type
 13662 ;;		None
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;		None
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  1    wreg      void 
 13667 ;; Registers used:
 13668 ;;		wreg, status,2, status,0, pclath, cstack
 13669 ;; Tracked objects:
 13670 ;;		On entry : 0/0
 13671 ;;		On exit  : 0/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13674 ;;      Params:         0       0       0       0       0       0       0       0
 13675 ;;      Locals:         0       0       0       0       0       0       0       0
 13676 ;;      Temps:          0       0       0       0       0       0       0       0
 13677 ;;      Totals:         0       0       0       0       0       0       0       0
 13678 ;;Total ram usage:        0 bytes
 13679 ;; Hardware stack levels used: 1
 13680 ;; Hardware stack levels required when called: 1
 13681 ;; This function calls:
 13682 ;;		NULL
 13683 ;;		_ADC_DefaultInterruptHandler
 13684 ;; This function is called by:
 13685 ;;		_INTERRUPT_InterruptManager
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689     0DE1                     _ADC_ISR:	
 13690                           ;psect for function _ADC_ISR
 13691                           
 13692     0DE1                     i1l3160:	
 13693                           ;incstack = 0
 13694                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 13695                           
 13696                           
 13697                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 13698     0DE1  0020               	movlb	0	; select bank0
 13699     0DE2  1310               	bcf	16,6	;volatile
 13700     0DE3                     i1l3162:
 13701                           
 13702                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 13703     0DE3  086B               	movf	_ADC_InterruptHandler,w
 13704     0DE4  046C               	iorwf	_ADC_InterruptHandler+1,w
 13705     0DE5  1903               	btfsc	3,2
 13706     0DE6  2DE8               	goto	u128_21
 13707     0DE7  2DE9               	goto	u128_20
 13708     0DE8                     u128_21:
 13709     0DE8  2DEE               	goto	i1l52
 13710     0DE9                     u128_20:
 13711     0DE9                     i1l3164:
 13712                           
 13713                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 13714     0DE9  086C               	movf	_ADC_InterruptHandler+1,w
 13715     0DEA  008A               	movwf	10
 13716     0DEB  086B               	movf	_ADC_InterruptHandler,w
 13717     0DEC  000A               	callw
 13718     0DED  318D               	pagesel	$
 13719     0DEE                     i1l52:
 13720     0DEE  0008               	return
 13721     0DEF                     __end_of_ADC_ISR:
 13722                           
 13723                           	psect	text87
 13724     0CC1                     __ptext87:	
 13725 ;; *************** function _ADC_DefaultInterruptHandler *****************
 13726 ;; Defined at:
 13727 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 13728 ;; Parameters:    Size  Location     Type
 13729 ;;		None
 13730 ;; Auto vars:     Size  Location     Type
 13731 ;;		None
 13732 ;; Return value:  Size  Location     Type
 13733 ;;                  1    wreg      void 
 13734 ;; Registers used:
 13735 ;;		None
 13736 ;; Tracked objects:
 13737 ;;		On entry : 0/0
 13738 ;;		On exit  : 0/0
 13739 ;;		Unchanged: 0/0
 13740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13741 ;;      Params:         0       0       0       0       0       0       0       0
 13742 ;;      Locals:         0       0       0       0       0       0       0       0
 13743 ;;      Temps:          0       0       0       0       0       0       0       0
 13744 ;;      Totals:         0       0       0       0       0       0       0       0
 13745 ;;Total ram usage:        0 bytes
 13746 ;; Hardware stack levels used: 1
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_ADC_Initialize
 13751 ;;		_ADC_ISR
 13752 ;; This function uses a non-reentrant model
 13753 ;;
 13754                           
 13755     0CC1                     _ADC_DefaultInterruptHandler:	
 13756                           ;psect for function _ADC_DefaultInterruptHandler
 13757                           
 13758     0CC1                     i1l58:	
 13759                           ;incstack = 0
 13760                           ; Regs used in _ADC_DefaultInterruptHandler: []
 13761                           
 13762     0CC1  0008               	return
 13763     0CC2                     __end_of_ADC_DefaultInterruptHandler:
 13764     007E                     btemp	set	126	;btemp
 13765     007E                     int$flags	set	126
 13766     007E                     wtemp0	set	126
 13767                           
 13768                           	psect	config
 13769                           
 13770                           ;Config register CONFIG1 @ 0x8007
 13771                           ;	Oscillator Selection Bits
 13772                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13773                           ;	Power-up Timer Enable
 13774                           ;	PWRTE = OFF, PWRT disabled
 13775                           ;	MCLR Pin Function Select
 13776                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13777                           ;	Flash Program Memory Code Protection
 13778                           ;	CP = OFF, Program memory code protection is disabled
 13779                           ;	Brown-out Reset Enable
 13780                           ;	BOREN = ON, Brown-out Reset enabled
 13781                           ;	Clock Out Enable
 13782                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13783     8007                     	org	32775
 13784     8007  3FFC               	dw	16380
 13785                           
 13786                           ;Config register CONFIG2 @ 0x8008
 13787                           ;	Flash Memory Self-Write Protection
 13788                           ;	WRT = OFF, Write protection off
 13789                           ;	Peripheral Pin Select one-way control
 13790                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13791                           ;	Zero Cross Detect Disable Bit
 13792                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13793                           ;	PLL Enable Bit
 13794                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 13795                           ;	Stack Overflow/Underflow Reset Enable
 13796                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13797                           ;	Brown-out Reset Voltage Selection
 13798                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13799                           ;	Low-Power Brown Out Reset
 13800                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13801                           ;	In-Circuit Debugger Mode
 13802                           ;	DEBUG = 0x1, unprogrammed default
 13803                           ;	Low-Voltage Programming Enable
 13804                           ;	LVP = ON, Low-voltage programming enabled
 13805     8008                     	org	32776
 13806     8008  3EFF               	dw	16127
 13807                           
 13808                           ;Config register CONFIG3 @ 0x8009
 13809                           ;	WDT Period Select
 13810                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13811                           ;	Watchdog Timer Enable
 13812                           ;	WDTE = OFF, WDT disabled
 13813                           ;	WDT Window Select
 13814                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13815                           ;	WDT Input Clock Selector
 13816                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13817     8009                     	org	32777
 13818     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    86
    Data        31
    BSS         45
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      77
    BANK1            80      0      47
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9559[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Read@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    I2C1_Write@data	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    packLong@data	PTR unsigned char  size(1) Largest target is 5
		 -> KAPS_getPos@data(BANK0[4]), parserDataBuffer(BANK1[5]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 5
		 -> parserDataBuffer(BANK1[5]), 

    S189$2$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), 

    S189$3$1	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), 

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9550 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S288$readPtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@data(BANK0[1]), KAPS_getPos@data(BANK0[4]), KAPS_getStatus@data(BANK0[1]), NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(1) Largest target is 4
		 -> KAPS_getIndex@reg(BANK0[1]), KAPS_getPos@reg(BANK0[1]), KAPS_getStatus@reg(BANK0[1]), KAPS_GoToIdx@idx(BANK0[1]), 
		 -> KAPS_GoToIdx@reg(BANK0[1]), KAPS_setAbsPos@data(BANK0[4]), KAPS_setAbsPos@reg(BANK0[1]), KAPS_setRelPos@reg(BANK0[1]), 
		 -> KAPS_setRelPos@value(BANK0[1]), KAPS_StorePos@data(BANK0[4]), KAPS_StorePos@reg(BANK0[1]), NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 6
		 -> parserDataBuffer(BANK1[5]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> KAPS_setAbsPos@data(BANK0[4]), KAPS_StorePos@data(BANK0[4]), ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 


Critical Paths under _main in COMMON

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ProcessMsg->_SSPA_setMute
    _ADC2Celsius->___aldiv
    _getADCValue->_ADC_GetConversionResult
    _getADCValue->_ADC_SelectChannel
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getPos->_I2C1_Read
    _KAPS_getIndex->_I2C1_Read
    _I2C1_Read->_I2C1_IsBusy
    _I2C1_Write->_I2C1_IsBusy
    _SendMsg->_SendSync
    _SendSync->_EUSART_IsTxReady
    _SendSync->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_RX
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_RX
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _main->_ProcessMsg
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->_ADC2Celsius
    _ADC2Celsius->___aldiv
    _SSPA_getPOut->_ADC2Amp
    _ADC2dBm->___aldiv
    _ADC2Amp->___aldiv
    ___aldiv->___lmul
    _KAPS_setRelPos->_I2C1_Write
    _KAPS_setAbsPos->_packLong
    _KAPS_getStatus->_I2C1_Read
    _KAPS_getStatus->_I2C1_Write
    _KAPS_getPos->_packLong
    _KAPS_getIndex->_I2C1_Read
    _KAPS_getIndex->_I2C1_Write
    _KAPS_StorePos->_packLong
    _KAPS_GoToIdx->_I2C1_Write
    _Parse->_SendNack
    _SendNack->_SendMsg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   43989
                                             49 BANK0      1     1      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                         _ProcessMsg
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     632
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     196
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     196
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessMsg                                           3     2      1   39167
                                             46 BANK0      3     2      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (2) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SSPA_setMute                                         4     3      1     245
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SSPA_getTemp                                         6     6      0    2150
                                             40 BANK0      6     6      0
                        _ADC2Celsius
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _ADC2Celsius                                         14    12      2    1850
                                             26 BANK0     14    12      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _SSPA_getPOut                                         6     6      0    4316
                                             38 BANK0      5     5      0
                            _ADC2Amp
                            _ADC2dBm
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _getADCValue                                          8     6      2     167
                                              0 BANK0      8     6      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_SelectChannel                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC2dBm                                             10     8      2    1850
                                             26 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ADC2Amp                                             12     8      4    1940
                                             26 BANK0     12     8      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     985
                                              4 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _KAPS_setRelPos                                       5     5      0    3218
                                              5 BANK0      5     5      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_setAbsPos                                      11     7      4    4328
                                             13 BANK0     11     7      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _KAPS_getStatus                                       4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (2) _KAPS_getPos                                          7     7      0    4638
                                             13 BANK0      7     7      0
                          _I2C1_Read
                         _I2C1_Write
                           _packLong
 ---------------------------------------------------------------------------------
 (2) _packLong                                            13     9      4     428
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (2) _KAPS_getIndex                                        4     4      0    4198
                                              5 BANK0      4     4      0
                          _I2C1_Read
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read                                            6     1      5     977
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                     _I2C1_ReadStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadStart                                       0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (2) _KAPS_StorePos                                       12     8      4    4396
                                             13 BANK0     12     8      4
                         _I2C1_Write
                           _packLong (ARG)
                         _unpackLong
 ---------------------------------------------------------------------------------
 (2) _unpackLong                                           9     4      5     968
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (2) _KAPS_GoToIdx                                         4     4      0    3184
                                              5 BANK0      4     4      0
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write                                           6     1      5    3113
                                              0 BANK0      5     0      5
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteStart                                      0     0      0       0
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (5) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_IsBusy                                          1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parse                                                3     3      0    4153
                                              6 BANK0      3     3      0
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    2019
                                              5 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _SendMsg                                              5     3      2    1979
                                              0 BANK0      5     3      2
                           _SendSync
 ---------------------------------------------------------------------------------
 (3) _SendSync                                             1     1      0     279
                                              5 COMMON     1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     211
                                              4 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_IsTxReady                                     1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_EventHandler                                    2     2      0     164
                                              2 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (8) _I2C1_ErrorEventHandler                               2     2      0     164
                                              2 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_TX                                        1     1      0      48
                                              1 COMMON     1     1      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (10) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (9) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _SendMsg
       _SendSync
         _EUSART_IsTxReady
         _EUSART_Write
     _SendNack
       _SendMsg
   _ProcessMsg
     _KAPS_GoToIdx
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_StartSend
     _KAPS_StorePos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_getIndex
       _I2C1_Read
         _I2C1_IsBusy
         _I2C1_ReadStart
           _I2C1_StartSend
       _I2C1_Write
     _KAPS_getPos
       _I2C1_Read
       _I2C1_Write
       _packLong
     _KAPS_getStatus
       _I2C1_Read
       _I2C1_Write
     _KAPS_setAbsPos
       _I2C1_Write
       _packLong (ARG)
       _unpackLong (ARG)
     _KAPS_setRelPos
       _I2C1_Write
     _SSPA_getPOut
       _ADC2Amp
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _ADC2dBm
         ___aldiv
         ___lmul
       _getADCValue
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_SelectChannel
         _ADC_StartConversion
     _SSPA_getTemp
       _ADC2Celsius
         ___aldiv
         ___lmul
       _getADCValue
     _SSPA_setMute
     _SendMsg
     _packLong
     _unpackLong
     _unpackWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      86       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      86      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 05 13:56:03 2024

                                    I2C1_Write@data 0022                              ??_I2C1_DefaultCallback 0070  
                                                l30 0DBC                                                  l33 0CDC  
                                                l27 0E58                                                  l36 0D70  
                                                l39 0D34                                                  l55 0D3A  
       __end_of_EUSART_OverrunErrorCallbackRegister 0DD5               ??_EUSART_OverrunErrorCallbackRegister 0076  
              ?_EUSART_OverrunErrorCallbackRegister 0074                 _EUSART_OverrunErrorCallbackRegister 0DC9  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                                     ?_KAPS_GoToIdx 0070                                       _KAPS_StorePos 0580  
                                      _SSPA_getPOut 02F4                                        _SSPA_getTemp 05FE  
                                               l200 0E0D                                     __end_of_ADC2Amp 0580  
                                               l204 0DE0                                                 l213 0D69  
                                               l216 0D62                                                 l312 0D08  
                                               l410 04B7                                                 l333 0D8F  
                                               l184 0EC1                                                 l177 0E6E  
                                               l610 0FA5                                                 l442 0DB0  
                                               l188 0F05                                                 l613 0D04  
                                               l623 0DA5                                                 l616 0003  
                                               l288 0CD9                                                 l465 0D1C  
                                               l722 0F53                                                 l619 0D00  
                                               l627 0DD4                                                 l483 0E44  
                                               l804 0263                                                 l716 0F2B  
                                               l548 0EA3                                                 l725 05BF  
                                               l733 0FFF                                                 l742 03D4  
                                               l719 078E                                                 l751 0DC8  
                                               l592 0D17                                                 l840 057F  
                                               l729 07EC                                                 l834 046C  
                                               l771 06B3                                                 l739 05FD  
                                               l843 0677                                                 l748 04FC  
                                               l860 06C9                                                 l852 06BE  
                                               l597 0DFD                                                 l765 0E10  
                                               l837 0420                                                 l693 01AB  
                                               l767 0E1E                                                 l776 0D9A  
                                               l792 01CD                                                 l864 06EE  
                                               l873 063A                                                 l857 06C6  
                                               l849 06BB                                                 l882 037D  
                                               l699 0F78                                                 l964 075B  
                                               l877 02F7                                     __end_of_ADC2dBm 0678  
                                               u910 0DDB                                                 u911 0DDA  
                                               u990 0DA1                                                 u991 0DA0  
                                      ?_KAPS_getPos 0070                           __end_of_I2C1_DataTransmit 0D0E  
                                   __end_of_ADC_ISR 0DEF                     __end_of_ADC_SetInterruptHandler 0D3B  
                                               wreg 0009                                        ADC2dBm@value 003C  
                          _I2C1_ErrorInterruptClear 0CC2                                        _SSPA_setMute 06B4  
                      ?_ADC_DefaultInterruptHandler 0070                                       SendMsg@msg_id 0024  
                                     _KAPS_getIndex 0FD2                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                    __end_of_I2C1_ISR 0CFD  
                                              l1015 0277                                                l1025 02F3  
                                              l3000 04B2                                                l3010 0DA6  
                                              l3002 04B3                                                l3020 0EA0  
                                              l3012 0DA9                                                l3004 04B4  
                                              l3022 0CFD                                                l3014 0E87  
                                              l3006 04B5                                                l4000 01D8  
                                              l3016 0E92                                                l3008 04B6  
                                              l4010 0210                                                l4002 01DD  
                                              l3018 0E99                                                l4020 0223  
                                              l4012 0215                                                l4004 01E2  
                                              l4030 023E                                                l4022 0226  
                                              l4014 021B                                                l4006 01E5  
                                              l4024 0227                                                l4016 021D  
                                              l4008 0208                                                l4026 022D  
                                              l4042 024A                                                l3170 0E32  
                                              l3172 0D13                                                l3180 0F84  
                                              l4028 0232                                                l4036 0240  
                                              l4044 0262                                                l3190 0F98  
                                              l3182 0F86                                                l4038 0245  
                                              l4222 06D5                                                l3192 0F9E  
                                              l3184 0F8C                                                l3176 0F7C  
                                              l3600 026A                                                l4224 060F  
                                              l2640 0DD5                                                l4080 0F59  
                                              l4072 0F54                                                l3194 0FA3  
                                              l3186 0F91                                                l3178 0F7F  
                                              l3530 0DEF                                                l3610 029A  
                                              l3602 027B                                                l4226 0372  
                                              l2642 0DDB                                                l4082 0F61  
                                              l4074 0F57                                                l3188 0F96  
                                              l3532 0DF0                                                l4228 0254  
                                              l3620 02C5                                                l3612 029D  
                                              l3604 0286                                                l2636 0D35  
                                              l2900 0E48                                                l4084 0F66  
                                              l4076 0F58                                                l3534 0DF5  
                                              l3542 0D01                                                l3702 0699  
                                              l3630 02E0                                                l3622 02CD  
                                              l3614 02A8                                                l3606 028A  
                                              l2910 0E4F                                                l2902 0E49  
                                              l2638 0D05                                                l4086 0F6F  
                                              l4078 0F59                                                l3536 0DFA  
                                              l3704 06A0                                                l3712 06AF  
                                              l3560 0E06                                                l3528 0CD7  
                                              l3640 0EAC                                                l3720 04E7  
                                              l3632 02EB                                                l3624 02CE  
                                              l3616 02AC                                                l3608 0292  
                                              l3552 0D2F                                                l3544 0DB2  
                                              l2912 0E56                                                l2904 0E4A  
                                              l2920 0E62                                                l3538 0DFC  
                                              l3706 06A8                                                l3562 0E0B  
                                              l3570 0D5F                                                l3650 0EBB  
                                              l3642 0EB3                                                l3714 04B8  
                                              l3730 03C6                                                l3722 0380  
                                              l3626 02D5                                                l3618 02B3  
                                              l3546 0CDA                                                l3810 02F7  
                                              l2906 0E4B                                                l2922 0E6C  
                                              l2914 0E59                                                l3580 0E19  
                                              l3708 06AC                                                l3564 0E0C  
                                              l3556 0DFE                                                l3652 0EBD  
                                              l3644 0EB4                                                l3636 0EA4  
                                              l3716 04BE                                                l3572 0D63  
                                              l3660 0EE4                                                l3724 0380  
                                              l3900 0F2E                                                l3628 02DB  
                                              l3548 0D6A                                                l3740 042C  
                                              l3820 0332                                                l3812 0300  
                                              l3804 0DBD                                                l2908 0E4D  
                                              l2916 0E5E                                                l3558 0E00  
                                              l3654 0EBE                                                l3646 0EB6  
                                              l3638 0EA4                                                l3718 04D2  
                                              l3910 058E                                                l3574 0D66  
                                              l3670 0EF7                                                l3662 0EE5  
                                              l3726 0397                                                l3902 0F32  
                                              l3590 0744                                                l3582 0728  
                                              l3750 0444                                                l3734 0423  
                                              l3822 034D                                                l3814 031B  
                                              l3830 036A                                                l3806 0DC3  
                                              l2950 0D8B                                                l2918 0E5F  
                                              l2790 0D18                                                l3576 0E0F  
                                              l3568 0D5C                                                l3656 0EC1  
                                              l3648 0EBA                                                l3912 0590  
                                              l3680 0F02                                                l3672 0EFB  
                                              l3664 0EED                                                l3728 03AE  
                                              l3840 07C2                                                l3904 0F42  
                                              l3592 0753                                                l3584 0731  
                                              l3752 044F                                                l3736 0425  
                                              l3824 034D                                                l3816 0329  
                                              l3808 02F6                                                l3760 03D5  
                                              l3920 006A                                                l2952 0D8D  
                                              l2792 0D9B                                                l2960 0487  
                                              l3578 0E11                                                l3690 067F  
                                              l3914 059D                                                l3906 0582  
                                              l3674 0EFC                                                l3666 0EF4  
                                              l3682 0F04                                                l3850 05C2  
                                              l3842 07C3                                                l3586 0735  
                                              l3770 0547                                                l3754 0458  
                                              l3746 0437                                                l3738 0429  
                                              l3826 0356                                                l3818 0329  
                                              l3762 03DC                                                l3930 0094  
                                              l3922 006B                                                l2794 0DA1  
                                              l2970 0490                                                l2962 0489  
                                              l2954 046D                                                l3692 0684  
                                              l3916 05AE                                                l3908 0584  
                                              l3676 0EFE                                                l3668 0EF5  
                                              l3860 0FD5                                                l3852 05CA  
                                              l3844 07D3                                                l3596 0264  
                                              l3588 073D                                                l3772 0577  
                                              l3780 0676                                                l3756 045F  
                                              l3748 043F                                                l3764 041C  
                                              l3940 00CB                                                l3932 009B  
                                              l3924 0071                                                l2948 0D88  
                                              l2796 0DC9                                                l2980 049B  
                                              l2972 0492                                                l2964 048B  
                                              l2956 046F                                                l3694 068B  
                                              l3686 067A                                                l3918 0D92  
                                              l3678 0EFF                                                l3862 0FD6  
                                              l3854 05DA                                                l3846 07E9  
                                              l3838 07BF                                                l3598 0266  
                                              l3870 06B6                                                l3950 010A  
                                              l3942 00DD                                                l3934 00B3  
                                              l3926 0083                                                l2798 0DCF  
                                              l2990 04AA                                                l2982 049E  
                                              l2974 0494                                                l2966 048C  
                                              l2958 0471                                                l3688 067B  
                                              l3864 0FE6                                                l3856 05F0  
                                              l3848 05C0                                                l3768 0540  
                                              l3776 063B                                                l3792 0607  
                                              l3784 0600                                                l3872 06C1  
                                              l3960 0144                                                l3952 0114  
                                              l3944 00F9                                                l3936 00BD  
                                              l3928 008D                                                l2992 04AD  
                                              l2984 04A1                                                l2976 0497  
                                              l2968 048D                                                l3698 0693  
                                              l3890 0F1A                                                l3866 0FFC  
                                              l3858 0FD2                                                l3778 0642  
                                              l3794 061A                                                l3786 0601  
                                              l3962 0151                                                l3954 0133  
                                              l3946 0103                                                l3938 00C4  
                                              l2898 0E45                                                l2994 04AF  
                                              l2986 04A4                                                l2978 0499  
                                              l3980 01B7                                                l3892 075C  
                                              l3796 0623                                                l3788 0604  
                                              l3876 06CC                                                l3868 06B5  
                                              l3964 0159                                                l3956 0136  
                                              l3948 0106                                                l3972 0188  
                                              l2996 04B0                                                l2988 04A7  
                                              l3990 01CA                                                l3982 01BA  
                                              l3974 01AE                                                l3886 0F08  
                                              l3894 075F                                                l3878 06E0  
                                              l3966 016A                                                l3958 013A  
                                              l2998 04B1                                                l3992 01CD  
                                              l3984 01BF                                                l3976 01AF  
                                              l3888 0F0A                                                l3896 076C  
                                              l3968 0172                                                l3994 01CE  
                                              l3986 01C2                                                l3978 01B4  
                                              l3898 077D                                                l3996 01D0  
                                              l3988 01C7                                                l3998 01D3  
                                 _I2C1_Deinitialize 0000                                                u1000 0DCF  
                                              u1001 0DCE                                                u2010 01B4  
                                              u2011 01B3                                                u1300 0F8C  
                                              u2020 0222                                                u1301 0F8B  
                                              u2021 0221                                                u2005 00E4  
                                              u1310 0F96                                                u2030 022D  
                                              u1311 0F95                                                u2031 022C  
                                              u1320 0F9E                                                u2040 0232  
                                              u1321 0F9D                                                u2041 0231  
                                              u2107 0430                                                u2060 0F61  
                                              u2117 0453                                                u2061 0F60  
                                              _LATA 010C                                                u2070 0F6F  
                                              _LATB 010D                                                u2071 0F6E  
                                              _LATC 010E                                                u1290 0F84  
                                              u1530 0DF5                                                u1610 0753  
                                              u1291 0F83                                                u1531 0DF4  
                                              u1611 0752                                                u1540 0DFA  
                                              u1700 02DB                                                u1620 026A  
                                              u1541 0DF9                                                u1701 02DA  
                                              u1621 0269                                                u1605 0745  
                                              u1550 0E06                                                u1710 02E0  
                                              u1630 027B                                                u1551 0E05  
                                              u1711 02DF                                                u1631 027A  
                                              u1560 0E0B                                                u1720 0EAC  
                                              u1800 03A4                                                u1640 029A  
                                              u1561 0E0A                                                u1721 0EAB  
                                              u1641 0299                                                u1570 0E19  
                                              u1730 0EED                                                u1810 03BC  
                                              u1571 0E18                                                u1731 0EEC  
                                              u1740 068B                                                u1900 07E9  
                                              u1660 02AC                                                u1580 0735  
                                              u1820 043F                                                u1741 068A  
                                              u1805 03A0                                                u1901 07E8  
                                              u1661 02AB                                                u1581 0734  
                                              u1821 043E                                                u1750 0698  
                                              u1910 05F0                                                u1830 045F  
                                              u1751 0697                                                u1815 03B8  
                                              u1911 05EF                                                u1655 029E  
                                              u1831 045E                                                u1760 04CE  
                                              u1920 0FFC                                                u1680 02C5  
                                              u1921 0FFB                                                u1681 02C4  
                                              u1770 04E3                                                u1930 06BB  
                                              u1675 02AD                                                u1595 073E  
                                              u1931 06BA                                                u1780 04F8  
                                              u1940 06C6                                                u1765 04CA  
                                              u1685 02C1                                                u1845 0464  
                                              u1941 06C5                                                u1790 038D  
                                              u1775 04DF                                                u1695 02CF  
                                              u1855 062E                                                u1785 04F4  
                                              u1865 030B                                                u1795 0389  
                                              u1875 031E                                                u1955 06E4  
                                              u1965 0587                                                u1885 033D  
                                              u1895 0359                                                u1975 0078  
                                              u1985 00A2                                                u1995 00D2  
                                              i1l52 0DEE                                                i1l58 0CC1  
                                              _UART 078F                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                                  ??_I2C1_ReadStart 0074                                     ??_I2C1_StopSend 0070  
                                 I2C1_Write@address 0020                                                _main 0F54  
                                              _kaps 0064                                    __end_of_I2C_Host 0801  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                              start 0036          __end_of_EUSART_DefaultOverrunErrorCallback 0D01  
              ??_EUSART_DefaultOverrunErrorCallback 0074                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 0CFD                                       ADC2dBm@result 0040  
                   __end_of_INT_SetInterruptHandler 0D1D                                     _I2C1_EVENT_IDLE 0CF1  
                                   _I2C1_EVENT_NACK 0D1D                                          _i2c1Status 0052  
                                   _I2C1_EVENT_STOP 0D80                                     __end_of_SendMsg 06B4  
                                    ??_KAPS_GoToIdx 0025                                      ?_KAPS_StorePos 002D  
                                    _KAPS_getStatus 07BF                                       ?_EUSART_Write 0074  
                                 __end_of_I2C1_Read 0F06                                     __end_of___aldiv 02F4  
                                             ?_main 0070                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             i1l210 0CF8                                               i1l300 0D2E  
                                             i1l231 0002                                               i1l303 0D12  
                                             i1l207 0CFC                                               i1l240 0D4D  
                                             i1l321 0CC4                                               i1l225 053F  
                                             i1l234 0CF4                                               i1l306 0D5B  
                                             i1l219 0E31                                               i1l324 0CE4  
                                             i1l228 0EE3                                               i1l309 0CEC  
                                             i1l237 0D7F                                               i1l261 0D28  
                                             i1l318 0CC7                                               i1l270 0CCD  
                                             i1l247 0FD1                                               i1l255 0727  
                                             i1l264 0D87                                               i1l273 0D0D  
                                             i1l282 0CD6                                               i1l258 0D22  
                                             i1l450 0026                                               i1l291 0CCA  
                                             i1l267 0D54                                               i1l276 0CE0  
                                             i1l285 0CD3                                               i1l294 0CE8  
                                             i1l279 0CD0                                               i1l455 0034  
                                             i1l448 0018                                               i1l297 0CF0  
                                             i1l449 0034                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             u94_20 0FAD                                               u94_21 0FAC  
                                             u95_20 0FC5                                               u95_21 0FC4  
                                             u96_20 06F9                                               u96_21 06F8  
                                             _RXPPS 0E24                                               u97_20 0700  
                                             u97_21 06FF                                               u98_20 0716  
                                             u98_21 0715                                    ??_I2C1_StartSend 0074  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                 ___lmul@multiplicand 0024  
                                             _Parse 01AC                                      ?_KAPS_getIndex 0070  
                                 ??_I2C1_Initialize 0076                                     SendMsg@data_len 0021  
                           ??_I2C1_CallbackRegister 0076                                   ?_I2C1_IsRxBufFull 0070  
                                  ProcessMsg@msg_id 0050                            ?_I2C1_EVENT_SEND_WR_ADDR 0070  
                                             _sspas 00A0                                               pclath 000A  
                             I2C1_DataTransmit@data 0070                                      _KAPS_setAbsPos 075C  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                      _KAPS_setRelPos 0F2C  
                                      ??_I2C1_Close 0070                                          SendMsg@sum 0023  
                                      __end_of_UART 07BF                                        ??_I2C1_Write 0075  
                                   __initialization 0038                            ??_I2C1_ErrorEventHandler 0072  
                                      __end_of_main 0F7C                              __end_of_KAPS_getStatus 07ED  
                                         ??_ADC2Amp 0075                                           ??_ADC2dBm 0075  
                                    getADCValue@sum 0025                                    _I2C1_EVENT_ERROR 0D23  
                                    ??_EUSART_Write 0075                                    _I2C1_EVENT_RESET 0D4E  
                                         ??_ADC_ISR 0070                         ?_INTERRUPT_InterruptManager 0070  
                                  __end_of_SendNack 0D9B                                              ??_main 0076  
                                  __end_of_SendSync 0E1F                                    SSPA_setMute@band 0075  
                                  SSPA_setMute@mute 0074  EUSART_OverrunErrorCallbackRegister@callbackHandler 0074  
EUSART_FramingErrorCallbackRegister@callbackHandler 0074                I2C1_CallbackRegister@callbackHandler 0074  
                                            ?_Parse 0070                                  __end_of_I2C1_Close 0E32  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 005E  
                             _I2C1_InterruptsEnable 0D05                                              _ADRESH 009C  
                                            _ADRESL 009B                              __end_of_KAPS_setAbsPos 078F  
                                __end_of_I2C1_Write 0EC2                                              _ANSELA 018C  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                            _BORCON 0116                                   KAPS_setAbsPos@reg 0037  
                                 KAPS_setAbsPos@pos 002D                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RC2PPS 0EA2  
                                            _RB5PPS 0E9D                                              _RB6PPS 0E9E  
                                            u112_20 0508                                              u112_21 0507  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            _ODCONC 028E                                              i1l3160 0DE1  
                                            u113_20 0510                                              u113_21 050F  
                                            i1l3162 0DE3                                              i1l3164 0DE9  
                                            i1l2542 0D0A                                              i1l2702 0D0E  
                                            i1l3166 0CF9                                              i1l2560 0CE5  
                                            i1l2552 0CE9                                              i1l2544 0CD4  
                                            i1l2712 0D78                                              i1l2720 0D4C  
                                            i1l3168 0CF5                                              u114_20 051E  
                                            u114_21 051D                                              i1l2474 0CC5  
                                            i1l2490 0E2E                                              i1l2482 0E1F  
                                            i1l2562 0CD1                                              i1l2730 0FB1  
                                            i1l2706 0CF1                                              i1l2714 0D7E  
                                            i1l2546 0D80                                              i1l2570 0D51  
                                            i1l3370 001D                                              i1l3362 0006  
                                            i1l2476 0CC2                                              i1l2484 0E21  
                                            i1l2492 0CC8                                              i1l2556 0CCB  
                                            i1l2564 0CED                                              i1l2740 0FC9  
                                            i1l2732 0FBD                                              i1l2724 0FA6  
                                            i1l2708 0CF3                                              i1l2548 0D86  
                                            i1l2572 0D53                                              i1l3372 0022  
                                            i1l3364 000A                                              i1l2494 0CDD  
                                            i1l2478 0CE1                                              i1l2486 0E28  
                                            i1l2566 0CCE                                              i1l2742 0FCC  
                                            i1l2734 0FC0                                              i1l2726 0FA6  
                                            i1l2718 0D47                                              i1l2750 06F1  
                                            i1l3374 002B                                              i1l3366 000F  
                                            i1l2488 0E2B                                              i1l2736 0FC5  
                                            i1l2744 0FD0                                              i1l2728 0FAD  
                                            i1l2760 0710                                              i1l2752 06F9  
                                            i1l2568 0D4E                                              u115_20 0526  
                                            i1l3376 0030                                              i1l3368 0014  
                                            u115_21 0525                                              i1l2738 0FC6  
                                            i1l2770 0726                                              i1l2762 0716  
                                            i1l2754 0700                                              i1l2930 0510  
                                            i1l2764 071A                                              i1l2756 0707  
                                            i1l2748 06EF                                              i1l2940 0EC2  
                                            i1l2932 0516                                              i1l2924 04FD  
                                            i1l2766 0720                                              i1l2758 070C  
                                            i1l2774 0D1D                                              i1l2782 0D23  
                                            i1l2942 0EC7                                              i1l2694 0D55  
                                            i1l2934 051E                                              i1l2926 0500  
                                            i1l2768 0723                                              i1l2776 0D1D  
                                            i1l2784 0D23                                              i1l2944 0ECA  
                                            i1l2936 0526                                              i1l2928 0508  
                                            i1l2778 0D21                                              i1l2786 0D27  
                                            i1l2946 0EDE                                              i1l2698 0D29  
                                            i1l2938 052B                                              u142_20 000A  
                                            u142_21 0009                                              u143_20 000F  
                                            u143_21 000E                                              u128_20 0DE9  
                                            u144_20 0014                                              u128_21 0DE8  
                                            u144_21 0013                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u145_20 001D                                              u145_21 001C  
                                            u146_20 0022                                              u146_21 0021  
                                            u147_20 002B                                              u147_21 002A  
                                            u148_20 0030                                              u148_21 002F  
                                            _OSCCON 0099                              __end_of_KAPS_setRelPos 0F54  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                           __end_of_I2C1_EVENT_IDLE 0CF5                             __end_of_I2C1_EVENT_NACK 0D23  
                                KAPS_getStatus@data 0028                             __end_of_I2C1_EVENT_STOP 0D88  
                             SSPA_getPOut@adc_value 0048                                           ??_SendMsg 0022  
                       __end_of_I2C1_InterruptClear 0CC8                                     ??_KAPS_StorePos 0031  
                                            ___lmul 0728                                           ??___aldiv 0074  
                                   ?_KAPS_getStatus 0070                                    __end_of_packLong 03D5  
                                _I2C1_RestartEnable 0CD4                                           ?_I2C1_ISR 0070  
                                            _parser 00B8                                   ?_EUSART_IsRxReady 0070  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 0D80                                   ?_EUSART_IsTxReady 0070  
                                 ProcessMsg@payload 00C4                                          _ProcessMsg 0068  
                                      packLong@data 002C                                   ?_CLOCK_Initialize 0070  
                                ??_EUSART_IsRxReady 0074                                     ??_KAPS_getIndex 0025  
                                ??_EUSART_IsTxReady 0074                                  ??_CLOCK_Initialize 0074  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 0D4E                                 ?_I2C1_RestartEnable 0070  
                                 ??_I2C1_WriteStart 0074             INT_SetInterruptHandler@InterruptHandler 0074  
           ADC_SetInterruptHandler@InterruptHandler 0074                                     ?_KAPS_setAbsPos 002D  
                              __end_of_KAPS_GoToIdx 0F2C                                   _SYSTEM_Initialize 0E32  
                           __end_of__initialization 0064                                     ?_KAPS_setRelPos 0070  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                     ??_I2C1_IsNack 0070                                       ??_I2C1_IsBusy 0074  
                                ?_SYSTEM_Initialize 0070                                         SendMsg@data 0020  
                                getADCValue@channel 0024                                       ??_ADC2Celsius 003C  
                              ??_I2C1_RestartEnable 0070                                      __pcstackCOMMON 0070  
                                     __end_of_Parse 0264                                        __pidataBANK0 0D71  
                                      __pidataBANK1 0E6F                                 ??_SYSTEM_Initialize 0076  
                               KAPS_setRelPos@value 0029                          ??_I2C1_ErrorInterruptClear 0070  
                                   _I2C1_IsBusy$646 0074                                          ??_I2C1_ISR 0074  
                           _ADC_GetConversionResult 0D2F                                      _OPTION_REGbits 0095  
                             __end_of_I2C1_EVENT_RX 0728                               __end_of_I2C1_EVENT_TX 0FD2  
                                           ??_Parse 0026                              ?_I2C1_InterruptsEnable 0070  
                                 _I2C1_EventHandler 04FD                           __end_of_SYSTEM_Initialize 0E45  
                                        __pbssBANK0 0052                                          __pbssBANK1 00B8  
                              __end_of_EUSART_Write 0D05                                  ?_I2C1_EventHandler 0070  
                                 KAPS_setRelPos@reg 0028                               _I2C1_StatusFlagsClear 0CE1  
                                  ?_I2C1_EVENT_IDLE 0070                                    ?_I2C1_EVENT_NACK 0070  
                                         ?_SendNack 0070                                    ?_I2C1_EVENT_STOP 0070  
                                         ?_SendSync 0070                                 ??_I2C1_EventHandler 0072  
                                        __pmaintext 0F54                                 __end_of_I2C1_IsAddr 0D5C  
                               __end_of_I2C1_IsData 0D13                                 __end_of_I2C1_IsNack 0D2F  
                                           ?___lmul 0020                                 __end_of_I2C1_IsBusy 0E0E  
                                           _ADC2Amp 0540                                             _ADC2dBm 063B  
                                        __pintentry 0004                                     _I2C1_Initialize 0E59  
                              _EUSART_AutoBaudQuery 0000                                 __end_of_ADC2Celsius 0421  
                                           _ADC_ISR 0DE1                                      ___lmul@product 0028  
                                       ?_ProcessMsg 004E                                  KAPS_setAbsPos@data 0033  
                             __end_of_I2C1_NackSend 0CF1                               __end_of_I2C1_BusReset 0CE1  
                                   _EUSART_IsTxDone 0000                                     _EUSART_ErrorGet 0000  
                                         _I2C1_Read 0EE4                           __end_of_I2C1_EventHandler 0540  
                            _I2C1_ErrorEventHandler 0EC2                                             _OSCTUNE 0098  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                           _SSP1BUF 0211                            __end_of_I2C1_EVENT_ERROR 0D29  
                          __end_of_I2C1_EVENT_RESET 0D55                                           ?_packLong 0020  
                     __end_of_I2C1_CallbackRegister 0DE1                                     KAPS_getPos@data 002F  
                             __end_of_I2C1_StopSend 0CCB                                          ??_SendNack 0076  
                                        ??_SendSync 0075                                _ADC_InterruptHandler 006B  
                                           _SendMsg 0678                             _ADC_SetInterruptHandler 0D35  
                                     ??_getADCValue 0022                                             ___aldiv 0264  
                                  KAPS_StorePos@idx 0038                                    KAPS_StorePos@reg 0037  
                                  KAPS_StorePos@pos 002D                           ??_ADC_GetConversionResult 0076  
                                           __ptext1 0E32                                             __ptext2 046D  
                                           __ptext3 0DA6                                             __ptext4 0D18  
                                           __ptext5 0E59                                             __ptext6 0D05  
                                           __ptext7 0DD5                                             __ptext8 0E87  
                                           __ptext9 0DC9                                I2C1_Write@dataLength 0023  
                               _I2C1_RestartDisable 0CD1                                    ___aldiv@dividend 0030  
                          ??_PIN_MANAGER_Initialize 0074                                          ?_I2C1_Read 0020  
                                     ?_I2C1_AckSend 0070                             _INT_SetInterruptHandler 0D18  
                                   _i2c1_eventTable 0801                                             clrloop0 0D3C  
                              end_of_initialization 0064                                          ??_packLong 0024  
                            ?_I2C1_StatusFlagsClear 0070                                             init_ram 0D41  
                                           initloop 0D42                                         _I2C1_IsAddr 0D55  
                                       _I2C1_IsData 0D0E                                         _I2C1_IsNack 0D29  
                                       _I2C1_IsBusy 0DFE                                    ??_KAPS_getStatus 0025  
                                 _EUSART_Initialize 0E87                                ?_I2C1_RestartDisable 0070  
                                  I2C1_Read@address 0020                             __end_of_I2C1_Initialize 0E6F  
                      __end_of_ADC_IsConversionDone 0D71                                         _ADC2Celsius 03D5  
                                ?_EUSART_Initialize 0070                                   KAPS_getIndex@data 0028  
                                  ___aldiv@quotient 0036                                    _I2C1_DataReceive 0CCB  
                                   _I2C1_WriteStart 0D5C                                 __end_of_getADCValue 046D  
                               ??_EUSART_Initialize 0076                                        _KAPS_GoToIdx 0F06  
                                         _SSPDATPPS 0E21                                           _SSPCLKPPS 0E20  
                                  ??_KAPS_setAbsPos 0031                                      ??_I2C1_AckSend 0070  
               __end_of_ADC_DefaultInterruptHandler 0CC2                         _ADC_DefaultInterruptHandler 0CC1  
                               _ADC_StartConversion 0CDA                                    ??_KAPS_setRelPos 0025  
                               _EUSART_Deinitialize 0000                                          _unpackLong 04B8  
                                        _unpackWord 0DBD                           __end_of_EUSART_Initialize 0EA4  
                     ??_ADC_DefaultInterruptHandler 0070                           ??_ADC_SetInterruptHandler 0076  
                             ??_I2C1_RestartDisable 0070                                      ProcessMsg@data 004E  
                              ?_ADC_StartConversion 0070                                        getADCValue@i 0027  
                      __end_of_INTERRUPT_Initialize 0DB1                                      _I2C1_ERROR_ISR 0CF5  
                                    __end_of___lmul 075C                               __end_of_KAPS_StorePos 05C0  
                                         Parse@data 0028                                       ?_SSPA_getPOut 0070  
                        __end_of_I2C1_ReceiveEnable 0CD1                                        _EUSART_Write 0D01  
                                     ?_SSPA_getTemp 0070                             __end_of_i2c1_eventTable 0813  
                                    _ADC_Initialize 0E45                                KAPS_setRelPos@offset 0027  
                         ??_INT_SetInterruptHandler 0076                             ??_I2C1_InterruptsEnable 0074  
                                     ??_KAPS_getPos 002D                                            ADC2Amp@v 003A  
                               start_initialization 0038                                       ?_SSPA_setMute 0074  
                                       ??_I2C1_Read 0075                                            ADC2dBm@v 003A  
                             __end_of_KAPS_getIndex 1000                                        SendSync@data 0075  
                                     ??_EUSART_Read 0074                             _I2C1_EVENT_SEND_RD_ADDR 0D78  
                           __end_of_I2C1_WriteStart 0D63                                    ?_I2C1_Initialize 0070  
                                 KAPS_getStatus@reg 0027                               ??_ADC_StartConversion 0074  
                           _I2C1_EVENT_SEND_WR_ADDR 0D47                                         _getADCValue 0421  
                            __end_of_I2C1_ERROR_ISR 0CF9                          _EUSART_FramingErrorHandler 0076  
                                  _I2C1_IsRxBufFull 0CE9                                            ??___lmul 0074  
                                          ?_ADC2Amp 003A                                            ?_ADC2dBm 003A  
                            __end_of_ADC_Initialize 0E59                                         __pdataBANK0 0064  
                                       __pdataBANK1 00A0                                      ??_SSPA_getPOut 0046  
                                    ??_SSPA_getTemp 0048                                            ?_ADC_ISR 0070  
                                   unpackLong@value 0020                                        ??_ProcessMsg 004F  
                           ?_I2C1_ErrorEventHandler 0070                                      ??_SSPA_setMute 0020  
                                       __pbssCOMMON 0076                                           ___latbits 0001  
                                     __pcstackBANK0 0020                                _ADC_IsConversionDone 0D6A  
                                       ?_unpackLong 0020                                 __end_of_KAPS_getPos 05FE  
                                       ?_unpackWord 0020                           ?_I2C1_ErrorInterruptClear 0070  
                      __end_of_I2C1_DefaultCallback 0003                                   ?_I2C1_EVENT_ERROR 0070  
                                 ?_I2C1_EVENT_RESET 0070                                 __end_of_EUSART_Read 0FA6  
                                ??_I2C1_EVENT_ERROR 0070                                  ??_I2C1_EVENT_RESET 0070  
                                         __pnvBANK0 006B                                  __end_of_ProcessMsg 01AC  
                                          ?_SendMsg 0020                                __end_of_I2C1_AckSend 0CE9  
                            _PIN_MANAGER_Initialize 046D                                     ?_I2C1_ERROR_ISR 0070  
                                 ADC2Celsius@result 0044                                      _I2C1_ReadStart 0D63  
                                 _ADC_SelectChannel 0DB1                                            ?___aldiv 002C  
                                   ?_ADC_Initialize 0070                                  ?_ADC_SelectChannel 0070  
                                          _I2C1_ISR 0CF9                        ??_INTERRUPT_InterruptManager 0074  
                    __end_of_I2C1_ErrorEventHandler 0EE4                                            _BAUD1CON 019F  
                                    KAPS_getPos@reg 0033                              _EUSART_TransmitDisable 0000  
                                  SSPA_getPOut@band 004A                                            _I2C_Host 07ED  
                               ??_ADC_SelectChannel 0074                               ?_ADC_IsConversionDone 0070  
                               I2C1_Read@dataLength 0023                       I2C1_EVENT_ERROR@retEventState 0070  
                           ??_I2C1_StatusFlagsClear 0070                            __end_of_I2C1_DataReceive 0CCE  
                         ??_I2C1_EVENT_SEND_RD_ADDR 0070                                    _EUSART_IsRxReady 0D13  
                              _INTERRUPT_Initialize 0DA6                                     unpackWord@value 0020  
                                  _EUSART_IsTxReady 0DEF                                     ___aldiv@divisor 002C  
                                  _CLOCK_Initialize 0D88                                      _I2C1_StartSend 0CD7  
                                   ___aldiv@counter 0034                                        ?_I2C1_IsAddr 0070  
                                      ?_I2C1_IsData 0070                                            _LATCbits 010E  
                                      ?_I2C1_IsNack 0070                           ??_I2C1_EVENT_SEND_WR_ADDR 0071  
                                      ?_I2C1_IsBusy 0070                               _I2C1_CallbackRegister 0DD5  
                                         clear_ram0 0D3B                                            _PIE1bits 0090  
                                          _PIE2bits 0091                                    ?_I2C1_WriteStart 0070  
                                 _eusartRxLastError 0060                                          _I2C1_Close 0E1F  
                            __end_of_I2C1_ReadStart 0D6A                           __end_of_ADC_SelectChannel 0DBD  
                                      ?_ADC2Celsius 003A                                            _PIR1bits 0010  
                                          _PIR2bits 0011                                          _I2C1_Write 0EA4  
                                  KAPS_getIndex@reg 0027                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                  KAPS_getPos@F9702 00C0                                    SSPA_getTemp@band 004D  
                                        _ADCON0bits 009D                            ADC_SelectChannel@channel 0075  
                                       _KAPS_getPos 05C0                        I2C1_EVENT_NACK@retEventState 0070  
                                     _I2C1_EVENT_RX 06EF                                       _I2C1_EVENT_TX 0FA6  
                                       _EUSART_Read 0F7C                                   ___lmul@multiplier 0020  
                             ?_INTERRUPT_Initialize 0070                              __end_of_I2C1_StartSend 0CDA  
                              __end_of_SSPA_getPOut 037E                                __end_of_SSPA_getTemp 063B  
                               _I2C1_InterruptClear 0CC5                                            _SendNack 0D90  
                                          _SendSync 0E0E                                __end_of_SSPA_setMute 06EF  
                                   ?_I2C1_ReadStart 0070                            ?_ADC_GetConversionResult 0074  
                             _EUSART_IsTxReady$1324 0074                                      unpackLong@data 0024  
                                     _I2C1_Callback 0062                                   KAPS_StorePos@data 0033  
                              _I2C1_DefaultCallback 0002                                     KAPS_GoToIdx@idx 0027  
                                   KAPS_GoToIdx@reg 0028                                ?_I2C1_InterruptClear 0070  
                                     _I2C1_NackSend 0CED                              ??_ADC_IsConversionDone 0074  
                                     _I2C1_BusReset 0CDD                                   ??_I2C1_EVENT_IDLE 0070  
                                 ??_I2C1_EVENT_NACK 0070                                   ??_I2C1_EVENT_STOP 0070  
                     __end_of_I2C1_InterruptsEnable 0D09                                      ?_I2C1_EVENT_RX 0070  
                                    ?_I2C1_EVENT_TX 0070                                    ADC2Celsius@value 0040  
                                     _I2C1_ErrorGet 0000                                  _EUSART_AutoBaudSet 0000  
                                          __ptext10 0D9B                                            __ptext11 0D88  
                                          __ptext20 0421                                            __ptext12 0E45  
                                          __ptext21 0CDA                                            __ptext13 0D35  
                                          __ptext30 075C                                            __ptext22 0DB1  
                                          __ptext14 0068                                            __ptext31 07BF  
                                          __ptext23 0D6A                                            __ptext15 0DBD  
                                          __ptext40 0EA4                                            __ptext32 05C0  
                                          __ptext24 0D2F                                            __ptext16 06B4  
                                          __ptext41 0D5C                                            __ptext33 037E  
                                          __ptext25 063B                                            __ptext17 05FE  
                                          __ptext50 0F7C                                            __ptext42 0CD7  
                                          __ptext34 0FD2                                            __ptext26 0540  
                                          __ptext18 03D5                                            __ptext51 0CFD  
                                          __ptext43 0DFE                                            __ptext35 0EE4  
                                          __ptext27 0728                                            __ptext19 02F4  
                                          __ptext60 0CF5                                            __ptext52 0003  
                                          __ptext44 01AC                                            __ptext36 0D63  
                                          __ptext28 0264                                            __ptext61 0EC2  
                                          __ptext53 0D13                                            __ptext45 0D90  
                                          __ptext37 0580                                            __ptext29 0F2C  
                                          __ptext70 0FA6                                            __ptext62 0D4E  
                                          __ptext46 0678                                            __ptext38 04B8  
                                          __ptext71 0CD4                                            __ptext63 0D80  
                                          __ptext55 0CF9                                            __ptext47 0E0E  
                                          __ptext39 0F06                                            __ptext80 0E1F  
                                          __ptext72 0D09                                            __ptext64 0D23  
                                          __ptext56 04FD                                            __ptext48 0D01  
                                          __ptext81 0CE1                                            __ptext73 0CD1  
                                          __ptext65 0D1D                                            __ptext57 0D29  
                                          __ptext49 0DEF                                            __ptext82 0CC5  
                                          __ptext74 0CCE                                            __ptext66 06EF  
                                          __ptext58 0D0E                                            __ptext83 0CC2  
                                          __ptext75 0CED                                            __ptext67 0D47  
                                          __ptext59 0D55                                            __ptext84 0CDD  
                                          __ptext76 0CE9                                            __ptext68 0D78  
                                          __ptext85 0002                                            __ptext77 0CCB  
                                          __ptext69 0CF1                                            __ptext86 0DE1  
                                          __ptext78 0CE5                                            __ptext87 0CC1  
                                          __ptext79 0CC8                            __end_of_I2C1_IsRxBufFull 0CED  
                                      _SSP1CON1bits 0215                                        _SSP1CON2bits 0216  
                       __end_of_I2C1_RestartDisable 0CD4                                  _I2C1_ReceiveEnable 0CCE  
                                   ?_I2C1_StartSend 0070                               _EUSART_TransmitEnable 0000  
                                          _packLong 037E                              ?_I2C1_CallbackRegister 0074  
                                    unpackWord@data 0022                                 ?_I2C1_ReceiveEnable 0070  
                                  _parserDataBuffer 00CA                                         ?_I2C1_Close 0070  
                                     _I2C1_StopSend 0CC8                                        ?_getADCValue 0020  
                                        _RC1STAbits 019D                                         ?_I2C1_Write 0020  
                                          int$flags 007E                  __end_of_INTERRUPT_InterruptManager 0036  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 0DA6  
             ??_EUSART_FramingErrorCallbackRegister 0076                ?_EUSART_FramingErrorCallbackRegister 0074  
               _EUSART_FramingErrorCallbackRegister 0D9B                               ?_I2C1_DefaultCallback 0070  
                                          main@data 0051                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0070                    __end_of_I2C1_ErrorInterruptClear 0CC5  
                             SSPA_getTemp@adc_value 004A                                      ?_I2C1_NackSend 0070  
                                    ?_I2C1_BusReset 0070                                ??_I2C1_ReceiveEnable 0070  
                                    packLong@result 0028                                          _INTCONbits 000B  
                                      _I2C1_AckSend 0CE5                                _INT_InterruptHandler 0078  
                            ??_INTERRUPT_Initialize 0076                                        ??_unpackLong 0025  
                        I2C1_EVENT_RX@retEventState 0071                            ?_ADC_SetInterruptHandler 0074  
                                      ??_unpackWord 0074                                            intlevel1 0000  
                       __end_of_ADC_StartConversion 0CDD                                    ??_I2C1_ERROR_ISR 0074  
                                I2C1_Read@retStatus 0075                             ?_PIN_MANAGER_Initialize 0070  
                        __end_of_I2C1_RestartEnable 0CD7          __end_of_EUSART_DefaultFramingErrorCallback 0004  
              ??_EUSART_DefaultFramingErrorCallback 0074                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 0003                     __end_of_ADC_GetConversionResult 0D35  
                                    ?_I2C1_StopSend 0070                                    ??_ADC_Initialize 0076  
                                     I2C1_Read@data 0022                            ?_INT_SetInterruptHandler 0074  
                          __end_of_EUSART_IsRxReady 0D18                            __end_of_EUSART_IsTxReady 0DFE  
                                __end_of_unpackLong 04FD                            __end_of_CLOCK_Initialize 0D90  
                                __end_of_unpackWord 0DC9                                       __pstringtext1 078F  
                                     __pstringtext2 07ED                                       __pstringtext3 0801  
                                     ADC2Amp@result 0042                                     ??_I2C1_EVENT_RX 0070  
                                   ??_I2C1_EVENT_TX 0071                                        ___aldiv@sign 0035  
                                 _I2C1_DataTransmit 0D09                                          _TX1STAbits 019E  
                                ?_I2C1_DataTransmit 0070                                 SSPA_getTemp@channel 004C  
                                      ADC2Amp@value 003E                                   ?_I2C1_DataReceive 0070  
                                EUSART_Write@txData 0074                                       SendNack@error 0025  
                    __end_of_PIN_MANAGER_Initialize 04B8                       __end_of_I2C1_StatusFlagsClear 0CE5  
                                ??_I2C1_DataReceive 0070                                        ADC2Celsius@v 003A  
                        I2C1_EVENT_TX@retEventState 0071                                 ??_I2C1_DataTransmit 0070  
