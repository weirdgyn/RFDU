

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 09 15:59:59 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF1618
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	text51,local,class=CODE,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,merge=1,delta=2
    84                           	psect	text56,local,class=CODE,merge=1,delta=2
    85                           	psect	text57,local,class=CODE,merge=1,delta=2
    86                           	psect	text58,local,class=CODE,merge=1,delta=2
    87                           	psect	text59,local,class=CODE,merge=1,delta=2
    88                           	psect	text60,local,class=CODE,merge=1,delta=2
    89                           	psect	intentry,global,class=CODE,delta=2
    90                           	psect	text62,local,class=CODE,merge=1,delta=2
    91                           	psect	text63,local,class=CODE,merge=1,delta=2
    92                           	psect	text64,local,class=CODE,merge=1,delta=2
    93                           	psect	text65,local,class=CODE,merge=1,delta=2
    94                           	psect	text66,local,class=CODE,merge=1,delta=2
    95                           	psect	text67,local,class=CODE,merge=1,delta=2
    96                           	psect	text68,local,class=CODE,merge=1,delta=2
    97                           	psect	text69,local,class=CODE,merge=1,delta=2
    98                           	psect	text70,local,class=CODE,merge=1,delta=2
    99                           	psect	text71,local,class=CODE,merge=1,delta=2
   100                           	psect	text72,local,class=CODE,merge=1,delta=2
   101                           	psect	text73,local,class=CODE,merge=1,delta=2
   102                           	psect	text74,local,class=CODE,merge=1,delta=2
   103                           	psect	text75,local,class=CODE,merge=1,delta=2
   104                           	psect	text76,local,class=CODE,merge=1,delta=2
   105                           	psect	text77,local,class=CODE,merge=1,delta=2
   106                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text79,local,class=CODE,merge=1,delta=2
   108                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text83,local,class=CODE,merge=1,delta=2
   112                           	psect	text84,local,class=CODE,merge=1,delta=2
   113                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text87,local,class=CODE,merge=1,delta=2
   116                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   118                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text92,local,class=CODE,merge=1,delta=2
   121                           	psect	text93,local,class=CODE,merge=1,delta=2
   122                           	psect	text94,local,class=CODE,merge=1,delta=2
   123                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   124                           	dabs	1,0x7E,2
   125  0000                     
   126                           ; Generated 07/09/2023 GMT
   127                           ; 
   128                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution. Publication is not required when
   142                           ;        this file is used in an embedded application.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC16LF1618 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  0118                     	;# 
   224  0119                     	;# 
   225  011C                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  018E                     	;# 
   229  0191                     	;# 
   230  0191                     	;# 
   231  0192                     	;# 
   232  0193                     	;# 
   233  0193                     	;# 
   234  0194                     	;# 
   235  0195                     	;# 
   236  0196                     	;# 
   237  0199                     	;# 
   238  0199                     	;# 
   239  0199                     	;# 
   240  019A                     	;# 
   241  019A                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019B                     	;# 
   248  019C                     	;# 
   249  019C                     	;# 
   250  019C                     	;# 
   251  019D                     	;# 
   252  019D                     	;# 
   253  019D                     	;# 
   254  019E                     	;# 
   255  019E                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  019F                     	;# 
   261  019F                     	;# 
   262  020C                     	;# 
   263  020D                     	;# 
   264  020E                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0213                     	;# 
   271  0214                     	;# 
   272  0214                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0216                     	;# 
   278  0216                     	;# 
   279  0217                     	;# 
   280  0217                     	;# 
   281  028C                     	;# 
   282  028D                     	;# 
   283  028E                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0294                     	;# 
   289  0298                     	;# 
   290  0298                     	;# 
   291  0299                     	;# 
   292  029A                     	;# 
   293  029B                     	;# 
   294  029E                     	;# 
   295  030C                     	;# 
   296  030D                     	;# 
   297  030E                     	;# 
   298  038C                     	;# 
   299  038D                     	;# 
   300  038E                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  0393                     	;# 
   304  0394                     	;# 
   305  0395                     	;# 
   306  0396                     	;# 
   307  0397                     	;# 
   308  0398                     	;# 
   309  0399                     	;# 
   310  040E                     	;# 
   311  0413                     	;# 
   312  0413                     	;# 
   313  0414                     	;# 
   314  0414                     	;# 
   315  0415                     	;# 
   316  0416                     	;# 
   317  0417                     	;# 
   318  0418                     	;# 
   319  041A                     	;# 
   320  041A                     	;# 
   321  041B                     	;# 
   322  041B                     	;# 
   323  041C                     	;# 
   324  041D                     	;# 
   325  041E                     	;# 
   326  041F                     	;# 
   327  0493                     	;# 
   328  0494                     	;# 
   329  0495                     	;# 
   330  0496                     	;# 
   331  049A                     	;# 
   332  049B                     	;# 
   333  049C                     	;# 
   334  049D                     	;# 
   335  058C                     	;# 
   336  058C                     	;# 
   337  058D                     	;# 
   338  058E                     	;# 
   339  058E                     	;# 
   340  058F                     	;# 
   341  0590                     	;# 
   342  0590                     	;# 
   343  0591                     	;# 
   344  0592                     	;# 
   345  0592                     	;# 
   346  0593                     	;# 
   347  0594                     	;# 
   348  0594                     	;# 
   349  0595                     	;# 
   350  0596                     	;# 
   351  0596                     	;# 
   352  0597                     	;# 
   353  0598                     	;# 
   354  0599                     	;# 
   355  059A                     	;# 
   356  059B                     	;# 
   357  059B                     	;# 
   358  059C                     	;# 
   359  059D                     	;# 
   360  060C                     	;# 
   361  060C                     	;# 
   362  060D                     	;# 
   363  060E                     	;# 
   364  060F                     	;# 
   365  060F                     	;# 
   366  0610                     	;# 
   367  0611                     	;# 
   368  0612                     	;# 
   369  0613                     	;# 
   370  0614                     	;# 
   371  0617                     	;# 
   372  0617                     	;# 
   373  0618                     	;# 
   374  0619                     	;# 
   375  061A                     	;# 
   376  061A                     	;# 
   377  061B                     	;# 
   378  061C                     	;# 
   379  0691                     	;# 
   380  0692                     	;# 
   381  0693                     	;# 
   382  0694                     	;# 
   383  0695                     	;# 
   384  0696                     	;# 
   385  0697                     	;# 
   386  0699                     	;# 
   387  069A                     	;# 
   388  0711                     	;# 
   389  0712                     	;# 
   390  0713                     	;# 
   391  0714                     	;# 
   392  0715                     	;# 
   393  0718                     	;# 
   394  0718                     	;# 
   395  0719                     	;# 
   396  071A                     	;# 
   397  071A                     	;# 
   398  071B                     	;# 
   399  071C                     	;# 
   400  071D                     	;# 
   401  0791                     	;# 
   402  0791                     	;# 
   403  0792                     	;# 
   404  0793                     	;# 
   405  0793                     	;# 
   406  0794                     	;# 
   407  0795                     	;# 
   408  0795                     	;# 
   409  0796                     	;# 
   410  0797                     	;# 
   411  0797                     	;# 
   412  0798                     	;# 
   413  0799                     	;# 
   414  079A                     	;# 
   415  080C                     	;# 
   416  080C                     	;# 
   417  080D                     	;# 
   418  080E                     	;# 
   419  080E                     	;# 
   420  080F                     	;# 
   421  0810                     	;# 
   422  0810                     	;# 
   423  0811                     	;# 
   424  0812                     	;# 
   425  0812                     	;# 
   426  0813                     	;# 
   427  0814                     	;# 
   428  0815                     	;# 
   429  0816                     	;# 
   430  0817                     	;# 
   431  0818                     	;# 
   432  0819                     	;# 
   433  081A                     	;# 
   434  081A                     	;# 
   435  081B                     	;# 
   436  081C                     	;# 
   437  081C                     	;# 
   438  081D                     	;# 
   439  088C                     	;# 
   440  088D                     	;# 
   441  088E                     	;# 
   442  088F                     	;# 
   443  088F                     	;# 
   444  0890                     	;# 
   445  0891                     	;# 
   446  0892                     	;# 
   447  0893                     	;# 
   448  0893                     	;# 
   449  0894                     	;# 
   450  0895                     	;# 
   451  0896                     	;# 
   452  0897                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  0D8C                     	;# 
   457  0D8C                     	;# 
   458  0D8D                     	;# 
   459  0D8E                     	;# 
   460  0D8F                     	;# 
   461  0D8F                     	;# 
   462  0D90                     	;# 
   463  0D91                     	;# 
   464  0D92                     	;# 
   465  0D92                     	;# 
   466  0D93                     	;# 
   467  0D94                     	;# 
   468  0D95                     	;# 
   469  0D95                     	;# 
   470  0D96                     	;# 
   471  0D97                     	;# 
   472  0D98                     	;# 
   473  0D99                     	;# 
   474  0D9A                     	;# 
   475  0D9B                     	;# 
   476  0D9C                     	;# 
   477  0D9D                     	;# 
   478  0D9E                     	;# 
   479  0D9E                     	;# 
   480  0D9F                     	;# 
   481  0DA0                     	;# 
   482  0DA1                     	;# 
   483  0DA1                     	;# 
   484  0DA2                     	;# 
   485  0DA3                     	;# 
   486  0DA4                     	;# 
   487  0DA4                     	;# 
   488  0DA5                     	;# 
   489  0DA6                     	;# 
   490  0DA7                     	;# 
   491  0DA7                     	;# 
   492  0DA8                     	;# 
   493  0DA9                     	;# 
   494  0DAA                     	;# 
   495  0DAB                     	;# 
   496  0DAC                     	;# 
   497  0DAD                     	;# 
   498  0DAE                     	;# 
   499  0DAF                     	;# 
   500  0E0F                     	;# 
   501  0E10                     	;# 
   502  0E11                     	;# 
   503  0E12                     	;# 
   504  0E13                     	;# 
   505  0E14                     	;# 
   506  0E15                     	;# 
   507  0E16                     	;# 
   508  0E17                     	;# 
   509  0E17                     	;# 
   510  0E18                     	;# 
   511  0E18                     	;# 
   512  0E19                     	;# 
   513  0E1A                     	;# 
   514  0E1B                     	;# 
   515  0E1B                     	;# 
   516  0E1C                     	;# 
   517  0E1D                     	;# 
   518  0E1E                     	;# 
   519  0E1E                     	;# 
   520  0E1F                     	;# 
   521  0E20                     	;# 
   522  0E21                     	;# 
   523  0E22                     	;# 
   524  0E23                     	;# 
   525  0E24                     	;# 
   526  0E25                     	;# 
   527  0E26                     	;# 
   528  0E27                     	;# 
   529  0E28                     	;# 
   530  0E29                     	;# 
   531  0E2A                     	;# 
   532  0E2B                     	;# 
   533  0E2C                     	;# 
   534  0E2D                     	;# 
   535  0E2E                     	;# 
   536  0E90                     	;# 
   537  0E91                     	;# 
   538  0E92                     	;# 
   539  0E94                     	;# 
   540  0E95                     	;# 
   541  0E9C                     	;# 
   542  0E9D                     	;# 
   543  0E9E                     	;# 
   544  0E9F                     	;# 
   545  0EA0                     	;# 
   546  0EA1                     	;# 
   547  0EA2                     	;# 
   548  0EA3                     	;# 
   549  0EA4                     	;# 
   550  0EA5                     	;# 
   551  0EA6                     	;# 
   552  0EA7                     	;# 
   553  0F0F                     	;# 
   554  0F10                     	;# 
   555  0F11                     	;# 
   556  0F12                     	;# 
   557  0F13                     	;# 
   558  0F14                     	;# 
   559  0F15                     	;# 
   560  0F16                     	;# 
   561  0F17                     	;# 
   562  0F18                     	;# 
   563  0F19                     	;# 
   564  0F1A                     	;# 
   565  0F1B                     	;# 
   566  0F1C                     	;# 
   567  0F1D                     	;# 
   568  0F1E                     	;# 
   569  0F1F                     	;# 
   570  0F20                     	;# 
   571  0F21                     	;# 
   572  0F22                     	;# 
   573  0F23                     	;# 
   574  0FE4                     	;# 
   575  0FE5                     	;# 
   576  0FE6                     	;# 
   577  0FE7                     	;# 
   578  0FE8                     	;# 
   579  0FE9                     	;# 
   580  0FEA                     	;# 
   581  0FEB                     	;# 
   582  0FED                     	;# 
   583  0FEE                     	;# 
   584  0FEF                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0008                     	;# 
   594  0009                     	;# 
   595  000A                     	;# 
   596  000B                     	;# 
   597  000C                     	;# 
   598  000D                     	;# 
   599  000E                     	;# 
   600  0010                     	;# 
   601  0011                     	;# 
   602  0012                     	;# 
   603  0013                     	;# 
   604  0014                     	;# 
   605  0015                     	;# 
   606  0016                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001B                     	;# 
   615  001C                     	;# 
   616  001D                     	;# 
   617  001E                     	;# 
   618  001F                     	;# 
   619  008C                     	;# 
   620  008D                     	;# 
   621  008E                     	;# 
   622  0090                     	;# 
   623  0091                     	;# 
   624  0092                     	;# 
   625  0093                     	;# 
   626  0094                     	;# 
   627  0095                     	;# 
   628  0096                     	;# 
   629  0098                     	;# 
   630  0099                     	;# 
   631  009A                     	;# 
   632  009B                     	;# 
   633  009B                     	;# 
   634  009C                     	;# 
   635  009D                     	;# 
   636  009E                     	;# 
   637  009F                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  010E                     	;# 
   641  0111                     	;# 
   642  0112                     	;# 
   643  0113                     	;# 
   644  0114                     	;# 
   645  0115                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  0118                     	;# 
   649  0119                     	;# 
   650  011C                     	;# 
   651  018C                     	;# 
   652  018D                     	;# 
   653  018E                     	;# 
   654  0191                     	;# 
   655  0191                     	;# 
   656  0192                     	;# 
   657  0193                     	;# 
   658  0193                     	;# 
   659  0194                     	;# 
   660  0195                     	;# 
   661  0196                     	;# 
   662  0199                     	;# 
   663  0199                     	;# 
   664  0199                     	;# 
   665  019A                     	;# 
   666  019A                     	;# 
   667  019A                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019C                     	;# 
   674  019C                     	;# 
   675  019C                     	;# 
   676  019D                     	;# 
   677  019D                     	;# 
   678  019D                     	;# 
   679  019E                     	;# 
   680  019E                     	;# 
   681  019E                     	;# 
   682  019F                     	;# 
   683  019F                     	;# 
   684  019F                     	;# 
   685  019F                     	;# 
   686  019F                     	;# 
   687  020C                     	;# 
   688  020D                     	;# 
   689  020E                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  028C                     	;# 
   707  028D                     	;# 
   708  028E                     	;# 
   709  0291                     	;# 
   710  0291                     	;# 
   711  0292                     	;# 
   712  0293                     	;# 
   713  0294                     	;# 
   714  0298                     	;# 
   715  0298                     	;# 
   716  0299                     	;# 
   717  029A                     	;# 
   718  029B                     	;# 
   719  029E                     	;# 
   720  030C                     	;# 
   721  030D                     	;# 
   722  030E                     	;# 
   723  038C                     	;# 
   724  038D                     	;# 
   725  038E                     	;# 
   726  0391                     	;# 
   727  0392                     	;# 
   728  0393                     	;# 
   729  0394                     	;# 
   730  0395                     	;# 
   731  0396                     	;# 
   732  0397                     	;# 
   733  0398                     	;# 
   734  0399                     	;# 
   735  040E                     	;# 
   736  0413                     	;# 
   737  0413                     	;# 
   738  0414                     	;# 
   739  0414                     	;# 
   740  0415                     	;# 
   741  0416                     	;# 
   742  0417                     	;# 
   743  0418                     	;# 
   744  041A                     	;# 
   745  041A                     	;# 
   746  041B                     	;# 
   747  041B                     	;# 
   748  041C                     	;# 
   749  041D                     	;# 
   750  041E                     	;# 
   751  041F                     	;# 
   752  0493                     	;# 
   753  0494                     	;# 
   754  0495                     	;# 
   755  0496                     	;# 
   756  049A                     	;# 
   757  049B                     	;# 
   758  049C                     	;# 
   759  049D                     	;# 
   760  058C                     	;# 
   761  058C                     	;# 
   762  058D                     	;# 
   763  058E                     	;# 
   764  058E                     	;# 
   765  058F                     	;# 
   766  0590                     	;# 
   767  0590                     	;# 
   768  0591                     	;# 
   769  0592                     	;# 
   770  0592                     	;# 
   771  0593                     	;# 
   772  0594                     	;# 
   773  0594                     	;# 
   774  0595                     	;# 
   775  0596                     	;# 
   776  0596                     	;# 
   777  0597                     	;# 
   778  0598                     	;# 
   779  0599                     	;# 
   780  059A                     	;# 
   781  059B                     	;# 
   782  059B                     	;# 
   783  059C                     	;# 
   784  059D                     	;# 
   785  060C                     	;# 
   786  060C                     	;# 
   787  060D                     	;# 
   788  060E                     	;# 
   789  060F                     	;# 
   790  060F                     	;# 
   791  0610                     	;# 
   792  0611                     	;# 
   793  0612                     	;# 
   794  0613                     	;# 
   795  0614                     	;# 
   796  0617                     	;# 
   797  0617                     	;# 
   798  0618                     	;# 
   799  0619                     	;# 
   800  061A                     	;# 
   801  061A                     	;# 
   802  061B                     	;# 
   803  061C                     	;# 
   804  0691                     	;# 
   805  0692                     	;# 
   806  0693                     	;# 
   807  0694                     	;# 
   808  0695                     	;# 
   809  0696                     	;# 
   810  0697                     	;# 
   811  0699                     	;# 
   812  069A                     	;# 
   813  0711                     	;# 
   814  0712                     	;# 
   815  0713                     	;# 
   816  0714                     	;# 
   817  0715                     	;# 
   818  0718                     	;# 
   819  0718                     	;# 
   820  0719                     	;# 
   821  071A                     	;# 
   822  071A                     	;# 
   823  071B                     	;# 
   824  071C                     	;# 
   825  071D                     	;# 
   826  0791                     	;# 
   827  0791                     	;# 
   828  0792                     	;# 
   829  0793                     	;# 
   830  0793                     	;# 
   831  0794                     	;# 
   832  0795                     	;# 
   833  0795                     	;# 
   834  0796                     	;# 
   835  0797                     	;# 
   836  0797                     	;# 
   837  0798                     	;# 
   838  0799                     	;# 
   839  079A                     	;# 
   840  080C                     	;# 
   841  080C                     	;# 
   842  080D                     	;# 
   843  080E                     	;# 
   844  080E                     	;# 
   845  080F                     	;# 
   846  0810                     	;# 
   847  0810                     	;# 
   848  0811                     	;# 
   849  0812                     	;# 
   850  0812                     	;# 
   851  0813                     	;# 
   852  0814                     	;# 
   853  0815                     	;# 
   854  0816                     	;# 
   855  0817                     	;# 
   856  0818                     	;# 
   857  0819                     	;# 
   858  081A                     	;# 
   859  081A                     	;# 
   860  081B                     	;# 
   861  081C                     	;# 
   862  081C                     	;# 
   863  081D                     	;# 
   864  088C                     	;# 
   865  088D                     	;# 
   866  088E                     	;# 
   867  088F                     	;# 
   868  088F                     	;# 
   869  0890                     	;# 
   870  0891                     	;# 
   871  0892                     	;# 
   872  0893                     	;# 
   873  0893                     	;# 
   874  0894                     	;# 
   875  0895                     	;# 
   876  0896                     	;# 
   877  0897                     	;# 
   878  0897                     	;# 
   879  0898                     	;# 
   880  0899                     	;# 
   881  0D8C                     	;# 
   882  0D8C                     	;# 
   883  0D8D                     	;# 
   884  0D8E                     	;# 
   885  0D8F                     	;# 
   886  0D8F                     	;# 
   887  0D90                     	;# 
   888  0D91                     	;# 
   889  0D92                     	;# 
   890  0D92                     	;# 
   891  0D93                     	;# 
   892  0D94                     	;# 
   893  0D95                     	;# 
   894  0D95                     	;# 
   895  0D96                     	;# 
   896  0D97                     	;# 
   897  0D98                     	;# 
   898  0D99                     	;# 
   899  0D9A                     	;# 
   900  0D9B                     	;# 
   901  0D9C                     	;# 
   902  0D9D                     	;# 
   903  0D9E                     	;# 
   904  0D9E                     	;# 
   905  0D9F                     	;# 
   906  0DA0                     	;# 
   907  0DA1                     	;# 
   908  0DA1                     	;# 
   909  0DA2                     	;# 
   910  0DA3                     	;# 
   911  0DA4                     	;# 
   912  0DA4                     	;# 
   913  0DA5                     	;# 
   914  0DA6                     	;# 
   915  0DA7                     	;# 
   916  0DA7                     	;# 
   917  0DA8                     	;# 
   918  0DA9                     	;# 
   919  0DAA                     	;# 
   920  0DAB                     	;# 
   921  0DAC                     	;# 
   922  0DAD                     	;# 
   923  0DAE                     	;# 
   924  0DAF                     	;# 
   925  0E0F                     	;# 
   926  0E10                     	;# 
   927  0E11                     	;# 
   928  0E12                     	;# 
   929  0E13                     	;# 
   930  0E14                     	;# 
   931  0E15                     	;# 
   932  0E16                     	;# 
   933  0E17                     	;# 
   934  0E17                     	;# 
   935  0E18                     	;# 
   936  0E18                     	;# 
   937  0E19                     	;# 
   938  0E1A                     	;# 
   939  0E1B                     	;# 
   940  0E1B                     	;# 
   941  0E1C                     	;# 
   942  0E1D                     	;# 
   943  0E1E                     	;# 
   944  0E1E                     	;# 
   945  0E1F                     	;# 
   946  0E20                     	;# 
   947  0E21                     	;# 
   948  0E22                     	;# 
   949  0E23                     	;# 
   950  0E24                     	;# 
   951  0E25                     	;# 
   952  0E26                     	;# 
   953  0E27                     	;# 
   954  0E28                     	;# 
   955  0E29                     	;# 
   956  0E2A                     	;# 
   957  0E2B                     	;# 
   958  0E2C                     	;# 
   959  0E2D                     	;# 
   960  0E2E                     	;# 
   961  0E90                     	;# 
   962  0E91                     	;# 
   963  0E92                     	;# 
   964  0E94                     	;# 
   965  0E95                     	;# 
   966  0E9C                     	;# 
   967  0E9D                     	;# 
   968  0E9E                     	;# 
   969  0E9F                     	;# 
   970  0EA0                     	;# 
   971  0EA1                     	;# 
   972  0EA2                     	;# 
   973  0EA3                     	;# 
   974  0EA4                     	;# 
   975  0EA5                     	;# 
   976  0EA6                     	;# 
   977  0EA7                     	;# 
   978  0F0F                     	;# 
   979  0F10                     	;# 
   980  0F11                     	;# 
   981  0F12                     	;# 
   982  0F13                     	;# 
   983  0F14                     	;# 
   984  0F15                     	;# 
   985  0F16                     	;# 
   986  0F17                     	;# 
   987  0F18                     	;# 
   988  0F19                     	;# 
   989  0F1A                     	;# 
   990  0F1B                     	;# 
   991  0F1C                     	;# 
   992  0F1D                     	;# 
   993  0F1E                     	;# 
   994  0F1F                     	;# 
   995  0F20                     	;# 
   996  0F21                     	;# 
   997  0F22                     	;# 
   998  0F23                     	;# 
   999  0FE4                     	;# 
  1000  0FE5                     	;# 
  1001  0FE6                     	;# 
  1002  0FE7                     	;# 
  1003  0FE8                     	;# 
  1004  0FE9                     	;# 
  1005  0FEA                     	;# 
  1006  0FEB                     	;# 
  1007  0FED                     	;# 
  1008  0FEE                     	;# 
  1009  0FEF                     	;# 
  1010  0000                     	;# 
  1011  0001                     	;# 
  1012  0002                     	;# 
  1013  0003                     	;# 
  1014  0004                     	;# 
  1015  0005                     	;# 
  1016  0006                     	;# 
  1017  0007                     	;# 
  1018  0008                     	;# 
  1019  0009                     	;# 
  1020  000A                     	;# 
  1021  000B                     	;# 
  1022  000C                     	;# 
  1023  000D                     	;# 
  1024  000E                     	;# 
  1025  0010                     	;# 
  1026  0011                     	;# 
  1027  0012                     	;# 
  1028  0013                     	;# 
  1029  0014                     	;# 
  1030  0015                     	;# 
  1031  0016                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001A                     	;# 
  1038  001B                     	;# 
  1039  001B                     	;# 
  1040  001C                     	;# 
  1041  001D                     	;# 
  1042  001E                     	;# 
  1043  001F                     	;# 
  1044  008C                     	;# 
  1045  008D                     	;# 
  1046  008E                     	;# 
  1047  0090                     	;# 
  1048  0091                     	;# 
  1049  0092                     	;# 
  1050  0093                     	;# 
  1051  0094                     	;# 
  1052  0095                     	;# 
  1053  0096                     	;# 
  1054  0098                     	;# 
  1055  0099                     	;# 
  1056  009A                     	;# 
  1057  009B                     	;# 
  1058  009B                     	;# 
  1059  009C                     	;# 
  1060  009D                     	;# 
  1061  009E                     	;# 
  1062  009F                     	;# 
  1063  010C                     	;# 
  1064  010D                     	;# 
  1065  010E                     	;# 
  1066  0111                     	;# 
  1067  0112                     	;# 
  1068  0113                     	;# 
  1069  0114                     	;# 
  1070  0115                     	;# 
  1071  0116                     	;# 
  1072  0117                     	;# 
  1073  0118                     	;# 
  1074  0119                     	;# 
  1075  011C                     	;# 
  1076  018C                     	;# 
  1077  018D                     	;# 
  1078  018E                     	;# 
  1079  0191                     	;# 
  1080  0191                     	;# 
  1081  0192                     	;# 
  1082  0193                     	;# 
  1083  0193                     	;# 
  1084  0194                     	;# 
  1085  0195                     	;# 
  1086  0196                     	;# 
  1087  0199                     	;# 
  1088  0199                     	;# 
  1089  0199                     	;# 
  1090  019A                     	;# 
  1091  019A                     	;# 
  1092  019A                     	;# 
  1093  019B                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019C                     	;# 
  1099  019C                     	;# 
  1100  019C                     	;# 
  1101  019D                     	;# 
  1102  019D                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019E                     	;# 
  1106  019E                     	;# 
  1107  019F                     	;# 
  1108  019F                     	;# 
  1109  019F                     	;# 
  1110  019F                     	;# 
  1111  019F                     	;# 
  1112  020C                     	;# 
  1113  020D                     	;# 
  1114  020E                     	;# 
  1115  0211                     	;# 
  1116  0211                     	;# 
  1117  0212                     	;# 
  1118  0212                     	;# 
  1119  0213                     	;# 
  1120  0213                     	;# 
  1121  0214                     	;# 
  1122  0214                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  028C                     	;# 
  1132  028D                     	;# 
  1133  028E                     	;# 
  1134  0291                     	;# 
  1135  0291                     	;# 
  1136  0292                     	;# 
  1137  0293                     	;# 
  1138  0294                     	;# 
  1139  0298                     	;# 
  1140  0298                     	;# 
  1141  0299                     	;# 
  1142  029A                     	;# 
  1143  029B                     	;# 
  1144  029E                     	;# 
  1145  030C                     	;# 
  1146  030D                     	;# 
  1147  030E                     	;# 
  1148  038C                     	;# 
  1149  038D                     	;# 
  1150  038E                     	;# 
  1151  0391                     	;# 
  1152  0392                     	;# 
  1153  0393                     	;# 
  1154  0394                     	;# 
  1155  0395                     	;# 
  1156  0396                     	;# 
  1157  0397                     	;# 
  1158  0398                     	;# 
  1159  0399                     	;# 
  1160  040E                     	;# 
  1161  0413                     	;# 
  1162  0413                     	;# 
  1163  0414                     	;# 
  1164  0414                     	;# 
  1165  0415                     	;# 
  1166  0416                     	;# 
  1167  0417                     	;# 
  1168  0418                     	;# 
  1169  041A                     	;# 
  1170  041A                     	;# 
  1171  041B                     	;# 
  1172  041B                     	;# 
  1173  041C                     	;# 
  1174  041D                     	;# 
  1175  041E                     	;# 
  1176  041F                     	;# 
  1177  0493                     	;# 
  1178  0494                     	;# 
  1179  0495                     	;# 
  1180  0496                     	;# 
  1181  049A                     	;# 
  1182  049B                     	;# 
  1183  049C                     	;# 
  1184  049D                     	;# 
  1185  058C                     	;# 
  1186  058C                     	;# 
  1187  058D                     	;# 
  1188  058E                     	;# 
  1189  058E                     	;# 
  1190  058F                     	;# 
  1191  0590                     	;# 
  1192  0590                     	;# 
  1193  0591                     	;# 
  1194  0592                     	;# 
  1195  0592                     	;# 
  1196  0593                     	;# 
  1197  0594                     	;# 
  1198  0594                     	;# 
  1199  0595                     	;# 
  1200  0596                     	;# 
  1201  0596                     	;# 
  1202  0597                     	;# 
  1203  0598                     	;# 
  1204  0599                     	;# 
  1205  059A                     	;# 
  1206  059B                     	;# 
  1207  059B                     	;# 
  1208  059C                     	;# 
  1209  059D                     	;# 
  1210  060C                     	;# 
  1211  060C                     	;# 
  1212  060D                     	;# 
  1213  060E                     	;# 
  1214  060F                     	;# 
  1215  060F                     	;# 
  1216  0610                     	;# 
  1217  0611                     	;# 
  1218  0612                     	;# 
  1219  0613                     	;# 
  1220  0614                     	;# 
  1221  0617                     	;# 
  1222  0617                     	;# 
  1223  0618                     	;# 
  1224  0619                     	;# 
  1225  061A                     	;# 
  1226  061A                     	;# 
  1227  061B                     	;# 
  1228  061C                     	;# 
  1229  0691                     	;# 
  1230  0692                     	;# 
  1231  0693                     	;# 
  1232  0694                     	;# 
  1233  0695                     	;# 
  1234  0696                     	;# 
  1235  0697                     	;# 
  1236  0699                     	;# 
  1237  069A                     	;# 
  1238  0711                     	;# 
  1239  0712                     	;# 
  1240  0713                     	;# 
  1241  0714                     	;# 
  1242  0715                     	;# 
  1243  0718                     	;# 
  1244  0718                     	;# 
  1245  0719                     	;# 
  1246  071A                     	;# 
  1247  071A                     	;# 
  1248  071B                     	;# 
  1249  071C                     	;# 
  1250  071D                     	;# 
  1251  0791                     	;# 
  1252  0791                     	;# 
  1253  0792                     	;# 
  1254  0793                     	;# 
  1255  0793                     	;# 
  1256  0794                     	;# 
  1257  0795                     	;# 
  1258  0795                     	;# 
  1259  0796                     	;# 
  1260  0797                     	;# 
  1261  0797                     	;# 
  1262  0798                     	;# 
  1263  0799                     	;# 
  1264  079A                     	;# 
  1265  080C                     	;# 
  1266  080C                     	;# 
  1267  080D                     	;# 
  1268  080E                     	;# 
  1269  080E                     	;# 
  1270  080F                     	;# 
  1271  0810                     	;# 
  1272  0810                     	;# 
  1273  0811                     	;# 
  1274  0812                     	;# 
  1275  0812                     	;# 
  1276  0813                     	;# 
  1277  0814                     	;# 
  1278  0815                     	;# 
  1279  0816                     	;# 
  1280  0817                     	;# 
  1281  0818                     	;# 
  1282  0819                     	;# 
  1283  081A                     	;# 
  1284  081A                     	;# 
  1285  081B                     	;# 
  1286  081C                     	;# 
  1287  081C                     	;# 
  1288  081D                     	;# 
  1289  088C                     	;# 
  1290  088D                     	;# 
  1291  088E                     	;# 
  1292  088F                     	;# 
  1293  088F                     	;# 
  1294  0890                     	;# 
  1295  0891                     	;# 
  1296  0892                     	;# 
  1297  0893                     	;# 
  1298  0893                     	;# 
  1299  0894                     	;# 
  1300  0895                     	;# 
  1301  0896                     	;# 
  1302  0897                     	;# 
  1303  0897                     	;# 
  1304  0898                     	;# 
  1305  0899                     	;# 
  1306  0D8C                     	;# 
  1307  0D8C                     	;# 
  1308  0D8D                     	;# 
  1309  0D8E                     	;# 
  1310  0D8F                     	;# 
  1311  0D8F                     	;# 
  1312  0D90                     	;# 
  1313  0D91                     	;# 
  1314  0D92                     	;# 
  1315  0D92                     	;# 
  1316  0D93                     	;# 
  1317  0D94                     	;# 
  1318  0D95                     	;# 
  1319  0D95                     	;# 
  1320  0D96                     	;# 
  1321  0D97                     	;# 
  1322  0D98                     	;# 
  1323  0D99                     	;# 
  1324  0D9A                     	;# 
  1325  0D9B                     	;# 
  1326  0D9C                     	;# 
  1327  0D9D                     	;# 
  1328  0D9E                     	;# 
  1329  0D9E                     	;# 
  1330  0D9F                     	;# 
  1331  0DA0                     	;# 
  1332  0DA1                     	;# 
  1333  0DA1                     	;# 
  1334  0DA2                     	;# 
  1335  0DA3                     	;# 
  1336  0DA4                     	;# 
  1337  0DA4                     	;# 
  1338  0DA5                     	;# 
  1339  0DA6                     	;# 
  1340  0DA7                     	;# 
  1341  0DA7                     	;# 
  1342  0DA8                     	;# 
  1343  0DA9                     	;# 
  1344  0DAA                     	;# 
  1345  0DAB                     	;# 
  1346  0DAC                     	;# 
  1347  0DAD                     	;# 
  1348  0DAE                     	;# 
  1349  0DAF                     	;# 
  1350  0E0F                     	;# 
  1351  0E10                     	;# 
  1352  0E11                     	;# 
  1353  0E12                     	;# 
  1354  0E13                     	;# 
  1355  0E14                     	;# 
  1356  0E15                     	;# 
  1357  0E16                     	;# 
  1358  0E17                     	;# 
  1359  0E17                     	;# 
  1360  0E18                     	;# 
  1361  0E18                     	;# 
  1362  0E19                     	;# 
  1363  0E1A                     	;# 
  1364  0E1B                     	;# 
  1365  0E1B                     	;# 
  1366  0E1C                     	;# 
  1367  0E1D                     	;# 
  1368  0E1E                     	;# 
  1369  0E1E                     	;# 
  1370  0E1F                     	;# 
  1371  0E20                     	;# 
  1372  0E21                     	;# 
  1373  0E22                     	;# 
  1374  0E23                     	;# 
  1375  0E24                     	;# 
  1376  0E25                     	;# 
  1377  0E26                     	;# 
  1378  0E27                     	;# 
  1379  0E28                     	;# 
  1380  0E29                     	;# 
  1381  0E2A                     	;# 
  1382  0E2B                     	;# 
  1383  0E2C                     	;# 
  1384  0E2D                     	;# 
  1385  0E2E                     	;# 
  1386  0E90                     	;# 
  1387  0E91                     	;# 
  1388  0E92                     	;# 
  1389  0E94                     	;# 
  1390  0E95                     	;# 
  1391  0E9C                     	;# 
  1392  0E9D                     	;# 
  1393  0E9E                     	;# 
  1394  0E9F                     	;# 
  1395  0EA0                     	;# 
  1396  0EA1                     	;# 
  1397  0EA2                     	;# 
  1398  0EA3                     	;# 
  1399  0EA4                     	;# 
  1400  0EA5                     	;# 
  1401  0EA6                     	;# 
  1402  0EA7                     	;# 
  1403  0F0F                     	;# 
  1404  0F10                     	;# 
  1405  0F11                     	;# 
  1406  0F12                     	;# 
  1407  0F13                     	;# 
  1408  0F14                     	;# 
  1409  0F15                     	;# 
  1410  0F16                     	;# 
  1411  0F17                     	;# 
  1412  0F18                     	;# 
  1413  0F19                     	;# 
  1414  0F1A                     	;# 
  1415  0F1B                     	;# 
  1416  0F1C                     	;# 
  1417  0F1D                     	;# 
  1418  0F1E                     	;# 
  1419  0F1F                     	;# 
  1420  0F20                     	;# 
  1421  0F21                     	;# 
  1422  0F22                     	;# 
  1423  0F23                     	;# 
  1424  0FE4                     	;# 
  1425  0FE5                     	;# 
  1426  0FE6                     	;# 
  1427  0FE7                     	;# 
  1428  0FE8                     	;# 
  1429  0FE9                     	;# 
  1430  0FEA                     	;# 
  1431  0FEB                     	;# 
  1432  0FED                     	;# 
  1433  0FEE                     	;# 
  1434  0FEF                     	;# 
  1435  0000                     	;# 
  1436  0001                     	;# 
  1437  0002                     	;# 
  1438  0003                     	;# 
  1439  0004                     	;# 
  1440  0005                     	;# 
  1441  0006                     	;# 
  1442  0007                     	;# 
  1443  0008                     	;# 
  1444  0009                     	;# 
  1445  000A                     	;# 
  1446  000B                     	;# 
  1447  000C                     	;# 
  1448  000D                     	;# 
  1449  000E                     	;# 
  1450  0010                     	;# 
  1451  0011                     	;# 
  1452  0012                     	;# 
  1453  0013                     	;# 
  1454  0014                     	;# 
  1455  0015                     	;# 
  1456  0016                     	;# 
  1457  0016                     	;# 
  1458  0017                     	;# 
  1459  0018                     	;# 
  1460  0019                     	;# 
  1461  001A                     	;# 
  1462  001A                     	;# 
  1463  001B                     	;# 
  1464  001B                     	;# 
  1465  001C                     	;# 
  1466  001D                     	;# 
  1467  001E                     	;# 
  1468  001F                     	;# 
  1469  008C                     	;# 
  1470  008D                     	;# 
  1471  008E                     	;# 
  1472  0090                     	;# 
  1473  0091                     	;# 
  1474  0092                     	;# 
  1475  0093                     	;# 
  1476  0094                     	;# 
  1477  0095                     	;# 
  1478  0096                     	;# 
  1479  0098                     	;# 
  1480  0099                     	;# 
  1481  009A                     	;# 
  1482  009B                     	;# 
  1483  009B                     	;# 
  1484  009C                     	;# 
  1485  009D                     	;# 
  1486  009E                     	;# 
  1487  009F                     	;# 
  1488  010C                     	;# 
  1489  010D                     	;# 
  1490  010E                     	;# 
  1491  0111                     	;# 
  1492  0112                     	;# 
  1493  0113                     	;# 
  1494  0114                     	;# 
  1495  0115                     	;# 
  1496  0116                     	;# 
  1497  0117                     	;# 
  1498  0118                     	;# 
  1499  0119                     	;# 
  1500  011C                     	;# 
  1501  018C                     	;# 
  1502  018D                     	;# 
  1503  018E                     	;# 
  1504  0191                     	;# 
  1505  0191                     	;# 
  1506  0192                     	;# 
  1507  0193                     	;# 
  1508  0193                     	;# 
  1509  0194                     	;# 
  1510  0195                     	;# 
  1511  0196                     	;# 
  1512  0199                     	;# 
  1513  0199                     	;# 
  1514  0199                     	;# 
  1515  019A                     	;# 
  1516  019A                     	;# 
  1517  019A                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019B                     	;# 
  1523  019C                     	;# 
  1524  019C                     	;# 
  1525  019C                     	;# 
  1526  019D                     	;# 
  1527  019D                     	;# 
  1528  019D                     	;# 
  1529  019E                     	;# 
  1530  019E                     	;# 
  1531  019E                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  020C                     	;# 
  1538  020D                     	;# 
  1539  020E                     	;# 
  1540  0211                     	;# 
  1541  0211                     	;# 
  1542  0212                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0213                     	;# 
  1546  0214                     	;# 
  1547  0214                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0216                     	;# 
  1553  0216                     	;# 
  1554  0217                     	;# 
  1555  0217                     	;# 
  1556  028C                     	;# 
  1557  028D                     	;# 
  1558  028E                     	;# 
  1559  0291                     	;# 
  1560  0291                     	;# 
  1561  0292                     	;# 
  1562  0293                     	;# 
  1563  0294                     	;# 
  1564  0298                     	;# 
  1565  0298                     	;# 
  1566  0299                     	;# 
  1567  029A                     	;# 
  1568  029B                     	;# 
  1569  029E                     	;# 
  1570  030C                     	;# 
  1571  030D                     	;# 
  1572  030E                     	;# 
  1573  038C                     	;# 
  1574  038D                     	;# 
  1575  038E                     	;# 
  1576  0391                     	;# 
  1577  0392                     	;# 
  1578  0393                     	;# 
  1579  0394                     	;# 
  1580  0395                     	;# 
  1581  0396                     	;# 
  1582  0397                     	;# 
  1583  0398                     	;# 
  1584  0399                     	;# 
  1585  040E                     	;# 
  1586  0413                     	;# 
  1587  0413                     	;# 
  1588  0414                     	;# 
  1589  0414                     	;# 
  1590  0415                     	;# 
  1591  0416                     	;# 
  1592  0417                     	;# 
  1593  0418                     	;# 
  1594  041A                     	;# 
  1595  041A                     	;# 
  1596  041B                     	;# 
  1597  041B                     	;# 
  1598  041C                     	;# 
  1599  041D                     	;# 
  1600  041E                     	;# 
  1601  041F                     	;# 
  1602  0493                     	;# 
  1603  0494                     	;# 
  1604  0495                     	;# 
  1605  0496                     	;# 
  1606  049A                     	;# 
  1607  049B                     	;# 
  1608  049C                     	;# 
  1609  049D                     	;# 
  1610  058C                     	;# 
  1611  058C                     	;# 
  1612  058D                     	;# 
  1613  058E                     	;# 
  1614  058E                     	;# 
  1615  058F                     	;# 
  1616  0590                     	;# 
  1617  0590                     	;# 
  1618  0591                     	;# 
  1619  0592                     	;# 
  1620  0592                     	;# 
  1621  0593                     	;# 
  1622  0594                     	;# 
  1623  0594                     	;# 
  1624  0595                     	;# 
  1625  0596                     	;# 
  1626  0596                     	;# 
  1627  0597                     	;# 
  1628  0598                     	;# 
  1629  0599                     	;# 
  1630  059A                     	;# 
  1631  059B                     	;# 
  1632  059B                     	;# 
  1633  059C                     	;# 
  1634  059D                     	;# 
  1635  060C                     	;# 
  1636  060C                     	;# 
  1637  060D                     	;# 
  1638  060E                     	;# 
  1639  060F                     	;# 
  1640  060F                     	;# 
  1641  0610                     	;# 
  1642  0611                     	;# 
  1643  0612                     	;# 
  1644  0613                     	;# 
  1645  0614                     	;# 
  1646  0617                     	;# 
  1647  0617                     	;# 
  1648  0618                     	;# 
  1649  0619                     	;# 
  1650  061A                     	;# 
  1651  061A                     	;# 
  1652  061B                     	;# 
  1653  061C                     	;# 
  1654  0691                     	;# 
  1655  0692                     	;# 
  1656  0693                     	;# 
  1657  0694                     	;# 
  1658  0695                     	;# 
  1659  0696                     	;# 
  1660  0697                     	;# 
  1661  0699                     	;# 
  1662  069A                     	;# 
  1663  0711                     	;# 
  1664  0712                     	;# 
  1665  0713                     	;# 
  1666  0714                     	;# 
  1667  0715                     	;# 
  1668  0718                     	;# 
  1669  0718                     	;# 
  1670  0719                     	;# 
  1671  071A                     	;# 
  1672  071A                     	;# 
  1673  071B                     	;# 
  1674  071C                     	;# 
  1675  071D                     	;# 
  1676  0791                     	;# 
  1677  0791                     	;# 
  1678  0792                     	;# 
  1679  0793                     	;# 
  1680  0793                     	;# 
  1681  0794                     	;# 
  1682  0795                     	;# 
  1683  0795                     	;# 
  1684  0796                     	;# 
  1685  0797                     	;# 
  1686  0797                     	;# 
  1687  0798                     	;# 
  1688  0799                     	;# 
  1689  079A                     	;# 
  1690  080C                     	;# 
  1691  080C                     	;# 
  1692  080D                     	;# 
  1693  080E                     	;# 
  1694  080E                     	;# 
  1695  080F                     	;# 
  1696  0810                     	;# 
  1697  0810                     	;# 
  1698  0811                     	;# 
  1699  0812                     	;# 
  1700  0812                     	;# 
  1701  0813                     	;# 
  1702  0814                     	;# 
  1703  0815                     	;# 
  1704  0816                     	;# 
  1705  0817                     	;# 
  1706  0818                     	;# 
  1707  0819                     	;# 
  1708  081A                     	;# 
  1709  081A                     	;# 
  1710  081B                     	;# 
  1711  081C                     	;# 
  1712  081C                     	;# 
  1713  081D                     	;# 
  1714  088C                     	;# 
  1715  088D                     	;# 
  1716  088E                     	;# 
  1717  088F                     	;# 
  1718  088F                     	;# 
  1719  0890                     	;# 
  1720  0891                     	;# 
  1721  0892                     	;# 
  1722  0893                     	;# 
  1723  0893                     	;# 
  1724  0894                     	;# 
  1725  0895                     	;# 
  1726  0896                     	;# 
  1727  0897                     	;# 
  1728  0897                     	;# 
  1729  0898                     	;# 
  1730  0899                     	;# 
  1731  0D8C                     	;# 
  1732  0D8C                     	;# 
  1733  0D8D                     	;# 
  1734  0D8E                     	;# 
  1735  0D8F                     	;# 
  1736  0D8F                     	;# 
  1737  0D90                     	;# 
  1738  0D91                     	;# 
  1739  0D92                     	;# 
  1740  0D92                     	;# 
  1741  0D93                     	;# 
  1742  0D94                     	;# 
  1743  0D95                     	;# 
  1744  0D95                     	;# 
  1745  0D96                     	;# 
  1746  0D97                     	;# 
  1747  0D98                     	;# 
  1748  0D99                     	;# 
  1749  0D9A                     	;# 
  1750  0D9B                     	;# 
  1751  0D9C                     	;# 
  1752  0D9D                     	;# 
  1753  0D9E                     	;# 
  1754  0D9E                     	;# 
  1755  0D9F                     	;# 
  1756  0DA0                     	;# 
  1757  0DA1                     	;# 
  1758  0DA1                     	;# 
  1759  0DA2                     	;# 
  1760  0DA3                     	;# 
  1761  0DA4                     	;# 
  1762  0DA4                     	;# 
  1763  0DA5                     	;# 
  1764  0DA6                     	;# 
  1765  0DA7                     	;# 
  1766  0DA7                     	;# 
  1767  0DA8                     	;# 
  1768  0DA9                     	;# 
  1769  0DAA                     	;# 
  1770  0DAB                     	;# 
  1771  0DAC                     	;# 
  1772  0DAD                     	;# 
  1773  0DAE                     	;# 
  1774  0DAF                     	;# 
  1775  0E0F                     	;# 
  1776  0E10                     	;# 
  1777  0E11                     	;# 
  1778  0E12                     	;# 
  1779  0E13                     	;# 
  1780  0E14                     	;# 
  1781  0E15                     	;# 
  1782  0E16                     	;# 
  1783  0E17                     	;# 
  1784  0E17                     	;# 
  1785  0E18                     	;# 
  1786  0E18                     	;# 
  1787  0E19                     	;# 
  1788  0E1A                     	;# 
  1789  0E1B                     	;# 
  1790  0E1B                     	;# 
  1791  0E1C                     	;# 
  1792  0E1D                     	;# 
  1793  0E1E                     	;# 
  1794  0E1E                     	;# 
  1795  0E1F                     	;# 
  1796  0E20                     	;# 
  1797  0E21                     	;# 
  1798  0E22                     	;# 
  1799  0E23                     	;# 
  1800  0E24                     	;# 
  1801  0E25                     	;# 
  1802  0E26                     	;# 
  1803  0E27                     	;# 
  1804  0E28                     	;# 
  1805  0E29                     	;# 
  1806  0E2A                     	;# 
  1807  0E2B                     	;# 
  1808  0E2C                     	;# 
  1809  0E2D                     	;# 
  1810  0E2E                     	;# 
  1811  0E90                     	;# 
  1812  0E91                     	;# 
  1813  0E92                     	;# 
  1814  0E94                     	;# 
  1815  0E95                     	;# 
  1816  0E9C                     	;# 
  1817  0E9D                     	;# 
  1818  0E9E                     	;# 
  1819  0E9F                     	;# 
  1820  0EA0                     	;# 
  1821  0EA1                     	;# 
  1822  0EA2                     	;# 
  1823  0EA3                     	;# 
  1824  0EA4                     	;# 
  1825  0EA5                     	;# 
  1826  0EA6                     	;# 
  1827  0EA7                     	;# 
  1828  0F0F                     	;# 
  1829  0F10                     	;# 
  1830  0F11                     	;# 
  1831  0F12                     	;# 
  1832  0F13                     	;# 
  1833  0F14                     	;# 
  1834  0F15                     	;# 
  1835  0F16                     	;# 
  1836  0F17                     	;# 
  1837  0F18                     	;# 
  1838  0F19                     	;# 
  1839  0F1A                     	;# 
  1840  0F1B                     	;# 
  1841  0F1C                     	;# 
  1842  0F1D                     	;# 
  1843  0F1E                     	;# 
  1844  0F1F                     	;# 
  1845  0F20                     	;# 
  1846  0F21                     	;# 
  1847  0F22                     	;# 
  1848  0F23                     	;# 
  1849  0FE4                     	;# 
  1850  0FE5                     	;# 
  1851  0FE6                     	;# 
  1852  0FE7                     	;# 
  1853  0FE8                     	;# 
  1854  0FE9                     	;# 
  1855  0FEA                     	;# 
  1856  0FEB                     	;# 
  1857  0FED                     	;# 
  1858  0FEE                     	;# 
  1859  0FEF                     	;# 
  1860  0000                     	;# 
  1861  0001                     	;# 
  1862  0002                     	;# 
  1863  0003                     	;# 
  1864  0004                     	;# 
  1865  0005                     	;# 
  1866  0006                     	;# 
  1867  0007                     	;# 
  1868  0008                     	;# 
  1869  0009                     	;# 
  1870  000A                     	;# 
  1871  000B                     	;# 
  1872  000C                     	;# 
  1873  000D                     	;# 
  1874  000E                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0013                     	;# 
  1879  0014                     	;# 
  1880  0015                     	;# 
  1881  0016                     	;# 
  1882  0016                     	;# 
  1883  0017                     	;# 
  1884  0018                     	;# 
  1885  0019                     	;# 
  1886  001A                     	;# 
  1887  001A                     	;# 
  1888  001B                     	;# 
  1889  001B                     	;# 
  1890  001C                     	;# 
  1891  001D                     	;# 
  1892  001E                     	;# 
  1893  001F                     	;# 
  1894  008C                     	;# 
  1895  008D                     	;# 
  1896  008E                     	;# 
  1897  0090                     	;# 
  1898  0091                     	;# 
  1899  0092                     	;# 
  1900  0093                     	;# 
  1901  0094                     	;# 
  1902  0095                     	;# 
  1903  0096                     	;# 
  1904  0098                     	;# 
  1905  0099                     	;# 
  1906  009A                     	;# 
  1907  009B                     	;# 
  1908  009B                     	;# 
  1909  009C                     	;# 
  1910  009D                     	;# 
  1911  009E                     	;# 
  1912  009F                     	;# 
  1913  010C                     	;# 
  1914  010D                     	;# 
  1915  010E                     	;# 
  1916  0111                     	;# 
  1917  0112                     	;# 
  1918  0113                     	;# 
  1919  0114                     	;# 
  1920  0115                     	;# 
  1921  0116                     	;# 
  1922  0117                     	;# 
  1923  0118                     	;# 
  1924  0119                     	;# 
  1925  011C                     	;# 
  1926  018C                     	;# 
  1927  018D                     	;# 
  1928  018E                     	;# 
  1929  0191                     	;# 
  1930  0191                     	;# 
  1931  0192                     	;# 
  1932  0193                     	;# 
  1933  0193                     	;# 
  1934  0194                     	;# 
  1935  0195                     	;# 
  1936  0196                     	;# 
  1937  0199                     	;# 
  1938  0199                     	;# 
  1939  0199                     	;# 
  1940  019A                     	;# 
  1941  019A                     	;# 
  1942  019A                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019C                     	;# 
  1949  019C                     	;# 
  1950  019C                     	;# 
  1951  019D                     	;# 
  1952  019D                     	;# 
  1953  019D                     	;# 
  1954  019E                     	;# 
  1955  019E                     	;# 
  1956  019E                     	;# 
  1957  019F                     	;# 
  1958  019F                     	;# 
  1959  019F                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  020C                     	;# 
  1963  020D                     	;# 
  1964  020E                     	;# 
  1965  0211                     	;# 
  1966  0211                     	;# 
  1967  0212                     	;# 
  1968  0212                     	;# 
  1969  0213                     	;# 
  1970  0213                     	;# 
  1971  0214                     	;# 
  1972  0214                     	;# 
  1973  0215                     	;# 
  1974  0215                     	;# 
  1975  0215                     	;# 
  1976  0215                     	;# 
  1977  0216                     	;# 
  1978  0216                     	;# 
  1979  0217                     	;# 
  1980  0217                     	;# 
  1981  028C                     	;# 
  1982  028D                     	;# 
  1983  028E                     	;# 
  1984  0291                     	;# 
  1985  0291                     	;# 
  1986  0292                     	;# 
  1987  0293                     	;# 
  1988  0294                     	;# 
  1989  0298                     	;# 
  1990  0298                     	;# 
  1991  0299                     	;# 
  1992  029A                     	;# 
  1993  029B                     	;# 
  1994  029E                     	;# 
  1995  030C                     	;# 
  1996  030D                     	;# 
  1997  030E                     	;# 
  1998  038C                     	;# 
  1999  038D                     	;# 
  2000  038E                     	;# 
  2001  0391                     	;# 
  2002  0392                     	;# 
  2003  0393                     	;# 
  2004  0394                     	;# 
  2005  0395                     	;# 
  2006  0396                     	;# 
  2007  0397                     	;# 
  2008  0398                     	;# 
  2009  0399                     	;# 
  2010  040E                     	;# 
  2011  0413                     	;# 
  2012  0413                     	;# 
  2013  0414                     	;# 
  2014  0414                     	;# 
  2015  0415                     	;# 
  2016  0416                     	;# 
  2017  0417                     	;# 
  2018  0418                     	;# 
  2019  041A                     	;# 
  2020  041A                     	;# 
  2021  041B                     	;# 
  2022  041B                     	;# 
  2023  041C                     	;# 
  2024  041D                     	;# 
  2025  041E                     	;# 
  2026  041F                     	;# 
  2027  0493                     	;# 
  2028  0494                     	;# 
  2029  0495                     	;# 
  2030  0496                     	;# 
  2031  049A                     	;# 
  2032  049B                     	;# 
  2033  049C                     	;# 
  2034  049D                     	;# 
  2035  058C                     	;# 
  2036  058C                     	;# 
  2037  058D                     	;# 
  2038  058E                     	;# 
  2039  058E                     	;# 
  2040  058F                     	;# 
  2041  0590                     	;# 
  2042  0590                     	;# 
  2043  0591                     	;# 
  2044  0592                     	;# 
  2045  0592                     	;# 
  2046  0593                     	;# 
  2047  0594                     	;# 
  2048  0594                     	;# 
  2049  0595                     	;# 
  2050  0596                     	;# 
  2051  0596                     	;# 
  2052  0597                     	;# 
  2053  0598                     	;# 
  2054  0599                     	;# 
  2055  059A                     	;# 
  2056  059B                     	;# 
  2057  059B                     	;# 
  2058  059C                     	;# 
  2059  059D                     	;# 
  2060  060C                     	;# 
  2061  060C                     	;# 
  2062  060D                     	;# 
  2063  060E                     	;# 
  2064  060F                     	;# 
  2065  060F                     	;# 
  2066  0610                     	;# 
  2067  0611                     	;# 
  2068  0612                     	;# 
  2069  0613                     	;# 
  2070  0614                     	;# 
  2071  0617                     	;# 
  2072  0617                     	;# 
  2073  0618                     	;# 
  2074  0619                     	;# 
  2075  061A                     	;# 
  2076  061A                     	;# 
  2077  061B                     	;# 
  2078  061C                     	;# 
  2079  0691                     	;# 
  2080  0692                     	;# 
  2081  0693                     	;# 
  2082  0694                     	;# 
  2083  0695                     	;# 
  2084  0696                     	;# 
  2085  0697                     	;# 
  2086  0699                     	;# 
  2087  069A                     	;# 
  2088  0711                     	;# 
  2089  0712                     	;# 
  2090  0713                     	;# 
  2091  0714                     	;# 
  2092  0715                     	;# 
  2093  0718                     	;# 
  2094  0718                     	;# 
  2095  0719                     	;# 
  2096  071A                     	;# 
  2097  071A                     	;# 
  2098  071B                     	;# 
  2099  071C                     	;# 
  2100  071D                     	;# 
  2101  0791                     	;# 
  2102  0791                     	;# 
  2103  0792                     	;# 
  2104  0793                     	;# 
  2105  0793                     	;# 
  2106  0794                     	;# 
  2107  0795                     	;# 
  2108  0795                     	;# 
  2109  0796                     	;# 
  2110  0797                     	;# 
  2111  0797                     	;# 
  2112  0798                     	;# 
  2113  0799                     	;# 
  2114  079A                     	;# 
  2115  080C                     	;# 
  2116  080C                     	;# 
  2117  080D                     	;# 
  2118  080E                     	;# 
  2119  080E                     	;# 
  2120  080F                     	;# 
  2121  0810                     	;# 
  2122  0810                     	;# 
  2123  0811                     	;# 
  2124  0812                     	;# 
  2125  0812                     	;# 
  2126  0813                     	;# 
  2127  0814                     	;# 
  2128  0815                     	;# 
  2129  0816                     	;# 
  2130  0817                     	;# 
  2131  0818                     	;# 
  2132  0819                     	;# 
  2133  081A                     	;# 
  2134  081A                     	;# 
  2135  081B                     	;# 
  2136  081C                     	;# 
  2137  081C                     	;# 
  2138  081D                     	;# 
  2139  088C                     	;# 
  2140  088D                     	;# 
  2141  088E                     	;# 
  2142  088F                     	;# 
  2143  088F                     	;# 
  2144  0890                     	;# 
  2145  0891                     	;# 
  2146  0892                     	;# 
  2147  0893                     	;# 
  2148  0893                     	;# 
  2149  0894                     	;# 
  2150  0895                     	;# 
  2151  0896                     	;# 
  2152  0897                     	;# 
  2153  0897                     	;# 
  2154  0898                     	;# 
  2155  0899                     	;# 
  2156  0D8C                     	;# 
  2157  0D8C                     	;# 
  2158  0D8D                     	;# 
  2159  0D8E                     	;# 
  2160  0D8F                     	;# 
  2161  0D8F                     	;# 
  2162  0D90                     	;# 
  2163  0D91                     	;# 
  2164  0D92                     	;# 
  2165  0D92                     	;# 
  2166  0D93                     	;# 
  2167  0D94                     	;# 
  2168  0D95                     	;# 
  2169  0D95                     	;# 
  2170  0D96                     	;# 
  2171  0D97                     	;# 
  2172  0D98                     	;# 
  2173  0D99                     	;# 
  2174  0D9A                     	;# 
  2175  0D9B                     	;# 
  2176  0D9C                     	;# 
  2177  0D9D                     	;# 
  2178  0D9E                     	;# 
  2179  0D9E                     	;# 
  2180  0D9F                     	;# 
  2181  0DA0                     	;# 
  2182  0DA1                     	;# 
  2183  0DA1                     	;# 
  2184  0DA2                     	;# 
  2185  0DA3                     	;# 
  2186  0DA4                     	;# 
  2187  0DA4                     	;# 
  2188  0DA5                     	;# 
  2189  0DA6                     	;# 
  2190  0DA7                     	;# 
  2191  0DA7                     	;# 
  2192  0DA8                     	;# 
  2193  0DA9                     	;# 
  2194  0DAA                     	;# 
  2195  0DAB                     	;# 
  2196  0DAC                     	;# 
  2197  0DAD                     	;# 
  2198  0DAE                     	;# 
  2199  0DAF                     	;# 
  2200  0E0F                     	;# 
  2201  0E10                     	;# 
  2202  0E11                     	;# 
  2203  0E12                     	;# 
  2204  0E13                     	;# 
  2205  0E14                     	;# 
  2206  0E15                     	;# 
  2207  0E16                     	;# 
  2208  0E17                     	;# 
  2209  0E17                     	;# 
  2210  0E18                     	;# 
  2211  0E18                     	;# 
  2212  0E19                     	;# 
  2213  0E1A                     	;# 
  2214  0E1B                     	;# 
  2215  0E1B                     	;# 
  2216  0E1C                     	;# 
  2217  0E1D                     	;# 
  2218  0E1E                     	;# 
  2219  0E1E                     	;# 
  2220  0E1F                     	;# 
  2221  0E20                     	;# 
  2222  0E21                     	;# 
  2223  0E22                     	;# 
  2224  0E23                     	;# 
  2225  0E24                     	;# 
  2226  0E25                     	;# 
  2227  0E26                     	;# 
  2228  0E27                     	;# 
  2229  0E28                     	;# 
  2230  0E29                     	;# 
  2231  0E2A                     	;# 
  2232  0E2B                     	;# 
  2233  0E2C                     	;# 
  2234  0E2D                     	;# 
  2235  0E2E                     	;# 
  2236  0E90                     	;# 
  2237  0E91                     	;# 
  2238  0E92                     	;# 
  2239  0E94                     	;# 
  2240  0E95                     	;# 
  2241  0E9C                     	;# 
  2242  0E9D                     	;# 
  2243  0E9E                     	;# 
  2244  0E9F                     	;# 
  2245  0EA0                     	;# 
  2246  0EA1                     	;# 
  2247  0EA2                     	;# 
  2248  0EA3                     	;# 
  2249  0EA4                     	;# 
  2250  0EA5                     	;# 
  2251  0EA6                     	;# 
  2252  0EA7                     	;# 
  2253  0F0F                     	;# 
  2254  0F10                     	;# 
  2255  0F11                     	;# 
  2256  0F12                     	;# 
  2257  0F13                     	;# 
  2258  0F14                     	;# 
  2259  0F15                     	;# 
  2260  0F16                     	;# 
  2261  0F17                     	;# 
  2262  0F18                     	;# 
  2263  0F19                     	;# 
  2264  0F1A                     	;# 
  2265  0F1B                     	;# 
  2266  0F1C                     	;# 
  2267  0F1D                     	;# 
  2268  0F1E                     	;# 
  2269  0F1F                     	;# 
  2270  0F20                     	;# 
  2271  0F21                     	;# 
  2272  0F22                     	;# 
  2273  0F23                     	;# 
  2274  0FE4                     	;# 
  2275  0FE5                     	;# 
  2276  0FE6                     	;# 
  2277  0FE7                     	;# 
  2278  0FE8                     	;# 
  2279  0FE9                     	;# 
  2280  0FEA                     	;# 
  2281  0FEB                     	;# 
  2282  0FED                     	;# 
  2283  0FEE                     	;# 
  2284  0FEF                     	;# 
  2285  0000                     	;# 
  2286  0001                     	;# 
  2287  0002                     	;# 
  2288  0003                     	;# 
  2289  0004                     	;# 
  2290  0005                     	;# 
  2291  0006                     	;# 
  2292  0007                     	;# 
  2293  0008                     	;# 
  2294  0009                     	;# 
  2295  000A                     	;# 
  2296  000B                     	;# 
  2297  000C                     	;# 
  2298  000D                     	;# 
  2299  000E                     	;# 
  2300  0010                     	;# 
  2301  0011                     	;# 
  2302  0012                     	;# 
  2303  0013                     	;# 
  2304  0014                     	;# 
  2305  0015                     	;# 
  2306  0016                     	;# 
  2307  0016                     	;# 
  2308  0017                     	;# 
  2309  0018                     	;# 
  2310  0019                     	;# 
  2311  001A                     	;# 
  2312  001A                     	;# 
  2313  001B                     	;# 
  2314  001B                     	;# 
  2315  001C                     	;# 
  2316  001D                     	;# 
  2317  001E                     	;# 
  2318  001F                     	;# 
  2319  008C                     	;# 
  2320  008D                     	;# 
  2321  008E                     	;# 
  2322  0090                     	;# 
  2323  0091                     	;# 
  2324  0092                     	;# 
  2325  0093                     	;# 
  2326  0094                     	;# 
  2327  0095                     	;# 
  2328  0096                     	;# 
  2329  0098                     	;# 
  2330  0099                     	;# 
  2331  009A                     	;# 
  2332  009B                     	;# 
  2333  009B                     	;# 
  2334  009C                     	;# 
  2335  009D                     	;# 
  2336  009E                     	;# 
  2337  009F                     	;# 
  2338  010C                     	;# 
  2339  010D                     	;# 
  2340  010E                     	;# 
  2341  0111                     	;# 
  2342  0112                     	;# 
  2343  0113                     	;# 
  2344  0114                     	;# 
  2345  0115                     	;# 
  2346  0116                     	;# 
  2347  0117                     	;# 
  2348  0118                     	;# 
  2349  0119                     	;# 
  2350  011C                     	;# 
  2351  018C                     	;# 
  2352  018D                     	;# 
  2353  018E                     	;# 
  2354  0191                     	;# 
  2355  0191                     	;# 
  2356  0192                     	;# 
  2357  0193                     	;# 
  2358  0193                     	;# 
  2359  0194                     	;# 
  2360  0195                     	;# 
  2361  0196                     	;# 
  2362  0199                     	;# 
  2363  0199                     	;# 
  2364  0199                     	;# 
  2365  019A                     	;# 
  2366  019A                     	;# 
  2367  019A                     	;# 
  2368  019B                     	;# 
  2369  019B                     	;# 
  2370  019B                     	;# 
  2371  019B                     	;# 
  2372  019B                     	;# 
  2373  019C                     	;# 
  2374  019C                     	;# 
  2375  019C                     	;# 
  2376  019D                     	;# 
  2377  019D                     	;# 
  2378  019D                     	;# 
  2379  019E                     	;# 
  2380  019E                     	;# 
  2381  019E                     	;# 
  2382  019F                     	;# 
  2383  019F                     	;# 
  2384  019F                     	;# 
  2385  019F                     	;# 
  2386  019F                     	;# 
  2387  020C                     	;# 
  2388  020D                     	;# 
  2389  020E                     	;# 
  2390  0211                     	;# 
  2391  0211                     	;# 
  2392  0212                     	;# 
  2393  0212                     	;# 
  2394  0213                     	;# 
  2395  0213                     	;# 
  2396  0214                     	;# 
  2397  0214                     	;# 
  2398  0215                     	;# 
  2399  0215                     	;# 
  2400  0215                     	;# 
  2401  0215                     	;# 
  2402  0216                     	;# 
  2403  0216                     	;# 
  2404  0217                     	;# 
  2405  0217                     	;# 
  2406  028C                     	;# 
  2407  028D                     	;# 
  2408  028E                     	;# 
  2409  0291                     	;# 
  2410  0291                     	;# 
  2411  0292                     	;# 
  2412  0293                     	;# 
  2413  0294                     	;# 
  2414  0298                     	;# 
  2415  0298                     	;# 
  2416  0299                     	;# 
  2417  029A                     	;# 
  2418  029B                     	;# 
  2419  029E                     	;# 
  2420  030C                     	;# 
  2421  030D                     	;# 
  2422  030E                     	;# 
  2423  038C                     	;# 
  2424  038D                     	;# 
  2425  038E                     	;# 
  2426  0391                     	;# 
  2427  0392                     	;# 
  2428  0393                     	;# 
  2429  0394                     	;# 
  2430  0395                     	;# 
  2431  0396                     	;# 
  2432  0397                     	;# 
  2433  0398                     	;# 
  2434  0399                     	;# 
  2435  040E                     	;# 
  2436  0413                     	;# 
  2437  0413                     	;# 
  2438  0414                     	;# 
  2439  0414                     	;# 
  2440  0415                     	;# 
  2441  0416                     	;# 
  2442  0417                     	;# 
  2443  0418                     	;# 
  2444  041A                     	;# 
  2445  041A                     	;# 
  2446  041B                     	;# 
  2447  041B                     	;# 
  2448  041C                     	;# 
  2449  041D                     	;# 
  2450  041E                     	;# 
  2451  041F                     	;# 
  2452  0493                     	;# 
  2453  0494                     	;# 
  2454  0495                     	;# 
  2455  0496                     	;# 
  2456  049A                     	;# 
  2457  049B                     	;# 
  2458  049C                     	;# 
  2459  049D                     	;# 
  2460  058C                     	;# 
  2461  058C                     	;# 
  2462  058D                     	;# 
  2463  058E                     	;# 
  2464  058E                     	;# 
  2465  058F                     	;# 
  2466  0590                     	;# 
  2467  0590                     	;# 
  2468  0591                     	;# 
  2469  0592                     	;# 
  2470  0592                     	;# 
  2471  0593                     	;# 
  2472  0594                     	;# 
  2473  0594                     	;# 
  2474  0595                     	;# 
  2475  0596                     	;# 
  2476  0596                     	;# 
  2477  0597                     	;# 
  2478  0598                     	;# 
  2479  0599                     	;# 
  2480  059A                     	;# 
  2481  059B                     	;# 
  2482  059B                     	;# 
  2483  059C                     	;# 
  2484  059D                     	;# 
  2485  060C                     	;# 
  2486  060C                     	;# 
  2487  060D                     	;# 
  2488  060E                     	;# 
  2489  060F                     	;# 
  2490  060F                     	;# 
  2491  0610                     	;# 
  2492  0611                     	;# 
  2493  0612                     	;# 
  2494  0613                     	;# 
  2495  0614                     	;# 
  2496  0617                     	;# 
  2497  0617                     	;# 
  2498  0618                     	;# 
  2499  0619                     	;# 
  2500  061A                     	;# 
  2501  061A                     	;# 
  2502  061B                     	;# 
  2503  061C                     	;# 
  2504  0691                     	;# 
  2505  0692                     	;# 
  2506  0693                     	;# 
  2507  0694                     	;# 
  2508  0695                     	;# 
  2509  0696                     	;# 
  2510  0697                     	;# 
  2511  0699                     	;# 
  2512  069A                     	;# 
  2513  0711                     	;# 
  2514  0712                     	;# 
  2515  0713                     	;# 
  2516  0714                     	;# 
  2517  0715                     	;# 
  2518  0718                     	;# 
  2519  0718                     	;# 
  2520  0719                     	;# 
  2521  071A                     	;# 
  2522  071A                     	;# 
  2523  071B                     	;# 
  2524  071C                     	;# 
  2525  071D                     	;# 
  2526  0791                     	;# 
  2527  0791                     	;# 
  2528  0792                     	;# 
  2529  0793                     	;# 
  2530  0793                     	;# 
  2531  0794                     	;# 
  2532  0795                     	;# 
  2533  0795                     	;# 
  2534  0796                     	;# 
  2535  0797                     	;# 
  2536  0797                     	;# 
  2537  0798                     	;# 
  2538  0799                     	;# 
  2539  079A                     	;# 
  2540  080C                     	;# 
  2541  080C                     	;# 
  2542  080D                     	;# 
  2543  080E                     	;# 
  2544  080E                     	;# 
  2545  080F                     	;# 
  2546  0810                     	;# 
  2547  0810                     	;# 
  2548  0811                     	;# 
  2549  0812                     	;# 
  2550  0812                     	;# 
  2551  0813                     	;# 
  2552  0814                     	;# 
  2553  0815                     	;# 
  2554  0816                     	;# 
  2555  0817                     	;# 
  2556  0818                     	;# 
  2557  0819                     	;# 
  2558  081A                     	;# 
  2559  081A                     	;# 
  2560  081B                     	;# 
  2561  081C                     	;# 
  2562  081C                     	;# 
  2563  081D                     	;# 
  2564  088C                     	;# 
  2565  088D                     	;# 
  2566  088E                     	;# 
  2567  088F                     	;# 
  2568  088F                     	;# 
  2569  0890                     	;# 
  2570  0891                     	;# 
  2571  0892                     	;# 
  2572  0893                     	;# 
  2573  0893                     	;# 
  2574  0894                     	;# 
  2575  0895                     	;# 
  2576  0896                     	;# 
  2577  0897                     	;# 
  2578  0897                     	;# 
  2579  0898                     	;# 
  2580  0899                     	;# 
  2581  0D8C                     	;# 
  2582  0D8C                     	;# 
  2583  0D8D                     	;# 
  2584  0D8E                     	;# 
  2585  0D8F                     	;# 
  2586  0D8F                     	;# 
  2587  0D90                     	;# 
  2588  0D91                     	;# 
  2589  0D92                     	;# 
  2590  0D92                     	;# 
  2591  0D93                     	;# 
  2592  0D94                     	;# 
  2593  0D95                     	;# 
  2594  0D95                     	;# 
  2595  0D96                     	;# 
  2596  0D97                     	;# 
  2597  0D98                     	;# 
  2598  0D99                     	;# 
  2599  0D9A                     	;# 
  2600  0D9B                     	;# 
  2601  0D9C                     	;# 
  2602  0D9D                     	;# 
  2603  0D9E                     	;# 
  2604  0D9E                     	;# 
  2605  0D9F                     	;# 
  2606  0DA0                     	;# 
  2607  0DA1                     	;# 
  2608  0DA1                     	;# 
  2609  0DA2                     	;# 
  2610  0DA3                     	;# 
  2611  0DA4                     	;# 
  2612  0DA4                     	;# 
  2613  0DA5                     	;# 
  2614  0DA6                     	;# 
  2615  0DA7                     	;# 
  2616  0DA7                     	;# 
  2617  0DA8                     	;# 
  2618  0DA9                     	;# 
  2619  0DAA                     	;# 
  2620  0DAB                     	;# 
  2621  0DAC                     	;# 
  2622  0DAD                     	;# 
  2623  0DAE                     	;# 
  2624  0DAF                     	;# 
  2625  0E0F                     	;# 
  2626  0E10                     	;# 
  2627  0E11                     	;# 
  2628  0E12                     	;# 
  2629  0E13                     	;# 
  2630  0E14                     	;# 
  2631  0E15                     	;# 
  2632  0E16                     	;# 
  2633  0E17                     	;# 
  2634  0E17                     	;# 
  2635  0E18                     	;# 
  2636  0E18                     	;# 
  2637  0E19                     	;# 
  2638  0E1A                     	;# 
  2639  0E1B                     	;# 
  2640  0E1B                     	;# 
  2641  0E1C                     	;# 
  2642  0E1D                     	;# 
  2643  0E1E                     	;# 
  2644  0E1E                     	;# 
  2645  0E1F                     	;# 
  2646  0E20                     	;# 
  2647  0E21                     	;# 
  2648  0E22                     	;# 
  2649  0E23                     	;# 
  2650  0E24                     	;# 
  2651  0E25                     	;# 
  2652  0E26                     	;# 
  2653  0E27                     	;# 
  2654  0E28                     	;# 
  2655  0E29                     	;# 
  2656  0E2A                     	;# 
  2657  0E2B                     	;# 
  2658  0E2C                     	;# 
  2659  0E2D                     	;# 
  2660  0E2E                     	;# 
  2661  0E90                     	;# 
  2662  0E91                     	;# 
  2663  0E92                     	;# 
  2664  0E94                     	;# 
  2665  0E95                     	;# 
  2666  0E9C                     	;# 
  2667  0E9D                     	;# 
  2668  0E9E                     	;# 
  2669  0E9F                     	;# 
  2670  0EA0                     	;# 
  2671  0EA1                     	;# 
  2672  0EA2                     	;# 
  2673  0EA3                     	;# 
  2674  0EA4                     	;# 
  2675  0EA5                     	;# 
  2676  0EA6                     	;# 
  2677  0EA7                     	;# 
  2678  0F0F                     	;# 
  2679  0F10                     	;# 
  2680  0F11                     	;# 
  2681  0F12                     	;# 
  2682  0F13                     	;# 
  2683  0F14                     	;# 
  2684  0F15                     	;# 
  2685  0F16                     	;# 
  2686  0F17                     	;# 
  2687  0F18                     	;# 
  2688  0F19                     	;# 
  2689  0F1A                     	;# 
  2690  0F1B                     	;# 
  2691  0F1C                     	;# 
  2692  0F1D                     	;# 
  2693  0F1E                     	;# 
  2694  0F1F                     	;# 
  2695  0F20                     	;# 
  2696  0F21                     	;# 
  2697  0F22                     	;# 
  2698  0F23                     	;# 
  2699  0FE4                     	;# 
  2700  0FE5                     	;# 
  2701  0FE6                     	;# 
  2702  0FE7                     	;# 
  2703  0FE8                     	;# 
  2704  0FE9                     	;# 
  2705  0FEA                     	;# 
  2706  0FEB                     	;# 
  2707  0FED                     	;# 
  2708  0FEE                     	;# 
  2709  0FEF                     	;# 
  2710  0000                     	;# 
  2711  0001                     	;# 
  2712  0002                     	;# 
  2713  0003                     	;# 
  2714  0004                     	;# 
  2715  0005                     	;# 
  2716  0006                     	;# 
  2717  0007                     	;# 
  2718  0008                     	;# 
  2719  0009                     	;# 
  2720  000A                     	;# 
  2721  000B                     	;# 
  2722  000C                     	;# 
  2723  000D                     	;# 
  2724  000E                     	;# 
  2725  0010                     	;# 
  2726  0011                     	;# 
  2727  0012                     	;# 
  2728  0013                     	;# 
  2729  0014                     	;# 
  2730  0015                     	;# 
  2731  0016                     	;# 
  2732  0016                     	;# 
  2733  0017                     	;# 
  2734  0018                     	;# 
  2735  0019                     	;# 
  2736  001A                     	;# 
  2737  001A                     	;# 
  2738  001B                     	;# 
  2739  001B                     	;# 
  2740  001C                     	;# 
  2741  001D                     	;# 
  2742  001E                     	;# 
  2743  001F                     	;# 
  2744  008C                     	;# 
  2745  008D                     	;# 
  2746  008E                     	;# 
  2747  0090                     	;# 
  2748  0091                     	;# 
  2749  0092                     	;# 
  2750  0093                     	;# 
  2751  0094                     	;# 
  2752  0095                     	;# 
  2753  0096                     	;# 
  2754  0098                     	;# 
  2755  0099                     	;# 
  2756  009A                     	;# 
  2757  009B                     	;# 
  2758  009B                     	;# 
  2759  009C                     	;# 
  2760  009D                     	;# 
  2761  009E                     	;# 
  2762  009F                     	;# 
  2763  010C                     	;# 
  2764  010D                     	;# 
  2765  010E                     	;# 
  2766  0111                     	;# 
  2767  0112                     	;# 
  2768  0113                     	;# 
  2769  0114                     	;# 
  2770  0115                     	;# 
  2771  0116                     	;# 
  2772  0117                     	;# 
  2773  0118                     	;# 
  2774  0119                     	;# 
  2775  011C                     	;# 
  2776  018C                     	;# 
  2777  018D                     	;# 
  2778  018E                     	;# 
  2779  0191                     	;# 
  2780  0191                     	;# 
  2781  0192                     	;# 
  2782  0193                     	;# 
  2783  0193                     	;# 
  2784  0194                     	;# 
  2785  0195                     	;# 
  2786  0196                     	;# 
  2787  0199                     	;# 
  2788  0199                     	;# 
  2789  0199                     	;# 
  2790  019A                     	;# 
  2791  019A                     	;# 
  2792  019A                     	;# 
  2793  019B                     	;# 
  2794  019B                     	;# 
  2795  019B                     	;# 
  2796  019B                     	;# 
  2797  019B                     	;# 
  2798  019C                     	;# 
  2799  019C                     	;# 
  2800  019C                     	;# 
  2801  019D                     	;# 
  2802  019D                     	;# 
  2803  019D                     	;# 
  2804  019E                     	;# 
  2805  019E                     	;# 
  2806  019E                     	;# 
  2807  019F                     	;# 
  2808  019F                     	;# 
  2809  019F                     	;# 
  2810  019F                     	;# 
  2811  019F                     	;# 
  2812  020C                     	;# 
  2813  020D                     	;# 
  2814  020E                     	;# 
  2815  0211                     	;# 
  2816  0211                     	;# 
  2817  0212                     	;# 
  2818  0212                     	;# 
  2819  0213                     	;# 
  2820  0213                     	;# 
  2821  0214                     	;# 
  2822  0214                     	;# 
  2823  0215                     	;# 
  2824  0215                     	;# 
  2825  0215                     	;# 
  2826  0215                     	;# 
  2827  0216                     	;# 
  2828  0216                     	;# 
  2829  0217                     	;# 
  2830  0217                     	;# 
  2831  028C                     	;# 
  2832  028D                     	;# 
  2833  028E                     	;# 
  2834  0291                     	;# 
  2835  0291                     	;# 
  2836  0292                     	;# 
  2837  0293                     	;# 
  2838  0294                     	;# 
  2839  0298                     	;# 
  2840  0298                     	;# 
  2841  0299                     	;# 
  2842  029A                     	;# 
  2843  029B                     	;# 
  2844  029E                     	;# 
  2845  030C                     	;# 
  2846  030D                     	;# 
  2847  030E                     	;# 
  2848  038C                     	;# 
  2849  038D                     	;# 
  2850  038E                     	;# 
  2851  0391                     	;# 
  2852  0392                     	;# 
  2853  0393                     	;# 
  2854  0394                     	;# 
  2855  0395                     	;# 
  2856  0396                     	;# 
  2857  0397                     	;# 
  2858  0398                     	;# 
  2859  0399                     	;# 
  2860  040E                     	;# 
  2861  0413                     	;# 
  2862  0413                     	;# 
  2863  0414                     	;# 
  2864  0414                     	;# 
  2865  0415                     	;# 
  2866  0416                     	;# 
  2867  0417                     	;# 
  2868  0418                     	;# 
  2869  041A                     	;# 
  2870  041A                     	;# 
  2871  041B                     	;# 
  2872  041B                     	;# 
  2873  041C                     	;# 
  2874  041D                     	;# 
  2875  041E                     	;# 
  2876  041F                     	;# 
  2877  0493                     	;# 
  2878  0494                     	;# 
  2879  0495                     	;# 
  2880  0496                     	;# 
  2881  049A                     	;# 
  2882  049B                     	;# 
  2883  049C                     	;# 
  2884  049D                     	;# 
  2885  058C                     	;# 
  2886  058C                     	;# 
  2887  058D                     	;# 
  2888  058E                     	;# 
  2889  058E                     	;# 
  2890  058F                     	;# 
  2891  0590                     	;# 
  2892  0590                     	;# 
  2893  0591                     	;# 
  2894  0592                     	;# 
  2895  0592                     	;# 
  2896  0593                     	;# 
  2897  0594                     	;# 
  2898  0594                     	;# 
  2899  0595                     	;# 
  2900  0596                     	;# 
  2901  0596                     	;# 
  2902  0597                     	;# 
  2903  0598                     	;# 
  2904  0599                     	;# 
  2905  059A                     	;# 
  2906  059B                     	;# 
  2907  059B                     	;# 
  2908  059C                     	;# 
  2909  059D                     	;# 
  2910  060C                     	;# 
  2911  060C                     	;# 
  2912  060D                     	;# 
  2913  060E                     	;# 
  2914  060F                     	;# 
  2915  060F                     	;# 
  2916  0610                     	;# 
  2917  0611                     	;# 
  2918  0612                     	;# 
  2919  0613                     	;# 
  2920  0614                     	;# 
  2921  0617                     	;# 
  2922  0617                     	;# 
  2923  0618                     	;# 
  2924  0619                     	;# 
  2925  061A                     	;# 
  2926  061A                     	;# 
  2927  061B                     	;# 
  2928  061C                     	;# 
  2929  0691                     	;# 
  2930  0692                     	;# 
  2931  0693                     	;# 
  2932  0694                     	;# 
  2933  0695                     	;# 
  2934  0696                     	;# 
  2935  0697                     	;# 
  2936  0699                     	;# 
  2937  069A                     	;# 
  2938  0711                     	;# 
  2939  0712                     	;# 
  2940  0713                     	;# 
  2941  0714                     	;# 
  2942  0715                     	;# 
  2943  0718                     	;# 
  2944  0718                     	;# 
  2945  0719                     	;# 
  2946  071A                     	;# 
  2947  071A                     	;# 
  2948  071B                     	;# 
  2949  071C                     	;# 
  2950  071D                     	;# 
  2951  0791                     	;# 
  2952  0791                     	;# 
  2953  0792                     	;# 
  2954  0793                     	;# 
  2955  0793                     	;# 
  2956  0794                     	;# 
  2957  0795                     	;# 
  2958  0795                     	;# 
  2959  0796                     	;# 
  2960  0797                     	;# 
  2961  0797                     	;# 
  2962  0798                     	;# 
  2963  0799                     	;# 
  2964  079A                     	;# 
  2965  080C                     	;# 
  2966  080C                     	;# 
  2967  080D                     	;# 
  2968  080E                     	;# 
  2969  080E                     	;# 
  2970  080F                     	;# 
  2971  0810                     	;# 
  2972  0810                     	;# 
  2973  0811                     	;# 
  2974  0812                     	;# 
  2975  0812                     	;# 
  2976  0813                     	;# 
  2977  0814                     	;# 
  2978  0815                     	;# 
  2979  0816                     	;# 
  2980  0817                     	;# 
  2981  0818                     	;# 
  2982  0819                     	;# 
  2983  081A                     	;# 
  2984  081A                     	;# 
  2985  081B                     	;# 
  2986  081C                     	;# 
  2987  081C                     	;# 
  2988  081D                     	;# 
  2989  088C                     	;# 
  2990  088D                     	;# 
  2991  088E                     	;# 
  2992  088F                     	;# 
  2993  088F                     	;# 
  2994  0890                     	;# 
  2995  0891                     	;# 
  2996  0892                     	;# 
  2997  0893                     	;# 
  2998  0893                     	;# 
  2999  0894                     	;# 
  3000  0895                     	;# 
  3001  0896                     	;# 
  3002  0897                     	;# 
  3003  0897                     	;# 
  3004  0898                     	;# 
  3005  0899                     	;# 
  3006  0D8C                     	;# 
  3007  0D8C                     	;# 
  3008  0D8D                     	;# 
  3009  0D8E                     	;# 
  3010  0D8F                     	;# 
  3011  0D8F                     	;# 
  3012  0D90                     	;# 
  3013  0D91                     	;# 
  3014  0D92                     	;# 
  3015  0D92                     	;# 
  3016  0D93                     	;# 
  3017  0D94                     	;# 
  3018  0D95                     	;# 
  3019  0D95                     	;# 
  3020  0D96                     	;# 
  3021  0D97                     	;# 
  3022  0D98                     	;# 
  3023  0D99                     	;# 
  3024  0D9A                     	;# 
  3025  0D9B                     	;# 
  3026  0D9C                     	;# 
  3027  0D9D                     	;# 
  3028  0D9E                     	;# 
  3029  0D9E                     	;# 
  3030  0D9F                     	;# 
  3031  0DA0                     	;# 
  3032  0DA1                     	;# 
  3033  0DA1                     	;# 
  3034  0DA2                     	;# 
  3035  0DA3                     	;# 
  3036  0DA4                     	;# 
  3037  0DA4                     	;# 
  3038  0DA5                     	;# 
  3039  0DA6                     	;# 
  3040  0DA7                     	;# 
  3041  0DA7                     	;# 
  3042  0DA8                     	;# 
  3043  0DA9                     	;# 
  3044  0DAA                     	;# 
  3045  0DAB                     	;# 
  3046  0DAC                     	;# 
  3047  0DAD                     	;# 
  3048  0DAE                     	;# 
  3049  0DAF                     	;# 
  3050  0E0F                     	;# 
  3051  0E10                     	;# 
  3052  0E11                     	;# 
  3053  0E12                     	;# 
  3054  0E13                     	;# 
  3055  0E14                     	;# 
  3056  0E15                     	;# 
  3057  0E16                     	;# 
  3058  0E17                     	;# 
  3059  0E17                     	;# 
  3060  0E18                     	;# 
  3061  0E18                     	;# 
  3062  0E19                     	;# 
  3063  0E1A                     	;# 
  3064  0E1B                     	;# 
  3065  0E1B                     	;# 
  3066  0E1C                     	;# 
  3067  0E1D                     	;# 
  3068  0E1E                     	;# 
  3069  0E1E                     	;# 
  3070  0E1F                     	;# 
  3071  0E20                     	;# 
  3072  0E21                     	;# 
  3073  0E22                     	;# 
  3074  0E23                     	;# 
  3075  0E24                     	;# 
  3076  0E25                     	;# 
  3077  0E26                     	;# 
  3078  0E27                     	;# 
  3079  0E28                     	;# 
  3080  0E29                     	;# 
  3081  0E2A                     	;# 
  3082  0E2B                     	;# 
  3083  0E2C                     	;# 
  3084  0E2D                     	;# 
  3085  0E2E                     	;# 
  3086  0E90                     	;# 
  3087  0E91                     	;# 
  3088  0E92                     	;# 
  3089  0E94                     	;# 
  3090  0E95                     	;# 
  3091  0E9C                     	;# 
  3092  0E9D                     	;# 
  3093  0E9E                     	;# 
  3094  0E9F                     	;# 
  3095  0EA0                     	;# 
  3096  0EA1                     	;# 
  3097  0EA2                     	;# 
  3098  0EA3                     	;# 
  3099  0EA4                     	;# 
  3100  0EA5                     	;# 
  3101  0EA6                     	;# 
  3102  0EA7                     	;# 
  3103  0F0F                     	;# 
  3104  0F10                     	;# 
  3105  0F11                     	;# 
  3106  0F12                     	;# 
  3107  0F13                     	;# 
  3108  0F14                     	;# 
  3109  0F15                     	;# 
  3110  0F16                     	;# 
  3111  0F17                     	;# 
  3112  0F18                     	;# 
  3113  0F19                     	;# 
  3114  0F1A                     	;# 
  3115  0F1B                     	;# 
  3116  0F1C                     	;# 
  3117  0F1D                     	;# 
  3118  0F1E                     	;# 
  3119  0F1F                     	;# 
  3120  0F20                     	;# 
  3121  0F21                     	;# 
  3122  0F22                     	;# 
  3123  0F23                     	;# 
  3124  0FE4                     	;# 
  3125  0FE5                     	;# 
  3126  0FE6                     	;# 
  3127  0FE7                     	;# 
  3128  0FE8                     	;# 
  3129  0FE9                     	;# 
  3130  0FEA                     	;# 
  3131  0FEB                     	;# 
  3132  0FED                     	;# 
  3133  0FEE                     	;# 
  3134  0FEF                     	;# 
  3135  0000                     	;# 
  3136  0001                     	;# 
  3137  0002                     	;# 
  3138  0003                     	;# 
  3139  0004                     	;# 
  3140  0005                     	;# 
  3141  0006                     	;# 
  3142  0007                     	;# 
  3143  0008                     	;# 
  3144  0009                     	;# 
  3145  000A                     	;# 
  3146  000B                     	;# 
  3147  000C                     	;# 
  3148  000D                     	;# 
  3149  000E                     	;# 
  3150  0010                     	;# 
  3151  0011                     	;# 
  3152  0012                     	;# 
  3153  0013                     	;# 
  3154  0014                     	;# 
  3155  0015                     	;# 
  3156  0016                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  0019                     	;# 
  3161  001A                     	;# 
  3162  001A                     	;# 
  3163  001B                     	;# 
  3164  001B                     	;# 
  3165  001C                     	;# 
  3166  001D                     	;# 
  3167  001E                     	;# 
  3168  001F                     	;# 
  3169  008C                     	;# 
  3170  008D                     	;# 
  3171  008E                     	;# 
  3172  0090                     	;# 
  3173  0091                     	;# 
  3174  0092                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0098                     	;# 
  3180  0099                     	;# 
  3181  009A                     	;# 
  3182  009B                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  009F                     	;# 
  3188  010C                     	;# 
  3189  010D                     	;# 
  3190  010E                     	;# 
  3191  0111                     	;# 
  3192  0112                     	;# 
  3193  0113                     	;# 
  3194  0114                     	;# 
  3195  0115                     	;# 
  3196  0116                     	;# 
  3197  0117                     	;# 
  3198  0118                     	;# 
  3199  0119                     	;# 
  3200  011C                     	;# 
  3201  018C                     	;# 
  3202  018D                     	;# 
  3203  018E                     	;# 
  3204  0191                     	;# 
  3205  0191                     	;# 
  3206  0192                     	;# 
  3207  0193                     	;# 
  3208  0193                     	;# 
  3209  0194                     	;# 
  3210  0195                     	;# 
  3211  0196                     	;# 
  3212  0199                     	;# 
  3213  0199                     	;# 
  3214  0199                     	;# 
  3215  019A                     	;# 
  3216  019A                     	;# 
  3217  019A                     	;# 
  3218  019B                     	;# 
  3219  019B                     	;# 
  3220  019B                     	;# 
  3221  019B                     	;# 
  3222  019B                     	;# 
  3223  019C                     	;# 
  3224  019C                     	;# 
  3225  019C                     	;# 
  3226  019D                     	;# 
  3227  019D                     	;# 
  3228  019D                     	;# 
  3229  019E                     	;# 
  3230  019E                     	;# 
  3231  019E                     	;# 
  3232  019F                     	;# 
  3233  019F                     	;# 
  3234  019F                     	;# 
  3235  019F                     	;# 
  3236  019F                     	;# 
  3237  020C                     	;# 
  3238  020D                     	;# 
  3239  020E                     	;# 
  3240  0211                     	;# 
  3241  0211                     	;# 
  3242  0212                     	;# 
  3243  0212                     	;# 
  3244  0213                     	;# 
  3245  0213                     	;# 
  3246  0214                     	;# 
  3247  0214                     	;# 
  3248  0215                     	;# 
  3249  0215                     	;# 
  3250  0215                     	;# 
  3251  0215                     	;# 
  3252  0216                     	;# 
  3253  0216                     	;# 
  3254  0217                     	;# 
  3255  0217                     	;# 
  3256  028C                     	;# 
  3257  028D                     	;# 
  3258  028E                     	;# 
  3259  0291                     	;# 
  3260  0291                     	;# 
  3261  0292                     	;# 
  3262  0293                     	;# 
  3263  0294                     	;# 
  3264  0298                     	;# 
  3265  0298                     	;# 
  3266  0299                     	;# 
  3267  029A                     	;# 
  3268  029B                     	;# 
  3269  029E                     	;# 
  3270  030C                     	;# 
  3271  030D                     	;# 
  3272  030E                     	;# 
  3273  038C                     	;# 
  3274  038D                     	;# 
  3275  038E                     	;# 
  3276  0391                     	;# 
  3277  0392                     	;# 
  3278  0393                     	;# 
  3279  0394                     	;# 
  3280  0395                     	;# 
  3281  0396                     	;# 
  3282  0397                     	;# 
  3283  0398                     	;# 
  3284  0399                     	;# 
  3285  040E                     	;# 
  3286  0413                     	;# 
  3287  0413                     	;# 
  3288  0414                     	;# 
  3289  0414                     	;# 
  3290  0415                     	;# 
  3291  0416                     	;# 
  3292  0417                     	;# 
  3293  0418                     	;# 
  3294  041A                     	;# 
  3295  041A                     	;# 
  3296  041B                     	;# 
  3297  041B                     	;# 
  3298  041C                     	;# 
  3299  041D                     	;# 
  3300  041E                     	;# 
  3301  041F                     	;# 
  3302  0493                     	;# 
  3303  0494                     	;# 
  3304  0495                     	;# 
  3305  0496                     	;# 
  3306  049A                     	;# 
  3307  049B                     	;# 
  3308  049C                     	;# 
  3309  049D                     	;# 
  3310  058C                     	;# 
  3311  058C                     	;# 
  3312  058D                     	;# 
  3313  058E                     	;# 
  3314  058E                     	;# 
  3315  058F                     	;# 
  3316  0590                     	;# 
  3317  0590                     	;# 
  3318  0591                     	;# 
  3319  0592                     	;# 
  3320  0592                     	;# 
  3321  0593                     	;# 
  3322  0594                     	;# 
  3323  0594                     	;# 
  3324  0595                     	;# 
  3325  0596                     	;# 
  3326  0596                     	;# 
  3327  0597                     	;# 
  3328  0598                     	;# 
  3329  0599                     	;# 
  3330  059A                     	;# 
  3331  059B                     	;# 
  3332  059B                     	;# 
  3333  059C                     	;# 
  3334  059D                     	;# 
  3335  060C                     	;# 
  3336  060C                     	;# 
  3337  060D                     	;# 
  3338  060E                     	;# 
  3339  060F                     	;# 
  3340  060F                     	;# 
  3341  0610                     	;# 
  3342  0611                     	;# 
  3343  0612                     	;# 
  3344  0613                     	;# 
  3345  0614                     	;# 
  3346  0617                     	;# 
  3347  0617                     	;# 
  3348  0618                     	;# 
  3349  0619                     	;# 
  3350  061A                     	;# 
  3351  061A                     	;# 
  3352  061B                     	;# 
  3353  061C                     	;# 
  3354  0691                     	;# 
  3355  0692                     	;# 
  3356  0693                     	;# 
  3357  0694                     	;# 
  3358  0695                     	;# 
  3359  0696                     	;# 
  3360  0697                     	;# 
  3361  0699                     	;# 
  3362  069A                     	;# 
  3363  0711                     	;# 
  3364  0712                     	;# 
  3365  0713                     	;# 
  3366  0714                     	;# 
  3367  0715                     	;# 
  3368  0718                     	;# 
  3369  0718                     	;# 
  3370  0719                     	;# 
  3371  071A                     	;# 
  3372  071A                     	;# 
  3373  071B                     	;# 
  3374  071C                     	;# 
  3375  071D                     	;# 
  3376  0791                     	;# 
  3377  0791                     	;# 
  3378  0792                     	;# 
  3379  0793                     	;# 
  3380  0793                     	;# 
  3381  0794                     	;# 
  3382  0795                     	;# 
  3383  0795                     	;# 
  3384  0796                     	;# 
  3385  0797                     	;# 
  3386  0797                     	;# 
  3387  0798                     	;# 
  3388  0799                     	;# 
  3389  079A                     	;# 
  3390  080C                     	;# 
  3391  080C                     	;# 
  3392  080D                     	;# 
  3393  080E                     	;# 
  3394  080E                     	;# 
  3395  080F                     	;# 
  3396  0810                     	;# 
  3397  0810                     	;# 
  3398  0811                     	;# 
  3399  0812                     	;# 
  3400  0812                     	;# 
  3401  0813                     	;# 
  3402  0814                     	;# 
  3403  0815                     	;# 
  3404  0816                     	;# 
  3405  0817                     	;# 
  3406  0818                     	;# 
  3407  0819                     	;# 
  3408  081A                     	;# 
  3409  081A                     	;# 
  3410  081B                     	;# 
  3411  081C                     	;# 
  3412  081C                     	;# 
  3413  081D                     	;# 
  3414  088C                     	;# 
  3415  088D                     	;# 
  3416  088E                     	;# 
  3417  088F                     	;# 
  3418  088F                     	;# 
  3419  0890                     	;# 
  3420  0891                     	;# 
  3421  0892                     	;# 
  3422  0893                     	;# 
  3423  0893                     	;# 
  3424  0894                     	;# 
  3425  0895                     	;# 
  3426  0896                     	;# 
  3427  0897                     	;# 
  3428  0897                     	;# 
  3429  0898                     	;# 
  3430  0899                     	;# 
  3431  0D8C                     	;# 
  3432  0D8C                     	;# 
  3433  0D8D                     	;# 
  3434  0D8E                     	;# 
  3435  0D8F                     	;# 
  3436  0D8F                     	;# 
  3437  0D90                     	;# 
  3438  0D91                     	;# 
  3439  0D92                     	;# 
  3440  0D92                     	;# 
  3441  0D93                     	;# 
  3442  0D94                     	;# 
  3443  0D95                     	;# 
  3444  0D95                     	;# 
  3445  0D96                     	;# 
  3446  0D97                     	;# 
  3447  0D98                     	;# 
  3448  0D99                     	;# 
  3449  0D9A                     	;# 
  3450  0D9B                     	;# 
  3451  0D9C                     	;# 
  3452  0D9D                     	;# 
  3453  0D9E                     	;# 
  3454  0D9E                     	;# 
  3455  0D9F                     	;# 
  3456  0DA0                     	;# 
  3457  0DA1                     	;# 
  3458  0DA1                     	;# 
  3459  0DA2                     	;# 
  3460  0DA3                     	;# 
  3461  0DA4                     	;# 
  3462  0DA4                     	;# 
  3463  0DA5                     	;# 
  3464  0DA6                     	;# 
  3465  0DA7                     	;# 
  3466  0DA7                     	;# 
  3467  0DA8                     	;# 
  3468  0DA9                     	;# 
  3469  0DAA                     	;# 
  3470  0DAB                     	;# 
  3471  0DAC                     	;# 
  3472  0DAD                     	;# 
  3473  0DAE                     	;# 
  3474  0DAF                     	;# 
  3475  0E0F                     	;# 
  3476  0E10                     	;# 
  3477  0E11                     	;# 
  3478  0E12                     	;# 
  3479  0E13                     	;# 
  3480  0E14                     	;# 
  3481  0E15                     	;# 
  3482  0E16                     	;# 
  3483  0E17                     	;# 
  3484  0E17                     	;# 
  3485  0E18                     	;# 
  3486  0E18                     	;# 
  3487  0E19                     	;# 
  3488  0E1A                     	;# 
  3489  0E1B                     	;# 
  3490  0E1B                     	;# 
  3491  0E1C                     	;# 
  3492  0E1D                     	;# 
  3493  0E1E                     	;# 
  3494  0E1E                     	;# 
  3495  0E1F                     	;# 
  3496  0E20                     	;# 
  3497  0E21                     	;# 
  3498  0E22                     	;# 
  3499  0E23                     	;# 
  3500  0E24                     	;# 
  3501  0E25                     	;# 
  3502  0E26                     	;# 
  3503  0E27                     	;# 
  3504  0E28                     	;# 
  3505  0E29                     	;# 
  3506  0E2A                     	;# 
  3507  0E2B                     	;# 
  3508  0E2C                     	;# 
  3509  0E2D                     	;# 
  3510  0E2E                     	;# 
  3511  0E90                     	;# 
  3512  0E91                     	;# 
  3513  0E92                     	;# 
  3514  0E94                     	;# 
  3515  0E95                     	;# 
  3516  0E9C                     	;# 
  3517  0E9D                     	;# 
  3518  0E9E                     	;# 
  3519  0E9F                     	;# 
  3520  0EA0                     	;# 
  3521  0EA1                     	;# 
  3522  0EA2                     	;# 
  3523  0EA3                     	;# 
  3524  0EA4                     	;# 
  3525  0EA5                     	;# 
  3526  0EA6                     	;# 
  3527  0EA7                     	;# 
  3528  0F0F                     	;# 
  3529  0F10                     	;# 
  3530  0F11                     	;# 
  3531  0F12                     	;# 
  3532  0F13                     	;# 
  3533  0F14                     	;# 
  3534  0F15                     	;# 
  3535  0F16                     	;# 
  3536  0F17                     	;# 
  3537  0F18                     	;# 
  3538  0F19                     	;# 
  3539  0F1A                     	;# 
  3540  0F1B                     	;# 
  3541  0F1C                     	;# 
  3542  0F1D                     	;# 
  3543  0F1E                     	;# 
  3544  0F1F                     	;# 
  3545  0F20                     	;# 
  3546  0F21                     	;# 
  3547  0F22                     	;# 
  3548  0F23                     	;# 
  3549  0FE4                     	;# 
  3550  0FE5                     	;# 
  3551  0FE6                     	;# 
  3552  0FE7                     	;# 
  3553  0FE8                     	;# 
  3554  0FE9                     	;# 
  3555  0FEA                     	;# 
  3556  0FEB                     	;# 
  3557  0FED                     	;# 
  3558  0FEE                     	;# 
  3559  0FEF                     	;# 
  3560                           
  3561 ;; Function _I2C1_Deinitialize is unused but had its address taken
  3562  0000                     
  3563 ;; Function _I2C1_Write is unused but had its address taken
  3564  0000                     
  3565 ;; Function _I2C1_Read is unused but had its address taken
  3566  0000                     
  3567 ;; Function _I2C1_WriteRead is unused but had its address taken
  3568  0000                     
  3569 ;; Function _I2C1_ErrorGet is unused but had its address taken
  3570  0000                     
  3571 ;; Function _I2C1_IsBusy is unused but had its address taken
  3572  0000                     
  3573 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  3574  0000                     
  3575 ;; Function _EUSART_Deinitialize is unused but had its address taken
  3576  0000                     
  3577 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  3578  0000                     
  3579 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  3580  0000                     
  3581 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  3582  0000                     
  3583 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  3584  0000                     
  3585 ;; Function _EUSART_IsTxReady is unused but had its address taken
  3586  0000                     
  3587 ;; Function _EUSART_IsTxDone is unused but had its address taken
  3588  0000                     
  3589 ;; Function _EUSART_ErrorGet is unused but had its address taken
  3590  0000                     
  3591                           	psect	idataBANK2
  3592  0000'                    __pidataBANK2:
  3593                           
  3594                           ;initializer for _sppas
  3595  0000' 3401               	retlw	1
  3596  0001' 3400               	retlw	0
  3597  0002' 3400               	retlw	0
  3598  0003' 3400               	retlw	0
  3599  0004' 3400               	retlw	0
  3600  0005' 3400               	retlw	0
  3601  0006' 3400               	retlw	0
  3602  0007' 3400               	retlw	0
  3603  0008' 3401               	retlw	1
  3604  0009' 3400               	retlw	0
  3605  000A' 3400               	retlw	0
  3606  000B' 3400               	retlw	0
  3607  000C' 3400               	retlw	0
  3608  000D' 3400               	retlw	0
  3609  000E' 3400               	retlw	0
  3610  000F' 3400               	retlw	0
  3611  0010' 3401               	retlw	1
  3612  0011' 3400               	retlw	0
  3613  0012' 3400               	retlw	0
  3614  0013' 3400               	retlw	0
  3615  0014' 3400               	retlw	0
  3616  0015' 3400               	retlw	0
  3617  0016' 3400               	retlw	0
  3618  0017' 3400               	retlw	0
  3619                           
  3620                           	psect	stringtext1
  3621  0000'                    __pstringtext1:
  3622  0000'                    _UART:
  3623  0000' 3400'              	retlw	low _EUSART_Initialize
  3624  0001' 3400'              	retlw	high _EUSART_Initialize
  3625  0002' 3400               	retlw	0
  3626  0003' 3400               	retlw	0
  3627  0004' 3400'              	retlw	low _EUSART_Read
  3628  0005' 3400'              	retlw	high _EUSART_Read
  3629  0006' 3400'              	retlw	low _EUSART_Write
  3630  0007' 3400'              	retlw	high _EUSART_Write
  3631  0008' 3400'              	retlw	low _EUSART_IsRxReady
  3632  0009' 3400'              	retlw	high _EUSART_IsRxReady
  3633  000A' 3400               	retlw	0
  3634  000B' 3400               	retlw	0
  3635  000C' 3400               	retlw	0
  3636  000D' 3400               	retlw	0
  3637  000E' 3400               	retlw	0
  3638  000F' 3400               	retlw	0
  3639  0010' 3400               	retlw	0
  3640  0011' 3400               	retlw	0
  3641  0012' 3400               	retlw	0
  3642  0013' 3400               	retlw	0
  3643  0014' 3400               	retlw	0
  3644  0015' 3400               	retlw	0
  3645  0016' 3400               	retlw	0
  3646  0017' 3400               	retlw	0
  3647  0018' 3400               	retlw	0
  3648  0019' 3400               	retlw	0
  3649  001A' 3400               	retlw	0
  3650  001B' 3400               	retlw	0
  3651  001C' 3400               	retlw	0
  3652  001D' 3400               	retlw	0
  3653  001E' 3400               	retlw	0
  3654  001F' 3400               	retlw	0
  3655  0020' 3400               	retlw	0
  3656  0021' 3400               	retlw	0
  3657  0022' 3400               	retlw	0
  3658  0023' 3400               	retlw	0
  3659  0024' 3400               	retlw	0
  3660  0025' 3400               	retlw	0
  3661  0026' 3400               	retlw	0
  3662  0027' 3400               	retlw	0
  3663  0028' 3400'              	retlw	low _EUSART_FramingErrorCallbackRegister
  3664  0029' 3400'              	retlw	high _EUSART_FramingErrorCallbackRegister
  3665  002A' 3400'              	retlw	low _EUSART_OverrunErrorCallbackRegister
  3666  002B' 3400'              	retlw	high _EUSART_OverrunErrorCallbackRegister
  3667  002C' 3400               	retlw	0
  3668  002D' 3400               	retlw	0
  3669  002E' 3400               	retlw	0
  3670  002F' 3400               	retlw	0
  3671  0030'                    __end_of_UART:
  3672                           
  3673                           	psect	stringtext2
  3674  0000'                    __pstringtext2:
  3675  0000'                    _I2C_Host:
  3676  0000' 3400'              	retlw	low _I2C1_Initialize
  3677  0001' 3400'              	retlw	high _I2C1_Initialize
  3678  0002' 3400               	retlw	0
  3679  0003' 3400               	retlw	0
  3680  0004' 3400               	retlw	0
  3681  0005' 3400               	retlw	0
  3682  0006' 3400               	retlw	0
  3683  0007' 3400               	retlw	0
  3684  0008' 3400               	retlw	0
  3685  0009' 3400               	retlw	0
  3686  000A' 3400               	retlw	0
  3687  000B' 3400               	retlw	0
  3688  000C' 3400               	retlw	0
  3689  000D' 3400               	retlw	0
  3690  000E' 3400               	retlw	0
  3691  000F' 3400               	retlw	0
  3692  0010' 3400'              	retlw	low _I2C1_CallbackRegister
  3693  0011' 3400'              	retlw	high _I2C1_CallbackRegister
  3694  0012' 3400               	retlw	0
  3695  0013' 3400               	retlw	0
  3696  0014'                    __end_of_I2C_Host:
  3697                           
  3698                           	psect	stringtext3
  3699  0000'                    __pstringtext3:
  3700  0000'                    _i2c1_eventTable:
  3701  0000' 3400'              	retlw	low _I2C1_EVENT_IDLE
  3702  0001' 3400'              	retlw	high _I2C1_EVENT_IDLE
  3703  0002' 3400'              	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  3704  0003' 3400'              	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  3705  0004' 3400'              	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  3706  0005' 3400'              	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  3707  0006' 3400'              	retlw	low _I2C1_EVENT_TX
  3708  0007' 3400'              	retlw	high _I2C1_EVENT_TX
  3709  0008' 3400'              	retlw	low _I2C1_EVENT_RX
  3710  0009' 3400'              	retlw	high _I2C1_EVENT_RX
  3711  000A' 3400'              	retlw	low _I2C1_EVENT_NACK
  3712  000B' 3400'              	retlw	high _I2C1_EVENT_NACK
  3713  000C' 3400'              	retlw	low _I2C1_EVENT_ERROR
  3714  000D' 3400'              	retlw	high _I2C1_EVENT_ERROR
  3715  000E' 3400'              	retlw	low _I2C1_EVENT_STOP
  3716  000F' 3400'              	retlw	high _I2C1_EVENT_STOP
  3717  0010' 3400'              	retlw	low _I2C1_EVENT_RESET
  3718  0011' 3400'              	retlw	high _I2C1_EVENT_RESET
  3719  0012'                    __end_of_i2c1_eventTable:
  3720                           
  3721                           	psect	nvBANK1
  3722  0000'                    __pnvBANK1:
  3723  0000'                    _ADC_InterruptHandler:
  3724  0000'                    	ds	2
  3725  000B                     _INTCONbits	set	11
  3726  0011                     _PIR2bits	set	17
  3727  0010                     _PIR1bits	set	16
  3728  0095                     _OPTION_REGbits	set	149
  3729  008E                     _TRISC	set	142
  3730  008D                     _TRISB	set	141
  3731  008C                     _TRISA	set	140
  3732  0098                     _OSCTUNE	set	152
  3733  0099                     _OSCCON	set	153
  3734  0091                     _PIE2bits	set	145
  3735  009D                     _ADCON0bits	set	157
  3736  0090                     _PIE1bits	set	144
  3737  009D                     _ADCON0	set	157
  3738  009F                     _ADCON2	set	159
  3739  009C                     _ADRESH	set	156
  3740  009B                     _ADRESL	set	155
  3741  009E                     _ADCON1	set	158
  3742  010E                     _LATCbits	set	270
  3743  010E                     _LATC	set	270
  3744  010D                     _LATB	set	269
  3745  010C                     _LATA	set	268
  3746  0116                     _BORCON	set	278
  3747  019A                     _TX1REG	set	410
  3748  0199                     _RC1REG	set	409
  3749  019F                     _BAUD1CONbits	set	415
  3750  019E                     _TX1STAbits	set	414
  3751  019D                     _RC1STAbits	set	413
  3752  019C                     _SPBRGH	set	412
  3753  019B                     _SPBRGL	set	411
  3754  019E                     _TX1STA	set	414
  3755  019D                     _RC1STA	set	413
  3756  019F                     _BAUD1CON	set	415
  3757  018E                     _ANSELC	set	398
  3758  018D                     _ANSELB	set	397
  3759  018C                     _ANSELA	set	396
  3760  020E                     _WPUC	set	526
  3761  020D                     _WPUB	set	525
  3762  020C                     _WPUA	set	524
  3763  0216                     _SSP1CON2bits	set	534
  3764  0211                     _SSP1BUF	set	529
  3765  0214                     _SSP1STATbits	set	532
  3766  0215                     _SSP1CON1bits	set	533
  3767  0212                     _SSP1ADD	set	530
  3768  0217                     _SSP1CON3	set	535
  3769  0216                     _SSP1CON2	set	534
  3770  0215                     _SSP1CON1	set	533
  3771  0214                     _SSP1STAT	set	532
  3772  028E                     _ODCONC	set	654
  3773  028D                     _ODCONB	set	653
  3774  028C                     _ODCONA	set	652
  3775  030E                     _SLRCONC	set	782
  3776  030D                     _SLRCONB	set	781
  3777  030C                     _SLRCONA	set	780
  3778  0399                     _IOCCF	set	921
  3779  0398                     _IOCCN	set	920
  3780  0397                     _IOCCP	set	919
  3781  0396                     _IOCBF	set	918
  3782  0395                     _IOCBN	set	917
  3783  0394                     _IOCBP	set	916
  3784  0393                     _IOCAF	set	915
  3785  0392                     _IOCAN	set	914
  3786  0391                     _IOCAP	set	913
  3787  038E                     _INLVLC	set	910
  3788  038D                     _INLVLB	set	909
  3789  038C                     _INLVLA	set	908
  3790  0E21                     _SSPDATPPS	set	3617
  3791  0E20                     _SSPCLKPPS	set	3616
  3792  0E24                     _RXPPS	set	3620
  3793  0E9D                     _RB5PPS	set	3741
  3794  0E9E                     _RB6PPS	set	3742
  3795  0EA2                     _RC2PPS	set	3746
  3796                           
  3797                           	psect	stringtext4
  3798  0000'                    __pstringtext4:
  3799  0000'                    STR_13:
  3800  0000' 3463               	retlw	99	;'c'
  3801  0001' 3468               	retlw	104	;'h'
  3802  0002' 3461               	retlw	97	;'a'
  3803  0003' 346E               	retlw	110	;'n'
  3804  0004' 346E               	retlw	110	;'n'
  3805  0005' 3465               	retlw	101	;'e'
  3806  0006' 346C               	retlw	108	;'l'
  3807  0007' 3420               	retlw	32	;' '
  3808  0008' 343D               	retlw	61	;'='
  3809  0009' 343D               	retlw	61	;'='
  3810  000A' 3420               	retlw	32	;' '
  3811  000B' 3450               	retlw	80	;'P'
  3812  000C' 3444               	retlw	68	;'D'
  3813  000D' 345F               	retlw	95	;'_'
  3814  000E' 3458               	retlw	88	;'X'
  3815  000F' 3420               	retlw	32	;' '
  3816  0010' 347C               	retlw	124	;'|'
  3817  0011' 347C               	retlw	124	;'|'
  3818  0012' 3420               	retlw	32	;' '
  3819  0013' 3463               	retlw	99	;'c'
  3820  0014' 3468               	retlw	104	;'h'
  3821  0015' 3461               	retlw	97	;'a'
  3822  0016' 346E               	retlw	110	;'n'
  3823  0017' 346E               	retlw	110	;'n'
  3824  0018' 3465               	retlw	101	;'e'
  3825  0019' 346C               	retlw	108	;'l'
  3826  001A' 3420               	retlw	32	;' '
  3827  001B' 343D               	retlw	61	;'='
  3828  001C' 343D               	retlw	61	;'='
  3829  001D' 3420               	retlw	32	;' '
  3830  001E' 3443               	retlw	67	;'C'
  3831  001F' 3453               	retlw	83	;'S'
  3832  0020' 345F               	retlw	95	;'_'
  3833  0021' 344B               	retlw	75	;'K'
  3834  0022' 3461               	retlw	97	;'a'
  3835  0023' 3420               	retlw	32	;' '
  3836  0024' 347C               	retlw	124	;'|'
  3837  0025' 347C               	retlw	124	;'|'
  3838  0026' 3420               	retlw	32	;' '
  3839  0027' 3463               	retlw	99	;'c'
  3840  0028' 3468               	retlw	104	;'h'
  3841  0029' 3461               	retlw	97	;'a'
  3842  002A' 346E               	retlw	110	;'n'
  3843  002B' 346E               	retlw	110	;'n'
  3844  002C' 3465               	retlw	101	;'e'
  3845  002D' 346C               	retlw	108	;'l'
  3846  002E' 3420               	retlw	32	;' '
  3847  002F' 343D               	retlw	61	;'='
  3848  0030' 343D               	retlw	61	;'='
  3849  0031' 3420               	retlw	32	;' '
  3850  0032' 3443               	retlw	67	;'C'
  3851  0033' 3453               	retlw	83	;'S'
  3852  0034' 345F               	retlw	95	;'_'
  3853  0035' 3458               	retlw	88	;'X'
  3854  0036' 3400               	retlw	0
  3855                           
  3856                           	psect	stringtext5
  3857  0000'                    __pstringtext5:
  3858  0000'                    STR_1:
  3859  0000' 3473               	retlw	115	;'s'
  3860  0001' 3469               	retlw	105	;'i'
  3861  0002' 347A               	retlw	122	;'z'
  3862  0003' 3465               	retlw	101	;'e'
  3863  0004' 346F               	retlw	111	;'o'
  3864  0005' 3466               	retlw	102	;'f'
  3865  0006' 3420               	retlw	32	;' '
  3866  0007' 3428               	retlw	40	;'('
  3867  0008' 3461               	retlw	97	;'a'
  3868  0009' 3464               	retlw	100	;'d'
  3869  000A' 3463               	retlw	99	;'c'
  3870  000B' 345F               	retlw	95	;'_'
  3871  000C' 3472               	retlw	114	;'r'
  3872  000D' 3465               	retlw	101	;'e'
  3873  000E' 3473               	retlw	115	;'s'
  3874  000F' 3475               	retlw	117	;'u'
  3875  0010' 346C               	retlw	108	;'l'
  3876  0011' 3474               	retlw	116	;'t'
  3877  0012' 345F               	retlw	95	;'_'
  3878  0013' 3474               	retlw	116	;'t'
  3879  0014' 3429               	retlw	41	;')'
  3880  0015' 3420               	retlw	32	;' '
  3881  0016' 343D               	retlw	61	;'='
  3882  0017' 343D               	retlw	61	;'='
  3883  0018' 3420               	retlw	32	;' '
  3884  0019' 3473               	retlw	115	;'s'
  3885  001A' 3469               	retlw	105	;'i'
  3886  001B' 347A               	retlw	122	;'z'
  3887  001C' 3465               	retlw	101	;'e'
  3888  001D' 346F               	retlw	111	;'o'
  3889  001E' 3466               	retlw	102	;'f'
  3890  001F' 3420               	retlw	32	;' '
  3891  0020' 3428               	retlw	40	;'('
  3892  0021' 3475               	retlw	117	;'u'
  3893  0022' 3469               	retlw	105	;'i'
  3894  0023' 346E               	retlw	110	;'n'
  3895  0024' 3474               	retlw	116	;'t'
  3896  0025' 3431               	retlw	49	;'1'
  3897  0026' 3436               	retlw	54	;'6'
  3898  0027' 345F               	retlw	95	;'_'
  3899  0028' 3474               	retlw	116	;'t'
  3900  0029' 3429               	retlw	41	;')'
  3901  002A' 3400               	retlw	0
  3902                           
  3903                           	psect	stringtext6
  3904  0000'                    __pstringtext6:
  3905  0000'                    STR_7:
  3906  0000' 3463               	retlw	99	;'c'
  3907  0001' 3468               	retlw	104	;'h'
  3908  0002' 3461               	retlw	97	;'a'
  3909  0003' 346E               	retlw	110	;'n'
  3910  0004' 346E               	retlw	110	;'n'
  3911  0005' 3465               	retlw	101	;'e'
  3912  0006' 346C               	retlw	108	;'l'
  3913  0007' 3420               	retlw	32	;' '
  3914  0008' 343D               	retlw	61	;'='
  3915  0009' 343D               	retlw	61	;'='
  3916  000A' 3420               	retlw	32	;' '
  3917  000B' 3454               	retlw	84	;'T'
  3918  000C' 344D               	retlw	77	;'M'
  3919  000D' 345F               	retlw	95	;'_'
  3920  000E' 344B               	retlw	75	;'K'
  3921  000F' 3461               	retlw	97	;'a'
  3922  0010' 3420               	retlw	32	;' '
  3923  0011' 347C               	retlw	124	;'|'
  3924  0012' 347C               	retlw	124	;'|'
  3925  0013' 3420               	retlw	32	;' '
  3926  0014' 3463               	retlw	99	;'c'
  3927  0015' 3468               	retlw	104	;'h'
  3928  0016' 3461               	retlw	97	;'a'
  3929  0017' 346E               	retlw	110	;'n'
  3930  0018' 346E               	retlw	110	;'n'
  3931  0019' 3465               	retlw	101	;'e'
  3932  001A' 346C               	retlw	108	;'l'
  3933  001B' 3420               	retlw	32	;' '
  3934  001C' 343D               	retlw	61	;'='
  3935  001D' 343D               	retlw	61	;'='
  3936  001E' 3420               	retlw	32	;' '
  3937  001F' 3454               	retlw	84	;'T'
  3938  0020' 344D               	retlw	77	;'M'
  3939  0021' 345F               	retlw	95	;'_'
  3940  0022' 3458               	retlw	88	;'X'
  3941  0023' 3400               	retlw	0
  3942                           
  3943                           	psect	stringtext7
  3944  0000'                    __pstringtext7:
  3945  0000'                    STR_19:
  3946  0000' 3441               	retlw	65	;'A'
  3947  0001' 3473               	retlw	115	;'s'
  3948  0002' 3473               	retlw	115	;'s'
  3949  0003' 3465               	retlw	101	;'e'
  3950  0004' 3472               	retlw	114	;'r'
  3951  0005' 3474               	retlw	116	;'t'
  3952  0006' 3469               	retlw	105	;'i'
  3953  0007' 346F               	retlw	111	;'o'
  3954  0008' 346E               	retlw	110	;'n'
  3955  0009' 3420               	retlw	32	;' '
  3956  000A' 3466               	retlw	102	;'f'
  3957  000B' 3461               	retlw	97	;'a'
  3958  000C' 3469               	retlw	105	;'i'
  3959  000D' 346C               	retlw	108	;'l'
  3960  000E' 3465               	retlw	101	;'e'
  3961  000F' 3464               	retlw	100	;'d'
  3962  0010' 343A               	retlw	58	;':'
  3963  0011' 3420               	retlw	32	;' '
  3964  0012' 3425               	retlw	37	;'%'
  3965  0013' 3473               	retlw	115	;'s'
  3966  0014' 3420               	retlw	32	;' '
  3967  0015' 3428               	retlw	40	;'('
  3968  0016' 3425               	retlw	37	;'%'
  3969  0017' 3473               	retlw	115	;'s'
  3970  0018' 343A               	retlw	58	;':'
  3971  0019' 3420               	retlw	32	;' '
  3972  001A' 3425               	retlw	37	;'%'
  3973  001B' 3473               	retlw	115	;'s'
  3974  001C' 343A               	retlw	58	;':'
  3975  001D' 3420               	retlw	32	;' '
  3976  001E' 3425               	retlw	37	;'%'
  3977  001F' 3464               	retlw	100	;'d'
  3978  0020' 3429               	retlw	41	;')'
  3979  0021' 340A               	retlw	10
  3980  0022' 3400               	retlw	0
  3981                           
  3982                           	psect	stringtext8
  3983  0000'                    __pstringtext8:
  3984  0000'                    STR_9:
  3985  0000' 3453               	retlw	83	;'S'
  3986  0001' 3453               	retlw	83	;'S'
  3987  0002' 3450               	retlw	80	;'P'
  3988  0003' 3441               	retlw	65	;'A'
  3989  0004' 345F               	retlw	95	;'_'
  3990  0005' 3467               	retlw	103	;'g'
  3991  0006' 3465               	retlw	101	;'e'
  3992  0007' 3474               	retlw	116	;'t'
  3993  0008' 3454               	retlw	84	;'T'
  3994  0009' 3465               	retlw	101	;'e'
  3995  000A' 346D               	retlw	109	;'m'
  3996  000B' 3470               	retlw	112	;'p'
  3997  000C' 3400               	retlw	0
  3998                           
  3999                           	psect	stringtext9
  4000  0000'                    __pstringtext9:
  4001  0000'                    STR_15:
  4002  0000' 3453               	retlw	83	;'S'
  4003  0001' 3453               	retlw	83	;'S'
  4004  0002' 3450               	retlw	80	;'P'
  4005  0003' 3441               	retlw	65	;'A'
  4006  0004' 345F               	retlw	95	;'_'
  4007  0005' 3467               	retlw	103	;'g'
  4008  0006' 3465               	retlw	101	;'e'
  4009  0007' 3474               	retlw	116	;'t'
  4010  0008' 3450               	retlw	80	;'P'
  4011  0009' 344F               	retlw	79	;'O'
  4012  000A' 3475               	retlw	117	;'u'
  4013  000B' 3474               	retlw	116	;'t'
  4014  000C' 3400               	retlw	0
  4015                           
  4016                           	psect	stringtext10
  4017  0000'                    __pstringtext10:
  4018  0000'                    STR_3:
  4019  0000' 3467               	retlw	103	;'g'
  4020  0001' 3465               	retlw	101	;'e'
  4021  0002' 3474               	retlw	116	;'t'
  4022  0003' 3441               	retlw	65	;'A'
  4023  0004' 3444               	retlw	68	;'D'
  4024  0005' 3443               	retlw	67	;'C'
  4025  0006' 3456               	retlw	86	;'V'
  4026  0007' 3461               	retlw	97	;'a'
  4027  0008' 346C               	retlw	108	;'l'
  4028  0009' 3475               	retlw	117	;'u'
  4029  000A' 3465               	retlw	101	;'e'
  4030  000B' 3400               	retlw	0
  4031                           
  4032                           	psect	stringtext11
  4033  0000'                    __pstringtext11:
  4034  0000'                    STR_2:
  4035  0000' 346D               	retlw	109	;'m'
  4036  0001' 3461               	retlw	97	;'a'
  4037  0002' 3469               	retlw	105	;'i'
  4038  0003' 346E               	retlw	110	;'n'
  4039  0004' 342E               	retlw	46	;'.'
  4040  0005' 3463               	retlw	99	;'c'
  4041  0006' 3400               	retlw	0
  4042                           
  4043                           	psect	stringtext12
  4044  0000'                    __pstringtext12:
  4045  0000'                    
  4046                           	psect	cinit
  4047  0000'                    start_initialization:	
  4048                           ; #config settings
  4049                           
  4050  0000'                    __initialization:
  4051                           
  4052                           ; Initialize objects allocated to BANK2
  4053  0000' 3000'              	movlw	low __pidataBANK2
  4054  0001' 0084               	movwf	4
  4055  0002' 3000'              	movlw	(high __pidataBANK2)| (0+128)
  4056  0003' 0085               	movwf	5
  4057  0004' 3000'              	movlw	low __pdataBANK2
  4058  0005' 0086               	movwf	6
  4059  0006' 3000'              	movlw	high __pdataBANK2
  4060  0007' 0087               	movwf	7
  4061  0008' 3018               	movlw	24
  4062  0009' 3180' 2000' 3180'  	fcall	init_ram
  4063                           
  4064                           ; Clear objects allocated to COMMON
  4065  000C' 0180'              	clrf	__pbssCOMMON& (0+127)
  4066  000D' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
  4067  000E' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
  4068  000F' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
  4069  0010' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
  4070  0011' 0180'              	clrf	(__pbssCOMMON+5)& (0+127)
  4071                           
  4072                           ; Clear objects allocated to BANK1
  4073  0012' 3000'              	movlw	low __pbssBANK1
  4074  0013' 0084               	movwf	4
  4075  0014' 3000'              	movlw	high __pbssBANK1
  4076  0015' 0085               	movwf	5
  4077  0016' 3025               	movlw	37
  4078  0017' 3180' 2000' 3180'  	fcall	clear_ram0
  4079                           
  4080                           ; Clear objects allocated to BANK2
  4081  001A' 3000'              	movlw	low __pbssBANK2
  4082  001B' 0084               	movwf	4
  4083  001C' 3000'              	movlw	high __pbssBANK2
  4084  001D' 0085               	movwf	5
  4085  001E' 3020               	movlw	32
  4086  001F' 3180' 2000' 3180'  	fcall	clear_ram0
  4087  0022'                    end_of_initialization:	
  4088                           ;End of C runtime variable initialization code
  4089                           
  4090  0022'                    __end_of__initialization:
  4091  0022' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4092  0023' 0020               	movlb	0
  4093  0024' 3180' 2800'        	ljmp	_main	;jump to C main() function
  4094                           
  4095                           	psect	bssCOMMON
  4096  0000'                    __pbssCOMMON:
  4097  0000'                    _EUSART_FramingErrorHandler:
  4098  0000'                    	ds	2
  4099  0002'                    _INT_InterruptHandler:
  4100  0002'                    	ds	2
  4101  0004'                    _flags:
  4102  0004'                    	ds	1
  4103  0005'                    _count:
  4104  0005'                    	ds	1
  4105                           
  4106                           	psect	bssBANK1
  4107  0000'                    __pbssBANK1:
  4108  0000'                    _i2c1Status:
  4109  0000'                    	ds	14
  4110  000E'                    _funcs:
  4111  000E'                    	ds	6
  4112  0014'                    _width:
  4113  0014'                    	ds	2
  4114  0016'                    _prec:
  4115  0016'                    	ds	2
  4116  0018'                    _EUSART_OverrunErrorHandler:
  4117  0018'                    	ds	2
  4118  001A'                    _eusartRxLastError:
  4119  001A'                    	ds	2
  4120  001C'                    _I2C1_Callback:
  4121  001C'                    	ds	2
  4122  001E'                    _kaps:
  4123  001E'                    	ds	7
  4124                           
  4125                           	psect	bssBANK2
  4126  0000'                    __pbssBANK2:
  4127  0000'                    _dbuf:
  4128  0000'                    	ds	32
  4129                           
  4130                           	psect	dataBANK2
  4131  0000'                    __pdataBANK2:
  4132  0000'                    _sppas:
  4133  0000'                    	ds	24
  4134                           
  4135                           	psect	inittext
  4136  0000'                    init_ram:
  4137  0000' 00FE               	movwf	btemp
  4138  0001'                    initloop:
  4139  0001' 0012               	moviw fsr0++
  4140  0002' 001E               	movwi fsr1++
  4141  0003' 0BFE               	decfsz	btemp,f
  4142  0004' 2800'              	goto	initloop
  4143  0005' 3400               	retlw	0
  4144                           
  4145                           	psect	clrtext
  4146  0000'                    clear_ram0:	
  4147                           ;	Called with FSR0 containing the base address, and
  4148                           ;	WREG with the size to clear
  4149                           
  4150  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  4151  0001'                    clrloop0:
  4152  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  4153  0002' 3101               	addfsr 0,1
  4154  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4155  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  4156  0005' 3400               	retlw	0	;all done for this memory range, return
  4157                           
  4158                           	psect	cstackBANK1
  4159  0000'                    __pcstackBANK1:
  4160  0000'                    ??___fltol:
  4161                           
  4162                           ; 1 bytes @ 0x0
  4163  0000'                    	ds	4
  4164  0004'                    ?_SSPA_getTemp:
  4165  0004'                    ?_SSPA_getPOut:	
  4166                           ; 1 bytes @ 0x4
  4167                           
  4168  0004'                    SSPA_getTemp@band:	
  4169                           ; 1 bytes @ 0x4
  4170                           
  4171  0004'                    SSPA_getPOut@band:	
  4172                           ; 1 bytes @ 0x4
  4173                           
  4174                           
  4175                           ; 1 bytes @ 0x4
  4176  0004'                    	ds	1
  4177  0005'                    ??_SSPA_getTemp:
  4178  0005'                    ??_SSPA_getPOut:	
  4179                           ; 1 bytes @ 0x5
  4180                           
  4181                           
  4182                           ; 1 bytes @ 0x5
  4183  0005'                    	ds	2
  4184  0007'                    SSPA_getPOut@sspa:
  4185  0007'                    SSPA_getTemp@adc_value:	
  4186                           ; 1 bytes @ 0x7
  4187                           
  4188                           
  4189                           ; 2 bytes @ 0x7
  4190  0007'                    	ds	1
  4191  0008'                    SSPA_getPOut@adc_value:
  4192                           
  4193                           ; 2 bytes @ 0x8
  4194  0008'                    	ds	1
  4195  0009'                    SSPA_getTemp@sspa:
  4196                           
  4197                           ; 1 bytes @ 0x9
  4198  0009'                    	ds	1
  4199  000A'                    SSPA_getTemp@channel:
  4200  000A'                    SSPA_getPOut@channel:	
  4201                           ; 1 bytes @ 0xA
  4202                           
  4203                           
  4204                           ; 1 bytes @ 0xA
  4205  000A'                    	ds	1
  4206  000B'                    ?_ProcessMsg:
  4207  000B'                    ProcessMsg@data:	
  4208                           ; 1 bytes @ 0xB
  4209                           
  4210                           
  4211                           ; 1 bytes @ 0xB
  4212  000B'                    	ds	1
  4213  000C'                    ??_ProcessMsg:
  4214                           
  4215                           ; 1 bytes @ 0xC
  4216  000C'                    	ds	1
  4217  000D'                    ProcessMsg@msg_id:
  4218                           
  4219                           ; 1 bytes @ 0xD
  4220  000D'                    	ds	1
  4221  000E'                    ProcessMsg@payload:
  4222                           
  4223                           ; 6 bytes @ 0xE
  4224  000E'                    	ds	6
  4225  0014'                    ?_Parse:
  4226  0014'                    Parse@data:	
  4227                           ; 1 bytes @ 0x14
  4228                           
  4229                           
  4230                           ; 1 bytes @ 0x14
  4231  0014'                    	ds	1
  4232  0015'                    ??_Parse:
  4233                           
  4234                           ; 1 bytes @ 0x15
  4235  0015'                    	ds	2
  4236  0017'                    Parse@parser:
  4237                           
  4238                           ; 1 bytes @ 0x17
  4239  0017'                    	ds	1
  4240  0018'                    main@data:
  4241                           
  4242                           ; 1 bytes @ 0x18
  4243  0018'                    	ds	1
  4244  0019'                    main@parser:
  4245                           
  4246                           ; 12 bytes @ 0x19
  4247  0019'                    	ds	12
  4248                           
  4249                           	psect	cstackCOMMON
  4250  0000'                    __pcstackCOMMON:
  4251  0000'                    ?_ADC_DefaultInterruptHandler:
  4252  0000'                    ??_ADC_DefaultInterruptHandler:	
  4253                           ; 1 bytes @ 0x0
  4254                           
  4255  0000'                    ?_I2C1_Initialize:	
  4256                           ; 1 bytes @ 0x0
  4257                           
  4258  0000'                    ?_I2C1_EVENT_IDLE:	
  4259                           ; 1 bytes @ 0x0
  4260                           
  4261  0000'                    ??_I2C1_EVENT_IDLE:	
  4262                           ; 1 bytes @ 0x0
  4263                           
  4264  0000'                    ?_I2C1_EVENT_SEND_RD_ADDR:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267  0000'                    ??_I2C1_EVENT_SEND_RD_ADDR:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270  0000'                    ?_I2C1_EVENT_SEND_WR_ADDR:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273  0000'                    ?_I2C1_EVENT_TX:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276  0000'                    ?_I2C1_EVENT_RX:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0000'                    ??_I2C1_EVENT_RX:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0000'                    ?_I2C1_EVENT_NACK:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0000'                    ??_I2C1_EVENT_NACK:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0000'                    ?_I2C1_EVENT_ERROR:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0000'                    ??_I2C1_EVENT_ERROR:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0000'                    ?_I2C1_EVENT_STOP:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0000'                    ??_I2C1_EVENT_STOP:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0000'                    ?_I2C1_EVENT_RESET:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0000'                    ??_I2C1_EVENT_RESET:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0000'                    ?_I2C1_InterruptsEnable:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0000'                    ?_I2C1_DefaultCallback:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0000'                    ??_I2C1_DefaultCallback:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0000'                    ?_I2C1_EventHandler:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0000'                    ?_I2C1_ErrorEventHandler:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0000'                    ?_I2C1_InterruptClear:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0000'                    ??_I2C1_InterruptClear:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0000'                    ?_I2C1_ErrorInterruptClear:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0000'                    ??_I2C1_ErrorInterruptClear:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0000'                    ?_I2C1_StatusFlagsClear:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0000'                    ??_I2C1_StatusFlagsClear:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0000'                    ?_I2C1_IsAddr:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0000'                    ??_I2C1_IsAddr:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0000'                    ?_I2C1_IsNack:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0000'                    ??_I2C1_IsNack:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0000'                    ?_I2C1_IsData:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0000'                    ??_I2C1_IsData:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0000'                    ?_I2C1_DataTransmit:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0000'                    ??_I2C1_DataTransmit:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0000'                    ?_I2C1_RestartEnable:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0000'                    ??_I2C1_RestartEnable:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0000'                    ?_I2C1_IsRxBufFull:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0000'                    ??_I2C1_IsRxBufFull:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0000'                    ?_I2C1_DataReceive:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378  0000'                    ??_I2C1_DataReceive:	
  4379                           ; 1 bytes @ 0x0
  4380                           
  4381  0000'                    ?_I2C1_AckSend:	
  4382                           ; 1 bytes @ 0x0
  4383                           
  4384  0000'                    ??_I2C1_AckSend:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0000'                    ?_I2C1_RestartDisable:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0000'                    ??_I2C1_RestartDisable:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0000'                    ?_I2C1_NackSend:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0000'                    ??_I2C1_NackSend:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399  0000'                    ?_I2C1_ReceiveEnable:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402  0000'                    ??_I2C1_ReceiveEnable:	
  4403                           ; 1 bytes @ 0x0
  4404                           
  4405  0000'                    ?_I2C1_StopSend:	
  4406                           ; 1 bytes @ 0x0
  4407                           
  4408  0000'                    ??_I2C1_StopSend:	
  4409                           ; 1 bytes @ 0x0
  4410                           
  4411  0000'                    ?_I2C1_BusReset:	
  4412                           ; 1 bytes @ 0x0
  4413                           
  4414  0000'                    ??_I2C1_BusReset:	
  4415                           ; 1 bytes @ 0x0
  4416                           
  4417  0000'                    ?_EUSART_Initialize:	
  4418                           ; 1 bytes @ 0x0
  4419                           
  4420  0000'                    ?_EUSART_Read:	
  4421                           ; 1 bytes @ 0x0
  4422                           
  4423  0000'                    ?_EUSART_IsRxReady:	
  4424                           ; 1 bytes @ 0x0
  4425                           
  4426  0000'                    ?_EUSART_DefaultFramingErrorCallback:	
  4427                           ; 1 bytes @ 0x0
  4428                           
  4429  0000'                    ?_EUSART_DefaultOverrunErrorCallback:	
  4430                           ; 1 bytes @ 0x0
  4431                           
  4432  0000'                    ?_abort:	
  4433                           ; 1 bytes @ 0x0
  4434                           
  4435  0000'                    ?___funcs_on_exit:	
  4436                           ; 1 bytes @ 0x0
  4437                           
  4438  0000'                    ?_putch:	
  4439                           ; 1 bytes @ 0x0
  4440                           
  4441  0000'                    ?_ADC_Initialize:	
  4442                           ; 1 bytes @ 0x0
  4443                           
  4444  0000'                    ?_ADC_SelectChannel:	
  4445                           ; 1 bytes @ 0x0
  4446                           
  4447  0000'                    ?_ADC_StartConversion:	
  4448                           ; 1 bytes @ 0x0
  4449                           
  4450  0000'                    ?_ADC_IsConversionDone:	
  4451                           ; 1 bytes @ 0x0
  4452                           
  4453  0000'                    ?_ADC_ISR:	
  4454                           ; 1 bytes @ 0x0
  4455                           
  4456  0000'                    ??_ADC_ISR:	
  4457                           ; 1 bytes @ 0x0
  4458                           
  4459  0000'                    ?_I2C1_ISR:	
  4460                           ; 1 bytes @ 0x0
  4461                           
  4462  0000'                    ?_I2C1_ERROR_ISR:	
  4463                           ; 1 bytes @ 0x0
  4464                           
  4465  0000'                    ?_I2C1_Close:	
  4466                           ; 1 bytes @ 0x0
  4467                           
  4468  0000'                    ??_I2C1_Close:	
  4469                           ; 1 bytes @ 0x0
  4470                           
  4471  0000'                    ?_CLOCK_Initialize:	
  4472                           ; 1 bytes @ 0x0
  4473                           
  4474  0000'                    ?_PIN_MANAGER_Initialize:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477  0000'                    ?_INTERRUPT_Initialize:	
  4478                           ; 1 bytes @ 0x0
  4479                           
  4480  0000'                    ?_INTERRUPT_InterruptManager:	
  4481                           ; 1 bytes @ 0x0
  4482                           
  4483  0000'                    ?_SYSTEM_Initialize:	
  4484                           ; 1 bytes @ 0x0
  4485                           
  4486  0000'                    ?_KAPS_getStatus:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0000'                    ?_KAPS_getIndex:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0000'                    ?_KAPS_getPos:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0000'                    ?_SendNack:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0000'                    ?_main:	
  4499                           ; 1 bytes @ 0x0
  4500                           
  4501  0000'                    I2C1_EVENT_NACK@retEventState:	
  4502                           ; 2 bytes @ 0x0
  4503                           
  4504  0000'                    I2C1_EVENT_ERROR@retEventState:	
  4505                           ; 1 bytes @ 0x0
  4506                           
  4507  0000'                    I2C1_DataTransmit@data:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0000'                    putch@c:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513                           
  4514                           ; 1 bytes @ 0x0
  4515  0000'                    	ds	1
  4516  0001'                    ??_I2C1_EVENT_SEND_WR_ADDR:
  4517  0001'                    ??_I2C1_EVENT_TX:	
  4518                           ; 1 bytes @ 0x1
  4519                           
  4520  0001'                    I2C1_EVENT_RX@retEventState:	
  4521                           ; 1 bytes @ 0x1
  4522                           
  4523                           
  4524                           ; 1 bytes @ 0x1
  4525  0001'                    	ds	2
  4526  0003'                    I2C1_EVENT_TX@retEventState:
  4527                           
  4528                           ; 1 bytes @ 0x3
  4529  0003'                    	ds	1
  4530  0004'                    ??_I2C1_EventHandler:
  4531  0004'                    ??_I2C1_ErrorEventHandler:	
  4532                           ; 1 bytes @ 0x4
  4533                           
  4534                           
  4535                           ; 1 bytes @ 0x4
  4536  0004'                    	ds	2
  4537  0006'                    ??_I2C1_ISR:
  4538  0006'                    ??_I2C1_ERROR_ISR:	
  4539                           ; 1 bytes @ 0x6
  4540                           
  4541  0006'                    ??_INTERRUPT_InterruptManager:	
  4542                           ; 1 bytes @ 0x6
  4543                           
  4544                           
  4545                           	psect	cstackBANK0
  4546  0000'                    __pcstackBANK0:	
  4547                           ; 1 bytes @ 0x6
  4548                           
  4549  0000'                    ?_ADC_SetInterruptHandler:
  4550  0000'                    ?_I2C1_CallbackRegister:	
  4551                           ; 1 bytes @ 0x0
  4552                           
  4553  0000'                    ??_I2C1_InterruptsEnable:	
  4554                           ; 1 bytes @ 0x0
  4555                           
  4556  0000'                    ?_INT_SetInterruptHandler:	
  4557                           ; 1 bytes @ 0x0
  4558                           
  4559  0000'                    ??_EUSART_Read:	
  4560                           ; 1 bytes @ 0x0
  4561                           
  4562  0000'                    ?_EUSART_Write:	
  4563                           ; 1 bytes @ 0x0
  4564                           
  4565  0000'                    ??_EUSART_IsRxReady:	
  4566                           ; 1 bytes @ 0x0
  4567                           
  4568  0000'                    ?_EUSART_FramingErrorCallbackRegister:	
  4569                           ; 1 bytes @ 0x0
  4570                           
  4571  0000'                    ?_EUSART_OverrunErrorCallbackRegister:	
  4572                           ; 1 bytes @ 0x0
  4573                           
  4574  0000'                    ??_EUSART_DefaultFramingErrorCallback:	
  4575                           ; 1 bytes @ 0x0
  4576                           
  4577  0000'                    ??_EUSART_DefaultOverrunErrorCallback:	
  4578                           ; 1 bytes @ 0x0
  4579                           
  4580  0000'                    ??___funcs_on_exit:	
  4581                           ; 1 bytes @ 0x0
  4582                           
  4583  0000'                    ?__Exit:	
  4584                           ; 1 bytes @ 0x0
  4585                           
  4586  0000'                    ??_putch:	
  4587                           ; 1 bytes @ 0x0
  4588                           
  4589  0000'                    ??_ADC_SelectChannel:	
  4590                           ; 1 bytes @ 0x0
  4591                           
  4592  0000'                    ??_ADC_StartConversion:	
  4593                           ; 1 bytes @ 0x0
  4594                           
  4595  0000'                    ??_ADC_IsConversionDone:	
  4596                           ; 1 bytes @ 0x0
  4597                           
  4598  0000'                    ??_CLOCK_Initialize:	
  4599                           ; 1 bytes @ 0x0
  4600                           
  4601  0000'                    ??_PIN_MANAGER_Initialize:	
  4602                           ; 1 bytes @ 0x0
  4603                           
  4604  0000'                    ?_unpackLong:	
  4605                           ; 1 bytes @ 0x0
  4606                           
  4607  0000'                    ?_unpackWord:	
  4608                           ; 1 bytes @ 0x0
  4609                           
  4610  0000'                    ?_SSPA_setMute:	
  4611                           ; 1 bytes @ 0x0
  4612                           
  4613  0000'                    ?_KAPS_GoToIdx:	
  4614                           ; 1 bytes @ 0x0
  4615                           
  4616  0000'                    ??_KAPS_getStatus:	
  4617                           ; 1 bytes @ 0x0
  4618                           
  4619  0000'                    ??_KAPS_getIndex:	
  4620                           ; 1 bytes @ 0x0
  4621                           
  4622  0000'                    ??_KAPS_getPos:	
  4623                           ; 1 bytes @ 0x0
  4624                           
  4625  0000'                    ?__Umul8_16:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0000'                    ?_fputc:	
  4629                           ; 2 bytes @ 0x0
  4630                           
  4631  0000'                    ?_ADC_GetConversionResult:	
  4632                           ; 2 bytes @ 0x0
  4633                           
  4634  0000'                    ?___awdiv:	
  4635                           ; 2 bytes @ 0x0
  4636                           
  4637  0000'                    ?___awmod:	
  4638                           ; 2 bytes @ 0x0
  4639                           
  4640  0000'                    ?_packLong:	
  4641                           ; 2 bytes @ 0x0
  4642                           
  4643  0000'                    ?___fladd:	
  4644                           ; 4 bytes @ 0x0
  4645                           
  4646  0000'                    ?___xxtofl:	
  4647                           ; 4 bytes @ 0x0
  4648                           
  4649  0000'                    EUSART_Write@txData:	
  4650                           ; 4 bytes @ 0x0
  4651                           
  4652  0000'                    SSPA_setMute@band:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0000'                    KAPS_GoToIdx@idx:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0000'                    KAPS_getStatus@kaps:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0000'                    KAPS_getIndex@kaps:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0000'                    KAPS_getPos@kaps:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0000'                    __Umul8_16@multiplicand:	
  4668                           ; 1 bytes @ 0x0
  4669                           
  4670  0000'                    ADC_SetInterruptHandler@InterruptHandler:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0000'                    I2C1_CallbackRegister@callbackHandler:	
  4674                           ; 2 bytes @ 0x0
  4675                           
  4676  0000'                    INT_SetInterruptHandler@InterruptHandler:	
  4677                           ; 2 bytes @ 0x0
  4678                           
  4679  0000'                    EUSART_FramingErrorCallbackRegister@callbackHandler:	
  4680                           ; 2 bytes @ 0x0
  4681                           
  4682  0000'                    EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  4683                           ; 2 bytes @ 0x0
  4684                           
  4685  0000'                    unpackWord@value:	
  4686                           ; 2 bytes @ 0x0
  4687                           
  4688  0000'                    ___awdiv@divisor:	
  4689                           ; 2 bytes @ 0x0
  4690                           
  4691  0000'                    ___awmod@divisor:	
  4692                           ; 2 bytes @ 0x0
  4693                           
  4694  0000'                    __Exit@ec:	
  4695                           ; 2 bytes @ 0x0
  4696                           
  4697  0000'                    fputc@c:	
  4698                           ; 2 bytes @ 0x0
  4699                           
  4700  0000'                    unpackLong@value:	
  4701                           ; 2 bytes @ 0x0
  4702                           
  4703  0000'                    ___fladd@b:	
  4704                           ; 4 bytes @ 0x0
  4705                           
  4706  0000'                    ___xxtofl@val:	
  4707                           ; 4 bytes @ 0x0
  4708                           
  4709                           
  4710                           ; 4 bytes @ 0x0
  4711  0000'                    	ds	1
  4712  0001'                    ??_EUSART_Write:
  4713  0001'                    ??_KAPS_GoToIdx:	
  4714                           ; 1 bytes @ 0x1
  4715                           
  4716  0001'                    ?_SendMsg:	
  4717                           ; 1 bytes @ 0x1
  4718                           
  4719  0001'                    ADC_SelectChannel@channel:	
  4720                           ; 1 bytes @ 0x1
  4721                           
  4722  0001'                    SSPA_setMute@mute:	
  4723                           ; 1 bytes @ 0x1
  4724                           
  4725  0001'                    KAPS_GoToIdx@kaps:	
  4726                           ; 1 bytes @ 0x1
  4727                           
  4728  0001'                    SendMsg@data:	
  4729                           ; 1 bytes @ 0x1
  4730                           
  4731                           
  4732                           ; 1 bytes @ 0x1
  4733  0001'                    	ds	1
  4734  0002'                    ??_ADC_SetInterruptHandler:
  4735  0002'                    ??_I2C1_Initialize:	
  4736                           ; 1 bytes @ 0x2
  4737                           
  4738  0002'                    ??_I2C1_CallbackRegister:	
  4739                           ; 1 bytes @ 0x2
  4740                           
  4741  0002'                    ??_INT_SetInterruptHandler:	
  4742                           ; 1 bytes @ 0x2
  4743                           
  4744  0002'                    ??_EUSART_Initialize:	
  4745                           ; 1 bytes @ 0x2
  4746                           
  4747  0002'                    ??_EUSART_FramingErrorCallbackRegister:	
  4748                           ; 1 bytes @ 0x2
  4749                           
  4750  0002'                    ??_EUSART_OverrunErrorCallbackRegister:	
  4751                           ; 1 bytes @ 0x2
  4752                           
  4753  0002'                    ??__Umul8_16:	
  4754                           ; 1 bytes @ 0x2
  4755                           
  4756  0002'                    ?_exit:	
  4757                           ; 1 bytes @ 0x2
  4758                           
  4759  0002'                    ??__Exit:	
  4760                           ; 1 bytes @ 0x2
  4761                           
  4762  0002'                    ??_ADC_Initialize:	
  4763                           ; 1 bytes @ 0x2
  4764                           
  4765  0002'                    ??_ADC_GetConversionResult:	
  4766                           ; 1 bytes @ 0x2
  4767                           
  4768  0002'                    ??_INTERRUPT_Initialize:	
  4769                           ; 1 bytes @ 0x2
  4770                           
  4771  0002'                    ??_SYSTEM_Initialize:	
  4772                           ; 1 bytes @ 0x2
  4773                           
  4774  0002'                    ??_SSPA_setMute:	
  4775                           ; 1 bytes @ 0x2
  4776                           
  4777  0002'                    unpackWord@data:	
  4778                           ; 1 bytes @ 0x2
  4779                           
  4780  0002'                    SSPA_setMute@sspa:	
  4781                           ; 1 bytes @ 0x2
  4782                           
  4783  0002'                    SendMsg@data_len:	
  4784                           ; 1 bytes @ 0x2
  4785                           
  4786  0002'                    ___awdiv@dividend:	
  4787                           ; 1 bytes @ 0x2
  4788                           
  4789  0002'                    ___awmod@dividend:	
  4790                           ; 2 bytes @ 0x2
  4791                           
  4792  0002'                    exit@code:	
  4793                           ; 2 bytes @ 0x2
  4794                           
  4795  0002'                    fputc@fp:	
  4796                           ; 2 bytes @ 0x2
  4797                           
  4798                           
  4799                           ; 2 bytes @ 0x2
  4800  0002'                    	ds	1
  4801  0003'                    ??_unpackWord:
  4802  0003'                    ??_SendMsg:	
  4803                           ; 1 bytes @ 0x3
  4804                           
  4805                           
  4806                           ; 1 bytes @ 0x3
  4807  0003'                    	ds	1
  4808  0004'                    ??_abort:
  4809  0004'                    ??_exit:	
  4810                           ; 1 bytes @ 0x4
  4811                           
  4812  0004'                    ??_fputc:	
  4813                           ; 1 bytes @ 0x4
  4814                           
  4815  0004'                    ??_packLong:	
  4816                           ; 1 bytes @ 0x4
  4817                           
  4818  0004'                    ??___awdiv:	
  4819                           ; 1 bytes @ 0x4
  4820                           
  4821  0004'                    ??___awmod:	
  4822                           ; 1 bytes @ 0x4
  4823                           
  4824  0004'                    ??___xxtofl:	
  4825                           ; 1 bytes @ 0x4
  4826                           
  4827  0004'                    unpackLong@data:	
  4828                           ; 1 bytes @ 0x4
  4829                           
  4830  0004'                    SendMsg@sum:	
  4831                           ; 1 bytes @ 0x4
  4832                           
  4833  0004'                    __Umul8_16@product:	
  4834                           ; 1 bytes @ 0x4
  4835                           
  4836  0004'                    ___fladd@a:	
  4837                           ; 2 bytes @ 0x4
  4838                           
  4839                           
  4840                           ; 4 bytes @ 0x4
  4841  0004'                    	ds	1
  4842  0005'                    ??_unpackLong:
  4843  0005'                    SendMsg@msg_id:	
  4844                           ; 1 bytes @ 0x5
  4845                           
  4846  0005'                    ___awdiv@counter:	
  4847                           ; 1 bytes @ 0x5
  4848                           
  4849  0005'                    ___awmod@counter:	
  4850                           ; 1 bytes @ 0x5
  4851                           
  4852                           
  4853                           ; 1 bytes @ 0x5
  4854  0005'                    	ds	1
  4855  0006'                    ??_SendNack:
  4856  0006'                    SendNack@error:	
  4857                           ; 1 bytes @ 0x6
  4858                           
  4859  0006'                    ___awdiv@sign:	
  4860                           ; 1 bytes @ 0x6
  4861                           
  4862  0006'                    ___awmod@sign:	
  4863                           ; 1 bytes @ 0x6
  4864                           
  4865  0006'                    __Umul8_16@word_mpld:	
  4866                           ; 1 bytes @ 0x6
  4867                           
  4868                           
  4869                           ; 2 bytes @ 0x6
  4870  0006'                    	ds	1
  4871  0007'                    ?_abs:
  4872  0007'                    ___awdiv@quotient:	
  4873                           ; 2 bytes @ 0x7
  4874                           
  4875  0007'                    abs@a:	
  4876                           ; 2 bytes @ 0x7
  4877                           
  4878                           
  4879                           ; 2 bytes @ 0x7
  4880  0007'                    	ds	1
  4881  0008'                    ??___fladd:
  4882  0008'                    __Umul8_16@multiplier:	
  4883                           ; 1 bytes @ 0x8
  4884                           
  4885  0008'                    ___xxtofl@sign:	
  4886                           ; 1 bytes @ 0x8
  4887                           
  4888  0008'                    packLong@result:	
  4889                           ; 1 bytes @ 0x8
  4890                           
  4891                           
  4892                           ; 4 bytes @ 0x8
  4893  0008'                    	ds	1
  4894  0009'                    ??_abs:
  4895  0009'                    ___xxtofl@exp:	
  4896                           ; 1 bytes @ 0x9
  4897                           
  4898                           
  4899                           ; 1 bytes @ 0x9
  4900  0009'                    	ds	1
  4901  000A'                    ___xxtofl@arg:
  4902                           
  4903                           ; 4 bytes @ 0xA
  4904  000A'                    	ds	1
  4905  000B'                    ?_vfpfcnvrt:
  4906  000B'                    vfpfcnvrt@fp:	
  4907                           ; 1 bytes @ 0xB
  4908                           
  4909                           
  4910                           ; 2 bytes @ 0xB
  4911  000B'                    	ds	1
  4912  000C'                    packLong@data:
  4913                           
  4914                           ; 1 bytes @ 0xC
  4915  000C'                    	ds	1
  4916  000D'                    ?_KAPS_setAbsPos:
  4917  000D'                    ?_KAPS_setRelPos:	
  4918                           ; 1 bytes @ 0xD
  4919                           
  4920  000D'                    ?_KAPS_StorePos:	
  4921                           ; 1 bytes @ 0xD
  4922                           
  4923  000D'                    KAPS_StorePos@idx:	
  4924                           ; 1 bytes @ 0xD
  4925                           
  4926  000D'                    vfpfcnvrt@fmt:	
  4927                           ; 1 bytes @ 0xD
  4928                           
  4929  000D'                    KAPS_setAbsPos@pos:	
  4930                           ; 1 bytes @ 0xD
  4931                           
  4932  000D'                    KAPS_setRelPos@offset:	
  4933                           ; 4 bytes @ 0xD
  4934                           
  4935                           
  4936                           ; 4 bytes @ 0xD
  4937  000D'                    	ds	1
  4938  000E'                    ?___flmul:
  4939  000E'                    vfpfcnvrt@ap:	
  4940                           ; 4 bytes @ 0xE
  4941                           
  4942  000E'                    KAPS_StorePos@pos:	
  4943                           ; 1 bytes @ 0xE
  4944                           
  4945  000E'                    ___flmul@b:	
  4946                           ; 4 bytes @ 0xE
  4947                           
  4948                           
  4949                           ; 4 bytes @ 0xE
  4950  000E'                    	ds	1
  4951  000F'                    ??_vfpfcnvrt:
  4952                           
  4953                           ; 1 bytes @ 0xF
  4954  000F'                    	ds	1
  4955  0010'                    ___fladd@signs:
  4956                           
  4957                           ; 1 bytes @ 0x10
  4958  0010'                    	ds	1
  4959  0011'                    ??_KAPS_setAbsPos:
  4960  0011'                    ??_KAPS_setRelPos:	
  4961                           ; 1 bytes @ 0x11
  4962                           
  4963  0011'                    KAPS_setAbsPos@kaps:	
  4964                           ; 1 bytes @ 0x11
  4965                           
  4966  0011'                    KAPS_setRelPos@kaps:	
  4967                           ; 1 bytes @ 0x11
  4968                           
  4969  0011'                    ___fladd@aexp:	
  4970                           ; 1 bytes @ 0x11
  4971                           
  4972                           
  4973                           ; 1 bytes @ 0x11
  4974  0011'                    	ds	1
  4975  0012'                    ??_KAPS_StorePos:
  4976  0012'                    KAPS_StorePos@kaps:	
  4977                           ; 1 bytes @ 0x12
  4978                           
  4979  0012'                    ___fladd@bexp:	
  4980                           ; 1 bytes @ 0x12
  4981                           
  4982  0012'                    ___flmul@a:	
  4983                           ; 1 bytes @ 0x12
  4984                           
  4985                           
  4986                           ; 4 bytes @ 0x12
  4987  0012'                    	ds	1
  4988  0013'                    ___fladd@grs:
  4989  0013'                    vfpfcnvrt@cp_2048:	
  4990                           ; 1 bytes @ 0x13
  4991                           
  4992                           
  4993                           ; 2 bytes @ 0x13
  4994  0013'                    	ds	2
  4995  0015'                    vfpfcnvrt@cp:
  4996                           
  4997                           ; 2 bytes @ 0x15
  4998  0015'                    	ds	1
  4999  0016'                    ??___flmul:
  5000                           
  5001                           ; 1 bytes @ 0x16
  5002  0016'                    	ds	1
  5003  0017'                    vfpfcnvrt@done:
  5004                           
  5005                           ; 1 bytes @ 0x17
  5006  0017'                    	ds	1
  5007  0018'                    vfpfcnvrt@convarg:
  5008                           
  5009                           ; 4 bytes @ 0x18
  5010  0018'                    	ds	3
  5011  001B'                    ___flmul@sign:
  5012                           
  5013                           ; 1 bytes @ 0x1B
  5014  001B'                    	ds	1
  5015  001C'                    ___flmul@aexp:
  5016  001C'                    vfpfcnvrt@c:	
  5017                           ; 1 bytes @ 0x1C
  5018                           
  5019                           
  5020                           ; 1 bytes @ 0x1C
  5021  001C'                    	ds	1
  5022  001D'                    ?_vfprintf:
  5023  001D'                    vfprintf@fp:	
  5024                           ; 2 bytes @ 0x1D
  5025                           
  5026  001D'                    ___flmul@grs:	
  5027                           ; 2 bytes @ 0x1D
  5028                           
  5029                           
  5030                           ; 4 bytes @ 0x1D
  5031  001D'                    	ds	2
  5032  001F'                    vfprintf@fmt:
  5033                           
  5034                           ; 2 bytes @ 0x1F
  5035  001F'                    	ds	2
  5036  0021'                    ___flmul@bexp:
  5037  0021'                    vfprintf@ap:	
  5038                           ; 1 bytes @ 0x21
  5039                           
  5040                           
  5041                           ; 1 bytes @ 0x21
  5042  0021'                    	ds	1
  5043  0022'                    ??_vfprintf:
  5044  0022'                    ___flmul@prod:	
  5045                           ; 1 bytes @ 0x22
  5046                           
  5047                           
  5048                           ; 4 bytes @ 0x22
  5049  0022'                    	ds	1
  5050  0023'                    vfprintf@cfmt:
  5051                           
  5052                           ; 2 bytes @ 0x23
  5053  0023'                    	ds	2
  5054  0025'                    ?_printf:
  5055  0025'                    printf@fmt:	
  5056                           ; 2 bytes @ 0x25
  5057                           
  5058                           
  5059                           ; 2 bytes @ 0x25
  5060  0025'                    	ds	1
  5061  0026'                    ___flmul@temp:
  5062                           
  5063                           ; 2 bytes @ 0x26
  5064  0026'                    	ds	2
  5065  0028'                    ?___flsub:
  5066  0028'                    ___flsub@a:	
  5067                           ; 4 bytes @ 0x28
  5068                           
  5069                           
  5070                           ; 4 bytes @ 0x28
  5071  0028'                    	ds	4
  5072  002C'                    ___flsub@b:
  5073                           
  5074                           ; 4 bytes @ 0x2C
  5075  002C'                    	ds	3
  5076  002F'                    ??_printf:
  5077  002F'                    printf@ap:	
  5078                           ; 1 bytes @ 0x2F
  5079                           
  5080                           
  5081                           ; 1 bytes @ 0x2F
  5082  002F'                    	ds	1
  5083  0030'                    ?___assert_fail:
  5084  0030'                    ??___flsub:	
  5085                           ; 1 bytes @ 0x30
  5086                           
  5087  0030'                    ?___fldiv:	
  5088                           ; 1 bytes @ 0x30
  5089                           
  5090  0030'                    ___assert_fail@expr:	
  5091                           ; 4 bytes @ 0x30
  5092                           
  5093  0030'                    ___fldiv@a:	
  5094                           ; 2 bytes @ 0x30
  5095                           
  5096                           
  5097                           ; 4 bytes @ 0x30
  5098  0030'                    	ds	2
  5099  0032'                    ___assert_fail@file:
  5100                           
  5101                           ; 2 bytes @ 0x32
  5102  0032'                    	ds	2
  5103  0034'                    ___assert_fail@line:
  5104  0034'                    ___fldiv@b:	
  5105                           ; 2 bytes @ 0x34
  5106                           
  5107                           
  5108                           ; 4 bytes @ 0x34
  5109  0034'                    	ds	2
  5110  0036'                    ___assert_fail@func:
  5111                           
  5112                           ; 2 bytes @ 0x36
  5113  0036'                    	ds	2
  5114  0038'                    ??___assert_fail:
  5115  0038'                    ??___fldiv:	
  5116                           ; 1 bytes @ 0x38
  5117                           
  5118  0038'                    ?_getADCValue:	
  5119                           ; 1 bytes @ 0x38
  5120                           
  5121                           
  5122                           ; 2 bytes @ 0x38
  5123  0038'                    	ds	2
  5124  003A'                    ??_getADCValue:
  5125                           
  5126                           ; 1 bytes @ 0x3A
  5127  003A'                    	ds	2
  5128  003C'                    getADCValue@channel:
  5129                           
  5130                           ; 1 bytes @ 0x3C
  5131  003C'                    	ds	1
  5132  003D'                    getADCValue@avg:
  5133  003D'                    ___fldiv@rem:	
  5134                           ; 2 bytes @ 0x3D
  5135                           
  5136                           
  5137                           ; 4 bytes @ 0x3D
  5138  003D'                    	ds	2
  5139  003F'                    getADCValue@i:
  5140                           
  5141                           ; 1 bytes @ 0x3F
  5142  003F'                    	ds	2
  5143  0041'                    ___fldiv@sign:
  5144                           
  5145                           ; 1 bytes @ 0x41
  5146  0041'                    	ds	1
  5147  0042'                    ___fldiv@new_exp:
  5148                           
  5149                           ; 2 bytes @ 0x42
  5150  0042'                    	ds	2
  5151  0044'                    ___fldiv@grs:
  5152                           
  5153                           ; 4 bytes @ 0x44
  5154  0044'                    	ds	4
  5155  0048'                    ___fldiv@bexp:
  5156                           
  5157                           ; 1 bytes @ 0x48
  5158  0048'                    	ds	1
  5159  0049'                    ___fldiv@aexp:
  5160                           
  5161                           ; 1 bytes @ 0x49
  5162  0049'                    	ds	1
  5163  004A'                    ?___fltol:
  5164  004A'                    ___fltol@f1:	
  5165                           ; 4 bytes @ 0x4A
  5166                           
  5167                           
  5168                           ; 4 bytes @ 0x4A
  5169  004A'                    	ds	4
  5170  004E'                    ___fltol@sign1:
  5171                           
  5172                           ; 1 bytes @ 0x4E
  5173  004E'                    	ds	1
  5174  004F'                    ___fltol@exp1:
  5175                           
  5176                           ; 1 bytes @ 0x4F
  5177  004F'                    	ds	1
  5178  0050'                    ??_main:
  5179                           
  5180                           	psect	maintext
  5181  0000'                    __pmaintext:	
  5182                           ; 1 bytes @ 0x50
  5183 ;;
  5184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5185 ;;
  5186 ;; *************** function _main *****************
  5187 ;; Defined at:
  5188 ;;		line 608 in file "main.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  parser         12   25[BANK1 ] struct .
  5193 ;;  data            1   24[BANK1 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  2  795[None  ] int 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : B1F/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5203 ;;      Params:         0       0       0       0       0       0       0       0
  5204 ;;      Locals:         0       0      13       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0
  5206 ;;      Totals:         0       0      13       0       0       0       0       0
  5207 ;;Total ram usage:       13 bytes
  5208 ;; Hardware stack levels required when called: 17
  5209 ;; This function calls:
  5210 ;;		_EUSART_IsRxReady
  5211 ;;		_EUSART_Read
  5212 ;;		_Parse
  5213 ;;		_SYSTEM_Initialize
  5214 ;; This function is called by:
  5215 ;;		Startup code after reset
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219  0000'                    _main:	
  5220                           ;psect for function _main
  5221                           
  5222  0000'                    l5457:	
  5223                           ;incstack = 0
  5224 ;; hardware stack exceeded
  5225                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5226                           
  5227                           
  5228                           ;main.c: 610:     Parser parser;;main.c: 612:     parser.m_State = IDLE;
  5229  0000' 0021               	movlb	1	; select bank1
  5230  0001' 0180'              	clrf	main@parser^(0+128)
  5231  0002'                    l5459:
  5232                           
  5233                           ;main.c: 614:     SYSTEM_Initialize();
  5234  0002' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  5235  0005'                    l5461:
  5236                           
  5237                           ;main.c: 621:     (INTCONbits.GIE = 1);
  5238  0005' 178B               	bsf	11,7	;volatile
  5239  0006'                    l5463:
  5240                           
  5241                           ;main.c: 627:     (INTCONbits.PEIE = 1);
  5242  0006' 170B               	bsf	11,6	;volatile
  5243  0007'                    l5465:
  5244                           
  5245                           ;main.c: 633:         if (EUSART_IsRxReady()) {
  5246  0007' 3180' 2000' 3180'  	fcall	_EUSART_IsRxReady
  5247  000A' 3A00               	xorlw	0
  5248  000B' 1903               	skipnz
  5249  000C' 2800'              	goto	u5581
  5250  000D' 2800'              	goto	u5580
  5251  000E'                    u5581:
  5252  000E' 2800'              	goto	l5465
  5253  000F'                    u5580:
  5254  000F'                    l5467:
  5255                           
  5256                           ;main.c: 634:             data = EUSART_Read();
  5257  000F' 3180' 2000' 3180'  	fcall	_EUSART_Read
  5258  0012' 0021               	movlb	1	; select bank1
  5259  0013' 0080'              	movwf	main@data^(0+128)
  5260  0014'                    l5469:
  5261                           
  5262                           ;main.c: 636:             Parse(&parser, data);
  5263  0014' 0800'              	movf	main@data^(0+128),w
  5264  0015' 0080'              	movwf	Parse@data^(0+128)
  5265  0016' 3000'              	movlw	(low (main@parser| 0))& (0+255)
  5266  0017' 3180' 2000' 3180'  	fcall	_Parse
  5267  001A' 2800'              	goto	l5465
  5268  001B' 3180' 2800'        	ljmp	start
  5269  001D'                    __end_of_main:
  5270                           
  5271                           	psect	text1
  5272  0000'                    __ptext1:	
  5273 ;; *************** function _SYSTEM_Initialize *****************
  5274 ;; Defined at:
  5275 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;		None
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      void 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0, pclath, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5289 ;;      Params:         0       0       0       0       0       0       0       0
  5290 ;;      Locals:         0       0       0       0       0       0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0
  5292 ;;      Totals:         0       0       0       0       0       0       0       0
  5293 ;;Total ram usage:        0 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 9
  5296 ;; This function calls:
  5297 ;;		_ADC_Initialize
  5298 ;;		_CLOCK_Initialize
  5299 ;;		_EUSART_Initialize
  5300 ;;		_I2C1_Initialize
  5301 ;;		_INTERRUPT_Initialize
  5302 ;;		_PIN_MANAGER_Initialize
  5303 ;; This function is called by:
  5304 ;;		_main
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308  0000'                    _SYSTEM_Initialize:	
  5309                           ;psect for function _SYSTEM_Initialize
  5310                           
  5311  0000'                    l5349:	
  5312                           ;incstack = 0
  5313                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5314                           
  5315                           
  5316                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  5317  0000' 3180' 2000' 3180'  	fcall	_CLOCK_Initialize
  5318                           
  5319                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  5320  0003' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  5321                           
  5322                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  5323  0006' 3180' 2000' 3180'  	fcall	_ADC_Initialize
  5324                           
  5325                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  5326  0009' 3180' 2000' 3180'  	fcall	_EUSART_Initialize
  5327                           
  5328                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  5329  000C' 3180' 2000' 3180'  	fcall	_I2C1_Initialize
  5330                           
  5331                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  5332  000F' 3180' 2000' 3180'  	fcall	_INTERRUPT_Initialize
  5333  0012'                    l483:
  5334  0012' 0008               	return
  5335  0013'                    __end_of_SYSTEM_Initialize:
  5336                           
  5337                           	psect	text2
  5338  0000'                    __ptext2:	
  5339 ;; *************** function _PIN_MANAGER_Initialize *****************
  5340 ;; Defined at:
  5341 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5355 ;;      Params:         0       0       0       0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; Hardware stack levels required when called: 7
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_SYSTEM_Initialize
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369  0000'                    _PIN_MANAGER_Initialize:	
  5370                           ;psect for function _PIN_MANAGER_Initialize
  5371                           
  5372  0000'                    l5219:	
  5373                           ;incstack = 0
  5374                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5375                           
  5376                           
  5377                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  5378  0000' 0022               	movlb	2	; select bank2
  5379  0001' 018C               	clrf	12	;volatile
  5380  0002'                    l5221:
  5381                           
  5382                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x60;
  5383  0002' 3060               	movlw	96
  5384  0003' 008D               	movwf	13	;volatile
  5385  0004'                    l5223:
  5386                           
  5387                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  5388  0004' 018E               	clrf	14	;volatile
  5389                           
  5390                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  5391  0005' 303F               	movlw	63
  5392  0006' 0021               	movlb	1	; select bank1
  5393  0007' 008C               	movwf	12	;volatile
  5394                           
  5395                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  5396  0008' 30F0               	movlw	240
  5397  0009' 008D               	movwf	13	;volatile
  5398                           
  5399                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x3B;
  5400  000A' 303B               	movlw	59
  5401  000B' 008E               	movwf	14	;volatile
  5402                           
  5403                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  5404  000C' 3017               	movlw	23
  5405  000D' 0023               	movlb	3	; select bank3
  5406  000E' 008C               	movwf	12	;volatile
  5407                           
  5408                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x10;
  5409  000F' 3010               	movlw	16
  5410  0010' 008D               	movwf	13	;volatile
  5411                           
  5412                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xD;
  5413  0011' 300D               	movlw	13
  5414  0012' 008E               	movwf	14	;volatile
  5415                           
  5416                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x2C;
  5417  0013' 302C               	movlw	44
  5418  0014' 0024               	movlb	4	; select bank4
  5419  0015' 008C               	movwf	12	;volatile
  5420                           
  5421                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xE0;
  5422  0016' 30E0               	movlw	224
  5423  0017' 008D               	movwf	13	;volatile
  5424                           
  5425                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xF7;
  5426  0018' 30F7               	movlw	247
  5427  0019' 008E               	movwf	14	;volatile
  5428  001A'                    l5225:
  5429                           
  5430                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  5431  001A' 0021               	movlb	1	; select bank1
  5432  001B' 1395               	bcf	21,7	;volatile
  5433  001C'                    l5227:
  5434                           
  5435                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  5436  001C' 0025               	movlb	5	; select bank5
  5437  001D' 018C               	clrf	12	;volatile
  5438  001E'                    l5229:
  5439                           
  5440                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  5441  001E' 018D               	clrf	13	;volatile
  5442  001F'                    l5231:
  5443                           
  5444                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  5445  001F' 018E               	clrf	14	;volatile
  5446  0020'                    l5233:
  5447                           
  5448                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  5449  0020' 3037               	movlw	55
  5450  0021' 0026               	movlb	6	; select bank6
  5451  0022' 008C               	movwf	12	;volatile
  5452  0023'                    l5235:
  5453                           
  5454                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  5455  0023' 30F0               	movlw	240
  5456  0024' 008D               	movwf	13	;volatile
  5457  0025'                    l5237:
  5458                           
  5459                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  5460  0025' 30FF               	movlw	255
  5461  0026' 008E               	movwf	14	;volatile
  5462  0027'                    l5239:
  5463                           
  5464                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  5465  0027' 303F               	movlw	63
  5466  0028' 0027               	movlb	7	; select bank7
  5467  0029' 008C               	movwf	12	;volatile
  5468  002A'                    l5241:
  5469                           
  5470                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  5471  002A' 30F0               	movlw	240
  5472  002B' 008D               	movwf	13	;volatile
  5473  002C'                    l5243:
  5474                           
  5475                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  5476  002C' 30FF               	movlw	255
  5477  002D' 008E               	movwf	14	;volatile
  5478  002E'                    l5245:
  5479                           
  5480                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x11;
  5481  002E' 3011               	movlw	17
  5482  002F' 003C               	movlb	28	; select bank28
  5483  0030' 00A4               	movwf	36	;volatile
  5484  0031'                    l5247:
  5485                           
  5486                           ;mcc_generated_files/system/src/pins.c: 93:     RC2PPS = 6;
  5487  0031' 3006               	movlw	6
  5488  0032' 003D               	movlb	29	; select bank29
  5489  0033' 00A2               	movwf	34	;volatile
  5490  0034'                    l5249:
  5491                           
  5492                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0xE;
  5493  0034' 300E               	movlw	14
  5494  0035' 003C               	movlb	28	; select bank28
  5495  0036' 00A0               	movwf	32	;volatile
  5496  0037'                    l5251:
  5497                           
  5498                           ;mcc_generated_files/system/src/pins.c: 95:     RB6PPS = 16;
  5499  0037' 3010               	movlw	16
  5500  0038' 003D               	movlb	29	; select bank29
  5501  0039' 009E               	movwf	30	;volatile
  5502  003A'                    l5253:
  5503                           
  5504                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0xD;
  5505  003A' 300D               	movlw	13
  5506  003B' 003C               	movlb	28	; select bank28
  5507  003C' 00A1               	movwf	33	;volatile
  5508  003D'                    l5255:
  5509                           
  5510                           ;mcc_generated_files/system/src/pins.c: 97:     RB5PPS = 17;
  5511  003D' 3011               	movlw	17
  5512  003E' 003D               	movlb	29	; select bank29
  5513  003F' 009D               	movwf	29	;volatile
  5514  0040'                    l5257:
  5515                           
  5516                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  5517  0040' 0027               	movlb	7	; select bank7
  5518  0041' 0191               	clrf	17	;volatile
  5519  0042'                    l5259:
  5520                           
  5521                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  5522  0042' 0192               	clrf	18	;volatile
  5523  0043'                    l5261:
  5524                           
  5525                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  5526  0043' 0193               	clrf	19	;volatile
  5527  0044'                    l5263:
  5528                           
  5529                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  5530  0044' 0194               	clrf	20	;volatile
  5531  0045'                    l5265:
  5532                           
  5533                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  5534  0045' 0195               	clrf	21	;volatile
  5535  0046'                    l5267:
  5536                           
  5537                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  5538  0046' 0196               	clrf	22	;volatile
  5539  0047'                    l5269:
  5540                           
  5541                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  5542  0047' 0197               	clrf	23	;volatile
  5543  0048'                    l5271:
  5544                           
  5545                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  5546  0048' 0198               	clrf	24	;volatile
  5547  0049'                    l5273:
  5548                           
  5549                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  5550  0049' 0199               	clrf	25	;volatile
  5551  004A'                    l410:
  5552  004A' 0008               	return
  5553  004B'                    __end_of_PIN_MANAGER_Initialize:
  5554                           
  5555                           	psect	text3
  5556  0000'                    __ptext3:	
  5557 ;; *************** function _INTERRUPT_Initialize *****************
  5558 ;; Defined at:
  5559 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, pclath, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5573 ;;      Params:         0       0       0       0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0
  5576 ;;      Totals:         0       0       0       0       0       0       0       0
  5577 ;;Total ram usage:        0 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 8
  5580 ;; This function calls:
  5581 ;;		_INT_SetInterruptHandler
  5582 ;; This function is called by:
  5583 ;;		_SYSTEM_Initialize
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587  0000'                    _INTERRUPT_Initialize:	
  5588                           ;psect for function _INTERRUPT_Initialize
  5589                           
  5590  0000'                    l5275:	
  5591                           ;incstack = 0
  5592                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5593                           
  5594                           
  5595                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  5596  0000' 108B               	bcf	11,1	;volatile
  5597                           
  5598                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  5599  0001' 0021               	movlb	1	; select bank1
  5600  0002' 1715               	bsf	21,6	;volatile
  5601  0003'                    l5277:
  5602                           
  5603                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  5604  0003' 3000               	movlw	0
  5605  0004' 0020               	movlb	0	; select bank0
  5606  0005' 0080'              	movwf	INT_SetInterruptHandler@InterruptHandler
  5607  0006' 3000               	movlw	0
  5608  0007' 0081'              	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5609  0008' 3180' 2000' 3180'  	fcall	_INT_SetInterruptHandler
  5610  000B'                    l442:
  5611  000B' 0008               	return
  5612  000C'                    __end_of_INTERRUPT_Initialize:
  5613                           
  5614                           	psect	text4
  5615  0000'                    __ptext4:	
  5616 ;; *************** function _INT_SetInterruptHandler *****************
  5617 ;; Defined at:
  5618 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5621 ;;		 -> INT_DefaultInterruptHandler(1), 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5633 ;;      Params:         0       2       0       0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0
  5636 ;;      Totals:         0       2       0       0       0       0       0       0
  5637 ;;Total ram usage:        2 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 7
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_INTERRUPT_Initialize
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647  0000'                    _INT_SetInterruptHandler:	
  5648                           ;psect for function _INT_SetInterruptHandler
  5649                           
  5650  0000'                    l5083:	
  5651                           ;incstack = 0
  5652                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5653                           
  5654                           
  5655                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  5656  0000' 0020               	movlb	0	; select bank0
  5657  0001' 0801'              	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5658  0002' 0083'              	movwf	_INT_InterruptHandler+1
  5659  0003' 0800'              	movf	INT_SetInterruptHandler@InterruptHandler,w
  5660  0004' 0082'              	movwf	_INT_InterruptHandler
  5661  0005'                    l465:
  5662  0005' 0008               	return
  5663  0006'                    __end_of_INT_SetInterruptHandler:
  5664                           
  5665                           	psect	text5
  5666  0000'                    __ptext5:	
  5667 ;; *************** function _I2C1_Initialize *****************
  5668 ;; Defined at:
  5669 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0, pclath, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5683 ;;      Params:         0       0       0       0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 8
  5690 ;; This function calls:
  5691 ;;		_I2C1_CallbackRegister
  5692 ;;		_I2C1_InterruptsEnable
  5693 ;; This function is called by:
  5694 ;;		_SYSTEM_Initialize
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698  0000'                    _I2C1_Initialize:	
  5699                           ;psect for function _I2C1_Initialize
  5700                           
  5701  0000'                    l5203:	
  5702                           ;incstack = 0
  5703                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5704                           
  5705                           
  5706                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  5707  0000' 3080               	movlw	128
  5708  0001' 0024               	movlb	4	; select bank4
  5709  0002' 0094               	movwf	20	;volatile
  5710                           
  5711                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  5712  0003' 3008               	movlw	8
  5713  0004' 0095               	movwf	21	;volatile
  5714  0005'                    l5205:
  5715                           
  5716                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  5717  0005' 0196               	clrf	22	;volatile
  5718  0006'                    l5207:
  5719                           
  5720                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  5721  0006' 0197               	clrf	23	;volatile
  5722                           
  5723                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x27;
  5724  0007' 3027               	movlw	39
  5725  0008' 0092               	movwf	18	;volatile
  5726  0009'                    l5209:
  5727                           
  5728                           ;mcc_generated_files/i2c_host/src/mssp.c: 126:     I2C1_InterruptsEnable();
  5729  0009' 3180' 2000' 3180'  	fcall	_I2C1_InterruptsEnable
  5730                           
  5731                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  5732  000C' 3000'              	movlw	low _I2C1_DefaultCallback
  5733  000D' 0020               	movlb	0	; select bank0
  5734  000E' 0080'              	movwf	I2C1_CallbackRegister@callbackHandler
  5735  000F' 3000'              	movlw	high _I2C1_DefaultCallback
  5736  0010' 0081'              	movwf	I2C1_CallbackRegister@callbackHandler+1
  5737  0011' 3180' 2000' 3180'  	fcall	_I2C1_CallbackRegister
  5738  0014'                    l5211:
  5739                           
  5740                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  5741  0014' 0024               	movlb	4	; select bank4
  5742  0015' 1695               	bsf	21,5	;volatile
  5743  0016'                    l177:
  5744  0016' 0008               	return
  5745  0017'                    __end_of_I2C1_Initialize:
  5746                           
  5747                           	psect	text6
  5748  0000'                    __ptext6:	
  5749 ;; *************** function _I2C1_InterruptsEnable *****************
  5750 ;; Defined at:
  5751 ;;		line 467 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		None
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5765 ;;      Params:         0       0       0       0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0
  5768 ;;      Totals:         0       0       0       0       0       0       0       0
  5769 ;;Total ram usage:        0 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; Hardware stack levels required when called: 7
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_I2C1_Initialize
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779  0000'                    _I2C1_InterruptsEnable:	
  5780                           ;psect for function _I2C1_InterruptsEnable
  5781                           
  5782  0000'                    l5077:	
  5783                           ;incstack = 0
  5784                           ; Regs used in _I2C1_InterruptsEnable: []
  5785                           
  5786                           
  5787                           ;mcc_generated_files/i2c_host/src/mssp.c: 469:     PIE1bits.SSP1IE = 1;
  5788  0000' 0021               	movlb	1	; select bank1
  5789  0001' 1590               	bsf	16,3	;volatile
  5790                           
  5791                           ;mcc_generated_files/i2c_host/src/mssp.c: 470:     PIE2bits.BCL1IE = 1;
  5792  0002' 1591               	bsf	17,3	;volatile
  5793  0003'                    l312:
  5794  0003' 0008               	return
  5795  0004'                    __end_of_I2C1_InterruptsEnable:
  5796                           
  5797                           	psect	text7
  5798  0000'                    __ptext7:	
  5799 ;; *************** function _I2C1_CallbackRegister *****************
  5800 ;; Defined at:
  5801 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
  5804 ;;		 -> I2C1_DefaultCallback(1), 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;		None
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      void 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5816 ;;      Params:         0       2       0       0       0       0       0       0
  5817 ;;      Locals:         0       0       0       0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0       0
  5819 ;;      Totals:         0       2       0       0       0       0       0       0
  5820 ;;Total ram usage:        2 bytes
  5821 ;; Hardware stack levels used: 1
  5822 ;; Hardware stack levels required when called: 7
  5823 ;; This function calls:
  5824 ;;		Nothing
  5825 ;; This function is called by:
  5826 ;;		_I2C1_Initialize
  5827 ;;		_I2C1_Deinitialize
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831  0000'                    _I2C1_CallbackRegister:	
  5832                           ;psect for function _I2C1_CallbackRegister
  5833                           
  5834  0000'                    l5079:	
  5835                           ;incstack = 0
  5836                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  5837                           
  5838                           
  5839                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  5840  0000' 0020               	movlb	0	; select bank0
  5841  0001' 0800'              	movf	I2C1_CallbackRegister@callbackHandler,w
  5842  0002' 0401'              	iorwf	I2C1_CallbackRegister@callbackHandler+1,w
  5843  0003' 1903               	btfsc	3,2
  5844  0004' 2800'              	goto	u5311
  5845  0005' 2800'              	goto	u5310
  5846  0006'                    u5311:
  5847  0006' 2800'              	goto	l204
  5848  0007'                    u5310:
  5849  0007'                    l5081:
  5850                           
  5851                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  5852  0007' 0801'              	movf	I2C1_CallbackRegister@callbackHandler+1,w
  5853  0008' 0021               	movlb	1	; select bank1
  5854  0009' 0080'              	movwf	(_I2C1_Callback+1)^(0+128)
  5855  000A' 0020               	movlb	0	; select bank0
  5856  000B' 0800'              	movf	I2C1_CallbackRegister@callbackHandler,w
  5857  000C' 0021               	movlb	1	; select bank1
  5858  000D' 0080'              	movwf	_I2C1_Callback^(0+128)
  5859  000E'                    l204:
  5860  000E' 0008               	return
  5861  000F'                    __end_of_I2C1_CallbackRegister:
  5862                           
  5863                           	psect	text8
  5864  0000'                    __ptext8:	
  5865 ;; *************** function _EUSART_Initialize *****************
  5866 ;; Defined at:
  5867 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, pclath, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5881 ;;      Params:         0       0       0       0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0
  5884 ;;      Totals:         0       0       0       0       0       0       0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 8
  5888 ;; This function calls:
  5889 ;;		_EUSART_FramingErrorCallbackRegister
  5890 ;;		_EUSART_OverrunErrorCallbackRegister
  5891 ;; This function is called by:
  5892 ;;		_SYSTEM_Initialize
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896  0000'                    _EUSART_Initialize:	
  5897                           ;psect for function _EUSART_Initialize
  5898                           
  5899  0000'                    l5279:	
  5900                           ;incstack = 0
  5901                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5902                           
  5903                           
  5904                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUD1CON = 0x48;
  5905  0000' 3048               	movlw	72
  5906  0001' 0023               	movlb	3	; select bank3
  5907  0002' 009F               	movwf	31	;volatile
  5908                           
  5909                           ;mcc_generated_files/uart/src/eusart.c: 101:     RC1STA = 0x90;
  5910  0003' 3090               	movlw	144
  5911  0004' 009D               	movwf	29	;volatile
  5912                           
  5913                           ;mcc_generated_files/uart/src/eusart.c: 103:     TX1STA = 0x26;
  5914  0005' 3026               	movlw	38
  5915  0006' 009E               	movwf	30	;volatile
  5916                           
  5917                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRGL = 0xA0;
  5918  0007' 30A0               	movlw	160
  5919  0008' 009B               	movwf	27	;volatile
  5920                           
  5921                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x1;
  5922  0009' 3001               	movlw	1
  5923  000A' 009C               	movwf	28	;volatile
  5924  000B'                    l5281:
  5925                           
  5926                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  5927  000B' 3000'              	movlw	low _EUSART_DefaultFramingErrorCallback
  5928  000C' 0020               	movlb	0	; select bank0
  5929  000D' 0080'              	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
  5930  000E' 3000'              	movlw	high _EUSART_DefaultFramingErrorCallback
  5931  000F' 0081'              	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
  5932  0010' 3180' 2000' 3180'  	fcall	_EUSART_FramingErrorCallbackRegister
  5933  0013'                    l5283:
  5934                           
  5935                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  5936  0013' 3000'              	movlw	low _EUSART_DefaultOverrunErrorCallback
  5937  0014' 0020               	movlb	0	; select bank0
  5938  0015' 0080'              	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
  5939  0016' 3000'              	movlw	high _EUSART_DefaultOverrunErrorCallback
  5940  0017' 0081'              	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
  5941  0018' 3180' 2000' 3180'  	fcall	_EUSART_OverrunErrorCallbackRegister
  5942  001B'                    l5285:
  5943                           
  5944                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  5945  001B' 0021               	movlb	1	; select bank1
  5946  001C' 0180'              	clrf	_eusartRxLastError^(0+128)	;volatile
  5947  001D' 0180'              	clrf	(_eusartRxLastError+1)^(0+128)	;volatile
  5948  001E'                    l548:
  5949  001E' 0008               	return
  5950  001F'                    __end_of_EUSART_Initialize:
  5951                           
  5952                           	psect	text9
  5953  0000'                    __ptext9:	
  5954 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  5955 ;; Defined at:
  5956 ;;		line 260 in file "mcc_generated_files/uart/src/eusart.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
  5959 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5971 ;;      Params:         0       2       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0
  5974 ;;      Totals:         0       2       0       0       0       0       0       0
  5975 ;;Total ram usage:        2 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; Hardware stack levels required when called: 7
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_EUSART_Initialize
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985  0000'                    _EUSART_OverrunErrorCallbackRegister:	
  5986                           ;psect for function _EUSART_OverrunErrorCallbackRegister
  5987                           
  5988  0000'                    l5089:	
  5989                           ;incstack = 0
  5990                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  5991                           
  5992                           
  5993                           ;mcc_generated_files/uart/src/eusart.c: 260: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 261: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 262:     if(((void*)0) != callbackHandler)
  5994  0000' 0020               	movlb	0	; select bank0
  5995  0001' 0800'              	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  5996  0002' 0401'              	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  5997  0003' 1903               	btfsc	3,2
  5998  0004' 2800'              	goto	u5331
  5999  0005' 2800'              	goto	u5330
  6000  0006'                    u5331:
  6001  0006' 2800'              	goto	l627
  6002  0007'                    u5330:
  6003  0007'                    l5091:
  6004                           
  6005                           ;mcc_generated_files/uart/src/eusart.c: 263:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 264:         EUSART_OverrunErrorHandler = callbackHandler;
  6006  0007' 0801'              	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
  6007  0008' 0021               	movlb	1	; select bank1
  6008  0009' 0080'              	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6009  000A' 0020               	movlb	0	; select bank0
  6010  000B' 0800'              	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
  6011  000C' 0021               	movlb	1	; select bank1
  6012  000D' 0080'              	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6013  000E'                    l627:
  6014  000E' 0008               	return
  6015  000F'                    __end_of_EUSART_OverrunErrorCallbackRegister:
  6016                           
  6017                           	psect	text10
  6018  0000'                    __ptext10:	
  6019 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  6020 ;; Defined at:
  6021 ;;		line 252 in file "mcc_generated_files/uart/src/eusart.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
  6024 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6036 ;;      Params:         0       2       0       0       0       0       0       0
  6037 ;;      Locals:         0       0       0       0       0       0       0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0       0
  6039 ;;      Totals:         0       2       0       0       0       0       0       0
  6040 ;;Total ram usage:        2 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 7
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_EUSART_Initialize
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050  0000'                    _EUSART_FramingErrorCallbackRegister:	
  6051                           ;psect for function _EUSART_FramingErrorCallbackRegister
  6052                           
  6053  0000'                    l5085:	
  6054                           ;incstack = 0
  6055                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  6056                           
  6057                           
  6058                           ;mcc_generated_files/uart/src/eusart.c: 252: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 253: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 254:     if(((void*)0) != callbackHandler)
  6059  0000' 0020               	movlb	0	; select bank0
  6060  0001' 0800'              	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6061  0002' 0401'              	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6062  0003' 1903               	btfsc	3,2
  6063  0004' 2800'              	goto	u5321
  6064  0005' 2800'              	goto	u5320
  6065  0006'                    u5321:
  6066  0006' 2800'              	goto	l623
  6067  0007'                    u5320:
  6068  0007'                    l5087:
  6069                           
  6070                           ;mcc_generated_files/uart/src/eusart.c: 255:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 256:         EUSART_FramingErrorHandler = callbackHandler;
  6071  0007' 0801'              	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
  6072  0008' 0081'              	movwf	_EUSART_FramingErrorHandler+1
  6073  0009' 0800'              	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
  6074  000A' 0080'              	movwf	_EUSART_FramingErrorHandler
  6075  000B'                    l623:
  6076  000B' 0008               	return
  6077  000C'                    __end_of_EUSART_FramingErrorCallbackRegister:
  6078                           
  6079                           	psect	text11
  6080  0000'                    __ptext11:	
  6081 ;; *************** function _CLOCK_Initialize *****************
  6082 ;; Defined at:
  6083 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6097 ;;      Params:         0       0       0       0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0
  6100 ;;      Totals:         0       0       0       0       0       0       0       0
  6101 ;;Total ram usage:        0 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; Hardware stack levels required when called: 7
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_SYSTEM_Initialize
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111  0000'                    _CLOCK_Initialize:	
  6112                           ;psect for function _CLOCK_Initialize
  6113                           
  6114  0000'                    l5213:	
  6115                           ;incstack = 0
  6116                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  6117                           
  6118                           
  6119                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  6120  0000' 307A               	movlw	122
  6121  0001' 0021               	movlb	1	; select bank1
  6122  0002' 0099               	movwf	25	;volatile
  6123  0003'                    l5215:
  6124                           
  6125                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
  6126  0003' 0022               	movlb	2	; select bank2
  6127  0004' 0196               	clrf	22	;volatile
  6128  0005'                    l5217:
  6129                           
  6130                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  6131  0005' 0021               	movlb	1	; select bank1
  6132  0006' 0198               	clrf	24	;volatile
  6133  0007'                    l333:
  6134  0007' 0008               	return
  6135  0008'                    __end_of_CLOCK_Initialize:
  6136                           
  6137                           	psect	text12
  6138  0000'                    __ptext12:	
  6139 ;; *************** function _ADC_Initialize *****************
  6140 ;; Defined at:
  6141 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;		None
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;		None
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, status,2, status,0, pclath, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6155 ;;      Params:         0       0       0       0       0       0       0       0
  6156 ;;      Locals:         0       0       0       0       0       0       0       0
  6157 ;;      Temps:          0       0       0       0       0       0       0       0
  6158 ;;      Totals:         0       0       0       0       0       0       0       0
  6159 ;;Total ram usage:        0 bytes
  6160 ;; Hardware stack levels used: 1
  6161 ;; Hardware stack levels required when called: 8
  6162 ;; This function calls:
  6163 ;;		_ADC_SetInterruptHandler
  6164 ;; This function is called by:
  6165 ;;		_SYSTEM_Initialize
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169  0000'                    _ADC_Initialize:	
  6170                           ;psect for function _ADC_Initialize
  6171                           
  6172  0000'                    l5187:	
  6173                           ;incstack = 0
  6174                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6175                           
  6176                           
  6177                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
  6178  0000' 3060               	movlw	96
  6179  0001' 0021               	movlb	1	; select bank1
  6180  0002' 009E               	movwf	30	;volatile
  6181  0003'                    l5189:
  6182                           
  6183                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
  6184  0003' 019B               	clrf	27	;volatile
  6185  0004'                    l5191:
  6186                           
  6187                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
  6188  0004' 019C               	clrf	28	;volatile
  6189  0005'                    l5193:
  6190                           
  6191                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
  6192  0005' 019F               	clrf	31	;volatile
  6193  0006'                    l5195:
  6194                           
  6195                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
  6196  0006' 3001               	movlw	1
  6197  0007' 009D               	movwf	29	;volatile
  6198  0008'                    l5197:
  6199                           
  6200                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
  6201  0008' 0020               	movlb	0	; select bank0
  6202  0009' 1310               	bcf	16,6	;volatile
  6203  000A'                    l5199:
  6204                           
  6205                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
  6206  000A' 3000'              	movlw	low _ADC_DefaultInterruptHandler
  6207  000B' 0080'              	movwf	ADC_SetInterruptHandler@InterruptHandler
  6208  000C' 3000'              	movlw	high _ADC_DefaultInterruptHandler
  6209  000D' 0081'              	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  6210  000E' 3180' 2000' 3180'  	fcall	_ADC_SetInterruptHandler
  6211  0011'                    l5201:
  6212                           
  6213                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
  6214  0011' 0021               	movlb	1	; select bank1
  6215  0012' 1710               	bsf	16,6	;volatile
  6216  0013'                    l27:
  6217  0013' 0008               	return
  6218  0014'                    __end_of_ADC_Initialize:
  6219                           
  6220                           	psect	text13
  6221  0000'                    __ptext13:	
  6222 ;; *************** function _ADC_SetInterruptHandler *****************
  6223 ;; Defined at:
  6224 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6227 ;;		 -> ADC_DefaultInterruptHandler(1), 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6239 ;;      Params:         0       2       0       0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0
  6242 ;;      Totals:         0       2       0       0       0       0       0       0
  6243 ;;Total ram usage:        2 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 7
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_ADC_Initialize
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253  0000'                    _ADC_SetInterruptHandler:	
  6254                           ;psect for function _ADC_SetInterruptHandler
  6255                           
  6256  0000'                    l5075:	
  6257                           ;incstack = 0
  6258                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  6259                           
  6260                           
  6261                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
  6262  0000' 0020               	movlb	0	; select bank0
  6263  0001' 0801'              	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  6264  0002' 0021               	movlb	1	; select bank1
  6265  0003' 0080'              	movwf	(_ADC_InterruptHandler+1)^(0+128)
  6266  0004' 0020               	movlb	0	; select bank0
  6267  0005' 0800'              	movf	ADC_SetInterruptHandler@InterruptHandler,w
  6268  0006' 0021               	movlb	1	; select bank1
  6269  0007' 0080'              	movwf	_ADC_InterruptHandler^(0+128)
  6270  0008'                    l55:
  6271  0008' 0008               	return
  6272  0009'                    __end_of_ADC_SetInterruptHandler:
  6273                           
  6274                           	psect	text14
  6275  0000'                    __ptext14:	
  6276 ;; *************** function _Parse *****************
  6277 ;; Defined at:
  6278 ;;		line 522 in file "main.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  parser          1    wreg     PTR struct .
  6281 ;;		 -> main@parser(12), 
  6282 ;;  data            1   20[BANK1 ] unsigned char 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  parser          1   23[BANK1 ] PTR struct .
  6285 ;;		 -> main@parser(12), 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6295 ;;      Params:         0       0       1       0       0       0       0       0
  6296 ;;      Locals:         0       0       1       0       0       0       0       0
  6297 ;;      Temps:          0       0       2       0       0       0       0       0
  6298 ;;      Totals:         0       0       4       0       0       0       0       0
  6299 ;;Total ram usage:        4 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 16
  6302 ;; This function calls:
  6303 ;;		_ProcessMsg
  6304 ;;		_SendMsg
  6305 ;;		_SendNack
  6306 ;; This function is called by:
  6307 ;;		_main
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311  0000'                    _Parse:	
  6312                           ;psect for function _Parse
  6313                           
  6314                           
  6315                           ;incstack = 0
  6316 ;; hardware stack exceeded
  6317                           ; Regs used in _Parse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6318                           ;Parse@parser stored from wreg
  6319  0000' 0021               	movlb	1	; select bank1
  6320  0001' 0080'              	movwf	Parse@parser^(0+128)
  6321  0002'                    l5377:
  6322                           
  6323                           ;main.c: 523:     switch (parser->m_State) {
  6324  0002' 2800'              	goto	l5443
  6325  0003'                    l5379:
  6326                           
  6327                           ;main.c: 525:             if (data == 0x01) {
  6328  0003' 0300'              	decf	Parse@data^(0+128),w
  6329  0004' 1D03               	btfss	3,2
  6330  0005' 2800'              	goto	u5541
  6331  0006' 2800'              	goto	u5540
  6332  0007'                    u5541:
  6333  0007' 2800'              	goto	l5385
  6334  0008'                    u5540:
  6335  0008'                    l5381:
  6336                           
  6337                           ;main.c: 526:                 parser->m_State = WAIT_ID;
  6338  0008' 0800'              	movf	Parse@parser^(0+128),w
  6339  0009' 0086               	movwf	6
  6340  000A' 0187               	clrf	7
  6341  000B' 0181               	clrf	1
  6342  000C' 0A81               	incf	1,f
  6343  000D'                    l5383:
  6344                           
  6345                           ;main.c: 527:                 parser->m_bSum = 0x00;
  6346  000D' 0800'              	movf	Parse@parser^(0+128),w
  6347  000E' 3E05               	addlw	5
  6348  000F' 0086               	movwf	6
  6349  0010' 0187               	clrf	7
  6350  0011' 0181               	clrf	1
  6351                           
  6352                           ;main.c: 528:             } else
  6353  0012' 2800'              	goto	l791
  6354  0013'                    l5385:
  6355                           
  6356                           ;main.c: 529:                 SendNack(WRONG_MESSAGE);
  6357  0013' 3002               	movlw	2
  6358  0014' 3180' 2000' 3180'  	fcall	_SendNack
  6359  0017' 2800'              	goto	l791
  6360  0018'                    l5387:
  6361                           
  6362                           ;main.c: 533:             parser->m_MsgID = data;
  6363  0018' 0A00'              	incf	Parse@parser^(0+128),w
  6364  0019' 0086               	movwf	6
  6365  001A' 0187               	clrf	7
  6366  001B' 0800'              	movf	Parse@data^(0+128),w
  6367  001C' 0081               	movwf	1
  6368  001D'                    l5389:
  6369                           
  6370                           ;main.c: 534:             parser->m_bEcho = 1;
  6371  001D' 0800'              	movf	Parse@parser^(0+128),w
  6372  001E' 3E0B               	addlw	11
  6373  001F' 0086               	movwf	6
  6374  0020' 0187               	clrf	7
  6375  0021' 0181               	clrf	1
  6376  0022' 0A81               	incf	1,f
  6377                           
  6378                           ;main.c: 536:             switch ((uint8_t) parser->m_MsgID) {
  6379  0023' 2800'              	goto	l5419
  6380  0024'                    l5391:
  6381                           
  6382                           ;main.c: 540:                     parser->m_bEcho = 0;
  6383  0024' 0800'              	movf	Parse@parser^(0+128),w
  6384  0025' 3E0B               	addlw	11
  6385  0026' 0086               	movwf	6
  6386  0027' 0187               	clrf	7
  6387  0028' 0181               	clrf	1
  6388                           
  6389                           ;main.c: 541:                     parser->m_bReplySize = parser->m_bDataSize = 0;
  6390  0029' 0800'              	movf	Parse@parser^(0+128),w
  6391  002A' 3E02               	addlw	2
  6392  002B' 0086               	movwf	6
  6393  002C' 0187               	clrf	7
  6394  002D' 0181               	clrf	1
  6395  002E' 0800'              	movf	Parse@parser^(0+128),w
  6396  002F' 3E03               	addlw	3
  6397  0030' 0086               	movwf	6
  6398  0031' 0187               	clrf	7
  6399  0032' 0181               	clrf	1
  6400  0033'                    l5393:
  6401                           
  6402                           ;main.c: 542:                     parser->m_State = WAIT_CKSUM;
  6403  0033' 0800'              	movf	Parse@parser^(0+128),w
  6404  0034' 0086               	movwf	6
  6405  0035' 0187               	clrf	7
  6406  0036' 3003               	movlw	3
  6407  0037' 0081               	movwf	1
  6408                           
  6409                           ;main.c: 543:                     break;
  6410  0038' 2800'              	goto	l791
  6411  0039'                    l5395:
  6412                           
  6413                           ;main.c: 546:                     parser->m_bReplySize = parser->m_bDataSize = 1;
  6414  0039' 0800'              	movf	Parse@parser^(0+128),w
  6415  003A' 3E03               	addlw	3
  6416  003B' 0086               	movwf	6
  6417  003C' 0187               	clrf	7
  6418  003D' 0800'              	movf	Parse@parser^(0+128),w
  6419  003E' 3E02               	addlw	2
  6420  003F' 0084               	movwf	4
  6421  0040' 0185               	clrf	5
  6422  0041' 3001               	movlw	1
  6423  0042' 3F80               	movwi [0]fsr0
  6424  0043' 0081               	movwf	1
  6425  0044'                    l5397:
  6426                           
  6427                           ;main.c: 547:                     parser->m_State = WAIT_VALUE;
  6428  0044' 0800'              	movf	Parse@parser^(0+128),w
  6429  0045' 0086               	movwf	6
  6430  0046' 0187               	clrf	7
  6431  0047' 3002               	movlw	2
  6432  0048' 0081               	movwf	1
  6433                           
  6434                           ;main.c: 548:                     break;
  6435  0049' 2800'              	goto	l791
  6436  004A'                    l5399:
  6437                           
  6438                           ;main.c: 553:                     parser->m_bEcho = 0;
  6439  004A' 0800'              	movf	Parse@parser^(0+128),w
  6440  004B' 3E0B               	addlw	11
  6441  004C' 0086               	movwf	6
  6442  004D' 0187               	clrf	7
  6443  004E' 0181               	clrf	1
  6444  004F'                    l5401:
  6445                           
  6446                           ;main.c: 554:                     parser->m_bReplySize = parser->m_bDataSize = 1;
  6447  004F' 0800'              	movf	Parse@parser^(0+128),w
  6448  0050' 3E03               	addlw	3
  6449  0051' 0086               	movwf	6
  6450  0052' 0187               	clrf	7
  6451  0053' 0800'              	movf	Parse@parser^(0+128),w
  6452  0054' 3E02               	addlw	2
  6453  0055' 0084               	movwf	4
  6454  0056' 0185               	clrf	5
  6455  0057' 3001               	movlw	1
  6456  0058' 3F80               	movwi [0]fsr0
  6457  0059' 0081               	movwf	1
  6458  005A'                    l5403:
  6459                           
  6460                           ;main.c: 555:                     parser->m_State = WAIT_VALUE;
  6461  005A' 0800'              	movf	Parse@parser^(0+128),w
  6462  005B' 0086               	movwf	6
  6463  005C' 0187               	clrf	7
  6464  005D' 3002               	movlw	2
  6465  005E' 0081               	movwf	1
  6466                           
  6467                           ;main.c: 556:                     break;
  6468  005F' 2800'              	goto	l791
  6469  0060'                    l5405:
  6470                           
  6471                           ;main.c: 559:                     parser->m_bReplySize = parser->m_bDataSize = 2;
  6472  0060' 0800'              	movf	Parse@parser^(0+128),w
  6473  0061' 3E03               	addlw	3
  6474  0062' 0086               	movwf	6
  6475  0063' 0187               	clrf	7
  6476  0064' 0800'              	movf	Parse@parser^(0+128),w
  6477  0065' 3E02               	addlw	2
  6478  0066' 0084               	movwf	4
  6479  0067' 0185               	clrf	5
  6480  0068' 3002               	movlw	2
  6481  0069' 3F80               	movwi [0]fsr0
  6482  006A' 0081               	movwf	1
  6483  006B'                    l5407:
  6484                           
  6485                           ;main.c: 560:                     parser->m_State = WAIT_VALUE;
  6486  006B' 0800'              	movf	Parse@parser^(0+128),w
  6487  006C' 0086               	movwf	6
  6488  006D' 0187               	clrf	7
  6489  006E' 3002               	movlw	2
  6490  006F' 0081               	movwf	1
  6491                           
  6492                           ;main.c: 561:                     break;
  6493  0070' 2800'              	goto	l791
  6494  0071'                    l5409:
  6495                           
  6496                           ;main.c: 565:                     parser->m_bReplySize = parser->m_bDataSize = 4;
  6497  0071' 0800'              	movf	Parse@parser^(0+128),w
  6498  0072' 3E03               	addlw	3
  6499  0073' 0086               	movwf	6
  6500  0074' 0187               	clrf	7
  6501  0075' 0800'              	movf	Parse@parser^(0+128),w
  6502  0076' 3E02               	addlw	2
  6503  0077' 0084               	movwf	4
  6504  0078' 0185               	clrf	5
  6505  0079' 3004               	movlw	4
  6506  007A' 3F80               	movwi [0]fsr0
  6507  007B' 0081               	movwf	1
  6508  007C'                    l5411:
  6509                           
  6510                           ;main.c: 566:                     parser->m_State = WAIT_VALUE;
  6511  007C' 0800'              	movf	Parse@parser^(0+128),w
  6512  007D' 0086               	movwf	6
  6513  007E' 0187               	clrf	7
  6514  007F' 3002               	movlw	2
  6515  0080' 0081               	movwf	1
  6516                           
  6517                           ;main.c: 567:                     break;
  6518  0081' 2800'              	goto	l791
  6519  0082'                    l5413:
  6520                           
  6521                           ;main.c: 570:                     parser->m_bReplySize = parser->m_bDataSize = 5;
  6522  0082' 0800'              	movf	Parse@parser^(0+128),w
  6523  0083' 3E03               	addlw	3
  6524  0084' 0086               	movwf	6
  6525  0085' 0187               	clrf	7
  6526  0086' 0800'              	movf	Parse@parser^(0+128),w
  6527  0087' 3E02               	addlw	2
  6528  0088' 0084               	movwf	4
  6529  0089' 0185               	clrf	5
  6530  008A' 3005               	movlw	5
  6531  008B' 3F80               	movwi [0]fsr0
  6532  008C' 0081               	movwf	1
  6533  008D'                    l5415:
  6534                           
  6535                           ;main.c: 571:                     parser->m_State = WAIT_VALUE;
  6536  008D' 0800'              	movf	Parse@parser^(0+128),w
  6537  008E' 0086               	movwf	6
  6538  008F' 0187               	clrf	7
  6539  0090' 3002               	movlw	2
  6540  0091' 0081               	movwf	1
  6541                           
  6542                           ;main.c: 572:                     break;
  6543  0092' 2800'              	goto	l791
  6544  0093'                    l5419:
  6545  0093' 0A00'              	incf	Parse@parser^(0+128),w
  6546  0094' 0086               	movwf	6
  6547  0095' 0187               	clrf	7
  6548  0096' 0801               	movf	1,w
  6549                           
  6550                           ; Switch size 1, requested type "simple"
  6551                           ; Number of cases is 11, Range of values is 1 to 17
  6552                           ; switch strategies available:
  6553                           ; Name         Instructions Cycles
  6554                           ; simple_byte           34    18 (average)
  6555                           ; direct_byte           43     9 (fixed)
  6556                           ; jumptable            263     9 (fixed)
  6557                           ;	Chosen strategy is simple_byte
  6558  0097' 3A01               	xorlw	1	; case 1
  6559  0098' 1903               	skipnz
  6560  0099' 2800'              	goto	l5405
  6561  009A' 3A03               	xorlw	3	; case 2
  6562  009B' 1903               	skipnz
  6563  009C' 2800'              	goto	l5399
  6564  009D' 3A01               	xorlw	1	; case 3
  6565  009E' 1903               	skipnz
  6566  009F' 2800'              	goto	l5399
  6567  00A0' 3A07               	xorlw	7	; case 4
  6568  00A1' 1903               	skipnz
  6569  00A2' 2800'              	goto	l5399
  6570  00A3' 3A01               	xorlw	1	; case 5
  6571  00A4' 1903               	skipnz
  6572  00A5' 2800'              	goto	l5391
  6573  00A6' 3A03               	xorlw	3	; case 6
  6574  00A7' 1903               	skipnz
  6575  00A8' 2800'              	goto	l5391
  6576  00A9' 3A01               	xorlw	1	; case 7
  6577  00AA' 1903               	skipnz
  6578  00AB' 2800'              	goto	l5395
  6579  00AC' 3A0F               	xorlw	15	; case 8
  6580  00AD' 1903               	skipnz
  6581  00AE' 2800'              	goto	l5409
  6582  00AF' 3A01               	xorlw	1	; case 9
  6583  00B0' 1903               	skipnz
  6584  00B1' 2800'              	goto	l5409
  6585  00B2' 3A03               	xorlw	3	; case 10
  6586  00B3' 1903               	skipnz
  6587  00B4' 2800'              	goto	l5413
  6588  00B5' 3A1B               	xorlw	27	; case 17
  6589  00B6' 1903               	skipnz
  6590  00B7' 2800'              	goto	l5391
  6591  00B8' 2800'              	goto	l791
  6592  00B9'                    l5421:
  6593                           
  6594                           ;main.c: 577:             parser->m_bDataBuffer[5 - parser->m_bDataSize] = data;
  6595  00B9' 0800'              	movf	Parse@parser^(0+128),w
  6596  00BA' 3E02               	addlw	2
  6597  00BB' 0086               	movwf	6
  6598  00BC' 0187               	clrf	7
  6599  00BD' 0800'              	movf	Parse@parser^(0+128),w
  6600  00BE' 0080'              	movwf	??_Parse^(0+128)
  6601  00BF' 0801               	movf	1,w
  6602  00C0' 0280'              	subwf	??_Parse^(0+128),f
  6603  00C1' 0800'              	movf	??_Parse^(0+128),w
  6604  00C2' 3E0B               	addlw	11
  6605  00C3' 0086               	movwf	6
  6606  00C4' 0187               	clrf	7
  6607  00C5' 0800'              	movf	Parse@data^(0+128),w
  6608  00C6' 0081               	movwf	1
  6609                           
  6610                           ;main.c: 578:             parser->m_bSum += data;
  6611  00C7' 0800'              	movf	Parse@data^(0+128),w
  6612  00C8' 0080'              	movwf	??_Parse^(0+128)
  6613  00C9' 0800'              	movf	Parse@parser^(0+128),w
  6614  00CA' 3E05               	addlw	5
  6615  00CB' 0086               	movwf	6
  6616  00CC' 0187               	clrf	7
  6617  00CD' 0800'              	movf	??_Parse^(0+128),w
  6618  00CE' 0781               	addwf	1,f
  6619                           
  6620                           ;main.c: 579:             parser->m_bDataSize--;
  6621  00CF' 0800'              	movf	Parse@parser^(0+128),w
  6622  00D0' 3E02               	addlw	2
  6623  00D1' 0086               	movwf	6
  6624  00D2' 0187               	clrf	7
  6625  00D3' 3001               	movlw	1
  6626  00D4' 0281               	subwf	1,f
  6627                           
  6628                           ;main.c: 580:             if (parser->m_bDataSize == 0)
  6629  00D5' 0800'              	movf	Parse@parser^(0+128),w
  6630  00D6' 3E02               	addlw	2
  6631  00D7' 0086               	movwf	6
  6632  00D8' 0187               	clrf	7
  6633  00D9' 0801               	movf	1,w
  6634  00DA' 1D03               	btfss	3,2
  6635  00DB' 2800'              	goto	u5551
  6636  00DC' 2800'              	goto	u5550
  6637  00DD'                    u5551:
  6638  00DD' 2800'              	goto	l791
  6639  00DE'                    u5550:
  6640  00DE'                    l5423:
  6641                           
  6642                           ;main.c: 581:                 parser->m_State = WAIT_CKSUM;
  6643  00DE' 0800'              	movf	Parse@parser^(0+128),w
  6644  00DF' 0086               	movwf	6
  6645  00E0' 0187               	clrf	7
  6646  00E1' 3003               	movlw	3
  6647  00E2' 0081               	movwf	1
  6648  00E3' 2800'              	goto	l791
  6649  00E4'                    l5425:
  6650                           
  6651                           ;main.c: 585:             parser->m_bCkSum = data;
  6652  00E4' 0800'              	movf	Parse@parser^(0+128),w
  6653  00E5' 3E04               	addlw	4
  6654  00E6' 0086               	movwf	6
  6655  00E7' 0187               	clrf	7
  6656  00E8' 0800'              	movf	Parse@data^(0+128),w
  6657  00E9' 0081               	movwf	1
  6658  00EA'                    l5427:
  6659                           
  6660                           ;main.c: 587:             if (parser->m_bSum == parser->m_bCkSum) {
  6661  00EA' 0800'              	movf	Parse@parser^(0+128),w
  6662  00EB' 3E04               	addlw	4
  6663  00EC' 0086               	movwf	6
  6664  00ED' 0187               	clrf	7
  6665  00EE' 0800'              	movf	Parse@parser^(0+128),w
  6666  00EF' 3E05               	addlw	5
  6667  00F0' 0084               	movwf	4
  6668  00F1' 0185               	clrf	5
  6669  00F2' 0800               	movf	0,w
  6670  00F3' 0601               	xorwf	1,w
  6671  00F4' 1D03               	skipz
  6672  00F5' 2800'              	goto	u5561
  6673  00F6' 2800'              	goto	u5560
  6674  00F7'                    u5561:
  6675  00F7' 2800'              	goto	l5435
  6676  00F8'                    u5560:
  6677  00F8'                    l5429:
  6678                           
  6679                           ;main.c: 588:                 if (parser->m_bEcho)
  6680  00F8' 0800'              	movf	Parse@parser^(0+128),w
  6681  00F9' 3E0B               	addlw	11
  6682  00FA' 0086               	movwf	6
  6683  00FB' 0187               	clrf	7
  6684  00FC' 0801               	movf	1,w
  6685  00FD' 1903               	btfsc	3,2
  6686  00FE' 2800'              	goto	u5571
  6687  00FF' 2800'              	goto	u5570
  6688  0100'                    u5571:
  6689  0100' 2800'              	goto	l5433
  6690  0101'                    u5570:
  6691  0101'                    l5431:
  6692                           
  6693                           ;main.c: 589:                     SendMsg(parser->m_MsgID, parser->m_bDataBuffer, parser
      +                          ->m_bReplySize);
  6694  0101' 0800'              	movf	Parse@parser^(0+128),w
  6695  0102' 3E06               	addlw	6
  6696  0103' 0020               	movlb	0	; select bank0
  6697  0104' 0081'              	movwf	SendMsg@data
  6698  0105' 0021               	movlb	1	; select bank1
  6699  0106' 0800'              	movf	Parse@parser^(0+128),w
  6700  0107' 0086               	movwf	6
  6701  0108' 0187               	clrf	7
  6702  0109' 3F43               	moviw [3]fsr1
  6703  010A' 0020               	movlb	0	; select bank0
  6704  010B' 0082'              	movwf	SendMsg@data_len
  6705  010C' 0021               	movlb	1	; select bank1
  6706  010D' 0A00'              	incf	Parse@parser^(0+128),w
  6707  010E' 0086               	movwf	6
  6708  010F' 0187               	clrf	7
  6709  0110' 0801               	movf	1,w
  6710  0111' 3180' 2000' 3180'  	fcall	_SendMsg
  6711  0114'                    l5433:
  6712                           
  6713                           ;main.c: 591:                 ProcessMsg(parser->m_MsgID, parser->m_bDataBuffer);
  6714  0114' 0021               	movlb	1	; select bank1
  6715  0115' 0800'              	movf	Parse@parser^(0+128),w
  6716  0116' 3E06               	addlw	6
  6717  0117' 0080'              	movwf	ProcessMsg@data^(0+128)
  6718  0118' 0A00'              	incf	Parse@parser^(0+128),w
  6719  0119' 0086               	movwf	6
  6720  011A' 0187               	clrf	7
  6721  011B' 0801               	movf	1,w
  6722  011C' 3180' 2000' 3180'  	fcall	_ProcessMsg
  6723                           
  6724                           ;main.c: 592:             } else
  6725  011F' 2800'              	goto	l5437
  6726  0120'                    l5435:
  6727                           
  6728                           ;main.c: 593:                 SendNack(CKSUM_ERR);
  6729  0120' 3001               	movlw	1
  6730  0121' 3180' 2000' 3180'  	fcall	_SendNack
  6731  0124'                    l5437:
  6732                           
  6733                           ;main.c: 595:             parser->m_State = IDLE;
  6734  0124' 0021               	movlb	1	; select bank1
  6735  0125' 0800'              	movf	Parse@parser^(0+128),w
  6736  0126' 0086               	movwf	6
  6737  0127' 0187               	clrf	7
  6738  0128' 0181               	clrf	1
  6739                           
  6740                           ;main.c: 596:             break;
  6741  0129' 2800'              	goto	l791
  6742  012A'                    l5439:
  6743                           
  6744                           ;main.c: 599:             SendNack(WRONG_MESSAGE);
  6745  012A' 3002               	movlw	2
  6746  012B' 3180' 2000' 3180'  	fcall	_SendNack
  6747  012E'                    l5441:
  6748                           
  6749                           ;main.c: 600:             parser->m_State = IDLE;
  6750  012E' 0021               	movlb	1	; select bank1
  6751  012F' 0800'              	movf	Parse@parser^(0+128),w
  6752  0130' 0086               	movwf	6
  6753  0131' 0187               	clrf	7
  6754  0132' 0181               	clrf	1
  6755                           
  6756                           ;main.c: 601:     }
  6757  0133' 2800'              	goto	l791
  6758  0134'                    l5443:
  6759  0134' 0800'              	movf	Parse@parser^(0+128),w
  6760  0135' 0086               	movwf	6
  6761  0136' 0187               	clrf	7
  6762  0137' 0801               	movf	1,w
  6763  0138' 0080'              	movwf	??_Parse^(0+128)
  6764  0139' 0181'              	clrf	(??_Parse^(0+128)+1)
  6765                           
  6766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6767                           ; Switch size 1, requested type "simple"
  6768                           ; Number of cases is 1, Range of values is 0 to 0
  6769                           ; switch strategies available:
  6770                           ; Name         Instructions Cycles
  6771                           ; simple_byte            4     3 (average)
  6772                           ; direct_byte            8     6 (fixed)
  6773                           ; jumptable            260     6 (fixed)
  6774                           ;	Chosen strategy is simple_byte
  6775  013A' 0800'              	movf	(??_Parse+1)^(0+128),w
  6776  013B' 3A00               	xorlw	0	; case 0
  6777  013C' 1903               	skipnz
  6778  013D' 2800'              	goto	l5501
  6779  013E' 2800'              	goto	l5439
  6780  013F'                    l5501:
  6781                           
  6782                           ; Switch size 1, requested type "simple"
  6783                           ; Number of cases is 4, Range of values is 0 to 3
  6784                           ; switch strategies available:
  6785                           ; Name         Instructions Cycles
  6786                           ; simple_byte           13     7 (average)
  6787                           ; direct_byte           14     6 (fixed)
  6788                           ; jumptable            260     6 (fixed)
  6789                           ;	Chosen strategy is simple_byte
  6790  013F' 0800'              	movf	??_Parse^(0+128),w
  6791  0140' 3A00               	xorlw	0	; case 0
  6792  0141' 1903               	skipnz
  6793  0142' 2800'              	goto	l5379
  6794  0143' 3A01               	xorlw	1	; case 1
  6795  0144' 1903               	skipnz
  6796  0145' 2800'              	goto	l5387
  6797  0146' 3A03               	xorlw	3	; case 2
  6798  0147' 1903               	skipnz
  6799  0148' 2800'              	goto	l5421
  6800  0149' 3A01               	xorlw	1	; case 3
  6801  014A' 1903               	skipnz
  6802  014B' 2800'              	goto	l5425
  6803  014C' 2800'              	goto	l5439
  6804  014D'                    l791:
  6805  014D' 0008               	return
  6806  014E'                    __end_of_Parse:
  6807                           
  6808                           	psect	text15
  6809  0000'                    __ptext15:	
  6810 ;; *************** function _SendNack *****************
  6811 ;; Defined at:
  6812 ;;		line 440 in file "main.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  error           1    wreg     unsigned char 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  error           1    6[BANK0 ] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6826 ;;      Params:         0       0       0       0       0       0       0       0
  6827 ;;      Locals:         0       1       0       0       0       0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0
  6829 ;;      Totals:         0       1       0       0       0       0       0       0
  6830 ;;Total ram usage:        1 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 9
  6833 ;; This function calls:
  6834 ;;		_SendMsg
  6835 ;; This function is called by:
  6836 ;;		_Parse
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840  0000'                    _SendNack:	
  6841                           ;psect for function _SendNack
  6842                           
  6843                           
  6844                           ;incstack = 0
  6845                           ; Regs used in _SendNack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6846                           ;SendNack@error stored from wreg
  6847  0000' 0020               	movlb	0	; select bank0
  6848  0001' 0086'              	movwf	SendNack@error
  6849  0002'                    l5289:
  6850                           
  6851                           ;main.c: 441:     SendMsg(RFDU_NVT_NACK, &error, 1);
  6852  0002' 3000'              	movlw	(low (SendNack@error| 0))& (0+255)
  6853  0003' 0081'              	movwf	SendMsg@data
  6854  0004' 0182'              	clrf	SendMsg@data_len
  6855  0005' 0A82'              	incf	SendMsg@data_len,f
  6856  0006' 300B               	movlw	11
  6857  0007' 3180' 2000' 3180'  	fcall	_SendMsg
  6858  000A'                    l746:
  6859  000A' 0008               	return
  6860  000B'                    __end_of_SendNack:
  6861                           
  6862                           	psect	text16
  6863  0000'                    __ptext16:	
  6864 ;; *************** function _ProcessMsg *****************
  6865 ;; Defined at:
  6866 ;;		line 449 in file "main.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  msg_id          1    wreg     unsigned char 
  6869 ;;  data            1   11[BANK1 ] PTR unsigned char 
  6870 ;;		 -> main@parser(12), 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  msg_id          1   13[BANK1 ] unsigned char 
  6873 ;;  payload         6   14[BANK1 ] unsigned char [6]
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1    wreg      void 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6883 ;;      Params:         0       0       1       0       0       0       0       0
  6884 ;;      Locals:         0       0       7       0       0       0       0       0
  6885 ;;      Temps:          0       0       1       0       0       0       0       0
  6886 ;;      Totals:         0       0       9       0       0       0       0       0
  6887 ;;Total ram usage:        9 bytes
  6888 ;; Hardware stack levels used: 1
  6889 ;; Hardware stack levels required when called: 15
  6890 ;; This function calls:
  6891 ;;		_KAPS_GoToIdx
  6892 ;;		_KAPS_StorePos
  6893 ;;		_KAPS_getIndex
  6894 ;;		_KAPS_getPos
  6895 ;;		_KAPS_getStatus
  6896 ;;		_KAPS_setAbsPos
  6897 ;;		_KAPS_setRelPos
  6898 ;;		_SSPA_getPOut
  6899 ;;		_SSPA_getTemp
  6900 ;;		_SSPA_setMute
  6901 ;;		_SendMsg
  6902 ;;		_packLong
  6903 ;;		_unpackLong
  6904 ;;		_unpackWord
  6905 ;; This function is called by:
  6906 ;;		_Parse
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910  0000'                    _ProcessMsg:	
  6911                           ;psect for function _ProcessMsg
  6912                           
  6913                           
  6914                           ;incstack = 0
  6915 ;; hardware stack exceeded
  6916                           ; Regs used in _ProcessMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6917                           ;ProcessMsg@msg_id stored from wreg
  6918  0000' 0021               	movlb	1	; select bank1
  6919  0001' 0080'              	movwf	ProcessMsg@msg_id^(0+128)
  6920  0002'                    l5291:
  6921                           
  6922                           ;main.c: 450:     uint8_t payload[6];;main.c: 452:     switch (msg_id) {
  6923  0002' 2800'              	goto	l5347
  6924  0003'                    l5293:
  6925                           
  6926                           ;main.c: 454:             payload[0] = data[0];
  6927  0003' 0800'              	movf	ProcessMsg@data^(0+128),w
  6928  0004' 0086               	movwf	6
  6929  0005' 0187               	clrf	7
  6930  0006' 0801               	movf	1,w
  6931  0007' 0080'              	movwf	ProcessMsg@payload^(0+128)
  6932  0008'                    l5295:
  6933                           
  6934                           ;main.c: 455:             payload[1] = (uint8_t) sppas[data[0]].m_Mute;
  6935  0008' 0800'              	movf	ProcessMsg@data^(0+128),w
  6936  0009' 0086               	movwf	6
  6937  000A' 0187               	clrf	7
  6938  000B' 0801               	movf	1,w
  6939  000C' 0080'              	movwf	??_ProcessMsg^(0+128)
  6940  000D' 3002               	movlw	2
  6941  000E'                    u5435:
  6942  000E' 3580'              	lslf	??_ProcessMsg^(0+128),f
  6943  000F' 3EFF               	addlw	-1
  6944  0010' 1D03               	skipz
  6945  0011' 2800'              	goto	u5435
  6946  0012' 3500'              	lslf	??_ProcessMsg^(0+128),w
  6947  0013' 3E00'              	addlw	(low (_sppas| (0+256)))& (0+255)
  6948  0014' 0086               	movwf	6
  6949  0015' 3001               	movlw	1	; select bank2/3
  6950  0016' 0087               	movwf	7
  6951  0017' 0801               	movf	1,w
  6952  0018' 0081'              	movwf	(ProcessMsg@payload^(0+128)+1)
  6953  0019'                    l5297:
  6954                           
  6955                           ;main.c: 456:             SendMsg(RFDU_NVT_MuteStatus, payload, 2);
  6956  0019' 3000'              	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  6957  001A' 0020               	movlb	0	; select bank0
  6958  001B' 0081'              	movwf	SendMsg@data
  6959  001C' 3002               	movlw	2
  6960  001D' 0082'              	movwf	SendMsg@data_len
  6961  001E' 300C               	movlw	12
  6962  001F' 3180' 2000' 3180'  	fcall	_SendMsg
  6963                           
  6964                           ;main.c: 457:             break;
  6965  0022' 2800'              	goto	l762
  6966  0023'                    l5299:
  6967                           
  6968                           ;main.c: 460:             SSPA_getTemp(&sppas[data[0]], data[0]);
  6969  0023' 0800'              	movf	ProcessMsg@data^(0+128),w
  6970  0024' 0086               	movwf	6
  6971  0025' 0187               	clrf	7
  6972  0026' 0801               	movf	1,w
  6973  0027' 0080'              	movwf	SSPA_getTemp@band^(0+128)
  6974  0028' 0800'              	movf	ProcessMsg@data^(0+128),w
  6975  0029' 0086               	movwf	6
  6976  002A' 0187               	clrf	7
  6977  002B' 0801               	movf	1,w
  6978  002C' 0080'              	movwf	??_ProcessMsg^(0+128)
  6979  002D' 3002               	movlw	2
  6980  002E'                    u5445:
  6981  002E' 3580'              	lslf	??_ProcessMsg^(0+128),f
  6982  002F' 3EFF               	addlw	-1
  6983  0030' 1D03               	skipz
  6984  0031' 2800'              	goto	u5445
  6985  0032' 3500'              	lslf	??_ProcessMsg^(0+128),w
  6986  0033' 3E00'              	addlw	(low (_sppas| (0+256)))& (0+255)
  6987  0034' 3180' 2000' 3180'  	fcall	_SSPA_getTemp
  6988  0037'                    l5301:
  6989                           
  6990                           ;main.c: 461:             payload[0] = data[0];
  6991  0037' 0021               	movlb	1	; select bank1
  6992  0038' 0800'              	movf	ProcessMsg@data^(0+128),w
  6993  0039' 0086               	movwf	6
  6994  003A' 0187               	clrf	7
  6995  003B' 0801               	movf	1,w
  6996  003C' 0080'              	movwf	ProcessMsg@payload^(0+128)
  6997  003D'                    l5303:
  6998                           
  6999                           ;main.c: 462:             unpackWord(sppas[data[0]].m_wTemp, &payload[1]);
  7000  003D' 0800'              	movf	ProcessMsg@data^(0+128),w
  7001  003E' 0086               	movwf	6
  7002  003F' 0187               	clrf	7
  7003  0040' 0801               	movf	1,w
  7004  0041' 0080'              	movwf	??_ProcessMsg^(0+128)
  7005  0042' 3002               	movlw	2
  7006  0043'                    u5455:
  7007  0043' 3580'              	lslf	??_ProcessMsg^(0+128),f
  7008  0044' 3EFF               	addlw	-1
  7009  0045' 1D03               	skipz
  7010  0046' 2800'              	goto	u5455
  7011  0047' 3500'              	lslf	??_ProcessMsg^(0+128),w
  7012  0048' 3E00'              	addlw	(low ((_sppas| (0+256)+1)))& (0+255)
  7013  0049' 0086               	movwf	6
  7014  004A' 3001               	movlw	1	; select bank2/3
  7015  004B' 0087               	movwf	7
  7016  004C' 3F40               	moviw [0]fsr1
  7017  004D' 0020               	movlb	0	; select bank0
  7018  004E' 0080'              	movwf	unpackWord@value
  7019  004F' 3F41               	moviw [1]fsr1
  7020  0050' 0081'              	movwf	unpackWord@value+1
  7021  0051' 3000'              	movlw	(low ((ProcessMsg@payload| 0+1)))& (0+255)
  7022  0052' 0082'              	movwf	unpackWord@data
  7023  0053' 3180' 2000' 3180'  	fcall	_unpackWord
  7024  0056'                    l5305:
  7025                           
  7026                           ;main.c: 463:             SendMsg(RFDU_NVT_SSPATemp, payload, 3);
  7027  0056' 3000'              	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7028  0057' 0020               	movlb	0	; select bank0
  7029  0058' 0081'              	movwf	SendMsg@data
  7030  0059' 3003               	movlw	3
  7031  005A' 0082'              	movwf	SendMsg@data_len
  7032  005B' 300D               	movlw	13
  7033  005C' 3180' 2000' 3180'  	fcall	_SendMsg
  7034                           
  7035                           ;main.c: 464:             break;
  7036  005F' 2800'              	goto	l762
  7037  0060'                    l5307:
  7038                           
  7039                           ;main.c: 467:             SSPA_getPOut(&sppas[data[0]], data[0]);
  7040  0060' 0800'              	movf	ProcessMsg@data^(0+128),w
  7041  0061' 0086               	movwf	6
  7042  0062' 0187               	clrf	7
  7043  0063' 0801               	movf	1,w
  7044  0064' 0080'              	movwf	SSPA_getPOut@band^(0+128)
  7045  0065' 0800'              	movf	ProcessMsg@data^(0+128),w
  7046  0066' 0086               	movwf	6
  7047  0067' 0187               	clrf	7
  7048  0068' 0801               	movf	1,w
  7049  0069' 0080'              	movwf	??_ProcessMsg^(0+128)
  7050  006A' 3002               	movlw	2
  7051  006B'                    u5465:
  7052  006B' 3580'              	lslf	??_ProcessMsg^(0+128),f
  7053  006C' 3EFF               	addlw	-1
  7054  006D' 1D03               	skipz
  7055  006E' 2800'              	goto	u5465
  7056  006F' 3500'              	lslf	??_ProcessMsg^(0+128),w
  7057  0070' 3E00'              	addlw	(low (_sppas| (0+256)))& (0+255)
  7058  0071' 3180' 2000' 3180'  	fcall	_SSPA_getPOut
  7059  0074'                    l5309:
  7060                           
  7061                           ;main.c: 468:             payload[0] = data[0];
  7062  0074' 0021               	movlb	1	; select bank1
  7063  0075' 0800'              	movf	ProcessMsg@data^(0+128),w
  7064  0076' 0086               	movwf	6
  7065  0077' 0187               	clrf	7
  7066  0078' 0801               	movf	1,w
  7067  0079' 0080'              	movwf	ProcessMsg@payload^(0+128)
  7068  007A'                    l5311:
  7069                           
  7070                           ;main.c: 469:             payload[1] = sppas[data[0]].m_bPOut;
  7071  007A' 0800'              	movf	ProcessMsg@data^(0+128),w
  7072  007B' 0086               	movwf	6
  7073  007C' 0187               	clrf	7
  7074  007D' 0801               	movf	1,w
  7075  007E' 0080'              	movwf	??_ProcessMsg^(0+128)
  7076  007F' 3002               	movlw	2
  7077  0080'                    u5475:
  7078  0080' 3580'              	lslf	??_ProcessMsg^(0+128),f
  7079  0081' 3EFF               	addlw	-1
  7080  0082' 1D03               	skipz
  7081  0083' 2800'              	goto	u5475
  7082  0084' 3500'              	lslf	??_ProcessMsg^(0+128),w
  7083  0085' 3E00'              	addlw	(low ((_sppas| (0+256)+3)))& (0+255)
  7084  0086' 0086               	movwf	6
  7085  0087' 3001               	movlw	1	; select bank2/3
  7086  0088' 0087               	movwf	7
  7087  0089' 0801               	movf	1,w
  7088  008A' 0081'              	movwf	(ProcessMsg@payload^(0+128)+1)
  7089  008B'                    l5313:
  7090                           
  7091                           ;main.c: 470:             unpackLong(sppas[data[0]].m_lCurrent, &payload[2]);
  7092  008B' 0800'              	movf	ProcessMsg@data^(0+128),w
  7093  008C' 0086               	movwf	6
  7094  008D' 0187               	clrf	7
  7095  008E' 0801               	movf	1,w
  7096  008F' 0080'              	movwf	??_ProcessMsg^(0+128)
  7097  0090' 3002               	movlw	2
  7098  0091'                    u5485:
  7099  0091' 3580'              	lslf	??_ProcessMsg^(0+128),f
  7100  0092' 3EFF               	addlw	-1
  7101  0093' 1D03               	skipz
  7102  0094' 2800'              	goto	u5485
  7103  0095' 3500'              	lslf	??_ProcessMsg^(0+128),w
  7104  0096' 3E00'              	addlw	(low ((_sppas| (0+256)+4)))& (0+255)
  7105  0097' 0086               	movwf	6
  7106  0098' 3001               	movlw	1	; select bank2/3
  7107  0099' 0087               	movwf	7
  7108  009A' 3F40               	moviw [0]fsr1
  7109  009B' 0020               	movlb	0	; select bank0
  7110  009C' 0080'              	movwf	unpackLong@value
  7111  009D' 3F41               	moviw [1]fsr1
  7112  009E' 0081'              	movwf	unpackLong@value+1
  7113  009F' 3F42               	moviw [2]fsr1
  7114  00A0' 0082'              	movwf	unpackLong@value+2
  7115  00A1' 3F43               	moviw [3]fsr1
  7116  00A2' 0083'              	movwf	unpackLong@value+3
  7117  00A3' 3000'              	movlw	(low ((ProcessMsg@payload| 0+2)))& (0+255)
  7118  00A4' 0084'              	movwf	unpackLong@data
  7119  00A5' 3180' 2000' 3180'  	fcall	_unpackLong
  7120  00A8'                    l5315:
  7121                           
  7122                           ;main.c: 471:             SendMsg(RFDU_NVT_SSPAPout, payload, 6);
  7123  00A8' 3000'              	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7124  00A9' 0020               	movlb	0	; select bank0
  7125  00AA' 0081'              	movwf	SendMsg@data
  7126  00AB' 3006               	movlw	6
  7127  00AC' 0082'              	movwf	SendMsg@data_len
  7128  00AD' 300E               	movlw	14
  7129  00AE' 3180' 2000' 3180'  	fcall	_SendMsg
  7130                           
  7131                           ;main.c: 472:             break;
  7132  00B1' 2800'              	goto	l762
  7133  00B2'                    l5317:
  7134                           
  7135                           ;main.c: 475:             KAPS_getStatus(&kaps);
  7136  00B2' 3000'              	movlw	(low (_kaps| 0))& (0+255)
  7137  00B3' 3180' 2000' 3180'  	fcall	_KAPS_getStatus
  7138  00B6'                    l5319:
  7139                           
  7140                           ;main.c: 476:             payload[0] = (uint8_t) kaps.m_Status;
  7141  00B6' 0021               	movlb	1	; select bank1
  7142  00B7' 0801'              	movf	(_kaps^(0+128)+1),w
  7143  00B8' 0080'              	movwf	ProcessMsg@payload^(0+128)
  7144  00B9'                    l5321:
  7145                           
  7146                           ;main.c: 477:             SendMsg(RFDU_NVT_KapsStatus, payload, 1);
  7147  00B9' 3000'              	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7148  00BA' 0020               	movlb	0	; select bank0
  7149  00BB' 0081'              	movwf	SendMsg@data
  7150  00BC' 0182'              	clrf	SendMsg@data_len
  7151  00BD' 0A82'              	incf	SendMsg@data_len,f
  7152  00BE' 300F               	movlw	15
  7153  00BF' 3180' 2000' 3180'  	fcall	_SendMsg
  7154                           
  7155                           ;main.c: 478:             break;
  7156  00C2' 2800'              	goto	l762
  7157  00C3'                    l5323:
  7158                           
  7159                           ;main.c: 481:             KAPS_getPos(&kaps);
  7160  00C3' 3000'              	movlw	(low (_kaps| 0))& (0+255)
  7161  00C4' 3180' 2000' 3180'  	fcall	_KAPS_getPos
  7162  00C7'                    l5325:
  7163                           
  7164                           ;main.c: 482:             unpackLong(kaps.m_lAbsPos, payload);
  7165  00C7' 3002               	movlw	2
  7166  00C8' 3E00'              	addlw	(low (_kaps| 0))& (0+255)
  7167  00C9' 0086               	movwf	6
  7168  00CA' 0187               	clrf	7
  7169  00CB' 3F40               	moviw [0]fsr1
  7170  00CC' 0020               	movlb	0	; select bank0
  7171  00CD' 0080'              	movwf	unpackLong@value
  7172  00CE' 3F41               	moviw [1]fsr1
  7173  00CF' 0081'              	movwf	unpackLong@value+1
  7174  00D0' 3F42               	moviw [2]fsr1
  7175  00D1' 0082'              	movwf	unpackLong@value+2
  7176  00D2' 3F43               	moviw [3]fsr1
  7177  00D3' 0083'              	movwf	unpackLong@value+3
  7178  00D4' 3000'              	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7179  00D5' 0084'              	movwf	unpackLong@data
  7180  00D6' 3180' 2000' 3180'  	fcall	_unpackLong
  7181  00D9'                    l5327:
  7182                           
  7183                           ;main.c: 483:             SendMsg(RFDU_NVT_KapsAbsPos, payload, 4);
  7184  00D9' 3000'              	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7185  00DA' 0020               	movlb	0	; select bank0
  7186  00DB' 0081'              	movwf	SendMsg@data
  7187  00DC' 3004               	movlw	4
  7188  00DD' 0082'              	movwf	SendMsg@data_len
  7189  00DE' 3010               	movlw	16
  7190  00DF' 3180' 2000' 3180'  	fcall	_SendMsg
  7191                           
  7192                           ;main.c: 484:             break;
  7193  00E2' 2800'              	goto	l762
  7194  00E3'                    l5329:
  7195                           
  7196                           ;main.c: 487:             KAPS_getIndex(&kaps);
  7197  00E3' 3000'              	movlw	(low (_kaps| 0))& (0+255)
  7198  00E4' 3180' 2000' 3180'  	fcall	_KAPS_getIndex
  7199  00E7'                    l5331:
  7200                           
  7201                           ;main.c: 488:             payload[0] = kaps.m_bIdxPos;
  7202  00E7' 0021               	movlb	1	; select bank1
  7203  00E8' 0806'              	movf	(_kaps^(0+128)+6),w
  7204  00E9' 0080'              	movwf	ProcessMsg@payload^(0+128)
  7205  00EA'                    l5333:
  7206                           
  7207                           ;main.c: 489:             SendMsg(RFDU_NVT_KapsIdxPos, payload, 1);
  7208  00EA' 3000'              	movlw	(low (ProcessMsg@payload| 0))& (0+255)
  7209  00EB' 0020               	movlb	0	; select bank0
  7210  00EC' 0081'              	movwf	SendMsg@data
  7211  00ED' 0182'              	clrf	SendMsg@data_len
  7212  00EE' 0A82'              	incf	SendMsg@data_len,f
  7213  00EF' 3012               	movlw	18
  7214  00F0' 3180' 2000' 3180'  	fcall	_SendMsg
  7215                           
  7216                           ;main.c: 490:             break;
  7217  00F3' 2800'              	goto	l762
  7218  00F4'                    l5335:
  7219                           
  7220                           ;main.c: 493:             SSPA_setMute(&sppas[data[0]], data[0], (mute_t) data[1]);
  7221  00F4' 0800'              	movf	ProcessMsg@data^(0+128),w
  7222  00F5' 0086               	movwf	6
  7223  00F6' 0187               	clrf	7
  7224  00F7' 0801               	movf	1,w
  7225  00F8' 0020               	movlb	0	; select bank0
  7226  00F9' 0080'              	movwf	SSPA_setMute@band
  7227  00FA' 0021               	movlb	1	; select bank1
  7228  00FB' 0800'              	movf	ProcessMsg@data^(0+128),w
  7229  00FC' 0086               	movwf	6
  7230  00FD' 0187               	clrf	7
  7231  00FE' 3F41               	moviw [1]fsr1
  7232  00FF' 0020               	movlb	0	; select bank0
  7233  0100' 0081'              	movwf	SSPA_setMute@mute
  7234  0101' 0021               	movlb	1	; select bank1
  7235  0102' 0800'              	movf	ProcessMsg@data^(0+128),w
  7236  0103' 0086               	movwf	6
  7237  0104' 0187               	clrf	7
  7238  0105' 0801               	movf	1,w
  7239  0106' 0080'              	movwf	??_ProcessMsg^(0+128)
  7240  0107' 3002               	movlw	2
  7241  0108'                    u5495:
  7242  0108' 3580'              	lslf	??_ProcessMsg^(0+128),f
  7243  0109' 3EFF               	addlw	-1
  7244  010A' 1D03               	skipz
  7245  010B' 2800'              	goto	u5495
  7246  010C' 3500'              	lslf	??_ProcessMsg^(0+128),w
  7247  010D' 3E00'              	addlw	(low (_sppas| (0+256)))& (0+255)
  7248  010E' 3180' 2000' 3180'  	fcall	_SSPA_setMute
  7249                           
  7250                           ;main.c: 494:             break;
  7251  0111' 2800'              	goto	l762
  7252  0112'                    l5337:
  7253                           
  7254                           ;main.c: 497:             KAPS_GoToIdx(&kaps, data[0]);
  7255  0112' 0800'              	movf	ProcessMsg@data^(0+128),w
  7256  0113' 0086               	movwf	6
  7257  0114' 0187               	clrf	7
  7258  0115' 0801               	movf	1,w
  7259  0116' 0020               	movlb	0	; select bank0
  7260  0117' 0080'              	movwf	KAPS_GoToIdx@idx
  7261  0118' 3000'              	movlw	(low (_kaps| 0))& (0+255)
  7262  0119' 3180' 2000' 3180'  	fcall	_KAPS_GoToIdx
  7263                           
  7264                           ;main.c: 498:             break;
  7265  011C' 2800'              	goto	l762
  7266  011D'                    l5339:
  7267                           
  7268                           ;main.c: 501:             KAPS_setAbsPos(&kaps, packLong(data));
  7269  011D' 0800'              	movf	ProcessMsg@data^(0+128),w
  7270  011E' 3180' 2000' 3180'  	fcall	_packLong
  7271  0121' 0020               	movlb	0	; select bank0
  7272  0122' 0803'              	movf	?_packLong+3,w
  7273  0123' 0090'              	movwf	KAPS_setAbsPos@pos+3
  7274  0124' 0802'              	movf	?_packLong+2,w
  7275  0125' 008F'              	movwf	KAPS_setAbsPos@pos+2
  7276  0126' 0801'              	movf	?_packLong+1,w
  7277  0127' 008E'              	movwf	KAPS_setAbsPos@pos+1
  7278  0128' 0800'              	movf	?_packLong,w
  7279  0129' 008D'              	movwf	KAPS_setAbsPos@pos
  7280  012A' 3000'              	movlw	(low (_kaps| 0))& (0+255)
  7281  012B' 3180' 2000' 3180'  	fcall	_KAPS_setAbsPos
  7282                           
  7283                           ;main.c: 502:             break;
  7284  012E' 2800'              	goto	l762
  7285  012F'                    l5341:
  7286                           
  7287                           ;main.c: 505:             KAPS_setRelPos(&kaps, packLong(data));
  7288  012F' 0800'              	movf	ProcessMsg@data^(0+128),w
  7289  0130' 3180' 2000' 3180'  	fcall	_packLong
  7290  0133' 0020               	movlb	0	; select bank0
  7291  0134' 0803'              	movf	?_packLong+3,w
  7292  0135' 0090'              	movwf	KAPS_setRelPos@offset+3
  7293  0136' 0802'              	movf	?_packLong+2,w
  7294  0137' 008F'              	movwf	KAPS_setRelPos@offset+2
  7295  0138' 0801'              	movf	?_packLong+1,w
  7296  0139' 008E'              	movwf	KAPS_setRelPos@offset+1
  7297  013A' 0800'              	movf	?_packLong,w
  7298  013B' 008D'              	movwf	KAPS_setRelPos@offset
  7299  013C' 3000'              	movlw	(low (_kaps| 0))& (0+255)
  7300  013D' 3180' 2000' 3180'  	fcall	_KAPS_setRelPos
  7301                           
  7302                           ;main.c: 506:             break;
  7303  0140' 2800'              	goto	l762
  7304  0141'                    l5343:
  7305                           
  7306                           ;main.c: 509:             KAPS_StorePos(&kaps, data[4], packLong(data));
  7307  0141' 0800'              	movf	ProcessMsg@data^(0+128),w
  7308  0142' 0086               	movwf	6
  7309  0143' 0187               	clrf	7
  7310  0144' 3F44               	moviw [4]fsr1
  7311  0145' 0020               	movlb	0	; select bank0
  7312  0146' 008D'              	movwf	KAPS_StorePos@idx
  7313  0147' 0021               	movlb	1	; select bank1
  7314  0148' 0800'              	movf	ProcessMsg@data^(0+128),w
  7315  0149' 3180' 2000' 3180'  	fcall	_packLong
  7316  014C' 0020               	movlb	0	; select bank0
  7317  014D' 0803'              	movf	?_packLong+3,w
  7318  014E' 0091'              	movwf	KAPS_StorePos@pos+3
  7319  014F' 0802'              	movf	?_packLong+2,w
  7320  0150' 0090'              	movwf	KAPS_StorePos@pos+2
  7321  0151' 0801'              	movf	?_packLong+1,w
  7322  0152' 008F'              	movwf	KAPS_StorePos@pos+1
  7323  0153' 0800'              	movf	?_packLong,w
  7324  0154' 008E'              	movwf	KAPS_StorePos@pos
  7325  0155' 3000'              	movlw	(low (_kaps| 0))& (0+255)
  7326  0156' 3180' 2000' 3180'  	fcall	_KAPS_StorePos
  7327                           
  7328                           ;main.c: 510:             break;
  7329  0159' 2800'              	goto	l762
  7330  015A'                    l5347:
  7331  015A' 0800'              	movf	ProcessMsg@msg_id^(0+128),w
  7332                           
  7333                           ; Switch size 1, requested type "simple"
  7334                           ; Number of cases is 11, Range of values is 1 to 17
  7335                           ; switch strategies available:
  7336                           ; Name         Instructions Cycles
  7337                           ; simple_byte           34    18 (average)
  7338                           ; direct_byte           43     9 (fixed)
  7339                           ; jumptable            263     9 (fixed)
  7340                           ;	Chosen strategy is simple_byte
  7341  015B' 3A01               	xorlw	1	; case 1
  7342  015C' 1903               	skipnz
  7343  015D' 2800'              	goto	l5335
  7344  015E' 3A03               	xorlw	3	; case 2
  7345  015F' 1903               	skipnz
  7346  0160' 2800'              	goto	l5293
  7347  0161' 3A01               	xorlw	1	; case 3
  7348  0162' 1903               	skipnz
  7349  0163' 2800'              	goto	l5299
  7350  0164' 3A07               	xorlw	7	; case 4
  7351  0165' 1903               	skipnz
  7352  0166' 2800'              	goto	l5307
  7353  0167' 3A01               	xorlw	1	; case 5
  7354  0168' 1903               	skipnz
  7355  0169' 2800'              	goto	l5317
  7356  016A' 3A03               	xorlw	3	; case 6
  7357  016B' 1903               	skipnz
  7358  016C' 2800'              	goto	l5323
  7359  016D' 3A01               	xorlw	1	; case 7
  7360  016E' 1903               	skipnz
  7361  016F' 2800'              	goto	l5337
  7362  0170' 3A0F               	xorlw	15	; case 8
  7363  0171' 1903               	skipnz
  7364  0172' 2800'              	goto	l5339
  7365  0173' 3A01               	xorlw	1	; case 9
  7366  0174' 1903               	skipnz
  7367  0175' 2800'              	goto	l5341
  7368  0176' 3A03               	xorlw	3	; case 10
  7369  0177' 1903               	skipnz
  7370  0178' 2800'              	goto	l5343
  7371  0179' 3A1B               	xorlw	27	; case 17
  7372  017A' 1903               	skipnz
  7373  017B' 2800'              	goto	l5329
  7374  017C' 2800'              	goto	l762
  7375  017D'                    l762:
  7376  017D' 0008               	return
  7377  017E'                    __end_of_ProcessMsg:
  7378                           
  7379                           	psect	text17
  7380  0000'                    __ptext17:	
  7381 ;; *************** function _unpackWord *****************
  7382 ;; Defined at:
  7383 ;;		line 214 in file "main.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  value           2    0[BANK0 ] unsigned short 
  7386 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7387 ;;		 -> ProcessMsg@payload(6), 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, fsr1l, fsr1h, status,2
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7399 ;;      Params:         0       3       0       0       0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0
  7402 ;;      Totals:         0       3       0       0       0       0       0       0
  7403 ;;Total ram usage:        3 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 7
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_ProcessMsg
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413  0000'                    _unpackWord:	
  7414                           ;psect for function _unpackWord
  7415                           
  7416  0000'                    l5093:	
  7417                           ;incstack = 0
  7418                           ; Regs used in _unpackWord: [wreg+fsr1l+fsr1h+status,2]
  7419                           
  7420                           
  7421                           ;main.c: 216:     data[0] = value & 0xFF;
  7422  0000' 0020               	movlb	0	; select bank0
  7423  0001' 0802'              	movf	unpackWord@data,w
  7424  0002' 0086               	movwf	6
  7425  0003' 0187               	clrf	7
  7426  0004' 0800'              	movf	unpackWord@value,w
  7427  0005' 0081               	movwf	1
  7428  0006'                    l5095:
  7429                           
  7430                           ;main.c: 217:     data[1] = (value >> 8) & 0xFF;
  7431  0006' 0A02'              	incf	unpackWord@data,w
  7432  0007' 0086               	movwf	6
  7433  0008' 0187               	clrf	7
  7434  0009' 0801'              	movf	unpackWord@value+1,w
  7435  000A' 0081               	movwf	1
  7436  000B'                    l665:
  7437  000B' 0008               	return
  7438  000C'                    __end_of_unpackWord:
  7439                           
  7440                           	psect	text18
  7441  0000'                    __ptext18:	
  7442 ;; *************** function _unpackLong *****************
  7443 ;; Defined at:
  7444 ;;		line 200 in file "main.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  value           4    0[BANK0 ] unsigned long 
  7447 ;;  data            1    4[BANK0 ] PTR unsigned char 
  7448 ;;		 -> ProcessMsg@payload(6), 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7460 ;;      Params:         0       5       0       0       0       0       0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0       0
  7462 ;;      Temps:          0       4       0       0       0       0       0       0
  7463 ;;      Totals:         0       9       0       0       0       0       0       0
  7464 ;;Total ram usage:        9 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 7
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_ProcessMsg
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474  0000'                    _unpackLong:	
  7475                           ;psect for function _unpackLong
  7476                           
  7477  0000'                    l4109:	
  7478                           ;incstack = 0
  7479                           ; Regs used in _unpackLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  7480                           
  7481                           
  7482                           ;main.c: 202:     data[0] = (value & 0XFF);
  7483  0000' 0020               	movlb	0	; select bank0
  7484  0001' 0804'              	movf	unpackLong@data,w
  7485  0002' 0086               	movwf	6
  7486  0003' 0187               	clrf	7
  7487  0004' 0800'              	movf	unpackLong@value,w
  7488  0005' 0081               	movwf	1
  7489  0006'                    l4111:
  7490                           
  7491                           ;main.c: 203:     data[1] = (value >> 8) & 0xFF;
  7492  0006' 0A04'              	incf	unpackLong@data,w
  7493  0007' 0086               	movwf	6
  7494  0008' 0187               	clrf	7
  7495  0009' 0800'              	movf	unpackLong@value,w
  7496  000A' 0085'              	movwf	??_unpackLong
  7497  000B' 0801'              	movf	unpackLong@value+1,w
  7498  000C' 0086'              	movwf	??_unpackLong+1
  7499  000D' 0802'              	movf	unpackLong@value+2,w
  7500  000E' 0087'              	movwf	??_unpackLong+2
  7501  000F' 0803'              	movf	unpackLong@value+3,w
  7502  0010' 0088'              	movwf	??_unpackLong+3
  7503  0011' 3008               	movlw	8
  7504  0012'                    u4135:
  7505  0012' 3688'              	lsrf	??_unpackLong+3,f
  7506  0013' 0C87'              	rrf	??_unpackLong+2,f
  7507  0014' 0C86'              	rrf	??_unpackLong+1,f
  7508  0015' 0C85'              	rrf	??_unpackLong,f
  7509  0016'                    u4130:
  7510  0016' 0B89               	decfsz	9,f
  7511  0017' 2800'              	goto	u4135
  7512  0018' 0805'              	movf	??_unpackLong,w
  7513  0019' 0081               	movwf	1
  7514  001A'                    l4113:
  7515                           
  7516                           ;main.c: 204:     data[2] = (value >> 16) & 0xFF;
  7517  001A' 0804'              	movf	unpackLong@data,w
  7518  001B' 3E02               	addlw	2
  7519  001C' 0086               	movwf	6
  7520  001D' 0187               	clrf	7
  7521  001E' 0800'              	movf	unpackLong@value,w
  7522  001F' 0085'              	movwf	??_unpackLong
  7523  0020' 0801'              	movf	unpackLong@value+1,w
  7524  0021' 0086'              	movwf	??_unpackLong+1
  7525  0022' 0802'              	movf	unpackLong@value+2,w
  7526  0023' 0087'              	movwf	??_unpackLong+2
  7527  0024' 0803'              	movf	unpackLong@value+3,w
  7528  0025' 0088'              	movwf	??_unpackLong+3
  7529  0026' 3010               	movlw	16
  7530  0027'                    u4145:
  7531  0027' 3688'              	lsrf	??_unpackLong+3,f
  7532  0028' 0C87'              	rrf	??_unpackLong+2,f
  7533  0029' 0C86'              	rrf	??_unpackLong+1,f
  7534  002A' 0C85'              	rrf	??_unpackLong,f
  7535  002B'                    u4140:
  7536  002B' 0B89               	decfsz	9,f
  7537  002C' 2800'              	goto	u4145
  7538  002D' 0805'              	movf	??_unpackLong,w
  7539  002E' 0081               	movwf	1
  7540  002F'                    l4115:
  7541                           
  7542                           ;main.c: 205:     data[3] = (value >> 24) & 0xFF;
  7543  002F' 0804'              	movf	unpackLong@data,w
  7544  0030' 3E03               	addlw	3
  7545  0031' 0086               	movwf	6
  7546  0032' 0187               	clrf	7
  7547  0033' 0800'              	movf	unpackLong@value,w
  7548  0034' 0085'              	movwf	??_unpackLong
  7549  0035' 0801'              	movf	unpackLong@value+1,w
  7550  0036' 0086'              	movwf	??_unpackLong+1
  7551  0037' 0802'              	movf	unpackLong@value+2,w
  7552  0038' 0087'              	movwf	??_unpackLong+2
  7553  0039' 0803'              	movf	unpackLong@value+3,w
  7554  003A' 0088'              	movwf	??_unpackLong+3
  7555  003B' 3018               	movlw	24
  7556  003C'                    u4155:
  7557  003C' 3688'              	lsrf	??_unpackLong+3,f
  7558  003D' 0C87'              	rrf	??_unpackLong+2,f
  7559  003E' 0C86'              	rrf	??_unpackLong+1,f
  7560  003F' 0C85'              	rrf	??_unpackLong,f
  7561  0040'                    u4150:
  7562  0040' 0B89               	decfsz	9,f
  7563  0041' 2800'              	goto	u4155
  7564  0042' 0805'              	movf	??_unpackLong,w
  7565  0043' 0081               	movwf	1
  7566  0044'                    l662:
  7567  0044' 0008               	return
  7568  0045'                    __end_of_unpackLong:
  7569                           
  7570                           	psect	text19
  7571  0000'                    __ptext19:	
  7572 ;; *************** function _packLong *****************
  7573 ;; Defined at:
  7574 ;;		line 167 in file "main.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  data            1    wreg     PTR unsigned char 
  7577 ;;		 -> main@parser(12), 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  data            1   12[BANK0 ] PTR unsigned char 
  7580 ;;		 -> main@parser(12), 
  7581 ;;  result          4    8[BANK0 ] unsigned long 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  4    0[BANK0 ] unsigned long 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7591 ;;      Params:         0       4       0       0       0       0       0       0
  7592 ;;      Locals:         0       5       0       0       0       0       0       0
  7593 ;;      Temps:          0       4       0       0       0       0       0       0
  7594 ;;      Totals:         0      13       0       0       0       0       0       0
  7595 ;;Total ram usage:       13 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 7
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_ProcessMsg
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605  0000'                    _packLong:	
  7606                           ;psect for function _packLong
  7607                           
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in _packLong: [wreg+fsr1l+fsr1h+status,2+status,0]
  7611                           ;packLong@data stored from wreg
  7612  0000' 0020               	movlb	0	; select bank0
  7613  0001' 008C'              	movwf	packLong@data
  7614  0002'                    l4097:
  7615  0002'                    l4099:
  7616                           
  7617                           ;main.c: 171:     result = (uint32_t) data[0] << 24;
  7618  0002' 080C'              	movf	packLong@data,w
  7619  0003' 0086               	movwf	6
  7620  0004' 0187               	clrf	7
  7621  0005' 0801               	movf	1,w
  7622  0006' 0084'              	movwf	??_packLong
  7623  0007' 0185'              	clrf	??_packLong+1
  7624  0008' 0186'              	clrf	??_packLong+2
  7625  0009' 0187'              	clrf	??_packLong+3
  7626  000A' 3018               	movlw	24
  7627  000B'                    u4105:
  7628  000B' 3584'              	lslf	??_packLong,f
  7629  000C' 0D85'              	rlf	??_packLong+1,f
  7630  000D' 0D86'              	rlf	??_packLong+2,f
  7631  000E' 0D87'              	rlf	??_packLong+3,f
  7632  000F'                    u4100:
  7633  000F' 0B89               	decfsz	9,f
  7634  0010' 2800'              	goto	u4105
  7635  0011' 0807'              	movf	??_packLong+3,w
  7636  0012' 008B'              	movwf	packLong@result+3
  7637  0013' 0806'              	movf	??_packLong+2,w
  7638  0014' 008A'              	movwf	packLong@result+2
  7639  0015' 0805'              	movf	??_packLong+1,w
  7640  0016' 0089'              	movwf	packLong@result+1
  7641  0017' 0804'              	movf	??_packLong,w
  7642  0018' 0088'              	movwf	packLong@result
  7643  0019'                    l4101:
  7644                           
  7645                           ;main.c: 172:     result |= (uint32_t) data[1] << 16;
  7646  0019' 0A0C'              	incf	packLong@data,w
  7647  001A' 0086               	movwf	6
  7648  001B' 0187               	clrf	7
  7649  001C' 0801               	movf	1,w
  7650  001D' 0084'              	movwf	??_packLong
  7651  001E' 0185'              	clrf	??_packLong+1
  7652  001F' 0186'              	clrf	??_packLong+2
  7653  0020' 0187'              	clrf	??_packLong+3
  7654  0021' 3010               	movlw	16
  7655  0022'                    u4115:
  7656  0022' 3584'              	lslf	??_packLong,f
  7657  0023' 0D85'              	rlf	??_packLong+1,f
  7658  0024' 0D86'              	rlf	??_packLong+2,f
  7659  0025' 0D87'              	rlf	??_packLong+3,f
  7660  0026'                    u4110:
  7661  0026' 0B89               	decfsz	9,f
  7662  0027' 2800'              	goto	u4115
  7663  0028' 0804'              	movf	??_packLong,w
  7664  0029' 0488'              	iorwf	packLong@result,f
  7665  002A' 0805'              	movf	??_packLong+1,w
  7666  002B' 0489'              	iorwf	packLong@result+1,f
  7667  002C' 0806'              	movf	??_packLong+2,w
  7668  002D' 048A'              	iorwf	packLong@result+2,f
  7669  002E' 0807'              	movf	??_packLong+3,w
  7670  002F' 048B'              	iorwf	packLong@result+3,f
  7671  0030'                    l4103:
  7672                           
  7673                           ;main.c: 173:     result |= (uint32_t) data[2] << 8;
  7674  0030' 080C'              	movf	packLong@data,w
  7675  0031' 3E02               	addlw	2
  7676  0032' 0086               	movwf	6
  7677  0033' 0187               	clrf	7
  7678  0034' 0801               	movf	1,w
  7679  0035' 0084'              	movwf	??_packLong
  7680  0036' 0185'              	clrf	??_packLong+1
  7681  0037' 0186'              	clrf	??_packLong+2
  7682  0038' 0187'              	clrf	??_packLong+3
  7683  0039' 3008               	movlw	8
  7684  003A'                    u4125:
  7685  003A' 3584'              	lslf	??_packLong,f
  7686  003B' 0D85'              	rlf	??_packLong+1,f
  7687  003C' 0D86'              	rlf	??_packLong+2,f
  7688  003D' 0D87'              	rlf	??_packLong+3,f
  7689  003E'                    u4120:
  7690  003E' 0B89               	decfsz	9,f
  7691  003F' 2800'              	goto	u4125
  7692  0040' 0804'              	movf	??_packLong,w
  7693  0041' 0488'              	iorwf	packLong@result,f
  7694  0042' 0805'              	movf	??_packLong+1,w
  7695  0043' 0489'              	iorwf	packLong@result+1,f
  7696  0044' 0806'              	movf	??_packLong+2,w
  7697  0045' 048A'              	iorwf	packLong@result+2,f
  7698  0046' 0807'              	movf	??_packLong+3,w
  7699  0047' 048B'              	iorwf	packLong@result+3,f
  7700  0048'                    l4105:
  7701                           
  7702                           ;main.c: 174:     result |= (uint32_t) data[3];
  7703  0048' 080C'              	movf	packLong@data,w
  7704  0049' 3E03               	addlw	3
  7705  004A' 0086               	movwf	6
  7706  004B' 0187               	clrf	7
  7707  004C' 0801               	movf	1,w
  7708  004D' 0488'              	iorwf	packLong@result,f
  7709                           
  7710                           ;main.c: 176:     return result;
  7711  004E' 080B'              	movf	packLong@result+3,w
  7712  004F' 0083'              	movwf	?_packLong+3
  7713  0050' 080A'              	movf	packLong@result+2,w
  7714  0051' 0082'              	movwf	?_packLong+2
  7715  0052' 0809'              	movf	packLong@result+1,w
  7716  0053' 0081'              	movwf	?_packLong+1
  7717  0054' 0808'              	movf	packLong@result,w
  7718  0055' 0080'              	movwf	?_packLong
  7719  0056'                    l656:
  7720  0056' 0008               	return
  7721  0057'                    __end_of_packLong:
  7722                           
  7723                           	psect	text20
  7724  0000'                    __ptext20:	
  7725 ;; *************** function _SendMsg *****************
  7726 ;; Defined at:
  7727 ;;		line 418 in file "main.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  msg_id          1    wreg     unsigned char 
  7730 ;;  data            1    1[BANK0 ] PTR unsigned char 
  7731 ;;		 -> main@parser(12), ProcessMsg@payload(6), SendNack@error(1), 
  7732 ;;  data_len        1    2[BANK0 ] unsigned char 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  msg_id          1    5[BANK0 ] unsigned char 
  7735 ;;  sum             1    4[BANK0 ] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      void 
  7738 ;; Registers used:
  7739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7745 ;;      Params:         0       2       0       0       0       0       0       0
  7746 ;;      Locals:         0       2       0       0       0       0       0       0
  7747 ;;      Temps:          0       1       0       0       0       0       0       0
  7748 ;;      Totals:         0       5       0       0       0       0       0       0
  7749 ;;Total ram usage:        5 bytes
  7750 ;; Hardware stack levels used: 1
  7751 ;; Hardware stack levels required when called: 8
  7752 ;; This function calls:
  7753 ;;		_EUSART_Write
  7754 ;; This function is called by:
  7755 ;;		_SendNack
  7756 ;;		_ProcessMsg
  7757 ;;		_Parse
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761  0000'                    _SendMsg:	
  7762                           ;psect for function _SendMsg
  7763                           
  7764                           
  7765                           ;incstack = 0
  7766                           ; Regs used in _SendMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7767                           ;SendMsg@msg_id stored from wreg
  7768  0000' 0020               	movlb	0	; select bank0
  7769  0001' 0085'              	movwf	SendMsg@msg_id
  7770  0002'                    l5161:
  7771                           
  7772                           ;main.c: 419:     uint8_t sum = 0x00;
  7773  0002' 0184'              	clrf	SendMsg@sum
  7774  0003'                    l5163:
  7775                           
  7776                           ;main.c: 421:     EUSART_Write(0x01);
  7777  0003' 0180'              	clrf	EUSART_Write@txData
  7778  0004' 0A80'              	incf	EUSART_Write@txData,f
  7779  0005' 3180' 2000' 3180'  	fcall	_EUSART_Write
  7780  0008'                    l5165:
  7781                           
  7782                           ;main.c: 422:     EUSART_Write(msg_id);
  7783  0008' 0020               	movlb	0	; select bank0
  7784  0009' 0805'              	movf	SendMsg@msg_id,w
  7785  000A' 0080'              	movwf	EUSART_Write@txData
  7786  000B' 3180' 2000' 3180'  	fcall	_EUSART_Write
  7787  000E'                    l5167:
  7788                           
  7789                           ;main.c: 424:     if (msg_id == RFDU_NVT_NACK)
  7790  000E' 300B               	movlw	11
  7791  000F' 0020               	movlb	0	; select bank0
  7792  0010' 0605'              	xorwf	SendMsg@msg_id,w
  7793  0011' 1D03               	btfss	3,2
  7794  0012' 2800'              	goto	u5411
  7795  0013' 2800'              	goto	u5410
  7796  0014'                    u5411:
  7797  0014' 2800'              	goto	l5171
  7798  0015'                    u5410:
  7799  0015' 2800'              	goto	l741
  7800  0016'                    l5171:
  7801                           
  7802                           ;main.c: 427:     for (; data_len > 0; data_len--) {
  7803  0016' 0802'              	movf	SendMsg@data_len,w
  7804  0017' 1D03               	btfss	3,2
  7805  0018' 2800'              	goto	u5421
  7806  0019' 2800'              	goto	u5420
  7807  001A'                    u5421:
  7808  001A' 2800'              	goto	l5175
  7809  001B'                    u5420:
  7810  001B' 2800'              	goto	l5185
  7811  001C'                    l5175:
  7812                           
  7813                           ;main.c: 428:         EUSART_Write(*data);
  7814  001C' 0801'              	movf	SendMsg@data,w
  7815  001D' 0086               	movwf	6
  7816  001E' 0187               	clrf	7
  7817  001F' 0801               	movf	1,w
  7818  0020' 0080'              	movwf	EUSART_Write@txData
  7819  0021' 3180' 2000' 3180'  	fcall	_EUSART_Write
  7820  0024'                    l5177:
  7821                           
  7822                           ;main.c: 429:         sum += *data;
  7823  0024' 0020               	movlb	0	; select bank0
  7824  0025' 0801'              	movf	SendMsg@data,w
  7825  0026' 0086               	movwf	6
  7826  0027' 0187               	clrf	7
  7827  0028' 0801               	movf	1,w
  7828  0029' 0083'              	movwf	??_SendMsg
  7829  002A' 0803'              	movf	??_SendMsg,w
  7830  002B' 0784'              	addwf	SendMsg@sum,f
  7831  002C'                    l5179:
  7832                           
  7833                           ;main.c: 430:         data++;
  7834  002C' 3001               	movlw	1
  7835  002D' 0083'              	movwf	??_SendMsg
  7836  002E' 0803'              	movf	??_SendMsg,w
  7837  002F' 0781'              	addwf	SendMsg@data,f
  7838  0030'                    l5181:
  7839                           
  7840                           ;main.c: 431:     }
  7841  0030' 3001               	movlw	1
  7842  0031' 0282'              	subwf	SendMsg@data_len,f
  7843  0032' 2800'              	goto	l5171
  7844  0033'                    l5185:
  7845                           
  7846                           ;main.c: 433:     EUSART_Write(sum);
  7847  0033' 0804'              	movf	SendMsg@sum,w
  7848  0034' 0080'              	movwf	EUSART_Write@txData
  7849  0035' 3180' 2000' 3180'  	fcall	_EUSART_Write
  7850  0038'                    l741:
  7851  0038' 0008               	return
  7852  0039'                    __end_of_SendMsg:
  7853                           
  7854                           	psect	text21
  7855  0000'                    __ptext21:	
  7856 ;; *************** function _EUSART_Write *****************
  7857 ;; Defined at:
  7858 ;;		line 235 in file "mcc_generated_files/uart/src/eusart.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  txData          1    0[BANK0 ] unsigned char 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7872 ;;      Params:         0       1       0       0       0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0
  7875 ;;      Totals:         0       1       0       0       0       0       0       0
  7876 ;;Total ram usage:        1 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; Hardware stack levels required when called: 7
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_SendMsg
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886  0000'                    _EUSART_Write:	
  7887                           ;psect for function _EUSART_Write
  7888                           
  7889  0000'                    l4899:	
  7890                           ;incstack = 0
  7891                           ; Regs used in _EUSART_Write: [wreg]
  7892                           
  7893                           
  7894                           ;mcc_generated_files/uart/src/eusart.c: 235: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 236: {;mcc_generated_files/uart/src/eusart.c: 237:     TX1
      +                          REG = txData;
  7895  0000' 0020               	movlb	0	; select bank0
  7896  0001' 0800'              	movf	EUSART_Write@txData,w
  7897  0002' 0023               	movlb	3	; select bank3
  7898  0003' 009A               	movwf	26	;volatile
  7899  0004'                    l613:
  7900  0004' 0008               	return
  7901  0005'                    __end_of_EUSART_Write:
  7902                           
  7903                           	psect	text22
  7904  0000'                    __ptext22:	
  7905 ;; *************** function _SSPA_setMute *****************
  7906 ;; Defined at:
  7907 ;;		line 254 in file "main.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  sspa            1    wreg     PTR struct .
  7910 ;;		 -> sppas(24), 
  7911 ;;  band            1    0[BANK0 ] unsigned char 
  7912 ;;  mute            1    1[BANK0 ] enum E9987
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  sspa            1    2[BANK0 ] PTR struct .
  7915 ;;		 -> sppas(24), 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7925 ;;      Params:         0       2       0       0       0       0       0       0
  7926 ;;      Locals:         0       1       0       0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0
  7928 ;;      Totals:         0       3       0       0       0       0       0       0
  7929 ;;Total ram usage:        3 bytes
  7930 ;; Hardware stack levels used: 1
  7931 ;; Hardware stack levels required when called: 7
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_ProcessMsg
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939  0000'                    _SSPA_setMute:	
  7940                           ;psect for function _SSPA_setMute
  7941                           
  7942                           
  7943                           ;incstack = 0
  7944                           ; Regs used in _SSPA_setMute: [wreg-fsr1h+status,2+status,0]
  7945                           ;SSPA_setMute@sspa stored from wreg
  7946  0000' 0020               	movlb	0	; select bank0
  7947  0001' 0082'              	movwf	SSPA_setMute@sspa
  7948  0002'                    l5097:
  7949                           
  7950                           ;main.c: 256:     switch (band) {
  7951  0002' 2800'              	goto	l5105
  7952  0003'                    l5099:
  7953                           
  7954                           ;main.c: 258:             if (mute == UNMUTE)
  7955  0003' 0801'              	movf	SSPA_setMute@mute,w
  7956  0004' 1D03               	btfss	3,2
  7957  0005' 2800'              	goto	u5341
  7958  0006' 2800'              	goto	u5340
  7959  0007'                    u5341:
  7960  0007' 2800'              	goto	l682
  7961  0008'                    u5340:
  7962  0008'                    l679:	
  7963                           ;main.c: 259:                 do { LATCbits.LATC7 = 1; } while(0);
  7964                           
  7965  0008' 0022               	movlb	2	; select bank2
  7966  0009' 178E               	bsf	14,7	;volatile
  7967  000A' 2800'              	goto	l5107
  7968  000B'                    l682:	
  7969                           ;main.c: 261:                 do { LATCbits.LATC7 = 0; } while(0);
  7970                           
  7971  000B' 0022               	movlb	2	; select bank2
  7972  000C' 138E               	bcf	14,7	;volatile
  7973  000D' 2800'              	goto	l5107
  7974  000E'                    l5101:
  7975                           
  7976                           ;main.c: 265:             if (mute == UNMUTE)
  7977  000E' 0801'              	movf	SSPA_setMute@mute,w
  7978  000F' 1D03               	btfss	3,2
  7979  0010' 2800'              	goto	u5351
  7980  0011' 2800'              	goto	u5350
  7981  0012'                    u5351:
  7982  0012' 2800'              	goto	l690
  7983  0013'                    u5350:
  7984  0013'                    l687:	
  7985                           ;main.c: 266:                 do { LATCbits.LATC6 = 1; } while(0);
  7986                           
  7987  0013' 0022               	movlb	2	; select bank2
  7988  0014' 170E               	bsf	14,6	;volatile
  7989  0015' 2800'              	goto	l5107
  7990  0016'                    l690:	
  7991                           ;main.c: 268:                 do { LATCbits.LATC6 = 0; } while(0);
  7992                           
  7993  0016' 0022               	movlb	2	; select bank2
  7994  0017' 130E               	bcf	14,6	;volatile
  7995  0018' 2800'              	goto	l5107
  7996  0019'                    l5105:
  7997  0019' 0800'              	movf	SSPA_setMute@band,w
  7998                           
  7999                           ; Switch size 1, requested type "simple"
  8000                           ; Number of cases is 3, Range of values is 0 to 2
  8001                           ; switch strategies available:
  8002                           ; Name         Instructions Cycles
  8003                           ; simple_byte           10     6 (average)
  8004                           ; direct_byte           12     6 (fixed)
  8005                           ; jumptable            260     6 (fixed)
  8006                           ;	Chosen strategy is simple_byte
  8007  001A' 3A00               	xorlw	0	; case 0
  8008  001B' 1903               	skipnz
  8009  001C' 2800'              	goto	l5107
  8010  001D' 3A01               	xorlw	1	; case 1
  8011  001E' 1903               	skipnz
  8012  001F' 2800'              	goto	l5099
  8013  0020' 3A03               	xorlw	3	; case 2
  8014  0021' 1903               	skipnz
  8015  0022' 2800'              	goto	l5101
  8016  0023' 2800'              	goto	l5107
  8017  0024'                    l5107:
  8018                           
  8019                           ;main.c: 276:     sspa->m_Mute = mute;
  8020  0024' 0020               	movlb	0	; select bank0
  8021  0025' 0802'              	movf	SSPA_setMute@sspa,w
  8022  0026' 0086               	movwf	6
  8023  0027' 3001               	movlw	1	; select bank2/3
  8024  0028' 0087               	movwf	7
  8025  0029' 0801'              	movf	SSPA_setMute@mute,w
  8026  002A' 0081               	movwf	1
  8027  002B'                    l694:
  8028  002B' 0008               	return
  8029  002C'                    __end_of_SSPA_setMute:
  8030                           
  8031                           	psect	text23
  8032  0000'                    __ptext23:	
  8033 ;; *************** function _SSPA_getTemp *****************
  8034 ;; Defined at:
  8035 ;;		line 284 in file "main.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  sspa            1    wreg     PTR struct .
  8038 ;;		 -> sppas(24), 
  8039 ;;  band            1    4[BANK1 ] unsigned char 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  sspa            1    9[BANK1 ] PTR struct .
  8042 ;;		 -> sppas(24), 
  8043 ;;  adc_value       2    7[BANK1 ] unsigned short 
  8044 ;;  channel         1   10[BANK1 ] enum E9222
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8054 ;;      Params:         0       0       1       0       0       0       0       0
  8055 ;;      Locals:         0       0       4       0       0       0       0       0
  8056 ;;      Temps:          0       0       2       0       0       0       0       0
  8057 ;;      Totals:         0       0       7       0       0       0       0       0
  8058 ;;Total ram usage:        7 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 14
  8061 ;; This function calls:
  8062 ;;		___assert_fail
  8063 ;;		___fldiv
  8064 ;;		___flmul
  8065 ;;		___flsub
  8066 ;;		___fltol
  8067 ;;		___xxtofl
  8068 ;;		_getADCValue
  8069 ;; This function is called by:
  8070 ;;		_ProcessMsg
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074  0000'                    _SSPA_getTemp:	
  8075                           ;psect for function _SSPA_getTemp
  8076                           
  8077                           
  8078                           ;incstack = 0
  8079 ;; hardware stack exceeded
  8080                           ; Regs used in _SSPA_getTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8081                           ;SSPA_getTemp@sspa stored from wreg
  8082  0000' 0021               	movlb	1	; select bank1
  8083  0001' 0080'              	movwf	SSPA_getTemp@sspa^(0+128)
  8084  0002'                    l5109:
  8085                           
  8086                           ;main.c: 285:     adc_channel_t channel;;main.c: 286:     adc_result_t adc_value;;main.c
      +                          : 288:     switch (band) {
  8087  0002' 2800'              	goto	l5117
  8088  0003'                    l5111:
  8089                           
  8090                           ;main.c: 290:             channel = TM_Ka;
  8091  0003' 3003               	movlw	3
  8092  0004' 0080'              	movwf	SSPA_getTemp@channel^(0+128)
  8093                           
  8094                           ;main.c: 292:             break;
  8095  0005' 2800'              	goto	l5119
  8096  0006'                    l5113:
  8097                           
  8098                           ;main.c: 294:             channel = TM_X;
  8099  0006' 3007               	movlw	7
  8100  0007' 0080'              	movwf	SSPA_getTemp@channel^(0+128)
  8101                           
  8102                           ;main.c: 295:             break;
  8103  0008' 2800'              	goto	l5119
  8104  0009'                    l5117:
  8105  0009' 0800'              	movf	SSPA_getTemp@band^(0+128),w
  8106                           
  8107                           ; Switch size 1, requested type "simple"
  8108                           ; Number of cases is 3, Range of values is 0 to 2
  8109                           ; switch strategies available:
  8110                           ; Name         Instructions Cycles
  8111                           ; simple_byte           10     6 (average)
  8112                           ; direct_byte           12     6 (fixed)
  8113                           ; jumptable            260     6 (fixed)
  8114                           ;	Chosen strategy is simple_byte
  8115  000A' 3A00               	xorlw	0	; case 0
  8116  000B' 1903               	skipnz
  8117  000C' 2800'              	goto	l5119
  8118  000D' 3A01               	xorlw	1	; case 1
  8119  000E' 1903               	skipnz
  8120  000F' 2800'              	goto	l5111
  8121  0010' 3A03               	xorlw	3	; case 2
  8122  0011' 1903               	skipnz
  8123  0012' 2800'              	goto	l5113
  8124  0013' 2800'              	goto	l5119
  8125  0014'                    l5119:
  8126                           
  8127                           ;main.c: 302:     ((void)((channel == TM_Ka || channel == TM_X) || (__assert_fail("chann
      +                          el == TM_Ka || channel == TM_X", "main.c", 302, __func__),0)));
  8128  0014' 3003               	movlw	3
  8129  0015' 0600'              	xorwf	SSPA_getTemp@channel^(0+128),w
  8130  0016' 1903               	btfsc	3,2
  8131  0017' 2800'              	goto	u5361
  8132  0018' 2800'              	goto	u5360
  8133  0019'                    u5361:
  8134  0019' 2800'              	goto	l5125
  8135  001A'                    u5360:
  8136  001A'                    l5121:
  8137  001A' 3007               	movlw	7
  8138  001B' 0600'              	xorwf	SSPA_getTemp@channel^(0+128),w
  8139  001C' 1903               	btfsc	3,2
  8140  001D' 2800'              	goto	u5371
  8141  001E' 2800'              	goto	u5370
  8142  001F'                    u5371:
  8143  001F' 2800'              	goto	l5125
  8144  0020'                    u5370:
  8145  0020'                    l5123:
  8146  0020' 3000'              	movlw	low (STR_7| (0+32768))
  8147  0021' 0020               	movlb	0	; select bank0
  8148  0022' 00B0'              	movwf	___assert_fail@expr
  8149  0023' 3000'              	movlw	high (STR_7| (0+32768))
  8150  0024' 00B1'              	movwf	___assert_fail@expr+1
  8151  0025' 3000'              	movlw	low (STR_2| (0+32768))
  8152  0026' 00B2'              	movwf	___assert_fail@file
  8153  0027' 3000'              	movlw	high (STR_2| (0+32768))
  8154  0028' 00B3'              	movwf	___assert_fail@file+1
  8155  0029' 302E               	movlw	46
  8156  002A' 00B4'              	movwf	___assert_fail@line
  8157  002B' 3001               	movlw	1
  8158  002C' 00B5'              	movwf	___assert_fail@line+1
  8159  002D' 3000'              	movlw	low (STR_9| (0+32768))
  8160  002E' 00B6'              	movwf	___assert_fail@func
  8161  002F' 3000'              	movlw	high (STR_9| (0+32768))
  8162  0030' 00B7'              	movwf	___assert_fail@func+1
  8163  0031' 3180' 2000' 3180'  	fcall	___assert_fail
  8164  0034'                    l5125:
  8165                           
  8166                           ;main.c: 303:     adc_value = getADCValue(channel);
  8167  0034' 0021               	movlb	1	; select bank1
  8168  0035' 0800'              	movf	SSPA_getTemp@channel^(0+128),w
  8169  0036' 3180' 2000' 3180'  	fcall	_getADCValue
  8170  0039' 0020               	movlb	0	; select bank0
  8171  003A' 0839'              	movf	?_getADCValue+1,w
  8172  003B' 0021               	movlb	1	; select bank1
  8173  003C' 0080'              	movwf	(SSPA_getTemp@adc_value+1)^(0+128)
  8174  003D' 0020               	movlb	0	; select bank0
  8175  003E' 0838'              	movf	?_getADCValue,w
  8176  003F' 0021               	movlb	1	; select bank1
  8177  0040' 0080'              	movwf	SSPA_getTemp@adc_value^(0+128)
  8178  0041'                    l5127:
  8179                           
  8180                           ;main.c: 305:     sspa->m_wTemp = (uint16_t)(int16_t) ((0 - 4.3 * (1024 - (adc_value))) 
      +                          / 1);
  8181  0041' 3000               	movlw	0
  8182  0042' 0020               	movlb	0	; select bank0
  8183  0043' 00AF'              	movwf	___flsub@b+3
  8184  0044' 3000               	movlw	0
  8185  0045' 00AE'              	movwf	___flsub@b+2
  8186  0046' 3000               	movlw	0
  8187  0047' 00AD'              	movwf	___flsub@b+1
  8188  0048' 3000               	movlw	0
  8189  0049' 00AC'              	movwf	___flsub@b
  8190  004A' 3000               	movlw	0
  8191  004B' 0021               	movlb	1	; select bank1
  8192  004C' 0080'              	movwf	??_SSPA_getTemp^(0+128)
  8193  004D' 3004               	movlw	4
  8194  004E' 0081'              	movwf	(??_SSPA_getTemp^(0+128)+1)
  8195  004F' 0800'              	movf	SSPA_getTemp@adc_value^(0+128),w
  8196  0050' 0200'              	subwf	??_SSPA_getTemp^(0+128),w
  8197  0051' 0020               	movlb	0	; select bank0
  8198  0052' 0080'              	movwf	___xxtofl@val
  8199  0053' 0021               	movlb	1	; select bank1
  8200  0054' 0800'              	movf	(SSPA_getTemp@adc_value+1)^(0+128),w
  8201  0055' 3B00'              	subwfb	(??_SSPA_getTemp+1)^(0+128),w
  8202  0056' 0020               	movlb	0	; select bank0
  8203  0057' 0081'              	movwf	___xxtofl@val+1
  8204  0058' 0182'              	clrf	___xxtofl@val+2
  8205  0059' 0183'              	clrf	___xxtofl@val+3
  8206  005A' 3000               	movlw	0
  8207  005B' 3180' 2000' 3180'  	fcall	___xxtofl
  8208  005E' 0020               	movlb	0	; select bank0
  8209  005F' 0803'              	movf	?___xxtofl+3,w
  8210  0060' 0095'              	movwf	___flmul@a+3
  8211  0061' 0802'              	movf	?___xxtofl+2,w
  8212  0062' 0094'              	movwf	___flmul@a+2
  8213  0063' 0801'              	movf	?___xxtofl+1,w
  8214  0064' 0093'              	movwf	___flmul@a+1
  8215  0065' 0800'              	movf	?___xxtofl,w
  8216  0066' 0092'              	movwf	___flmul@a
  8217  0067' 3040               	movlw	64
  8218  0068' 0091'              	movwf	___flmul@b+3
  8219  0069' 3089               	movlw	137
  8220  006A' 0090'              	movwf	___flmul@b+2
  8221  006B' 3099               	movlw	153
  8222  006C' 008F'              	movwf	___flmul@b+1
  8223  006D' 309A               	movlw	154
  8224  006E' 008E'              	movwf	___flmul@b
  8225  006F' 3180' 2000' 3180'  	fcall	___flmul
  8226  0072' 0020               	movlb	0	; select bank0
  8227  0073' 0811'              	movf	?___flmul+3,w
  8228  0074' 00AB'              	movwf	___flsub@a+3
  8229  0075' 0810'              	movf	?___flmul+2,w
  8230  0076' 00AA'              	movwf	___flsub@a+2
  8231  0077' 080F'              	movf	?___flmul+1,w
  8232  0078' 00A9'              	movwf	___flsub@a+1
  8233  0079' 080E'              	movf	?___flmul,w
  8234  007A' 00A8'              	movwf	___flsub@a
  8235  007B' 3180' 2000' 3180'  	fcall	___flsub
  8236  007E' 0020               	movlb	0	; select bank0
  8237  007F' 082B'              	movf	?___flsub+3,w
  8238  0080' 00B7'              	movwf	___fldiv@b+3
  8239  0081' 082A'              	movf	?___flsub+2,w
  8240  0082' 00B6'              	movwf	___fldiv@b+2
  8241  0083' 0829'              	movf	?___flsub+1,w
  8242  0084' 00B5'              	movwf	___fldiv@b+1
  8243  0085' 0828'              	movf	?___flsub,w
  8244  0086' 00B4'              	movwf	___fldiv@b
  8245  0087' 303F               	movlw	63
  8246  0088' 00B3'              	movwf	___fldiv@a+3
  8247  0089' 3080               	movlw	128
  8248  008A' 00B2'              	movwf	___fldiv@a+2
  8249  008B' 3000               	movlw	0
  8250  008C' 00B1'              	movwf	___fldiv@a+1
  8251  008D' 3000               	movlw	0
  8252  008E' 00B0'              	movwf	___fldiv@a
  8253  008F' 3180' 2000' 3180'  	fcall	___fldiv
  8254  0092' 0020               	movlb	0	; select bank0
  8255  0093' 0833'              	movf	?___fldiv+3,w
  8256  0094' 00CD'              	movwf	___fltol@f1+3
  8257  0095' 0832'              	movf	?___fldiv+2,w
  8258  0096' 00CC'              	movwf	___fltol@f1+2
  8259  0097' 0831'              	movf	?___fldiv+1,w
  8260  0098' 00CB'              	movwf	___fltol@f1+1
  8261  0099' 0830'              	movf	?___fldiv,w
  8262  009A' 00CA'              	movwf	___fltol@f1
  8263  009B' 3180' 2000' 3180'  	fcall	___fltol
  8264  009E' 0021               	movlb	1	; select bank1
  8265  009F' 0A00'              	incf	SSPA_getTemp@sspa^(0+128),w
  8266  00A0' 0086               	movwf	6
  8267  00A1' 3001               	movlw	1	; select bank2/3
  8268  00A2' 0087               	movwf	7
  8269  00A3' 0020               	movlb	0	; select bank0
  8270  00A4' 084A'              	movf	?___fltol,w
  8271  00A5' 3FC0               	movwi [0]fsr1
  8272  00A6' 084B'              	movf	?___fltol+1,w
  8273  00A7' 3FC1               	movwi [1]fsr1
  8274  00A8'                    l705:
  8275  00A8' 0008               	return
  8276  00A9'                    __end_of_SSPA_getTemp:
  8277                           
  8278                           	psect	text24
  8279  0000'                    __ptext24:	
  8280 ;; *************** function _SSPA_getPOut *****************
  8281 ;; Defined at:
  8282 ;;		line 313 in file "main.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  sspa            1    wreg     PTR struct .
  8285 ;;		 -> sppas(24), 
  8286 ;;  band            1    4[BANK1 ] unsigned char 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  sspa            1    7[BANK1 ] PTR struct .
  8289 ;;		 -> sppas(24), 
  8290 ;;  adc_value       2    8[BANK1 ] unsigned short 
  8291 ;;  channel         1   10[BANK1 ] enum E9222
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8301 ;;      Params:         0       0       1       0       0       0       0       0
  8302 ;;      Locals:         0       0       4       0       0       0       0       0
  8303 ;;      Temps:          0       0       2       0       0       0       0       0
  8304 ;;      Totals:         0       0       7       0       0       0       0       0
  8305 ;;Total ram usage:        7 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; Hardware stack levels required when called: 14
  8308 ;; This function calls:
  8309 ;;		___assert_fail
  8310 ;;		___fldiv
  8311 ;;		___flmul
  8312 ;;		___flsub
  8313 ;;		___fltol
  8314 ;;		___xxtofl
  8315 ;;		_getADCValue
  8316 ;; This function is called by:
  8317 ;;		_ProcessMsg
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321  0000'                    _SSPA_getPOut:	
  8322                           ;psect for function _SSPA_getPOut
  8323                           
  8324  0000'                    l5129:	
  8325                           ;incstack = 0
  8326 ;; hardware stack exceeded
  8327                           ; Regs used in _SSPA_getPOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8328                           
  8329                           
  8330                           ;main.c: 314:     adc_channel_t channel;;main.c: 315:     adc_result_t adc_value;;main.c
      +                          : 317:     switch (band) {
  8331  0000' 2800'              	goto	l5149
  8332  0001'                    l709:	
  8333                           ;main.c: 318:         case 1:
  8334                           
  8335                           
  8336                           ;main.c: 319:             channel = CS_Ka;
  8337  0001' 0180'              	clrf	SSPA_getPOut@channel^(0+128)
  8338  0002' 0A80'              	incf	SSPA_getPOut@channel^(0+128),f
  8339  0003'                    l5131:
  8340                           
  8341                           ;main.c: 320:             adc_value = getADCValue(channel);
  8342  0003' 3001               	movlw	1
  8343  0004' 3180' 2000' 3180'  	fcall	_getADCValue
  8344  0007' 0020               	movlb	0	; select bank0
  8345  0008' 0839'              	movf	?_getADCValue+1,w
  8346  0009' 0021               	movlb	1	; select bank1
  8347  000A' 0080'              	movwf	(SSPA_getPOut@adc_value+1)^(0+128)
  8348  000B' 0020               	movlb	0	; select bank0
  8349  000C' 0838'              	movf	?_getADCValue,w
  8350  000D' 0021               	movlb	1	; select bank1
  8351  000E' 0080'              	movwf	SSPA_getPOut@adc_value^(0+128)
  8352                           
  8353                           ;main.c: 321:             sppas->m_lCurrent = (uint32_t)(int16_t) ((0 - 4.3 * (1024 - (a
      +                          dc_value))) / 1);
  8354  000F' 3000               	movlw	0
  8355  0010' 0020               	movlb	0	; select bank0
  8356  0011' 00AF'              	movwf	___flsub@b+3
  8357  0012' 3000               	movlw	0
  8358  0013' 00AE'              	movwf	___flsub@b+2
  8359  0014' 3000               	movlw	0
  8360  0015' 00AD'              	movwf	___flsub@b+1
  8361  0016' 3000               	movlw	0
  8362  0017' 00AC'              	movwf	___flsub@b
  8363  0018' 3000               	movlw	0
  8364  0019' 0021               	movlb	1	; select bank1
  8365  001A' 0080'              	movwf	??_SSPA_getPOut^(0+128)
  8366  001B' 3004               	movlw	4
  8367  001C' 0081'              	movwf	(??_SSPA_getPOut^(0+128)+1)
  8368  001D' 0800'              	movf	SSPA_getPOut@adc_value^(0+128),w
  8369  001E' 0200'              	subwf	??_SSPA_getPOut^(0+128),w
  8370  001F' 0020               	movlb	0	; select bank0
  8371  0020' 0080'              	movwf	___xxtofl@val
  8372  0021' 0021               	movlb	1	; select bank1
  8373  0022' 0800'              	movf	(SSPA_getPOut@adc_value+1)^(0+128),w
  8374  0023' 3B00'              	subwfb	(??_SSPA_getPOut+1)^(0+128),w
  8375  0024' 0020               	movlb	0	; select bank0
  8376  0025' 0081'              	movwf	___xxtofl@val+1
  8377  0026' 0182'              	clrf	___xxtofl@val+2
  8378  0027' 0183'              	clrf	___xxtofl@val+3
  8379  0028' 3000               	movlw	0
  8380  0029' 3180' 2000' 3180'  	fcall	___xxtofl
  8381  002C' 0020               	movlb	0	; select bank0
  8382  002D' 0803'              	movf	?___xxtofl+3,w
  8383  002E' 0095'              	movwf	___flmul@a+3
  8384  002F' 0802'              	movf	?___xxtofl+2,w
  8385  0030' 0094'              	movwf	___flmul@a+2
  8386  0031' 0801'              	movf	?___xxtofl+1,w
  8387  0032' 0093'              	movwf	___flmul@a+1
  8388  0033' 0800'              	movf	?___xxtofl,w
  8389  0034' 0092'              	movwf	___flmul@a
  8390  0035' 3040               	movlw	64
  8391  0036' 0091'              	movwf	___flmul@b+3
  8392  0037' 3089               	movlw	137
  8393  0038' 0090'              	movwf	___flmul@b+2
  8394  0039' 3099               	movlw	153
  8395  003A' 008F'              	movwf	___flmul@b+1
  8396  003B' 309A               	movlw	154
  8397  003C' 008E'              	movwf	___flmul@b
  8398  003D' 3180' 2000' 3180'  	fcall	___flmul
  8399  0040' 0020               	movlb	0	; select bank0
  8400  0041' 0811'              	movf	?___flmul+3,w
  8401  0042' 00AB'              	movwf	___flsub@a+3
  8402  0043' 0810'              	movf	?___flmul+2,w
  8403  0044' 00AA'              	movwf	___flsub@a+2
  8404  0045' 080F'              	movf	?___flmul+1,w
  8405  0046' 00A9'              	movwf	___flsub@a+1
  8406  0047' 080E'              	movf	?___flmul,w
  8407  0048' 00A8'              	movwf	___flsub@a
  8408  0049' 3180' 2000' 3180'  	fcall	___flsub
  8409  004C' 0020               	movlb	0	; select bank0
  8410  004D' 082B'              	movf	?___flsub+3,w
  8411  004E' 00B7'              	movwf	___fldiv@b+3
  8412  004F' 082A'              	movf	?___flsub+2,w
  8413  0050' 00B6'              	movwf	___fldiv@b+2
  8414  0051' 0829'              	movf	?___flsub+1,w
  8415  0052' 00B5'              	movwf	___fldiv@b+1
  8416  0053' 0828'              	movf	?___flsub,w
  8417  0054' 00B4'              	movwf	___fldiv@b
  8418  0055' 303F               	movlw	63
  8419  0056' 00B3'              	movwf	___fldiv@a+3
  8420  0057' 3080               	movlw	128
  8421  0058' 00B2'              	movwf	___fldiv@a+2
  8422  0059' 3000               	movlw	0
  8423  005A' 00B1'              	movwf	___fldiv@a+1
  8424  005B' 3000               	movlw	0
  8425  005C' 00B0'              	movwf	___fldiv@a
  8426  005D' 3180' 2000' 3180'  	fcall	___fldiv
  8427  0060' 0020               	movlb	0	; select bank0
  8428  0061' 0833'              	movf	?___fldiv+3,w
  8429  0062' 00CD'              	movwf	___fltol@f1+3
  8430  0063' 0832'              	movf	?___fldiv+2,w
  8431  0064' 00CC'              	movwf	___fltol@f1+2
  8432  0065' 0831'              	movf	?___fldiv+1,w
  8433  0066' 00CB'              	movwf	___fltol@f1+1
  8434  0067' 0830'              	movf	?___fldiv,w
  8435  0068' 00CA'              	movwf	___fltol@f1
  8436  0069' 3180' 2000' 3180'  	fcall	___fltol
  8437  006C' 0020               	movlb	0	; select bank0
  8438  006D' 084A'              	movf	?___fltol,w
  8439  006E' 0022               	movlb	2	; select bank2
  8440  006F' 0084'              	movwf	(_sppas^(0+256)+4)
  8441  0070' 0020               	movlb	0	; select bank0
  8442  0071' 084B'              	movf	?___fltol+1,w
  8443  0072' 0022               	movlb	2	; select bank2
  8444  0073' 0084'              	movwf	((_sppas+1)^(0+256)+4)
  8445  0074' 0D89               	rlf	9,f
  8446  0075' 3B89               	subwfb	9,f
  8447  0076' 0989               	comf	9,f
  8448  0077' 0084'              	movwf	((_sppas+2)^(0+256)+4)
  8449  0078' 0084'              	movwf	((_sppas+3)^(0+256)+4)
  8450  0079'                    l5133:
  8451                           
  8452                           ;main.c: 322:             sppas->m_bPOut = 0xFF;
  8453  0079' 30FF               	movlw	255
  8454  007A' 0083'              	movwf	(_sppas^(0+256)+3)
  8455                           
  8456                           ;main.c: 323:             break;
  8457  007B' 2800'              	goto	l5151
  8458  007C'                    l5135:
  8459  007C'                    l5137:
  8460                           
  8461                           ;main.c: 327:             adc_value = getADCValue(channel);
  8462  007C' 300A               	movlw	10
  8463  007D' 3180' 2000' 3180'  	fcall	_getADCValue
  8464  0080' 0020               	movlb	0	; select bank0
  8465  0081' 0839'              	movf	?_getADCValue+1,w
  8466  0082' 0021               	movlb	1	; select bank1
  8467  0083' 0080'              	movwf	(SSPA_getPOut@adc_value+1)^(0+128)
  8468  0084' 0020               	movlb	0	; select bank0
  8469  0085' 0838'              	movf	?_getADCValue,w
  8470  0086' 0021               	movlb	1	; select bank1
  8471  0087' 0080'              	movwf	SSPA_getPOut@adc_value^(0+128)
  8472  0088'                    l5139:
  8473                           
  8474                           ;main.c: 328:             sppas->m_lCurrent = (uint32_t)(int16_t) ((0 - 4.3 * (1024 - (a
      +                          dc_value))) / 1);
  8475  0088' 3000               	movlw	0
  8476  0089' 0020               	movlb	0	; select bank0
  8477  008A' 00AF'              	movwf	___flsub@b+3
  8478  008B' 3000               	movlw	0
  8479  008C' 00AE'              	movwf	___flsub@b+2
  8480  008D' 3000               	movlw	0
  8481  008E' 00AD'              	movwf	___flsub@b+1
  8482  008F' 3000               	movlw	0
  8483  0090' 00AC'              	movwf	___flsub@b
  8484  0091' 3000               	movlw	0
  8485  0092' 0021               	movlb	1	; select bank1
  8486  0093' 0080'              	movwf	??_SSPA_getPOut^(0+128)
  8487  0094' 3004               	movlw	4
  8488  0095' 0081'              	movwf	(??_SSPA_getPOut^(0+128)+1)
  8489  0096' 0800'              	movf	SSPA_getPOut@adc_value^(0+128),w
  8490  0097' 0200'              	subwf	??_SSPA_getPOut^(0+128),w
  8491  0098' 0020               	movlb	0	; select bank0
  8492  0099' 0080'              	movwf	___xxtofl@val
  8493  009A' 0021               	movlb	1	; select bank1
  8494  009B' 0800'              	movf	(SSPA_getPOut@adc_value+1)^(0+128),w
  8495  009C' 3B00'              	subwfb	(??_SSPA_getPOut+1)^(0+128),w
  8496  009D' 0020               	movlb	0	; select bank0
  8497  009E' 0081'              	movwf	___xxtofl@val+1
  8498  009F' 0182'              	clrf	___xxtofl@val+2
  8499  00A0' 0183'              	clrf	___xxtofl@val+3
  8500  00A1' 3000               	movlw	0
  8501  00A2' 3180' 2000' 3180'  	fcall	___xxtofl
  8502  00A5' 0020               	movlb	0	; select bank0
  8503  00A6' 0803'              	movf	?___xxtofl+3,w
  8504  00A7' 0095'              	movwf	___flmul@a+3
  8505  00A8' 0802'              	movf	?___xxtofl+2,w
  8506  00A9' 0094'              	movwf	___flmul@a+2
  8507  00AA' 0801'              	movf	?___xxtofl+1,w
  8508  00AB' 0093'              	movwf	___flmul@a+1
  8509  00AC' 0800'              	movf	?___xxtofl,w
  8510  00AD' 0092'              	movwf	___flmul@a
  8511  00AE' 3040               	movlw	64
  8512  00AF' 0091'              	movwf	___flmul@b+3
  8513  00B0' 3089               	movlw	137
  8514  00B1' 0090'              	movwf	___flmul@b+2
  8515  00B2' 3099               	movlw	153
  8516  00B3' 008F'              	movwf	___flmul@b+1
  8517  00B4' 309A               	movlw	154
  8518  00B5' 008E'              	movwf	___flmul@b
  8519  00B6' 3180' 2000' 3180'  	fcall	___flmul
  8520  00B9' 0020               	movlb	0	; select bank0
  8521  00BA' 0811'              	movf	?___flmul+3,w
  8522  00BB' 00AB'              	movwf	___flsub@a+3
  8523  00BC' 0810'              	movf	?___flmul+2,w
  8524  00BD' 00AA'              	movwf	___flsub@a+2
  8525  00BE' 080F'              	movf	?___flmul+1,w
  8526  00BF' 00A9'              	movwf	___flsub@a+1
  8527  00C0' 080E'              	movf	?___flmul,w
  8528  00C1' 00A8'              	movwf	___flsub@a
  8529  00C2' 3180' 2000' 3180'  	fcall	___flsub
  8530  00C5' 0020               	movlb	0	; select bank0
  8531  00C6' 082B'              	movf	?___flsub+3,w
  8532  00C7' 00B7'              	movwf	___fldiv@b+3
  8533  00C8' 082A'              	movf	?___flsub+2,w
  8534  00C9' 00B6'              	movwf	___fldiv@b+2
  8535  00CA' 0829'              	movf	?___flsub+1,w
  8536  00CB' 00B5'              	movwf	___fldiv@b+1
  8537  00CC' 0828'              	movf	?___flsub,w
  8538  00CD' 00B4'              	movwf	___fldiv@b
  8539  00CE' 303F               	movlw	63
  8540  00CF' 00B3'              	movwf	___fldiv@a+3
  8541  00D0' 3080               	movlw	128
  8542  00D1' 00B2'              	movwf	___fldiv@a+2
  8543  00D2' 3000               	movlw	0
  8544  00D3' 00B1'              	movwf	___fldiv@a+1
  8545  00D4' 3000               	movlw	0
  8546  00D5' 00B0'              	movwf	___fldiv@a
  8547  00D6' 3180' 2000' 3180'  	fcall	___fldiv
  8548  00D9' 0020               	movlb	0	; select bank0
  8549  00DA' 0833'              	movf	?___fldiv+3,w
  8550  00DB' 00CD'              	movwf	___fltol@f1+3
  8551  00DC' 0832'              	movf	?___fldiv+2,w
  8552  00DD' 00CC'              	movwf	___fltol@f1+2
  8553  00DE' 0831'              	movf	?___fldiv+1,w
  8554  00DF' 00CB'              	movwf	___fltol@f1+1
  8555  00E0' 0830'              	movf	?___fldiv,w
  8556  00E1' 00CA'              	movwf	___fltol@f1
  8557  00E2' 3180' 2000' 3180'  	fcall	___fltol
  8558  00E5' 0020               	movlb	0	; select bank0
  8559  00E6' 084A'              	movf	?___fltol,w
  8560  00E7' 0022               	movlb	2	; select bank2
  8561  00E8' 0084'              	movwf	(_sppas^(0+256)+4)
  8562  00E9' 0020               	movlb	0	; select bank0
  8563  00EA' 084B'              	movf	?___fltol+1,w
  8564  00EB' 0022               	movlb	2	; select bank2
  8565  00EC' 0084'              	movwf	((_sppas+1)^(0+256)+4)
  8566  00ED' 0D89               	rlf	9,f
  8567  00EE' 3B89               	subwfb	9,f
  8568  00EF' 0989               	comf	9,f
  8569  00F0' 0084'              	movwf	((_sppas+2)^(0+256)+4)
  8570  00F1' 0084'              	movwf	((_sppas+3)^(0+256)+4)
  8571  00F2'                    l5141:
  8572                           
  8573                           ;main.c: 329:             channel = PD_X;
  8574  00F2' 0021               	movlb	1	; select bank1
  8575  00F3' 0180'              	clrf	SSPA_getPOut@channel^(0+128)
  8576  00F4'                    l5143:
  8577                           
  8578                           ;main.c: 330:             adc_value = getADCValue(channel);
  8579  00F4' 3000               	movlw	0
  8580  00F5' 3180' 2000' 3180'  	fcall	_getADCValue
  8581  00F8' 0020               	movlb	0	; select bank0
  8582  00F9' 0839'              	movf	?_getADCValue+1,w
  8583  00FA' 0021               	movlb	1	; select bank1
  8584  00FB' 0080'              	movwf	(SSPA_getPOut@adc_value+1)^(0+128)
  8585  00FC' 0020               	movlb	0	; select bank0
  8586  00FD' 0838'              	movf	?_getADCValue,w
  8587  00FE' 0021               	movlb	1	; select bank1
  8588  00FF' 0080'              	movwf	SSPA_getPOut@adc_value^(0+128)
  8589  0100'                    l5145:
  8590                           
  8591                           ;main.c: 331:             sppas->m_bPOut = (uint8_t)(int16_t) ((0 - 4.3 * (1024 - (adc_v
      +                          alue))) / 1);
  8592  0100' 3000               	movlw	0
  8593  0101' 0020               	movlb	0	; select bank0
  8594  0102' 00AF'              	movwf	___flsub@b+3
  8595  0103' 3000               	movlw	0
  8596  0104' 00AE'              	movwf	___flsub@b+2
  8597  0105' 3000               	movlw	0
  8598  0106' 00AD'              	movwf	___flsub@b+1
  8599  0107' 3000               	movlw	0
  8600  0108' 00AC'              	movwf	___flsub@b
  8601  0109' 3000               	movlw	0
  8602  010A' 0021               	movlb	1	; select bank1
  8603  010B' 0080'              	movwf	??_SSPA_getPOut^(0+128)
  8604  010C' 3004               	movlw	4
  8605  010D' 0081'              	movwf	(??_SSPA_getPOut^(0+128)+1)
  8606  010E' 0800'              	movf	SSPA_getPOut@adc_value^(0+128),w
  8607  010F' 0200'              	subwf	??_SSPA_getPOut^(0+128),w
  8608  0110' 0020               	movlb	0	; select bank0
  8609  0111' 0080'              	movwf	___xxtofl@val
  8610  0112' 0021               	movlb	1	; select bank1
  8611  0113' 0800'              	movf	(SSPA_getPOut@adc_value+1)^(0+128),w
  8612  0114' 3B00'              	subwfb	(??_SSPA_getPOut+1)^(0+128),w
  8613  0115' 0020               	movlb	0	; select bank0
  8614  0116' 0081'              	movwf	___xxtofl@val+1
  8615  0117' 0182'              	clrf	___xxtofl@val+2
  8616  0118' 0183'              	clrf	___xxtofl@val+3
  8617  0119' 3000               	movlw	0
  8618  011A' 3180' 2000' 3180'  	fcall	___xxtofl
  8619  011D' 0020               	movlb	0	; select bank0
  8620  011E' 0803'              	movf	?___xxtofl+3,w
  8621  011F' 0095'              	movwf	___flmul@a+3
  8622  0120' 0802'              	movf	?___xxtofl+2,w
  8623  0121' 0094'              	movwf	___flmul@a+2
  8624  0122' 0801'              	movf	?___xxtofl+1,w
  8625  0123' 0093'              	movwf	___flmul@a+1
  8626  0124' 0800'              	movf	?___xxtofl,w
  8627  0125' 0092'              	movwf	___flmul@a
  8628  0126' 3040               	movlw	64
  8629  0127' 0091'              	movwf	___flmul@b+3
  8630  0128' 3089               	movlw	137
  8631  0129' 0090'              	movwf	___flmul@b+2
  8632  012A' 3099               	movlw	153
  8633  012B' 008F'              	movwf	___flmul@b+1
  8634  012C' 309A               	movlw	154
  8635  012D' 008E'              	movwf	___flmul@b
  8636  012E' 3180' 2000' 3180'  	fcall	___flmul
  8637  0131' 0020               	movlb	0	; select bank0
  8638  0132' 0811'              	movf	?___flmul+3,w
  8639  0133' 00AB'              	movwf	___flsub@a+3
  8640  0134' 0810'              	movf	?___flmul+2,w
  8641  0135' 00AA'              	movwf	___flsub@a+2
  8642  0136' 080F'              	movf	?___flmul+1,w
  8643  0137' 00A9'              	movwf	___flsub@a+1
  8644  0138' 080E'              	movf	?___flmul,w
  8645  0139' 00A8'              	movwf	___flsub@a
  8646  013A' 3180' 2000' 3180'  	fcall	___flsub
  8647  013D' 0020               	movlb	0	; select bank0
  8648  013E' 082B'              	movf	?___flsub+3,w
  8649  013F' 00B7'              	movwf	___fldiv@b+3
  8650  0140' 082A'              	movf	?___flsub+2,w
  8651  0141' 00B6'              	movwf	___fldiv@b+2
  8652  0142' 0829'              	movf	?___flsub+1,w
  8653  0143' 00B5'              	movwf	___fldiv@b+1
  8654  0144' 0828'              	movf	?___flsub,w
  8655  0145' 00B4'              	movwf	___fldiv@b
  8656  0146' 303F               	movlw	63
  8657  0147' 00B3'              	movwf	___fldiv@a+3
  8658  0148' 3080               	movlw	128
  8659  0149' 00B2'              	movwf	___fldiv@a+2
  8660  014A' 3000               	movlw	0
  8661  014B' 00B1'              	movwf	___fldiv@a+1
  8662  014C' 3000               	movlw	0
  8663  014D' 00B0'              	movwf	___fldiv@a
  8664  014E' 3180' 2000' 3180'  	fcall	___fldiv
  8665  0151' 0020               	movlb	0	; select bank0
  8666  0152' 0833'              	movf	?___fldiv+3,w
  8667  0153' 00CD'              	movwf	___fltol@f1+3
  8668  0154' 0832'              	movf	?___fldiv+2,w
  8669  0155' 00CC'              	movwf	___fltol@f1+2
  8670  0156' 0831'              	movf	?___fldiv+1,w
  8671  0157' 00CB'              	movwf	___fltol@f1+1
  8672  0158' 0830'              	movf	?___fldiv,w
  8673  0159' 00CA'              	movwf	___fltol@f1
  8674  015A' 3180' 2000' 3180'  	fcall	___fltol
  8675  015D' 0020               	movlb	0	; select bank0
  8676  015E' 084A'              	movf	?___fltol,w
  8677  015F' 0022               	movlb	2	; select bank2
  8678  0160' 0083'              	movwf	(_sppas^(0+256)+3)
  8679                           
  8680                           ;main.c: 332:             break;
  8681  0161' 2800'              	goto	l5151
  8682  0162'                    l5149:
  8683  0162' 0021               	movlb	1	; select bank1
  8684  0163' 0800'              	movf	SSPA_getPOut@band^(0+128),w
  8685                           
  8686                           ; Switch size 1, requested type "simple"
  8687                           ; Number of cases is 3, Range of values is 0 to 2
  8688                           ; switch strategies available:
  8689                           ; Name         Instructions Cycles
  8690                           ; simple_byte           10     6 (average)
  8691                           ; direct_byte           12     6 (fixed)
  8692                           ; jumptable            260     6 (fixed)
  8693                           ;	Chosen strategy is simple_byte
  8694  0164' 3A00               	xorlw	0	; case 0
  8695  0165' 1903               	skipnz
  8696  0166' 2800'              	goto	l5151
  8697  0167' 3A01               	xorlw	1	; case 1
  8698  0168' 1903               	skipnz
  8699  0169' 2800'              	goto	l709
  8700  016A' 3A03               	xorlw	3	; case 2
  8701  016B' 1903               	skipnz
  8702  016C' 2800'              	goto	l5135
  8703  016D' 2800'              	goto	l5151
  8704  016E'                    l5151:
  8705                           
  8706                           ;main.c: 339:     ((void)((channel == PD_X || channel == CS_Ka || channel == CS_X) || (_
      +                          _assert_fail("channel == PD_X || channel == CS_Ka || channel == CS_X", "main.c", 339, __
      +                          func__),0)));
  8707  016E' 0021               	movlb	1	; select bank1
  8708  016F' 0800'              	movf	SSPA_getPOut@channel^(0+128),w
  8709  0170' 1903               	btfsc	3,2
  8710  0171' 2800'              	goto	u5381
  8711  0172' 2800'              	goto	u5380
  8712  0173'                    u5381:
  8713  0173' 2800'              	goto	l716
  8714  0174'                    u5380:
  8715  0174'                    l5153:
  8716  0174' 0300'              	decf	SSPA_getPOut@channel^(0+128),w
  8717  0175' 1903               	btfsc	3,2
  8718  0176' 2800'              	goto	u5391
  8719  0177' 2800'              	goto	u5390
  8720  0178'                    u5391:
  8721  0178' 2800'              	goto	l716
  8722  0179'                    u5390:
  8723  0179'                    l5155:
  8724  0179' 300A               	movlw	10
  8725  017A' 0600'              	xorwf	SSPA_getPOut@channel^(0+128),w
  8726  017B' 1903               	btfsc	3,2
  8727  017C' 2800'              	goto	u5401
  8728  017D' 2800'              	goto	u5400
  8729  017E'                    u5401:
  8730  017E' 2800'              	goto	l716
  8731  017F'                    u5400:
  8732  017F'                    l5157:
  8733  017F' 3000'              	movlw	low (STR_13| (0+32768))
  8734  0180' 0020               	movlb	0	; select bank0
  8735  0181' 00B0'              	movwf	___assert_fail@expr
  8736  0182' 3000'              	movlw	high (STR_13| (0+32768))
  8737  0183' 00B1'              	movwf	___assert_fail@expr+1
  8738  0184' 3000'              	movlw	low (STR_2| (0+32768))
  8739  0185' 00B2'              	movwf	___assert_fail@file
  8740  0186' 3000'              	movlw	high (STR_2| (0+32768))
  8741  0187' 00B3'              	movwf	___assert_fail@file+1
  8742  0188' 3053               	movlw	83
  8743  0189' 00B4'              	movwf	___assert_fail@line
  8744  018A' 3001               	movlw	1
  8745  018B' 00B5'              	movwf	___assert_fail@line+1
  8746  018C' 3000'              	movlw	low (STR_15| (0+32768))
  8747  018D' 00B6'              	movwf	___assert_fail@func
  8748  018E' 3000'              	movlw	high (STR_15| (0+32768))
  8749  018F' 00B7'              	movwf	___assert_fail@func+1
  8750  0190' 3180' 2000' 3180'  	fcall	___assert_fail
  8751  0193'                    l716:
  8752  0193' 0008               	return
  8753  0194'                    __end_of_SSPA_getPOut:
  8754                           
  8755                           	psect	text25
  8756  0000'                    __ptext25:	
  8757 ;; *************** function _getADCValue *****************
  8758 ;; Defined at:
  8759 ;;		line 233 in file "main.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  channel         1    wreg     enum E9222
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  channel         1   60[BANK0 ] enum E9222
  8764 ;;  i               1   63[BANK0 ] unsigned char 
  8765 ;;  avg             2   61[BANK0 ] unsigned short 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  2   56[BANK0 ] unsigned short 
  8768 ;; Registers used:
  8769 ;;		wreg, status,2, status,0, pclath, cstack
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8775 ;;      Params:         0       2       0       0       0       0       0       0
  8776 ;;      Locals:         0       4       0       0       0       0       0       0
  8777 ;;      Temps:          0       2       0       0       0       0       0       0
  8778 ;;      Totals:         0       8       0       0       0       0       0       0
  8779 ;;Total ram usage:        8 bytes
  8780 ;; Hardware stack levels used: 1
  8781 ;; Hardware stack levels required when called: 13
  8782 ;; This function calls:
  8783 ;;		_ADC_GetConversionResult
  8784 ;;		_ADC_IsConversionDone
  8785 ;;		_ADC_SelectChannel
  8786 ;;		_ADC_StartConversion
  8787 ;;		___assert_fail
  8788 ;; This function is called by:
  8789 ;;		_SSPA_getTemp
  8790 ;;		_SSPA_getPOut
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794  0000'                    _getADCValue:	
  8795                           ;psect for function _getADCValue
  8796                           
  8797                           
  8798                           ;incstack = 0
  8799 ;; hardware stack exceeded
  8800                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  8801                           ;getADCValue@channel stored from wreg
  8802  0000' 0020               	movlb	0	; select bank0
  8803  0001' 00BC'              	movwf	getADCValue@channel
  8804  0002'                    l4901:
  8805  0002'                    l4905:	
  8806                           ;main.c: 234:     ((void)((sizeof (adc_result_t) == sizeof (uint16_t)) || (__assert_fail
      +                          ("sizeof (adc_result_t) == sizeof (uint16_t)", "main.c", 234, __func__),0)));
  8807                           
  8808                           
  8809                           ;main.c: 236:     adc_result_t avg = 0;
  8810  0002' 01BD'              	clrf	getADCValue@avg
  8811  0003' 01BE'              	clrf	getADCValue@avg+1
  8812  0004'                    l4907:
  8813                           
  8814                           ;main.c: 238:     ADC_StartConversion();
  8815  0004' 3180' 2000' 3180'  	fcall	_ADC_StartConversion
  8816  0007'                    l4909:
  8817                           
  8818                           ;main.c: 239:     ADC_SelectChannel(channel);
  8819  0007' 0020               	movlb	0	; select bank0
  8820  0008' 083C'              	movf	getADCValue@channel,w
  8821  0009' 3180' 2000' 3180'  	fcall	_ADC_SelectChannel
  8822  000C'                    l4911:
  8823                           
  8824                           ;main.c: 241:     for (uint8_t i = 0; i < 32; i++)
  8825  000C' 0020               	movlb	0	; select bank0
  8826  000D' 01BF'              	clrf	getADCValue@i
  8827  000E'                    l4917:
  8828                           
  8829                           ;main.c: 242:         if (ADC_IsConversionDone())
  8830  000E' 3180' 2000' 3180'  	fcall	_ADC_IsConversionDone
  8831  0011' 3A00               	xorlw	0
  8832  0012' 1903               	skipnz
  8833  0013' 2800'              	goto	u5021
  8834  0014' 2800'              	goto	u5020
  8835  0015'                    u5021:
  8836  0015' 2800'              	goto	l4921
  8837  0016'                    u5020:
  8838  0016'                    l4919:
  8839                           
  8840                           ;main.c: 243:             avg += ADC_GetConversionResult();
  8841  0016' 3180' 2000' 3180'  	fcall	_ADC_GetConversionResult
  8842  0019' 0020               	movlb	0	; select bank0
  8843  001A' 0800'              	movf	?_ADC_GetConversionResult,w
  8844  001B' 07BD'              	addwf	getADCValue@avg,f
  8845  001C' 0801'              	movf	?_ADC_GetConversionResult+1,w
  8846  001D' 3DBE'              	addwfc	getADCValue@avg+1,f
  8847  001E'                    l4921:
  8848  001E' 3001               	movlw	1
  8849  001F' 0020               	movlb	0	; select bank0
  8850  0020' 00BA'              	movwf	??_getADCValue
  8851  0021' 083A'              	movf	??_getADCValue,w
  8852  0022' 07BF'              	addwf	getADCValue@i,f
  8853  0023'                    l4923:
  8854  0023' 3020               	movlw	32
  8855  0024' 023F'              	subwf	getADCValue@i,w
  8856  0025' 1C03               	skipc
  8857  0026' 2800'              	goto	u5031
  8858  0027' 2800'              	goto	u5030
  8859  0028'                    u5031:
  8860  0028' 2800'              	goto	l4917
  8861  0029'                    u5030:
  8862  0029'                    l4925:
  8863                           
  8864                           ;main.c: 245:     return avg >> 5;
  8865  0029' 083E'              	movf	getADCValue@avg+1,w
  8866  002A' 00BB'              	movwf	??_getADCValue+1
  8867  002B' 083D'              	movf	getADCValue@avg,w
  8868  002C' 00BA'              	movwf	??_getADCValue
  8869  002D' 3005               	movlw	5
  8870  002E'                    u5045:
  8871  002E' 36BB'              	lsrf	??_getADCValue+1,f
  8872  002F' 0CBA'              	rrf	??_getADCValue,f
  8873  0030' 0B89               	decfsz	9,f
  8874  0031' 2800'              	goto	u5045
  8875  0032' 083A'              	movf	??_getADCValue,w
  8876  0033' 00B8'              	movwf	?_getADCValue
  8877  0034' 083B'              	movf	??_getADCValue+1,w
  8878  0035' 00B9'              	movwf	?_getADCValue+1
  8879  0036'                    l673:
  8880  0036' 0008               	return
  8881  0037'                    __end_of_getADCValue:
  8882                           
  8883                           	psect	text26
  8884  0000'                    __ptext26:	
  8885 ;; *************** function ___assert_fail *****************
  8886 ;; Defined at:
  8887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\assert.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  expr            2   48[BANK0 ] PTR const unsigned char 
  8890 ;;		 -> STR_16(55), STR_10(36), STR_4(43), 
  8891 ;;  file            2   50[BANK0 ] PTR const unsigned char 
  8892 ;;		 -> STR_17(7), STR_11(7), STR_5(7), 
  8893 ;;  line            2   52[BANK0 ] int 
  8894 ;;  func            2   54[BANK0 ] PTR const unsigned char 
  8895 ;;		 -> STR_18(13), STR_12(13), STR_6(12), 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8907 ;;      Params:         0       8       0       0       0       0       0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0
  8910 ;;      Totals:         0       8       0       0       0       0       0       0
  8911 ;;Total ram usage:        8 bytes
  8912 ;; Hardware stack levels used: 1
  8913 ;; Hardware stack levels required when called: 12
  8914 ;; This function calls:
  8915 ;;		_abort
  8916 ;;		_printf
  8917 ;; This function is called by:
  8918 ;;		_getADCValue
  8919 ;;		_SSPA_getTemp
  8920 ;;		_SSPA_getPOut
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924  0000'                    ___assert_fail:	
  8925                           ;psect for function ___assert_fail
  8926                           
  8927  0000'                    l4881:	
  8928                           ;incstack = 0
  8929 ;; hardware stack exceeded
  8930                           ; Regs used in ___assert_fail: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8931                           
  8932  0000' 3000'              	movlw	low (STR_19| (0+32768))
  8933  0001' 0020               	movlb	0	; select bank0
  8934  0002' 00A5'              	movwf	printf@fmt
  8935  0003' 3000'              	movlw	high (STR_19| (0+32768))
  8936  0004' 00A6'              	movwf	printf@fmt+1
  8937  0005' 0831'              	movf	___assert_fail@expr+1,w
  8938  0006' 0081'              	movwf	(low ((?_printf| 0+2))+1)
  8939  0007' 0830'              	movf	___assert_fail@expr,w
  8940  0008' 0080'              	movwf	low ((?_printf| 0+2))
  8941  0009' 0833'              	movf	___assert_fail@file+1,w
  8942  000A' 0081'              	movwf	(low ((?_printf| 0+4))+1)
  8943  000B' 0832'              	movf	___assert_fail@file,w
  8944  000C' 0080'              	movwf	low ((?_printf| 0+4))
  8945  000D' 0837'              	movf	___assert_fail@func+1,w
  8946  000E' 0081'              	movwf	(low ((?_printf| 0+6))+1)
  8947  000F' 0836'              	movf	___assert_fail@func,w
  8948  0010' 0080'              	movwf	low ((?_printf| 0+6))
  8949  0011' 0835'              	movf	___assert_fail@line+1,w
  8950  0012' 00AE'              	movwf	?_printf+9
  8951  0013' 0834'              	movf	___assert_fail@line,w
  8952  0014' 00AD'              	movwf	?_printf+8
  8953  0015' 3180' 2000' 3180'  	fcall	_printf
  8954  0018'                    l4883:
  8955  0018' 3180' 2000' 3180'  	fcall	_abort
  8956  001B'                    l1330:
  8957  001B' 0008               	return
  8958  001C'                    __end_of___assert_fail:
  8959                           
  8960                           	psect	text27
  8961  0000'                    __ptext27:	
  8962 ;; *************** function _printf *****************
  8963 ;; Defined at:
  8964 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;  fmt             2   37[BANK0 ] PTR const unsigned char 
  8967 ;;		 -> STR_19(35), 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  ret             2    0        int 
  8970 ;;  ap              1   47[BANK0 ] PTR void [1]
  8971 ;;		 -> ?_printf(2), 
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  2   37[BANK0 ] int 
  8974 ;; Registers used:
  8975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8981 ;;      Params:         0      10       0       0       0       0       0       0
  8982 ;;      Locals:         0       1       0       0       0       0       0       0
  8983 ;;      Temps:          0       0       0       0       0       0       0       0
  8984 ;;      Totals:         0      11       0       0       0       0       0       0
  8985 ;;Total ram usage:       11 bytes
  8986 ;; Hardware stack levels used: 1
  8987 ;; Hardware stack levels required when called: 11
  8988 ;; This function calls:
  8989 ;;		_vfprintf
  8990 ;; This function is called by:
  8991 ;;		___assert_fail
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995  0000'                    _printf:	
  8996                           ;psect for function _printf
  8997                           
  8998  0000'                    l4861:	
  8999                           ;incstack = 0
  9000 ;; hardware stack exceeded
  9001                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9002                           
  9003  0000' 3000'              	movlw	(low ((?_printf| 0+2)))& (0+255)
  9004  0001' 0020               	movlb	0	; select bank0
  9005  0002' 00AF'              	movwf	printf@ap
  9006  0003'                    l4863:
  9007  0003' 3000               	movlw	0
  9008  0004' 009D'              	movwf	vfprintf@fp
  9009  0005' 009E'              	movwf	vfprintf@fp+1
  9010  0006' 0826'              	movf	printf@fmt+1,w
  9011  0007' 00A0'              	movwf	vfprintf@fmt+1
  9012  0008' 0825'              	movf	printf@fmt,w
  9013  0009' 009F'              	movwf	vfprintf@fmt
  9014  000A' 3000'              	movlw	(low (printf@ap| 0))& (0+255)
  9015  000B' 00A1'              	movwf	vfprintf@ap
  9016  000C' 3180' 2000' 3180'  	fcall	_vfprintf
  9017  000F'                    l1368:
  9018  000F' 0008               	return
  9019  0010'                    __end_of_printf:
  9020                           
  9021                           	psect	text28
  9022  0000'                    __ptext28:	
  9023 ;; *************** function _vfprintf *****************
  9024 ;; Defined at:
  9025 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  9028 ;;		 -> NULL(0), 
  9029 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  9030 ;;		 -> STR_19(35), 
  9031 ;;  ap              1   33[BANK0 ] PTR PTR void 
  9032 ;;		 -> printf@ap(1), 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  cfmt            2   35[BANK0 ] PTR unsigned char 
  9035 ;;		 -> STR_19(35), 
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  2   29[BANK0 ] int 
  9038 ;; Registers used:
  9039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9045 ;;      Params:         0       5       0       0       0       0       0       0
  9046 ;;      Locals:         0       2       0       0       0       0       0       0
  9047 ;;      Temps:          0       1       0       0       0       0       0       0
  9048 ;;      Totals:         0       8       0       0       0       0       0       0
  9049 ;;Total ram usage:        8 bytes
  9050 ;; Hardware stack levels used: 1
  9051 ;; Hardware stack levels required when called: 10
  9052 ;; This function calls:
  9053 ;;		_vfpfcnvrt
  9054 ;; This function is called by:
  9055 ;;		_printf
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059  0000'                    _vfprintf:	
  9060                           ;psect for function _vfprintf
  9061                           
  9062  0000'                    l4851:	
  9063                           ;incstack = 0
  9064 ;; hardware stack exceeded
  9065                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9066                           
  9067                           
  9068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9069  0000' 0020               	movlb	0	; select bank0
  9070  0001' 0820'              	movf	vfprintf@fmt+1,w
  9071  0002' 00A4'              	movwf	vfprintf@cfmt+1
  9072  0003' 081F'              	movf	vfprintf@fmt,w
  9073  0004' 00A3'              	movwf	vfprintf@cfmt
  9074                           
  9075                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9076  0005' 2800'              	goto	l4855
  9077  0006'                    l4853:
  9078                           
  9079                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9080  0006' 081E'              	movf	vfprintf@fp+1,w
  9081  0007' 008C'              	movwf	vfpfcnvrt@fp+1
  9082  0008' 081D'              	movf	vfprintf@fp,w
  9083  0009' 008B'              	movwf	vfpfcnvrt@fp
  9084  000A' 3000'              	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9085  000B' 008D'              	movwf	vfpfcnvrt@fmt
  9086  000C' 0821'              	movf	vfprintf@ap,w
  9087  000D' 008E'              	movwf	vfpfcnvrt@ap
  9088  000E' 3180' 2000' 3180'  	fcall	_vfpfcnvrt
  9089  0011'                    l4855:
  9090                           
  9091                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9092  0011' 0020               	movlb	0	; select bank0
  9093  0012' 0823'              	movf	vfprintf@cfmt,w
  9094  0013' 0084               	movwf	4
  9095  0014' 0824'              	movf	vfprintf@cfmt+1,w
  9096  0015' 0085               	movwf	5
  9097  0016' 0012               	moviw fsr0++
  9098  0017' 1D03               	btfss	3,2
  9099  0018' 2800'              	goto	u4981
  9100  0019' 2800'              	goto	u4980
  9101  001A'                    u4981:
  9102  001A' 2800'              	goto	l4853
  9103  001B'                    u4980:
  9104  001B'                    l4857:
  9105                           
  9106                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9107  001B' 019D'              	clrf	?_vfprintf
  9108  001C' 019E'              	clrf	?_vfprintf+1
  9109  001D'                    l1419:
  9110  001D' 0008               	return
  9111  001E'                    __end_of_vfprintf:
  9112                           
  9113                           	psect	text29
  9114  0000'                    __ptext29:	
  9115 ;; *************** function _vfpfcnvrt *****************
  9116 ;; Defined at:
  9117 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  9120 ;;		 -> NULL(0), 
  9121 ;;  fmt             1   13[BANK0 ] PTR PTR unsigned char 
  9122 ;;		 -> vfprintf@cfmt(2), 
  9123 ;;  ap              1   14[BANK0 ] PTR PTR void 
  9124 ;;		 -> printf@ap(1), 
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  9127 ;;		 -> ?_printf(2), STR_18(13), STR_17(7), STR_16(55), 
  9128 ;;		 -> STR_12(13), STR_11(7), STR_10(36), STR_6(12), 
  9129 ;;		 -> STR_5(7), STR_4(43), 
  9130 ;;  convarg         4   24[BANK0 ] struct .
  9131 ;;  cp              2   21[BANK0 ] PTR unsigned char 
  9132 ;;		 -> STR_19(35), 
  9133 ;;  c               1   28[BANK0 ] unsigned char 
  9134 ;;  done            1   23[BANK0 ] _Bool 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9144 ;;      Params:         0       4       0       0       0       0       0       0
  9145 ;;      Locals:         0      10       0       0       0       0       0       0
  9146 ;;      Temps:          0       4       0       0       0       0       0       0
  9147 ;;      Totals:         0      18       0       0       0       0       0       0
  9148 ;;Total ram usage:       18 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; Hardware stack levels required when called: 9
  9151 ;; This function calls:
  9152 ;;		___awdiv
  9153 ;;		___awmod
  9154 ;;		_abs
  9155 ;;		_fputc
  9156 ;; This function is called by:
  9157 ;;		_vfprintf
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161  0000'                    _vfpfcnvrt:	
  9162                           ;psect for function _vfpfcnvrt
  9163                           
  9164  0000'                    l4769:	
  9165                           ;incstack = 0
  9166 ;; hardware stack exceeded
  9167                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9168                           
  9169                           
  9170                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9171  0000' 0020               	movlb	0	; select bank0
  9172  0001' 080D'              	movf	vfpfcnvrt@fmt,w
  9173  0002' 0086               	movwf	6
  9174  0003' 0187               	clrf	7
  9175  0004' 3F40               	moviw [0]fsr1
  9176  0005' 008F'              	movwf	??_vfpfcnvrt
  9177  0006' 3F41               	moviw [1]fsr1
  9178  0007' 0090'              	movwf	??_vfpfcnvrt+1
  9179  0008' 080F'              	movf	??_vfpfcnvrt,w
  9180  0009' 0084               	movwf	4
  9181  000A' 0810'              	movf	??_vfpfcnvrt+1,w
  9182  000B' 0085               	movwf	5
  9183  000C' 0012               	moviw fsr0++
  9184  000D' 3A25               	xorlw	37
  9185  000E' 1D03               	btfss	3,2
  9186  000F' 2800'              	goto	u4821
  9187  0010' 2800'              	goto	u4820
  9188  0011'                    u4821:
  9189  0011' 2800'              	goto	l4843
  9190  0012'                    u4820:
  9191  0012'                    l4771:
  9192                           
  9193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9194  0012' 080D'              	movf	vfpfcnvrt@fmt,w
  9195  0013' 0086               	movwf	6
  9196  0014' 0187               	clrf	7
  9197  0015' 3001               	movlw	1
  9198  0016' 0781               	addwf	1,f
  9199  0017' 3141               	addfsr 1,1
  9200  0018' 1803               	skipnc
  9201  0019' 0A81               	incf	1,f
  9202  001A'                    l4773:
  9203                           
  9204                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9205  001A' 0021               	movlb	1	; select bank1
  9206  001B' 0180'              	clrf	_width^(0+128)
  9207  001C' 0180'              	clrf	(_width+1)^(0+128)
  9208  001D' 1003               	clrc
  9209  001E' 3000               	movlw	0
  9210  001F' 1803               	btfsc	3,0
  9211  0020' 3001               	movlw	1
  9212  0021' 0084'              	movwf	_flags
  9213  0022'                    l4775:
  9214                           
  9215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9216  0022' 30FF               	movlw	255
  9217  0023' 0080'              	movwf	_prec^(0+128)
  9218  0024' 30FF               	movlw	255
  9219  0025' 0081'              	movwf	(_prec^(0+128)+1)
  9220  0026'                    l4777:
  9221                           
  9222                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  9223  0026' 0020               	movlb	0	; select bank0
  9224  0027' 080D'              	movf	vfpfcnvrt@fmt,w
  9225  0028' 0086               	movwf	6
  9226  0029' 0187               	clrf	7
  9227  002A' 3F40               	moviw [0]fsr1
  9228  002B' 0095'              	movwf	vfpfcnvrt@cp
  9229  002C' 3F41               	moviw [1]fsr1
  9230  002D' 0096'              	movwf	vfpfcnvrt@cp+1
  9231  002E'                    l4779:
  9232                           
  9233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  9234  002E' 0815'              	movf	vfpfcnvrt@cp,w
  9235  002F' 0084               	movwf	4
  9236  0030' 0816'              	movf	vfpfcnvrt@cp+1,w
  9237  0031' 0085               	movwf	5
  9238  0032' 0012               	moviw fsr0++
  9239  0033' 3A64               	xorlw	100
  9240  0034' 1903               	btfsc	3,2
  9241  0035' 2800'              	goto	u4831
  9242  0036' 2800'              	goto	u4830
  9243  0037'                    u4831:
  9244  0037' 2800'              	goto	l4783
  9245  0038'                    u4830:
  9246  0038'                    l4781:
  9247  0038' 0815'              	movf	vfpfcnvrt@cp,w
  9248  0039' 0084               	movwf	4
  9249  003A' 0816'              	movf	vfpfcnvrt@cp+1,w
  9250  003B' 0085               	movwf	5
  9251  003C' 0012               	moviw fsr0++
  9252  003D' 3A69               	xorlw	105
  9253  003E' 1D03               	btfss	3,2
  9254  003F' 2800'              	goto	u4841
  9255  0040' 2800'              	goto	u4840
  9256  0041'                    u4841:
  9257  0041' 2800'              	goto	l4811
  9258  0042'                    u4840:
  9259  0042'                    l4783:
  9260                           
  9261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  9262  0042' 080E'              	movf	vfpfcnvrt@ap,w
  9263  0043' 0086               	movwf	6
  9264  0044' 0187               	clrf	7
  9265  0045' 0801               	movf	1,w
  9266  0046' 0084               	movwf	4
  9267  0047' 0185               	clrf	5
  9268  0048' 3002               	movlw	2
  9269  0049' 0781               	addwf	1,f
  9270  004A' 3F00               	moviw [0]fsr0
  9271  004B' 0098'              	movwf	vfpfcnvrt@convarg
  9272  004C' 3F01               	moviw [1]fsr0
  9273  004D' 0099'              	movwf	vfpfcnvrt@convarg+1
  9274  004E'                    l4785:
  9275                           
  9276                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  9277  004E' 0815'              	movf	vfpfcnvrt@cp,w
  9278  004F' 3E01               	addlw	1
  9279  0050' 008F'              	movwf	??_vfpfcnvrt
  9280  0051' 3000               	movlw	0
  9281  0052' 3D16'              	addwfc	vfpfcnvrt@cp+1,w
  9282  0053' 0090'              	movwf	??_vfpfcnvrt+1
  9283  0054' 080D'              	movf	vfpfcnvrt@fmt,w
  9284  0055' 0086               	movwf	6
  9285  0056' 0187               	clrf	7
  9286  0057' 080F'              	movf	??_vfpfcnvrt,w
  9287  0058' 3FC0               	movwi [0]fsr1
  9288  0059' 0810'              	movf	??_vfpfcnvrt+1,w
  9289  005A' 3FC1               	movwi [1]fsr1
  9290  005B'                    l4787:
  9291                           
  9292                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  9293  005B' 3020               	movlw	32
  9294  005C' 009C'              	movwf	vfpfcnvrt@c
  9295  005D'                    l4789:
  9296                           
  9297                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  9298  005D' 1B99'              	btfsc	vfpfcnvrt@convarg+1,7
  9299  005E' 2800'              	goto	u4851
  9300  005F' 2800'              	goto	u4850
  9301  0060'                    u4851:
  9302  0060' 3001               	movlw	1
  9303  0061' 2800'              	goto	u4860
  9304  0062'                    u4850:
  9305  0062' 3000               	movlw	0
  9306  0063'                    u4860:
  9307  0063' 0097'              	movwf	vfpfcnvrt@done
  9308  0064'                    l4791:
  9309                           
  9310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  9311  0064' 3001               	movlw	1
  9312  0065' 029C'              	subwf	vfpfcnvrt@c,f
  9313  0066' 081C'              	movf	vfpfcnvrt@c,w
  9314  0067' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  9315  0068' 0086               	movwf	6
  9316  0069' 3001               	movlw	1	; select bank2/3
  9317  006A' 0087               	movwf	7
  9318  006B' 300A               	movlw	10
  9319  006C' 0080'              	movwf	___awmod@divisor
  9320  006D' 3000               	movlw	0
  9321  006E' 0081'              	movwf	___awmod@divisor+1
  9322  006F' 0819'              	movf	vfpfcnvrt@convarg+1,w
  9323  0070' 0083'              	movwf	___awmod@dividend+1
  9324  0071' 0818'              	movf	vfpfcnvrt@convarg,w
  9325  0072' 0082'              	movwf	___awmod@dividend
  9326  0073' 3180' 2000' 3180'  	fcall	___awmod
  9327  0076' 0020               	movlb	0	; select bank0
  9328  0077' 0801'              	movf	?___awmod+1,w
  9329  0078' 0088'              	movwf	abs@a+1
  9330  0079' 0800'              	movf	?___awmod,w
  9331  007A' 0087'              	movwf	abs@a
  9332  007B' 3180' 2000' 3180'  	fcall	_abs
  9333  007E' 0020               	movlb	0	; select bank0
  9334  007F' 0807'              	movf	?_abs,w
  9335  0080' 3E30               	addlw	48
  9336  0081' 0081               	movwf	1
  9337  0082'                    l4793:
  9338                           
  9339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  9340  0082' 300A               	movlw	10
  9341  0083' 0080'              	movwf	___awdiv@divisor
  9342  0084' 3000               	movlw	0
  9343  0085' 0081'              	movwf	___awdiv@divisor+1
  9344  0086' 0819'              	movf	vfpfcnvrt@convarg+1,w
  9345  0087' 0083'              	movwf	___awdiv@dividend+1
  9346  0088' 0818'              	movf	vfpfcnvrt@convarg,w
  9347  0089' 0082'              	movwf	___awdiv@dividend
  9348  008A' 3180' 2000' 3180'  	fcall	___awdiv
  9349  008D' 0020               	movlb	0	; select bank0
  9350  008E' 0801'              	movf	?___awdiv+1,w
  9351  008F' 0099'              	movwf	vfpfcnvrt@convarg+1
  9352  0090' 0800'              	movf	?___awdiv,w
  9353  0091' 0098'              	movwf	vfpfcnvrt@convarg
  9354  0092'                    l4795:
  9355                           
  9356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  9357  0092' 0818'              	movf	vfpfcnvrt@convarg,w
  9358  0093' 0419'              	iorwf	vfpfcnvrt@convarg+1,w
  9359  0094' 1903               	btfsc	3,2
  9360  0095' 2800'              	goto	u4871
  9361  0096' 2800'              	goto	u4870
  9362  0097'                    u4871:
  9363  0097' 2800'              	goto	l4799
  9364  0098'                    u4870:
  9365  0098'                    l4797:
  9366  0098' 081C'              	movf	vfpfcnvrt@c,w
  9367  0099' 1D03               	btfss	3,2
  9368  009A' 2800'              	goto	u4881
  9369  009B' 2800'              	goto	u4880
  9370  009C'                    u4881:
  9371  009C' 2800'              	goto	l4791
  9372  009D'                    u4880:
  9373  009D'                    l4799:
  9374                           
  9375                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  9376  009D' 081C'              	movf	vfpfcnvrt@c,w
  9377  009E' 1903               	btfsc	3,2
  9378  009F' 2800'              	goto	u4891
  9379  00A0' 2800'              	goto	u4890
  9380  00A1'                    u4891:
  9381  00A1' 2800'              	goto	l4809
  9382  00A2'                    u4890:
  9383  00A2'                    l4801:
  9384  00A2' 0817'              	movf	vfpfcnvrt@done,w
  9385  00A3' 1903               	btfsc	3,2
  9386  00A4' 2800'              	goto	u4901
  9387  00A5' 2800'              	goto	u4900
  9388  00A6'                    u4901:
  9389  00A6' 2800'              	goto	l4809
  9390  00A7'                    u4900:
  9391  00A7'                    l4803:
  9392                           
  9393                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  9394  00A7' 3001               	movlw	1
  9395  00A8' 029C'              	subwf	vfpfcnvrt@c,f
  9396  00A9' 081C'              	movf	vfpfcnvrt@c,w
  9397  00AA' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  9398  00AB' 0086               	movwf	6
  9399  00AC' 3001               	movlw	1	; select bank2/3
  9400  00AD' 0087               	movwf	7
  9401  00AE' 302D               	movlw	45
  9402  00AF' 0081               	movwf	1
  9403  00B0' 2800'              	goto	l4809
  9404  00B1'                    l4805:
  9405                           
  9406                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  9407  00B1' 081C'              	movf	vfpfcnvrt@c,w
  9408  00B2' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  9409  00B3' 0086               	movwf	6
  9410  00B4' 3001               	movlw	1	; select bank2/3
  9411  00B5' 0087               	movwf	7
  9412  00B6' 0801               	movf	1,w
  9413  00B7' 008F'              	movwf	??_vfpfcnvrt
  9414  00B8' 0190'              	clrf	??_vfpfcnvrt+1
  9415  00B9' 080F'              	movf	??_vfpfcnvrt,w
  9416  00BA' 0080'              	movwf	fputc@c
  9417  00BB' 0810'              	movf	??_vfpfcnvrt+1,w
  9418  00BC' 0081'              	movwf	fputc@c+1
  9419  00BD' 080C'              	movf	vfpfcnvrt@fp+1,w
  9420  00BE' 0083'              	movwf	fputc@fp+1
  9421  00BF' 080B'              	movf	vfpfcnvrt@fp,w
  9422  00C0' 0082'              	movwf	fputc@fp
  9423  00C1' 3180' 2000' 3180'  	fcall	_fputc
  9424  00C4'                    l4807:
  9425  00C4' 3001               	movlw	1
  9426  00C5' 0020               	movlb	0	; select bank0
  9427  00C6' 008F'              	movwf	??_vfpfcnvrt
  9428  00C7' 080F'              	movf	??_vfpfcnvrt,w
  9429  00C8' 079C'              	addwf	vfpfcnvrt@c,f
  9430  00C9'                    l4809:
  9431                           
  9432                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  9433  00C9' 3020               	movlw	32
  9434  00CA' 061C'              	xorwf	vfpfcnvrt@c,w
  9435  00CB' 1D03               	btfss	3,2
  9436  00CC' 2800'              	goto	u4911
  9437  00CD' 2800'              	goto	u4910
  9438  00CE'                    u4911:
  9439  00CE' 2800'              	goto	l4805
  9440  00CF'                    u4910:
  9441  00CF' 2800'              	goto	l1406
  9442  00D0'                    l4811:
  9443                           
  9444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  9445  00D0' 0197'              	clrf	vfpfcnvrt@done
  9446  00D1'                    l4813:
  9447                           
  9448                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  9449  00D1' 080D'              	movf	vfpfcnvrt@fmt,w
  9450  00D2' 0086               	movwf	6
  9451  00D3' 0187               	clrf	7
  9452  00D4' 3F40               	moviw [0]fsr1
  9453  00D5' 008F'              	movwf	??_vfpfcnvrt
  9454  00D6' 3F41               	moviw [1]fsr1
  9455  00D7' 0090'              	movwf	??_vfpfcnvrt+1
  9456  00D8' 080F'              	movf	??_vfpfcnvrt,w
  9457  00D9' 0084               	movwf	4
  9458  00DA' 0810'              	movf	??_vfpfcnvrt+1,w
  9459  00DB' 0085               	movwf	5
  9460  00DC' 0012               	moviw fsr0++
  9461  00DD' 3A73               	xorlw	115
  9462  00DE' 1D03               	btfss	3,2
  9463  00DF' 2800'              	goto	u4921
  9464  00E0' 2800'              	goto	u4920
  9465  00E1'                    u4921:
  9466  00E1' 2800'              	goto	l4819
  9467  00E2'                    u4920:
  9468  00E2'                    l4815:
  9469                           
  9470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  9471  00E2' 080D'              	movf	vfpfcnvrt@fmt,w
  9472  00E3' 0086               	movwf	6
  9473  00E4' 0187               	clrf	7
  9474  00E5' 3001               	movlw	1
  9475  00E6' 0781               	addwf	1,f
  9476  00E7' 3141               	addfsr 1,1
  9477  00E8' 1803               	skipnc
  9478  00E9' 0A81               	incf	1,f
  9479  00EA'                    l4817:
  9480                           
  9481                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  9482  00EA' 0197'              	clrf	vfpfcnvrt@done
  9483  00EB' 0A97'              	incf	vfpfcnvrt@done,f
  9484                           
  9485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  9486  00EC' 2800'              	goto	l4829
  9487  00ED'                    l4819:
  9488  00ED' 080D'              	movf	vfpfcnvrt@fmt,w
  9489  00EE' 0086               	movwf	6
  9490  00EF' 0187               	clrf	7
  9491  00F0' 3F40               	moviw [0]fsr1
  9492  00F1' 008F'              	movwf	??_vfpfcnvrt
  9493  00F2' 3F41               	moviw [1]fsr1
  9494  00F3' 0090'              	movwf	??_vfpfcnvrt+1
  9495  00F4' 080F'              	movf	??_vfpfcnvrt,w
  9496  00F5' 0084               	movwf	4
  9497  00F6' 0810'              	movf	??_vfpfcnvrt+1,w
  9498  00F7' 0085               	movwf	5
  9499  00F8' 0012               	moviw fsr0++
  9500  00F9' 3A6C               	xorlw	108
  9501  00FA' 1D03               	btfss	3,2
  9502  00FB' 2800'              	goto	u4931
  9503  00FC' 2800'              	goto	u4930
  9504  00FD'                    u4931:
  9505  00FD' 2800'              	goto	l4829
  9506  00FE'                    u4930:
  9507  00FE'                    l4821:
  9508  00FE' 080D'              	movf	vfpfcnvrt@fmt,w
  9509  00FF' 0086               	movwf	6
  9510  0100' 0187               	clrf	7
  9511  0101' 3F40               	moviw [0]fsr1
  9512  0102' 008F'              	movwf	??_vfpfcnvrt
  9513  0103' 3F41               	moviw [1]fsr1
  9514  0104' 0090'              	movwf	??_vfpfcnvrt+1
  9515  0105' 3001               	movlw	1
  9516  0106' 070F'              	addwf	??_vfpfcnvrt,w
  9517  0107' 0084               	movwf	4
  9518  0108' 0810'              	movf	??_vfpfcnvrt+1,w
  9519  0109' 1803               	skipnc
  9520  010A' 0A10'              	incf	??_vfpfcnvrt+1,w
  9521  010B' 0085               	movwf	5
  9522  010C' 0012               	moviw fsr0++
  9523  010D' 3A6C               	xorlw	108
  9524  010E' 1D03               	btfss	3,2
  9525  010F' 2800'              	goto	u4941
  9526  0110' 2800'              	goto	u4940
  9527  0111'                    u4941:
  9528  0111' 2800'              	goto	l4829
  9529  0112'                    u4940:
  9530  0112'                    l4823:
  9531  0112' 080D'              	movf	vfpfcnvrt@fmt,w
  9532  0113' 0086               	movwf	6
  9533  0114' 0187               	clrf	7
  9534  0115' 3F40               	moviw [0]fsr1
  9535  0116' 008F'              	movwf	??_vfpfcnvrt
  9536  0117' 3F41               	moviw [1]fsr1
  9537  0118' 0090'              	movwf	??_vfpfcnvrt+1
  9538  0119' 3002               	movlw	2
  9539  011A' 070F'              	addwf	??_vfpfcnvrt,w
  9540  011B' 0084               	movwf	4
  9541  011C' 0810'              	movf	??_vfpfcnvrt+1,w
  9542  011D' 1803               	skipnc
  9543  011E' 0A10'              	incf	??_vfpfcnvrt+1,w
  9544  011F' 0085               	movwf	5
  9545  0120' 0012               	moviw fsr0++
  9546  0121' 3A73               	xorlw	115
  9547  0122' 1D03               	btfss	3,2
  9548  0123' 2800'              	goto	u4951
  9549  0124' 2800'              	goto	u4950
  9550  0125'                    u4951:
  9551  0125' 2800'              	goto	l4829
  9552  0126'                    u4950:
  9553  0126'                    l4825:
  9554                           
  9555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  9556  0126' 080D'              	movf	vfpfcnvrt@fmt,w
  9557  0127' 0086               	movwf	6
  9558  0128' 0187               	clrf	7
  9559  0129' 3003               	movlw	3
  9560  012A' 0781               	addwf	1,f
  9561  012B' 3141               	addfsr 1,1
  9562  012C' 1803               	skipnc
  9563  012D' 0A81               	incf	1,f
  9564  012E' 2800'              	goto	l4817
  9565  012F'                    l4829:
  9566                           
  9567                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  9568  012F' 0817'              	movf	vfpfcnvrt@done,w
  9569  0130' 1903               	btfsc	3,2
  9570  0131' 2800'              	goto	u4961
  9571  0132' 2800'              	goto	u4960
  9572  0133'                    u4961:
  9573  0133' 2800'              	goto	l4839
  9574  0134'                    u4960:
  9575  0134'                    l4831:
  9576                           
  9577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  9578  0134' 080E'              	movf	vfpfcnvrt@ap,w
  9579  0135' 0086               	movwf	6
  9580  0136' 0187               	clrf	7
  9581  0137' 0801               	movf	1,w
  9582  0138' 0084               	movwf	4
  9583  0139' 0185               	clrf	5
  9584  013A' 3002               	movlw	2
  9585  013B' 0781               	addwf	1,f
  9586  013C' 3F00               	moviw [0]fsr0
  9587  013D' 0093'              	movwf	vfpfcnvrt@cp_2048
  9588  013E' 3F01               	moviw [1]fsr0
  9589  013F' 0094'              	movwf	vfpfcnvrt@cp_2048+1
  9590  0140' 2800'              	goto	l4837
  9591  0141'                    l4833:
  9592                           
  9593                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  9594  0141' 0813'              	movf	vfpfcnvrt@cp_2048,w
  9595  0142' 0084               	movwf	4
  9596  0143' 0814'              	movf	vfpfcnvrt@cp_2048+1,w
  9597  0144' 0085               	movwf	5
  9598  0145' 0800               	movf	0,w	;code access
  9599  0146' 008F'              	movwf	??_vfpfcnvrt
  9600  0147' 0190'              	clrf	??_vfpfcnvrt+1
  9601  0148' 080F'              	movf	??_vfpfcnvrt,w
  9602  0149' 0080'              	movwf	fputc@c
  9603  014A' 0810'              	movf	??_vfpfcnvrt+1,w
  9604  014B' 0081'              	movwf	fputc@c+1
  9605  014C' 080C'              	movf	vfpfcnvrt@fp+1,w
  9606  014D' 0083'              	movwf	fputc@fp+1
  9607  014E' 080B'              	movf	vfpfcnvrt@fp,w
  9608  014F' 0082'              	movwf	fputc@fp
  9609  0150' 3180' 2000' 3180'  	fcall	_fputc
  9610  0153'                    l4835:
  9611                           
  9612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  9613  0153' 3001               	movlw	1
  9614  0154' 0020               	movlb	0	; select bank0
  9615  0155' 0793'              	addwf	vfpfcnvrt@cp_2048,f
  9616  0156' 3000               	movlw	0
  9617  0157' 3D94'              	addwfc	vfpfcnvrt@cp_2048+1,f
  9618  0158'                    l4837:
  9619  0158' 0813'              	movf	vfpfcnvrt@cp_2048,w
  9620  0159' 0084               	movwf	4
  9621  015A' 0814'              	movf	vfpfcnvrt@cp_2048+1,w
  9622  015B' 0085               	movwf	5
  9623  015C' 0012               	moviw fsr0++
  9624  015D' 1D03               	btfss	3,2
  9625  015E' 2800'              	goto	u4971
  9626  015F' 2800'              	goto	u4970
  9627  0160'                    u4971:
  9628  0160' 2800'              	goto	l4833
  9629  0161'                    u4970:
  9630  0161' 2800'              	goto	l1406
  9631  0162'                    l4839:
  9632                           
  9633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9634  0162' 0020               	movlb	0	; select bank0
  9635  0163' 080D'              	movf	vfpfcnvrt@fmt,w
  9636  0164' 0086               	movwf	6
  9637  0165' 0187               	clrf	7
  9638  0166' 3001               	movlw	1
  9639  0167' 0781               	addwf	1,f
  9640  0168' 3141               	addfsr 1,1
  9641  0169' 1803               	skipnc
  9642  016A' 0A81               	incf	1,f
  9643  016B' 2800'              	goto	l1406
  9644  016C'                    l4843:
  9645                           
  9646                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9647  016C' 080D'              	movf	vfpfcnvrt@fmt,w
  9648  016D' 0086               	movwf	6
  9649  016E' 0187               	clrf	7
  9650  016F' 3F40               	moviw [0]fsr1
  9651  0170' 008F'              	movwf	??_vfpfcnvrt
  9652  0171' 3F41               	moviw [1]fsr1
  9653  0172' 0090'              	movwf	??_vfpfcnvrt+1
  9654  0173' 080F'              	movf	??_vfpfcnvrt,w
  9655  0174' 0084               	movwf	4
  9656  0175' 0810'              	movf	??_vfpfcnvrt+1,w
  9657  0176' 0085               	movwf	5
  9658  0177' 0800               	movf	0,w	;code access
  9659  0178' 0091'              	movwf	??_vfpfcnvrt+2
  9660  0179' 0192'              	clrf	??_vfpfcnvrt+3
  9661  017A' 0811'              	movf	??_vfpfcnvrt+2,w
  9662  017B' 0080'              	movwf	fputc@c
  9663  017C' 0812'              	movf	??_vfpfcnvrt+3,w
  9664  017D' 0081'              	movwf	fputc@c+1
  9665  017E' 080C'              	movf	vfpfcnvrt@fp+1,w
  9666  017F' 0083'              	movwf	fputc@fp+1
  9667  0180' 080B'              	movf	vfpfcnvrt@fp,w
  9668  0181' 0082'              	movwf	fputc@fp
  9669  0182' 3180' 2000' 3180'  	fcall	_fputc
  9670  0185' 2800'              	goto	l4839
  9671  0186'                    l1406:
  9672  0186' 0008               	return
  9673  0187'                    __end_of_vfpfcnvrt:
  9674                           
  9675                           	psect	text30
  9676  0000'                    __ptext30:	
  9677 ;; *************** function _fputc *****************
  9678 ;; Defined at:
  9679 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  c               2    0[BANK0 ] int 
  9682 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  9683 ;;		 -> NULL(0), 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  2    0[BANK0 ] int 
  9688 ;; Registers used:
  9689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9695 ;;      Params:         0       4       0       0       0       0       0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0
  9697 ;;      Temps:          0       5       0       0       0       0       0       0
  9698 ;;      Totals:         0       9       0       0       0       0       0       0
  9699 ;;Total ram usage:        9 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; Hardware stack levels required when called: 8
  9702 ;; This function calls:
  9703 ;;		_putch
  9704 ;; This function is called by:
  9705 ;;		_vfpfcnvrt
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709  0000'                    _fputc:	
  9710                           ;psect for function _fputc
  9711                           
  9712  0000'                    l4747:	
  9713                           ;incstack = 0
  9714 ;; hardware stack exceeded
  9715                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9716                           
  9717  0000' 0020               	movlb	0	; select bank0
  9718  0001' 0802'              	movf	fputc@fp,w
  9719  0002' 0403'              	iorwf	fputc@fp+1,w
  9720  0003' 1903               	btfsc	3,2
  9721  0004' 2800'              	goto	u4771
  9722  0005' 2800'              	goto	u4770
  9723  0006'                    u4771:
  9724  0006' 2800'              	goto	l4751
  9725  0007'                    u4770:
  9726  0007'                    l4749:
  9727  0007' 0802'              	movf	fputc@fp,w
  9728  0008' 0403'              	iorwf	fputc@fp+1,w
  9729  0009' 1D03               	btfss	3,2
  9730  000A' 2800'              	goto	u4781
  9731  000B' 2800'              	goto	u4780
  9732  000C'                    u4781:
  9733  000C' 2800'              	goto	l4753
  9734  000D'                    u4780:
  9735  000D'                    l4751:
  9736  000D' 0800'              	movf	fputc@c,w
  9737  000E' 3180' 2000' 3180'  	fcall	_putch
  9738  0011' 2800'              	goto	l1438
  9739  0012'                    l4753:
  9740  0012' 0802'              	movf	fputc@fp,w
  9741  0013' 0086               	movwf	6
  9742  0014' 0803'              	movf	fputc@fp+1,w
  9743  0015' 0087               	movwf	7
  9744  0016' 3149               	addfsr 1,9
  9745  0017' 0016               	moviw fsr1++
  9746  0018' 0401               	iorwf	1,w
  9747  0019' 1903               	btfsc	3,2
  9748  001A' 2800'              	goto	u4791
  9749  001B' 2800'              	goto	u4790
  9750  001C'                    u4791:
  9751  001C' 2800'              	goto	l4757
  9752  001D'                    u4790:
  9753  001D'                    l4755:
  9754  001D' 0802'              	movf	fputc@fp,w
  9755  001E' 0086               	movwf	6
  9756  001F' 0803'              	movf	fputc@fp+1,w
  9757  0020' 0087               	movwf	7
  9758  0021' 3149               	addfsr 1,9
  9759  0022' 3F40               	moviw [0]fsr1
  9760  0023' 0084'              	movwf	??_fputc
  9761  0024' 3F41               	moviw [1]fsr1
  9762  0025' 0085'              	movwf	??_fputc+1
  9763  0026' 0802'              	movf	fputc@fp,w
  9764  0027' 0086               	movwf	6
  9765  0028' 0803'              	movf	fputc@fp+1,w
  9766  0029' 0087               	movwf	7
  9767  002A' 3142               	addfsr 1,2
  9768  002B' 3F40               	moviw [0]fsr1
  9769  002C' 0086'              	movwf	??_fputc+2
  9770  002D' 3F41               	moviw [1]fsr1
  9771  002E' 0087'              	movwf	??_fputc+3
  9772  002F' 0807'              	movf	??_fputc+3,w
  9773  0030' 3A80               	xorlw	128
  9774  0031' 0088'              	movwf	??_fputc+4
  9775  0032' 0805'              	movf	??_fputc+1,w
  9776  0033' 3A80               	xorlw	128
  9777  0034' 0208'              	subwf	??_fputc+4,w
  9778  0035' 1D03               	skipz
  9779  0036' 2800'              	goto	u4805
  9780  0037' 0804'              	movf	??_fputc,w
  9781  0038' 0206'              	subwf	??_fputc+2,w
  9782  0039'                    u4805:
  9783  0039' 1803               	skipnc
  9784  003A' 2800'              	goto	u4801
  9785  003B' 2800'              	goto	u4800
  9786  003C'                    u4801:
  9787  003C' 2800'              	goto	l1438
  9788  003D'                    u4800:
  9789  003D'                    l4757:
  9790  003D' 0020               	movlb	0	; select bank0
  9791  003E' 0802'              	movf	fputc@fp,w
  9792  003F' 0086               	movwf	6
  9793  0040' 0803'              	movf	fputc@fp+1,w
  9794  0041' 0087               	movwf	7
  9795  0042' 3142               	addfsr 1,2
  9796  0043' 0802'              	movf	fputc@fp,w
  9797  0044' 0084               	movwf	4
  9798  0045' 0803'              	movf	fputc@fp+1,w
  9799  0046' 0085               	movwf	5
  9800  0047' 3F40               	moviw [0]fsr1
  9801  0048' 0700               	addwf	0,w
  9802  0049' 0084'              	movwf	??_fputc
  9803  004A' 3101               	addfsr 0,1
  9804  004B' 3F41               	moviw [1]fsr1
  9805  004C' 3D00               	addwfc	0,w
  9806  004D' 0085'              	movwf	??_fputc+1
  9807  004E' 0804'              	movf	??_fputc,w
  9808  004F' 0086               	movwf	6
  9809  0050' 0805'              	movf	??_fputc+1,w
  9810  0051' 0087               	movwf	7
  9811  0052' 0800'              	movf	fputc@c,w
  9812  0053' 0081               	movwf	1
  9813  0054'                    l4759:
  9814  0054' 0802'              	movf	fputc@fp,w
  9815  0055' 0086               	movwf	6
  9816  0056' 0803'              	movf	fputc@fp+1,w
  9817  0057' 0087               	movwf	7
  9818  0058' 3142               	addfsr 1,2
  9819  0059' 3001               	movlw	1
  9820  005A' 0781               	addwf	1,f
  9821  005B' 3141               	addfsr 1,1
  9822  005C' 1803               	skipnc
  9823  005D' 0A81               	incf	1,f
  9824  005E'                    l1438:
  9825  005E' 0008               	return
  9826  005F'                    __end_of_fputc:
  9827                           
  9828                           	psect	text31
  9829  0000'                    __ptext31:	
  9830 ;; *************** function _putch *****************
  9831 ;; Defined at:
  9832 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  c               1    wreg     unsigned char 
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;  c               1    0[COMMON] unsigned char 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      void 
  9839 ;; Registers used:
  9840 ;;		wreg
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9846 ;;      Params:         0       0       0       0       0       0       0       0
  9847 ;;      Locals:         0       0       0       0       0       0       0       0
  9848 ;;      Temps:          0       0       0       0       0       0       0       0
  9849 ;;      Totals:         0       0       0       0       0       0       0       0
  9850 ;;Total ram usage:        0 bytes
  9851 ;; Hardware stack levels used: 1
  9852 ;; Hardware stack levels required when called: 7
  9853 ;; This function calls:
  9854 ;;		Nothing
  9855 ;; This function is called by:
  9856 ;;		_fputc
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860  0000'                    _putch:	
  9861                           ;psect for function _putch
  9862                           
  9863  0000'                    l1449:	
  9864                           ;incstack = 0
  9865 ;; hardware stack exceeded
  9866                           ; Regs used in _putch: [wreg]
  9867                           
  9868  0000' 0008               	return
  9869  0001'                    __end_of_putch:
  9870                           
  9871                           	psect	text32
  9872  0000'                    __ptext32:	
  9873 ;; *************** function _abs *****************
  9874 ;; Defined at:
  9875 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  a               2    7[BANK0 ] int 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  2    7[BANK0 ] int 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9889 ;;      Params:         0       2       0       0       0       0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0
  9891 ;;      Temps:          0       2       0       0       0       0       0       0
  9892 ;;      Totals:         0       4       0       0       0       0       0       0
  9893 ;;Total ram usage:        4 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; Hardware stack levels required when called: 7
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_vfpfcnvrt
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903  0000'                    _abs:	
  9904                           ;psect for function _abs
  9905                           
  9906  0000'                    l3195:	
  9907                           ;incstack = 0
  9908                           ; Regs used in _abs: [wreg+status,2+status,0]
  9909                           
  9910  0000' 0020               	movlb	0	; select bank0
  9911  0001' 1B88'              	btfsc	abs@a+1,7
  9912  0002' 2800'              	goto	u2551
  9913  0003' 2800'              	goto	u2550
  9914  0004'                    u2551:
  9915  0004' 2800'              	goto	l3199
  9916  0005'                    u2550:
  9917  0005'                    l3197:
  9918  0005' 2800'              	goto	l1426
  9919  0006'                    l3199:
  9920  0006' 0907'              	comf	abs@a,w
  9921  0007' 0089'              	movwf	??_abs
  9922  0008' 0908'              	comf	abs@a+1,w
  9923  0009' 008A'              	movwf	??_abs+1
  9924  000A' 0A89'              	incf	??_abs,f
  9925  000B' 1903               	skipnz
  9926  000C' 0A8A'              	incf	??_abs+1,f
  9927  000D' 0809'              	movf	??_abs,w
  9928  000E' 0087'              	movwf	?_abs
  9929  000F' 080A'              	movf	??_abs+1,w
  9930  0010' 0088'              	movwf	?_abs+1
  9931  0011'                    l1426:
  9932  0011' 0008               	return
  9933  0012'                    __end_of_abs:
  9934                           
  9935                           	psect	text33
  9936  0000'                    __ptext33:	
  9937 ;; *************** function ___awmod *****************
  9938 ;; Defined at:
  9939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  divisor         2    0[BANK0 ] int 
  9942 ;;  dividend        2    2[BANK0 ] int 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;  sign            1    6[BANK0 ] unsigned char 
  9945 ;;  counter         1    5[BANK0 ] unsigned char 
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  2    0[BANK0 ] int 
  9948 ;; Registers used:
  9949 ;;		wreg, status,2, status,0
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9955 ;;      Params:         0       4       0       0       0       0       0       0
  9956 ;;      Locals:         0       2       0       0       0       0       0       0
  9957 ;;      Temps:          0       1       0       0       0       0       0       0
  9958 ;;      Totals:         0       7       0       0       0       0       0       0
  9959 ;;Total ram usage:        7 bytes
  9960 ;; Hardware stack levels used: 1
  9961 ;; Hardware stack levels required when called: 7
  9962 ;; This function calls:
  9963 ;;		Nothing
  9964 ;; This function is called by:
  9965 ;;		_vfpfcnvrt
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969  0000'                    ___awmod:	
  9970                           ;psect for function ___awmod
  9971                           
  9972  0000'                    l4709:	
  9973                           ;incstack = 0
  9974                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9975                           
  9976  0000' 0020               	movlb	0	; select bank0
  9977  0001' 0186'              	clrf	___awmod@sign
  9978  0002'                    l4711:
  9979  0002' 1F83'              	btfss	___awmod@dividend+1,7
  9980  0003' 2800'              	goto	u4681
  9981  0004' 2800'              	goto	u4680
  9982  0005'                    u4681:
  9983  0005' 2800'              	goto	l4717
  9984  0006'                    u4680:
  9985  0006'                    l4713:
  9986  0006' 0982'              	comf	___awmod@dividend,f
  9987  0007' 0983'              	comf	___awmod@dividend+1,f
  9988  0008' 0A82'              	incf	___awmod@dividend,f
  9989  0009' 1903               	skipnz
  9990  000A' 0A83'              	incf	___awmod@dividend+1,f
  9991  000B'                    l4715:
  9992  000B' 0186'              	clrf	___awmod@sign
  9993  000C' 0A86'              	incf	___awmod@sign,f
  9994  000D'                    l4717:
  9995  000D' 1F81'              	btfss	___awmod@divisor+1,7
  9996  000E' 2800'              	goto	u4691
  9997  000F' 2800'              	goto	u4690
  9998  0010'                    u4691:
  9999  0010' 2800'              	goto	l4721
 10000  0011'                    u4690:
 10001  0011'                    l4719:
 10002  0011' 0980'              	comf	___awmod@divisor,f
 10003  0012' 0981'              	comf	___awmod@divisor+1,f
 10004  0013' 0A80'              	incf	___awmod@divisor,f
 10005  0014' 1903               	skipnz
 10006  0015' 0A81'              	incf	___awmod@divisor+1,f
 10007  0016'                    l4721:
 10008  0016' 0800'              	movf	___awmod@divisor,w
 10009  0017' 0401'              	iorwf	___awmod@divisor+1,w
 10010  0018' 1903               	btfsc	3,2
 10011  0019' 2800'              	goto	u4701
 10012  001A' 2800'              	goto	u4700
 10013  001B'                    u4701:
 10014  001B' 2800'              	goto	l4739
 10015  001C'                    u4700:
 10016  001C'                    l4723:
 10017  001C' 0185'              	clrf	___awmod@counter
 10018  001D' 0A85'              	incf	___awmod@counter,f
 10019  001E' 2800'              	goto	l4729
 10020  001F'                    l4725:
 10021  001F' 3001               	movlw	1
 10022  0020'                    u4715:
 10023  0020' 3580'              	lslf	___awmod@divisor,f
 10024  0021' 0D81'              	rlf	___awmod@divisor+1,f
 10025  0022' 0B89               	decfsz	9,f
 10026  0023' 2800'              	goto	u4715
 10027  0024'                    l4727:
 10028  0024' 3001               	movlw	1
 10029  0025' 0084'              	movwf	??___awmod
 10030  0026' 0804'              	movf	??___awmod,w
 10031  0027' 0785'              	addwf	___awmod@counter,f
 10032  0028'                    l4729:
 10033  0028' 1F81'              	btfss	___awmod@divisor+1,7
 10034  0029' 2800'              	goto	u4721
 10035  002A' 2800'              	goto	u4720
 10036  002B'                    u4721:
 10037  002B' 2800'              	goto	l4725
 10038  002C'                    u4720:
 10039  002C'                    l4731:
 10040  002C' 0801'              	movf	___awmod@divisor+1,w
 10041  002D' 0203'              	subwf	___awmod@dividend+1,w
 10042  002E' 1D03               	skipz
 10043  002F' 2800'              	goto	u4735
 10044  0030' 0800'              	movf	___awmod@divisor,w
 10045  0031' 0202'              	subwf	___awmod@dividend,w
 10046  0032'                    u4735:
 10047  0032' 1C03               	skipc
 10048  0033' 2800'              	goto	u4731
 10049  0034' 2800'              	goto	u4730
 10050  0035'                    u4731:
 10051  0035' 2800'              	goto	l4735
 10052  0036'                    u4730:
 10053  0036'                    l4733:
 10054  0036' 0800'              	movf	___awmod@divisor,w
 10055  0037' 0282'              	subwf	___awmod@dividend,f
 10056  0038' 0801'              	movf	___awmod@divisor+1,w
 10057  0039' 3B83'              	subwfb	___awmod@dividend+1,f
 10058  003A'                    l4735:
 10059  003A' 3001               	movlw	1
 10060  003B'                    u4745:
 10061  003B' 3681'              	lsrf	___awmod@divisor+1,f
 10062  003C' 0C80'              	rrf	___awmod@divisor,f
 10063  003D' 0B89               	decfsz	9,f
 10064  003E' 2800'              	goto	u4745
 10065  003F'                    l4737:
 10066  003F' 3001               	movlw	1
 10067  0040' 0285'              	subwf	___awmod@counter,f
 10068  0041' 1D03               	btfss	3,2
 10069  0042' 2800'              	goto	u4751
 10070  0043' 2800'              	goto	u4750
 10071  0044'                    u4751:
 10072  0044' 2800'              	goto	l4731
 10073  0045'                    u4750:
 10074  0045'                    l4739:
 10075  0045' 0806'              	movf	___awmod@sign,w
 10076  0046' 1903               	btfsc	3,2
 10077  0047' 2800'              	goto	u4761
 10078  0048' 2800'              	goto	u4760
 10079  0049'                    u4761:
 10080  0049' 2800'              	goto	l4743
 10081  004A'                    u4760:
 10082  004A'                    l4741:
 10083  004A' 0982'              	comf	___awmod@dividend,f
 10084  004B' 0983'              	comf	___awmod@dividend+1,f
 10085  004C' 0A82'              	incf	___awmod@dividend,f
 10086  004D' 1903               	skipnz
 10087  004E' 0A83'              	incf	___awmod@dividend+1,f
 10088  004F'                    l4743:
 10089  004F' 0803'              	movf	___awmod@dividend+1,w
 10090  0050' 0081'              	movwf	?___awmod+1
 10091  0051' 0802'              	movf	___awmod@dividend,w
 10092  0052' 0080'              	movwf	?___awmod
 10093  0053'                    l1033:
 10094  0053' 0008               	return
 10095  0054'                    __end_of___awmod:
 10096                           
 10097                           	psect	text34
 10098  0000'                    __ptext34:	
 10099 ;; *************** function ___awdiv *****************
 10100 ;; Defined at:
 10101 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;  divisor         2    0[BANK0 ] int 
 10104 ;;  dividend        2    2[BANK0 ] int 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;  quotient        2    7[BANK0 ] int 
 10107 ;;  sign            1    6[BANK0 ] unsigned char 
 10108 ;;  counter         1    5[BANK0 ] unsigned char 
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  2    0[BANK0 ] int 
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10118 ;;      Params:         0       4       0       0       0       0       0       0
 10119 ;;      Locals:         0       4       0       0       0       0       0       0
 10120 ;;      Temps:          0       1       0       0       0       0       0       0
 10121 ;;      Totals:         0       9       0       0       0       0       0       0
 10122 ;;Total ram usage:        9 bytes
 10123 ;; Hardware stack levels used: 1
 10124 ;; Hardware stack levels required when called: 7
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_vfpfcnvrt
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132  0000'                    ___awdiv:	
 10133                           ;psect for function ___awdiv
 10134                           
 10135  0000'                    l4665:	
 10136                           ;incstack = 0
 10137                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10138                           
 10139  0000' 0020               	movlb	0	; select bank0
 10140  0001' 0186'              	clrf	___awdiv@sign
 10141  0002'                    l4667:
 10142  0002' 1F81'              	btfss	___awdiv@divisor+1,7
 10143  0003' 2800'              	goto	u4581
 10144  0004' 2800'              	goto	u4580
 10145  0005'                    u4581:
 10146  0005' 2800'              	goto	l4673
 10147  0006'                    u4580:
 10148  0006'                    l4669:
 10149  0006' 0980'              	comf	___awdiv@divisor,f
 10150  0007' 0981'              	comf	___awdiv@divisor+1,f
 10151  0008' 0A80'              	incf	___awdiv@divisor,f
 10152  0009' 1903               	skipnz
 10153  000A' 0A81'              	incf	___awdiv@divisor+1,f
 10154  000B'                    l4671:
 10155  000B' 0186'              	clrf	___awdiv@sign
 10156  000C' 0A86'              	incf	___awdiv@sign,f
 10157  000D'                    l4673:
 10158  000D' 1F83'              	btfss	___awdiv@dividend+1,7
 10159  000E' 2800'              	goto	u4591
 10160  000F' 2800'              	goto	u4590
 10161  0010'                    u4591:
 10162  0010' 2800'              	goto	l4679
 10163  0011'                    u4590:
 10164  0011'                    l4675:
 10165  0011' 0982'              	comf	___awdiv@dividend,f
 10166  0012' 0983'              	comf	___awdiv@dividend+1,f
 10167  0013' 0A82'              	incf	___awdiv@dividend,f
 10168  0014' 1903               	skipnz
 10169  0015' 0A83'              	incf	___awdiv@dividend+1,f
 10170  0016'                    l4677:
 10171  0016' 3001               	movlw	1
 10172  0017' 0084'              	movwf	??___awdiv
 10173  0018' 0804'              	movf	??___awdiv,w
 10174  0019' 0686'              	xorwf	___awdiv@sign,f
 10175  001A'                    l4679:
 10176  001A' 0187'              	clrf	___awdiv@quotient
 10177  001B' 0188'              	clrf	___awdiv@quotient+1
 10178  001C'                    l4681:
 10179  001C' 0800'              	movf	___awdiv@divisor,w
 10180  001D' 0401'              	iorwf	___awdiv@divisor+1,w
 10181  001E' 1903               	btfsc	3,2
 10182  001F' 2800'              	goto	u4601
 10183  0020' 2800'              	goto	u4600
 10184  0021'                    u4601:
 10185  0021' 2800'              	goto	l4701
 10186  0022'                    u4600:
 10187  0022'                    l4683:
 10188  0022' 0185'              	clrf	___awdiv@counter
 10189  0023' 0A85'              	incf	___awdiv@counter,f
 10190  0024' 2800'              	goto	l4689
 10191  0025'                    l4685:
 10192  0025' 3001               	movlw	1
 10193  0026'                    u4615:
 10194  0026' 3580'              	lslf	___awdiv@divisor,f
 10195  0027' 0D81'              	rlf	___awdiv@divisor+1,f
 10196  0028' 0B89               	decfsz	9,f
 10197  0029' 2800'              	goto	u4615
 10198  002A'                    l4687:
 10199  002A' 3001               	movlw	1
 10200  002B' 0084'              	movwf	??___awdiv
 10201  002C' 0804'              	movf	??___awdiv,w
 10202  002D' 0785'              	addwf	___awdiv@counter,f
 10203  002E'                    l4689:
 10204  002E' 1F81'              	btfss	___awdiv@divisor+1,7
 10205  002F' 2800'              	goto	u4621
 10206  0030' 2800'              	goto	u4620
 10207  0031'                    u4621:
 10208  0031' 2800'              	goto	l4685
 10209  0032'                    u4620:
 10210  0032'                    l4691:
 10211  0032' 3001               	movlw	1
 10212  0033'                    u4635:
 10213  0033' 3587'              	lslf	___awdiv@quotient,f
 10214  0034' 0D88'              	rlf	___awdiv@quotient+1,f
 10215  0035' 0B89               	decfsz	9,f
 10216  0036' 2800'              	goto	u4635
 10217  0037' 0801'              	movf	___awdiv@divisor+1,w
 10218  0038' 0203'              	subwf	___awdiv@dividend+1,w
 10219  0039' 1D03               	skipz
 10220  003A' 2800'              	goto	u4645
 10221  003B' 0800'              	movf	___awdiv@divisor,w
 10222  003C' 0202'              	subwf	___awdiv@dividend,w
 10223  003D'                    u4645:
 10224  003D' 1C03               	skipc
 10225  003E' 2800'              	goto	u4641
 10226  003F' 2800'              	goto	u4640
 10227  0040'                    u4641:
 10228  0040' 2800'              	goto	l4697
 10229  0041'                    u4640:
 10230  0041'                    l4693:
 10231  0041' 0800'              	movf	___awdiv@divisor,w
 10232  0042' 0282'              	subwf	___awdiv@dividend,f
 10233  0043' 0801'              	movf	___awdiv@divisor+1,w
 10234  0044' 3B83'              	subwfb	___awdiv@dividend+1,f
 10235  0045'                    l4695:
 10236  0045' 1407'              	bsf	___awdiv@quotient,0
 10237  0046'                    l4697:
 10238  0046' 3001               	movlw	1
 10239  0047'                    u4655:
 10240  0047' 3681'              	lsrf	___awdiv@divisor+1,f
 10241  0048' 0C80'              	rrf	___awdiv@divisor,f
 10242  0049' 0B89               	decfsz	9,f
 10243  004A' 2800'              	goto	u4655
 10244  004B'                    l4699:
 10245  004B' 3001               	movlw	1
 10246  004C' 0285'              	subwf	___awdiv@counter,f
 10247  004D' 1D03               	btfss	3,2
 10248  004E' 2800'              	goto	u4661
 10249  004F' 2800'              	goto	u4660
 10250  0050'                    u4661:
 10251  0050' 2800'              	goto	l4691
 10252  0051'                    u4660:
 10253  0051'                    l4701:
 10254  0051' 0806'              	movf	___awdiv@sign,w
 10255  0052' 1903               	btfsc	3,2
 10256  0053' 2800'              	goto	u4671
 10257  0054' 2800'              	goto	u4670
 10258  0055'                    u4671:
 10259  0055' 2800'              	goto	l4705
 10260  0056'                    u4670:
 10261  0056'                    l4703:
 10262  0056' 0987'              	comf	___awdiv@quotient,f
 10263  0057' 0988'              	comf	___awdiv@quotient+1,f
 10264  0058' 0A87'              	incf	___awdiv@quotient,f
 10265  0059' 1903               	skipnz
 10266  005A' 0A88'              	incf	___awdiv@quotient+1,f
 10267  005B'                    l4705:
 10268  005B' 0808'              	movf	___awdiv@quotient+1,w
 10269  005C' 0081'              	movwf	?___awdiv+1
 10270  005D' 0807'              	movf	___awdiv@quotient,w
 10271  005E' 0080'              	movwf	?___awdiv
 10272  005F'                    l1020:
 10273  005F' 0008               	return
 10274  0060'                    __end_of___awdiv:
 10275                           
 10276                           	psect	text35
 10277  0000'                    __ptext35:	
 10278 ;; *************** function _abort *****************
 10279 ;; Defined at:
 10280 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abort.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;		None
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		wreg, status,2, status,0, pclath, cstack
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10294 ;;      Params:         0       0       0       0       0       0       0       0
 10295 ;;      Locals:         0       0       0       0       0       0       0       0
 10296 ;;      Temps:          0       0       0       0       0       0       0       0
 10297 ;;      Totals:         0       0       0       0       0       0       0       0
 10298 ;;Total ram usage:        0 bytes
 10299 ;; Hardware stack levels used: 1
 10300 ;; Hardware stack levels required when called: 9
 10301 ;; This function calls:
 10302 ;;		_exit
 10303 ;; This function is called by:
 10304 ;;		___assert_fail
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308  0000'                    _abort:	
 10309                           ;psect for function _abort
 10310                           
 10311  0000'                    l4867:	
 10312                           ;incstack = 0
 10313                           ; Regs used in _abort: [wreg+status,2+status,0+pclath+cstack]
 10314                           
 10315  0000' 30FF               	movlw	255
 10316  0001' 0020               	movlb	0	; select bank0
 10317  0002' 0082'              	movwf	exit@code
 10318  0003' 30FF               	movlw	255
 10319  0004' 0083'              	movwf	exit@code+1
 10320  0005' 3180' 2000' 3180'  	fcall	_exit
 10321  0008'                    l1335:
 10322  0008' 0008               	return
 10323  0009'                    __end_of_abort:
 10324                           
 10325                           	psect	text36
 10326  0000'                    __ptext36:	
 10327 ;; *************** function _exit *****************
 10328 ;; Defined at:
 10329 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\exit.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  code            2    2[BANK0 ] int 
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      void 
 10336 ;; Registers used:
 10337 ;;		wreg, status,2, status,0, pclath, cstack
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10343 ;;      Params:         0       2       0       0       0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0       0       0       0
 10345 ;;      Temps:          0       0       0       0       0       0       0       0
 10346 ;;      Totals:         0       2       0       0       0       0       0       0
 10347 ;;Total ram usage:        2 bytes
 10348 ;; Hardware stack levels used: 1
 10349 ;; Hardware stack levels required when called: 8
 10350 ;; This function calls:
 10351 ;;		__Exit
 10352 ;;		___funcs_on_exit
 10353 ;; This function is called by:
 10354 ;;		_abort
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358  0000'                    _exit:	
 10359                           ;psect for function _exit
 10360                           
 10361  0000'                    l4849:	
 10362                           ;incstack = 0
 10363                           ; Regs used in _exit: [wreg+status,2+status,0+pclath+cstack]
 10364                           
 10365  0000' 3180' 2000' 3180'  	fcall	___funcs_on_exit
 10366  0003' 0020               	movlb	0	; select bank0
 10367  0004' 0803'              	movf	exit@code+1,w
 10368  0005' 0081'              	movwf	__Exit@ec+1
 10369  0006' 0802'              	movf	exit@code,w
 10370  0007' 0080'              	movwf	__Exit@ec
 10371  0008' 3180' 2000' 3180'  	fcall	__Exit
 10372  000B'                    l1342:
 10373  000B' 0008               	return
 10374  000C'                    __end_of_exit:
 10375                           
 10376                           	psect	text37
 10377  0000'                    __ptext37:	
 10378 ;; *************** function ___funcs_on_exit *****************
 10379 ;; Defined at:
 10380 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atexit.c"
 10381 ;; Parameters:    Size  Location     Type
 10382 ;;		None
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;  func            2    0        PTR FTN()void 
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      void 
 10387 ;; Registers used:
 10388 ;;		wreg, status,2, status,0
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10394 ;;      Params:         0       0       0       0       0       0       0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0
 10396 ;;      Temps:          0       1       0       0       0       0       0       0
 10397 ;;      Totals:         0       1       0       0       0       0       0       0
 10398 ;;Total ram usage:        1 bytes
 10399 ;; Hardware stack levels used: 1
 10400 ;; Hardware stack levels required when called: 7
 10401 ;; This function calls:
 10402 ;;		Nothing
 10403 ;; This function is called by:
 10404 ;;		_exit
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408  0000'                    ___funcs_on_exit:	
 10409                           ;psect for function ___funcs_on_exit
 10410                           
 10411  0000'                    l4763:	
 10412                           ;incstack = 0
 10413                           ; Regs used in ___funcs_on_exit: [wreg+status,2+status,0]
 10414                           
 10415  0000' 2800'              	goto	l4767
 10416  0001'                    l4765:
 10417  0001' 30FF               	movlw	255
 10418  0002' 0020               	movlb	0	; select bank0
 10419  0003' 0080'              	movwf	??___funcs_on_exit
 10420  0004' 0800'              	movf	??___funcs_on_exit,w
 10421  0005' 0785'              	addwf	_count,f
 10422  0006'                    l4767:
 10423  0006' 0805'              	movf	_count,w
 10424  0007' 3A80               	xorlw	128
 10425  0008' 3E7F               	addlw	-129
 10426  0009' 1803               	skipnc
 10427  000A' 2800'              	goto	u4811
 10428  000B' 2800'              	goto	u4810
 10429  000C'                    u4811:
 10430  000C' 2800'              	goto	l4765
 10431  000D'                    u4810:
 10432  000D'                    l1357:
 10433  000D' 0008               	return
 10434  000E'                    __end_of___funcs_on_exit:
 10435                           
 10436                           	psect	text38
 10437  0000'                    __ptext38:	
 10438 ;; *************** function __Exit *****************
 10439 ;; Defined at:
 10440 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\_Exit.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  ec              2    0[BANK0 ] int 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;		None
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  1    wreg      void 
 10447 ;; Registers used:
 10448 ;;		None
 10449 ;; Tracked objects:
 10450 ;;		On entry : 0/0
 10451 ;;		On exit  : 0/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10454 ;;      Params:         0       2       0       0       0       0       0       0
 10455 ;;      Locals:         0       0       0       0       0       0       0       0
 10456 ;;      Temps:          0       0       0       0       0       0       0       0
 10457 ;;      Totals:         0       2       0       0       0       0       0       0
 10458 ;;Total ram usage:        2 bytes
 10459 ;; Hardware stack levels used: 1
 10460 ;; Hardware stack levels required when called: 7
 10461 ;; This function calls:
 10462 ;;		Nothing
 10463 ;; This function is called by:
 10464 ;;		_exit
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468  0000'                    __Exit:	
 10469                           ;psect for function __Exit
 10470                           
 10471  0000'                    l1345:	
 10472                           ;incstack = 0
 10473                           ; Regs used in __Exit: []
 10474                           
 10475  0000' 2800'              	goto	l1345
 10476  0001' 0008               	return
 10477  0002'                    __end_of__Exit:
 10478                           
 10479                           	psect	text39
 10480  0000'                    __ptext39:	
 10481 ;; *************** function _ADC_StartConversion *****************
 10482 ;; Defined at:
 10483 ;;		line 88 in file "mcc_generated_files/adc/src/adc.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;		None
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      void 
 10490 ;; Registers used:
 10491 ;;		None
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10497 ;;      Params:         0       0       0       0       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0
 10499 ;;      Temps:          0       0       0       0       0       0       0       0
 10500 ;;      Totals:         0       0       0       0       0       0       0       0
 10501 ;;Total ram usage:        0 bytes
 10502 ;; Hardware stack levels used: 1
 10503 ;; Hardware stack levels required when called: 7
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_getADCValue
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511  0000'                    _ADC_StartConversion:	
 10512                           ;psect for function _ADC_StartConversion
 10513                           
 10514  0000'                    l4871:	
 10515                           ;incstack = 0
 10516                           ; Regs used in _ADC_StartConversion: []
 10517                           
 10518                           
 10519                           ;mcc_generated_files/adc/src/adc.c: 91:     ADCON0bits.GO_nDONE = 1;
 10520  0000' 0021               	movlb	1	; select bank1
 10521  0001' 149D               	bsf	29,1	;volatile
 10522  0002'                    l33:
 10523  0002' 0008               	return
 10524  0003'                    __end_of_ADC_StartConversion:
 10525                           
 10526                           	psect	text40
 10527  0000'                    __ptext40:	
 10528 ;; *************** function _ADC_SelectChannel *****************
 10529 ;; Defined at:
 10530 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  channel         1    wreg     enum E9219
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;  channel         1    1[BANK0 ] enum E9219
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      void 
 10537 ;; Registers used:
 10538 ;;		wreg, status,2, status,0
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10544 ;;      Params:         0       0       0       0       0       0       0       0
 10545 ;;      Locals:         0       1       0       0       0       0       0       0
 10546 ;;      Temps:          0       1       0       0       0       0       0       0
 10547 ;;      Totals:         0       2       0       0       0       0       0       0
 10548 ;;Total ram usage:        2 bytes
 10549 ;; Hardware stack levels used: 1
 10550 ;; Hardware stack levels required when called: 7
 10551 ;; This function calls:
 10552 ;;		Nothing
 10553 ;; This function is called by:
 10554 ;;		_getADCValue
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558  0000'                    _ADC_SelectChannel:	
 10559                           ;psect for function _ADC_SelectChannel
 10560                           
 10561                           
 10562                           ;incstack = 0
 10563                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 10564                           ;ADC_SelectChannel@channel stored from wreg
 10565  0000' 0020               	movlb	0	; select bank0
 10566  0001' 0081'              	movwf	ADC_SelectChannel@channel
 10567  0002'                    l4869:
 10568                           
 10569                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 10570  0002' 0801'              	movf	ADC_SelectChannel@channel,w
 10571  0003' 0080'              	movwf	??_ADC_SelectChannel
 10572  0004' 0D80'              	rlf	??_ADC_SelectChannel,f
 10573  0005' 0D80'              	rlf	??_ADC_SelectChannel,f
 10574  0006' 0021               	movlb	1	; select bank1
 10575  0007' 081D               	movf	29,w	;volatile
 10576  0008' 0020               	movlb	0	; select bank0
 10577  0009' 0600'              	xorwf	??_ADC_SelectChannel,w
 10578  000A' 3983               	andlw	-125
 10579  000B' 0600'              	xorwf	??_ADC_SelectChannel,w
 10580  000C' 0021               	movlb	1	; select bank1
 10581  000D' 009D               	movwf	29	;volatile
 10582  000E'                    l30:
 10583  000E' 0008               	return
 10584  000F'                    __end_of_ADC_SelectChannel:
 10585                           
 10586                           	psect	text41
 10587  0000'                    __ptext41:	
 10588 ;; *************** function _ADC_IsConversionDone *****************
 10589 ;; Defined at:
 10590 ;;		line 94 in file "mcc_generated_files/adc/src/adc.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      _Bool 
 10597 ;; Registers used:
 10598 ;;		wreg, status,0
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10604 ;;      Params:         0       0       0       0       0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0       0
 10607 ;;      Totals:         0       0       0       0       0       0       0       0
 10608 ;;Total ram usage:        0 bytes
 10609 ;; Hardware stack levels used: 1
 10610 ;; Hardware stack levels required when called: 7
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_getADCValue
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618  0000'                    _ADC_IsConversionDone:	
 10619                           ;psect for function _ADC_IsConversionDone
 10620                           
 10621  0000'                    l4873:	
 10622                           ;incstack = 0
 10623                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
 10624                           
 10625                           
 10626                           ;mcc_generated_files/adc/src/adc.c: 97:     return ((_Bool)(!ADCON0bits.GO_nDONE));
 10627  0000' 1003               	clrc
 10628  0001' 0021               	movlb	1	; select bank1
 10629  0002' 1C9D               	btfss	29,1	;volatile
 10630  0003' 1403               	setc
 10631  0004' 3000               	movlw	0
 10632  0005' 3D09               	addwfc	9,w
 10633  0006'                    l36:
 10634  0006' 0008               	return
 10635  0007'                    __end_of_ADC_IsConversionDone:
 10636                           
 10637                           	psect	text42
 10638  0000'                    __ptext42:	
 10639 ;; *************** function _ADC_GetConversionResult *****************
 10640 ;; Defined at:
 10641 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;		None
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;		None
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  2    0[BANK0 ] unsigned short 
 10648 ;; Registers used:
 10649 ;;		wreg
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10655 ;;      Params:         0       2       0       0       0       0       0       0
 10656 ;;      Locals:         0       0       0       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0       0
 10658 ;;      Totals:         0       2       0       0       0       0       0       0
 10659 ;;Total ram usage:        2 bytes
 10660 ;; Hardware stack levels used: 1
 10661 ;; Hardware stack levels required when called: 7
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_getADCValue
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669  0000'                    _ADC_GetConversionResult:	
 10670                           ;psect for function _ADC_GetConversionResult
 10671                           
 10672  0000'                    l4877:	
 10673                           ;incstack = 0
 10674                           ; Regs used in _ADC_GetConversionResult: [wreg]
 10675                           
 10676                           
 10677                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 10678  0000' 0021               	movlb	1	; select bank1
 10679  0001' 081C               	movf	28,w	;volatile
 10680  0002' 0020               	movlb	0	; select bank0
 10681  0003' 0081'              	movwf	?_ADC_GetConversionResult+1
 10682  0004' 0021               	movlb	1	; select bank1
 10683  0005' 081B               	movf	27,w	;volatile
 10684  0006' 0020               	movlb	0	; select bank0
 10685  0007' 0080'              	movwf	?_ADC_GetConversionResult
 10686  0008'                    l39:
 10687  0008' 0008               	return
 10688  0009'                    __end_of_ADC_GetConversionResult:
 10689                           
 10690                           	psect	text43
 10691  0000'                    __ptext43:	
 10692 ;; *************** function ___xxtofl *****************
 10693 ;; Defined at:
 10694 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  sign            1    wreg     unsigned char 
 10697 ;;  val             4    0[BANK0 ] long 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  sign            1    8[BANK0 ] unsigned char 
 10700 ;;  arg             4   10[BANK0 ] unsigned long 
 10701 ;;  exp             1    9[BANK0 ] unsigned char 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  4    0[BANK0 ] unsigned char 
 10704 ;; Registers used:
 10705 ;;		wreg, status,2, status,0
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10711 ;;      Params:         0       4       0       0       0       0       0       0
 10712 ;;      Locals:         0       6       0       0       0       0       0       0
 10713 ;;      Temps:          0       4       0       0       0       0       0       0
 10714 ;;      Totals:         0      14       0       0       0       0       0       0
 10715 ;;Total ram usage:       14 bytes
 10716 ;; Hardware stack levels used: 1
 10717 ;; Hardware stack levels required when called: 7
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		_SSPA_getTemp
 10722 ;;		_SSPA_getPOut
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726  0000'                    ___xxtofl:	
 10727                           ;psect for function ___xxtofl
 10728                           
 10729                           
 10730                           ;incstack = 0
 10731                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10732                           ;___xxtofl@sign stored from wreg
 10733  0000' 0020               	movlb	0	; select bank0
 10734  0001' 0088'              	movwf	___xxtofl@sign
 10735  0002'                    l3939:
 10736  0002' 0808'              	movf	___xxtofl@sign,w
 10737  0003' 1903               	btfsc	3,2
 10738  0004' 2800'              	goto	u3881
 10739  0005' 2800'              	goto	u3880
 10740  0006'                    u3881:
 10741  0006' 2800'              	goto	l3945
 10742  0007'                    u3880:
 10743  0007'                    l3941:
 10744  0007' 1F83'              	btfss	___xxtofl@val+3,7
 10745  0008' 2800'              	goto	u3891
 10746  0009' 2800'              	goto	u3890
 10747  000A'                    u3891:
 10748  000A' 2800'              	goto	l3945
 10749  000B'                    u3890:
 10750  000B'                    l3943:
 10751  000B' 0900'              	comf	___xxtofl@val,w
 10752  000C' 008A'              	movwf	___xxtofl@arg
 10753  000D' 0901'              	comf	___xxtofl@val+1,w
 10754  000E' 008B'              	movwf	___xxtofl@arg+1
 10755  000F' 0902'              	comf	___xxtofl@val+2,w
 10756  0010' 008C'              	movwf	___xxtofl@arg+2
 10757  0011' 0903'              	comf	___xxtofl@val+3,w
 10758  0012' 008D'              	movwf	___xxtofl@arg+3
 10759  0013' 0A8A'              	incf	___xxtofl@arg,f
 10760  0014' 1903               	skipnz
 10761  0015' 0A8B'              	incf	___xxtofl@arg+1,f
 10762  0016' 1903               	skipnz
 10763  0017' 0A8C'              	incf	___xxtofl@arg+2,f
 10764  0018' 1903               	skipnz
 10765  0019' 0A8D'              	incf	___xxtofl@arg+3,f
 10766  001A' 2800'              	goto	l1308
 10767  001B'                    l3945:
 10768  001B' 0803'              	movf	___xxtofl@val+3,w
 10769  001C' 008D'              	movwf	___xxtofl@arg+3
 10770  001D' 0802'              	movf	___xxtofl@val+2,w
 10771  001E' 008C'              	movwf	___xxtofl@arg+2
 10772  001F' 0801'              	movf	___xxtofl@val+1,w
 10773  0020' 008B'              	movwf	___xxtofl@arg+1
 10774  0021' 0800'              	movf	___xxtofl@val,w
 10775  0022' 008A'              	movwf	___xxtofl@arg
 10776  0023'                    l1308:
 10777  0023' 0803'              	movf	___xxtofl@val+3,w
 10778  0024' 0402'              	iorwf	___xxtofl@val+2,w
 10779  0025' 0401'              	iorwf	___xxtofl@val+1,w
 10780  0026' 0400'              	iorwf	___xxtofl@val,w
 10781  0027' 1D03               	skipz
 10782  0028' 2800'              	goto	u3901
 10783  0029' 2800'              	goto	u3900
 10784  002A'                    u3901:
 10785  002A' 2800'              	goto	l3951
 10786  002B'                    u3900:
 10787  002B'                    l3947:
 10788  002B' 3000               	movlw	0
 10789  002C' 0083'              	movwf	?___xxtofl+3
 10790  002D' 3000               	movlw	0
 10791  002E' 0082'              	movwf	?___xxtofl+2
 10792  002F' 3000               	movlw	0
 10793  0030' 0081'              	movwf	?___xxtofl+1
 10794  0031' 3000               	movlw	0
 10795  0032' 0080'              	movwf	?___xxtofl
 10796  0033' 2800'              	goto	l1310
 10797  0034'                    l3951:
 10798  0034' 3096               	movlw	150
 10799  0035' 0089'              	movwf	___xxtofl@exp
 10800  0036' 2800'              	goto	l3955
 10801  0037'                    l3953:
 10802  0037' 3001               	movlw	1
 10803  0038' 0084'              	movwf	??___xxtofl
 10804  0039' 0804'              	movf	??___xxtofl,w
 10805  003A' 0789'              	addwf	___xxtofl@exp,f
 10806  003B' 3001               	movlw	1
 10807  003C'                    u3915:
 10808  003C' 368D'              	lsrf	___xxtofl@arg+3,f
 10809  003D' 0C8C'              	rrf	___xxtofl@arg+2,f
 10810  003E' 0C8B'              	rrf	___xxtofl@arg+1,f
 10811  003F' 0C8A'              	rrf	___xxtofl@arg,f
 10812  0040' 0B89               	decfsz	9,f
 10813  0041' 2800'              	goto	u3915
 10814  0042'                    l3955:
 10815  0042' 30FE               	movlw	254
 10816  0043' 050D'              	andwf	___xxtofl@arg+3,w
 10817  0044' 1D03               	btfss	3,2
 10818  0045' 2800'              	goto	u3921
 10819  0046' 2800'              	goto	u3920
 10820  0047'                    u3921:
 10821  0047' 2800'              	goto	l3953
 10822  0048'                    u3920:
 10823  0048' 2800'              	goto	l1314
 10824  0049'                    l3957:
 10825  0049' 3001               	movlw	1
 10826  004A' 0084'              	movwf	??___xxtofl
 10827  004B' 0804'              	movf	??___xxtofl,w
 10828  004C' 0789'              	addwf	___xxtofl@exp,f
 10829  004D'                    l3959:
 10830  004D' 3001               	movlw	1
 10831  004E' 078A'              	addwf	___xxtofl@arg,f
 10832  004F' 3000               	movlw	0
 10833  0050' 3D8B'              	addwfc	___xxtofl@arg+1,f
 10834  0051' 3000               	movlw	0
 10835  0052' 3D8C'              	addwfc	___xxtofl@arg+2,f
 10836  0053' 3000               	movlw	0
 10837  0054' 3D8D'              	addwfc	___xxtofl@arg+3,f
 10838  0055'                    l3961:
 10839  0055' 3001               	movlw	1
 10840  0056'                    u3935:
 10841  0056' 368D'              	lsrf	___xxtofl@arg+3,f
 10842  0057' 0C8C'              	rrf	___xxtofl@arg+2,f
 10843  0058' 0C8B'              	rrf	___xxtofl@arg+1,f
 10844  0059' 0C8A'              	rrf	___xxtofl@arg,f
 10845  005A' 0B89               	decfsz	9,f
 10846  005B' 2800'              	goto	u3935
 10847  005C'                    l1314:
 10848  005C' 30FF               	movlw	255
 10849  005D' 050D'              	andwf	___xxtofl@arg+3,w
 10850  005E' 1D03               	btfss	3,2
 10851  005F' 2800'              	goto	u3941
 10852  0060' 2800'              	goto	u3940
 10853  0061'                    u3941:
 10854  0061' 2800'              	goto	l3957
 10855  0062'                    u3940:
 10856  0062' 2800'              	goto	l3965
 10857  0063'                    l3963:
 10858  0063' 3001               	movlw	1
 10859  0064' 0289'              	subwf	___xxtofl@exp,f
 10860  0065' 3001               	movlw	1
 10861  0066'                    u3955:
 10862  0066' 358A'              	lslf	___xxtofl@arg,f
 10863  0067' 0D8B'              	rlf	___xxtofl@arg+1,f
 10864  0068' 0D8C'              	rlf	___xxtofl@arg+2,f
 10865  0069' 0D8D'              	rlf	___xxtofl@arg+3,f
 10866  006A' 0B89               	decfsz	9,f
 10867  006B' 2800'              	goto	u3955
 10868  006C'                    l3965:
 10869  006C' 1B8C'              	btfsc	___xxtofl@arg+2,7
 10870  006D' 2800'              	goto	u3961
 10871  006E' 2800'              	goto	u3960
 10872  006F'                    u3961:
 10873  006F' 2800'              	goto	l1321
 10874  0070'                    u3960:
 10875  0070'                    l3967:
 10876  0070' 3002               	movlw	2
 10877  0071' 0209'              	subwf	___xxtofl@exp,w
 10878  0072' 1803               	skipnc
 10879  0073' 2800'              	goto	u3971
 10880  0074' 2800'              	goto	u3970
 10881  0075'                    u3971:
 10882  0075' 2800'              	goto	l3963
 10883  0076'                    u3970:
 10884  0076'                    l1321:
 10885  0076' 1809'              	btfsc	___xxtofl@exp,0
 10886  0077' 2800'              	goto	u3981
 10887  0078' 2800'              	goto	u3980
 10888  0079'                    u3981:
 10889  0079' 2800'              	goto	l1322
 10890  007A'                    u3980:
 10891  007A'                    l3969:
 10892  007A' 30FF               	movlw	255
 10893  007B' 058A'              	andwf	___xxtofl@arg,f
 10894  007C' 30FF               	movlw	255
 10895  007D' 058B'              	andwf	___xxtofl@arg+1,f
 10896  007E' 307F               	movlw	127
 10897  007F' 058C'              	andwf	___xxtofl@arg+2,f
 10898  0080' 30FF               	movlw	255
 10899  0081' 058D'              	andwf	___xxtofl@arg+3,f
 10900  0082'                    l1322:
 10901  0082' 1003               	clrc
 10902  0083' 0C89'              	rrf	___xxtofl@exp,f
 10903  0084'                    l3971:
 10904  0084' 0809'              	movf	___xxtofl@exp,w
 10905  0085' 0084'              	movwf	??___xxtofl
 10906  0086' 0185'              	clrf	??___xxtofl+1
 10907  0087' 0186'              	clrf	??___xxtofl+2
 10908  0088' 0187'              	clrf	??___xxtofl+3
 10909  0089' 3018               	movlw	24
 10910  008A'                    u3995:
 10911  008A' 3584'              	lslf	??___xxtofl,f
 10912  008B' 0D85'              	rlf	??___xxtofl+1,f
 10913  008C' 0D86'              	rlf	??___xxtofl+2,f
 10914  008D' 0D87'              	rlf	??___xxtofl+3,f
 10915  008E'                    u3990:
 10916  008E' 0B89               	decfsz	9,f
 10917  008F' 2800'              	goto	u3995
 10918  0090' 0804'              	movf	??___xxtofl,w
 10919  0091' 048A'              	iorwf	___xxtofl@arg,f
 10920  0092' 0805'              	movf	??___xxtofl+1,w
 10921  0093' 048B'              	iorwf	___xxtofl@arg+1,f
 10922  0094' 0806'              	movf	??___xxtofl+2,w
 10923  0095' 048C'              	iorwf	___xxtofl@arg+2,f
 10924  0096' 0807'              	movf	??___xxtofl+3,w
 10925  0097' 048D'              	iorwf	___xxtofl@arg+3,f
 10926  0098'                    l3973:
 10927  0098' 0808'              	movf	___xxtofl@sign,w
 10928  0099' 1903               	btfsc	3,2
 10929  009A' 2800'              	goto	u4001
 10930  009B' 2800'              	goto	u4000
 10931  009C'                    u4001:
 10932  009C' 2800'              	goto	l3979
 10933  009D'                    u4000:
 10934  009D'                    l3975:
 10935  009D' 1F83'              	btfss	___xxtofl@val+3,7
 10936  009E' 2800'              	goto	u4011
 10937  009F' 2800'              	goto	u4010
 10938  00A0'                    u4011:
 10939  00A0' 2800'              	goto	l3979
 10940  00A1'                    u4010:
 10941  00A1'                    l3977:
 10942  00A1' 178D'              	bsf	___xxtofl@arg+3,7
 10943  00A2'                    l3979:
 10944  00A2' 080D'              	movf	___xxtofl@arg+3,w
 10945  00A3' 0083'              	movwf	?___xxtofl+3
 10946  00A4' 080C'              	movf	___xxtofl@arg+2,w
 10947  00A5' 0082'              	movwf	?___xxtofl+2
 10948  00A6' 080B'              	movf	___xxtofl@arg+1,w
 10949  00A7' 0081'              	movwf	?___xxtofl+1
 10950  00A8' 080A'              	movf	___xxtofl@arg,w
 10951  00A9' 0080'              	movwf	?___xxtofl
 10952  00AA'                    l1310:
 10953  00AA' 0008               	return
 10954  00AB'                    __end_of___xxtofl:
 10955                           
 10956                           	psect	text44
 10957  0000'                    __ptext44:	
 10958 ;; *************** function ___fltol *****************
 10959 ;; Defined at:
 10960 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  f1              4   74[BANK0 ] unsigned char 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;  exp1            1   79[BANK0 ] unsigned char 
 10965 ;;  sign1           1   78[BANK0 ] unsigned char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  4   74[BANK0 ] long 
 10968 ;; Registers used:
 10969 ;;		wreg, status,2, status,0
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10975 ;;      Params:         0       4       0       0       0       0       0       0
 10976 ;;      Locals:         0       2       0       0       0       0       0       0
 10977 ;;      Temps:          0       0       4       0       0       0       0       0
 10978 ;;      Totals:         0       6       4       0       0       0       0       0
 10979 ;;Total ram usage:       10 bytes
 10980 ;; Hardware stack levels used: 1
 10981 ;; Hardware stack levels required when called: 7
 10982 ;; This function calls:
 10983 ;;		Nothing
 10984 ;; This function is called by:
 10985 ;;		_SSPA_getTemp
 10986 ;;		_SSPA_getPOut
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990  0000'                    ___fltol:	
 10991                           ;psect for function ___fltol
 10992                           
 10993  0000'                    l3617:	
 10994                           ;incstack = 0
 10995                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10996                           
 10997  0000' 1003               	clrc
 10998  0001' 0020               	movlb	0	; select bank0
 10999  0002' 0D4C'              	rlf	___fltol@f1+2,w
 11000  0003' 0D4D'              	rlf	___fltol@f1+3,w
 11001  0004' 00CF'              	movwf	___fltol@exp1
 11002  0005' 084F'              	movf	___fltol@exp1,w
 11003  0006' 1D03               	btfss	3,2
 11004  0007' 2800'              	goto	u3231
 11005  0008' 2800'              	goto	u3230
 11006  0009'                    u3231:
 11007  0009' 2800'              	goto	l3623
 11008  000A'                    u3230:
 11009  000A'                    l3619:
 11010  000A' 3000               	movlw	0
 11011  000B' 00CD'              	movwf	?___fltol+3
 11012  000C' 3000               	movlw	0
 11013  000D' 00CC'              	movwf	?___fltol+2
 11014  000E' 3000               	movlw	0
 11015  000F' 00CB'              	movwf	?___fltol+1
 11016  0010' 3000               	movlw	0
 11017  0011' 00CA'              	movwf	?___fltol
 11018  0012' 2800'              	goto	l1061
 11019  0013'                    l3623:
 11020  0013' 084A'              	movf	___fltol@f1,w
 11021  0014' 0021               	movlb	1	; select bank1
 11022  0015' 0080'              	movwf	??___fltol^(0+128)
 11023  0016' 0020               	movlb	0	; select bank0
 11024  0017' 084B'              	movf	___fltol@f1+1,w
 11025  0018' 0021               	movlb	1	; select bank1
 11026  0019' 0081'              	movwf	(??___fltol^(0+128)+1)
 11027  001A' 0020               	movlb	0	; select bank0
 11028  001B' 084C'              	movf	___fltol@f1+2,w
 11029  001C' 0021               	movlb	1	; select bank1
 11030  001D' 0082'              	movwf	(??___fltol^(0+128)+2)
 11031  001E' 0020               	movlb	0	; select bank0
 11032  001F' 084D'              	movf	___fltol@f1+3,w
 11033  0020' 0021               	movlb	1	; select bank1
 11034  0021' 0083'              	movwf	(??___fltol^(0+128)+3)
 11035  0022' 301F               	movlw	31
 11036  0023'                    u3245:
 11037  0023' 3683'              	lsrf	(??___fltol^(0+128)+3),f
 11038  0024' 0C82'              	rrf	(??___fltol^(0+128)+2),f
 11039  0025' 0C81'              	rrf	(??___fltol^(0+128)+1),f
 11040  0026' 0C80'              	rrf	??___fltol^(0+128),f
 11041  0027'                    u3240:
 11042  0027' 0B89               	decfsz	9,f
 11043  0028' 2800'              	goto	u3245
 11044  0029' 0800'              	movf	??___fltol^(0+128),w
 11045  002A' 0020               	movlb	0	; select bank0
 11046  002B' 00CE'              	movwf	___fltol@sign1
 11047  002C'                    l3625:
 11048  002C' 17CC'              	bsf	___fltol@f1+2,7
 11049  002D'                    l3627:
 11050  002D' 30FF               	movlw	255
 11051  002E' 05CA'              	andwf	___fltol@f1,f
 11052  002F' 30FF               	movlw	255
 11053  0030' 05CB'              	andwf	___fltol@f1+1,f
 11054  0031' 30FF               	movlw	255
 11055  0032' 05CC'              	andwf	___fltol@f1+2,f
 11056  0033' 3000               	movlw	0
 11057  0034' 05CD'              	andwf	___fltol@f1+3,f
 11058  0035'                    l3629:
 11059  0035' 3096               	movlw	150
 11060  0036' 02CF'              	subwf	___fltol@exp1,f
 11061  0037'                    l3631:
 11062  0037' 1FCF'              	btfss	___fltol@exp1,7
 11063  0038' 2800'              	goto	u3251
 11064  0039' 2800'              	goto	u3250
 11065  003A'                    u3251:
 11066  003A' 2800'              	goto	l3641
 11067  003B'                    u3250:
 11068  003B'                    l3633:
 11069  003B' 084F'              	movf	___fltol@exp1,w
 11070  003C' 3A80               	xorlw	128
 11071  003D' 3E97               	addlw	151
 11072  003E' 1803               	skipnc
 11073  003F' 2800'              	goto	u3261
 11074  0040' 2800'              	goto	u3260
 11075  0041'                    u3261:
 11076  0041' 2800'              	goto	l3639
 11077  0042'                    u3260:
 11078  0042' 2800'              	goto	l3619
 11079  0043'                    l3639:
 11080  0043' 3001               	movlw	1
 11081  0044'                    u3275:
 11082  0044' 36CD'              	lsrf	___fltol@f1+3,f
 11083  0045' 0CCC'              	rrf	___fltol@f1+2,f
 11084  0046' 0CCB'              	rrf	___fltol@f1+1,f
 11085  0047' 0CCA'              	rrf	___fltol@f1,f
 11086  0048' 0B89               	decfsz	9,f
 11087  0049' 2800'              	goto	u3275
 11088  004A' 3001               	movlw	1
 11089  004B' 0021               	movlb	1	; select bank1
 11090  004C' 0080'              	movwf	??___fltol^(0+128)
 11091  004D' 0800'              	movf	??___fltol^(0+128),w
 11092  004E' 0020               	movlb	0	; select bank0
 11093  004F' 07CF'              	addwf	___fltol@exp1,f
 11094  0050' 1D03               	btfss	3,2
 11095  0051' 2800'              	goto	u3281
 11096  0052' 2800'              	goto	u3280
 11097  0053'                    u3281:
 11098  0053' 2800'              	goto	l3639
 11099  0054'                    u3280:
 11100  0054' 2800'              	goto	l3649
 11101  0055'                    l3641:
 11102  0055' 3020               	movlw	32
 11103  0056' 024F'              	subwf	___fltol@exp1,w
 11104  0057' 1C03               	skipc
 11105  0058' 2800'              	goto	u3291
 11106  0059' 2800'              	goto	u3290
 11107  005A'                    u3291:
 11108  005A' 2800'              	goto	l1068
 11109  005B'                    u3290:
 11110  005B' 2800'              	goto	l3619
 11111  005C'                    l3647:
 11112  005C' 3001               	movlw	1
 11113  005D'                    u3305:
 11114  005D' 35CA'              	lslf	___fltol@f1,f
 11115  005E' 0DCB'              	rlf	___fltol@f1+1,f
 11116  005F' 0DCC'              	rlf	___fltol@f1+2,f
 11117  0060' 0DCD'              	rlf	___fltol@f1+3,f
 11118  0061' 0B89               	decfsz	9,f
 11119  0062' 2800'              	goto	u3305
 11120  0063' 3001               	movlw	1
 11121  0064' 02CF'              	subwf	___fltol@exp1,f
 11122  0065'                    l1068:
 11123  0065' 084F'              	movf	___fltol@exp1,w
 11124  0066' 1D03               	btfss	3,2
 11125  0067' 2800'              	goto	u3311
 11126  0068' 2800'              	goto	u3310
 11127  0069'                    u3311:
 11128  0069' 2800'              	goto	l3647
 11129  006A'                    u3310:
 11130  006A'                    l3649:
 11131  006A' 084E'              	movf	___fltol@sign1,w
 11132  006B' 1903               	btfsc	3,2
 11133  006C' 2800'              	goto	u3321
 11134  006D' 2800'              	goto	u3320
 11135  006E'                    u3321:
 11136  006E' 2800'              	goto	l1071
 11137  006F'                    u3320:
 11138  006F'                    l3651:
 11139  006F' 09CA'              	comf	___fltol@f1,f
 11140  0070' 09CB'              	comf	___fltol@f1+1,f
 11141  0071' 09CC'              	comf	___fltol@f1+2,f
 11142  0072' 09CD'              	comf	___fltol@f1+3,f
 11143  0073' 0ACA'              	incf	___fltol@f1,f
 11144  0074' 1903               	skipnz
 11145  0075' 0ACB'              	incf	___fltol@f1+1,f
 11146  0076' 1903               	skipnz
 11147  0077' 0ACC'              	incf	___fltol@f1+2,f
 11148  0078' 1903               	skipnz
 11149  0079' 0ACD'              	incf	___fltol@f1+3,f
 11150  007A'                    l1071:
 11151  007A'                    l1061:
 11152  007A' 0008               	return
 11153  007B'                    __end_of___fltol:
 11154                           
 11155                           	psect	text45
 11156  0000'                    __ptext45:	
 11157 ;; *************** function ___flsub *****************
 11158 ;; Defined at:
 11159 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  a               4   40[BANK0 ] long 
 11162 ;;  b               4   44[BANK0 ] long 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  4   40[BANK0 ] long 
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0, pclath, cstack
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11174 ;;      Params:         0       8       0       0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0       0
 11177 ;;      Totals:         0       8       0       0       0       0       0       0
 11178 ;;Total ram usage:        8 bytes
 11179 ;; Hardware stack levels used: 1
 11180 ;; Hardware stack levels required when called: 8
 11181 ;; This function calls:
 11182 ;;		___fladd
 11183 ;; This function is called by:
 11184 ;;		_SSPA_getTemp
 11185 ;;		_SSPA_getPOut
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189  0000'                    ___flsub:	
 11190                           ;psect for function ___flsub
 11191                           
 11192  0000'                    l4929:	
 11193                           ;incstack = 0
 11194                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11195                           
 11196  0000' 3080               	movlw	128
 11197  0001' 0020               	movlb	0	; select bank0
 11198  0002' 06AB'              	xorwf	___flsub@a+3,f
 11199  0003'                    l4931:
 11200  0003' 082F'              	movf	___flsub@b+3,w
 11201  0004' 0083'              	movwf	___fladd@b+3
 11202  0005' 082E'              	movf	___flsub@b+2,w
 11203  0006' 0082'              	movwf	___fladd@b+2
 11204  0007' 082D'              	movf	___flsub@b+1,w
 11205  0008' 0081'              	movwf	___fladd@b+1
 11206  0009' 082C'              	movf	___flsub@b,w
 11207  000A' 0080'              	movwf	___fladd@b
 11208  000B' 082B'              	movf	___flsub@a+3,w
 11209  000C' 0087'              	movwf	___fladd@a+3
 11210  000D' 082A'              	movf	___flsub@a+2,w
 11211  000E' 0086'              	movwf	___fladd@a+2
 11212  000F' 0829'              	movf	___flsub@a+1,w
 11213  0010' 0085'              	movwf	___fladd@a+1
 11214  0011' 0828'              	movf	___flsub@a,w
 11215  0012' 0084'              	movwf	___fladd@a
 11216  0013' 3180' 2000' 3180'  	fcall	___fladd
 11217  0016' 0020               	movlb	0	; select bank0
 11218  0017' 0803'              	movf	?___fladd+3,w
 11219  0018' 00AB'              	movwf	?___flsub+3
 11220  0019' 0802'              	movf	?___fladd+2,w
 11221  001A' 00AA'              	movwf	?___flsub+2
 11222  001B' 0801'              	movf	?___fladd+1,w
 11223  001C' 00A9'              	movwf	?___flsub+1
 11224  001D' 0800'              	movf	?___fladd,w
 11225  001E' 00A8'              	movwf	?___flsub
 11226  001F'                    l1214:
 11227  001F' 0008               	return
 11228  0020'                    __end_of___flsub:
 11229                           
 11230                           	psect	text46
 11231  0000'                    __ptext46:	
 11232 ;; *************** function ___fladd *****************
 11233 ;; Defined at:
 11234 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  b               4    0[BANK0 ] long 
 11237 ;;  a               4    4[BANK0 ] long 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  grs             1   19[BANK0 ] unsigned char 
 11240 ;;  bexp            1   18[BANK0 ] unsigned char 
 11241 ;;  aexp            1   17[BANK0 ] unsigned char 
 11242 ;;  signs           1   16[BANK0 ] unsigned char 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  4    0[BANK0 ] unsigned char 
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11252 ;;      Params:         0       8       0       0       0       0       0       0
 11253 ;;      Locals:         0       4       0       0       0       0       0       0
 11254 ;;      Temps:          0       8       0       0       0       0       0       0
 11255 ;;      Totals:         0      20       0       0       0       0       0       0
 11256 ;;Total ram usage:       20 bytes
 11257 ;; Hardware stack levels used: 1
 11258 ;; Hardware stack levels required when called: 7
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		___flsub
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266  0000'                    ___fladd:	
 11267                           ;psect for function ___fladd
 11268                           
 11269  0000'                    l3345:	
 11270                           ;incstack = 0
 11271                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11272                           
 11273  0000' 0020               	movlb	0	; select bank0
 11274  0001' 0803'              	movf	___fladd@b+3,w
 11275  0002' 3980               	andlw	128
 11276  0003' 0090'              	movwf	___fladd@signs
 11277  0004'                    l3347:
 11278  0004' 3503'              	lslf	___fladd@b+3,w
 11279  0005' 0092'              	movwf	___fladd@bexp
 11280  0006'                    l3349:
 11281  0006' 1F82'              	btfss	___fladd@b+2,7
 11282  0007' 2800'              	goto	u2741
 11283  0008' 2800'              	goto	u2740
 11284  0009'                    u2741:
 11285  0009' 2800'              	goto	l3353
 11286  000A'                    u2740:
 11287  000A'                    l3351:
 11288  000A' 1412'              	bsf	___fladd@bexp,0
 11289  000B'                    l3353:
 11290  000B' 0812'              	movf	___fladd@bexp,w
 11291  000C' 1903               	btfsc	3,2
 11292  000D' 2800'              	goto	u2751
 11293  000E' 2800'              	goto	u2750
 11294  000F'                    u2751:
 11295  000F' 2800'              	goto	l3363
 11296  0010'                    u2750:
 11297  0010'                    l3355:
 11298  0010' 0A12'              	incf	___fladd@bexp,w
 11299  0011' 1D03               	btfss	3,2
 11300  0012' 2800'              	goto	u2761
 11301  0013' 2800'              	goto	u2760
 11302  0014'                    u2761:
 11303  0014' 2800'              	goto	l3359
 11304  0015'                    u2760:
 11305  0015'                    l3357:
 11306  0015' 3000               	movlw	0
 11307  0016' 0083'              	movwf	___fladd@b+3
 11308  0017' 3000               	movlw	0
 11309  0018' 0082'              	movwf	___fladd@b+2
 11310  0019' 3000               	movlw	0
 11311  001A' 0081'              	movwf	___fladd@b+1
 11312  001B' 3000               	movlw	0
 11313  001C' 0080'              	movwf	___fladd@b
 11314  001D'                    l3359:
 11315  001D' 1782'              	bsf	___fladd@b+2,7
 11316  001E'                    l3361:
 11317  001E' 0183'              	clrf	___fladd@b+3
 11318  001F' 2800'              	goto	l3365
 11319  0020'                    l3363:
 11320  0020' 3000               	movlw	0
 11321  0021' 0083'              	movwf	___fladd@b+3
 11322  0022' 3000               	movlw	0
 11323  0023' 0082'              	movwf	___fladd@b+2
 11324  0024' 3000               	movlw	0
 11325  0025' 0081'              	movwf	___fladd@b+1
 11326  0026' 3000               	movlw	0
 11327  0027' 0080'              	movwf	___fladd@b
 11328  0028'                    l3365:
 11329  0028' 0807'              	movf	___fladd@a+3,w
 11330  0029' 3980               	andlw	128
 11331  002A' 0091'              	movwf	___fladd@aexp
 11332  002B'                    l3367:
 11333  002B' 0811'              	movf	___fladd@aexp,w
 11334  002C' 0610'              	xorwf	___fladd@signs,w
 11335  002D' 1903               	skipnz
 11336  002E' 2800'              	goto	u2771
 11337  002F' 2800'              	goto	u2770
 11338  0030'                    u2771:
 11339  0030' 2800'              	goto	l3371
 11340  0031'                    u2770:
 11341  0031'                    l3369:
 11342  0031' 1710'              	bsf	___fladd@signs,6
 11343  0032'                    l3371:
 11344  0032' 3507'              	lslf	___fladd@a+3,w
 11345  0033' 0091'              	movwf	___fladd@aexp
 11346  0034'                    l3373:
 11347  0034' 1F86'              	btfss	___fladd@a+2,7
 11348  0035' 2800'              	goto	u2781
 11349  0036' 2800'              	goto	u2780
 11350  0037'                    u2781:
 11351  0037' 2800'              	goto	l3377
 11352  0038'                    u2780:
 11353  0038'                    l3375:
 11354  0038' 1411'              	bsf	___fladd@aexp,0
 11355  0039'                    l3377:
 11356  0039' 0811'              	movf	___fladd@aexp,w
 11357  003A' 1903               	btfsc	3,2
 11358  003B' 2800'              	goto	u2791
 11359  003C' 2800'              	goto	u2790
 11360  003D'                    u2791:
 11361  003D' 2800'              	goto	l3387
 11362  003E'                    u2790:
 11363  003E'                    l3379:
 11364  003E' 0A11'              	incf	___fladd@aexp,w
 11365  003F' 1D03               	btfss	3,2
 11366  0040' 2800'              	goto	u2801
 11367  0041' 2800'              	goto	u2800
 11368  0042'                    u2801:
 11369  0042' 2800'              	goto	l3383
 11370  0043'                    u2800:
 11371  0043'                    l3381:
 11372  0043' 3000               	movlw	0
 11373  0044' 0087'              	movwf	___fladd@a+3
 11374  0045' 3000               	movlw	0
 11375  0046' 0086'              	movwf	___fladd@a+2
 11376  0047' 3000               	movlw	0
 11377  0048' 0085'              	movwf	___fladd@a+1
 11378  0049' 3000               	movlw	0
 11379  004A' 0084'              	movwf	___fladd@a
 11380  004B'                    l3383:
 11381  004B' 1786'              	bsf	___fladd@a+2,7
 11382  004C'                    l3385:
 11383  004C' 0187'              	clrf	___fladd@a+3
 11384  004D' 2800'              	goto	l1168
 11385  004E'                    l3387:
 11386  004E' 3000               	movlw	0
 11387  004F' 0087'              	movwf	___fladd@a+3
 11388  0050' 3000               	movlw	0
 11389  0051' 0086'              	movwf	___fladd@a+2
 11390  0052' 3000               	movlw	0
 11391  0053' 0085'              	movwf	___fladd@a+1
 11392  0054' 3000               	movlw	0
 11393  0055' 0084'              	movwf	___fladd@a
 11394  0056'                    l1168:
 11395  0056' 0812'              	movf	___fladd@bexp,w
 11396  0057' 0211'              	subwf	___fladd@aexp,w
 11397  0058' 1803               	skipnc
 11398  0059' 2800'              	goto	u2811
 11399  005A' 2800'              	goto	u2810
 11400  005B'                    u2811:
 11401  005B' 2800'              	goto	l3423
 11402  005C'                    u2810:
 11403  005C'                    l3389:
 11404  005C' 1F10'              	btfss	___fladd@signs,6
 11405  005D' 2800'              	goto	u2821
 11406  005E' 2800'              	goto	u2820
 11407  005F'                    u2821:
 11408  005F' 2800'              	goto	l3393
 11409  0060'                    u2820:
 11410  0060'                    l3391:
 11411  0060' 3080               	movlw	128
 11412  0061' 0088'              	movwf	??___fladd
 11413  0062' 0808'              	movf	??___fladd,w
 11414  0063' 0690'              	xorwf	___fladd@signs,f
 11415  0064'                    l3393:
 11416  0064' 0812'              	movf	___fladd@bexp,w
 11417  0065' 0093'              	movwf	___fladd@grs
 11418  0066'                    l3395:
 11419  0066' 0811'              	movf	___fladd@aexp,w
 11420  0067' 0092'              	movwf	___fladd@bexp
 11421  0068'                    l3397:
 11422  0068' 0813'              	movf	___fladd@grs,w
 11423  0069' 0091'              	movwf	___fladd@aexp
 11424  006A'                    l3399:
 11425  006A' 0800'              	movf	___fladd@b,w
 11426  006B' 0093'              	movwf	___fladd@grs
 11427  006C'                    l3401:
 11428  006C' 0804'              	movf	___fladd@a,w
 11429  006D' 0080'              	movwf	___fladd@b
 11430  006E'                    l3403:
 11431  006E' 0813'              	movf	___fladd@grs,w
 11432  006F' 0084'              	movwf	___fladd@a
 11433  0070'                    l3405:
 11434  0070' 0801'              	movf	___fladd@b+1,w
 11435  0071' 0093'              	movwf	___fladd@grs
 11436  0072'                    l3407:
 11437  0072' 0805'              	movf	___fladd@a+1,w
 11438  0073' 0081'              	movwf	___fladd@b+1
 11439  0074'                    l3409:
 11440  0074' 0813'              	movf	___fladd@grs,w
 11441  0075' 0085'              	movwf	___fladd@a+1
 11442  0076'                    l3411:
 11443  0076' 0802'              	movf	___fladd@b+2,w
 11444  0077' 0093'              	movwf	___fladd@grs
 11445  0078'                    l3413:
 11446  0078' 0806'              	movf	___fladd@a+2,w
 11447  0079' 0082'              	movwf	___fladd@b+2
 11448  007A'                    l3415:
 11449  007A' 0813'              	movf	___fladd@grs,w
 11450  007B' 0086'              	movwf	___fladd@a+2
 11451  007C'                    l3417:
 11452  007C' 0803'              	movf	___fladd@b+3,w
 11453  007D' 0093'              	movwf	___fladd@grs
 11454  007E'                    l3419:
 11455  007E' 0807'              	movf	___fladd@a+3,w
 11456  007F' 0083'              	movwf	___fladd@b+3
 11457  0080'                    l3421:
 11458  0080' 0813'              	movf	___fladd@grs,w
 11459  0081' 0087'              	movwf	___fladd@a+3
 11460  0082'                    l3423:
 11461  0082' 0193'              	clrf	___fladd@grs
 11462  0083'                    l3425:
 11463  0083' 0811'              	movf	___fladd@aexp,w
 11464  0084' 0088'              	movwf	??___fladd
 11465  0085' 0189'              	clrf	??___fladd+1
 11466  0086' 0809'              	movf	??___fladd+1,w
 11467  0087' 008B'              	movwf	??___fladd+3
 11468  0088' 0812'              	movf	___fladd@bexp,w
 11469  0089' 0208'              	subwf	??___fladd,w
 11470  008A' 008A'              	movwf	??___fladd+2
 11471  008B' 1C03               	skipc
 11472  008C' 038B'              	decf	??___fladd+3,f
 11473  008D' 080B'              	movf	??___fladd+3,w
 11474  008E' 3A80               	xorlw	128
 11475  008F' 008C'              	movwf	??___fladd+4
 11476  0090' 3080               	movlw	128
 11477  0091' 020C'              	subwf	??___fladd+4,w
 11478  0092' 1D03               	skipz
 11479  0093' 2800'              	goto	u2835
 11480  0094' 301A               	movlw	26
 11481  0095' 020A'              	subwf	??___fladd+2,w
 11482  0096'                    u2835:
 11483  0096' 1C03               	skipc
 11484  0097' 2800'              	goto	u2831
 11485  0098' 2800'              	goto	u2830
 11486  0099'                    u2831:
 11487  0099' 2800'              	goto	l3441
 11488  009A'                    u2830:
 11489  009A'                    l3427:
 11490  009A' 0020               	movlb	0	; select bank0
 11491  009B' 0803'              	movf	___fladd@b+3,w
 11492  009C' 0402'              	iorwf	___fladd@b+2,w
 11493  009D' 0401'              	iorwf	___fladd@b+1,w
 11494  009E' 0400'              	iorwf	___fladd@b,w
 11495  009F' 1D03               	skipz
 11496  00A0' 2800'              	goto	u2841
 11497  00A1' 2800'              	goto	u2840
 11498  00A2'                    u2841:
 11499  00A2' 3001               	movlw	1
 11500  00A3' 2800'              	goto	u2850
 11501  00A4'                    u2840:
 11502  00A4' 3000               	movlw	0
 11503  00A5'                    u2850:
 11504  00A5' 0093'              	movwf	___fladd@grs
 11505  00A6' 3000               	movlw	0
 11506  00A7' 0083'              	movwf	___fladd@b+3
 11507  00A8' 3000               	movlw	0
 11508  00A9' 0082'              	movwf	___fladd@b+2
 11509  00AA' 3000               	movlw	0
 11510  00AB' 0081'              	movwf	___fladd@b+1
 11511  00AC' 3000               	movlw	0
 11512  00AD' 0080'              	movwf	___fladd@b
 11513  00AE' 0811'              	movf	___fladd@aexp,w
 11514  00AF' 0092'              	movwf	___fladd@bexp
 11515  00B0' 2800'              	goto	l1172
 11516  00B1'                    l1174:
 11517  00B1' 1C13'              	btfss	___fladd@grs,0
 11518  00B2' 2800'              	goto	u2861
 11519  00B3' 2800'              	goto	u2860
 11520  00B4'                    u2861:
 11521  00B4' 2800'              	goto	l3431
 11522  00B5'                    u2860:
 11523  00B5'                    l3429:
 11524  00B5' 3613'              	lsrf	___fladd@grs,w
 11525  00B6' 3801               	iorlw	1
 11526  00B7' 0093'              	movwf	___fladd@grs
 11527  00B8' 2800'              	goto	l3433
 11528  00B9'                    l3431:
 11529  00B9' 1003               	clrc
 11530  00BA' 0C93'              	rrf	___fladd@grs,f
 11531  00BB'                    l3433:
 11532  00BB' 1C00'              	btfss	___fladd@b,0
 11533  00BC' 2800'              	goto	u2871
 11534  00BD' 2800'              	goto	u2870
 11535  00BE'                    u2871:
 11536  00BE' 2800'              	goto	l3437
 11537  00BF'                    u2870:
 11538  00BF'                    l3435:
 11539  00BF' 1793'              	bsf	___fladd@grs,7
 11540  00C0'                    l3437:
 11541  00C0' 3001               	movlw	1
 11542  00C1' 0088'              	movwf	??___fladd
 11543  00C2'                    u2885:
 11544  00C2' 3783'              	asrf	___fladd@b+3,f
 11545  00C3' 0C82'              	rrf	___fladd@b+2,f
 11546  00C4' 0C81'              	rrf	___fladd@b+1,f
 11547  00C5' 0C80'              	rrf	___fladd@b,f
 11548  00C6' 0B80'              	decfsz	??___fladd& (0+127),f
 11549  00C7' 2800'              	goto	u2885
 11550  00C8'                    l3439:
 11551  00C8' 3001               	movlw	1
 11552  00C9' 0088'              	movwf	??___fladd
 11553  00CA' 0808'              	movf	??___fladd,w
 11554  00CB' 0792'              	addwf	___fladd@bexp,f
 11555  00CC'                    l3441:
 11556  00CC' 0020               	movlb	0	; select bank0
 11557  00CD' 0811'              	movf	___fladd@aexp,w
 11558  00CE' 0212'              	subwf	___fladd@bexp,w
 11559  00CF' 1C03               	skipc
 11560  00D0' 2800'              	goto	u2891
 11561  00D1' 2800'              	goto	u2890
 11562  00D2'                    u2891:
 11563  00D2' 2800'              	goto	l1174
 11564  00D3'                    u2890:
 11565  00D3'                    l1172:
 11566  00D3' 1B10'              	btfsc	___fladd@signs,6
 11567  00D4' 2800'              	goto	u2901
 11568  00D5' 2800'              	goto	u2900
 11569  00D6'                    u2901:
 11570  00D6' 2800'              	goto	l3467
 11571  00D7'                    u2900:
 11572  00D7'                    l3443:
 11573  00D7' 0812'              	movf	___fladd@bexp,w
 11574  00D8' 1D03               	btfss	3,2
 11575  00D9' 2800'              	goto	u2911
 11576  00DA' 2800'              	goto	u2910
 11577  00DB'                    u2911:
 11578  00DB' 2800'              	goto	l3449
 11579  00DC'                    u2910:
 11580  00DC'                    l3445:
 11581  00DC' 3000               	movlw	0
 11582  00DD' 0083'              	movwf	?___fladd+3
 11583  00DE' 3000               	movlw	0
 11584  00DF' 0082'              	movwf	?___fladd+2
 11585  00E0' 3000               	movlw	0
 11586  00E1' 0081'              	movwf	?___fladd+1
 11587  00E2' 3000               	movlw	0
 11588  00E3' 0080'              	movwf	?___fladd
 11589  00E4' 2800'              	goto	l1181
 11590  00E5'                    l3449:
 11591  00E5' 0804'              	movf	___fladd@a,w
 11592  00E6' 0780'              	addwf	___fladd@b,f
 11593  00E7' 0805'              	movf	___fladd@a+1,w
 11594  00E8' 3D81'              	addwfc	___fladd@b+1,f
 11595  00E9' 0806'              	movf	___fladd@a+2,w
 11596  00EA' 3D82'              	addwfc	___fladd@b+2,f
 11597  00EB' 0807'              	movf	___fladd@a+3,w
 11598  00EC' 3D83'              	addwfc	___fladd@b+3,f
 11599  00ED'                    l3451:
 11600  00ED' 1C03'              	btfss	___fladd@b+3,0
 11601  00EE' 2800'              	goto	u2921
 11602  00EF' 2800'              	goto	u2920
 11603  00F0'                    u2921:
 11604  00F0' 2800'              	goto	l3501
 11605  00F1'                    u2920:
 11606  00F1'                    l3453:
 11607  00F1' 1C13'              	btfss	___fladd@grs,0
 11608  00F2' 2800'              	goto	u2931
 11609  00F3' 2800'              	goto	u2930
 11610  00F4'                    u2931:
 11611  00F4' 2800'              	goto	l3457
 11612  00F5'                    u2930:
 11613  00F5'                    l3455:
 11614  00F5' 3613'              	lsrf	___fladd@grs,w
 11615  00F6' 3801               	iorlw	1
 11616  00F7' 0093'              	movwf	___fladd@grs
 11617  00F8' 2800'              	goto	l3459
 11618  00F9'                    l3457:
 11619  00F9' 1003               	clrc
 11620  00FA' 0C93'              	rrf	___fladd@grs,f
 11621  00FB'                    l3459:
 11622  00FB' 1C00'              	btfss	___fladd@b,0
 11623  00FC' 2800'              	goto	u2941
 11624  00FD' 2800'              	goto	u2940
 11625  00FE'                    u2941:
 11626  00FE' 2800'              	goto	l3463
 11627  00FF'                    u2940:
 11628  00FF'                    l3461:
 11629  00FF' 1793'              	bsf	___fladd@grs,7
 11630  0100'                    l3463:
 11631  0100' 3001               	movlw	1
 11632  0101' 0088'              	movwf	??___fladd
 11633  0102'                    u2955:
 11634  0102' 3783'              	asrf	___fladd@b+3,f
 11635  0103' 0C82'              	rrf	___fladd@b+2,f
 11636  0104' 0C81'              	rrf	___fladd@b+1,f
 11637  0105' 0C80'              	rrf	___fladd@b,f
 11638  0106' 0B80'              	decfsz	??___fladd& (0+127),f
 11639  0107' 2800'              	goto	u2955
 11640  0108'                    l3465:
 11641  0108' 3001               	movlw	1
 11642  0109' 0088'              	movwf	??___fladd
 11643  010A' 0808'              	movf	??___fladd,w
 11644  010B' 0792'              	addwf	___fladd@bexp,f
 11645  010C' 2800'              	goto	l3501
 11646  010D'                    l3467:
 11647  010D' 0803'              	movf	___fladd@b+3,w
 11648  010E' 3A80               	xorlw	128
 11649  010F' 0088'              	movwf	??___fladd
 11650  0110' 0807'              	movf	___fladd@a+3,w
 11651  0111' 3A80               	xorlw	128
 11652  0112' 0208'              	subwf	??___fladd,w
 11653  0113' 1D03               	skipz
 11654  0114' 2800'              	goto	u2963
 11655  0115' 0806'              	movf	___fladd@a+2,w
 11656  0116' 0202'              	subwf	___fladd@b+2,w
 11657  0117' 1D03               	skipz
 11658  0118' 2800'              	goto	u2963
 11659  0119' 0805'              	movf	___fladd@a+1,w
 11660  011A' 0201'              	subwf	___fladd@b+1,w
 11661  011B' 1D03               	skipz
 11662  011C' 2800'              	goto	u2963
 11663  011D' 0804'              	movf	___fladd@a,w
 11664  011E' 0200'              	subwf	___fladd@b,w
 11665  011F'                    u2963:
 11666  011F' 1803               	skipnc
 11667  0120' 2800'              	goto	u2961
 11668  0121' 2800'              	goto	u2960
 11669  0122'                    u2961:
 11670  0122' 2800'              	goto	l3477
 11671  0123'                    u2960:
 11672  0123'                    l3469:
 11673  0123' 30FF               	movlw	255
 11674  0124' 0088'              	movwf	??___fladd
 11675  0125' 30FF               	movlw	255
 11676  0126' 0089'              	movwf	??___fladd+1
 11677  0127' 30FF               	movlw	255
 11678  0128' 008A'              	movwf	??___fladd+2
 11679  0129' 30FF               	movlw	255
 11680  012A' 008B'              	movwf	??___fladd+3
 11681  012B' 0800'              	movf	___fladd@b,w
 11682  012C' 0204'              	subwf	___fladd@a,w
 11683  012D' 008C'              	movwf	??___fladd+4
 11684  012E' 0801'              	movf	___fladd@b+1,w
 11685  012F' 3B05'              	subwfb	___fladd@a+1,w
 11686  0130' 008D'              	movwf	??___fladd+5
 11687  0131' 0802'              	movf	___fladd@b+2,w
 11688  0132' 3B06'              	subwfb	___fladd@a+2,w
 11689  0133' 008E'              	movwf	??___fladd+6
 11690  0134' 0803'              	movf	___fladd@b+3,w
 11691  0135' 3B07'              	subwfb	___fladd@a+3,w
 11692  0136' 008F'              	movwf	??___fladd+7
 11693  0137' 080C'              	movf	??___fladd+4,w
 11694  0138' 0788'              	addwf	??___fladd,f
 11695  0139' 080D'              	movf	??___fladd+5,w
 11696  013A' 3D89'              	addwfc	??___fladd+1,f
 11697  013B' 080E'              	movf	??___fladd+6,w
 11698  013C' 3D8A'              	addwfc	??___fladd+2,f
 11699  013D' 080F'              	movf	??___fladd+7,w
 11700  013E' 3D8B'              	addwfc	??___fladd+3,f
 11701  013F' 080B'              	movf	??___fladd+3,w
 11702  0140' 0083'              	movwf	___fladd@b+3
 11703  0141' 080A'              	movf	??___fladd+2,w
 11704  0142' 0082'              	movwf	___fladd@b+2
 11705  0143' 0809'              	movf	??___fladd+1,w
 11706  0144' 0081'              	movwf	___fladd@b+1
 11707  0145' 0808'              	movf	??___fladd,w
 11708  0146' 0080'              	movwf	___fladd@b
 11709  0147'                    l3471:
 11710  0147' 3080               	movlw	128
 11711  0148' 0088'              	movwf	??___fladd
 11712  0149' 0808'              	movf	??___fladd,w
 11713  014A' 0690'              	xorwf	___fladd@signs,f
 11714  014B' 0993'              	comf	___fladd@grs,f
 11715  014C' 0A93'              	incf	___fladd@grs,f
 11716  014D'                    l3473:
 11717  014D' 0813'              	movf	___fladd@grs,w
 11718  014E' 1D03               	btfss	3,2
 11719  014F' 2800'              	goto	u2971
 11720  0150' 2800'              	goto	u2970
 11721  0151'                    u2971:
 11722  0151' 2800'              	goto	l1189
 11723  0152'                    u2970:
 11724  0152'                    l3475:
 11725  0152' 3001               	movlw	1
 11726  0153' 0780'              	addwf	___fladd@b,f
 11727  0154' 3000               	movlw	0
 11728  0155' 3D81'              	addwfc	___fladd@b+1,f
 11729  0156' 3000               	movlw	0
 11730  0157' 3D82'              	addwfc	___fladd@b+2,f
 11731  0158' 3000               	movlw	0
 11732  0159' 3D83'              	addwfc	___fladd@b+3,f
 11733  015A' 2800'              	goto	l1189
 11734  015B'                    l3477:
 11735  015B' 0804'              	movf	___fladd@a,w
 11736  015C' 0280'              	subwf	___fladd@b,f
 11737  015D' 0805'              	movf	___fladd@a+1,w
 11738  015E' 3B81'              	subwfb	___fladd@b+1,f
 11739  015F' 0806'              	movf	___fladd@a+2,w
 11740  0160' 3B82'              	subwfb	___fladd@b+2,f
 11741  0161' 0807'              	movf	___fladd@a+3,w
 11742  0162' 3B83'              	subwfb	___fladd@b+3,f
 11743  0163'                    l1189:
 11744  0163' 0803'              	movf	___fladd@b+3,w
 11745  0164' 0402'              	iorwf	___fladd@b+2,w
 11746  0165' 0401'              	iorwf	___fladd@b+1,w
 11747  0166' 0400'              	iorwf	___fladd@b,w
 11748  0167' 1D03               	skipz
 11749  0168' 2800'              	goto	u2981
 11750  0169' 2800'              	goto	u2980
 11751  016A'                    u2981:
 11752  016A' 2800'              	goto	l3499
 11753  016B'                    u2980:
 11754  016B'                    l3479:
 11755  016B' 0813'              	movf	___fladd@grs,w
 11756  016C' 1D03               	btfss	3,2
 11757  016D' 2800'              	goto	u2991
 11758  016E' 2800'              	goto	u2990
 11759  016F'                    u2991:
 11760  016F' 2800'              	goto	l3499
 11761  0170'                    u2990:
 11762  0170'                    l3481:
 11763  0170' 3000               	movlw	0
 11764  0171' 0083'              	movwf	?___fladd+3
 11765  0172' 3000               	movlw	0
 11766  0173' 0082'              	movwf	?___fladd+2
 11767  0174' 3000               	movlw	0
 11768  0175' 0081'              	movwf	?___fladd+1
 11769  0176' 3000               	movlw	0
 11770  0177' 0080'              	movwf	?___fladd
 11771  0178' 2800'              	goto	l1181
 11772  0179'                    l3485:
 11773  0179' 3001               	movlw	1
 11774  017A'                    u3005:
 11775  017A' 3580'              	lslf	___fladd@b,f
 11776  017B' 0D81'              	rlf	___fladd@b+1,f
 11777  017C' 0D82'              	rlf	___fladd@b+2,f
 11778  017D' 0D83'              	rlf	___fladd@b+3,f
 11779  017E' 0B89               	decfsz	9,f
 11780  017F' 2800'              	goto	u3005
 11781  0180'                    l3487:
 11782  0180' 1F93'              	btfss	___fladd@grs,7
 11783  0181' 2800'              	goto	u3011
 11784  0182' 2800'              	goto	u3010
 11785  0183'                    u3011:
 11786  0183' 2800'              	goto	l1193
 11787  0184'                    u3010:
 11788  0184'                    l3489:
 11789  0184' 1400'              	bsf	___fladd@b,0
 11790  0185'                    l1193:
 11791  0185' 1C13'              	btfss	___fladd@grs,0
 11792  0186' 2800'              	goto	u3021
 11793  0187' 2800'              	goto	u3020
 11794  0188'                    u3021:
 11795  0188' 2800'              	goto	l3493
 11796  0189'                    u3020:
 11797  0189'                    l3491:
 11798  0189' 1403               	setc
 11799  018A' 0D93'              	rlf	___fladd@grs,f
 11800  018B' 2800'              	goto	l3495
 11801  018C'                    l3493:
 11802  018C' 1003               	clrc
 11803  018D' 0D93'              	rlf	___fladd@grs,f
 11804  018E'                    l3495:
 11805  018E' 0812'              	movf	___fladd@bexp,w
 11806  018F' 1903               	btfsc	3,2
 11807  0190' 2800'              	goto	u3031
 11808  0191' 2800'              	goto	u3030
 11809  0192'                    u3031:
 11810  0192' 2800'              	goto	l3499
 11811  0193'                    u3030:
 11812  0193'                    l3497:
 11813  0193' 3001               	movlw	1
 11814  0194' 0292'              	subwf	___fladd@bexp,f
 11815  0195'                    l3499:
 11816  0195' 1F82'              	btfss	___fladd@b+2,7
 11817  0196' 2800'              	goto	u3041
 11818  0197' 2800'              	goto	u3040
 11819  0198'                    u3041:
 11820  0198' 2800'              	goto	l3485
 11821  0199'                    u3040:
 11822  0199'                    l3501:
 11823  0199' 0191'              	clrf	___fladd@aexp
 11824  019A'                    l3503:
 11825  019A' 1F93'              	btfss	___fladd@grs,7
 11826  019B' 2800'              	goto	u3051
 11827  019C' 2800'              	goto	u3050
 11828  019D'                    u3051:
 11829  019D' 2800'              	goto	l3511
 11830  019E'                    u3050:
 11831  019E'                    l3505:
 11832  019E' 0813'              	movf	___fladd@grs,w
 11833  019F' 397F               	andlw	127
 11834  01A0' 1903               	btfsc	3,2
 11835  01A1' 2800'              	goto	u3061
 11836  01A2' 2800'              	goto	u3060
 11837  01A3'                    u3061:
 11838  01A3' 2800'              	goto	l1199
 11839  01A4'                    u3060:
 11840  01A4'                    l3507:
 11841  01A4' 0191'              	clrf	___fladd@aexp
 11842  01A5' 0A91'              	incf	___fladd@aexp,f
 11843  01A6' 2800'              	goto	l3511
 11844  01A7'                    l1199:
 11845  01A7' 1C00'              	btfss	___fladd@b,0
 11846  01A8' 2800'              	goto	u3071
 11847  01A9' 2800'              	goto	u3070
 11848  01AA'                    u3071:
 11849  01AA' 2800'              	goto	l3511
 11850  01AB'                    u3070:
 11851  01AB' 2800'              	goto	l3507
 11852  01AC'                    l3511:
 11853  01AC' 0811'              	movf	___fladd@aexp,w
 11854  01AD' 1903               	btfsc	3,2
 11855  01AE' 2800'              	goto	u3081
 11856  01AF' 2800'              	goto	u3080
 11857  01B0'                    u3081:
 11858  01B0' 2800'              	goto	l1202
 11859  01B1'                    u3080:
 11860  01B1'                    l3513:
 11861  01B1' 3001               	movlw	1
 11862  01B2' 0780'              	addwf	___fladd@b,f
 11863  01B3' 3000               	movlw	0
 11864  01B4' 3D81'              	addwfc	___fladd@b+1,f
 11865  01B5' 3000               	movlw	0
 11866  01B6' 3D82'              	addwfc	___fladd@b+2,f
 11867  01B7' 3000               	movlw	0
 11868  01B8' 3D83'              	addwfc	___fladd@b+3,f
 11869  01B9'                    l3515:
 11870  01B9' 1C03'              	btfss	___fladd@b+3,0
 11871  01BA' 2800'              	goto	u3091
 11872  01BB' 2800'              	goto	u3090
 11873  01BC'                    u3091:
 11874  01BC' 2800'              	goto	l1202
 11875  01BD'                    u3090:
 11876  01BD'                    l3517:
 11877  01BD' 0800'              	movf	___fladd@b,w
 11878  01BE' 0088'              	movwf	??___fladd
 11879  01BF' 0801'              	movf	___fladd@b+1,w
 11880  01C0' 0089'              	movwf	??___fladd+1
 11881  01C1' 0802'              	movf	___fladd@b+2,w
 11882  01C2' 008A'              	movwf	??___fladd+2
 11883  01C3' 0803'              	movf	___fladd@b+3,w
 11884  01C4' 008B'              	movwf	??___fladd+3
 11885  01C5' 3001               	movlw	1
 11886  01C6' 008C'              	movwf	??___fladd+4
 11887  01C7'                    u3105:
 11888  01C7' 378B'              	asrf	??___fladd+3,f
 11889  01C8' 0C8A'              	rrf	??___fladd+2,f
 11890  01C9' 0C89'              	rrf	??___fladd+1,f
 11891  01CA' 0C88'              	rrf	??___fladd,f
 11892  01CB'                    u3100:
 11893  01CB' 0B8C'              	decfsz	??___fladd+4,f
 11894  01CC' 2800'              	goto	u3105
 11895  01CD' 080B'              	movf	??___fladd+3,w
 11896  01CE' 0083'              	movwf	___fladd@b+3
 11897  01CF' 080A'              	movf	??___fladd+2,w
 11898  01D0' 0082'              	movwf	___fladd@b+2
 11899  01D1' 0809'              	movf	??___fladd+1,w
 11900  01D2' 0081'              	movwf	___fladd@b+1
 11901  01D3' 0808'              	movf	??___fladd,w
 11902  01D4' 0080'              	movwf	___fladd@b
 11903  01D5' 0A12'              	incf	___fladd@bexp,w
 11904  01D6' 1903               	btfsc	3,2
 11905  01D7' 2800'              	goto	u3111
 11906  01D8' 2800'              	goto	u3110
 11907  01D9'                    u3111:
 11908  01D9' 2800'              	goto	l1202
 11909  01DA'                    u3110:
 11910  01DA'                    l3519:
 11911  01DA' 3001               	movlw	1
 11912  01DB' 0088'              	movwf	??___fladd
 11913  01DC' 0808'              	movf	??___fladd,w
 11914  01DD' 0792'              	addwf	___fladd@bexp,f
 11915  01DE'                    l1202:
 11916  01DE' 0A12'              	incf	___fladd@bexp,w
 11917  01DF' 1903               	btfsc	3,2
 11918  01E0' 2800'              	goto	u3121
 11919  01E1' 2800'              	goto	u3120
 11920  01E2'                    u3121:
 11921  01E2' 2800'              	goto	l3523
 11922  01E3'                    u3120:
 11923  01E3'                    l3521:
 11924  01E3' 0812'              	movf	___fladd@bexp,w
 11925  01E4' 1D03               	btfss	3,2
 11926  01E5' 2800'              	goto	u3131
 11927  01E6' 2800'              	goto	u3130
 11928  01E7'                    u3131:
 11929  01E7' 2800'              	goto	l3529
 11930  01E8'                    u3130:
 11931  01E8'                    l3523:
 11932  01E8' 3000               	movlw	0
 11933  01E9' 0083'              	movwf	___fladd@b+3
 11934  01EA' 3000               	movlw	0
 11935  01EB' 0082'              	movwf	___fladd@b+2
 11936  01EC' 3000               	movlw	0
 11937  01ED' 0081'              	movwf	___fladd@b+1
 11938  01EE' 3000               	movlw	0
 11939  01EF' 0080'              	movwf	___fladd@b
 11940  01F0'                    l3525:
 11941  01F0' 0812'              	movf	___fladd@bexp,w
 11942  01F1' 1D03               	btfss	3,2
 11943  01F2' 2800'              	goto	u3141
 11944  01F3' 2800'              	goto	u3140
 11945  01F4'                    u3141:
 11946  01F4' 2800'              	goto	l3529
 11947  01F5'                    u3140:
 11948  01F5'                    l3527:
 11949  01F5' 0190'              	clrf	___fladd@signs
 11950  01F6'                    l3529:
 11951  01F6' 1C12'              	btfss	___fladd@bexp,0
 11952  01F7' 2800'              	goto	u3151
 11953  01F8' 2800'              	goto	u3150
 11954  01F9'                    u3151:
 11955  01F9' 2800'              	goto	l3533
 11956  01FA'                    u3150:
 11957  01FA'                    l3531:
 11958  01FA' 1782'              	bsf	___fladd@b+2,7
 11959  01FB' 2800'              	goto	l1210
 11960  01FC'                    l3533:
 11961  01FC' 307F               	movlw	127
 11962  01FD' 0088'              	movwf	??___fladd
 11963  01FE' 0808'              	movf	??___fladd,w
 11964  01FF' 0582'              	andwf	___fladd@b+2,f
 11965  0200'                    l1210:
 11966  0200' 3612'              	lsrf	___fladd@bexp,w
 11967  0201' 0083'              	movwf	___fladd@b+3
 11968  0202'                    l3535:
 11969  0202' 1F90'              	btfss	___fladd@signs,7
 11970  0203' 2800'              	goto	u3161
 11971  0204' 2800'              	goto	u3160
 11972  0205'                    u3161:
 11973  0205' 2800'              	goto	l1211
 11974  0206'                    u3160:
 11975  0206'                    l3537:
 11976  0206' 1783'              	bsf	___fladd@b+3,7
 11977  0207'                    l1211:
 11978  0207'                    l1181:
 11979  0207' 0008               	return
 11980  0208'                    __end_of___fladd:
 11981                           
 11982                           	psect	text47
 11983  0000'                    __ptext47:	
 11984 ;; *************** function ___flmul *****************
 11985 ;; Defined at:
 11986 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 11987 ;; Parameters:    Size  Location     Type
 11988 ;;  b               4   14[BANK0 ] unsigned char 
 11989 ;;  a               4   18[BANK0 ] unsigned char 
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;  prod            4   34[BANK0 ] struct .
 11992 ;;  grs             4   29[BANK0 ] unsigned long 
 11993 ;;  temp            2   38[BANK0 ] struct .
 11994 ;;  bexp            1   33[BANK0 ] unsigned char 
 11995 ;;  aexp            1   28[BANK0 ] unsigned char 
 11996 ;;  sign            1   27[BANK0 ] unsigned char 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  4   14[BANK0 ] unsigned char 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2, status,0, pclath, cstack
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12006 ;;      Params:         0       8       0       0       0       0       0       0
 12007 ;;      Locals:         0      13       0       0       0       0       0       0
 12008 ;;      Temps:          0       5       0       0       0       0       0       0
 12009 ;;      Totals:         0      26       0       0       0       0       0       0
 12010 ;;Total ram usage:       26 bytes
 12011 ;; Hardware stack levels used: 1
 12012 ;; Hardware stack levels required when called: 8
 12013 ;; This function calls:
 12014 ;;		__Umul8_16
 12015 ;; This function is called by:
 12016 ;;		_SSPA_getTemp
 12017 ;;		_SSPA_getPOut
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021  0000'                    ___flmul:	
 12022                           ;psect for function ___flmul
 12023                           
 12024  0000'                    l4935:	
 12025                           ;incstack = 0
 12026                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 12027                           
 12028  0000' 0020               	movlb	0	; select bank0
 12029  0001' 0811'              	movf	___flmul@b+3,w
 12030  0002' 3980               	andlw	128
 12031  0003' 009B'              	movwf	___flmul@sign
 12032  0004'                    l4937:
 12033  0004' 3511'              	lslf	___flmul@b+3,w
 12034  0005' 00A1'              	movwf	___flmul@bexp
 12035  0006'                    l4939:
 12036  0006' 1F90'              	btfss	___flmul@b+2,7
 12037  0007' 2800'              	goto	u5051
 12038  0008' 2800'              	goto	u5050
 12039  0009'                    u5051:
 12040  0009' 2800'              	goto	l4943
 12041  000A'                    u5050:
 12042  000A'                    l4941:
 12043  000A' 1421'              	bsf	___flmul@bexp,0
 12044  000B'                    l4943:
 12045  000B' 0821'              	movf	___flmul@bexp,w
 12046  000C' 1903               	btfsc	3,2
 12047  000D' 2800'              	goto	u5061
 12048  000E' 2800'              	goto	u5060
 12049  000F'                    u5061:
 12050  000F' 2800'              	goto	l4951
 12051  0010'                    u5060:
 12052  0010'                    l4945:
 12053  0010' 0A21'              	incf	___flmul@bexp,w
 12054  0011' 1D03               	btfss	3,2
 12055  0012' 2800'              	goto	u5071
 12056  0013' 2800'              	goto	u5070
 12057  0014'                    u5071:
 12058  0014' 2800'              	goto	l4949
 12059  0015'                    u5070:
 12060  0015'                    l4947:
 12061  0015' 3000               	movlw	0
 12062  0016' 0091'              	movwf	___flmul@b+3
 12063  0017' 3000               	movlw	0
 12064  0018' 0090'              	movwf	___flmul@b+2
 12065  0019' 3000               	movlw	0
 12066  001A' 008F'              	movwf	___flmul@b+1
 12067  001B' 3000               	movlw	0
 12068  001C' 008E'              	movwf	___flmul@b
 12069  001D'                    l4949:
 12070  001D' 1790'              	bsf	___flmul@b+2,7
 12071  001E' 2800'              	goto	l4953
 12072  001F'                    l4951:
 12073  001F' 3000               	movlw	0
 12074  0020' 0091'              	movwf	___flmul@b+3
 12075  0021' 3000               	movlw	0
 12076  0022' 0090'              	movwf	___flmul@b+2
 12077  0023' 3000               	movlw	0
 12078  0024' 008F'              	movwf	___flmul@b+1
 12079  0025' 3000               	movlw	0
 12080  0026' 008E'              	movwf	___flmul@b
 12081  0027'                    l4953:
 12082  0027' 0815'              	movf	___flmul@a+3,w
 12083  0028' 3980               	andlw	128
 12084  0029' 0096'              	movwf	??___flmul
 12085  002A' 0816'              	movf	??___flmul,w
 12086  002B' 069B'              	xorwf	___flmul@sign,f
 12087  002C'                    l4955:
 12088  002C' 3515'              	lslf	___flmul@a+3,w
 12089  002D' 009C'              	movwf	___flmul@aexp
 12090  002E'                    l4957:
 12091  002E' 1F94'              	btfss	___flmul@a+2,7
 12092  002F' 2800'              	goto	u5081
 12093  0030' 2800'              	goto	u5080
 12094  0031'                    u5081:
 12095  0031' 2800'              	goto	l4961
 12096  0032'                    u5080:
 12097  0032'                    l4959:
 12098  0032' 141C'              	bsf	___flmul@aexp,0
 12099  0033'                    l4961:
 12100  0033' 081C'              	movf	___flmul@aexp,w
 12101  0034' 1903               	btfsc	3,2
 12102  0035' 2800'              	goto	u5091
 12103  0036' 2800'              	goto	u5090
 12104  0037'                    u5091:
 12105  0037' 2800'              	goto	l4969
 12106  0038'                    u5090:
 12107  0038'                    l4963:
 12108  0038' 0A1C'              	incf	___flmul@aexp,w
 12109  0039' 1D03               	btfss	3,2
 12110  003A' 2800'              	goto	u5101
 12111  003B' 2800'              	goto	u5100
 12112  003C'                    u5101:
 12113  003C' 2800'              	goto	l4967
 12114  003D'                    u5100:
 12115  003D'                    l4965:
 12116  003D' 3000               	movlw	0
 12117  003E' 0095'              	movwf	___flmul@a+3
 12118  003F' 3000               	movlw	0
 12119  0040' 0094'              	movwf	___flmul@a+2
 12120  0041' 3000               	movlw	0
 12121  0042' 0093'              	movwf	___flmul@a+1
 12122  0043' 3000               	movlw	0
 12123  0044' 0092'              	movwf	___flmul@a
 12124  0045'                    l4967:
 12125  0045' 1794'              	bsf	___flmul@a+2,7
 12126  0046' 2800'              	goto	l4971
 12127  0047'                    l4969:
 12128  0047' 3000               	movlw	0
 12129  0048' 0095'              	movwf	___flmul@a+3
 12130  0049' 3000               	movlw	0
 12131  004A' 0094'              	movwf	___flmul@a+2
 12132  004B' 3000               	movlw	0
 12133  004C' 0093'              	movwf	___flmul@a+1
 12134  004D' 3000               	movlw	0
 12135  004E' 0092'              	movwf	___flmul@a
 12136  004F'                    l4971:
 12137  004F' 081C'              	movf	___flmul@aexp,w
 12138  0050' 1903               	btfsc	3,2
 12139  0051' 2800'              	goto	u5111
 12140  0052' 2800'              	goto	u5110
 12141  0053'                    u5111:
 12142  0053' 2800'              	goto	l4975
 12143  0054'                    u5110:
 12144  0054'                    l4973:
 12145  0054' 0821'              	movf	___flmul@bexp,w
 12146  0055' 1D03               	btfss	3,2
 12147  0056' 2800'              	goto	u5121
 12148  0057' 2800'              	goto	u5120
 12149  0058'                    u5121:
 12150  0058' 2800'              	goto	l4979
 12151  0059'                    u5120:
 12152  0059'                    l4975:
 12153  0059' 3000               	movlw	0
 12154  005A' 0091'              	movwf	?___flmul+3
 12155  005B' 3000               	movlw	0
 12156  005C' 0090'              	movwf	?___flmul+2
 12157  005D' 3000               	movlw	0
 12158  005E' 008F'              	movwf	?___flmul+1
 12159  005F' 3000               	movlw	0
 12160  0060' 008E'              	movwf	?___flmul
 12161  0061' 2800'              	goto	l1264
 12162  0062'                    l4979:
 12163  0062' 080E'              	movf	___flmul@b,w
 12164  0063' 0080'              	movwf	__Umul8_16@multiplicand
 12165  0064' 0814'              	movf	___flmul@a+2,w
 12166  0065' 3180' 2000' 3180'  	fcall	__Umul8_16
 12167  0068' 0020               	movlb	0	; select bank0
 12168  0069' 0801'              	movf	?__Umul8_16+1,w
 12169  006A' 00A7'              	movwf	___flmul@temp+1
 12170  006B' 0800'              	movf	?__Umul8_16,w
 12171  006C' 00A6'              	movwf	___flmul@temp
 12172  006D'                    l4981:
 12173  006D' 0826'              	movf	___flmul@temp,w
 12174  006E' 0096'              	movwf	??___flmul
 12175  006F' 0197'              	clrf	??___flmul+1
 12176  0070' 0198'              	clrf	??___flmul+2
 12177  0071' 0199'              	clrf	??___flmul+3
 12178  0072' 0819'              	movf	??___flmul+3,w
 12179  0073' 00A0'              	movwf	___flmul@grs+3
 12180  0074' 0818'              	movf	??___flmul+2,w
 12181  0075' 009F'              	movwf	___flmul@grs+2
 12182  0076' 0817'              	movf	??___flmul+1,w
 12183  0077' 009E'              	movwf	___flmul@grs+1
 12184  0078' 0816'              	movf	??___flmul,w
 12185  0079' 009D'              	movwf	___flmul@grs
 12186  007A'                    l4983:
 12187  007A' 0827'              	movf	___flmul@temp+1,w
 12188  007B' 0096'              	movwf	??___flmul
 12189  007C' 0197'              	clrf	??___flmul+1
 12190  007D' 0198'              	clrf	??___flmul+2
 12191  007E' 0199'              	clrf	??___flmul+3
 12192  007F' 0819'              	movf	??___flmul+3,w
 12193  0080' 00A5'              	movwf	___flmul@prod+3
 12194  0081' 0818'              	movf	??___flmul+2,w
 12195  0082' 00A4'              	movwf	___flmul@prod+2
 12196  0083' 0817'              	movf	??___flmul+1,w
 12197  0084' 00A3'              	movwf	___flmul@prod+1
 12198  0085' 0816'              	movf	??___flmul,w
 12199  0086' 00A2'              	movwf	___flmul@prod
 12200  0087' 080F'              	movf	___flmul@b+1,w
 12201  0088' 0080'              	movwf	__Umul8_16@multiplicand
 12202  0089' 0813'              	movf	___flmul@a+1,w
 12203  008A' 3180' 2000' 3180'  	fcall	__Umul8_16
 12204  008D' 0020               	movlb	0	; select bank0
 12205  008E' 0801'              	movf	?__Umul8_16+1,w
 12206  008F' 00A7'              	movwf	___flmul@temp+1
 12207  0090' 0800'              	movf	?__Umul8_16,w
 12208  0091' 00A6'              	movwf	___flmul@temp
 12209  0092'                    l4985:
 12210  0092' 0826'              	movf	___flmul@temp,w
 12211  0093' 0096'              	movwf	??___flmul
 12212  0094' 0197'              	clrf	??___flmul+1
 12213  0095' 0198'              	clrf	??___flmul+2
 12214  0096' 0199'              	clrf	??___flmul+3
 12215  0097' 0816'              	movf	??___flmul,w
 12216  0098' 079D'              	addwf	___flmul@grs,f
 12217  0099' 0817'              	movf	??___flmul+1,w
 12218  009A' 3D9E'              	addwfc	___flmul@grs+1,f
 12219  009B' 0818'              	movf	??___flmul+2,w
 12220  009C' 3D9F'              	addwfc	___flmul@grs+2,f
 12221  009D' 0819'              	movf	??___flmul+3,w
 12222  009E' 3DA0'              	addwfc	___flmul@grs+3,f
 12223  009F'                    l4987:
 12224  009F' 0827'              	movf	___flmul@temp+1,w
 12225  00A0' 0096'              	movwf	??___flmul
 12226  00A1' 0197'              	clrf	??___flmul+1
 12227  00A2' 0198'              	clrf	??___flmul+2
 12228  00A3' 0199'              	clrf	??___flmul+3
 12229  00A4' 0816'              	movf	??___flmul,w
 12230  00A5' 07A2'              	addwf	___flmul@prod,f
 12231  00A6' 0817'              	movf	??___flmul+1,w
 12232  00A7' 3DA3'              	addwfc	___flmul@prod+1,f
 12233  00A8' 0818'              	movf	??___flmul+2,w
 12234  00A9' 3DA4'              	addwfc	___flmul@prod+2,f
 12235  00AA' 0819'              	movf	??___flmul+3,w
 12236  00AB' 3DA5'              	addwfc	___flmul@prod+3,f
 12237  00AC' 0810'              	movf	___flmul@b+2,w
 12238  00AD' 0080'              	movwf	__Umul8_16@multiplicand
 12239  00AE' 0812'              	movf	___flmul@a,w
 12240  00AF' 3180' 2000' 3180'  	fcall	__Umul8_16
 12241  00B2' 0020               	movlb	0	; select bank0
 12242  00B3' 0801'              	movf	?__Umul8_16+1,w
 12243  00B4' 00A7'              	movwf	___flmul@temp+1
 12244  00B5' 0800'              	movf	?__Umul8_16,w
 12245  00B6' 00A6'              	movwf	___flmul@temp
 12246  00B7'                    l4989:
 12247  00B7' 0826'              	movf	___flmul@temp,w
 12248  00B8' 0096'              	movwf	??___flmul
 12249  00B9' 0197'              	clrf	??___flmul+1
 12250  00BA' 0198'              	clrf	??___flmul+2
 12251  00BB' 0199'              	clrf	??___flmul+3
 12252  00BC' 0816'              	movf	??___flmul,w
 12253  00BD' 079D'              	addwf	___flmul@grs,f
 12254  00BE' 0817'              	movf	??___flmul+1,w
 12255  00BF' 3D9E'              	addwfc	___flmul@grs+1,f
 12256  00C0' 0818'              	movf	??___flmul+2,w
 12257  00C1' 3D9F'              	addwfc	___flmul@grs+2,f
 12258  00C2' 0819'              	movf	??___flmul+3,w
 12259  00C3' 3DA0'              	addwfc	___flmul@grs+3,f
 12260  00C4'                    l4991:
 12261  00C4' 0827'              	movf	___flmul@temp+1,w
 12262  00C5' 0096'              	movwf	??___flmul
 12263  00C6' 0197'              	clrf	??___flmul+1
 12264  00C7' 0198'              	clrf	??___flmul+2
 12265  00C8' 0199'              	clrf	??___flmul+3
 12266  00C9' 0816'              	movf	??___flmul,w
 12267  00CA' 07A2'              	addwf	___flmul@prod,f
 12268  00CB' 0817'              	movf	??___flmul+1,w
 12269  00CC' 3DA3'              	addwfc	___flmul@prod+1,f
 12270  00CD' 0818'              	movf	??___flmul+2,w
 12271  00CE' 3DA4'              	addwfc	___flmul@prod+2,f
 12272  00CF' 0819'              	movf	??___flmul+3,w
 12273  00D0' 3DA5'              	addwfc	___flmul@prod+3,f
 12274  00D1'                    l4993:
 12275  00D1' 3008               	movlw	8
 12276  00D2'                    u5135:
 12277  00D2' 359D'              	lslf	___flmul@grs,f
 12278  00D3' 0D9E'              	rlf	___flmul@grs+1,f
 12279  00D4' 0D9F'              	rlf	___flmul@grs+2,f
 12280  00D5' 0DA0'              	rlf	___flmul@grs+3,f
 12281  00D6' 0B89               	decfsz	9,f
 12282  00D7' 2800'              	goto	u5135
 12283  00D8'                    l4995:
 12284  00D8' 080F'              	movf	___flmul@b+1,w
 12285  00D9' 0080'              	movwf	__Umul8_16@multiplicand
 12286  00DA' 0812'              	movf	___flmul@a,w
 12287  00DB' 3180' 2000' 3180'  	fcall	__Umul8_16
 12288  00DE' 0020               	movlb	0	; select bank0
 12289  00DF' 0801'              	movf	?__Umul8_16+1,w
 12290  00E0' 00A7'              	movwf	___flmul@temp+1
 12291  00E1' 0800'              	movf	?__Umul8_16,w
 12292  00E2' 00A6'              	movwf	___flmul@temp
 12293  00E3'                    l4997:
 12294  00E3' 0826'              	movf	___flmul@temp,w
 12295  00E4' 079D'              	addwf	___flmul@grs,f
 12296  00E5' 0827'              	movf	___flmul@temp+1,w
 12297  00E6' 3D9E'              	addwfc	___flmul@grs+1,f
 12298  00E7' 3000               	movlw	0
 12299  00E8' 3D9F'              	addwfc	___flmul@grs+2,f
 12300  00E9' 3DA0'              	addwfc	___flmul@grs+3,f
 12301  00EA'                    l4999:
 12302  00EA' 080E'              	movf	___flmul@b,w
 12303  00EB' 0080'              	movwf	__Umul8_16@multiplicand
 12304  00EC' 0813'              	movf	___flmul@a+1,w
 12305  00ED' 3180' 2000' 3180'  	fcall	__Umul8_16
 12306  00F0' 0020               	movlb	0	; select bank0
 12307  00F1' 0801'              	movf	?__Umul8_16+1,w
 12308  00F2' 00A7'              	movwf	___flmul@temp+1
 12309  00F3' 0800'              	movf	?__Umul8_16,w
 12310  00F4' 00A6'              	movwf	___flmul@temp
 12311  00F5'                    l5001:
 12312  00F5' 0826'              	movf	___flmul@temp,w
 12313  00F6' 079D'              	addwf	___flmul@grs,f
 12314  00F7' 0827'              	movf	___flmul@temp+1,w
 12315  00F8' 3D9E'              	addwfc	___flmul@grs+1,f
 12316  00F9' 3000               	movlw	0
 12317  00FA' 3D9F'              	addwfc	___flmul@grs+2,f
 12318  00FB' 3DA0'              	addwfc	___flmul@grs+3,f
 12319  00FC'                    l5003:
 12320  00FC' 3008               	movlw	8
 12321  00FD'                    u5145:
 12322  00FD' 359D'              	lslf	___flmul@grs,f
 12323  00FE' 0D9E'              	rlf	___flmul@grs+1,f
 12324  00FF' 0D9F'              	rlf	___flmul@grs+2,f
 12325  0100' 0DA0'              	rlf	___flmul@grs+3,f
 12326  0101' 0B89               	decfsz	9,f
 12327  0102' 2800'              	goto	u5145
 12328  0103' 080E'              	movf	___flmul@b,w
 12329  0104' 0080'              	movwf	__Umul8_16@multiplicand
 12330  0105' 0812'              	movf	___flmul@a,w
 12331  0106' 3180' 2000' 3180'  	fcall	__Umul8_16
 12332  0109' 0020               	movlb	0	; select bank0
 12333  010A' 0801'              	movf	?__Umul8_16+1,w
 12334  010B' 00A7'              	movwf	___flmul@temp+1
 12335  010C' 0800'              	movf	?__Umul8_16,w
 12336  010D' 00A6'              	movwf	___flmul@temp
 12337  010E'                    l5005:
 12338  010E' 0826'              	movf	___flmul@temp,w
 12339  010F' 079D'              	addwf	___flmul@grs,f
 12340  0110' 0827'              	movf	___flmul@temp+1,w
 12341  0111' 3D9E'              	addwfc	___flmul@grs+1,f
 12342  0112' 3000               	movlw	0
 12343  0113' 3D9F'              	addwfc	___flmul@grs+2,f
 12344  0114' 3DA0'              	addwfc	___flmul@grs+3,f
 12345  0115'                    l5007:
 12346  0115' 080F'              	movf	___flmul@b+1,w
 12347  0116' 0080'              	movwf	__Umul8_16@multiplicand
 12348  0117' 0814'              	movf	___flmul@a+2,w
 12349  0118' 3180' 2000' 3180'  	fcall	__Umul8_16
 12350  011B' 0020               	movlb	0	; select bank0
 12351  011C' 0801'              	movf	?__Umul8_16+1,w
 12352  011D' 00A7'              	movwf	___flmul@temp+1
 12353  011E' 0800'              	movf	?__Umul8_16,w
 12354  011F' 00A6'              	movwf	___flmul@temp
 12355  0120' 0826'              	movf	___flmul@temp,w
 12356  0121' 07A2'              	addwf	___flmul@prod,f
 12357  0122' 0827'              	movf	___flmul@temp+1,w
 12358  0123' 3DA3'              	addwfc	___flmul@prod+1,f
 12359  0124' 3000               	movlw	0
 12360  0125' 3DA4'              	addwfc	___flmul@prod+2,f
 12361  0126' 3DA5'              	addwfc	___flmul@prod+3,f
 12362  0127'                    l5009:
 12363  0127' 0810'              	movf	___flmul@b+2,w
 12364  0128' 0080'              	movwf	__Umul8_16@multiplicand
 12365  0129' 0813'              	movf	___flmul@a+1,w
 12366  012A' 3180' 2000' 3180'  	fcall	__Umul8_16
 12367  012D' 0020               	movlb	0	; select bank0
 12368  012E' 0801'              	movf	?__Umul8_16+1,w
 12369  012F' 00A7'              	movwf	___flmul@temp+1
 12370  0130' 0800'              	movf	?__Umul8_16,w
 12371  0131' 00A6'              	movwf	___flmul@temp
 12372  0132'                    l5011:
 12373  0132' 0826'              	movf	___flmul@temp,w
 12374  0133' 07A2'              	addwf	___flmul@prod,f
 12375  0134' 0827'              	movf	___flmul@temp+1,w
 12376  0135' 3DA3'              	addwfc	___flmul@prod+1,f
 12377  0136' 3000               	movlw	0
 12378  0137' 3DA4'              	addwfc	___flmul@prod+2,f
 12379  0138' 3DA5'              	addwfc	___flmul@prod+3,f
 12380  0139' 0810'              	movf	___flmul@b+2,w
 12381  013A' 0080'              	movwf	__Umul8_16@multiplicand
 12382  013B' 0814'              	movf	___flmul@a+2,w
 12383  013C' 3180' 2000' 3180'  	fcall	__Umul8_16
 12384  013F' 0020               	movlb	0	; select bank0
 12385  0140' 0801'              	movf	?__Umul8_16+1,w
 12386  0141' 00A7'              	movwf	___flmul@temp+1
 12387  0142' 0800'              	movf	?__Umul8_16,w
 12388  0143' 00A6'              	movwf	___flmul@temp
 12389  0144'                    l5013:
 12390  0144' 0826'              	movf	___flmul@temp,w
 12391  0145' 0096'              	movwf	??___flmul
 12392  0146' 0827'              	movf	___flmul@temp+1,w
 12393  0147' 0097'              	movwf	??___flmul+1
 12394  0148' 0198'              	clrf	??___flmul+2
 12395  0149' 0199'              	clrf	??___flmul+3
 12396  014A' 3008               	movlw	8
 12397  014B'                    u5155:
 12398  014B' 3596'              	lslf	??___flmul,f
 12399  014C' 0D97'              	rlf	??___flmul+1,f
 12400  014D' 0D98'              	rlf	??___flmul+2,f
 12401  014E' 0D99'              	rlf	??___flmul+3,f
 12402  014F'                    u5150:
 12403  014F' 0B89               	decfsz	9,f
 12404  0150' 2800'              	goto	u5155
 12405  0151' 0816'              	movf	??___flmul,w
 12406  0152' 07A2'              	addwf	___flmul@prod,f
 12407  0153' 0817'              	movf	??___flmul+1,w
 12408  0154' 3DA3'              	addwfc	___flmul@prod+1,f
 12409  0155' 0818'              	movf	??___flmul+2,w
 12410  0156' 3DA4'              	addwfc	___flmul@prod+2,f
 12411  0157' 0819'              	movf	??___flmul+3,w
 12412  0158' 3DA5'              	addwfc	___flmul@prod+3,f
 12413  0159'                    l5015:
 12414  0159' 081D'              	movf	___flmul@grs,w
 12415  015A' 0096'              	movwf	??___flmul
 12416  015B' 081E'              	movf	___flmul@grs+1,w
 12417  015C' 0097'              	movwf	??___flmul+1
 12418  015D' 081F'              	movf	___flmul@grs+2,w
 12419  015E' 0098'              	movwf	??___flmul+2
 12420  015F' 0820'              	movf	___flmul@grs+3,w
 12421  0160' 0099'              	movwf	??___flmul+3
 12422  0161' 3018               	movlw	24
 12423  0162'                    u5165:
 12424  0162' 3699'              	lsrf	??___flmul+3,f
 12425  0163' 0C98'              	rrf	??___flmul+2,f
 12426  0164' 0C97'              	rrf	??___flmul+1,f
 12427  0165' 0C96'              	rrf	??___flmul,f
 12428  0166'                    u5160:
 12429  0166' 0B89               	decfsz	9,f
 12430  0167' 2800'              	goto	u5165
 12431  0168' 0816'              	movf	??___flmul,w
 12432  0169' 07A2'              	addwf	___flmul@prod,f
 12433  016A' 0817'              	movf	??___flmul+1,w
 12434  016B' 3DA3'              	addwfc	___flmul@prod+1,f
 12435  016C' 0818'              	movf	??___flmul+2,w
 12436  016D' 3DA4'              	addwfc	___flmul@prod+2,f
 12437  016E' 0819'              	movf	??___flmul+3,w
 12438  016F' 3DA5'              	addwfc	___flmul@prod+3,f
 12439  0170'                    l5017:
 12440  0170' 3008               	movlw	8
 12441  0171'                    u5175:
 12442  0171' 359D'              	lslf	___flmul@grs,f
 12443  0172' 0D9E'              	rlf	___flmul@grs+1,f
 12444  0173' 0D9F'              	rlf	___flmul@grs+2,f
 12445  0174' 0DA0'              	rlf	___flmul@grs+3,f
 12446  0175' 0B89               	decfsz	9,f
 12447  0176' 2800'              	goto	u5175
 12448  0177'                    l5019:
 12449  0177' 0821'              	movf	___flmul@bexp,w
 12450  0178' 071C'              	addwf	___flmul@aexp,w
 12451  0179' 0096'              	movwf	??___flmul
 12452  017A' 0197'              	clrf	??___flmul+1
 12453  017B' 0D97'              	rlf	??___flmul+1,f
 12454  017C' 0816'              	movf	??___flmul,w
 12455  017D' 3E82               	addlw	130
 12456  017E' 00A6'              	movwf	___flmul@temp
 12457  017F' 30FF               	movlw	255
 12458  0180' 3D17'              	addwfc	??___flmul+1,w
 12459  0181' 00A7'              	movwf	___flmul@temp+1
 12460  0182' 2800'              	goto	l5031
 12461  0183'                    l5021:
 12462  0183' 3001               	movlw	1
 12463  0184'                    u5185:
 12464  0184' 35A2'              	lslf	___flmul@prod,f
 12465  0185' 0DA3'              	rlf	___flmul@prod+1,f
 12466  0186' 0DA4'              	rlf	___flmul@prod+2,f
 12467  0187' 0DA5'              	rlf	___flmul@prod+3,f
 12468  0188' 0B89               	decfsz	9,f
 12469  0189' 2800'              	goto	u5185
 12470  018A'                    l5023:
 12471  018A' 1FA0'              	btfss	___flmul@grs+3,7
 12472  018B' 2800'              	goto	u5191
 12473  018C' 2800'              	goto	u5190
 12474  018D'                    u5191:
 12475  018D' 2800'              	goto	l5027
 12476  018E'                    u5190:
 12477  018E'                    l5025:
 12478  018E' 1422'              	bsf	___flmul@prod,0
 12479  018F'                    l5027:
 12480  018F' 3001               	movlw	1
 12481  0190'                    u5205:
 12482  0190' 359D'              	lslf	___flmul@grs,f
 12483  0191' 0D9E'              	rlf	___flmul@grs+1,f
 12484  0192' 0D9F'              	rlf	___flmul@grs+2,f
 12485  0193' 0DA0'              	rlf	___flmul@grs+3,f
 12486  0194' 0B89               	decfsz	9,f
 12487  0195' 2800'              	goto	u5205
 12488  0196'                    l5029:
 12489  0196' 30FF               	movlw	255
 12490  0197' 07A6'              	addwf	___flmul@temp,f
 12491  0198' 30FF               	movlw	255
 12492  0199' 3DA7'              	addwfc	___flmul@temp+1,f
 12493  019A'                    l5031:
 12494  019A' 1FA4'              	btfss	___flmul@prod+2,7
 12495  019B' 2800'              	goto	u5211
 12496  019C' 2800'              	goto	u5210
 12497  019D'                    u5211:
 12498  019D' 2800'              	goto	l5021
 12499  019E'                    u5210:
 12500  019E'                    l5033:
 12501  019E' 019C'              	clrf	___flmul@aexp
 12502  019F'                    l5035:
 12503  019F' 1FA0'              	btfss	___flmul@grs+3,7
 12504  01A0' 2800'              	goto	u5221
 12505  01A1' 2800'              	goto	u5220
 12506  01A2'                    u5221:
 12507  01A2' 2800'              	goto	l5043
 12508  01A3'                    u5220:
 12509  01A3'                    l5037:
 12510  01A3' 30FF               	movlw	255
 12511  01A4' 051D'              	andwf	___flmul@grs,w
 12512  01A5' 0096'              	movwf	??___flmul
 12513  01A6' 30FF               	movlw	255
 12514  01A7' 051E'              	andwf	___flmul@grs+1,w
 12515  01A8' 0097'              	movwf	??___flmul+1
 12516  01A9' 30FF               	movlw	255
 12517  01AA' 051F'              	andwf	___flmul@grs+2,w
 12518  01AB' 0098'              	movwf	??___flmul+2
 12519  01AC' 307F               	movlw	127
 12520  01AD' 0520'              	andwf	___flmul@grs+3,w
 12521  01AE' 0099'              	movwf	??___flmul+3
 12522  01AF' 0819'              	movf	??___flmul+3,w
 12523  01B0' 0418'              	iorwf	??___flmul+2,w
 12524  01B1' 0417'              	iorwf	??___flmul+1,w
 12525  01B2' 0416'              	iorwf	??___flmul,w
 12526  01B3' 1903               	skipnz
 12527  01B4' 2800'              	goto	u5231
 12528  01B5' 2800'              	goto	u5230
 12529  01B6'                    u5231:
 12530  01B6' 2800'              	goto	l1270
 12531  01B7'                    u5230:
 12532  01B7'                    l5039:
 12533  01B7' 019C'              	clrf	___flmul@aexp
 12534  01B8' 0A9C'              	incf	___flmul@aexp,f
 12535  01B9' 2800'              	goto	l5043
 12536  01BA'                    l1270:
 12537  01BA' 1C22'              	btfss	___flmul@prod,0
 12538  01BB' 2800'              	goto	u5241
 12539  01BC' 2800'              	goto	u5240
 12540  01BD'                    u5241:
 12541  01BD' 2800'              	goto	l5043
 12542  01BE'                    u5240:
 12543  01BE' 2800'              	goto	l5039
 12544  01BF'                    l5043:
 12545  01BF' 081C'              	movf	___flmul@aexp,w
 12546  01C0' 1903               	btfsc	3,2
 12547  01C1' 2800'              	goto	u5251
 12548  01C2' 2800'              	goto	u5250
 12549  01C3'                    u5251:
 12550  01C3' 2800'              	goto	l5053
 12551  01C4'                    u5250:
 12552  01C4'                    l5045:
 12553  01C4' 3001               	movlw	1
 12554  01C5' 07A2'              	addwf	___flmul@prod,f
 12555  01C6' 3000               	movlw	0
 12556  01C7' 3DA3'              	addwfc	___flmul@prod+1,f
 12557  01C8' 3000               	movlw	0
 12558  01C9' 3DA4'              	addwfc	___flmul@prod+2,f
 12559  01CA' 3000               	movlw	0
 12560  01CB' 3DA5'              	addwfc	___flmul@prod+3,f
 12561  01CC'                    l5047:
 12562  01CC' 1C25'              	btfss	___flmul@prod+3,0
 12563  01CD' 2800'              	goto	u5261
 12564  01CE' 2800'              	goto	u5260
 12565  01CF'                    u5261:
 12566  01CF' 2800'              	goto	l5053
 12567  01D0'                    u5260:
 12568  01D0'                    l5049:
 12569  01D0' 0822'              	movf	___flmul@prod,w
 12570  01D1' 0096'              	movwf	??___flmul
 12571  01D2' 0823'              	movf	___flmul@prod+1,w
 12572  01D3' 0097'              	movwf	??___flmul+1
 12573  01D4' 0824'              	movf	___flmul@prod+2,w
 12574  01D5' 0098'              	movwf	??___flmul+2
 12575  01D6' 0825'              	movf	___flmul@prod+3,w
 12576  01D7' 0099'              	movwf	??___flmul+3
 12577  01D8' 3001               	movlw	1
 12578  01D9' 009A'              	movwf	??___flmul+4
 12579  01DA'                    u5275:
 12580  01DA' 3799'              	asrf	??___flmul+3,f
 12581  01DB' 0C98'              	rrf	??___flmul+2,f
 12582  01DC' 0C97'              	rrf	??___flmul+1,f
 12583  01DD' 0C96'              	rrf	??___flmul,f
 12584  01DE'                    u5270:
 12585  01DE' 0B9A'              	decfsz	??___flmul+4,f
 12586  01DF' 2800'              	goto	u5275
 12587  01E0' 0819'              	movf	??___flmul+3,w
 12588  01E1' 00A5'              	movwf	___flmul@prod+3
 12589  01E2' 0818'              	movf	??___flmul+2,w
 12590  01E3' 00A4'              	movwf	___flmul@prod+2
 12591  01E4' 0817'              	movf	??___flmul+1,w
 12592  01E5' 00A3'              	movwf	___flmul@prod+1
 12593  01E6' 0816'              	movf	??___flmul,w
 12594  01E7' 00A2'              	movwf	___flmul@prod
 12595  01E8'                    l5051:
 12596  01E8' 3001               	movlw	1
 12597  01E9' 07A6'              	addwf	___flmul@temp,f
 12598  01EA' 3000               	movlw	0
 12599  01EB' 3DA7'              	addwfc	___flmul@temp+1,f
 12600  01EC'                    l5053:
 12601  01EC' 0827'              	movf	___flmul@temp+1,w
 12602  01ED' 3A80               	xorlw	128
 12603  01EE' 0096'              	movwf	??___flmul
 12604  01EF' 3080               	movlw	128
 12605  01F0' 0216'              	subwf	??___flmul,w
 12606  01F1' 1D03               	skipz
 12607  01F2' 2800'              	goto	u5285
 12608  01F3' 30FF               	movlw	255
 12609  01F4' 0226'              	subwf	___flmul@temp,w
 12610  01F5'                    u5285:
 12611  01F5' 1C03               	skipc
 12612  01F6' 2800'              	goto	u5281
 12613  01F7' 2800'              	goto	u5280
 12614  01F8'                    u5281:
 12615  01F8' 2800'              	goto	l5057
 12616  01F9'                    u5280:
 12617  01F9'                    l5055:
 12618  01F9' 307F               	movlw	127
 12619  01FA' 0020               	movlb	0	; select bank0
 12620  01FB' 00A5'              	movwf	___flmul@prod+3
 12621  01FC' 3080               	movlw	128
 12622  01FD' 00A4'              	movwf	___flmul@prod+2
 12623  01FE' 3000               	movlw	0
 12624  01FF' 00A3'              	movwf	___flmul@prod+1
 12625  0200' 3000               	movlw	0
 12626  0201' 00A2'              	movwf	___flmul@prod
 12627  0202' 2800'              	goto	l1276
 12628  0203'                    l5057:
 12629  0203' 0020               	movlb	0	; select bank0
 12630  0204' 0827'              	movf	___flmul@temp+1,w
 12631  0205' 3A80               	xorlw	128
 12632  0206' 0096'              	movwf	??___flmul
 12633  0207' 3080               	movlw	128
 12634  0208' 0216'              	subwf	??___flmul,w
 12635  0209' 1D03               	skipz
 12636  020A' 2800'              	goto	u5295
 12637  020B' 3001               	movlw	1
 12638  020C' 0226'              	subwf	___flmul@temp,w
 12639  020D'                    u5295:
 12640  020D' 1803               	skipnc
 12641  020E' 2800'              	goto	u5291
 12642  020F' 2800'              	goto	u5290
 12643  0210'                    u5291:
 12644  0210' 2800'              	goto	l5063
 12645  0211'                    u5290:
 12646  0211'                    l5059:
 12647  0211' 3000               	movlw	0
 12648  0212' 0020               	movlb	0	; select bank0
 12649  0213' 00A5'              	movwf	___flmul@prod+3
 12650  0214' 3000               	movlw	0
 12651  0215' 00A4'              	movwf	___flmul@prod+2
 12652  0216' 3000               	movlw	0
 12653  0217' 00A3'              	movwf	___flmul@prod+1
 12654  0218' 3000               	movlw	0
 12655  0219' 00A2'              	movwf	___flmul@prod
 12656  021A'                    l5061:
 12657  021A' 019B'              	clrf	___flmul@sign
 12658  021B' 2800'              	goto	l1276
 12659  021C'                    l5063:
 12660  021C' 0020               	movlb	0	; select bank0
 12661  021D' 0826'              	movf	___flmul@temp,w
 12662  021E' 00A1'              	movwf	___flmul@bexp
 12663  021F' 30FF               	movlw	255
 12664  0220' 05A2'              	andwf	___flmul@prod,f
 12665  0221' 30FF               	movlw	255
 12666  0222' 05A3'              	andwf	___flmul@prod+1,f
 12667  0223' 307F               	movlw	127
 12668  0224' 05A4'              	andwf	___flmul@prod+2,f
 12669  0225' 3000               	movlw	0
 12670  0226' 05A5'              	andwf	___flmul@prod+3,f
 12671  0227'                    l5065:
 12672  0227' 1C21'              	btfss	___flmul@bexp,0
 12673  0228' 2800'              	goto	u5301
 12674  0229' 2800'              	goto	u5300
 12675  022A'                    u5301:
 12676  022A' 2800'              	goto	l5069
 12677  022B'                    u5300:
 12678  022B'                    l5067:
 12679  022B' 17A4'              	bsf	___flmul@prod+2,7
 12680  022C'                    l5069:
 12681  022C' 3621'              	lsrf	___flmul@bexp,w
 12682  022D' 00A5'              	movwf	___flmul@prod+3
 12683  022E'                    l1276:
 12684  022E' 081B'              	movf	___flmul@sign,w
 12685  022F' 0096'              	movwf	??___flmul
 12686  0230' 0816'              	movf	??___flmul,w
 12687  0231' 04A5'              	iorwf	___flmul@prod+3,f
 12688  0232'                    l5071:
 12689  0232' 0825'              	movf	___flmul@prod+3,w
 12690  0233' 0091'              	movwf	?___flmul+3
 12691  0234' 0824'              	movf	___flmul@prod+2,w
 12692  0235' 0090'              	movwf	?___flmul+2
 12693  0236' 0823'              	movf	___flmul@prod+1,w
 12694  0237' 008F'              	movwf	?___flmul+1
 12695  0238' 0822'              	movf	___flmul@prod,w
 12696  0239' 008E'              	movwf	?___flmul
 12697  023A'                    l1264:
 12698  023A' 0008               	return
 12699  023B'                    __end_of___flmul:
 12700                           
 12701                           	psect	text48
 12702  0000'                    __ptext48:	
 12703 ;; *************** function __Umul8_16 *****************
 12704 ;; Defined at:
 12705 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
 12706 ;; Parameters:    Size  Location     Type
 12707 ;;  multiplier      1    wreg     unsigned char 
 12708 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;  multiplier      1    8[BANK0 ] unsigned char 
 12711 ;;  word_mpld       2    6[BANK0 ] unsigned short 
 12712 ;;  product         2    4[BANK0 ] unsigned short 
 12713 ;; Return value:  Size  Location     Type
 12714 ;;                  2    0[BANK0 ] unsigned int 
 12715 ;; Registers used:
 12716 ;;		wreg, status,2, status,0
 12717 ;; Tracked objects:
 12718 ;;		On entry : 0/0
 12719 ;;		On exit  : 0/0
 12720 ;;		Unchanged: 0/0
 12721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12722 ;;      Params:         0       2       0       0       0       0       0       0
 12723 ;;      Locals:         0       5       0       0       0       0       0       0
 12724 ;;      Temps:          0       2       0       0       0       0       0       0
 12725 ;;      Totals:         0       9       0       0       0       0       0       0
 12726 ;;Total ram usage:        9 bytes
 12727 ;; Hardware stack levels used: 1
 12728 ;; Hardware stack levels required when called: 7
 12729 ;; This function calls:
 12730 ;;		Nothing
 12731 ;; This function is called by:
 12732 ;;		___flmul
 12733 ;; This function uses a non-reentrant model
 12734 ;;
 12735                           
 12736  0000'                    __Umul8_16:	
 12737                           ;psect for function __Umul8_16
 12738                           
 12739                           
 12740                           ;incstack = 0
 12741                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 12742                           ;__Umul8_16@multiplier stored from wreg
 12743  0000' 0020               	movlb	0	; select bank0
 12744  0001' 0088'              	movwf	__Umul8_16@multiplier
 12745  0002'                    l4885:
 12746  0002' 0184'              	clrf	__Umul8_16@product
 12747  0003' 0185'              	clrf	__Umul8_16@product+1
 12748  0004'                    l4887:
 12749  0004' 0800'              	movf	__Umul8_16@multiplicand,w
 12750  0005' 0082'              	movwf	??__Umul8_16
 12751  0006' 0183'              	clrf	??__Umul8_16+1
 12752  0007' 0802'              	movf	??__Umul8_16,w
 12753  0008' 0086'              	movwf	__Umul8_16@word_mpld
 12754  0009' 0803'              	movf	??__Umul8_16+1,w
 12755  000A' 0087'              	movwf	__Umul8_16@word_mpld+1
 12756  000B'                    l4889:
 12757  000B' 1C08'              	btfss	__Umul8_16@multiplier,0
 12758  000C' 2800'              	goto	u4991
 12759  000D' 2800'              	goto	u4990
 12760  000E'                    u4991:
 12761  000E' 2800'              	goto	l1283
 12762  000F'                    u4990:
 12763  000F'                    l4891:
 12764  000F' 0806'              	movf	__Umul8_16@word_mpld,w
 12765  0010' 0784'              	addwf	__Umul8_16@product,f
 12766  0011' 0807'              	movf	__Umul8_16@word_mpld+1,w
 12767  0012' 3D85'              	addwfc	__Umul8_16@product+1,f
 12768  0013'                    l1283:
 12769  0013' 3001               	movlw	1
 12770  0014'                    u5005:
 12771  0014' 3586'              	lslf	__Umul8_16@word_mpld,f
 12772  0015' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
 12773  0016' 0B89               	decfsz	9,f
 12774  0017' 2800'              	goto	u5005
 12775  0018' 1003               	clrc
 12776  0019' 0C88'              	rrf	__Umul8_16@multiplier,f
 12777  001A'                    l4893:
 12778  001A' 0808'              	movf	__Umul8_16@multiplier,w
 12779  001B' 1D03               	btfss	3,2
 12780  001C' 2800'              	goto	u5011
 12781  001D' 2800'              	goto	u5010
 12782  001E'                    u5011:
 12783  001E' 2800'              	goto	l4889
 12784  001F'                    u5010:
 12785  001F'                    l4895:
 12786  001F' 0805'              	movf	__Umul8_16@product+1,w
 12787  0020' 0081'              	movwf	?__Umul8_16+1
 12788  0021' 0804'              	movf	__Umul8_16@product,w
 12789  0022' 0080'              	movwf	?__Umul8_16
 12790  0023'                    l1285:
 12791  0023' 0008               	return
 12792  0024'                    __end_of__Umul8_16:
 12793                           
 12794                           	psect	text49
 12795  0000'                    __ptext49:	
 12796 ;; *************** function ___fldiv *****************
 12797 ;; Defined at:
 12798 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;  a               4   48[BANK0 ] unsigned int 
 12801 ;;  b               4   52[BANK0 ] unsigned int 
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;  grs             4   68[BANK0 ] unsigned long 
 12804 ;;  rem             4   61[BANK0 ] unsigned long 
 12805 ;;  new_exp         2   66[BANK0 ] short 
 12806 ;;  aexp            1   73[BANK0 ] unsigned char 
 12807 ;;  bexp            1   72[BANK0 ] unsigned char 
 12808 ;;  sign            1   65[BANK0 ] unsigned char 
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  4   48[BANK0 ] unsigned char 
 12811 ;; Registers used:
 12812 ;;		wreg, status,2, status,0
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12818 ;;      Params:         0       8       0       0       0       0       0       0
 12819 ;;      Locals:         0      13       0       0       0       0       0       0
 12820 ;;      Temps:          0       5       0       0       0       0       0       0
 12821 ;;      Totals:         0      26       0       0       0       0       0       0
 12822 ;;Total ram usage:       26 bytes
 12823 ;; Hardware stack levels used: 1
 12824 ;; Hardware stack levels required when called: 7
 12825 ;; This function calls:
 12826 ;;		Nothing
 12827 ;; This function is called by:
 12828 ;;		_SSPA_getTemp
 12829 ;;		_SSPA_getPOut
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833  0000'                    ___fldiv:	
 12834                           ;psect for function ___fldiv
 12835                           
 12836  0000'                    l3659:	
 12837                           ;incstack = 0
 12838                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12839                           
 12840  0000' 0020               	movlb	0	; select bank0
 12841  0001' 0837'              	movf	___fldiv@b+3,w
 12842  0002' 3980               	andlw	128
 12843  0003' 00C1'              	movwf	___fldiv@sign
 12844  0004'                    l3661:
 12845  0004' 3537'              	lslf	___fldiv@b+3,w
 12846  0005' 00C8'              	movwf	___fldiv@bexp
 12847  0006'                    l3663:
 12848  0006' 1FB6'              	btfss	___fldiv@b+2,7
 12849  0007' 2800'              	goto	u3331
 12850  0008' 2800'              	goto	u3330
 12851  0009'                    u3331:
 12852  0009' 2800'              	goto	l3667
 12853  000A'                    u3330:
 12854  000A'                    l3665:
 12855  000A' 1448'              	bsf	___fldiv@bexp,0
 12856  000B'                    l3667:
 12857  000B' 0848'              	movf	___fldiv@bexp,w
 12858  000C' 1903               	btfsc	3,2
 12859  000D' 2800'              	goto	u3341
 12860  000E' 2800'              	goto	u3340
 12861  000F'                    u3341:
 12862  000F' 2800'              	goto	l3677
 12863  0010'                    u3340:
 12864  0010'                    l3669:
 12865  0010' 0A48'              	incf	___fldiv@bexp,w
 12866  0011' 1D03               	btfss	3,2
 12867  0012' 2800'              	goto	u3351
 12868  0013' 2800'              	goto	u3350
 12869  0014'                    u3351:
 12870  0014' 2800'              	goto	l3673
 12871  0015'                    u3350:
 12872  0015'                    l3671:
 12873  0015' 3000               	movlw	0
 12874  0016' 00B7'              	movwf	___fldiv@b+3
 12875  0017' 3000               	movlw	0
 12876  0018' 00B6'              	movwf	___fldiv@b+2
 12877  0019' 3000               	movlw	0
 12878  001A' 00B5'              	movwf	___fldiv@b+1
 12879  001B' 3000               	movlw	0
 12880  001C' 00B4'              	movwf	___fldiv@b
 12881  001D'                    l3673:
 12882  001D' 17B6'              	bsf	___fldiv@b+2,7
 12883  001E'                    l3675:
 12884  001E' 01B7'              	clrf	___fldiv@b+3
 12885  001F' 2800'              	goto	l3679
 12886  0020'                    l3677:
 12887  0020' 3000               	movlw	0
 12888  0021' 00B7'              	movwf	___fldiv@b+3
 12889  0022' 3000               	movlw	0
 12890  0023' 00B6'              	movwf	___fldiv@b+2
 12891  0024' 3000               	movlw	0
 12892  0025' 00B5'              	movwf	___fldiv@b+1
 12893  0026' 3000               	movlw	0
 12894  0027' 00B4'              	movwf	___fldiv@b
 12895  0028'                    l3679:
 12896  0028' 0833'              	movf	___fldiv@a+3,w
 12897  0029' 3980               	andlw	128
 12898  002A' 00B8'              	movwf	??___fldiv
 12899  002B' 0838'              	movf	??___fldiv,w
 12900  002C' 06C1'              	xorwf	___fldiv@sign,f
 12901  002D'                    l3681:
 12902  002D' 3533'              	lslf	___fldiv@a+3,w
 12903  002E' 00C9'              	movwf	___fldiv@aexp
 12904  002F'                    l3683:
 12905  002F' 1FB2'              	btfss	___fldiv@a+2,7
 12906  0030' 2800'              	goto	u3361
 12907  0031' 2800'              	goto	u3360
 12908  0032'                    u3361:
 12909  0032' 2800'              	goto	l3687
 12910  0033'                    u3360:
 12911  0033'                    l3685:
 12912  0033' 1449'              	bsf	___fldiv@aexp,0
 12913  0034'                    l3687:
 12914  0034' 0849'              	movf	___fldiv@aexp,w
 12915  0035' 1903               	btfsc	3,2
 12916  0036' 2800'              	goto	u3371
 12917  0037' 2800'              	goto	u3370
 12918  0038'                    u3371:
 12919  0038' 2800'              	goto	l3697
 12920  0039'                    u3370:
 12921  0039'                    l3689:
 12922  0039' 0A49'              	incf	___fldiv@aexp,w
 12923  003A' 1D03               	btfss	3,2
 12924  003B' 2800'              	goto	u3381
 12925  003C' 2800'              	goto	u3380
 12926  003D'                    u3381:
 12927  003D' 2800'              	goto	l3693
 12928  003E'                    u3380:
 12929  003E'                    l3691:
 12930  003E' 3000               	movlw	0
 12931  003F' 00B3'              	movwf	___fldiv@a+3
 12932  0040' 3000               	movlw	0
 12933  0041' 00B2'              	movwf	___fldiv@a+2
 12934  0042' 3000               	movlw	0
 12935  0043' 00B1'              	movwf	___fldiv@a+1
 12936  0044' 3000               	movlw	0
 12937  0045' 00B0'              	movwf	___fldiv@a
 12938  0046'                    l3693:
 12939  0046' 17B2'              	bsf	___fldiv@a+2,7
 12940  0047'                    l3695:
 12941  0047' 01B3'              	clrf	___fldiv@a+3
 12942  0048' 2800'              	goto	l1224
 12943  0049'                    l3697:
 12944  0049' 3000               	movlw	0
 12945  004A' 00B3'              	movwf	___fldiv@a+3
 12946  004B' 3000               	movlw	0
 12947  004C' 00B2'              	movwf	___fldiv@a+2
 12948  004D' 3000               	movlw	0
 12949  004E' 00B1'              	movwf	___fldiv@a+1
 12950  004F' 3000               	movlw	0
 12951  0050' 00B0'              	movwf	___fldiv@a
 12952  0051'                    l1224:
 12953  0051' 0833'              	movf	___fldiv@a+3,w
 12954  0052' 0432'              	iorwf	___fldiv@a+2,w
 12955  0053' 0431'              	iorwf	___fldiv@a+1,w
 12956  0054' 0430'              	iorwf	___fldiv@a,w
 12957  0055' 1D03               	skipz
 12958  0056' 2800'              	goto	u3391
 12959  0057' 2800'              	goto	u3390
 12960  0058'                    u3391:
 12961  0058' 2800'              	goto	l3707
 12962  0059'                    u3390:
 12963  0059'                    l3699:
 12964  0059' 3000               	movlw	0
 12965  005A' 00B7'              	movwf	___fldiv@b+3
 12966  005B' 3000               	movlw	0
 12967  005C' 00B6'              	movwf	___fldiv@b+2
 12968  005D' 3000               	movlw	0
 12969  005E' 00B5'              	movwf	___fldiv@b+1
 12970  005F' 3000               	movlw	0
 12971  0060' 00B4'              	movwf	___fldiv@b
 12972  0061' 3080               	movlw	128
 12973  0062' 04B6'              	iorwf	___fldiv@b+2,f
 12974  0063' 307F               	movlw	127
 12975  0064' 04B7'              	iorwf	___fldiv@b+3,f
 12976  0065'                    l3701:
 12977  0065' 0841'              	movf	___fldiv@sign,w
 12978  0066' 00B8'              	movwf	??___fldiv
 12979  0067' 0838'              	movf	??___fldiv,w
 12980  0068' 04B7'              	iorwf	___fldiv@b+3,f
 12981  0069'                    l3703:
 12982  0069' 0837'              	movf	___fldiv@b+3,w
 12983  006A' 00B3'              	movwf	?___fldiv+3
 12984  006B' 0836'              	movf	___fldiv@b+2,w
 12985  006C' 00B2'              	movwf	?___fldiv+2
 12986  006D' 0835'              	movf	___fldiv@b+1,w
 12987  006E' 00B1'              	movwf	?___fldiv+1
 12988  006F' 0834'              	movf	___fldiv@b,w
 12989  0070' 00B0'              	movwf	?___fldiv
 12990  0071' 2800'              	goto	l1226
 12991  0072'                    l3707:
 12992  0072' 0848'              	movf	___fldiv@bexp,w
 12993  0073' 1D03               	btfss	3,2
 12994  0074' 2800'              	goto	u3401
 12995  0075' 2800'              	goto	u3400
 12996  0076'                    u3401:
 12997  0076' 2800'              	goto	l3713
 12998  0077'                    u3400:
 12999  0077'                    l3709:
 13000  0077' 3000               	movlw	0
 13001  0078' 00B3'              	movwf	?___fldiv+3
 13002  0079' 3000               	movlw	0
 13003  007A' 00B2'              	movwf	?___fldiv+2
 13004  007B' 3000               	movlw	0
 13005  007C' 00B1'              	movwf	?___fldiv+1
 13006  007D' 3000               	movlw	0
 13007  007E' 00B0'              	movwf	?___fldiv
 13008  007F' 2800'              	goto	l1226
 13009  0080'                    l3713:
 13010  0080' 0848'              	movf	___fldiv@bexp,w
 13011  0081' 00B8'              	movwf	??___fldiv
 13012  0082' 01B9'              	clrf	??___fldiv+1
 13013  0083' 0839'              	movf	??___fldiv+1,w
 13014  0084' 00BB'              	movwf	??___fldiv+3
 13015  0085' 0849'              	movf	___fldiv@aexp,w
 13016  0086' 0238'              	subwf	??___fldiv,w
 13017  0087' 00BA'              	movwf	??___fldiv+2
 13018  0088' 1C03               	skipc
 13019  0089' 03BB'              	decf	??___fldiv+3,f
 13020  008A' 083A'              	movf	??___fldiv+2,w
 13021  008B' 3E7F               	addlw	127
 13022  008C' 00C2'              	movwf	___fldiv@new_exp
 13023  008D' 3000               	movlw	0
 13024  008E' 3D3B'              	addwfc	??___fldiv+3,w
 13025  008F' 00C3'              	movwf	___fldiv@new_exp+1
 13026  0090'                    l3715:
 13027  0090' 0837'              	movf	___fldiv@b+3,w
 13028  0091' 00C0'              	movwf	___fldiv@rem+3
 13029  0092' 0836'              	movf	___fldiv@b+2,w
 13030  0093' 00BF'              	movwf	___fldiv@rem+2
 13031  0094' 0835'              	movf	___fldiv@b+1,w
 13032  0095' 00BE'              	movwf	___fldiv@rem+1
 13033  0096' 0834'              	movf	___fldiv@b,w
 13034  0097' 00BD'              	movwf	___fldiv@rem
 13035  0098'                    l3717:
 13036  0098' 3000               	movlw	0
 13037  0099' 00B7'              	movwf	___fldiv@b+3
 13038  009A' 3000               	movlw	0
 13039  009B' 00B6'              	movwf	___fldiv@b+2
 13040  009C' 3000               	movlw	0
 13041  009D' 00B5'              	movwf	___fldiv@b+1
 13042  009E' 3000               	movlw	0
 13043  009F' 00B4'              	movwf	___fldiv@b
 13044  00A0'                    l3719:
 13045  00A0' 3000               	movlw	0
 13046  00A1' 00C7'              	movwf	___fldiv@grs+3
 13047  00A2' 3000               	movlw	0
 13048  00A3' 00C6'              	movwf	___fldiv@grs+2
 13049  00A4' 3000               	movlw	0
 13050  00A5' 00C5'              	movwf	___fldiv@grs+1
 13051  00A6' 3000               	movlw	0
 13052  00A7' 00C4'              	movwf	___fldiv@grs
 13053  00A8'                    l3721:
 13054  00A8' 01C9'              	clrf	___fldiv@aexp
 13055  00A9' 2800'              	goto	l3741
 13056  00AA'                    l3723:
 13057  00AA' 0849'              	movf	___fldiv@aexp,w
 13058  00AB' 1903               	btfsc	3,2
 13059  00AC' 2800'              	goto	u3411
 13060  00AD' 2800'              	goto	u3410
 13061  00AE'                    u3411:
 13062  00AE' 2800'              	goto	l3733
 13063  00AF'                    u3410:
 13064  00AF'                    l3725:
 13065  00AF' 3001               	movlw	1
 13066  00B0'                    u3425:
 13067  00B0' 35BD'              	lslf	___fldiv@rem,f
 13068  00B1' 0DBE'              	rlf	___fldiv@rem+1,f
 13069  00B2' 0DBF'              	rlf	___fldiv@rem+2,f
 13070  00B3' 0DC0'              	rlf	___fldiv@rem+3,f
 13071  00B4' 0B89               	decfsz	9,f
 13072  00B5' 2800'              	goto	u3425
 13073  00B6' 3001               	movlw	1
 13074  00B7'                    u3435:
 13075  00B7' 35B4'              	lslf	___fldiv@b,f
 13076  00B8' 0DB5'              	rlf	___fldiv@b+1,f
 13077  00B9' 0DB6'              	rlf	___fldiv@b+2,f
 13078  00BA' 0DB7'              	rlf	___fldiv@b+3,f
 13079  00BB' 0B89               	decfsz	9,f
 13080  00BC' 2800'              	goto	u3435
 13081  00BD'                    l3727:
 13082  00BD' 1FC7'              	btfss	___fldiv@grs+3,7
 13083  00BE' 2800'              	goto	u3441
 13084  00BF' 2800'              	goto	u3440
 13085  00C0'                    u3441:
 13086  00C0' 2800'              	goto	l3731
 13087  00C1'                    u3440:
 13088  00C1'                    l3729:
 13089  00C1' 1434'              	bsf	___fldiv@b,0
 13090  00C2'                    l3731:
 13091  00C2' 3001               	movlw	1
 13092  00C3'                    u3455:
 13093  00C3' 35C4'              	lslf	___fldiv@grs,f
 13094  00C4' 0DC5'              	rlf	___fldiv@grs+1,f
 13095  00C5' 0DC6'              	rlf	___fldiv@grs+2,f
 13096  00C6' 0DC7'              	rlf	___fldiv@grs+3,f
 13097  00C7' 0B89               	decfsz	9,f
 13098  00C8' 2800'              	goto	u3455
 13099  00C9'                    l3733:
 13100  00C9' 0833'              	movf	___fldiv@a+3,w
 13101  00CA' 0240'              	subwf	___fldiv@rem+3,w
 13102  00CB' 1D03               	skipz
 13103  00CC' 2800'              	goto	u3465
 13104  00CD' 0832'              	movf	___fldiv@a+2,w
 13105  00CE' 023F'              	subwf	___fldiv@rem+2,w
 13106  00CF' 1D03               	skipz
 13107  00D0' 2800'              	goto	u3465
 13108  00D1' 0831'              	movf	___fldiv@a+1,w
 13109  00D2' 023E'              	subwf	___fldiv@rem+1,w
 13110  00D3' 1D03               	skipz
 13111  00D4' 2800'              	goto	u3465
 13112  00D5' 0830'              	movf	___fldiv@a,w
 13113  00D6' 023D'              	subwf	___fldiv@rem,w
 13114  00D7'                    u3465:
 13115  00D7' 1C03               	skipc
 13116  00D8' 2800'              	goto	u3461
 13117  00D9' 2800'              	goto	u3460
 13118  00DA'                    u3461:
 13119  00DA' 2800'              	goto	l3739
 13120  00DB'                    u3460:
 13121  00DB'                    l3735:
 13122  00DB' 1747'              	bsf	___fldiv@grs+3,6
 13123  00DC'                    l3737:
 13124  00DC' 0830'              	movf	___fldiv@a,w
 13125  00DD' 02BD'              	subwf	___fldiv@rem,f
 13126  00DE' 0831'              	movf	___fldiv@a+1,w
 13127  00DF' 3BBE'              	subwfb	___fldiv@rem+1,f
 13128  00E0' 0832'              	movf	___fldiv@a+2,w
 13129  00E1' 3BBF'              	subwfb	___fldiv@rem+2,f
 13130  00E2' 0833'              	movf	___fldiv@a+3,w
 13131  00E3' 3BC0'              	subwfb	___fldiv@rem+3,f
 13132  00E4'                    l3739:
 13133  00E4' 3001               	movlw	1
 13134  00E5' 00B8'              	movwf	??___fldiv
 13135  00E6' 0838'              	movf	??___fldiv,w
 13136  00E7' 07C9'              	addwf	___fldiv@aexp,f
 13137  00E8'                    l3741:
 13138  00E8' 301A               	movlw	26
 13139  00E9' 0249'              	subwf	___fldiv@aexp,w
 13140  00EA' 1C03               	skipc
 13141  00EB' 2800'              	goto	u3471
 13142  00EC' 2800'              	goto	u3470
 13143  00ED'                    u3471:
 13144  00ED' 2800'              	goto	l3723
 13145  00EE'                    u3470:
 13146  00EE'                    l3743:
 13147  00EE' 0840'              	movf	___fldiv@rem+3,w
 13148  00EF' 043F'              	iorwf	___fldiv@rem+2,w
 13149  00F0' 043E'              	iorwf	___fldiv@rem+1,w
 13150  00F1' 043D'              	iorwf	___fldiv@rem,w
 13151  00F2' 1903               	skipnz
 13152  00F3' 2800'              	goto	u3481
 13153  00F4' 2800'              	goto	u3480
 13154  00F5'                    u3481:
 13155  00F5' 2800'              	goto	l3757
 13156  00F6'                    u3480:
 13157  00F6'                    l3745:
 13158  00F6' 1444'              	bsf	___fldiv@grs,0
 13159  00F7' 2800'              	goto	l3757
 13160  00F8'                    l3747:
 13161  00F8' 3001               	movlw	1
 13162  00F9'                    u3495:
 13163  00F9' 35B4'              	lslf	___fldiv@b,f
 13164  00FA' 0DB5'              	rlf	___fldiv@b+1,f
 13165  00FB' 0DB6'              	rlf	___fldiv@b+2,f
 13166  00FC' 0DB7'              	rlf	___fldiv@b+3,f
 13167  00FD' 0B89               	decfsz	9,f
 13168  00FE' 2800'              	goto	u3495
 13169  00FF'                    l3749:
 13170  00FF' 1FC7'              	btfss	___fldiv@grs+3,7
 13171  0100' 2800'              	goto	u3501
 13172  0101' 2800'              	goto	u3500
 13173  0102'                    u3501:
 13174  0102' 2800'              	goto	l3753
 13175  0103'                    u3500:
 13176  0103'                    l3751:
 13177  0103' 1434'              	bsf	___fldiv@b,0
 13178  0104'                    l3753:
 13179  0104' 3001               	movlw	1
 13180  0105'                    u3515:
 13181  0105' 35C4'              	lslf	___fldiv@grs,f
 13182  0106' 0DC5'              	rlf	___fldiv@grs+1,f
 13183  0107' 0DC6'              	rlf	___fldiv@grs+2,f
 13184  0108' 0DC7'              	rlf	___fldiv@grs+3,f
 13185  0109' 0B89               	decfsz	9,f
 13186  010A' 2800'              	goto	u3515
 13187  010B'                    l3755:
 13188  010B' 30FF               	movlw	255
 13189  010C' 07C2'              	addwf	___fldiv@new_exp,f
 13190  010D' 30FF               	movlw	255
 13191  010E' 3DC3'              	addwfc	___fldiv@new_exp+1,f
 13192  010F'                    l3757:
 13193  010F' 1FB6'              	btfss	___fldiv@b+2,7
 13194  0110' 2800'              	goto	u3521
 13195  0111' 2800'              	goto	u3520
 13196  0112'                    u3521:
 13197  0112' 2800'              	goto	l3747
 13198  0113'                    u3520:
 13199  0113'                    l3759:
 13200  0113' 01C9'              	clrf	___fldiv@aexp
 13201  0114'                    l3761:
 13202  0114' 1FC7'              	btfss	___fldiv@grs+3,7
 13203  0115' 2800'              	goto	u3531
 13204  0116' 2800'              	goto	u3530
 13205  0117'                    u3531:
 13206  0117' 2800'              	goto	l3769
 13207  0118'                    u3530:
 13208  0118'                    l3763:
 13209  0118' 30FF               	movlw	255
 13210  0119' 0544'              	andwf	___fldiv@grs,w
 13211  011A' 00B8'              	movwf	??___fldiv
 13212  011B' 30FF               	movlw	255
 13213  011C' 0545'              	andwf	___fldiv@grs+1,w
 13214  011D' 00B9'              	movwf	??___fldiv+1
 13215  011E' 30FF               	movlw	255
 13216  011F' 0546'              	andwf	___fldiv@grs+2,w
 13217  0120' 00BA'              	movwf	??___fldiv+2
 13218  0121' 307F               	movlw	127
 13219  0122' 0547'              	andwf	___fldiv@grs+3,w
 13220  0123' 00BB'              	movwf	??___fldiv+3
 13221  0124' 083B'              	movf	??___fldiv+3,w
 13222  0125' 043A'              	iorwf	??___fldiv+2,w
 13223  0126' 0439'              	iorwf	??___fldiv+1,w
 13224  0127' 0438'              	iorwf	??___fldiv,w
 13225  0128' 1903               	skipnz
 13226  0129' 2800'              	goto	u3541
 13227  012A' 2800'              	goto	u3540
 13228  012B'                    u3541:
 13229  012B' 2800'              	goto	l1240
 13230  012C'                    u3540:
 13231  012C'                    l3765:
 13232  012C' 01C9'              	clrf	___fldiv@aexp
 13233  012D' 0AC9'              	incf	___fldiv@aexp,f
 13234  012E' 2800'              	goto	l3769
 13235  012F'                    l1240:
 13236  012F' 1C34'              	btfss	___fldiv@b,0
 13237  0130' 2800'              	goto	u3551
 13238  0131' 2800'              	goto	u3550
 13239  0132'                    u3551:
 13240  0132' 2800'              	goto	l3769
 13241  0133'                    u3550:
 13242  0133' 2800'              	goto	l3765
 13243  0134'                    l3769:
 13244  0134' 0849'              	movf	___fldiv@aexp,w
 13245  0135' 1903               	btfsc	3,2
 13246  0136' 2800'              	goto	u3561
 13247  0137' 2800'              	goto	u3560
 13248  0138'                    u3561:
 13249  0138' 2800'              	goto	l3779
 13250  0139'                    u3560:
 13251  0139'                    l3771:
 13252  0139' 3001               	movlw	1
 13253  013A' 07B4'              	addwf	___fldiv@b,f
 13254  013B' 3000               	movlw	0
 13255  013C' 3DB5'              	addwfc	___fldiv@b+1,f
 13256  013D' 3000               	movlw	0
 13257  013E' 3DB6'              	addwfc	___fldiv@b+2,f
 13258  013F' 3000               	movlw	0
 13259  0140' 3DB7'              	addwfc	___fldiv@b+3,f
 13260  0141'                    l3773:
 13261  0141' 1C37'              	btfss	___fldiv@b+3,0
 13262  0142' 2800'              	goto	u3571
 13263  0143' 2800'              	goto	u3570
 13264  0144'                    u3571:
 13265  0144' 2800'              	goto	l3779
 13266  0145'                    u3570:
 13267  0145'                    l3775:
 13268  0145' 0834'              	movf	___fldiv@b,w
 13269  0146' 00B8'              	movwf	??___fldiv
 13270  0147' 0835'              	movf	___fldiv@b+1,w
 13271  0148' 00B9'              	movwf	??___fldiv+1
 13272  0149' 0836'              	movf	___fldiv@b+2,w
 13273  014A' 00BA'              	movwf	??___fldiv+2
 13274  014B' 0837'              	movf	___fldiv@b+3,w
 13275  014C' 00BB'              	movwf	??___fldiv+3
 13276  014D' 3001               	movlw	1
 13277  014E' 00BC'              	movwf	??___fldiv+4
 13278  014F'                    u3585:
 13279  014F' 37BB'              	asrf	??___fldiv+3,f
 13280  0150' 0CBA'              	rrf	??___fldiv+2,f
 13281  0151' 0CB9'              	rrf	??___fldiv+1,f
 13282  0152' 0CB8'              	rrf	??___fldiv,f
 13283  0153'                    u3580:
 13284  0153' 0BBC'              	decfsz	??___fldiv+4,f
 13285  0154' 2800'              	goto	u3585
 13286  0155' 083B'              	movf	??___fldiv+3,w
 13287  0156' 00B7'              	movwf	___fldiv@b+3
 13288  0157' 083A'              	movf	??___fldiv+2,w
 13289  0158' 00B6'              	movwf	___fldiv@b+2
 13290  0159' 0839'              	movf	??___fldiv+1,w
 13291  015A' 00B5'              	movwf	___fldiv@b+1
 13292  015B' 0838'              	movf	??___fldiv,w
 13293  015C' 00B4'              	movwf	___fldiv@b
 13294  015D'                    l3777:
 13295  015D' 3001               	movlw	1
 13296  015E' 07C2'              	addwf	___fldiv@new_exp,f
 13297  015F' 3000               	movlw	0
 13298  0160' 3DC3'              	addwfc	___fldiv@new_exp+1,f
 13299  0161'                    l3779:
 13300  0161' 0843'              	movf	___fldiv@new_exp+1,w
 13301  0162' 3A80               	xorlw	128
 13302  0163' 00B8'              	movwf	??___fldiv
 13303  0164' 3080               	movlw	128
 13304  0165' 0238'              	subwf	??___fldiv,w
 13305  0166' 1D03               	skipz
 13306  0167' 2800'              	goto	u3595
 13307  0168' 30FF               	movlw	255
 13308  0169' 0242'              	subwf	___fldiv@new_exp,w
 13309  016A'                    u3595:
 13310  016A' 1C03               	skipc
 13311  016B' 2800'              	goto	u3591
 13312  016C' 2800'              	goto	u3590
 13313  016D'                    u3591:
 13314  016D' 2800'              	goto	l1245
 13315  016E'                    u3590:
 13316  016E'                    l3781:
 13317  016E' 30FF               	movlw	255
 13318  016F' 0020               	movlb	0	; select bank0
 13319  0170' 00C2'              	movwf	___fldiv@new_exp
 13320  0171' 3000               	movlw	0
 13321  0172' 00C3'              	movwf	___fldiv@new_exp+1
 13322  0173' 3000               	movlw	0
 13323  0174' 00B7'              	movwf	___fldiv@b+3
 13324  0175' 3000               	movlw	0
 13325  0176' 00B6'              	movwf	___fldiv@b+2
 13326  0177' 3000               	movlw	0
 13327  0178' 00B5'              	movwf	___fldiv@b+1
 13328  0179' 3000               	movlw	0
 13329  017A' 00B4'              	movwf	___fldiv@b
 13330  017B'                    l1245:
 13331  017B' 0020               	movlb	0	; select bank0
 13332  017C' 0843'              	movf	___fldiv@new_exp+1,w
 13333  017D' 3A80               	xorlw	128
 13334  017E' 00B8'              	movwf	??___fldiv
 13335  017F' 3080               	movlw	128
 13336  0180' 0238'              	subwf	??___fldiv,w
 13337  0181' 1D03               	skipz
 13338  0182' 2800'              	goto	u3605
 13339  0183' 3001               	movlw	1
 13340  0184' 0242'              	subwf	___fldiv@new_exp,w
 13341  0185'                    u3605:
 13342  0185' 1803               	skipnc
 13343  0186' 2800'              	goto	u3601
 13344  0187' 2800'              	goto	u3600
 13345  0188'                    u3601:
 13346  0188' 2800'              	goto	l1246
 13347  0189'                    u3600:
 13348  0189'                    l3783:
 13349  0189' 0020               	movlb	0	; select bank0
 13350  018A' 01C2'              	clrf	___fldiv@new_exp
 13351  018B' 01C3'              	clrf	___fldiv@new_exp+1
 13352  018C'                    l3785:
 13353  018C' 3000               	movlw	0
 13354  018D' 00B7'              	movwf	___fldiv@b+3
 13355  018E' 3000               	movlw	0
 13356  018F' 00B6'              	movwf	___fldiv@b+2
 13357  0190' 3000               	movlw	0
 13358  0191' 00B5'              	movwf	___fldiv@b+1
 13359  0192' 3000               	movlw	0
 13360  0193' 00B4'              	movwf	___fldiv@b
 13361  0194'                    l3787:
 13362  0194' 01C1'              	clrf	___fldiv@sign
 13363  0195'                    l1246:
 13364  0195' 0020               	movlb	0	; select bank0
 13365  0196' 0842'              	movf	___fldiv@new_exp,w
 13366  0197' 00C8'              	movwf	___fldiv@bexp
 13367  0198'                    l3789:
 13368  0198' 1C48'              	btfss	___fldiv@bexp,0
 13369  0199' 2800'              	goto	u3611
 13370  019A' 2800'              	goto	u3610
 13371  019B'                    u3611:
 13372  019B' 2800'              	goto	l3793
 13373  019C'                    u3610:
 13374  019C'                    l3791:
 13375  019C' 17B6'              	bsf	___fldiv@b+2,7
 13376  019D' 2800'              	goto	l1248
 13377  019E'                    l3793:
 13378  019E' 307F               	movlw	127
 13379  019F' 00B8'              	movwf	??___fldiv
 13380  01A0' 0838'              	movf	??___fldiv,w
 13381  01A1' 05B6'              	andwf	___fldiv@b+2,f
 13382  01A2'                    l1248:
 13383  01A2' 3648'              	lsrf	___fldiv@bexp,w
 13384  01A3' 00B7'              	movwf	___fldiv@b+3
 13385  01A4' 0841'              	movf	___fldiv@sign,w
 13386  01A5' 00B8'              	movwf	??___fldiv
 13387  01A6' 0838'              	movf	??___fldiv,w
 13388  01A7' 04B7'              	iorwf	___fldiv@b+3,f
 13389  01A8' 2800'              	goto	l3703
 13390  01A9'                    l1226:
 13391  01A9' 0008               	return
 13392  01AA'                    __end_of___fldiv:
 13393                           
 13394                           	psect	text50
 13395  0000'                    __ptext50:	
 13396 ;; *************** function _KAPS_setRelPos *****************
 13397 ;; Defined at:
 13398 ;;		line 369 in file "main.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;  kaps            1    wreg     PTR struct .
 13401 ;;		 -> kaps(7), 
 13402 ;;  offset          4   13[BANK0 ] unsigned long 
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;  kaps            1   17[BANK0 ] PTR struct .
 13405 ;;		 -> kaps(7), 
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      void 
 13408 ;; Registers used:
 13409 ;;		wreg
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13415 ;;      Params:         0       4       0       0       0       0       0       0
 13416 ;;      Locals:         0       1       0       0       0       0       0       0
 13417 ;;      Temps:          0       0       0       0       0       0       0       0
 13418 ;;      Totals:         0       5       0       0       0       0       0       0
 13419 ;;Total ram usage:        5 bytes
 13420 ;; Hardware stack levels used: 1
 13421 ;; Hardware stack levels required when called: 7
 13422 ;; This function calls:
 13423 ;;		Nothing
 13424 ;; This function is called by:
 13425 ;;		_ProcessMsg
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429  0000'                    _KAPS_setRelPos:	
 13430                           ;psect for function _KAPS_setRelPos
 13431                           
 13432  0000'                    l725:	
 13433                           ;incstack = 0
 13434                           ; Regs used in _KAPS_setRelPos: [wreg]
 13435                           
 13436  0000' 0008               	return
 13437  0001'                    __end_of_KAPS_setRelPos:
 13438                           
 13439                           	psect	text51
 13440  0000'                    __ptext51:	
 13441 ;; *************** function _KAPS_setAbsPos *****************
 13442 ;; Defined at:
 13443 ;;		line 358 in file "main.c"
 13444 ;; Parameters:    Size  Location     Type
 13445 ;;  kaps            1    wreg     PTR struct .
 13446 ;;		 -> kaps(7), 
 13447 ;;  pos             4   13[BANK0 ] unsigned long 
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;  kaps            1   17[BANK0 ] PTR struct .
 13450 ;;		 -> kaps(7), 
 13451 ;; Return value:  Size  Location     Type
 13452 ;;                  1    wreg      void 
 13453 ;; Registers used:
 13454 ;;		wreg
 13455 ;; Tracked objects:
 13456 ;;		On entry : 0/0
 13457 ;;		On exit  : 0/0
 13458 ;;		Unchanged: 0/0
 13459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13460 ;;      Params:         0       4       0       0       0       0       0       0
 13461 ;;      Locals:         0       1       0       0       0       0       0       0
 13462 ;;      Temps:          0       0       0       0       0       0       0       0
 13463 ;;      Totals:         0       5       0       0       0       0       0       0
 13464 ;;Total ram usage:        5 bytes
 13465 ;; Hardware stack levels used: 1
 13466 ;; Hardware stack levels required when called: 7
 13467 ;; This function calls:
 13468 ;;		Nothing
 13469 ;; This function is called by:
 13470 ;;		_ProcessMsg
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474  0000'                    _KAPS_setAbsPos:	
 13475                           ;psect for function _KAPS_setAbsPos
 13476                           
 13477  0000'                    l722:	
 13478                           ;incstack = 0
 13479                           ; Regs used in _KAPS_setAbsPos: [wreg]
 13480                           
 13481  0000' 0008               	return
 13482  0001'                    __end_of_KAPS_setAbsPos:
 13483                           
 13484                           	psect	text52
 13485  0000'                    __ptext52:	
 13486 ;; *************** function _KAPS_getStatus *****************
 13487 ;; Defined at:
 13488 ;;		line 391 in file "main.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  kaps            1    wreg     PTR struct .
 13491 ;;		 -> kaps(7), 
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;  kaps            1    0[BANK0 ] PTR struct .
 13494 ;;		 -> kaps(7), 
 13495 ;; Return value:  Size  Location     Type
 13496 ;;                  1    wreg      void 
 13497 ;; Registers used:
 13498 ;;		wreg
 13499 ;; Tracked objects:
 13500 ;;		On entry : 0/0
 13501 ;;		On exit  : 0/0
 13502 ;;		Unchanged: 0/0
 13503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13504 ;;      Params:         0       0       0       0       0       0       0       0
 13505 ;;      Locals:         0       1       0       0       0       0       0       0
 13506 ;;      Temps:          0       0       0       0       0       0       0       0
 13507 ;;      Totals:         0       1       0       0       0       0       0       0
 13508 ;;Total ram usage:        1 bytes
 13509 ;; Hardware stack levels used: 1
 13510 ;; Hardware stack levels required when called: 7
 13511 ;; This function calls:
 13512 ;;		Nothing
 13513 ;; This function is called by:
 13514 ;;		_ProcessMsg
 13515 ;; This function uses a non-reentrant model
 13516 ;;
 13517                           
 13518  0000'                    _KAPS_getStatus:	
 13519                           ;psect for function _KAPS_getStatus
 13520                           
 13521  0000'                    l731:	
 13522                           ;incstack = 0
 13523                           ; Regs used in _KAPS_getStatus: [wreg]
 13524                           
 13525  0000' 0008               	return
 13526  0001'                    __end_of_KAPS_getStatus:
 13527                           
 13528                           	psect	text53
 13529  0000'                    __ptext53:	
 13530 ;; *************** function _KAPS_getPos *****************
 13531 ;; Defined at:
 13532 ;;		line 407 in file "main.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;  kaps            1    wreg     PTR struct .
 13535 ;;		 -> kaps(7), 
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  kaps            1    0[BANK0 ] PTR struct .
 13538 ;;		 -> kaps(7), 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		wreg
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13548 ;;      Params:         0       0       0       0       0       0       0       0
 13549 ;;      Locals:         0       1       0       0       0       0       0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0
 13551 ;;      Totals:         0       1       0       0       0       0       0       0
 13552 ;;Total ram usage:        1 bytes
 13553 ;; Hardware stack levels used: 1
 13554 ;; Hardware stack levels required when called: 7
 13555 ;; This function calls:
 13556 ;;		Nothing
 13557 ;; This function is called by:
 13558 ;;		_ProcessMsg
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562  0000'                    _KAPS_getPos:	
 13563                           ;psect for function _KAPS_getPos
 13564                           
 13565  0000'                    l737:	
 13566                           ;incstack = 0
 13567                           ; Regs used in _KAPS_getPos: [wreg]
 13568                           
 13569  0000' 0008               	return
 13570  0001'                    __end_of_KAPS_getPos:
 13571                           
 13572                           	psect	text54
 13573  0000'                    __ptext54:	
 13574 ;; *************** function _KAPS_getIndex *****************
 13575 ;; Defined at:
 13576 ;;		line 399 in file "main.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;  kaps            1    wreg     PTR struct .
 13579 ;;		 -> kaps(7), 
 13580 ;; Auto vars:     Size  Location     Type
 13581 ;;  kaps            1    0[BANK0 ] PTR struct .
 13582 ;;		 -> kaps(7), 
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		wreg
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13592 ;;      Params:         0       0       0       0       0       0       0       0
 13593 ;;      Locals:         0       1       0       0       0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0
 13595 ;;      Totals:         0       1       0       0       0       0       0       0
 13596 ;;Total ram usage:        1 bytes
 13597 ;; Hardware stack levels used: 1
 13598 ;; Hardware stack levels required when called: 7
 13599 ;; This function calls:
 13600 ;;		Nothing
 13601 ;; This function is called by:
 13602 ;;		_ProcessMsg
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606  0000'                    _KAPS_getIndex:	
 13607                           ;psect for function _KAPS_getIndex
 13608                           
 13609  0000'                    l734:	
 13610                           ;incstack = 0
 13611                           ; Regs used in _KAPS_getIndex: [wreg]
 13612                           
 13613  0000' 0008               	return
 13614  0001'                    __end_of_KAPS_getIndex:
 13615                           
 13616                           	psect	text55
 13617  0000'                    __ptext55:	
 13618 ;; *************** function _KAPS_StorePos *****************
 13619 ;; Defined at:
 13620 ;;		line 381 in file "main.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;  kaps            1    wreg     PTR struct .
 13623 ;;		 -> kaps(7), 
 13624 ;;  idx             1   13[BANK0 ] unsigned char 
 13625 ;;  pos             4   14[BANK0 ] unsigned long 
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;  kaps            1   18[BANK0 ] PTR struct .
 13628 ;;		 -> kaps(7), 
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		wreg
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13638 ;;      Params:         0       5       0       0       0       0       0       0
 13639 ;;      Locals:         0       1       0       0       0       0       0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0
 13641 ;;      Totals:         0       6       0       0       0       0       0       0
 13642 ;;Total ram usage:        6 bytes
 13643 ;; Hardware stack levels used: 1
 13644 ;; Hardware stack levels required when called: 7
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_ProcessMsg
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652  0000'                    _KAPS_StorePos:	
 13653                           ;psect for function _KAPS_StorePos
 13654                           
 13655  0000'                    l728:	
 13656                           ;incstack = 0
 13657                           ; Regs used in _KAPS_StorePos: [wreg]
 13658                           
 13659  0000' 0008               	return
 13660  0001'                    __end_of_KAPS_StorePos:
 13661                           
 13662                           	psect	text56
 13663  0000'                    __ptext56:	
 13664 ;; *************** function _KAPS_GoToIdx *****************
 13665 ;; Defined at:
 13666 ;;		line 347 in file "main.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;  kaps            1    wreg     PTR struct .
 13669 ;;		 -> kaps(7), 
 13670 ;;  idx             1    0[BANK0 ] unsigned char 
 13671 ;; Auto vars:     Size  Location     Type
 13672 ;;  kaps            1    1[BANK0 ] PTR struct .
 13673 ;;		 -> kaps(7), 
 13674 ;; Return value:  Size  Location     Type
 13675 ;;                  1    wreg      void 
 13676 ;; Registers used:
 13677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13683 ;;      Params:         0       1       0       0       0       0       0       0
 13684 ;;      Locals:         0       1       0       0       0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0       0
 13686 ;;      Totals:         0       2       0       0       0       0       0       0
 13687 ;;Total ram usage:        2 bytes
 13688 ;; Hardware stack levels used: 1
 13689 ;; Hardware stack levels required when called: 7
 13690 ;; This function calls:
 13691 ;;		Nothing
 13692 ;; This function is called by:
 13693 ;;		_ProcessMsg
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697  0000'                    _KAPS_GoToIdx:	
 13698                           ;psect for function _KAPS_GoToIdx
 13699                           
 13700                           
 13701                           ;incstack = 0
 13702                           ; Regs used in _KAPS_GoToIdx: [wreg+fsr1l+fsr1h+status,2+status,0]
 13703                           ;KAPS_GoToIdx@kaps stored from wreg
 13704  0000' 0020               	movlb	0	; select bank0
 13705  0001' 0081'              	movwf	KAPS_GoToIdx@kaps
 13706  0002'                    l5159:
 13707                           
 13708                           ;main.c: 350:     kaps->m_bIdxPos = idx;
 13709  0002' 0801'              	movf	KAPS_GoToIdx@kaps,w
 13710  0003' 3E06               	addlw	6
 13711  0004' 0086               	movwf	6
 13712  0005' 0187               	clrf	7
 13713  0006' 0800'              	movf	KAPS_GoToIdx@idx,w
 13714  0007' 0081               	movwf	1
 13715  0008'                    l719:
 13716  0008' 0008               	return
 13717  0009'                    __end_of_KAPS_GoToIdx:
 13718                           
 13719                           	psect	text57
 13720  0000'                    __ptext57:	
 13721 ;; *************** function _EUSART_Read *****************
 13722 ;; Defined at:
 13723 ;;		line 213 in file "mcc_generated_files/uart/src/eusart.c"
 13724 ;; Parameters:    Size  Location     Type
 13725 ;;		None
 13726 ;; Auto vars:     Size  Location     Type
 13727 ;;		None
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  1    wreg      unsigned char 
 13730 ;; Registers used:
 13731 ;;		wreg, status,2, status,0, pclath, cstack
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13737 ;;      Params:         0       0       0       0       0       0       0       0
 13738 ;;      Locals:         0       0       0       0       0       0       0       0
 13739 ;;      Temps:          0       0       0       0       0       0       0       0
 13740 ;;      Totals:         0       0       0       0       0       0       0       0
 13741 ;;Total ram usage:        0 bytes
 13742 ;; Hardware stack levels used: 1
 13743 ;; Hardware stack levels required when called: 8
 13744 ;; This function calls:
 13745 ;;		NULL
 13746 ;;		_EUSART_DefaultFramingErrorCallback
 13747 ;;		_EUSART_DefaultOverrunErrorCallback
 13748 ;; This function is called by:
 13749 ;;		_main
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753  0000'                    _EUSART_Read:	
 13754                           ;psect for function _EUSART_Read
 13755                           
 13756  0000'                    l5355:	
 13757                           ;incstack = 0
 13758                           ; Regs used in _EUSART_Read: [wreg+status,2+status,0+pclath+cstack]
 13759                           
 13760                           
 13761                           ;mcc_generated_files/uart/src/eusart.c: 215:     eusartRxLastError.status = 0;
 13762  0000' 0021               	movlb	1	; select bank1
 13763  0001' 0180'              	clrf	_eusartRxLastError^(0+128)	;volatile
 13764  0002' 0180'              	clrf	(_eusartRxLastError+1)^(0+128)	;volatile
 13765  0003'                    l5357:
 13766                           
 13767                           ;mcc_generated_files/uart/src/eusart.c: 216:     if(1 == RC1STAbits.OERR)
 13768  0003' 0023               	movlb	3	; select bank3
 13769  0004' 1C9D               	btfss	29,1	;volatile
 13770  0005' 2800'              	goto	u5501
 13771  0006' 2800'              	goto	u5500
 13772  0007'                    u5501:
 13773  0007' 2800'              	goto	l5365
 13774  0008'                    u5500:
 13775  0008'                    l5359:
 13776                           
 13777                           ;mcc_generated_files/uart/src/eusart.c: 217:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 218:         eusartRxLastError.oerr = 1;
 13778  0008' 0021               	movlb	1	; select bank1
 13779  0009' 1500'              	bsf	_eusartRxLastError^(0+128),2	;volatile
 13780  000A'                    l5361:
 13781                           
 13782                           ;mcc_generated_files/uart/src/eusart.c: 219:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 13783  000A' 0800'              	movf	_EUSART_OverrunErrorHandler^(0+128),w
 13784  000B' 0400'              	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 13785  000C' 1903               	btfsc	3,2
 13786  000D' 2800'              	goto	u5511
 13787  000E' 2800'              	goto	u5510
 13788  000F'                    u5511:
 13789  000F' 2800'              	goto	l5365
 13790  0010'                    u5510:
 13791  0010'                    l5363:
 13792                           
 13793                           ;mcc_generated_files/uart/src/eusart.c: 220:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 221:             EUSART_OverrunErrorHandler();
 13794  0010' 0800'              	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 13795  0011' 008A               	movwf	10
 13796  0012' 0800'              	movf	_EUSART_OverrunErrorHandler^(0+128),w
 13797  0013' 000A               	callw
 13798  0014' 3180'              	pagesel	$
 13799  0015'                    l5365:
 13800                           
 13801                           ;mcc_generated_files/uart/src/eusart.c: 224:     if(1 == RC1STAbits.FERR)
 13802  0015' 0023               	movlb	3	; select bank3
 13803  0016' 1D1D               	btfss	29,2	;volatile
 13804  0017' 2800'              	goto	u5521
 13805  0018' 2800'              	goto	u5520
 13806  0019'                    u5521:
 13807  0019' 2800'              	goto	l5373
 13808  001A'                    u5520:
 13809  001A'                    l5367:
 13810                           
 13811                           ;mcc_generated_files/uart/src/eusart.c: 225:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 226:         eusartRxLastError.ferr = 1;
 13812  001A' 0021               	movlb	1	; select bank1
 13813  001B' 1480'              	bsf	_eusartRxLastError^(0+128),1	;volatile
 13814  001C'                    l5369:
 13815                           
 13816                           ;mcc_generated_files/uart/src/eusart.c: 227:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 13817  001C' 0800'              	movf	_EUSART_FramingErrorHandler,w
 13818  001D' 0401'              	iorwf	_EUSART_FramingErrorHandler+1,w
 13819  001E' 1903               	btfsc	3,2
 13820  001F' 2800'              	goto	u5531
 13821  0020' 2800'              	goto	u5530
 13822  0021'                    u5531:
 13823  0021' 2800'              	goto	l5373
 13824  0022'                    u5530:
 13825  0022'                    l5371:
 13826                           
 13827                           ;mcc_generated_files/uart/src/eusart.c: 228:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 229:             EUSART_FramingErrorHandler();
 13828  0022' 0801'              	movf	_EUSART_FramingErrorHandler+1,w
 13829  0023' 008A               	movwf	10
 13830  0024' 0800'              	movf	_EUSART_FramingErrorHandler,w
 13831  0025' 000A               	callw
 13832  0026' 3180'              	pagesel	$
 13833  0027'                    l5373:
 13834                           
 13835                           ;mcc_generated_files/uart/src/eusart.c: 232:     return RC1REG;
 13836  0027' 0023               	movlb	3	; select bank3
 13837  0028' 0819               	movf	25,w	;volatile
 13838  0029'                    l610:
 13839  0029' 0008               	return
 13840  002A'                    __end_of_EUSART_Read:
 13841                           
 13842                           	psect	text58
 13843  0000'                    __ptext58:	
 13844 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 13845 ;; Defined at:
 13846 ;;		line 245 in file "mcc_generated_files/uart/src/eusart.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;		None
 13849 ;; Auto vars:     Size  Location     Type
 13850 ;;		None
 13851 ;; Return value:  Size  Location     Type
 13852 ;;                  1    wreg      void 
 13853 ;; Registers used:
 13854 ;;		None
 13855 ;; Tracked objects:
 13856 ;;		On entry : 0/0
 13857 ;;		On exit  : 0/0
 13858 ;;		Unchanged: 0/0
 13859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13860 ;;      Params:         0       0       0       0       0       0       0       0
 13861 ;;      Locals:         0       0       0       0       0       0       0       0
 13862 ;;      Temps:          0       0       0       0       0       0       0       0
 13863 ;;      Totals:         0       0       0       0       0       0       0       0
 13864 ;;Total ram usage:        0 bytes
 13865 ;; Hardware stack levels used: 1
 13866 ;; Hardware stack levels required when called: 7
 13867 ;; This function calls:
 13868 ;;		Nothing
 13869 ;; This function is called by:
 13870 ;;		_EUSART_Initialize
 13871 ;;		_EUSART_Read
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875  0000'                    _EUSART_DefaultOverrunErrorCallback:	
 13876                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 13877                           
 13878  0000'                    l5287:	
 13879                           ;incstack = 0
 13880                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 13881                           
 13882                           
 13883                           ;mcc_generated_files/uart/src/eusart.c: 248:     RC1STAbits.CREN = 0;
 13884  0000' 0023               	movlb	3	; select bank3
 13885  0001' 121D               	bcf	29,4	;volatile
 13886                           
 13887                           ;mcc_generated_files/uart/src/eusart.c: 249:     RC1STAbits.CREN = 1;
 13888  0002' 161D               	bsf	29,4	;volatile
 13889  0003'                    l619:
 13890  0003' 0008               	return
 13891  0004'                    __end_of_EUSART_DefaultOverrunErrorCallback:
 13892                           
 13893                           	psect	text59
 13894  0000'                    __ptext59:	
 13895 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 13896 ;; Defined at:
 13897 ;;		line 240 in file "mcc_generated_files/uart/src/eusart.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;		None
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;		None
 13902 ;; Return value:  Size  Location     Type
 13903 ;;                  1    wreg      void 
 13904 ;; Registers used:
 13905 ;;		None
 13906 ;; Tracked objects:
 13907 ;;		On entry : 0/0
 13908 ;;		On exit  : 0/0
 13909 ;;		Unchanged: 0/0
 13910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13911 ;;      Params:         0       0       0       0       0       0       0       0
 13912 ;;      Locals:         0       0       0       0       0       0       0       0
 13913 ;;      Temps:          0       0       0       0       0       0       0       0
 13914 ;;      Totals:         0       0       0       0       0       0       0       0
 13915 ;;Total ram usage:        0 bytes
 13916 ;; Hardware stack levels used: 1
 13917 ;; Hardware stack levels required when called: 7
 13918 ;; This function calls:
 13919 ;;		Nothing
 13920 ;; This function is called by:
 13921 ;;		_EUSART_Initialize
 13922 ;;		_EUSART_Read
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926  0000'                    _EUSART_DefaultFramingErrorCallback:	
 13927                           ;psect for function _EUSART_DefaultFramingErrorCallback
 13928                           
 13929  0000'                    l616:	
 13930                           ;incstack = 0
 13931                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 13932                           
 13933  0000' 0008               	return
 13934  0001'                    __end_of_EUSART_DefaultFramingErrorCallback:
 13935                           
 13936                           	psect	text60
 13937  0000'                    __ptext60:	
 13938 ;; *************** function _EUSART_IsRxReady *****************
 13939 ;; Defined at:
 13940 ;;		line 193 in file "mcc_generated_files/uart/src/eusart.c"
 13941 ;; Parameters:    Size  Location     Type
 13942 ;;		None
 13943 ;; Auto vars:     Size  Location     Type
 13944 ;;		None
 13945 ;; Return value:  Size  Location     Type
 13946 ;;                  1    wreg      _Bool 
 13947 ;; Registers used:
 13948 ;;		wreg, status,2, status,0
 13949 ;; Tracked objects:
 13950 ;;		On entry : 0/0
 13951 ;;		On exit  : 0/0
 13952 ;;		Unchanged: 0/0
 13953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13954 ;;      Params:         0       0       0       0       0       0       0       0
 13955 ;;      Locals:         0       0       0       0       0       0       0       0
 13956 ;;      Temps:          0       0       0       0       0       0       0       0
 13957 ;;      Totals:         0       0       0       0       0       0       0       0
 13958 ;;Total ram usage:        0 bytes
 13959 ;; Hardware stack levels used: 1
 13960 ;; Hardware stack levels required when called: 7
 13961 ;; This function calls:
 13962 ;;		Nothing
 13963 ;; This function is called by:
 13964 ;;		_main
 13965 ;; This function uses a non-reentrant model
 13966 ;;
 13967                           
 13968  0000'                    _EUSART_IsRxReady:	
 13969                           ;psect for function _EUSART_IsRxReady
 13970                           
 13971  0000'                    l5351:	
 13972                           ;incstack = 0
 13973                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 13974                           
 13975                           
 13976                           ;mcc_generated_files/uart/src/eusart.c: 195:     return (_Bool)(PIR1bits.RCIF);
 13977  0000' 0020               	movlb	0	; select bank0
 13978  0001' 0E10               	swapf	16,w	;volatile
 13979  0002' 0C89               	rrf	9,f
 13980  0003' 3901               	andlw	1
 13981  0004'                    l592:
 13982  0004' 0008               	return
 13983  0005'                    __end_of_EUSART_IsRxReady:
 13984                           
 13985                           	psect	intentry
 13986  0000'                    __pintentry:	
 13987 ;; *************** function _INTERRUPT_InterruptManager *****************
 13988 ;; Defined at:
 13989 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;		None
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;		None
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14003 ;;      Params:         0       0       0       0       0       0       0       0
 14004 ;;      Locals:         0       0       0       0       0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0
 14006 ;;      Totals:         0       0       0       0       0       0       0       0
 14007 ;;Total ram usage:        0 bytes
 14008 ;; Hardware stack levels used: 1
 14009 ;; Hardware stack levels required when called: 6
 14010 ;; This function calls:
 14011 ;;		_ADC_ISR
 14012 ;;		_I2C1_ERROR_ISR
 14013 ;;		_I2C1_ISR
 14014 ;; This function is called by:
 14015 ;;		Interrupt level 1
 14016 ;; This function uses a non-reentrant model
 14017 ;;
 14018                           
 14019  0000'                    _INTERRUPT_InterruptManager:
 14020                           
 14021                           ;incstack = 0
 14022 ;; hardware stack exceeded
 14023  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14024                           
 14025                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14026  0001' 3180'              	pagesel	$
 14027  0002'                    i1l4605:
 14028                           
 14029                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 14030  0002' 1F0B               	btfss	11,6	;volatile
 14031  0003' 2800'              	goto	u450_21
 14032  0004' 2800'              	goto	u450_20
 14033  0005'                    u450_21:
 14034  0005' 2800'              	goto	i1l455
 14035  0006'                    u450_20:
 14036  0006'                    i1l4607:
 14037                           
 14038                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 14039  0006' 0021               	movlb	1	; select bank1
 14040  0007' 1F10               	btfss	16,6	;volatile
 14041  0008' 2800'              	goto	u451_21
 14042  0009' 2800'              	goto	u451_20
 14043  000A'                    u451_21:
 14044  000A' 2800'              	goto	i1l448
 14045  000B'                    u451_20:
 14046  000B'                    i1l4609:
 14047  000B' 0020               	movlb	0	; select bank0
 14048  000C' 1F10               	btfss	16,6	;volatile
 14049  000D' 2800'              	goto	u452_21
 14050  000E' 2800'              	goto	u452_20
 14051  000F'                    u452_21:
 14052  000F' 2800'              	goto	i1l448
 14053  0010'                    u452_20:
 14054  0010'                    i1l4611:
 14055                           
 14056                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             ADC_ISR();
 14057  0010' 3180' 2000' 3180'  	fcall	_ADC_ISR
 14058                           
 14059                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 14060  0013' 2800'              	goto	i1l455
 14061  0014'                    i1l448:	
 14062                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE2bits.BCL1IE == 1 &&
      +                           PIR2bits.BCL1IF == 1)
 14063                           
 14064  0014' 0021               	movlb	1	; select bank1
 14065  0015' 1D91               	btfss	17,3	;volatile
 14066  0016' 2800'              	goto	u453_21
 14067  0017' 2800'              	goto	u453_20
 14068  0018'                    u453_21:
 14069  0018' 2800'              	goto	i1l450
 14070  0019'                    u453_20:
 14071  0019'                    i1l4613:
 14072  0019' 0020               	movlb	0	; select bank0
 14073  001A' 1D91               	btfss	17,3	;volatile
 14074  001B' 2800'              	goto	u454_21
 14075  001C' 2800'              	goto	u454_20
 14076  001D'                    u454_21:
 14077  001D' 2800'              	goto	i1l450
 14078  001E'                    u454_20:
 14079  001E'                    i1l4615:
 14080                           
 14081                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             I2C1_ERROR_ISR();
 14082  001E' 3180' 2000' 3180'  	fcall	_I2C1_ERROR_ISR
 14083                           
 14084                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 14085  0021' 2800'              	goto	i1l455
 14086  0022'                    i1l450:	
 14087                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
 14088                           
 14089  0022' 0021               	movlb	1	; select bank1
 14090  0023' 1D90               	btfss	16,3	;volatile
 14091  0024' 2800'              	goto	u455_21
 14092  0025' 2800'              	goto	u455_20
 14093  0026'                    u455_21:
 14094  0026' 2800'              	goto	i1l449
 14095  0027'                    u455_20:
 14096  0027'                    i1l4617:
 14097  0027' 0020               	movlb	0	; select bank0
 14098  0028' 1D90               	btfss	16,3	;volatile
 14099  0029' 2800'              	goto	u456_21
 14100  002A' 2800'              	goto	u456_20
 14101  002B'                    u456_21:
 14102  002B' 2800'              	goto	i1l449
 14103  002C'                    u456_20:
 14104  002C'                    i1l4619:
 14105                           
 14106                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ISR();
 14107  002C' 3180' 2000' 3180'  	fcall	_I2C1_ISR
 14108                           
 14109                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 14110  002F' 2800'              	goto	i1l455
 14111  0030'                    i1l449:
 14112  0030'                    i1l455:	
 14113                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
 14114                           
 14115  0030' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14116  0031' 0009               	retfie
 14117  0032'                    __end_of_INTERRUPT_InterruptManager:
 14118                           
 14119                           	psect	text62
 14120  0000'                    __ptext62:	
 14121 ;; *************** function _I2C1_ISR *****************
 14122 ;; Defined at:
 14123 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;		None
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;		None
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  1    wreg      void 
 14130 ;; Registers used:
 14131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14137 ;;      Params:         0       0       0       0       0       0       0       0
 14138 ;;      Locals:         0       0       0       0       0       0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0
 14140 ;;      Totals:         0       0       0       0       0       0       0       0
 14141 ;;Total ram usage:        0 bytes
 14142 ;; Hardware stack levels used: 1
 14143 ;; Hardware stack levels required when called: 5
 14144 ;; This function calls:
 14145 ;;		_I2C1_EventHandler
 14146 ;; This function is called by:
 14147 ;;		_INTERRUPT_InterruptManager
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151  0000'                    _I2C1_ISR:	
 14152                           ;psect for function _I2C1_ISR
 14153                           
 14154  0000'                    i1l4403:	
 14155                           ;incstack = 0
 14156 ;; hardware stack exceeded
 14157                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14158                           
 14159                           
 14160                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 14161  0000' 3180' 2000' 3180'  	fcall	_I2C1_EventHandler
 14162  0003'                    i1l207:
 14163  0003' 0008               	return
 14164  0004'                    __end_of_I2C1_ISR:
 14165                           
 14166                           	psect	text63
 14167  0000'                    __ptext63:	
 14168 ;; *************** function _I2C1_EventHandler *****************
 14169 ;; Defined at:
 14170 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;		None
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      void 
 14177 ;; Registers used:
 14178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14184 ;;      Params:         0       0       0       0       0       0       0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0
 14186 ;;      Temps:          2       0       0       0       0       0       0       0
 14187 ;;      Totals:         2       0       0       0       0       0       0       0
 14188 ;;Total ram usage:        2 bytes
 14189 ;; Hardware stack levels used: 1
 14190 ;; Hardware stack levels required when called: 4
 14191 ;; This function calls:
 14192 ;;		_I2C1_EVENT_ERROR
 14193 ;;		_I2C1_EVENT_IDLE
 14194 ;;		_I2C1_EVENT_NACK
 14195 ;;		_I2C1_EVENT_RESET
 14196 ;;		_I2C1_EVENT_RX
 14197 ;;		_I2C1_EVENT_SEND_RD_ADDR
 14198 ;;		_I2C1_EVENT_SEND_WR_ADDR
 14199 ;;		_I2C1_EVENT_STOP
 14200 ;;		_I2C1_EVENT_TX
 14201 ;;		_I2C1_InterruptClear
 14202 ;;		_I2C1_IsAddr
 14203 ;;		_I2C1_IsData
 14204 ;;		_I2C1_IsNack
 14205 ;; This function is called by:
 14206 ;;		_I2C1_ISR
 14207 ;; This function uses a non-reentrant model
 14208 ;;
 14209                           
 14210  0000'                    _I2C1_EventHandler:	
 14211                           ;psect for function _I2C1_EventHandler
 14212                           
 14213  0000'                    i1l4237:	
 14214                           ;incstack = 0
 14215 ;; hardware stack exceeded
 14216                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14217                           
 14218                           
 14219                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 14220  0000' 3180' 2000' 3180'  	fcall	_I2C1_InterruptClear
 14221  0003'                    i1l4239:
 14222                           
 14223                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 14224  0003' 3180' 2000' 3180'  	fcall	_I2C1_IsAddr
 14225  0006' 3A00               	xorlw	0
 14226  0007' 1903               	skipnz
 14227  0008' 2800'              	goto	u425_21
 14228  0009' 2800'              	goto	u425_20
 14229  000A'                    u425_21:
 14230  000A' 2800'              	goto	i1l4245
 14231  000B'                    u425_20:
 14232  000B'                    i1l4241:
 14233  000B' 3180' 2000' 3180'  	fcall	_I2C1_IsNack
 14234  000E' 3A00               	xorlw	0
 14235  000F' 1903               	skipnz
 14236  0010' 2800'              	goto	u426_21
 14237  0011' 2800'              	goto	u426_20
 14238  0012'                    u426_21:
 14239  0012' 2800'              	goto	i1l4245
 14240  0013'                    u426_20:
 14241  0013'                    i1l4243:
 14242                           
 14243                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 14244  0013' 3005               	movlw	5
 14245  0014' 0021               	movlb	1	; select bank1
 14246  0015' 008D'              	movwf	(_i2c1Status^(0+128)+13)	;volatile
 14247                           
 14248                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 14249  0016' 3001               	movlw	1
 14250  0017' 008C'              	movwf	(_i2c1Status^(0+128)+12)	;volatile
 14251                           
 14252                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 14253  0018' 2800'              	goto	i1l4251
 14254  0019'                    i1l4245:
 14255  0019' 3180' 2000' 3180'  	fcall	_I2C1_IsData
 14256  001C' 3A00               	xorlw	0
 14257  001D' 1903               	skipnz
 14258  001E' 2800'              	goto	u427_21
 14259  001F' 2800'              	goto	u427_20
 14260  0020'                    u427_21:
 14261  0020' 2800'              	goto	i1l4251
 14262  0021'                    u427_20:
 14263  0021'                    i1l4247:
 14264  0021' 3180' 2000' 3180'  	fcall	_I2C1_IsNack
 14265  0024' 3A00               	xorlw	0
 14266  0025' 1903               	skipnz
 14267  0026' 2800'              	goto	u428_21
 14268  0027' 2800'              	goto	u428_20
 14269  0028'                    u428_21:
 14270  0028' 2800'              	goto	i1l4251
 14271  0029'                    u428_20:
 14272  0029'                    i1l4249:
 14273                           
 14274                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 14275  0029' 3005               	movlw	5
 14276  002A' 0021               	movlb	1	; select bank1
 14277  002B' 008D'              	movwf	(_i2c1Status^(0+128)+13)	;volatile
 14278                           
 14279                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 14280  002C' 3002               	movlw	2
 14281  002D' 008C'              	movwf	(_i2c1Status^(0+128)+12)	;volatile
 14282  002E'                    i1l4251:
 14283                           
 14284                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 14285  002E' 0021               	movlb	1	; select bank1
 14286  002F' 080D'              	movf	(_i2c1Status^(0+128)+13),w	;volatile
 14287  0030' 0084'              	movwf	??_I2C1_EventHandler
 14288  0031' 0185'              	clrf	??_I2C1_EventHandler+1
 14289  0032' 3584'              	lslf	??_I2C1_EventHandler,f
 14290  0033' 0D85'              	rlf	??_I2C1_EventHandler+1,f
 14291  0034' 3000'              	movlw	low _i2c1_eventTable
 14292  0035' 0704'              	addwf	??_I2C1_EventHandler,w
 14293  0036' 0084               	movwf	4
 14294  0037' 3000'              	movlw	high _i2c1_eventTable
 14295  0038' 3D05'              	addwfc	??_I2C1_EventHandler+1,w
 14296  0039' 3880               	iorlw	128
 14297  003A' 0085               	movwf	5
 14298  003B' 3F01               	moviw [1]fsr0
 14299  003C' 008A               	movwf	10
 14300  003D' 3F00               	moviw [0]fsr0
 14301  003E' 000A               	callw
 14302  003F' 3180'              	pagesel	$
 14303  0040' 0021               	movlb	1	; select bank1
 14304  0041' 008D'              	movwf	(_i2c1Status^(0+128)+13)	;volatile
 14305  0042'                    i1l225:
 14306  0042' 0008               	return
 14307  0043'                    __end_of_I2C1_EventHandler:
 14308                           
 14309                           	psect	text64
 14310  0000'                    __ptext64:	
 14311 ;; *************** function _I2C1_IsNack *****************
 14312 ;; Defined at:
 14313 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  1    wreg      _Bool 
 14320 ;; Registers used:
 14321 ;;		wreg, status,2, status,0
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14327 ;;      Params:         0       0       0       0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used: 1
 14333 ;; This function calls:
 14334 ;;		Nothing
 14335 ;; This function is called by:
 14336 ;;		_I2C1_EventHandler
 14337 ;; This function uses a non-reentrant model
 14338 ;;
 14339                           
 14340  0000'                    _I2C1_IsNack:	
 14341                           ;psect for function _I2C1_IsNack
 14342                           
 14343  0000'                    i1l3995:	
 14344                           ;incstack = 0
 14345                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 14346                           
 14347                           
 14348                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 14349  0000' 0024               	movlb	4	; select bank4
 14350  0001' 0E16               	swapf	22,w	;volatile
 14351  0002' 0C89               	rrf	9,f
 14352  0003' 0C89               	rrf	9,f
 14353  0004' 3901               	andlw	1
 14354  0005'                    i1l300:
 14355  0005' 0008               	return
 14356  0006'                    __end_of_I2C1_IsNack:
 14357                           
 14358                           	psect	text65
 14359  0000'                    __ptext65:	
 14360 ;; *************** function _I2C1_IsData *****************
 14361 ;; Defined at:
 14362 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14363 ;; Parameters:    Size  Location     Type
 14364 ;;		None
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;		None
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  1    wreg      _Bool 
 14369 ;; Registers used:
 14370 ;;		wreg, status,2, status,0
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14376 ;;      Params:         0       0       0       0       0       0       0       0
 14377 ;;      Locals:         0       0       0       0       0       0       0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0
 14379 ;;      Totals:         0       0       0       0       0       0       0       0
 14380 ;;Total ram usage:        0 bytes
 14381 ;; Hardware stack levels used: 1
 14382 ;; This function calls:
 14383 ;;		Nothing
 14384 ;; This function is called by:
 14385 ;;		_I2C1_EventHandler
 14386 ;; This function uses a non-reentrant model
 14387 ;;
 14388                           
 14389  0000'                    _I2C1_IsData:	
 14390                           ;psect for function _I2C1_IsData
 14391                           
 14392  0000'                    i1l3999:	
 14393                           ;incstack = 0
 14394                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 14395                           
 14396                           
 14397                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 14398  0000' 0024               	movlb	4	; select bank4
 14399  0001' 0E14               	swapf	20,w	;volatile
 14400  0002' 0C89               	rrf	9,f
 14401  0003' 3901               	andlw	1
 14402  0004'                    i1l303:
 14403  0004' 0008               	return
 14404  0005'                    __end_of_I2C1_IsData:
 14405                           
 14406                           	psect	text66
 14407  0000'                    __ptext66:	
 14408 ;; *************** function _I2C1_IsAddr *****************
 14409 ;; Defined at:
 14410 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;		None
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;		None
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      _Bool 
 14417 ;; Registers used:
 14418 ;;		wreg, status,0
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14424 ;;      Params:         0       0       0       0       0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0
 14427 ;;      Totals:         0       0       0       0       0       0       0       0
 14428 ;;Total ram usage:        0 bytes
 14429 ;; Hardware stack levels used: 1
 14430 ;; This function calls:
 14431 ;;		Nothing
 14432 ;; This function is called by:
 14433 ;;		_I2C1_EventHandler
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437  0000'                    _I2C1_IsAddr:	
 14438                           ;psect for function _I2C1_IsAddr
 14439                           
 14440  0000'                    i1l3991:	
 14441                           ;incstack = 0
 14442                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 14443                           
 14444                           
 14445                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 14446  0000' 1003               	clrc
 14447  0001' 0024               	movlb	4	; select bank4
 14448  0002' 1E94               	btfss	20,5	;volatile
 14449  0003' 1403               	setc
 14450  0004' 3000               	movlw	0
 14451  0005' 3D09               	addwfc	9,w
 14452  0006'                    i1l306:
 14453  0006' 0008               	return
 14454  0007'                    __end_of_I2C1_IsAddr:
 14455                           
 14456                           	psect	text67
 14457  0000'                    __ptext67:	
 14458 ;; *************** function _I2C1_ERROR_ISR *****************
 14459 ;; Defined at:
 14460 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14461 ;; Parameters:    Size  Location     Type
 14462 ;;		None
 14463 ;; Auto vars:     Size  Location     Type
 14464 ;;		None
 14465 ;; Return value:  Size  Location     Type
 14466 ;;                  1    wreg      void 
 14467 ;; Registers used:
 14468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14469 ;; Tracked objects:
 14470 ;;		On entry : 0/0
 14471 ;;		On exit  : 0/0
 14472 ;;		Unchanged: 0/0
 14473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14474 ;;      Params:         0       0       0       0       0       0       0       0
 14475 ;;      Locals:         0       0       0       0       0       0       0       0
 14476 ;;      Temps:          0       0       0       0       0       0       0       0
 14477 ;;      Totals:         0       0       0       0       0       0       0       0
 14478 ;;Total ram usage:        0 bytes
 14479 ;; Hardware stack levels used: 1
 14480 ;; Hardware stack levels required when called: 5
 14481 ;; This function calls:
 14482 ;;		_I2C1_ErrorEventHandler
 14483 ;; This function is called by:
 14484 ;;		_INTERRUPT_InterruptManager
 14485 ;; This function uses a non-reentrant model
 14486 ;;
 14487                           
 14488  0000'                    _I2C1_ERROR_ISR:	
 14489                           ;psect for function _I2C1_ERROR_ISR
 14490                           
 14491  0000'                    i1l4405:	
 14492                           ;incstack = 0
 14493 ;; hardware stack exceeded
 14494                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14495                           
 14496                           
 14497                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 14498  0000' 3180' 2000' 3180'  	fcall	_I2C1_ErrorEventHandler
 14499  0003'                    i1l210:
 14500  0003' 0008               	return
 14501  0004'                    __end_of_I2C1_ERROR_ISR:
 14502                           
 14503                           	psect	text68
 14504  0000'                    __ptext68:	
 14505 ;; *************** function _I2C1_ErrorEventHandler *****************
 14506 ;; Defined at:
 14507 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14508 ;; Parameters:    Size  Location     Type
 14509 ;;		None
 14510 ;; Auto vars:     Size  Location     Type
 14511 ;;		None
 14512 ;; Return value:  Size  Location     Type
 14513 ;;                  1    wreg      void 
 14514 ;; Registers used:
 14515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14516 ;; Tracked objects:
 14517 ;;		On entry : 0/0
 14518 ;;		On exit  : 0/0
 14519 ;;		Unchanged: 0/0
 14520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14521 ;;      Params:         0       0       0       0       0       0       0       0
 14522 ;;      Locals:         0       0       0       0       0       0       0       0
 14523 ;;      Temps:          2       0       0       0       0       0       0       0
 14524 ;;      Totals:         2       0       0       0       0       0       0       0
 14525 ;;Total ram usage:        2 bytes
 14526 ;; Hardware stack levels used: 1
 14527 ;; Hardware stack levels required when called: 4
 14528 ;; This function calls:
 14529 ;;		NULL
 14530 ;;		_I2C1_DefaultCallback
 14531 ;;		_I2C1_EVENT_ERROR
 14532 ;;		_I2C1_EVENT_IDLE
 14533 ;;		_I2C1_EVENT_NACK
 14534 ;;		_I2C1_EVENT_RESET
 14535 ;;		_I2C1_EVENT_RX
 14536 ;;		_I2C1_EVENT_SEND_RD_ADDR
 14537 ;;		_I2C1_EVENT_SEND_WR_ADDR
 14538 ;;		_I2C1_EVENT_STOP
 14539 ;;		_I2C1_EVENT_TX
 14540 ;;		_I2C1_ErrorInterruptClear
 14541 ;; This function is called by:
 14542 ;;		_I2C1_ERROR_ISR
 14543 ;; This function uses a non-reentrant model
 14544 ;;
 14545                           
 14546  0000'                    _I2C1_ErrorEventHandler:	
 14547                           ;psect for function _I2C1_ErrorEventHandler
 14548                           
 14549  0000'                    i1l4253:	
 14550                           ;incstack = 0
 14551 ;; hardware stack exceeded
 14552                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14553                           
 14554                           
 14555                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 14556  0000' 3006               	movlw	6
 14557  0001' 0021               	movlb	1	; select bank1
 14558  0002' 008D'              	movwf	(_i2c1Status^(0+128)+13)	;volatile
 14559                           
 14560                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 14561  0003' 3003               	movlw	3
 14562  0004' 008C'              	movwf	(_i2c1Status^(0+128)+12)	;volatile
 14563  0005'                    i1l4255:
 14564                           
 14565                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 14566  0005' 3180' 2000' 3180'  	fcall	_I2C1_ErrorInterruptClear
 14567  0008'                    i1l4257:
 14568                           
 14569                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 14570  0008' 0021               	movlb	1	; select bank1
 14571  0009' 080D'              	movf	(_i2c1Status^(0+128)+13),w	;volatile
 14572  000A' 0084'              	movwf	??_I2C1_ErrorEventHandler
 14573  000B' 0185'              	clrf	??_I2C1_ErrorEventHandler+1
 14574  000C' 3584'              	lslf	??_I2C1_ErrorEventHandler,f
 14575  000D' 0D85'              	rlf	??_I2C1_ErrorEventHandler+1,f
 14576  000E' 3000'              	movlw	low _i2c1_eventTable
 14577  000F' 0704'              	addwf	??_I2C1_ErrorEventHandler,w
 14578  0010' 0084               	movwf	4
 14579  0011' 3000'              	movlw	high _i2c1_eventTable
 14580  0012' 3D05'              	addwfc	??_I2C1_ErrorEventHandler+1,w
 14581  0013' 3880               	iorlw	128
 14582  0014' 0085               	movwf	5
 14583  0015' 3F01               	moviw [1]fsr0
 14584  0016' 008A               	movwf	10
 14585  0017' 3F00               	moviw [0]fsr0
 14586  0018' 000A               	callw
 14587  0019' 3180'              	pagesel	$
 14588  001A' 0021               	movlb	1	; select bank1
 14589  001B' 008D'              	movwf	(_i2c1Status^(0+128)+13)	;volatile
 14590  001C'                    i1l4259:
 14591                           
 14592                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 14593  001C' 0800'              	movf	(_I2C1_Callback+1)^(0+128),w
 14594  001D' 008A               	movwf	10
 14595  001E' 0800'              	movf	_I2C1_Callback^(0+128),w
 14596  001F' 000A               	callw
 14597  0020' 3180'              	pagesel	$
 14598  0021'                    i1l228:
 14599  0021' 0008               	return
 14600  0022'                    __end_of_I2C1_ErrorEventHandler:
 14601                           
 14602                           	psect	text69
 14603  0000'                    __ptext69:	
 14604 ;; *************** function _I2C1_EVENT_RESET *****************
 14605 ;; Defined at:
 14606 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;		None
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;		None
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  1    wreg      enum E9544
 14613 ;; Registers used:
 14614 ;;		wreg, status,2, status,0, pclath, cstack
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14620 ;;      Params:         0       0       0       0       0       0       0       0
 14621 ;;      Locals:         0       0       0       0       0       0       0       0
 14622 ;;      Temps:          0       0       0       0       0       0       0       0
 14623 ;;      Totals:         0       0       0       0       0       0       0       0
 14624 ;;Total ram usage:        0 bytes
 14625 ;; Hardware stack levels used: 1
 14626 ;; Hardware stack levels required when called: 1
 14627 ;; This function calls:
 14628 ;;		_I2C1_BusReset
 14629 ;; This function is called by:
 14630 ;;		_I2C1_EVENT_ERROR
 14631 ;;		_I2C1_EventHandler
 14632 ;;		_I2C1_ErrorEventHandler
 14633 ;; This function uses a non-reentrant model
 14634 ;;
 14635                           
 14636  0000'                    _I2C1_EVENT_RESET:	
 14637                           ;psect for function _I2C1_EVENT_RESET
 14638                           
 14639  0000'                    i1l3579:	
 14640                           ;incstack = 0
 14641                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 14642                           
 14643                           
 14644                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 14645  0000' 3180' 2000' 3180'  	fcall	_I2C1_BusReset
 14646  0003'                    i1l3581:
 14647                           
 14648                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 14649  0003' 0021               	movlb	1	; select bank1
 14650  0004' 0180'              	clrf	_i2c1Status^(0+128)	;volatile
 14651  0005'                    i1l3583:
 14652                           
 14653                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 14654  0005' 3000               	movlw	0
 14655  0006'                    i1l267:
 14656  0006' 0008               	return
 14657  0007'                    __end_of_I2C1_EVENT_RESET:
 14658                           
 14659                           	psect	text70
 14660  0000'                    __ptext70:	
 14661 ;; *************** function _I2C1_EVENT_STOP *****************
 14662 ;; Defined at:
 14663 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;		None
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;		None
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  1    wreg      enum E9544
 14670 ;; Registers used:
 14671 ;;		wreg, status,2, status,0, pclath, cstack
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14677 ;;      Params:         0       0       0       0       0       0       0       0
 14678 ;;      Locals:         0       0       0       0       0       0       0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0
 14680 ;;      Totals:         0       0       0       0       0       0       0       0
 14681 ;;Total ram usage:        0 bytes
 14682 ;; Hardware stack levels used: 1
 14683 ;; Hardware stack levels required when called: 2
 14684 ;; This function calls:
 14685 ;;		_I2C1_Close
 14686 ;;		_I2C1_StopSend
 14687 ;; This function is called by:
 14688 ;;		_I2C1_EVENT_TX
 14689 ;;		_I2C1_EVENT_NACK
 14690 ;;		_I2C1_EventHandler
 14691 ;;		_I2C1_ErrorEventHandler
 14692 ;; This function uses a non-reentrant model
 14693 ;;
 14694                           
 14695  0000'                    _I2C1_EVENT_STOP:	
 14696                           ;psect for function _I2C1_EVENT_STOP
 14697                           
 14698  0000'                    i1l3557:	
 14699                           ;incstack = 0
 14700 ;; hardware stack exceeded
 14701                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 14702                           
 14703                           
 14704                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 14705  0000' 3180' 2000' 3180'  	fcall	_I2C1_StopSend
 14706                           
 14707                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 14708  0003' 3180' 2000' 3180'  	fcall	_I2C1_Close
 14709  0006'                    i1l3559:
 14710                           
 14711                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 14712  0006' 3000               	movlw	0
 14713  0007'                    i1l264:
 14714  0007' 0008               	return
 14715  0008'                    __end_of_I2C1_EVENT_STOP:
 14716                           
 14717                           	psect	text71
 14718  0000'                    __ptext71:	
 14719 ;; *************** function _I2C1_EVENT_ERROR *****************
 14720 ;; Defined at:
 14721 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;		None
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;  retEventStat    1    0[COMMON] enum E9544
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  1    wreg      enum E9544
 14728 ;; Registers used:
 14729 ;;		wreg, status,2, status,0, pclath, cstack
 14730 ;; Tracked objects:
 14731 ;;		On entry : 0/0
 14732 ;;		On exit  : 0/0
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14735 ;;      Params:         0       0       0       0       0       0       0       0
 14736 ;;      Locals:         1       0       0       0       0       0       0       0
 14737 ;;      Temps:          0       0       0       0       0       0       0       0
 14738 ;;      Totals:         1       0       0       0       0       0       0       0
 14739 ;;Total ram usage:        1 bytes
 14740 ;; Hardware stack levels used: 1
 14741 ;; Hardware stack levels required when called: 2
 14742 ;; This function calls:
 14743 ;;		_I2C1_EVENT_RESET
 14744 ;; This function is called by:
 14745 ;;		_I2C1_EventHandler
 14746 ;;		_I2C1_ErrorEventHandler
 14747 ;; This function uses a non-reentrant model
 14748 ;;
 14749                           
 14750  0000'                    _I2C1_EVENT_ERROR:	
 14751                           ;psect for function _I2C1_EVENT_ERROR
 14752                           
 14753  0000'                    i1l4079:	
 14754                           ;incstack = 0
 14755                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 14756                           
 14757  0000'                    i1l4081:
 14758                           
 14759                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 14760  0000' 3180' 2000' 3180'  	fcall	_I2C1_EVENT_RESET
 14761  0003' 0080'              	movwf	I2C1_EVENT_ERROR@retEventState
 14762  0004'                    i1l4083:
 14763                           
 14764                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 14765  0004' 0800'              	movf	I2C1_EVENT_ERROR@retEventState,w
 14766  0005'                    i1l261:
 14767  0005' 0008               	return
 14768  0006'                    __end_of_I2C1_EVENT_ERROR:
 14769                           
 14770                           	psect	text72
 14771  0000'                    __ptext72:	
 14772 ;; *************** function _I2C1_EVENT_NACK *****************
 14773 ;; Defined at:
 14774 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;		None
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;  retEventStat    1    0[COMMON] enum E9544
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1    wreg      enum E9544
 14781 ;; Registers used:
 14782 ;;		wreg, status,2, status,0, pclath, cstack
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14788 ;;      Params:         0       0       0       0       0       0       0       0
 14789 ;;      Locals:         1       0       0       0       0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0
 14791 ;;      Totals:         1       0       0       0       0       0       0       0
 14792 ;;Total ram usage:        1 bytes
 14793 ;; Hardware stack levels used: 1
 14794 ;; Hardware stack levels required when called: 3
 14795 ;; This function calls:
 14796 ;;		_I2C1_EVENT_STOP
 14797 ;; This function is called by:
 14798 ;;		_I2C1_EventHandler
 14799 ;;		_I2C1_ErrorEventHandler
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803  0000'                    _I2C1_EVENT_NACK:	
 14804                           ;psect for function _I2C1_EVENT_NACK
 14805                           
 14806  0000'                    i1l4071:	
 14807                           ;incstack = 0
 14808 ;; hardware stack exceeded
 14809                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 14810                           
 14811  0000'                    i1l4073:
 14812                           
 14813                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 14814  0000' 3180' 2000' 3180'  	fcall	_I2C1_EVENT_STOP
 14815  0003' 0080'              	movwf	I2C1_EVENT_NACK@retEventState
 14816  0004'                    i1l4075:
 14817                           
 14818                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 14819  0004' 0800'              	movf	I2C1_EVENT_NACK@retEventState,w
 14820  0005'                    i1l258:
 14821  0005' 0008               	return
 14822  0006'                    __end_of_I2C1_EVENT_NACK:
 14823                           
 14824                           	psect	text73
 14825  0000'                    __ptext73:	
 14826 ;; *************** function _I2C1_EVENT_RX *****************
 14827 ;; Defined at:
 14828 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14829 ;; Parameters:    Size  Location     Type
 14830 ;;		None
 14831 ;; Auto vars:     Size  Location     Type
 14832 ;;  retEventStat    1    1[COMMON] enum E9544
 14833 ;; Return value:  Size  Location     Type
 14834 ;;                  1    wreg      enum E9544
 14835 ;; Registers used:
 14836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14837 ;; Tracked objects:
 14838 ;;		On entry : 0/0
 14839 ;;		On exit  : 0/0
 14840 ;;		Unchanged: 0/0
 14841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14842 ;;      Params:         0       0       0       0       0       0       0       0
 14843 ;;      Locals:         1       0       0       0       0       0       0       0
 14844 ;;      Temps:          1       0       0       0       0       0       0       0
 14845 ;;      Totals:         2       0       0       0       0       0       0       0
 14846 ;;Total ram usage:        2 bytes
 14847 ;; Hardware stack levels used: 1
 14848 ;; Hardware stack levels required when called: 1
 14849 ;; This function calls:
 14850 ;;		_I2C1_AckSend
 14851 ;;		_I2C1_DataReceive
 14852 ;;		_I2C1_IsRxBufFull
 14853 ;;		_I2C1_NackSend
 14854 ;;		_I2C1_ReceiveEnable
 14855 ;;		_I2C1_RestartDisable
 14856 ;; This function is called by:
 14857 ;;		_I2C1_EventHandler
 14858 ;;		_I2C1_ErrorEventHandler
 14859 ;; This function uses a non-reentrant model
 14860 ;;
 14861                           
 14862  0000'                    _I2C1_EVENT_RX:	
 14863                           ;psect for function _I2C1_EVENT_RX
 14864                           
 14865  0000'                    i1l4045:	
 14866                           ;incstack = 0
 14867                           ; Regs used in _I2C1_EVENT_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14868                           
 14869                           
 14870                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 14871  0000' 3004               	movlw	4
 14872  0001' 0081'              	movwf	I2C1_EVENT_RX@retEventState
 14873  0002'                    i1l4047:
 14874                           
 14875                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 14876  0002' 3180' 2000' 3180'  	fcall	_I2C1_IsRxBufFull
 14877  0005' 3A00               	xorlw	0
 14878  0006' 1903               	skipnz
 14879  0007' 2800'              	goto	u405_21
 14880  0008' 2800'              	goto	u405_20
 14881  0009'                    u405_21:
 14882  0009' 2800'              	goto	i1l4065
 14883  000A'                    u405_20:
 14884  000A'                    i1l4049:
 14885                           
 14886                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 14887  000A' 0021               	movlb	1	; select bank1
 14888  000B' 0809'              	movf	(_i2c1Status^(0+128)+9),w	;volatile
 14889  000C' 0409'              	iorwf	((_i2c1Status+1)^(0+128)+9),w	;volatile
 14890  000D' 1903               	btfsc	3,2
 14891  000E' 2800'              	goto	u406_21
 14892  000F' 2800'              	goto	u406_20
 14893  0010'                    u406_21:
 14894  0010' 2800'              	goto	i1l4057
 14895  0011'                    u406_20:
 14896  0011'                    i1l4051:
 14897                           
 14898                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 14899  0011' 3180' 2000' 3180'  	fcall	_I2C1_DataReceive
 14900  0014' 0080'              	movwf	??_I2C1_EVENT_RX
 14901  0015' 3007               	movlw	7
 14902  0016' 3E00'              	addlw	(low (_i2c1Status| 0))& (0+255)
 14903  0017' 0086               	movwf	6
 14904  0018' 0187               	clrf	7
 14905  0019' 3F40               	moviw [0]fsr1
 14906  001A' 0084               	movwf	4
 14907  001B' 3F41               	moviw [1]fsr1
 14908  001C' 0085               	movwf	5
 14909  001D' 0800'              	movf	??_I2C1_EVENT_RX,w
 14910  001E' 0080               	movwf	0
 14911  001F'                    i1l4053:
 14912  001F' 3001               	movlw	1
 14913  0020' 0021               	movlb	1	; select bank1
 14914  0021' 0780'              	addwf	(low ((_i2c1Status| 0+7)))^(0+128),f	;volatile
 14915  0022' 3000               	movlw	0
 14916  0023' 3D80'              	addwfc	((low ((_i2c1Status| 0+7))+1))^(0+128),f	;volatile
 14917  0024'                    i1l4055:
 14918                           
 14919                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 14920  0024' 3001               	movlw	1
 14921  0025' 0289'              	subwf	(_i2c1Status^(0+128)+9),f	;volatile
 14922  0026' 3000               	movlw	0
 14923  0027' 3B89'              	subwfb	((_i2c1Status+1)^(0+128)+9),f	;volatile
 14924  0028'                    i1l4057:
 14925                           
 14926                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 14927  0028' 0809'              	movf	(_i2c1Status^(0+128)+9),w	;volatile
 14928  0029' 0409'              	iorwf	((_i2c1Status+1)^(0+128)+9),w	;volatile
 14929  002A' 1903               	btfsc	3,2
 14930  002B' 2800'              	goto	u407_21
 14931  002C' 2800'              	goto	u407_20
 14932  002D'                    u407_21:
 14933  002D' 2800'              	goto	i1l4061
 14934  002E'                    u407_20:
 14935  002E'                    i1l4059:
 14936                           
 14937                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 14938  002E' 3180' 2000' 3180'  	fcall	_I2C1_AckSend
 14939                           
 14940                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 14941  0031' 2800'              	goto	i1l4067
 14942  0032'                    i1l4061:
 14943                           
 14944                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 14945  0032' 3180' 2000' 3180'  	fcall	_I2C1_RestartDisable
 14946                           
 14947                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 14948  0035' 3180' 2000' 3180'  	fcall	_I2C1_NackSend
 14949  0038'                    i1l4063:
 14950                           
 14951                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 14952  0038' 3007               	movlw	7
 14953  0039' 0081'              	movwf	I2C1_EVENT_RX@retEventState
 14954  003A' 2800'              	goto	i1l4067
 14955  003B'                    i1l4065:
 14956                           
 14957                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 14958  003B' 3180' 2000' 3180'  	fcall	_I2C1_ReceiveEnable
 14959  003E'                    i1l4067:
 14960                           
 14961                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 14962  003E' 0801'              	movf	I2C1_EVENT_RX@retEventState,w
 14963  003F'                    i1l255:
 14964  003F' 0008               	return
 14965  0040'                    __end_of_I2C1_EVENT_RX:
 14966                           
 14967                           	psect	text74
 14968  0000'                    __ptext74:	
 14969 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 14970 ;; Defined at:
 14971 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14972 ;; Parameters:    Size  Location     Type
 14973 ;;		None
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;		None
 14976 ;; Return value:  Size  Location     Type
 14977 ;;                  1    wreg      enum E9544
 14978 ;; Registers used:
 14979 ;;		wreg, status,2, status,0, pclath, cstack
 14980 ;; Tracked objects:
 14981 ;;		On entry : 0/0
 14982 ;;		On exit  : 0/0
 14983 ;;		Unchanged: 0/0
 14984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14985 ;;      Params:         0       0       0       0       0       0       0       0
 14986 ;;      Locals:         0       0       0       0       0       0       0       0
 14987 ;;      Temps:          0       0       0       0       0       0       0       0
 14988 ;;      Totals:         0       0       0       0       0       0       0       0
 14989 ;;Total ram usage:        0 bytes
 14990 ;; Hardware stack levels used: 1
 14991 ;; Hardware stack levels required when called: 1
 14992 ;; This function calls:
 14993 ;;		_I2C1_DataTransmit
 14994 ;; This function is called by:
 14995 ;;		_I2C1_EventHandler
 14996 ;;		_I2C1_ErrorEventHandler
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           
 15000  0000'                    _I2C1_EVENT_SEND_WR_ADDR:	
 15001                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 15002                           
 15003  0000'                    i1l4015:	
 15004                           ;incstack = 0
 15005                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 15006                           
 15007                           
 15008                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 15009  0000' 0021               	movlb	1	; select bank1
 15010  0001' 3501'              	lslf	(_i2c1Status^(0+128)+1),w	;volatile
 15011  0002' 3180' 2000' 3180'  	fcall	_I2C1_DataTransmit
 15012  0005'                    i1l4017:
 15013                           
 15014                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 15015  0005' 3003               	movlw	3
 15016  0006'                    i1l240:
 15017  0006' 0008               	return
 15018  0007'                    __end_of_I2C1_EVENT_SEND_WR_ADDR:
 15019                           
 15020                           	psect	text75
 15021  0000'                    __ptext75:	
 15022 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 15023 ;; Defined at:
 15024 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;		None
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      enum E9544
 15031 ;; Registers used:
 15032 ;;		wreg, status,2, status,0, pclath, cstack
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15038 ;;      Params:         0       0       0       0       0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0
 15040 ;;      Temps:          0       0       0       0       0       0       0       0
 15041 ;;      Totals:         0       0       0       0       0       0       0       0
 15042 ;;Total ram usage:        0 bytes
 15043 ;; Hardware stack levels used: 1
 15044 ;; Hardware stack levels required when called: 1
 15045 ;; This function calls:
 15046 ;;		_I2C1_DataTransmit
 15047 ;; This function is called by:
 15048 ;;		_I2C1_EventHandler
 15049 ;;		_I2C1_ErrorEventHandler
 15050 ;; This function uses a non-reentrant model
 15051 ;;
 15052                           
 15053  0000'                    _I2C1_EVENT_SEND_RD_ADDR:	
 15054                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 15055                           
 15056  0000'                    i1l4009:	
 15057                           ;incstack = 0
 15058                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 15059                           
 15060                           
 15061                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 15062  0000' 1403               	setc
 15063  0001' 0021               	movlb	1	; select bank1
 15064  0002' 0D01'              	rlf	(_i2c1Status^(0+128)+1),w	;volatile
 15065  0003' 3180' 2000' 3180'  	fcall	_I2C1_DataTransmit
 15066  0006'                    i1l4011:
 15067                           
 15068                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 15069  0006' 3004               	movlw	4
 15070  0007'                    i1l237:
 15071  0007' 0008               	return
 15072  0008'                    __end_of_I2C1_EVENT_SEND_RD_ADDR:
 15073                           
 15074                           	psect	text76
 15075  0000'                    __ptext76:	
 15076 ;; *************** function _I2C1_EVENT_IDLE *****************
 15077 ;; Defined at:
 15078 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;		None
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;		None
 15083 ;; Return value:  Size  Location     Type
 15084 ;;                  1    wreg      enum E9544
 15085 ;; Registers used:
 15086 ;;		wreg, status,2
 15087 ;; Tracked objects:
 15088 ;;		On entry : 0/0
 15089 ;;		On exit  : 0/0
 15090 ;;		Unchanged: 0/0
 15091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15092 ;;      Params:         0       0       0       0       0       0       0       0
 15093 ;;      Locals:         0       0       0       0       0       0       0       0
 15094 ;;      Temps:          0       0       0       0       0       0       0       0
 15095 ;;      Totals:         0       0       0       0       0       0       0       0
 15096 ;;Total ram usage:        0 bytes
 15097 ;; Hardware stack levels used: 1
 15098 ;; This function calls:
 15099 ;;		Nothing
 15100 ;; This function is called by:
 15101 ;;		_I2C1_EventHandler
 15102 ;;		_I2C1_ErrorEventHandler
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106  0000'                    _I2C1_EVENT_IDLE:	
 15107                           ;psect for function _I2C1_EVENT_IDLE
 15108                           
 15109  0000'                    i1l4003:	
 15110                           ;incstack = 0
 15111                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 15112                           
 15113                           
 15114                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 15115  0000' 0021               	movlb	1	; select bank1
 15116  0001' 0180'              	clrf	_i2c1Status^(0+128)	;volatile
 15117  0002'                    i1l4005:
 15118                           
 15119                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 15120  0002' 3008               	movlw	8
 15121  0003'                    i1l234:
 15122  0003' 0008               	return
 15123  0004'                    __end_of_I2C1_EVENT_IDLE:
 15124                           
 15125                           	psect	text77
 15126  0000'                    __ptext77:	
 15127 ;; *************** function _I2C1_EVENT_TX *****************
 15128 ;; Defined at:
 15129 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15130 ;; Parameters:    Size  Location     Type
 15131 ;;		None
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;  retEventStat    1    3[COMMON] enum E9544
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      enum E9544
 15136 ;; Registers used:
 15137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15143 ;;      Params:         0       0       0       0       0       0       0       0
 15144 ;;      Locals:         1       0       0       0       0       0       0       0
 15145 ;;      Temps:          2       0       0       0       0       0       0       0
 15146 ;;      Totals:         3       0       0       0       0       0       0       0
 15147 ;;Total ram usage:        3 bytes
 15148 ;; Hardware stack levels used: 1
 15149 ;; Hardware stack levels required when called: 3
 15150 ;; This function calls:
 15151 ;;		_I2C1_DataTransmit
 15152 ;;		_I2C1_EVENT_STOP
 15153 ;;		_I2C1_RestartEnable
 15154 ;; This function is called by:
 15155 ;;		_I2C1_EventHandler
 15156 ;;		_I2C1_ErrorEventHandler
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160  0000'                    _I2C1_EVENT_TX:	
 15161                           ;psect for function _I2C1_EVENT_TX
 15162                           
 15163  0000'                    i1l4021:	
 15164                           ;incstack = 0
 15165 ;; hardware stack exceeded
 15166                           ; Regs used in _I2C1_EVENT_TX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15167                           
 15168  0000'                    i1l4023:
 15169                           
 15170                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 15171  0000' 0021               	movlb	1	; select bank1
 15172  0001' 0805'              	movf	(_i2c1Status^(0+128)+5),w	;volatile
 15173  0002' 0405'              	iorwf	((_i2c1Status+1)^(0+128)+5),w	;volatile
 15174  0003' 1903               	btfsc	3,2
 15175  0004' 2800'              	goto	u403_21
 15176  0005' 2800'              	goto	u403_20
 15177  0006'                    u403_21:
 15178  0006' 2800'              	goto	i1l4031
 15179  0007'                    u403_20:
 15180  0007'                    i1l4025:
 15181                           
 15182                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 15183  0007' 3001               	movlw	1
 15184  0008' 0285'              	subwf	(_i2c1Status^(0+128)+5),f	;volatile
 15185  0009' 3000               	movlw	0
 15186  000A' 3B85'              	subwfb	((_i2c1Status+1)^(0+128)+5),f	;volatile
 15187  000B'                    i1l4027:
 15188                           
 15189                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 15190  000B' 0800'              	movf	((low ((_i2c1Status| 0+3))+1))^(0+128),w	;volatile
 15191  000C' 0082'              	movwf	??_I2C1_EVENT_TX+1
 15192  000D' 0800'              	movf	(low ((_i2c1Status| 0+3)))^(0+128),w	;volatile
 15193  000E' 0081'              	movwf	??_I2C1_EVENT_TX
 15194  000F' 0A80'              	incf	(low ((_i2c1Status| 0+3)))^(0+128),f	;volatile
 15195  0010' 1903               	skipnz
 15196  0011' 0A80'              	incf	((low ((_i2c1Status| 0+3))+1))^(0+128),f	;volatile
 15197  0012' 0801'              	movf	??_I2C1_EVENT_TX,w
 15198  0013' 0086               	movwf	6
 15199  0014' 0802'              	movf	??_I2C1_EVENT_TX+1,w
 15200  0015' 0087               	movwf	7
 15201  0016' 0801               	movf	1,w
 15202  0017' 3180' 2000' 3180'  	fcall	_I2C1_DataTransmit
 15203  001A'                    i1l4029:
 15204                           
 15205                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 15206  001A' 3003               	movlw	3
 15207  001B' 0083'              	movwf	I2C1_EVENT_TX@retEventState
 15208                           
 15209                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 15210  001C' 2800'              	goto	i1l4041
 15211  001D'                    i1l4031:
 15212                           
 15213                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 15214  001D' 080B'              	movf	(_i2c1Status^(0+128)+11),w	;volatile
 15215  001E' 1903               	btfsc	3,2
 15216  001F' 2800'              	goto	u404_21
 15217  0020' 2800'              	goto	u404_20
 15218  0021'                    u404_21:
 15219  0021' 2800'              	goto	i1l4039
 15220  0022'                    u404_20:
 15221  0022'                    i1l4033:
 15222                           
 15223                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 15224  0022' 018B'              	clrf	(_i2c1Status^(0+128)+11)	;volatile
 15225  0023'                    i1l4035:
 15226                           
 15227                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 15228  0023' 3180' 2000' 3180'  	fcall	_I2C1_RestartEnable
 15229  0026'                    i1l4037:
 15230                           
 15231                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 15232  0026' 0183'              	clrf	I2C1_EVENT_TX@retEventState
 15233  0027' 0A83'              	incf	I2C1_EVENT_TX@retEventState,f
 15234                           
 15235                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 15236  0028' 2800'              	goto	i1l4041
 15237  0029'                    i1l4039:
 15238                           
 15239                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 15240  0029' 3180' 2000' 3180'  	fcall	_I2C1_EVENT_STOP
 15241  002C' 0083'              	movwf	I2C1_EVENT_TX@retEventState
 15242  002D'                    i1l4041:
 15243                           
 15244                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 15245  002D' 0803'              	movf	I2C1_EVENT_TX@retEventState,w
 15246  002E'                    i1l247:
 15247  002E' 0008               	return
 15248  002F'                    __end_of_I2C1_EVENT_TX:
 15249                           
 15250                           	psect	text78
 15251  0000'                    __ptext78:	
 15252 ;; *************** function _I2C1_RestartEnable *****************
 15253 ;; Defined at:
 15254 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15255 ;; Parameters:    Size  Location     Type
 15256 ;;		None
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;		None
 15259 ;; Return value:  Size  Location     Type
 15260 ;;                  1    wreg      void 
 15261 ;; Registers used:
 15262 ;;		None
 15263 ;; Tracked objects:
 15264 ;;		On entry : 0/0
 15265 ;;		On exit  : 0/0
 15266 ;;		Unchanged: 0/0
 15267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15268 ;;      Params:         0       0       0       0       0       0       0       0
 15269 ;;      Locals:         0       0       0       0       0       0       0       0
 15270 ;;      Temps:          0       0       0       0       0       0       0       0
 15271 ;;      Totals:         0       0       0       0       0       0       0       0
 15272 ;;Total ram usage:        0 bytes
 15273 ;; Hardware stack levels used: 1
 15274 ;; This function calls:
 15275 ;;		Nothing
 15276 ;; This function is called by:
 15277 ;;		_I2C1_EVENT_TX
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281  0000'                    _I2C1_RestartEnable:	
 15282                           ;psect for function _I2C1_RestartEnable
 15283                           
 15284  0000'                    i1l3555:	
 15285                           ;incstack = 0
 15286                           ; Regs used in _I2C1_RestartEnable: []
 15287                           
 15288                           
 15289                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 15290  0000' 0024               	movlb	4	; select bank4
 15291  0001' 1496               	bsf	22,1	;volatile
 15292  0002'                    i1l282:
 15293  0002' 0008               	return
 15294  0003'                    __end_of_I2C1_RestartEnable:
 15295                           
 15296                           	psect	text79
 15297  0000'                    __ptext79:	
 15298 ;; *************** function _I2C1_DataTransmit *****************
 15299 ;; Defined at:
 15300 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;  data            1    wreg     unsigned char 
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;  data            1    0[COMMON] unsigned char 
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		wreg
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15314 ;;      Params:         0       0       0       0       0       0       0       0
 15315 ;;      Locals:         1       0       0       0       0       0       0       0
 15316 ;;      Temps:          0       0       0       0       0       0       0       0
 15317 ;;      Totals:         1       0       0       0       0       0       0       0
 15318 ;;Total ram usage:        1 bytes
 15319 ;; Hardware stack levels used: 1
 15320 ;; This function calls:
 15321 ;;		Nothing
 15322 ;; This function is called by:
 15323 ;;		_I2C1_EVENT_SEND_RD_ADDR
 15324 ;;		_I2C1_EVENT_SEND_WR_ADDR
 15325 ;;		_I2C1_EVENT_TX
 15326 ;; This function uses a non-reentrant model
 15327 ;;
 15328                           
 15329  0000'                    _I2C1_DataTransmit:	
 15330                           ;psect for function _I2C1_DataTransmit
 15331                           
 15332                           
 15333                           ;incstack = 0
 15334                           ; Regs used in _I2C1_DataTransmit: [wreg]
 15335                           ;I2C1_DataTransmit@data stored from wreg
 15336  0000' 0080'              	movwf	I2C1_DataTransmit@data
 15337  0001'                    i1l3553:
 15338                           
 15339                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 15340  0001' 0800'              	movf	I2C1_DataTransmit@data,w
 15341  0002' 0024               	movlb	4	; select bank4
 15342  0003' 0091               	movwf	17	;volatile
 15343  0004'                    i1l273:
 15344  0004' 0008               	return
 15345  0005'                    __end_of_I2C1_DataTransmit:
 15346                           
 15347                           	psect	text80
 15348  0000'                    __ptext80:	
 15349 ;; *************** function _I2C1_RestartDisable *****************
 15350 ;; Defined at:
 15351 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;		None
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;		None
 15356 ;; Return value:  Size  Location     Type
 15357 ;;                  1    wreg      void 
 15358 ;; Registers used:
 15359 ;;		None
 15360 ;; Tracked objects:
 15361 ;;		On entry : 0/0
 15362 ;;		On exit  : 0/0
 15363 ;;		Unchanged: 0/0
 15364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15365 ;;      Params:         0       0       0       0       0       0       0       0
 15366 ;;      Locals:         0       0       0       0       0       0       0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0
 15368 ;;      Totals:         0       0       0       0       0       0       0       0
 15369 ;;Total ram usage:        0 bytes
 15370 ;; Hardware stack levels used: 1
 15371 ;; This function calls:
 15372 ;;		Nothing
 15373 ;; This function is called by:
 15374 ;;		_I2C1_EVENT_RX
 15375 ;; This function uses a non-reentrant model
 15376 ;;
 15377                           
 15378  0000'                    _I2C1_RestartDisable:	
 15379                           ;psect for function _I2C1_RestartDisable
 15380                           
 15381  0000'                    i1l3573:	
 15382                           ;incstack = 0
 15383                           ; Regs used in _I2C1_RestartDisable: []
 15384                           
 15385                           
 15386                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 15387  0000' 0024               	movlb	4	; select bank4
 15388  0001' 1096               	bcf	22,1	;volatile
 15389  0002'                    i1l285:
 15390  0002' 0008               	return
 15391  0003'                    __end_of_I2C1_RestartDisable:
 15392                           
 15393                           	psect	text81
 15394  0000'                    __ptext81:	
 15395 ;; *************** function _I2C1_ReceiveEnable *****************
 15396 ;; Defined at:
 15397 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;		None
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;		None
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      void 
 15404 ;; Registers used:
 15405 ;;		None
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15411 ;;      Params:         0       0       0       0       0       0       0       0
 15412 ;;      Locals:         0       0       0       0       0       0       0       0
 15413 ;;      Temps:          0       0       0       0       0       0       0       0
 15414 ;;      Totals:         0       0       0       0       0       0       0       0
 15415 ;;Total ram usage:        0 bytes
 15416 ;; Hardware stack levels used: 1
 15417 ;; This function calls:
 15418 ;;		Nothing
 15419 ;; This function is called by:
 15420 ;;		_I2C1_EVENT_RX
 15421 ;; This function uses a non-reentrant model
 15422 ;;
 15423                           
 15424  0000'                    _I2C1_ReceiveEnable:	
 15425                           ;psect for function _I2C1_ReceiveEnable
 15426                           
 15427  0000'                    i1l3577:	
 15428                           ;incstack = 0
 15429                           ; Regs used in _I2C1_ReceiveEnable: []
 15430                           
 15431                           
 15432                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 15433  0000' 0024               	movlb	4	; select bank4
 15434  0001' 1596               	bsf	22,3	;volatile
 15435  0002'                    i1l279:
 15436  0002' 0008               	return
 15437  0003'                    __end_of_I2C1_ReceiveEnable:
 15438                           
 15439                           	psect	text82
 15440  0000'                    __ptext82:	
 15441 ;; *************** function _I2C1_NackSend *****************
 15442 ;; Defined at:
 15443 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;		None
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;		None
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		None
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15457 ;;      Params:         0       0       0       0       0       0       0       0
 15458 ;;      Locals:         0       0       0       0       0       0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0       0
 15460 ;;      Totals:         0       0       0       0       0       0       0       0
 15461 ;;Total ram usage:        0 bytes
 15462 ;; Hardware stack levels used: 1
 15463 ;; This function calls:
 15464 ;;		Nothing
 15465 ;; This function is called by:
 15466 ;;		_I2C1_EVENT_RX
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470  0000'                    _I2C1_NackSend:	
 15471                           ;psect for function _I2C1_NackSend
 15472                           
 15473  0000'                    i1l3575:	
 15474                           ;incstack = 0
 15475                           ; Regs used in _I2C1_NackSend: []
 15476                           
 15477                           
 15478                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 15479  0000' 0024               	movlb	4	; select bank4
 15480  0001' 1696               	bsf	22,5	;volatile
 15481                           
 15482                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 15483  0002' 1616               	bsf	22,4	;volatile
 15484  0003'                    i1l297:
 15485  0003' 0008               	return
 15486  0004'                    __end_of_I2C1_NackSend:
 15487                           
 15488                           	psect	text83
 15489  0000'                    __ptext83:	
 15490 ;; *************** function _I2C1_IsRxBufFull *****************
 15491 ;; Defined at:
 15492 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15493 ;; Parameters:    Size  Location     Type
 15494 ;;		None
 15495 ;; Auto vars:     Size  Location     Type
 15496 ;;		None
 15497 ;; Return value:  Size  Location     Type
 15498 ;;                  1    wreg      _Bool 
 15499 ;; Registers used:
 15500 ;;		wreg, status,2, status,0
 15501 ;; Tracked objects:
 15502 ;;		On entry : 0/0
 15503 ;;		On exit  : 0/0
 15504 ;;		Unchanged: 0/0
 15505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15506 ;;      Params:         0       0       0       0       0       0       0       0
 15507 ;;      Locals:         0       0       0       0       0       0       0       0
 15508 ;;      Temps:          0       0       0       0       0       0       0       0
 15509 ;;      Totals:         0       0       0       0       0       0       0       0
 15510 ;;Total ram usage:        0 bytes
 15511 ;; Hardware stack levels used: 1
 15512 ;; This function calls:
 15513 ;;		Nothing
 15514 ;; This function is called by:
 15515 ;;		_I2C1_EVENT_RX
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519  0000'                    _I2C1_IsRxBufFull:	
 15520                           ;psect for function _I2C1_IsRxBufFull
 15521                           
 15522  0000'                    i1l3563:	
 15523                           ;incstack = 0
 15524                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 15525                           
 15526                           
 15527                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 15528  0000' 0024               	movlb	4	; select bank4
 15529  0001' 0814               	movf	20,w	;volatile
 15530  0002' 3901               	andlw	1
 15531  0003'                    i1l309:
 15532  0003' 0008               	return
 15533  0004'                    __end_of_I2C1_IsRxBufFull:
 15534                           
 15535                           	psect	text84
 15536  0000'                    __ptext84:	
 15537 ;; *************** function _I2C1_DataReceive *****************
 15538 ;; Defined at:
 15539 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15540 ;; Parameters:    Size  Location     Type
 15541 ;;		None
 15542 ;; Auto vars:     Size  Location     Type
 15543 ;;		None
 15544 ;; Return value:  Size  Location     Type
 15545 ;;                  1    wreg      unsigned char 
 15546 ;; Registers used:
 15547 ;;		wreg
 15548 ;; Tracked objects:
 15549 ;;		On entry : 0/0
 15550 ;;		On exit  : 0/0
 15551 ;;		Unchanged: 0/0
 15552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15553 ;;      Params:         0       0       0       0       0       0       0       0
 15554 ;;      Locals:         0       0       0       0       0       0       0       0
 15555 ;;      Temps:          0       0       0       0       0       0       0       0
 15556 ;;      Totals:         0       0       0       0       0       0       0       0
 15557 ;;Total ram usage:        0 bytes
 15558 ;; Hardware stack levels used: 1
 15559 ;; This function calls:
 15560 ;;		Nothing
 15561 ;; This function is called by:
 15562 ;;		_I2C1_EVENT_RX
 15563 ;; This function uses a non-reentrant model
 15564 ;;
 15565                           
 15566  0000'                    _I2C1_DataReceive:	
 15567                           ;psect for function _I2C1_DataReceive
 15568                           
 15569  0000'                    i1l3567:	
 15570                           ;incstack = 0
 15571                           ; Regs used in _I2C1_DataReceive: [wreg]
 15572                           
 15573                           
 15574                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 15575  0000' 0024               	movlb	4	; select bank4
 15576  0001' 0811               	movf	17,w	;volatile
 15577  0002'                    i1l270:
 15578  0002' 0008               	return
 15579  0003'                    __end_of_I2C1_DataReceive:
 15580                           
 15581                           	psect	text85
 15582  0000'                    __ptext85:	
 15583 ;; *************** function _I2C1_AckSend *****************
 15584 ;; Defined at:
 15585 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;		None
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;		None
 15590 ;; Return value:  Size  Location     Type
 15591 ;;                  1    wreg      void 
 15592 ;; Registers used:
 15593 ;;		None
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 0/0
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15599 ;;      Params:         0       0       0       0       0       0       0       0
 15600 ;;      Locals:         0       0       0       0       0       0       0       0
 15601 ;;      Temps:          0       0       0       0       0       0       0       0
 15602 ;;      Totals:         0       0       0       0       0       0       0       0
 15603 ;;Total ram usage:        0 bytes
 15604 ;; Hardware stack levels used: 1
 15605 ;; This function calls:
 15606 ;;		Nothing
 15607 ;; This function is called by:
 15608 ;;		_I2C1_EVENT_RX
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612  0000'                    _I2C1_AckSend:	
 15613                           ;psect for function _I2C1_AckSend
 15614                           
 15615  0000'                    i1l3571:	
 15616                           ;incstack = 0
 15617                           ; Regs used in _I2C1_AckSend: []
 15618                           
 15619                           
 15620                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 15621  0000' 0024               	movlb	4	; select bank4
 15622  0001' 1296               	bcf	22,5	;volatile
 15623                           
 15624                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 15625  0002' 1616               	bsf	22,4	;volatile
 15626  0003'                    i1l294:
 15627  0003' 0008               	return
 15628  0004'                    __end_of_I2C1_AckSend:
 15629                           
 15630                           	psect	text86
 15631  0000'                    __ptext86:	
 15632 ;; *************** function _I2C1_StopSend *****************
 15633 ;; Defined at:
 15634 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15635 ;; Parameters:    Size  Location     Type
 15636 ;;		None
 15637 ;; Auto vars:     Size  Location     Type
 15638 ;;		None
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  1    wreg      void 
 15641 ;; Registers used:
 15642 ;;		None
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15648 ;;      Params:         0       0       0       0       0       0       0       0
 15649 ;;      Locals:         0       0       0       0       0       0       0       0
 15650 ;;      Temps:          0       0       0       0       0       0       0       0
 15651 ;;      Totals:         0       0       0       0       0       0       0       0
 15652 ;;Total ram usage:        0 bytes
 15653 ;; Hardware stack levels used: 1
 15654 ;; This function calls:
 15655 ;;		Nothing
 15656 ;; This function is called by:
 15657 ;;		_I2C1_EVENT_STOP
 15658 ;; This function uses a non-reentrant model
 15659 ;;
 15660                           
 15661  0000'                    _I2C1_StopSend:	
 15662                           ;psect for function _I2C1_StopSend
 15663                           
 15664  0000'                    i1l3337:	
 15665                           ;incstack = 0
 15666                           ; Regs used in _I2C1_StopSend: []
 15667                           
 15668                           
 15669                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 15670  0000' 0024               	movlb	4	; select bank4
 15671  0001' 1516               	bsf	22,2	;volatile
 15672  0002'                    i1l291:
 15673  0002' 0008               	return
 15674  0003'                    __end_of_I2C1_StopSend:
 15675                           
 15676                           	psect	text87
 15677  0000'                    __ptext87:	
 15678 ;; *************** function _I2C1_Close *****************
 15679 ;; Defined at:
 15680 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;		None
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;		None
 15685 ;; Return value:  Size  Location     Type
 15686 ;;                  1    wreg      void 
 15687 ;; Registers used:
 15688 ;;		status,2, status,0, pclath, cstack
 15689 ;; Tracked objects:
 15690 ;;		On entry : 0/0
 15691 ;;		On exit  : 0/0
 15692 ;;		Unchanged: 0/0
 15693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15694 ;;      Params:         0       0       0       0       0       0       0       0
 15695 ;;      Locals:         0       0       0       0       0       0       0       0
 15696 ;;      Temps:          0       0       0       0       0       0       0       0
 15697 ;;      Totals:         0       0       0       0       0       0       0       0
 15698 ;;Total ram usage:        0 bytes
 15699 ;; Hardware stack levels used: 1
 15700 ;; Hardware stack levels required when called: 1
 15701 ;; This function calls:
 15702 ;;		_I2C1_ErrorInterruptClear
 15703 ;;		_I2C1_InterruptClear
 15704 ;;		_I2C1_StatusFlagsClear
 15705 ;; This function is called by:
 15706 ;;		_I2C1_EVENT_STOP
 15707 ;; This function uses a non-reentrant model
 15708 ;;
 15709                           
 15710  0000'                    _I2C1_Close:	
 15711                           ;psect for function _I2C1_Close
 15712                           
 15713  0000'                    i1l3327:	
 15714                           ;incstack = 0
 15715 ;; hardware stack exceeded
 15716                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 15717                           
 15718                           
 15719                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 15720  0000' 0021               	movlb	1	; select bank1
 15721  0001' 0180'              	clrf	_i2c1Status^(0+128)	;volatile
 15722  0002'                    i1l3329:
 15723                           
 15724                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 15725  0002' 3000               	movlw	0
 15726  0003' 0081'              	movwf	((_i2c1Status+1)^(0+128)+1)	;volatile
 15727  0004' 30FF               	movlw	255
 15728  0005' 0081'              	movwf	(_i2c1Status^(0+128)+1)	;volatile
 15729                           
 15730                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 15731  0006' 0180'              	clrf	(low ((_i2c1Status| 0+3)))^(0+128)	;volatile
 15732  0007' 0180'              	clrf	((low ((_i2c1Status| 0+3))+1))^(0+128)	;volatile
 15733                           
 15734                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 15735  0008' 0180'              	clrf	(low ((_i2c1Status| 0+7)))^(0+128)	;volatile
 15736  0009' 0180'              	clrf	((low ((_i2c1Status| 0+7))+1))^(0+128)	;volatile
 15737                           
 15738                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 15739  000A' 018D'              	clrf	(_i2c1Status^(0+128)+13)	;volatile
 15740  000B'                    i1l3331:
 15741                           
 15742                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 15743  000B' 3180' 2000' 3180'  	fcall	_I2C1_InterruptClear
 15744  000E'                    i1l3333:
 15745                           
 15746                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 15747  000E' 3180' 2000' 3180'  	fcall	_I2C1_ErrorInterruptClear
 15748  0011'                    i1l3335:
 15749                           
 15750                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 15751  0011' 3180' 2000' 3180'  	fcall	_I2C1_StatusFlagsClear
 15752  0014'                    i1l219:
 15753  0014' 0008               	return
 15754  0015'                    __end_of_I2C1_Close:
 15755                           
 15756                           	psect	text88
 15757  0000'                    __ptext88:	
 15758 ;; *************** function _I2C1_StatusFlagsClear *****************
 15759 ;; Defined at:
 15760 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15761 ;; Parameters:    Size  Location     Type
 15762 ;;		None
 15763 ;; Auto vars:     Size  Location     Type
 15764 ;;		None
 15765 ;; Return value:  Size  Location     Type
 15766 ;;                  1    wreg      void 
 15767 ;; Registers used:
 15768 ;;		None
 15769 ;; Tracked objects:
 15770 ;;		On entry : 0/0
 15771 ;;		On exit  : 0/0
 15772 ;;		Unchanged: 0/0
 15773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15774 ;;      Params:         0       0       0       0       0       0       0       0
 15775 ;;      Locals:         0       0       0       0       0       0       0       0
 15776 ;;      Temps:          0       0       0       0       0       0       0       0
 15777 ;;      Totals:         0       0       0       0       0       0       0       0
 15778 ;;Total ram usage:        0 bytes
 15779 ;; Hardware stack levels used: 1
 15780 ;; This function calls:
 15781 ;;		Nothing
 15782 ;; This function is called by:
 15783 ;;		_I2C1_Close
 15784 ;; This function uses a non-reentrant model
 15785 ;;
 15786                           
 15787  0000'                    _I2C1_StatusFlagsClear:	
 15788                           ;psect for function _I2C1_StatusFlagsClear
 15789                           
 15790  0000'                    i1l3305:	
 15791                           ;incstack = 0
 15792 ;; hardware stack exceeded
 15793                           ; Regs used in _I2C1_StatusFlagsClear: []
 15794                           
 15795                           
 15796                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 15797  0000' 0024               	movlb	4	; select bank4
 15798  0001' 1395               	bcf	21,7	;volatile
 15799                           
 15800                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 15801  0002' 1315               	bcf	21,6	;volatile
 15802  0003'                    i1l324:
 15803  0003' 0008               	return
 15804  0004'                    __end_of_I2C1_StatusFlagsClear:
 15805                           
 15806                           	psect	text89
 15807  0000'                    __ptext89:	
 15808 ;; *************** function _I2C1_InterruptClear *****************
 15809 ;; Defined at:
 15810 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;		None
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  1    wreg      void 
 15817 ;; Registers used:
 15818 ;;		None
 15819 ;; Tracked objects:
 15820 ;;		On entry : 0/0
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15824 ;;      Params:         0       0       0       0       0       0       0       0
 15825 ;;      Locals:         0       0       0       0       0       0       0       0
 15826 ;;      Temps:          0       0       0       0       0       0       0       0
 15827 ;;      Totals:         0       0       0       0       0       0       0       0
 15828 ;;Total ram usage:        0 bytes
 15829 ;; Hardware stack levels used: 1
 15830 ;; This function calls:
 15831 ;;		Nothing
 15832 ;; This function is called by:
 15833 ;;		_I2C1_Close
 15834 ;;		_I2C1_EventHandler
 15835 ;; This function uses a non-reentrant model
 15836 ;;
 15837                           
 15838  0000'                    _I2C1_InterruptClear:	
 15839                           ;psect for function _I2C1_InterruptClear
 15840                           
 15841  0000'                    i1l3301:	
 15842                           ;incstack = 0
 15843                           ; Regs used in _I2C1_InterruptClear: []
 15844                           
 15845                           
 15846                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 15847  0000' 0020               	movlb	0	; select bank0
 15848  0001' 1190               	bcf	16,3	;volatile
 15849  0002'                    i1l318:
 15850  0002' 0008               	return
 15851  0003'                    __end_of_I2C1_InterruptClear:
 15852                           
 15853                           	psect	text90
 15854  0000'                    __ptext90:	
 15855 ;; *************** function _I2C1_ErrorInterruptClear *****************
 15856 ;; Defined at:
 15857 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;		None
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;		None
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		None
 15866 ;; Tracked objects:
 15867 ;;		On entry : 0/0
 15868 ;;		On exit  : 0/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15871 ;;      Params:         0       0       0       0       0       0       0       0
 15872 ;;      Locals:         0       0       0       0       0       0       0       0
 15873 ;;      Temps:          0       0       0       0       0       0       0       0
 15874 ;;      Totals:         0       0       0       0       0       0       0       0
 15875 ;;Total ram usage:        0 bytes
 15876 ;; Hardware stack levels used: 1
 15877 ;; This function calls:
 15878 ;;		Nothing
 15879 ;; This function is called by:
 15880 ;;		_I2C1_Close
 15881 ;;		_I2C1_ErrorEventHandler
 15882 ;; This function uses a non-reentrant model
 15883 ;;
 15884                           
 15885  0000'                    _I2C1_ErrorInterruptClear:	
 15886                           ;psect for function _I2C1_ErrorInterruptClear
 15887                           
 15888  0000'                    i1l3303:	
 15889                           ;incstack = 0
 15890 ;; hardware stack exceeded
 15891                           ; Regs used in _I2C1_ErrorInterruptClear: []
 15892                           
 15893                           
 15894                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 15895  0000' 0020               	movlb	0	; select bank0
 15896  0001' 1191               	bcf	17,3	;volatile
 15897  0002'                    i1l321:
 15898  0002' 0008               	return
 15899  0003'                    __end_of_I2C1_ErrorInterruptClear:
 15900                           
 15901                           	psect	text91
 15902  0000'                    __ptext91:	
 15903 ;; *************** function _I2C1_BusReset *****************
 15904 ;; Defined at:
 15905 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15906 ;; Parameters:    Size  Location     Type
 15907 ;;		None
 15908 ;; Auto vars:     Size  Location     Type
 15909 ;;		None
 15910 ;; Return value:  Size  Location     Type
 15911 ;;                  1    wreg      void 
 15912 ;; Registers used:
 15913 ;;		None
 15914 ;; Tracked objects:
 15915 ;;		On entry : 0/0
 15916 ;;		On exit  : 0/0
 15917 ;;		Unchanged: 0/0
 15918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15919 ;;      Params:         0       0       0       0       0       0       0       0
 15920 ;;      Locals:         0       0       0       0       0       0       0       0
 15921 ;;      Temps:          0       0       0       0       0       0       0       0
 15922 ;;      Totals:         0       0       0       0       0       0       0       0
 15923 ;;Total ram usage:        0 bytes
 15924 ;; Hardware stack levels used: 1
 15925 ;; This function calls:
 15926 ;;		Nothing
 15927 ;; This function is called by:
 15928 ;;		_I2C1_EVENT_RESET
 15929 ;; This function uses a non-reentrant model
 15930 ;;
 15931                           
 15932  0000'                    _I2C1_BusReset:	
 15933                           ;psect for function _I2C1_BusReset
 15934                           
 15935  0000'                    i1l3339:	
 15936                           ;incstack = 0
 15937                           ; Regs used in _I2C1_BusReset: []
 15938                           
 15939                           
 15940                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 15941  0000' 0024               	movlb	4	; select bank4
 15942  0001' 1295               	bcf	21,5	;volatile
 15943                           
 15944                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 15945  0002' 1695               	bsf	21,5	;volatile
 15946  0003'                    i1l276:
 15947  0003' 0008               	return
 15948  0004'                    __end_of_I2C1_BusReset:
 15949                           
 15950                           	psect	text92
 15951  0000'                    __ptext92:	
 15952 ;; *************** function _I2C1_DefaultCallback *****************
 15953 ;; Defined at:
 15954 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;		None
 15957 ;; Auto vars:     Size  Location     Type
 15958 ;;		None
 15959 ;; Return value:  Size  Location     Type
 15960 ;;                  1    wreg      void 
 15961 ;; Registers used:
 15962 ;;		None
 15963 ;; Tracked objects:
 15964 ;;		On entry : 0/0
 15965 ;;		On exit  : 0/0
 15966 ;;		Unchanged: 0/0
 15967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15968 ;;      Params:         0       0       0       0       0       0       0       0
 15969 ;;      Locals:         0       0       0       0       0       0       0       0
 15970 ;;      Temps:          0       0       0       0       0       0       0       0
 15971 ;;      Totals:         0       0       0       0       0       0       0       0
 15972 ;;Total ram usage:        0 bytes
 15973 ;; Hardware stack levels used: 1
 15974 ;; This function calls:
 15975 ;;		Nothing
 15976 ;; This function is called by:
 15977 ;;		_I2C1_Initialize
 15978 ;;		_I2C1_Deinitialize
 15979 ;;		_I2C1_ErrorEventHandler
 15980 ;; This function uses a non-reentrant model
 15981 ;;
 15982                           
 15983  0000'                    _I2C1_DefaultCallback:	
 15984                           ;psect for function _I2C1_DefaultCallback
 15985                           
 15986  0000'                    i1l231:	
 15987                           ;incstack = 0
 15988                           ; Regs used in _I2C1_DefaultCallback: []
 15989                           
 15990  0000' 0008               	return
 15991  0001'                    __end_of_I2C1_DefaultCallback:
 15992                           
 15993                           	psect	text93
 15994  0000'                    __ptext93:	
 15995 ;; *************** function _ADC_ISR *****************
 15996 ;; Defined at:
 15997 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 15998 ;; Parameters:    Size  Location     Type
 15999 ;;		None
 16000 ;; Auto vars:     Size  Location     Type
 16001 ;;		None
 16002 ;; Return value:  Size  Location     Type
 16003 ;;                  1    wreg      void 
 16004 ;; Registers used:
 16005 ;;		wreg, status,2, status,0, pclath, cstack
 16006 ;; Tracked objects:
 16007 ;;		On entry : 0/0
 16008 ;;		On exit  : 0/0
 16009 ;;		Unchanged: 0/0
 16010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 16011 ;;      Params:         0       0       0       0       0       0       0       0
 16012 ;;      Locals:         0       0       0       0       0       0       0       0
 16013 ;;      Temps:          0       0       0       0       0       0       0       0
 16014 ;;      Totals:         0       0       0       0       0       0       0       0
 16015 ;;Total ram usage:        0 bytes
 16016 ;; Hardware stack levels used: 1
 16017 ;; Hardware stack levels required when called: 1
 16018 ;; This function calls:
 16019 ;;		NULL
 16020 ;;		_ADC_DefaultInterruptHandler
 16021 ;; This function is called by:
 16022 ;;		_INTERRUPT_InterruptManager
 16023 ;; This function uses a non-reentrant model
 16024 ;;
 16025                           
 16026  0000'                    _ADC_ISR:	
 16027                           ;psect for function _ADC_ISR
 16028                           
 16029  0000'                    i1l4397:	
 16030                           ;incstack = 0
 16031                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 16032                           
 16033                           
 16034                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 16035  0000' 0020               	movlb	0	; select bank0
 16036  0001' 1310               	bcf	16,6	;volatile
 16037  0002'                    i1l4399:
 16038                           
 16039                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 16040  0002' 0021               	movlb	1	; select bank1
 16041  0003' 0800'              	movf	_ADC_InterruptHandler^(0+128),w
 16042  0004' 0400'              	iorwf	(_ADC_InterruptHandler+1)^(0+128),w
 16043  0005' 1903               	btfsc	3,2
 16044  0006' 2800'              	goto	u436_21
 16045  0007' 2800'              	goto	u436_20
 16046  0008'                    u436_21:
 16047  0008' 2800'              	goto	i1l52
 16048  0009'                    u436_20:
 16049  0009'                    i1l4401:
 16050                           
 16051                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 16052  0009' 0800'              	movf	(_ADC_InterruptHandler+1)^(0+128),w
 16053  000A' 008A               	movwf	10
 16054  000B' 0800'              	movf	_ADC_InterruptHandler^(0+128),w
 16055  000C' 000A               	callw
 16056  000D' 3180'              	pagesel	$
 16057  000E'                    i1l52:
 16058  000E' 0008               	return
 16059  000F'                    __end_of_ADC_ISR:
 16060                           
 16061                           	psect	text94
 16062  0000'                    __ptext94:	
 16063 ;; *************** function _ADC_DefaultInterruptHandler *****************
 16064 ;; Defined at:
 16065 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;		None
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;		None
 16070 ;; Return value:  Size  Location     Type
 16071 ;;                  1    wreg      void 
 16072 ;; Registers used:
 16073 ;;		None
 16074 ;; Tracked objects:
 16075 ;;		On entry : 0/0
 16076 ;;		On exit  : 0/0
 16077 ;;		Unchanged: 0/0
 16078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 16079 ;;      Params:         0       0       0       0       0       0       0       0
 16080 ;;      Locals:         0       0       0       0       0       0       0       0
 16081 ;;      Temps:          0       0       0       0       0       0       0       0
 16082 ;;      Totals:         0       0       0       0       0       0       0       0
 16083 ;;Total ram usage:        0 bytes
 16084 ;; Hardware stack levels used: 1
 16085 ;; This function calls:
 16086 ;;		Nothing
 16087 ;; This function is called by:
 16088 ;;		_ADC_Initialize
 16089 ;;		_ADC_ISR
 16090 ;; This function uses a non-reentrant model
 16091 ;;
 16092                           
 16093  0000'                    _ADC_DefaultInterruptHandler:	
 16094                           ;psect for function _ADC_DefaultInterruptHandler
 16095                           
 16096  0000'                    i1l58:	
 16097                           ;incstack = 0
 16098                           ; Regs used in _ADC_DefaultInterruptHandler: []
 16099                           
 16100  0000' 0008               	return
 16101  0001'                    __end_of_ADC_DefaultInterruptHandler:
 16102  007E                     btemp	set	126	;btemp
 16103  007E                     int$flags	set	126
 16104  007E                     wtemp0	set	126
 16105                           
 16106                           	psect	config
 16107                           
 16108                           ;Config register CONFIG1 @ 0x8007
 16109                           ;	Oscillator Selection Bits
 16110                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 16111                           ;	Power-up Timer Enable
 16112                           ;	PWRTE = OFF, PWRT disabled
 16113                           ;	MCLR Pin Function Select
 16114                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 16115                           ;	Flash Program Memory Code Protection
 16116                           ;	CP = OFF, Program memory code protection is disabled
 16117                           ;	Brown-out Reset Enable
 16118                           ;	BOREN = ON, Brown-out Reset enabled
 16119                           ;	Clock Out Enable
 16120                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 16121  8007                     	org	32775
 16122  8007  3FFC               	dw	16380
 16123                           
 16124                           ;Config register CONFIG2 @ 0x8008
 16125                           ;	Flash Memory Self-Write Protection
 16126                           ;	WRT = OFF, Write protection off
 16127                           ;	Peripheral Pin Select one-way control
 16128                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 16129                           ;	Zero Cross Detect Disable Bit
 16130                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 16131                           ;	PLL Enable Bit
 16132                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 16133                           ;	Stack Overflow/Underflow Reset Enable
 16134                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16135                           ;	Brown-out Reset Voltage Selection
 16136                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 16137                           ;	Low-Power Brown Out Reset
 16138                           ;	LPBOR = OFF, Low-Power BOR is disabled
 16139                           ;	In-Circuit Debugger Mode
 16140                           ;	DEBUG = 0x1, unprogrammed default
 16141                           ;	Low-Voltage Programming Enable
 16142                           ;	LVP = ON, Low-voltage programming enabled
 16143  8008                     	org	32776
 16144  8008  3EFF               	dw	16127
 16145                           
 16146                           ;Config register CONFIG3 @ 0x8009
 16147                           ;	WDT Period Select
 16148                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 16149                           ;	Watchdog Timer Enable
 16150                           ;	WDTE = OFF, WDT disabled
 16151                           ;	WDT Window Select
 16152                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 16153                           ;	WDT Input Clock Selector
 16154                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 16155  8009                     	org	32777
 16156  8009  3F9F               	dw	16287

Data Sizes:
    Strings     214
    Constant    86
    Data        24
    BSS         75
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     37      76
    BANK2            80      0      56
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    __assert_fail@expr	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_10(CODE[36]), STR_16(CODE[55]), STR_4(CODE[43]), 

    __assert_fail@file	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), STR_17(CODE[7]), STR_5(CODE[7]), 

    __assert_fail@func	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_12(CODE[13]), STR_18(CODE[13]), STR_6(CODE[12]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E9544[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    i2c1Status$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C_Host$ErrorGet	PTR FTN()enum E9535 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    KAPS_getIndex@kaps	PTR struct . size(1) Largest target is 7
		 -> kaps(BANK1[7]), 

    KAPS_getPos@kaps	PTR struct . size(1) Largest target is 7
		 -> kaps(BANK1[7]), 

    KAPS_getStatus@kaps	PTR struct . size(1) Largest target is 7
		 -> kaps(BANK1[7]), 

    KAPS_GoToIdx@kaps	PTR struct . size(1) Largest target is 7
		 -> kaps(BANK1[7]), 

    KAPS_setAbsPos@kaps	PTR struct . size(1) Largest target is 7
		 -> kaps(BANK1[7]), 

    KAPS_setRelPos@kaps	PTR struct . size(1) Largest target is 7
		 -> kaps(BANK1[7]), 

    KAPS_StorePos@kaps	PTR struct . size(1) Largest target is 7
		 -> kaps(BANK1[7]), 

    packLong@data	PTR unsigned char  size(1) Largest target is 12
		 -> main@parser(BANK1[12]), 

    Parse@parser	PTR struct . size(1) Largest target is 12
		 -> main@parser(BANK1[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_19(CODE[35]), 

    ProcessMsg@data	PTR unsigned char  size(1) Largest target is 12
		 -> main@parser(BANK1[12]), 

    S189$2$1	PTR unsigned char  size(2) Largest target is 0

    S189$3$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$1	PTR unsigned char  size(2) Largest target is 0

    S189$4$3	PTR unsigned char  size(2) Largest target is 0

    S189$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S189$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S189$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S189$ErrorGet	PTR FTN()enum E9535 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S189$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S189$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S189$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S189$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S189$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S189$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S189$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S1980$buffer	PTR unsigned char  size(2) Largest target is 0

    S1980$source	PTR const unsigned char  size(2) Largest target is 0

    S288$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S288$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S996$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S996$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S996$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S996$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S996$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S996$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S996$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S996$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S996$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S996$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S996$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S996$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S996$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S996$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S996$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S996$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S996$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S996$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S996$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    SendMsg@data	PTR unsigned char  size(1) Largest target is 12
		 -> main@parser(BANK1[12]), ProcessMsg@payload(BANK1[6]), SendNack@error(BANK0[1]), 

    SSPA_getPOut@sspa	PTR struct . size(1) Largest target is 24
		 -> sppas(BANK2[24]), 

    SSPA_getTemp@sspa	PTR struct . size(1) Largest target is 24
		 -> sppas(BANK2[24]), 

    SSPA_setMute@sspa	PTR struct . size(1) Largest target is 24
		 -> sppas(BANK2[24]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    unpackLong@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 

    unpackWord@data	PTR unsigned char  size(1) Largest target is 6
		 -> ProcessMsg@payload(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 35
		 -> STR_19(CODE[35]), 

    vfpfcnvrt@cp_2048	PTR unsigned char  size(2) Largest target is 55
		 -> ?_printf(BANK0[2]), STR_10(CODE[36]), STR_11(CODE[7]), STR_12(CODE[13]), 
		 -> STR_16(CODE[55]), STR_17(CODE[7]), STR_18(CODE[13]), STR_4(CODE[43]), 
		 -> STR_5(CODE[7]), STR_6(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_19(CODE[35]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_19(CODE[35]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit

Critical Paths under _main in BANK0

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler
    _SendNack->_SendMsg
    _SendMsg->_EUSART_Write
    _SSPA_getTemp->___fltol
    _SSPA_getPOut->___fltol
    _getADCValue->___assert_fail
    ___assert_fail->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _abort->_exit
    _exit->__Exit
    ___fltol->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flsub
    _KAPS_setRelPos->_packLong
    _KAPS_setAbsPos->_packLong
    _KAPS_StorePos->_packLong

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Parse
    _Parse->_ProcessMsg
    _ProcessMsg->_SSPA_getPOut
    _ProcessMsg->_SSPA_getTemp
    _SSPA_getTemp->___fltol
    _SSPA_getPOut->___fltol

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   56814
                                             24 BANK1     13    13      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                              _Parse
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     788
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     121
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     242
              _I2C1_CallbackRegister
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     242
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     304
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     121
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Parse                                                4     3      1   55670
                                             20 BANK1      4     3      1
                         _ProcessMsg
                            _SendMsg
                           _SendNack
 ---------------------------------------------------------------------------------
 (2) _SendNack                                             1     1      0    2097
                                              6 BANK0      1     1      0
                            _SendMsg
 ---------------------------------------------------------------------------------
 (2) _ProcessMsg                                           9     8      1   49899
                                             11 BANK1      9     8      1
                       _KAPS_GoToIdx
                      _KAPS_StorePos
                      _KAPS_getIndex
                        _KAPS_getPos
                     _KAPS_getStatus
                     _KAPS_setAbsPos
                     _KAPS_setRelPos
                       _SSPA_getPOut
                       _SSPA_getTemp
                       _SSPA_setMute
                            _SendMsg
                           _packLong
                         _unpackLong
                         _unpackWord
 ---------------------------------------------------------------------------------
 (3) _unpackWord                                           3     0      3     304
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _unpackLong                                           9     4      5     480
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _packLong                                            13     9      4     214
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (3) _SendMsg                                              5     3      2    2060
                                              1 BANK0      5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1     391
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _SSPA_setMute                                         3     1      2     371
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _SSPA_getTemp                                         7     6      1   22160
                                              4 BANK1      7     6      1
                      ___assert_fail
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _getADCValue
 ---------------------------------------------------------------------------------
 (3) _SSPA_getPOut                                         7     6      1   22312
                                              4 BANK1      7     6      1
                      ___assert_fail
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _getADCValue
 ---------------------------------------------------------------------------------
 (4) _getADCValue                                          8     6      2    6152
                                             56 BANK0      8     6      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (5) ___assert_fail                                        8     0      8    5985
                                             48 BANK0      8     0      8
                              _abort
                             _printf
 ---------------------------------------------------------------------------------
 (6) _printf                                              13     3     10    4567
                                             37 BANK0     11     1     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     3      5    4390
                                             29 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           18    14      4    3905
                                             11 BANK0     18    14      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1137
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (6) _abort                                                0     0      0     214
                               _exit
 ---------------------------------------------------------------------------------
 (7) _exit                                                 2     0      2     214
                                              2 BANK0      2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (8) ___funcs_on_exit                                      3     3      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) __Exit                                                2     0      2      90
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_SelectChannel                                    2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_GetConversionResult                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     533
                                             74 BANK0      6     2      4
                                              0 BANK1      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2921
                                             40 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    2136
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3893
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1729
                                             48 BANK0     26    18      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _KAPS_setRelPos                                       5     1      4     145
                                             13 BANK0      5     1      4
                           _packLong (ARG)
 ---------------------------------------------------------------------------------
 (3) _KAPS_setAbsPos                                       5     1      4     145
                                             13 BANK0      5     1      4
                           _packLong (ARG)
 ---------------------------------------------------------------------------------
 (3) _KAPS_getStatus                                       1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _KAPS_getPos                                          1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _KAPS_getIndex                                        1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _KAPS_StorePos                                        6     1      5     235
                                             13 BANK0      6     1      5
                           _packLong (ARG)
 ---------------------------------------------------------------------------------
 (3) _KAPS_GoToIdx                                         2     1      1     188
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     328
                            _ADC_ISR
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (12) _I2C1_ISR                                            0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (13) _I2C1_EventHandler                                   2     2      0     164
                                              4 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (14) _I2C1_IsNack                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_IsData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_IsAddr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ERROR_ISR                                      0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (13) _I2C1_ErrorEventHandler                              2     2      0     164
                                              4 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_TX                                       3     3      0      48
                                              1 COMMON     3     3      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (15) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_SEND_WR_ADDR                             0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_SEND_RD_ADDR                             0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (15) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_RX                                       2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (15) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_NACK                                     1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (15) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (16) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (17) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_InterruptClear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_IDLE                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_ERROR                                    1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (14) _I2C1_EVENT_RESET                                    0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (15) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_DefaultCallback                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_IsRxReady
   _EUSART_Read
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _Parse
     _ProcessMsg
       _KAPS_GoToIdx
       _KAPS_StorePos
         _packLong (ARG)
       _KAPS_getIndex
       _KAPS_getPos
       _KAPS_getStatus
       _KAPS_setAbsPos
         _packLong (ARG)
       _KAPS_setRelPos
         _packLong (ARG)
       _SSPA_getPOut
         ___assert_fail
           _abort
             _exit
               __Exit
               ___funcs_on_exit
           _printf
             _vfprintf
               _vfpfcnvrt
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _fputc
                   _putch
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flsub
         ___fltol
           ___fldiv (ARG)
           ___flmul (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _getADCValue
           _ADC_GetConversionResult
           _ADC_IsConversionDone
           _ADC_SelectChannel
           _ADC_StartConversion
           ___assert_fail
       _SSPA_getTemp
         ___assert_fail
         ___fldiv
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
         _getADCValue
       _SSPA_setMute
       _SendMsg
         _EUSART_Write
       _packLong
       _unpackLong
       _unpackWord
     _SendMsg
     _SendNack
       _SendMsg
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _I2C1_ERROR_ISR
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      38      10       70.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      E0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 09 15:59:59 2024

                                      ___fldiv@aexp 0049                                        ___fldiv@bexp 0048  
                            ??_I2C1_DefaultCallback 0000                                        ___fldiv@sign 0041  
                                                l30 000E                                                  l33 0002  
                                                l27 0013                                                  l36 0006  
                                                l39 0008                                                  l55 0008  
                                      ___awdiv@sign 0006         __end_of_EUSART_OverrunErrorCallbackRegister 000F  
             ??_EUSART_OverrunErrorCallbackRegister 0002                ?_EUSART_OverrunErrorCallbackRegister 0000  
               _EUSART_OverrunErrorCallbackRegister 0000                                     ??_I2C1_NackSend 0000  
                                   ??_I2C1_BusReset 0000                                       ?_KAPS_GoToIdx 0000  
                                     _KAPS_StorePos 0000                                  ___assert_fail@file 0032  
                                      _SSPA_getPOut 0000                                  ___assert_fail@func 0036  
                                ___assert_fail@line 0034                                  ___assert_fail@expr 0030  
                                      _SSPA_getTemp 0000                                 __Umul8_16@word_mpld 0006  
                                               l204 000E                                                 l312 0003  
                                               l410 004A                                                 l333 0007  
                                               l177 0016                                                 l610 0029  
                                               l442 000B                                                 l613 0004  
                                               l623 000B                                                 l616 0000  
                                               l705 00A8                                                 l465 0005  
                                               l722 0000                                                 l619 0003  
                                               l731 0000                                                 l627 000E  
                                               l483 0012                                                 l716 0193  
                                               l548 001E                                                 l725 0000  
                                               l709 0001                                                 l741 0038  
                                               l734 0000                                                 l662 0044  
                                               l719 0008                                                 l592 0004  
                                               l728 0000                                                 l656 0056  
                                               l737 0000                                                 l673 0036  
                                               l665 000B                                                 l690 0016  
                                               l682 000B                                                 l762 017D  
                                               l746 000A                                                 l694 002B  
                                               l687 0013                                                 l679 0008  
                                               l791 014D                                        ?_KAPS_getPos 0000  
                                               _abs 0000                           __end_of_I2C1_DataTransmit 0005  
                                   __end_of_ADC_ISR 000F                     __end_of_ADC_SetInterruptHandler 0009  
                                      ___awmod@sign 0006                                                 wreg 0009  
                          _I2C1_ErrorInterruptClear 0000                                        _SSPA_setMute 0000  
                                      ___flmul@aexp 001C                                        ___flmul@bexp 0021  
                      ?_ADC_DefaultInterruptHandler 0000                                       SendMsg@msg_id 0005  
                                      ___flmul@sign 001B                                        ___flmul@temp 0026  
                                      ___flmul@prod 0022                                       _KAPS_getIndex 0000  
                                      ?_EUSART_Read 0000                                        _BAUD1CONbits 019F  
                                  __end_of_I2C1_ISR 0004                                        ___fltol@exp1 004F  
                                              l1020 005F                                                l1033 0053  
                                              l1210 0200                                                l1202 01DE  
                                              l1211 0207                                                ?_abs 0007  
                                              l1061 007A                                                l1214 001F  
                                              l1310 00AA                                                l1071 007A  
                                              l1240 012F                                                l1224 0051  
                                              l1321 0076                                                l1226 01A9  
                                              l1322 0082                                                l1314 005C  
                                              l1330 001B                                                l1172 00D3  
                                              l1068 0065                                                l1308 0023  
                                              l1245 017B                                                l1181 0207  
                                              l1246 0195                                                l1270 01BA  
                                              l1174 00B1                                                l1342 000B  
                                              l1406 0186                                                l1335 0008  
                                              l1248 01A2                                                l1264 023A  
                                              l1168 0056                                                l1193 0185  
                                              l1345 0000                                                l1426 0011  
                                              l1283 0013                                                l1419 001D  
                                              l1276 022E                                                l1285 0023  
                                              l1189 0163                                                l1357 000D  
                                              l4101 0019                                                l1438 005E  
                                              l1199 01A7                                                l4103 0030  
                                              l4111 0006                                                l1368 000F  
                                              l5001 00F5                                                l3401 006C  
                                              l1449 0000                                                l4105 0048  
                                              l4113 001A                                                l5011 0132  
                                              l5003 00FC                                                l3411 0076  
                                              l3403 006E                                                l4115 002F  
                                              l5021 0183                                                l5013 0144  
                                              l5005 010E                                                l3501 0199  
                                              l3421 0080                                                l3413 0078  
                                              l3405 0070                                                l5101 000E  
                                              l4109 0000                                                l5023 018A  
                                              l5031 019A                                                l5015 0159  
                                              l5007 0115                                                l3511 01AC  
                                              l3503 019A                                                l3431 00B9  
                                              l3415 007A                                                l3407 0072  
                                              l3423 0082                                                l3351 000A  
                                              l5111 0003                                                l5033 019E  
                                              l5025 018E                                                l5017 0170  
                                              l5009 0127                                                l3521 01E3  
                                              l3513 01B1                                                l3505 019E  
                                              l3433 00BB                                                l3441 00CC  
                                              l3425 0083                                                l3417 007C  
                                              l3409 0074                                                l3361 001E  
                                              l3353 000B                                                l3345 0000  
                                              l5121 001A                                                l5113 0006  
                                              l5105 0019                                                l5201 0011  
                                              l5051 01E8                                                l5043 01BF  
                                              l5035 019F                                                l5027 018F  
                                              l5019 0177                                                l3531 01FA  
                                              l3523 01E8                                                l3515 01B9  
                                              l3507 01A4                                                l3451 00ED  
                                              l3443 00D7                                                l3435 00BF  
                                              l3427 009A                                                l3419 007E  
                                              l3371 0032                                                l3355 0010  
                                              l3363 0020                                                l3347 0004  
                                              l3195 0000                                                l5131 0003  
                                              l5123 0020                                                l5107 0024  
                                              l5211 0014                                                l5203 0000  
                                              l3701 0065                                                l5061 021A  
                                              l5045 01C4                                                l5053 01EC  
                                              l5037 01A3                                                l5029 0196  
                                              l3533 01FC                                                l3525 01F0  
                                              l3517 01BD                                                l3461 00FF  
                                              l3453 00F1                                                l3445 00DC  
                                              l3437 00C0                                                l3429 00B5  
                                              l3381 0043                                                l3373 0034  
                                              l3365 0028                                                l3357 0015  
                                              l3349 0006                                                l3197 0005  
                                              l5141 00F2                                                l5133 0079  
                                              l5125 0034                                                l5117 0009  
                                              l5109 0002                                                l5301 0037  
                                              l5213 0000                                                l5205 0005  
                                              l5221 0002                                                l3703 0069  
                                              l5071 0232                                                l5063 021C  
                                              l5055 01F9                                                l5047 01CC  
                                              l5039 01B7                                                l3535 0202  
                                              l3527 01F5                                                l3519 01DA  
                                              l3471 0147                                                l3463 0100  
                                              l3455 00F5                                                l3439 00C8  
                                              l3391 0060                                                l3383 004B  
                                              l3375 0038                                                l3367 002B  
                                              l3359 001D                                                l3631 0037  
                                              l3623 0013                                                l3199 0006  
                                              l5143 00F4                                                l5135 007C  
                                              l5151 016E                                                l5127 0041  
                                              l5119 0014                                                l5311 007A  
                                              l5303 003D                                                l5215 0003  
                                              l5207 0006                                                l5231 001F  
                                              l5223 0004                                                l3721 00A8  
                                              l3713 0080                                                l5065 0227  
                                              l5057 0203                                                l5049 01D0  
                                              l3537 0206                                                l3529 01F6  
                                              l3481 0170                                                l3473 014D  
                                              l3465 0108                                                l3457 00F9  
                                              l3449 00E5                                                l3393 0064  
                                              l3385 004C                                                l3377 0039  
                                              l3369 0031                                                l3633 003B  
                                              l3641 0055                                                l3625 002C  
                                              l3617 0000                                                l5153 0174  
                                              l5145 0100                                                l5137 007C  
                                              l5129 0000                                                l5161 0002  
                                              l4097 0002                                                l5321 00B9  
                                              l5313 008B                                                l5305 0056  
                                              l5401 004F                                                l5217 0005  
                                              l5081 0007                                                l5209 0009  
                                              l5241 002A                                                l5233 0020  
                                              l5225 001A                                                l3731 00C2  
                                              l3723 00AA                                                l3715 0090  
                                              l3707 0072                                                l5067 022B  
                                              l5059 0211                                                l3491 0189  
                                              l3475 0152                                                l3459 00FB  
                                              l3467 010D                                                l3395 0066  
                                              l3379 003E                                                l3387 004E  
                                              l3651 006F                                                l3627 002D  
                                              l3619 000A                                                l5155 0179  
                                              l5139 0088                                                l5171 0016  
                                              l5163 0003                                                l4099 0002  
                                              l5331 00E7                                                l5323 00C3  
                                              l5315 00A8                                                l5307 0060  
                                              l5411 007C                                                l5403 005A  
                                              l5075 0000                                                l5091 0007  
                                              l5083 0000                                                l5251 0037  
                                              l5243 002C                                                l5235 0023  
                                              l5227 001C                                                l5219 0000  
                                              l3725 00AF                                                l3733 00C9  
                                              l3741 00E8                                                l3717 0098  
                                              l3709 0077                                                l3661 0004  
                                              l5069 022C                                                l3493 018C  
                                              l3485 0179                                                l3469 0123  
                                              l3477 015B                                                l3397 0068  
                                              l3389 005C                                                l3629 0035  
                                              l4701 0051                                                l5157 017F  
                                              l5149 0162                                                l5181 0030  
                                              l5165 0008                                                l5093 0000  
                                              l5341 012F                                                l5333 00EA  
                                              l5325 00C7                                                l5317 00B2  
                                              l5309 0074                                                l5501 013F  
                                              l5421 00B9                                                l5413 0082  
                                              l5405 0060                                                l5085 0000  
                                              l5077 0000                                                l5261 0043  
                                              l5253 003A                                                l5245 002E  
                                              l5237 0025                                                l5229 001E  
                                              l5351 0000                                                l5159 0002  
                                              l3751 0103                                                l3743 00EE  
                                              l3735 00DB                                                l3727 00BD  
                                              l3719 00A0                                                l3671 0015  
                                              l3663 0006                                                l3495 018E  
                                              l3487 0180                                                l3479 016B  
                                              l3399 006A                                                l3647 005C  
                                              l3639 0043                                                l4703 0056  
                                              l4711 0002                                                l5175 001C  
                                              l5167 000E                                                l5095 0006  
                                              l5343 0141                                                l5335 00F4  
                                              l5327 00D9                                                l5319 00B6  
                                              l5431 0101                                                l5423 00DE  
                                              l5415 008D                                                l5407 006B  
                                              l5191 0004                                                l5087 0007  
                                              l5079 0000                                                l5271 0048  
                                              l5263 0044                                                l5255 003D  
                                              l5247 0031                                                l5239 0027  
                                              l5361 000A                                                l3761 0114  
                                              l3753 0104                                                l3745 00F6  
                                              l3737 00DC                                                l3729 00C1  
                                              l3681 002D                                                l3673 001D  
                                              l3665 000A                                                l3497 0193  
                                              l3489 0184                                                l3649 006A  
                                              l4705 005B                                                l4721 0016  
                                              l4713 0006                                                l4801 00A2  
                                              l5097 0002                                                l5177 0024  
                                              l5185 0033                                                l5337 0112  
                                              l5329 00E3                                                l5441 012E  
                                              l5433 0114                                                l5425 00E4  
                                              l5409 0071                                                l5193 0005  
                                              l5089 0000                                                l5281 000B  
                                              l5273 0049                                                l5265 0045  
                                              l5257 0040                                                l5249 0034  
                                              l5371 0022                                                l5363 0010  
                                              l5355 0000                                                l3771 0139  
                                              l3763 0118                                                l3755 010B  
                                              l3747 00F8                                                l3739 00E4  
                                              l3691 003E                                                l3683 002F  
                                              l3675 001E                                                l3667 000B  
                                              l3659 0000                                                l3499 0195  
                                              l4731 002C                                                l4723 001C  
                                              l4715 000B                                                l4803 00A7  
                                              l4811 00D0                                                l5099 0003  
                                              l5179 002C                                                l5339 011D  
                                              l5347 015A                                                l5291 0002  
                                              l5435 0120                                                l5427 00EA  
                                              l5419 0093                                                l5443 0134  
                                              l5195 0006                                                l5187 0000  
                                              l5283 0013                                                l5275 0000  
                                              l5267 0046                                                l5259 0042  
                                              l5373 0027                                                l5365 0015  
                                              l5357 0003                                                l3781 016E  
                                              l3773 0141                                                l3765 012C  
                                              l3749 00FF                                                l3757 010F  
                                              l3693 0046                                                l3685 0033  
                                              l3669 0010                                                l3677 0020  
                                              l3941 0007                                                l4741 004A  
                                              l4733 0036                                                l4725 001F  
                                              l4717 000D                                                l4709 0000  
                                              l4821 00FE                                                l4813 00D1  
                                              l4805 00B1                                                l4901 0002  
                                              l5293 0003                                                l5437 0124  
                                              l5429 00F8                                                l5381 0008  
                                              l5197 0008                                                l5189 0003  
                                              l5285 001B                                                l5277 0003  
                                              l5269 0047                                                l5349 0000  
                                              l5461 0005                                                l5287 0000  
                                              l5367 001A                                                l5359 0008  
                                              l3791 019C                                                l3783 0189  
                                              l3775 0145                                                l3759 0113  
                                              l3695 0047                                                l3687 0034  
                                              l3679 0028                                                l3951 0034  
                                              l3943 000B                                                l4671 000B  
                                              l4743 004F                                                l4735 003A  
                                              l4727 0024                                                l4719 0011  
                                              l4751 000D                                                l4831 0134  
                                              l4823 0112                                                l4815 00E2  
                                              l4807 00C4                                                l4911 000C  
                                              l5295 0008                                                l5439 012A  
                                              l5391 0024                                                l5383 000D  
                                              l5199 000A                                                l5279 0000  
                                              l5463 0006                                                l5369 001C  
                                              l3793 019E                                                l3785 018C  
                                              l3777 015D                                                l3769 0134  
                                              l3689 0039                                                l3697 0049  
                                              l3961 0055                                                l3953 0037  
                                              l3945 001B                                                l4681 001C  
                                              l4673 000D                                                l4665 0000  
                                              l4737 003F                                                l4729 0028  
                                              l4753 0012                                                l4833 0141  
                                              l4825 0126                                                l4817 00EA  
                                              l4809 00C9                                                l4921 001E  
                                              l4905 0002                                                l5297 0019  
                                              l5289 0002                                                l5393 0033  
                                              l5385 0013                                                l5377 0002  
                                              l5465 0007                                                l5457 0000  
                                              l3787 0194                                                l3779 0161  
                                              l3699 0059                                                l4931 0003  
                                              l3971 0084                                                l3963 0063  
                                              l3955 0042                                                l3947 002B  
                                              l3939 0002                                                l4763 0000  
                                              l4691 0032                                                l4683 0022  
                                              l4675 0011                                                l4667 0002  
                                              l4739 0045                                                l4755 001D  
                                              l4747 0000                                                l4835 0153  
                                              l4819 00ED                                                l4771 0012  
                                              l4843 016C                                                l4851 0000  
                                              l4923 0023                                                l4907 0004  
                                              l5299 0023                                                l5395 0039  
                                              l5387 0018                                                l5379 0003  
                                              l5467 000F                                                l5459 0002  
                                              l3789 0198                                                l4941 000A  
                                              l3973 0098                                                l3965 006C  
                                              l3957 0049                                                l4765 0001  
                                              l4693 0041                                                l4685 0025  
                                              l4677 0016                                                l4669 0006  
                                              l4757 003D                                                l4749 0007  
                                              l4837 0158                                                l4829 012F  
                                              l4781 0038                                                l4773 001A  
                                              l4853 0006                                                l4861 0000  
                                              l4925 0029                                                l4917 000E  
                                              l4909 0007                                                l5397 0044  
                                              l5389 001D                                                l5469 0014  
                                              l4951 001F                                                l4943 000B  
                                              l4935 0000                                                l3975 009D  
                                              l3967 0070                                                l3959 004D  
                                              l4871 0000                                                l4767 0006  
                                              l4695 0045                                                l4687 002A  
                                              l4679 001A                                                l4759 0054  
                                              l4839 0162                                                l4791 0064  
                                              l4783 0042                                                l4775 0022  
                                              l4855 0011                                                l4863 0003  
                                              l4919 0016                                                l5399 004A  
                                              l4961 0033                                                l4953 0027  
                                              l4945 0010                                                l4937 0004  
                                              l4929 0000                                                l3977 00A1  
                                              l3969 007A                                                l4873 0000  
                                              l4849 0000                                                l4697 0046  
                                              l4689 002E                                                l4793 0082  
                                              l4785 004E                                                l4777 0026  
                                              l4769 0000                                                l4857 001B  
                                              l4881 0000                                                l4891 000F  
                                              l4971 004F                                                l4963 0038  
                                              l4955 002C                                                l4947 0015  
                                              l4939 0006                                                l3979 00A2  
                                              l4867 0000                                                l4699 004B  
                                              l4795 0092                                                l4787 005B  
                                              l4779 002E                                                l4883 0018  
                                              l4893 001A                                                l4885 0002  
                                              l4981 006D                                                l4973 0054  
                                              l4965 003D                                                l4957 002E  
                                              l4949 001D                                                l4877 0000  
                                              l4869 0002                                                l4797 0098  
                                              l4789 005D                                                l4895 001F  
                                              l4887 0004                                                l4991 00C4  
                                              l4983 007A                                                l4975 0059  
                                              l4967 0045                                                l4959 0032  
                                              l4799 009D                                                l4889 000B  
                                              l4993 00D1                                                l4985 0092  
                                              l4969 0047                                                l4995 00D8  
                                              l4987 009F                                                l4979 0062  
                                              l4899 0000                                                l4997 00E3  
                                              l4989 00B7                                                l4999 00EA  
                                              STR_1 0000                                                STR_2 0000  
                                              STR_3 0000                                                STR_7 0000  
                                              STR_9 0000                                   _I2C1_Deinitialize 0000  
                                              u3010 0184                                                u3011 0183  
                                              u3100 01CB                                                u3020 0189  
                                              u3021 0188                                                u3005 017A  
                                              _LATA 010C                                                u3110 01DA  
                                              u3030 0193                                                _LATB 010D  
                                              u3111 01D9                                                u3031 0192  
                                              _LATC 010E                                                u3120 01E3  
                                              u3040 0199                                                u4000 009D  
                                              u3121 01E2                                                u3105 01C7  
                                              u3041 0198                                                u4001 009C  
                                              u3130 01E8                                                u3050 019E  
                                              u4010 00A1                                                u3131 01E7  
                                              u3051 019D                                                u4011 00A0  
                                              u3140 01F5                                                u3060 01A4  
                                              u4100 000F                                                u3141 01F4  
                                              u3061 01A3                                                u3150 01FA  
                                              u3070 01AB                                                u3310 006A  
                                              u3230 000A                                                u4110 0026  
                                              u3151 01F9                                                u3071 01AA  
                                              u3311 0069                                                u3231 0009  
                                              u3400 0077                                                u3160 0206  
                                              u3080 01B1                                                u3320 006F  
                                              u3240 0027                                                u4120 003E  
                                              u3401 0076                                                u3161 0205  
                                              u3081 01B0                                                u3321 006E  
                                              u3305 005D                                                u4105 000B  
                                              u3410 00AF                                                u3330 000A  
                                              u5010 001F                                                u3090 01BD  
                                              u3250 003B                                                u4130 0016  
                                              u3411 00AE                                                u3331 0009  
                                              u5011 001E                                                u3091 01BC  
                                              u3251 003A                                                u4115 0022  
                                              u3500 0103                                                u3340 0010  
                                              u5100 003D                                                u3260 0042  
                                              u5020 0016                                                u4140 002B  
                                              u3501 0102                                                u3341 000F  
                                              u5005 0014                                                u5101 003C  
                                              u3261 0041                                                u3245 0023  
                                              u5021 0015                                                u4125 003A  
                                              u3350 0015                                                u5110 0054  
                                              u2550 0005                                                u5030 0029  
                                              u4150 0040                                                u3351 0014  
                                              u5111 0053                                                u2551 0004  
                                              u5031 0028                                                u4135 0012  
                                              u3600 0189                                                u3520 0113  
                                              u3440 00C1                                                u3360 0033  
                                              u5120 0059                                                u2800 0043  
                                              u3280 0054                                                u3601 0188  
                                              u3521 0112                                                u3441 00C0  
                                              u3425 00B0                                                u3361 0032  
                                              u5121 0058                                                u2801 0042  
                                              u3281 0053                                                u4145 0027  
                                              u3610 019C                                                u3530 0118  
                                              u3370 0039                                                u5210 019E  
                                              u5050 000A                                                u2810 005C  
                                              u3290 005B                                                u3611 019B  
                                              u3531 0117                                                u3515 0105  
                                              u3435 00B7                                                u3371 0038  
                                              u5211 019D                                                u5051 0009  
                                              u2811 005B                                                u3291 005A  
                                              u3275 0044                                                u4155 003C  
                                              u3540 012C                                                u3460 00DB  
                                              u3380 003E                                                u5300 022B  
                                              u5220 01A3                                                u5060 0010  
                                              u2900 00D7                                                u2820 0060  
                                              u2740 000A                                                u3605 0185  
                                              u3541 012B                                                u3461 00DA  
                                              u3381 003D                                                u5301 022A  
                                              u5221 01A2                                                u5205 0190  
                                              u5061 000F                                                u2901 00D6  
                                              u2821 005F                                                u2741 0009  
                                              u5045 002E                                                u3550 0133  
                                              u3470 00EE                                                u3390 0059  
                                              u5230 01B7                                                u5150 014F  
                                              u5070 0015                                                u2910 00DC  
                                              u2830 009A                                                u2750 0010  
                                              u5310 0007                                                u3551 0132  
                                              u3471 00ED                                                u3455 00C3  
                                              u3391 0058                                                u5231 01B6  
                                              u5135 00D2                                                u5071 0014  
                                              u2911 00DB                                                u2831 0099  
                                              u2751 000F                                                u5311 0006  
                                              u3560 0139                                                u3480 00F6  
                                              u5240 01BE                                                u5160 0166  
                                              u5080 0032                                                u2920 00F1  
                                              u2840 00A4                                                u2760 0015  
                                              u4600 0022                                                u5400 017F  
                                              u5320 0007                                                u3561 0138  
                                              u3481 00F5                                                u3465 00D7  
                                              u5241 01BD                                                u5145 00FD  
                                              u5081 0031                                                u2921 00F0  
                                              u2841 00A2                                                u2761 0014  
                                              u4601 0021                                                u5401 017E  
                                              u5321 0006                                                u3570 0145  
                                              u5250 01C4                                                u5090 0038  
                                              u2930 00F5                                                u2850 00A5  
                                              u2770 0031                                                u5410 0015  
                                              u5330 0007                                                u3571 0144  
                                              u5251 01C3                                                u5155 014B  
                                              u5091 0037                                                u2931 00F4  
                                              u2835 0096                                                u2771 0030  
                                              u5411 0014                                                u5331 0006  
                                              u5500 0008                                                u3580 0153  
                                              u5260 01D0                                                u2940 00FF  
                                              u2860 00B5                                                u2780 0038  
                                              u3900 002B                                                u4620 0032  
                                              u4700 001C                                                u5340 0008  
                                              u5420 001B                                                u5501 0007  
                                              u5261 01CF                                                u5165 0162  
                                              u2941 00FE                                                u2861 00B4  
                                              u2781 0037                                                u3901 002A  
                                              u4621 0031                                                u4701 001B  
                                              u5341 0007                                                u5421 001A  
                                              u5510 0010                                                u3590 016E  
                                              u5270 01DE                                                u5190 018E  
                                              u2870 00BF                                                u2790 003E  
                                              u5350 0013                                                u5511 000F  
                                              u3591 016D                                                u3495 00F9  
                                              u5191 018D                                                u5175 0171  
                                              u2871 00BE                                                u2791 003D  
                                              u4615 0026                                                u5351 0012  
                                              u5520 001A                                                u5280 01F9  
                                              u2960 0123                                                u3920 0048  
                                              u4640 0041                                                u4720 002C  
                                              u4800 003D                                                u5360 001A  
                                              u5521 0019                                                u3585 014F  
                                              u5281 01F8                                                u5185 0184  
                                              u2961 0122                                                u3921 0047  
                                              u4641 0040                                                u4721 002B  
                                              u4801 003C                                                u5361 0019  
                                              u5530 0022                                                u5290 0211  
                                              u2970 0152                                                u2890 00D3  
                                              u4810 000D                                                u4730 0036  
                                              u5370 0020                                                u5531 0021  
                                              u3595 016A                                                u5291 0210  
                                              u5275 01DA                                                u2971 0151  
                                              u2963 011F                                                u2955 0102  
                                              u2891 00D2                                                u3915 003C  
                                              u4811 000C                                                u4635 0033  
                                              u4731 0035                                                u4715 0020  
                                              u5371 001F                                                u5435 000E  
                                              i1l52 000E                                                u2980 016B  
                                              u3940 0062                                                u4660 0051  
                                              u4580 0006                                                u4900 00A7  
                                              u4820 0012                                                u5380 0174  
                                              u5540 0008                                                u5285 01F5  
                                              u2981 016A                                                u2885 00C2  
                                              u3941 0061                                                u4661 0050  
                                              u4645 003D                                                u4581 0005  
                                              u4805 0039                                                u4901 00A6  
                                              u4821 0011                                                u5381 0173  
                                              u5445 002E                                                u5541 0007  
                                              u2990 0170                                                u4670 0056  
                                              u4590 0011                                                u4750 0045  
                                              u4910 00CF                                                u4830 0038  
                                              u5390 0179                                                u5550 00DE  
                                              u5295 020D                                                u2991 016F  
                                              u3935 0056                                                u4671 0055  
                                              u4655 0047                                                u4591 0010  
                                              u4751 0044                                                u4735 0032  
                                              u4911 00CE                                                u4831 0037  
                                              u5391 0178                                                u5455 0043  
                                              u5551 00DD                                                u3960 0070  
                                              u3880 0007                                                u4760 004A  
                                              u4680 0006                                                u4920 00E2  
                                              u4840 0042                                                u5560 00F8  
                                              u3961 006F                                                u3881 0006  
                                              u4761 0049                                                u4745 003B  
                                              u4681 0005                                                u4921 00E1  
                                              u4841 0041                                                u5465 006B  
                                              u5561 00F7                                                i1l58 0000  
                                              u3970 0076                                                u3890 000B  
                                              u4690 0011                                                u4770 0007  
                                              u4930 00FE                                                u4850 0062  
                                              u5570 0101                                                u3971 0075  
                                              u3955 0066                                                u3891 000A  
                                              u4691 0010                                                u4771 0006  
                                              u4931 00FD                                                u4851 0060  
                                              u5475 0080                                                u5571 0100  
                                              u3980 007A                                                u4780 000D  
                                              u4940 0112                                                u4860 0063  
                                              u5580 000F                                                u3981 0079  
                                              u4781 000C                                                u4941 0111  
                                              u5485 0091                                                u5581 000E  
                                              u3990 008E                                                u4790 001D  
                                              u4950 0126                                                u4870 0098  
                                              u4791 001C                                                u4951 0125  
                                              u4871 0097                                                u5495 0108  
                                              u4960 0134                                                u4880 009D  
                                              u4961 0133                                                u4881 009C  
                                              u4970 0161                                                u4890 00A2  
                                              u3995 008A                                                u4971 0160  
                                              u4891 00A1                                                u4980 001B  
                                              u4981 001A                                                u4990 000F  
                                              u4991 000E                                                _UART 0000  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                                                abs@a 0007  
                                   ??_I2C1_StopSend 0000                                                _dbuf 0000  
                                              _main 0000                                                _kaps 001E  
                                              _exit 0000                                                _prec 0016  
                                  __end_of_I2C_Host 0014                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                       _INT_DefaultInterruptHandler 0000                                                start 0000* 
        __end_of_EUSART_DefaultOverrunErrorCallback 0004                ??_EUSART_DefaultOverrunErrorCallback 0000  
               ?_EUSART_DefaultOverrunErrorCallback 0000                  _EUSART_DefaultOverrunErrorCallback 0000  
                                   ___fldiv@new_exp 0042                     __end_of_INT_SetInterruptHandler 0006  
                                     ___assert_fail 0000                                     _I2C1_EVENT_IDLE 0000  
                                   _I2C1_EVENT_NACK 0000                                          _i2c1Status 0000  
                                   _I2C1_EVENT_STOP 0000                                               ??_abs 0009  
                                   __end_of_SendMsg 0039                                      ??_KAPS_GoToIdx 0001  
                                    ?_KAPS_StorePos 000D                                      _KAPS_getStatus 0000  
                                     ?_EUSART_Write 0000                                       ___fltol@sign1 004E  
                                   __end_of___fladd 0208                                               ?_main 0000  
                                             ?_exit 0002                                     __end_of___fldiv 01AA  
                                   __end_of___awdiv 0060                                               STR_10 0000  
                                             STR_11 0000                                               STR_12 0000  
                                             STR_13 0000                                               STR_15 0000  
                                             STR_16 0000                                               STR_17 0000  
                                             STR_18 0000                                               STR_19 0000  
                                   __end_of___awmod 0054                                     __end_of___flmul 023B  
                                   __end_of___flsub 0020                                     __end_of___fltol 007B  
                                   ___awdiv@divisor 0000                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             i1l210 0003                                               i1l300 0005  
                                             i1l231 0000                                               i1l303 0004  
                                             i1l207 0003                                               i1l240 0006  
                                             i1l321 0002                                               i1l225 0042  
                                             i1l234 0003                                               i1l306 0006  
                                             i1l219 0014                                               i1l324 0003  
                                             i1l228 0021                                               i1l309 0003  
                                             i1l237 0007                                               i1l261 0005  
                                             i1l318 0002                                               i1l270 0002  
                                             i1l247 002E                                               i1l255 003F  
                                             i1l264 0007                                               i1l273 0004  
                                             i1l282 0002                                               i1l258 0005  
                                             i1l450 0022                                               i1l291 0002  
                                             i1l267 0006                                               i1l276 0003  
                                             i1l285 0002                                               i1l294 0003  
                                             i1l279 0002                                               i1l455 0030  
                                             i1l448 0014                                               i1l297 0003  
                                             i1l449 0030                                     ___awdiv@counter 0005  
                                      vfpfcnvrt@fmt 000D                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             _RXPPS 0E24                            ?_I2C1_EVENT_SEND_RD_ADDR 0000  
                                             _Parse 0000                                      ?_KAPS_getIndex 0000  
                                             __Exit 0000                                   ??_I2C1_Initialize 0002  
                                             _abort 0000                                               _flags 0004  
                                   SendMsg@data_len 0002                             ??_I2C1_CallbackRegister 0002  
                                             _count 0005                                               _funcs 000E  
                                             _fputc 0000                                   ?_I2C1_IsRxBufFull 0000  
                                  ProcessMsg@msg_id 000D                            ?_I2C1_EVENT_SEND_WR_ADDR 0000  
                                             _width 0014                                               _sppas 0000  
                                             _putch 0000                                               pclath 000A  
                             I2C1_DataTransmit@data 0000                                      _KAPS_setAbsPos 0000  
                                ??_I2C1_IsRxBufFull 0000                                               status 0003  
                                             wtemp0 007E                                      _KAPS_setRelPos 0000  
                                    ?___assert_fail 0030                                        ??_I2C1_Close 0000  
                                        SendMsg@sum 0004                                        __end_of_UART 0030  
                                   __initialization 0000                            ??_I2C1_ErrorEventHandler 0004  
                                      __end_of_main 001D                              __end_of_KAPS_getStatus 0001  
                                      __end_of_exit 000C                                      getADCValue@avg 003D  
                                  _I2C1_EVENT_ERROR 0000                                      ??_EUSART_Write 0001  
                                  _I2C1_EVENT_RESET 0000                                           ??_ADC_ISR 0000  
                       ?_INTERRUPT_InterruptManager 0000                                    __end_of_SendNack 000B  
                                            ??_main 0050                                              ??_exit 0004  
                                  SSPA_setMute@band 0000                                    SSPA_setMute@mute 0001  
                                  SSPA_setMute@sspa 0002  EUSART_OverrunErrorCallbackRegister@callbackHandler 0000  
EUSART_FramingErrorCallbackRegister@callbackHandler 0000                I2C1_CallbackRegister@callbackHandler 0000  
                                            ?_Parse 0014                                              ?__Exit 0000  
                                __end_of_I2C1_Close 0015                                              ?_abort 0000  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 0018  
                             _I2C1_InterruptsEnable 0000                                              ?_fputc 0000  
                                            _ADRESH 009C                                              _ADRESL 009B  
                            __end_of_KAPS_setAbsPos 0001                                    ___awdiv@dividend 0002  
                                            _ANSELA 018C                                              ?_putch 0000  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                            _BORCON 0116                                   KAPS_setAbsPos@pos 000D  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RC2PPS 0EA2                                              _RB5PPS 0E9D  
                                            _RB6PPS 0E9E                                              _ODCONA 028C  
                                            _ODCONB 028D                                              i1l4003 0000  
                                            i1l4011 0006                                              _ODCONC 028E  
                                            i1l3301 0000                                              i1l4021 0000  
                                            i1l4005 0002                                              i1l3303 0000  
                                            i1l4031 001D                                              i1l4023 0000  
                                            i1l4015 0000                                              i1l3305 0000  
                                            i1l4033 0022                                              i1l4041 002D  
                                            i1l4025 0007                                              i1l4009 0000  
                                            i1l4017 0005                                              i1l3331 000B  
                                            i1l4035 0023                                              i1l4027 000B  
                                            i1l4051 0011                                              i1l3333 000E  
                                            i1l4037 0026                                              i1l4029 001A  
                                            i1l4061 0032                                              i1l4053 001F  
                                            i1l4045 0000                                              i1l3335 0011  
                                            i1l3327 0000                                              i1l4039 0029  
                                            i1l4063 0038                                              i1l4055 0024  
                                            i1l4047 0002                                              i1l4071 0000  
                                            i1l4401 0009                                              i1l3329 0002  
                                            i1l3337 0000                                              i1l4057 0028  
                                            i1l4049 000A                                              i1l4065 003B  
                                            i1l4073 0000                                              i1l4081 0000  
                                            i1l4241 000B                                              i1l3339 0000  
                                            i1l4067 003E                                              i1l4059 002E  
                                            i1l4075 0004                                              i1l4083 0004  
                                            i1l4251 002E                                              i1l4243 0013  
                                            i1l4403 0000                                              i1l4253 0000  
                                            i1l4405 0000                                              i1l4245 0019  
                                            i1l4237 0000                                              i1l4079 0000  
                                            i1l4255 0005                                              i1l4247 0021  
                                            i1l4239 0003                                              i1l3553 0001  
                                            i1l4257 0008                                              i1l4249 0029  
                                            i1l3571 0000                                              i1l3563 0000  
                                            i1l3555 0000                                              i1l4259 001C  
                                            i1l4611 0010                                              i1l3573 0000  
                                            i1l3557 0000                                              i1l3581 0003  
                                            i1l4613 0019                                              i1l4605 0002  
                                            i1l3567 0000                                              i1l3575 0000  
                                            i1l3559 0006                                              i1l3583 0005  
                                            i1l4615 001E                                              i1l4607 0006  
                                            i1l3577 0000                                              i1l4617 0027  
                                            i1l4609 000B                                              i1l3579 0000  
                                            i1l4619 002C                                              i1l4397 0000  
                                            i1l4399 0002                                              i1l3991 0000  
                                            i1l3995 0000                                              i1l3999 0000  
                                            _INLVLA 038C                                              _INLVLB 038D  
                                            _INLVLC 038E                                              u403_20 0007  
                                            u403_21 0006                                              u404_20 0022  
                                            u404_21 0021                                              u405_20 000A  
                                            u405_21 0009                                              u406_20 0011  
                                            u406_21 0010                                              u407_20 002E  
                                            u407_21 002D                                              u425_20 000B  
                                            u425_21 000A                                              u426_20 0013  
                                            u450_20 0006                                              u426_21 0012  
                                            u450_21 0005                                              u427_20 0021  
                                            u451_20 000B                                              u427_21 0020  
                                            u451_21 000A                                              u436_20 0009  
                                            u428_20 0029                                              u452_20 0010  
                                            u436_21 0008                                              u428_21 0028  
                                            u452_21 000F                                              u453_20 0019  
                                            u453_21 0018                                              u454_20 001E  
                                            u454_21 001D                                              u455_20 0027  
                                            u455_21 0026                                              u456_20 002C  
                                            u456_21 002B                                              _OSCCON 0099  
                            __end_of_KAPS_setRelPos 0001                                       vfpfcnvrt@done 0017  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                           __end_of_I2C1_EVENT_IDLE 0004                                    __end_of___xxtofl 00AB  
                           __end_of_I2C1_EVENT_NACK 0006                             __end_of_I2C1_EVENT_STOP 0008  
                                KAPS_getStatus@kaps 0000                               SSPA_getPOut@adc_value 0008  
                                         ??_SendMsg 0003                                         Parse@parser 0017  
                       __end_of_I2C1_InterruptClear 0003                                        vfprintf@cfmt 0023  
                                   ??_KAPS_StorePos 0012                                           ??___fladd 0008  
                                   ?_KAPS_getStatus 0000                                           ??___fldiv 0038  
                                         ??___awdiv 0004                                    __end_of_packLong 0057  
                                         ??___awmod 0004                                           ??___flmul 0016  
                                         ??___flsub 0030                                           ??___fltol 0000  
                                _I2C1_RestartEnable 0000                                           ?_I2C1_ISR 0000  
                                  ___awdiv@quotient 0007                                   ?_EUSART_IsRxReady 0000  
                                   ___awmod@divisor 0000                     __end_of_I2C1_EVENT_SEND_RD_ADDR 0008  
                                 ProcessMsg@payload 000E                                     ___awmod@counter 0005  
                                            _printf 0000                                          _ProcessMsg 0000  
                                      packLong@data 000C                                   ?_CLOCK_Initialize 0000  
                                ??_EUSART_IsRxReady 0000                                     ??_KAPS_getIndex 0000  
                                            fputc@c 0000                                  ??_CLOCK_Initialize 0000  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 0007                                 ?_I2C1_RestartEnable 0000  
                                            putch@c 0000                                    __end_of_vfprintf 001E  
           INT_SetInterruptHandler@InterruptHandler 0000             ADC_SetInterruptHandler@InterruptHandler 0000  
                                   ?_KAPS_setAbsPos 000D                                        ___xxtofl@arg 000A  
                                      ___xxtofl@exp 0009                                __end_of_KAPS_GoToIdx 0009  
                                 _SYSTEM_Initialize 0000                                        ___xxtofl@val 0000  
                           __end_of__initialization 0022                                     ?_KAPS_setRelPos 000D  
                                     ??_I2C1_IsAddr 0000                                       ??_I2C1_IsData 0000  
                                   ??___assert_fail 0038                                       ??_I2C1_IsNack 0000  
                                ?_SYSTEM_Initialize 0000                                         SendMsg@data 0001  
                                getADCValue@channel 003C                                          ___fltol@f1 004A  
                              ??_I2C1_RestartEnable 0000                                      __pcstackCOMMON 0000  
                                     __end_of_Parse 014E                                       __end_of__Exit 0002  
                                      __pidataBANK2 0000                                 ??_SYSTEM_Initialize 0002  
                                     __end_of_abort 0009                                       __end_of_fputc 005F  
                        ??_I2C1_ErrorInterruptClear 0000                                       __end_of_putch 0001  
                                        ??_I2C1_ISR 0006                             _ADC_GetConversionResult 0000  
                                    _OPTION_REGbits 0095                                   ??___funcs_on_exit 0000  
                             __end_of_I2C1_EVENT_RX 0040                               __end_of_I2C1_EVENT_TX 002F  
                                           ??_Parse 0015                                             ??__Exit 0002  
                            ?_I2C1_InterruptsEnable 0000                                             ??_abort 0004  
                                 _I2C1_EventHandler 0000                                             ??_fputc 0004  
                         __end_of_SYSTEM_Initialize 0013                                             ??_putch 0000  
                                        __pbssBANK1 0000                                          __pbssBANK2 0000  
                              __end_of_EUSART_Write 0005                                  ?_I2C1_EventHandler 0000  
                             _I2C1_StatusFlagsClear 0000                                    ?_I2C1_EVENT_IDLE 0000  
                                  ?_I2C1_EVENT_NACK 0000                                           ?_SendNack 0000  
                                  ?_I2C1_EVENT_STOP 0000                                   __end_of__Umul8_16 0024  
                               ??_I2C1_EventHandler 0004                                          __pmaintext 0000  
                               __end_of_I2C1_IsAddr 0007                                 __end_of_I2C1_IsData 0005  
                               __end_of_I2C1_IsNack 0006                                          __pintentry 0000  
                                   _I2C1_Initialize 0000                                _EUSART_AutoBaudQuery 0000  
                                           _ADC_ISR 0000                                         ?_ProcessMsg 000B  
                                           ?_printf 0025                               __end_of_I2C1_NackSend 0004  
                                KAPS_setAbsPos@kaps 0011                               __end_of_I2C1_BusReset 0004  
                                   _EUSART_IsTxDone 0000                                           ?___xxtofl 0000  
                                   _EUSART_ErrorGet 0000                                           _I2C1_Read 0000  
                         __end_of_I2C1_EventHandler 0043                              _I2C1_ErrorEventHandler 0000  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                          __end_of_I2C1_EVENT_ERROR 0006                            __end_of_I2C1_EVENT_RESET 0007  
                                         ?_packLong 0000                       __end_of_I2C1_CallbackRegister 000F  
                                   KAPS_getPos@kaps 0000                               __end_of_I2C1_StopSend 0003  
                                        ??_SendNack 0006                                _ADC_InterruptHandler 0000  
                                           _SendMsg 0000                             _ADC_SetInterruptHandler 0000  
                                     ??_getADCValue 003A                                             ___fladd 0000  
                                           ___fldiv 0000                                    KAPS_StorePos@idx 000D  
                                           ___awdiv 0000                                             ___awmod 0000  
                                  KAPS_StorePos@pos 000E                                             ___flmul 0000  
                                           ___flsub 0000                                             ___fltol 0000  
                                         ?_vfprintf 001D                           ??_ADC_GetConversionResult 0002  
                                           __ptext1 0000                                             __ptext2 0000  
                                           __ptext3 0000                                             __ptext4 0000  
                                           __ptext5 0000                                             __ptext6 0000  
                                           __ptext7 0000                                             __ptext8 0000  
                                           __ptext9 0000                                 _I2C1_RestartDisable 0000  
                                        ??___xxtofl 0004                                    ___awmod@dividend 0002  
                          ??_PIN_MANAGER_Initialize 0000                                       ?_I2C1_AckSend 0000  
                           _INT_SetInterruptHandler 0000                                     _i2c1_eventTable 0000  
                                           clrloop0 0001                                end_of_initialization 0022  
                                        ??_packLong 0004                              ?_I2C1_StatusFlagsClear 0000  
                                           fputc@fp 0002                                             init_ram 0000  
                                           initloop 0001                                         _I2C1_IsAddr 0000  
                                       _I2C1_IsData 0000                                    vfpfcnvrt@cp_2048 0013  
                                       _I2C1_IsNack 0000                                         _I2C1_IsBusy 0000  
                                  ??_KAPS_getStatus 0000                                   _EUSART_Initialize 0000  
                              ?_I2C1_RestartDisable 0000                             __end_of_I2C1_Initialize 0017  
                      __end_of_ADC_IsConversionDone 0007                                  ?_EUSART_Initialize 0000  
                                 __end_of_vfpfcnvrt 0187                                   KAPS_getIndex@kaps 0000  
                                  vfpfcnvrt@convarg 0018                                    _I2C1_DataReceive 0000  
                                        ??_vfprintf 0022                                 __end_of_getADCValue 0037  
                               ??_EUSART_Initialize 0002                                        _KAPS_GoToIdx 0000  
                                         _SSPDATPPS 0E21                                           _SSPCLKPPS 0E20  
                                       ___fladd@grs 0013                                    ??_KAPS_setAbsPos 0011  
                                    ??_I2C1_AckSend 0000                 __end_of_ADC_DefaultInterruptHandler 0001  
                       _ADC_DefaultInterruptHandler 0000                                       ___xxtofl@sign 0008  
                               _ADC_StartConversion 0000                                    ??_KAPS_setRelPos 0011  
                                       ___fldiv@grs 0044                                         ___fldiv@rem 003D  
                               _EUSART_Deinitialize 0000                                          _unpackLong 0000  
                                        _unpackWord 0000                                         ___flmul@grs 001D  
                         __end_of_EUSART_Initialize 001F                       ??_ADC_DefaultInterruptHandler 0000  
                         ??_ADC_SetInterruptHandler 0002                               ??_I2C1_RestartDisable 0000  
                                    ProcessMsg@data 000B                                          main@parser 0019  
                              ?_ADC_StartConversion 0000                                        getADCValue@i 003F  
                                   ___funcs_on_exit 0000                        __end_of_INTERRUPT_Initialize 000C  
                                    _I2C1_ERROR_ISR 0000                               __end_of_KAPS_StorePos 0001  
                                       vfpfcnvrt@ap 000E                                         vfpfcnvrt@cp 0015  
                                       vfpfcnvrt@fp 000B                                           Parse@data 0014  
                                     ?_SSPA_getPOut 0004                          __end_of_I2C1_ReceiveEnable 0003  
                                      _EUSART_Write 0000                                       ?_SSPA_getTemp 0004  
                           __end_of_i2c1_eventTable 0012                                      _ADC_Initialize 0000  
                              KAPS_setRelPos@offset 000D                                 SSPA_getPOut@channel 000A  
                         ??_INT_SetInterruptHandler 0002                             ??_I2C1_InterruptsEnable 0000  
                                     ??_KAPS_getPos 0000                                      __end_of_printf 0010  
                               start_initialization 0000                                       ?_SSPA_setMute 0000  
                             __end_of_KAPS_getIndex 0001                                         __end_of_abs 0012  
                                     ??_EUSART_Read 0000                             _I2C1_EVENT_SEND_RD_ADDR 0000  
                             __end_of___assert_fail 001C                                    ?_I2C1_Initialize 0000  
                             ??_ADC_StartConversion 0000                             _I2C1_EVENT_SEND_WR_ADDR 0000  
                                       _getADCValue 0000                              __end_of_I2C1_ERROR_ISR 0004  
                                       vfprintf@fmt 001F                          _EUSART_FramingErrorHandler 0000  
                                  _I2C1_IsRxBufFull 0000                              __end_of_ADC_Initialize 0014  
                                         __Umul8_16 0000                                         __pdataBANK2 0000  
                                    ??_SSPA_getPOut 0005                                      ??_SSPA_getTemp 0005  
                                          ?_ADC_ISR 0000                                     unpackLong@value 0000  
                                      ??_ProcessMsg 000C                                            ??_printf 002F  
                                         ___fladd@a 0004                                           ___fladd@b 0000  
                           ?_I2C1_ErrorEventHandler 0000                                           ___fldiv@a 0030  
                                         ___fldiv@b 0034                                      ??_SSPA_setMute 0002  
                                         ___flmul@a 0012                                           ___flmul@b 000E  
                                       __pbssCOMMON 0000                                           ___flsub@a 0028  
                                         ___flsub@b 002C                                           ___latbits 0001  
                                     __pcstackBANK0 0000                                       __pcstackBANK1 0000  
                                  KAPS_GoToIdx@kaps 0001                                _ADC_IsConversionDone 0000  
                                KAPS_setRelPos@kaps 0011                                         ?_unpackLong 0000  
                               __end_of_KAPS_getPos 0001                                         ?_unpackWord 0000  
                         ?_I2C1_ErrorInterruptClear 0000                        __end_of_I2C1_DefaultCallback 0001  
                                 ?_I2C1_EVENT_ERROR 0000                                   ?_I2C1_EVENT_RESET 0000  
                               __end_of_EUSART_Read 002A                                  ??_I2C1_EVENT_ERROR 0000  
                           __end_of___funcs_on_exit 000E                                  ??_I2C1_EVENT_RESET 0000  
                                         __pnvBANK1 0000                                  __end_of_ProcessMsg 017E  
                                          ?_SendMsg 0001                                __end_of_I2C1_AckSend 0004  
                            _PIN_MANAGER_Initialize 0000                                     ?_I2C1_ERROR_ISR 0000  
                                 _ADC_SelectChannel 0000                                            ?___fladd 0000  
                                          ?___fldiv 0030                                            ?___awdiv 0000  
                                          ?___awmod 0000                                            ?___flmul 000E  
                                          ?___flsub 0028                                            ?___fltol 004A  
                                        ?__Umul8_16 0000                                     ?_ADC_Initialize 0000  
                                ?_ADC_SelectChannel 0000                                            _I2C1_ISR 0000  
                      ??_INTERRUPT_InterruptManager 0006                      __end_of_I2C1_ErrorEventHandler 0022  
                                          _BAUD1CON 019F                              _EUSART_TransmitDisable 0000  
                                  SSPA_getPOut@band 0004                                            _I2C_Host 0000  
                               ??_ADC_SelectChannel 0000                                    SSPA_getPOut@sspa 0007  
                             ?_ADC_IsConversionDone 0000                       I2C1_EVENT_ERROR@retEventState 0000  
                           ??_I2C1_StatusFlagsClear 0000                            __end_of_I2C1_DataReceive 0003  
                         ??_I2C1_EVENT_SEND_RD_ADDR 0000                                    _EUSART_IsRxReady 0000  
                              _INTERRUPT_Initialize 0000                                     unpackWord@value 0000  
                                  _EUSART_IsTxReady 0000                                    _CLOCK_Initialize 0000  
                                      ?_I2C1_IsAddr 0000                                        ?_I2C1_IsData 0000  
                                          _LATCbits 010E                                        ?_I2C1_IsNack 0000  
                         ??_I2C1_EVENT_SEND_WR_ADDR 0001                               _I2C1_CallbackRegister 0000  
                                         clear_ram0 0000                                            _PIE1bits 0090  
                                          _PIE2bits 0091                                   _eusartRxLastError 001A  
                                        _I2C1_Close 0000                           __end_of_ADC_SelectChannel 000F  
                                          _PIR1bits 0010                                            _PIR2bits 0011  
                                        _I2C1_Write 0000                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                  SSPA_getTemp@band 0004                                           _vfpfcnvrt 0000  
                                  SSPA_getTemp@sspa 0009                                          _ADCON0bits 009D  
                          ADC_SelectChannel@channel 0001                                         _KAPS_getPos 0000  
                      I2C1_EVENT_NACK@retEventState 0000                                       _I2C1_EVENT_RX 0000  
                                     _I2C1_EVENT_TX 0000                                         _EUSART_Read 0000  
                                        vfpfcnvrt@c 001C                               ?_INTERRUPT_Initialize 0000  
                              __end_of_SSPA_getPOut 0194                                __end_of_SSPA_getTemp 00A9  
                               _I2C1_InterruptClear 0000                                    ?___funcs_on_exit 0000  
                                          _SendNack 0000                                            __Exit@ec 0000  
                              __end_of_SSPA_setMute 002C                                          vfprintf@ap 0021  
                                        vfprintf@fp 001D                            ?_ADC_GetConversionResult 0000  
                                    unpackLong@data 0004                                       _I2C1_Callback 001C  
                                       ??__Umul8_16 0002                                   KAPS_StorePos@kaps 0012  
                                        ?_vfpfcnvrt 000B                                _I2C1_DefaultCallback 0000  
                                   KAPS_GoToIdx@idx 0000                                ?_I2C1_InterruptClear 0000  
                                     _I2C1_NackSend 0000                              ??_ADC_IsConversionDone 0000  
                                     _I2C1_BusReset 0000                                   ??_I2C1_EVENT_IDLE 0000  
                                 ??_I2C1_EVENT_NACK 0000                                            ___xxtofl 0000  
                                 ??_I2C1_EVENT_STOP 0000                       __end_of_I2C1_InterruptsEnable 0004  
                                    ?_I2C1_EVENT_RX 0000                                      ?_I2C1_EVENT_TX 0000  
                                     _I2C1_ErrorGet 0000                                  _EUSART_AutoBaudSet 0000  
                                          __ptext10 0000                                            __ptext11 0000  
                                          __ptext20 0000                                            __ptext12 0000  
                                          __ptext21 0000                                            __ptext13 0000  
                                          __ptext30 0000                                            __ptext22 0000  
                                          __ptext14 0000                                            __ptext31 0000  
                                          __ptext23 0000                                            __ptext15 0000  
                                          __ptext40 0000                                            __ptext32 0000  
                                          __ptext24 0000                                            __ptext16 0000  
                                          __ptext41 0000                                            __ptext33 0000  
                                          __ptext25 0000                                            __ptext17 0000  
                                          __ptext50 0000                                            __ptext42 0000  
                                          __ptext34 0000                                            __ptext26 0000  
                                          __ptext18 0000                                            __ptext51 0000  
                                          __ptext43 0000                                            __ptext35 0000  
                                          __ptext27 0000                                            __ptext19 0000  
                                          __ptext60 0000                                            __ptext52 0000  
                                          __ptext44 0000                                            __ptext36 0000  
                                          __ptext28 0000                                            __ptext53 0000  
                                          __ptext45 0000                                            __ptext37 0000  
                                          __ptext29 0000                                            __ptext70 0000  
                                          __ptext62 0000                                            __ptext54 0000  
                                          __ptext46 0000                                            __ptext38 0000  
                                          __ptext71 0000                                            __ptext63 0000  
                                          __ptext55 0000                                            __ptext47 0000  
                                          __ptext39 0000                                            __ptext80 0000  
                                          __ptext72 0000                                            __ptext64 0000  
                                          __ptext56 0000                                            __ptext48 0000  
                                          __ptext81 0000                                            __ptext73 0000  
                                          __ptext65 0000                                            __ptext57 0000  
                                          __ptext49 0000                                            __ptext90 0000  
                                          __ptext82 0000                                            __ptext74 0000  
                                          __ptext66 0000                                            __ptext58 0000  
                                          __ptext91 0000                                            __ptext83 0000  
                                          __ptext75 0000                                            __ptext67 0000  
                                          __ptext59 0000                                            __ptext92 0000  
                                          __ptext84 0000                                            __ptext76 0000  
                                          __ptext68 0000                                            __ptext93 0000  
                                          __ptext85 0000                                            __ptext77 0000  
                                          __ptext69 0000                                            __ptext94 0000  
                                          __ptext86 0000                                            __ptext78 0000  
                                          __ptext87 0000                                            __ptext79 0000  
                                          __ptext88 0000                                            __ptext89 0000  
                          __end_of_I2C1_IsRxBufFull 0004                                        _SSP1CON1bits 0215  
                                      _SSP1CON2bits 0216                         __end_of_I2C1_RestartDisable 0003  
                                _I2C1_ReceiveEnable 0000                               _EUSART_TransmitEnable 0000  
                                          _packLong 0000                              ?_I2C1_CallbackRegister 0000  
                                    unpackWord@data 0002                                 ?_I2C1_ReceiveEnable 0000  
                                       ?_I2C1_Close 0000                                       _I2C1_StopSend 0000  
                                      ?_getADCValue 0038                                          _RC1STAbits 019D  
                                          int$flags 007E                                            _vfprintf 0000  
                __end_of_INTERRUPT_InterruptManager 0032                          _INTERRUPT_InterruptManager 0000  
       __end_of_EUSART_FramingErrorCallbackRegister 000C               ??_EUSART_FramingErrorCallbackRegister 0002  
              ?_EUSART_FramingErrorCallbackRegister 0000                 _EUSART_FramingErrorCallbackRegister 0000  
                             ?_I2C1_DefaultCallback 0000                                            main@data 0018  
                                         printf@fmt 0025                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0000                    __end_of_I2C1_ErrorInterruptClear 0003  
                             SSPA_getTemp@adc_value 0007                                      ?_I2C1_NackSend 0000  
                                    ?_I2C1_BusReset 0000                                ??_I2C1_ReceiveEnable 0000  
                                    packLong@result 0008                                          _INTCONbits 000B  
                                          exit@code 0002                                        _I2C1_AckSend 0000  
                              _INT_InterruptHandler 0002                                      __pstringtext10 0000  
                                    __pstringtext11 0000                                      __pstringtext12 0000  
                            ??_INTERRUPT_Initialize 0002                                        ??_unpackLong 0005  
                        I2C1_EVENT_RX@retEventState 0001                            ?_ADC_SetInterruptHandler 0000  
                                      ??_unpackWord 0003                                            intlevel1 0000* 
                       __end_of_ADC_StartConversion 0003                                    ??_I2C1_ERROR_ISR 0006  
                           ?_PIN_MANAGER_Initialize 0000                          __end_of_I2C1_RestartEnable 0003  
        __end_of_EUSART_DefaultFramingErrorCallback 0001                ??_EUSART_DefaultFramingErrorCallback 0000  
               ?_EUSART_DefaultFramingErrorCallback 0000                  _EUSART_DefaultFramingErrorCallback 0000  
                   __end_of_ADC_GetConversionResult 0009                                      ?_I2C1_StopSend 0000  
                                  ??_ADC_Initialize 0002                                            printf@ap 002F  
                          ?_INT_SetInterruptHandler 0000                            __end_of_EUSART_IsRxReady 0005  
                                       ??_vfpfcnvrt 000F                                  __end_of_unpackLong 0045  
                          __end_of_CLOCK_Initialize 0008                                  __end_of_unpackWord 000C  
                                     __pstringtext1 0000                                       __pstringtext2 0000  
                                     __pstringtext3 0000                                       __pstringtext4 0000  
                                     __pstringtext5 0000                                       __pstringtext6 0000  
                                     __pstringtext7 0000                                       __pstringtext8 0000  
                                     __pstringtext9 0000                              __Umul8_16@multiplicand 0000  
                                   ??_I2C1_EVENT_RX 0000                                     ??_I2C1_EVENT_TX 0001  
                                 _I2C1_DataTransmit 0000                                          _TX1STAbits 019E  
                                     ___fladd@signs 0010                                  ?_I2C1_DataTransmit 0000  
                               SSPA_getTemp@channel 000A                                   ?_I2C1_DataReceive 0000  
                                EUSART_Write@txData 0000                                       SendNack@error 0006  
                    __end_of_PIN_MANAGER_Initialize 004B                       __end_of_I2C1_StatusFlagsClear 0004  
                                      ___fladd@aexp 0011                                        ___fladd@bexp 0012  
                                ??_I2C1_DataReceive 0000                                __Umul8_16@multiplier 0008  
                        I2C1_EVENT_TX@retEventState 0003                                 ??_I2C1_DataTransmit 0000  
                                 __Umul8_16@product 0004  
